'From Squeak 2.3 beta of Nov 25, 1998 on 5 December 1998 at 10:43:46 pm'!Object subclass: #BalloonEngine	instanceVariableNames: 'workBuffer span bitBlt forms clipRect destOffset externals aaLevel edgeTransform colorTransform deferred postFlushNeeded '	classVariableNames: 'BezierStats BufferCache CacheProtect Counts Debug Times '	poolDictionaries: 'BalloonEngineConstants '	category: 'Balloon-Engine'!BalloonEngine subclass: #BalloonDebugEngine	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Balloon-Engine'!OrientedFillStyle subclass: #BitmapFillStyle	instanceVariableNames: 'form tileFlag '	classVariableNames: ''	poolDictionaries: ''	category: 'Balloon-Fills'!Object subclass: #FlashColorTransform	instanceVariableNames: 'rMul rAdd gMul gAdd bMul bAdd aMul aAdd '	classVariableNames: ''	poolDictionaries: ''	category: 'MM-Flash-Support'!!AbstractSound methodsFor: 'playing' stamp: 'ar 12/5/1998 22:20'!isPlaying	"Return true if the receiver is currently playing"	^ SoundPlayer isPlaying: self! !!BalloonCanvas methodsFor: 'accessing' stamp: 'ar 11/29/1998 13:21'!ensuredEngine	engine ifNil:[		true			ifTrue:[engine _ BalloonEngine new]			ifFalse:[engine _ BalloonDebugEngine new].		engine aaLevel: aaLevel.		engine bitBlt: port.		engine destOffset: origin.		engine clipRect: clipRect.		engine].	engine colorTransform: colorTransform.	engine edgeTransform: transform.	^engine! !!BalloonCanvas methodsFor: 'copying' stamp: 'ar 11/24/1998 22:33'!copy	self flush.	^super copy resetEngine! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:29'!flush	"Force all pending primitives onscreen"	workBuffer ifNil:[^self].	self copyBits.	self release.! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 12/5/1998 22:05'!initialize	externals _ OrderedCollection new: 100.	span _ Bitmap new: 2048.	bitBlt _ nil.	self bitBlt: ((BitBlt toForm: Display) destRect: Display boundingBox; yourself).	forms _ #().	deferred _ false.! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:42'!postFlushIfNeeded	"Force all pending primitives onscreen"	workBuffer ifNil:[^self].	(deferred not or:[postFlushNeeded]) ifTrue:[		self copyBits.		self release].! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:43'!preFlushIfNeeded	"Force all pending primitives onscreen"	workBuffer ifNil:[^self].	self primFlushNeeded ifTrue:[		self copyBits.		self reset].! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:34'!reset	workBuffer ifNil:[workBuffer _ self class allocateOrRecycleBuffer: 10000].	self primInitializeBuffer: workBuffer.	self primSetAALevel: self aaLevel.	self primSetOffset: destOffset.	self primSetClipRect: clipRect.	self primSetEdgeTransform: edgeTransform.	self primSetColorTransform: colorTransform.	forms _ #().! !!BalloonEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:39'!resetIfNeeded	workBuffer ifNil:[self reset].	self primSetEdgeTransform: edgeTransform.	self primSetColorTransform: colorTransform.	self primSetDepth: self primGetDepth + 1.	postFlushNeeded _ false.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:43'!drawBezierShape: points fill: fillStyle borderWidth: borderWidth borderColor: borderFill transform: aTransform	| fills |	self edgeTransform: aTransform.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderFill.	self primAddBezierShape: points		segments: points size		fill: (fills at: 1)		lineWidth: borderWidth		lineFill: (fills at: 2).	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:44'!drawCompressedShape: shape transform: aTransform	| fillIndexList |	self edgeTransform: aTransform.	self resetIfNeeded.	fillIndexList _ self registerFills: shape fillStyles.	self primAddCompressedShape: shape points		segments: shape numSegments		leftFills: shape leftFills		rightFills: shape rightFills		lineWidths: shape lineWidths		lineFills: shape lineFills		fillIndexList: fillIndexList.	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:44'!drawGeneralBezierShape: contours fill: fillStyle borderWidth: borderWidth borderColor: borderFill transform: aTransform	| fills |	self edgeTransform: aTransform.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderFill.	contours do:[:points|		self primAddBezierShape: points			segments: (points size // 3)			fill: (fills at: 1)			lineWidth: borderWidth			lineFill: (fills at: 2)	].	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:44'!drawGeneralPolygon: contours fill: fillStyle borderWidth: borderWidth borderColor: borderFill transform: aTransform	| fills |	self edgeTransform: aTransform.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderFill.	contours do:[:points|		self primAddPolygon: points			segments: points size			fill: (fills at: 1)			lineWidth: borderWidth			lineFill: (fills at: 2)	].	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:45'!drawOval: rect fill: fillStyle borderWidth: borderWidth borderColor: borderColor transform: aMatrix	| fills |	self edgeTransform: aMatrix.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderColor.	self primAddOvalFrom: rect origin 			to: rect corner			fillIndex: (fills at: 1)			borderWidth: borderWidth			borderColor: (fills at: 2).	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:45'!drawPolygon: points fill: fillStyle borderWidth: borderWidth borderColor: borderFill transform: aTransform	| fills |	self edgeTransform: aTransform.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderFill.	self primAddPolygon: points		segments: points size		fill: (fills at: 1)		lineWidth: borderWidth		lineFill: (fills at: 2).	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:45'!drawRectangle: rect fill: fillStyle borderWidth: borderWidth borderColor: borderColor transform: aMatrix	| fills |	self edgeTransform: aMatrix.	self resetIfNeeded.	fills _ self registerFill: fillStyle and: borderColor.	self primAddRectFrom: rect origin 			to: rect corner			fillIndex: (fills at: 1)			borderWidth: borderWidth			borderColor: (fills at: 2).	self postFlushIfNeeded.! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/27/1998 14:37'!registerFill: aFillStyle	"Register the given fill style."	| theForm |	aFillStyle ifNil:[^0].	aFillStyle isSolidFill 		ifTrue:[^aFillStyle pixelValue32].	aFillStyle isGradientFill ifTrue:[		^self primAddGradientFill: aFillStyle pixelRamp			from: aFillStyle origin			along: aFillStyle direction			normal: aFillStyle normal			radial: aFillStyle isRadialFill		].	aFillStyle isBitmapFill ifTrue:[		theForm _ aFillStyle form.		theForm unhibernate.		forms _ forms copyWith: theForm.		^self primAddBitmapFill: theForm				colormap: (theForm colormapIfNeededForDepth: 32)				tile: aFillStyle isTiled				from: aFillStyle origin				along: aFillStyle direction				normal: aFillStyle normal				xIndex: forms size].	^0! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:45'!registerFill: fill1 and: fill2	^self registerFills: (Array with: fill1 with: fill2)! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/25/1998 01:39'!registerFill: aFillStyle transform: aTransform	aFillStyle ifNil:[^0].	aFillStyle isSolidFill 		ifTrue:[^aFillStyle pixelValue32].	aFillStyle isGradientFill ifTrue:[		^self primAddGradientFill: aFillStyle pixelRamp			from: aFillStyle origin			along: aFillStyle direction			normal: aFillStyle normal			radial: aFillStyle isRadialFill			matrix: aTransform.		].	^0! !!BalloonEngine methodsFor: 'drawing' stamp: 'ar 11/26/1998 19:45'!registerFills: fills	| fillIndexList index fillIndex |	"Check if we need to flush the engine.	We do need to do this if any of the fills is a bitmap fill"	(fills contains:[:any| any notNil and:[any isBitmapFill]])		ifTrue:[	self preFlushIfNeeded.				postFlushNeeded _ true].	fillIndexList _ WordArray new: fills size.	index _ 1.	[index <= fills size] whileTrue:[		fillIndex _ self registerFill: (fills at: index).		fillIndex == nil 			ifTrue:[index _ 1] "Need to start over"			ifFalse:[fillIndexList at: index put: fillIndex.					index _ index+1]	].	^fillIndexList! !!BalloonEngine methodsFor: 'copying' stamp: 'ar 11/25/1998 00:45'!canProceedAfter: failureReason	"Check if we can proceed after the failureReason indicated."	| newBuffer |	failureReason = GErrorNeedFlush ifTrue:[		"Need to flush engine before proceeding"		self copyBits.		self reset.		^true].	failureReason = GErrorNoMoreSpace ifTrue:[		"Work buffer is too small"		newBuffer _ workBuffer species new: workBuffer size * 2.		self primCopyBufferFrom: workBuffer to: newBuffer.		workBuffer _ newBuffer.		^true].	"Not handled"	^false! !!BalloonEngine methodsFor: 'copying' stamp: 'ar 11/29/1998 18:22'!copyBits	self copyLoopFaster.! !!BalloonEngine methodsFor: 'accessing' stamp: 'ar 11/25/1998 22:34'!edgeTransform	^edgeTransform! !!BalloonEngine methodsFor: 'accessing' stamp: 'ar 11/25/1998 22:34'!edgeTransform: aTransform	edgeTransform _ aTransform.! !!BalloonEngine methodsFor: 'primitives-access' stamp: 'ar 11/26/1998 19:46'!primFlushNeeded	<primitive:'gePrimitiveNeedsFlush'>	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-access' stamp: 'ar 11/26/1998 19:46'!primGetDepth	<primitive:'gePrimitiveGetDepth'>	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-access' stamp: 'ar 11/26/1998 19:47'!primSetColorTransform: transform	<primitive:'gePrimitiveSetColorTransform'>	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-access' stamp: 'ar 11/26/1998 19:47'!primSetDepth: depth	<primitive:'gePrimitiveSetDepth'>	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-access' stamp: 'ar 11/26/1998 19:47'!primSetEdgeTransform: transform	<primitive:'gePrimitiveSetEdgeTransform'>	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddBezierFrom: start to: end via: via leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	<primitive: 'gePrimitiveAddBezier'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddBezierFrom: start to: end via: via leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddBezierShape: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	<primitive: 'gePrimitiveAddBezierShape'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddBezierShape: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/27/1998 14:27'!primAddBitmapFill: form colormap: cmap tile: tileFlag from: origin along: direction normal: normal xIndex: xIndex	<primitive: 'gePrimitiveAddBitmapFill'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddBitmapFill: form colormap: cmap tile: tileFlag from: origin along: direction normal: normal xIndex: xIndex	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddCompressedShape: points segments: nSegments leftFills: leftFills rightFills: rightFills lineWidths: lineWidths lineFills: lineFills fillIndexList: fillIndexList	<primitive: 'gePrimitiveAddCompressedShape'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddCompressedShape: points segments: nSegments leftFills: leftFills rightFills: rightFills lineWidths: lineWidths lineFills: lineFills fillIndexList: fillIndexList	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddExternalEdge: index initialX: initialX initialY: initialY initialZ: initialZ leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	<primitive: 'gePrimitiveRegisterExternalEdge'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddExternalEdge: index initialX: initialX initialY: initialY initialZ: initialZ leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddExternalFill: index	<primitive: 'gePrimitiveRegisterExternalFill'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddExternalFill: index	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:53'!primAddGradientFill: colorRamp from: origin along: direction normal: normal radial: isRadial	<primitive: 'gePrimitiveAddGradientFill'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddGradientFill: colorRamp 				from: origin 				along: direction 				normal: normal 				radial: isRadial	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:52'!primAddLineFrom: start to: end leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	<primitive: 'gePrimitiveAddLine'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddLineFrom: start to: end leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:51'!primAddOvalFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	<primitive: 'gePrimitiveAddOval'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddOvalFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:52'!primAddPolygon: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	<primitive: 'gePrimitiveAddPolygon'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddPolygon: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	].	^self primitiveFailed! !!BalloonEngine methodsFor: 'primitives-adding' stamp: 'ar 11/26/1998 19:52'!primAddRectFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	<primitive: 'gePrimitiveAddRectWithMatrix'>	(self canProceedAfter: self primGetFailureReason) ifTrue:[		^self primAddRectFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	].	^self primitiveFailed! !!BalloonDebugEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 22:30'!initialize	super initialize.	deferred _ true.! !!BalloonDebugEngine methodsFor: 'initialize' stamp: 'ar 11/25/1998 01:45'!reset	workBuffer _ BalloonBuffer new: 400000.	super reset.! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:04'!primClipRectInto: rect	^BalloonEnginePlugin doPrimitive:'gePrimitiveGetClipRect'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/25/1998 22:29'!primFlushNeeded	"Return true if there are no more entries in AET and GET and the last scan line has been displayed"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveNeedsFlush'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:04'!primGetAALevel	"Set the AA level"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetAALevel'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:04'!primGetBezierStats: statsArray	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetBezierStats'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:04'!primGetClipRect: rect	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetClipRect'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primGetCounts: statsArray	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetCounts'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:55'!primGetDepth	"Set the AA level"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetDepth'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primGetFailureReason	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetFailureReason'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primGetOffset	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetOffset'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primGetTimes: statsArray	^BalloonEnginePlugin doPrimitive: 'gePrimitiveGetTimes'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/25/1998 22:20'!primNeedsFlush	"Return true if there are no more entries in AET and GET and the last scan line has been displayed"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveNeedsFlush'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primSetAALevel: level	"Set the AA level"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetAALevel'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:05'!primSetClipRect: rect	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetClipRect'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:06'!primSetColorTransform: transform	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetColorTransform'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:06'!primSetDepth: depth	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetDepth'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:06'!primSetEdgeTransform: transform	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetEdgeTransform'! !!BalloonDebugEngine methodsFor: 'primitives-access' stamp: 'ar 11/24/1998 21:06'!primSetOffset: point	^BalloonEnginePlugin doPrimitive: 'gePrimitiveSetOffset'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:11'!primAddBezierFrom: start to: end via: via leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddBezier'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:01'!primAddBezierShape: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddBezierShape'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/27/1998 14:27'!primAddBitmapFill: form colormap: cmap tile: tileFlag from: origin along: direction normal: normal xIndex: xIndex	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddBitmapFill'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:01'!primAddCompressedShape: points segments: nSegments leftFills: leftFills rightFills: rightFills lineWidths: lineWidths lineFills: lineFills fillIndexList: fillIndexList	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddCompressedShape'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:02'!primAddExternalEdge: index initialX: initialX initialY: initialY initialZ: initialZ leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	^BalloonEnginePlugin doPrimitive: 'gePrimitiveRegisterExternalEdge'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:02'!primAddExternalFill: index	^BalloonEnginePlugin doPrimitive: 'gePrimitiveRegisterExternalFill'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:02'!primAddGradientFill: colorRamp from: origin along: direction normal: normal radial: isRadial	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddGradientFill'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:16'!primAddLineFrom: start to: end leftFillIndex: leftFillIndex rightFillIndex: rightFillIndex	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddLine'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:03'!primAddOvalFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddOval'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:03'!primAddPolygon: points segments: nSegments fill: fillStyle lineWidth: lineWidth lineFill: lineFill	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddPolygon'! !!BalloonDebugEngine methodsFor: 'primitives-adding' stamp: 'ar 11/24/1998 21:20'!primAddRectFrom: start to: end fillIndex: fillIndex borderWidth: width borderColor: pixelValue32	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddRect'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 20:59'!primAddActiveEdgeTableEntryFrom: edgeEntry	"Add edge entry to the AET."	^BalloonEnginePlugin doPrimitive: 'gePrimitiveAddActiveEdgeEntry'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 20:59'!primChangeActiveEdgeTableEntryFrom: edgeEntry	"Change the entry in the active edge table from edgeEntry"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveChangedActiveEdgeEntry'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 20:59'!primDisplaySpanBuffer	"Display the current scan line if necessary"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveDisplaySpanBuffer'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 20:59'!primFinishedProcessing	"Return true if there are no more entries in AET and GET and the last scan line has been displayed"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveFinishedProcessing'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primInitializeProcessing	"Initialize processing in the GE.	Create the active edge table and sort it."	^BalloonEnginePlugin doPrimitive: 'gePrimitiveInitializeProcessing'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primMergeFill: fillBitmap from: fill	"Merge the filled bitmap into the current output buffer."	^BalloonEnginePlugin doPrimitive: 'gePrimitiveMergeFillFrom'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primNextActiveEdgeEntryInto: edgeEntry	"Store the next entry of the AET at the current y-value in edgeEntry.	Return false if there is no entry, true otherwise."	^BalloonEnginePlugin doPrimitive: 'gePrimitiveNextActiveEdgeEntry'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primNextFillEntryInto: fillEntry	"Store the next fill entry of the active edge table in fillEntry.	Return false if there is no such entry, true otherwise"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveNextFillEntry'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primNextGlobalEdgeEntryInto: edgeEntry	"Store the next entry of the GET at the current y-value in edgeEntry.	Return false if there is no entry, true otherwise."	^BalloonEnginePlugin doPrimitive: 'gePrimitiveNextGlobalEdgeEntry'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primRenderImage: edge with: fill	"Start/Proceed rendering the current scan line"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveRenderImage'! !!BalloonDebugEngine methodsFor: 'primitives-incremental' stamp: 'ar 11/24/1998 21:00'!primRenderScanline: edge with: fill	"Start/Proceed rendering the current scan line"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveRenderScanline'! !!BalloonDebugEngine methodsFor: 'primitives-misc' stamp: 'ar 11/24/1998 20:59'!primCopyBufferFrom: oldBuffer to: newBuffer	"Copy the contents of oldBuffer into the (larger) newBuffer"	^BalloonEnginePlugin doPrimitive: 'gePrimitiveCopyBuffer'! !!BalloonDebugEngine methodsFor: 'primitives-misc' stamp: 'ar 11/24/1998 20:59'!primInitializeBuffer: buffer	^BalloonEnginePlugin doPrimitive: 'gePrimitiveInitializeBuffer'! !!BitmapFillStyle methodsFor: 'accessing' stamp: 'ar 11/27/1998 14:37'!tileFlag	^tileFlag! !!BitmapFillStyle methodsFor: 'accessing' stamp: 'ar 11/27/1998 14:30'!tileFlag: aBoolean	tileFlag _ aBoolean! !!BitmapFillStyle methodsFor: 'testing' stamp: 'ar 11/27/1998 14:37'!isTiled	"Return true if the receiver should be repeated if the fill shape is larger than the form"	^tileFlag == true! !!FlashColorTransform methodsFor: 'composing' stamp: 'ar 11/25/1998 21:34'!composedWithLocal: aColorTransform	| cm |	cm _ self clone.	cm rAdd: self rAdd + (aColorTransform rAdd * self rMul).	cm rMul: self rMul * aColorTransform rMul.	cm gAdd: self gAdd + (aColorTransform gAdd * self gMul).	cm gMul: self gMul * aColorTransform gMul.	cm bAdd: self bAdd + (aColorTransform bAdd * self bMul).	cm bMul: self bMul * aColorTransform bMul.	cm aAdd: self aAdd + (aColorTransform aAdd * self aMul).	cm aMul: self aMul * aColorTransform aMul.	^cm! !!FlashMorphReader methodsFor: 'defining styles' stamp: 'ar 12/5/1998 22:22'!recordBitmapFill: index matrix: bmMatrix id: bitmapID clipped: aBoolean	| fillStyle form |	form _ forms at: bitmapID ifAbsent:[^nil].	fillStyle _ BitmapFillStyle form: form.	fillStyle origin: (bmMatrix localPointToGlobal: 0@0).	fillStyle direction: (bmMatrix localPointToGlobal: form extent x @ 0) - fillStyle origin.	fillStyle normal: (bmMatrix localPointToGlobal: 0 @ form extent y) - fillStyle origin.	fillStyle tileFlag: aBoolean not.	fillStyles at: index put: fillStyle.! !!Form methodsFor: 'copying' stamp: 'ar 11/25/1998 18:33'!asFormOfDepth: d	| newForm |	d = depth ifTrue:[^self].	newForm _ Form extent: self extent depth: d.	(BitBlt toForm: newForm)		colorMap: (self colormapIfNeededForDepth: d);		copy: (self boundingBox)		from: 0@0 in: self		fillColor: nil rule: Form over.	^newForm! !BalloonEngine removeSelector: #primAddCompressedShape:segments:leftFills:rightFills:lineWidths:lineFills:fillIndexList:matrix:!BalloonEngine removeSelector: #primAddRectFrom:to:fillIndex:borderWidth:borderColor:matrix:!BalloonEngine removeSelector: #doAddGradientFill:from:along:normal:radial:matrix:!BalloonEngine removeSelector: #primAddBezierFrom:to:via:leftFillIndex:rightFillIndex:matrix:!BalloonEngine removeSelector: #primAddGradientFill:from:along:normal:radial:matrix:!BalloonEngine removeSelector: #primAddOvalFrom:to:fillIndex:borderWidth:borderColor:matrix:!BalloonEngine removeSelector: #primAddPolygon:segments:fill:lineWidth:lineFill:matrix:!BalloonEngine removeSelector: #primAddBezierShape:segments:fill:lineWidth:lineFill:matrix:!BalloonEngine removeSelector: #primAddLineFrom:to:leftFillIndex:rightFillIndex:matrix:!