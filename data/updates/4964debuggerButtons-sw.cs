'From Squeak3.3alpha of 18 January 2002 [latest update: #4962] on 23 August 2002 at 1:17:23 am'!"Change Set:		debuggerButtons-swDate:			22 August 2002Author:			Scott WallaceMakes the conventional code-tool buttons (senders, implementors, versions, inst vars, etc.) available in a debugger, if the #optionalButtons preference is true.  This is independent of the debugger-specific button pane (Proceed, Resetart, Send, etc.), which is always shown and was never governed by the optionalButtons preference anyway.This change does not affect mvc debuggers."!!Debugger methodsFor: 'initialize' stamp: 'sw 8/21/2002 18:41'!customButtonSpecs	"Answer an array of elements of the form wording, selector, help-message, that characterize the custom button row of a debugger."	| list |	list _ #(('Proceed'	proceed				'close the debugger and proceed.')		('Restart'		restart				'reset this context to its start.')		('Send'			send				'step into message sends')		('Step'			doStep				'step over message sends')		('Through'		stepIntoBlock		'step into a block')		('Full Stack'		fullStack			'show full stack')		('Where'		where				'select current pc range')).	Preferences restartAlsoProceeds ifTrue:		[list _ list collect: [:each |			each second == #restart				ifTrue: [each copy at: 3 put: 'proceed from the beginning of this context.'; yourself]				ifFalse: [each]]].	^ list! !!Debugger methodsFor: 'initialize' stamp: 'sw 8/21/2002 18:40'!customButtonRow	"Answer a button pane affording the user one-touch access to certain functions; the pane is given the formal name 'customButtonPane' by which it can be retrieved by code wishing to send messages to widgets residing on the pane"	| aRow aButton aLabel |	aRow _ AlignmentMorph newRow beSticky.	aRow setNameTo: 'customButtonPane'.	aRow clipSubmorphs: true.	aButton _ SimpleButtonMorph new target: self.	aButton color: Color lightRed; borderWidth: 1; borderColor: Color red darker.	aRow addTransparentSpacerOfSize: (5@0).	self customButtonSpecs do:		[:tuple |			aButton _ PluggableButtonMorph				on: self				getState: nil				action: tuple second.			aButton				hResizing: #spaceFill;				vResizing: #spaceFill;				useRoundedCorners;				onColor: Color transparent offColor: Color transparent.			(#(proceed restart send doStep stepIntoBlock fullStack where) includes: tuple second)				ifTrue:					[aButton askBeforeChanging: true].			aLabel _ Preferences abbreviatedBrowserButtons 				ifTrue: [self abbreviatedWordingFor: tuple second]				ifFalse: [nil].			aButton label: (aLabel ifNil: [tuple first asString]).			tuple size > 2 ifTrue: [aButton setBalloonText: tuple third].			Preferences alternativeWindowLook 				ifTrue:[aButton borderWidth: 2; borderColor: #raised].			aRow addMorphBack: aButton.			aRow addTransparentSpacerOfSize: (3 @ 0)].	^ aRow! !!Debugger methodsFor: 'initialize' stamp: 'sw 8/23/2002 00:23'!optionalButtonPairs	"Actually, return triples.  In mvc (until someone deals with this) only the custom debugger-specific buttons are shown, but in morphic, the standard code-tool buttons are provided in addition to the custom buttons"	^ Smalltalk isMorphic		ifFalse:			[self customButtonSpecs]		ifTrue:			[super optionalButtonPairs]! !!Debugger methodsFor: 'controls' stamp: 'sw 8/23/2002 00:50'!addOptionalButtonsTo: window at: fractions plus: verticalOffset	"Add button panes to the window.  A row of custom debugger-specific buttons (Proceed, Restart, etc.) is always added, and if optionalButtons is in force, then the standard code-tool buttons are also added.  Answer the verticalOffset plus the height added."	| delta buttons divider anOffset |	anOffset _ Preferences optionalButtons		ifTrue:			[super addOptionalButtonsTo: window at: fractions plus: verticalOffset]		ifFalse:			[verticalOffset].	delta _ self defaultButtonPaneHeight.	buttons _ self customButtonRow.	buttons	 color: (Display depth <= 8 ifTrue: [Color transparent] ifFalse: [Color gray alpha: 0.2]);		borderWidth: 0.	Preferences alternativeWindowLook ifTrue:		[buttons color: Color transparent.		buttons submorphsDo:[:m | m borderWidth: 2; borderColor: #raised]].	divider _ BorderedSubpaneDividerMorph forBottomEdge.	Preferences alternativeWindowLook ifTrue:		[divider extent: 4@4; color: Color transparent; borderColor: #raised; borderWidth: 2].	window 		addMorph: buttons		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@anOffset corner: 0@(anOffset + delta - 1))).	window 		addMorph: divider		fullFrame: (LayoutFrame 				fractions: fractions 				offsets: (0@(anOffset + delta - 1) corner: 0@(anOffset + delta))).	^ anOffset + delta! !