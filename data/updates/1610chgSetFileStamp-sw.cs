'From Squeak2.6 of 11 October 1999 [latest update: #1608] on 13 November 1999 at 11:23:45 pm'!"Change Set:		chgSetFileStamp-swDate:			15 November 1999Author:			Scott WallaceAdds two new preferences to govern the form of filename to be used when filing out change sets.If preference 'changeSetVersionNumbers' is true, then filenames of the form	myFileout.1.cs	myFileout.2.cswill be used (depending on which names are already present in the default directory).If 'changeSetVersionNumbers' is false, then filename extensions that are functions of the current date and time are used, as formerly, but now changed so that all potentially 2-digit fields (day-of-month, and hour) are assured to be 2-digits long, by prefixing them with a leading zero if necessary.  In this case, a further preference, 'twentyFourHourFileStamps', is consulted to determine the precise form of timestamp -- if twentyFourHourFileStamps is true, then extensions used are of the form     15Nov1508  (for 3:08 pm)whereas if twentyFourHourFileStamps is false, then extensions used are of the form     15Nov0308pm (for 3:08 pm)"!!ChangeSet methodsFor: 'fileIn/Out' stamp: 'sw 11/13/1999 22:42'!fileOut	"File out the receiver, to a file whose name is a function of the change-set name and either of the date & time or chosen to have a unique numeric tag, depending on the preference 'sequentialChangeSetFileNames'"	| file slips nameToUse |	self checkForConversionMethods.	nameToUse _ Preferences changeSetVersionNumbers		ifTrue:			[FileDirectory default nextNameFor: self name extension: 'cs']		ifFalse:			[(self name, FileDirectory dot, Utilities dateTimeSuffix, 				FileDirectory dot, 'cs') asFileName].	Cursor write showWhile:		[file _ FileStream newFileNamed: nameToUse.		file header; timeStamp.		self fileOutPreambleOn: file.		self fileOutOn: file.		self fileOutPostscriptOn: file.		file trailer; close].	DeepCopier new checkVariables.	Preferences suppressCheckForSlips ifTrue: [^ self].	slips _ self checkForSlips.	(slips size > 0 and: [self confirm: 'Methods in this fileOut have haltsor references to the Transcriptor other ''slips'' in them.Would you like to browse them?'])		ifTrue: [Smalltalk browseMessageList: slips							name: 'Possible slips in ', name]! !!Integer methodsFor: 'printing' stamp: 'sw 11/13/1999 23:00'!asTwoCharacterString	"Answer a two-character string representing the receiver, with leading zero if required.  Intended for use with integers in the range 0 to 99, but plausible replies given for other values too"	^ (self >= 0 and: [self < 10])		ifTrue:	['0', self printString]		ifFalse:	[self printString copyFrom: 1 to: 2]"2 asTwoCharacterString11 asTwoCharacterString1943 asTwoCharacterString0 asTwoCharacterString-2 asTwoCharacterString-234 asTwoCharacterString"! !!Preferences class methodsFor: 'help' stamp: 'sw 11/13/1999 22:49'!initHelpMsgsC	"Automatically called whenever you call   	Preferences initializeHelpMessages		or	Preferences callHelpMessageInitializersby virtue of its being in the 'help' category of Preferences class"	#(	(allowMVCprojects			'If true, the open... menu will offer you the chance to open an mvc project.')		(autoAccessors			'If true, an attempt to call a message which is not understood by an object but whose selector is the same as an inst var of the object will result in automatic compilation of an accessor method for that object''s class')		(caseSensitiveFinds			'If true, then the "find" command in text will always make its searches in a case-sensitive fashion')		(changeSetVersionNumbers			'If true, version-number extensions will be used when constructing names for change-set fileouts.  If false, timestamp extensions are used.')		(colorWhenPrettyPrinting			'If true, then when browseWithPrettyPrint is in effect, the pretty-printing will be presented in color')		(compressFlashImages			'If true, flash images will automatically be reduced to 8-bit color depth upon being read')		(conversionMethodsAtFileOut			'Governs whether at fileout time you should be prompted to define conversion methods where deemed appropriate.')		(extractFlashInHighQuality			'Whether flash graphics should be extracted in high quality.')		(extractFlashInHighestQuality			'Whether flash graphics should be extracted in highest possible quality.')		(preserveTrash			'Whether morphs dismissed via halo or dragged into the Trash should be preserved in the TrashCan for possible future retrieval.  If false, they are not preserved.')		(smartUpdating			'If true, then morphic tools such as browsers and inspectors will keep their contents up to date automatically, so that if something changes anywhere, the change will be reflected everywhere.')		(twentyFourHourFileStamps			'If #changeSetVersionNumbers is false, this preference determines whether the date/time suffix used with changeset fileouts is based on a 24-hr clock or a 12-hr clock.')			) do:		[:pair | HelpDictionary at: pair first put: 			(pair first, ':', pair last)]! !!Preferences class methodsFor: 'standard preferences' stamp: 'programmatic 11/13/1999 22:52'!changeSetVersionNumbers	^ self valueOfFlag: #changeSetVersionNumbers! !!Preferences class methodsFor: 'standard preferences' stamp: 'programmatic 11/13/1999 22:52'!twentyFourHourFileStamps	^ self valueOfFlag: #twentyFourHourFileStamps! !!Preferences class methodsFor: 'initial values' stamp: 'sw 11/13/1999 22:45'!initialValuesA	"Another lot of initial values for prefs.  Simply placing methods of this sort here will assure that the initial values provided are ascribed to the preference when prefs are initialized"	^#(	(conversionMethodsAtFileOut			false)		(menuColorFromWorld				false)		(viewersInFlaps						true)		(oneViewerFlapAtATime				true)		(optionalMorphicButtons				false)		(preserveTrash						true)		(caseSensitiveFinds					false)		(smartUpdating						true)		(colorWhenPrettyPrinting			false)		(changeSetVersionNumbers			true)		(twentyFourHourFileStamps			true) )! !!Time methodsFor: 'printing' stamp: 'sw 11/13/1999 00:23'!hhmm24	| aString |	"Return a string of the form 1123 (for 11:23 am), 2154 (for 9:54 pm), of exactly 4 digits"	aString _ String streamContents: [:aStream | self print24: true showSeconds: false on: aStream].	^ aString copyWithout: $:	"Time now hhmm24"! !!Utilities class methodsFor: 'identification' stamp: 'sw 11/13/1999 22:45'!dateTimeSuffix	"Answer a string which indicates the date and time, intended for use in building fileout filenames, etc."	"Utilities dateTimeSuffix"	^ Preferences twentyFourHourFileStamps		ifFalse:			[self monthDayTimeStringFrom: Time primSecondsClock]		ifTrue:			[self monthDayTime24StringFrom: Time primSecondsClock]! !!Utilities class methodsFor: 'identification' stamp: 'sw 11/13/1999 23:03'!monthDayTime24StringFrom: aSecondCount	| aDate aTime |	"From the date/time represented by aSecondCount, produce a string which indicates the date and time in the compact form             ddMMMhhmm		where dd is a two-digit day-of-month, MMM is the alpha month abbreviation and hhmm is the time on a 24-hr clock.          Utilities monthDayTime24StringFrom: Time primSecondsClock"	aDate _ Date fromSeconds: aSecondCount.	aTime _ Time fromSeconds: aSecondCount \\ 86400.	^ (aDate dayOfMonth asTwoCharacterString), 		(aDate monthName copyFrom: 1 to: 3), 		(aTime hhmm24)! !!Utilities class methodsFor: 'identification' stamp: 'sw 11/13/1999 23:03'!monthDayTimeStringFrom: aSecondCount	| aDate aTime |	"From the date/time represented by aSecondCount, produce a string which indicates the date and time in the form:		ddMMMhhmmPP	  where:							dd is a two-digit day-of-month,							MMM is the alpha month abbreviation,							hhmm is the time,							PP is either am or pm          Utilities monthDayTimeStringFrom: Time primSecondsClock"	aDate _ Date fromSeconds: aSecondCount.	aTime _ Time fromSeconds: aSecondCount \\ 86400.	^ (aDate dayOfMonth asTwoCharacterString), 		(aDate monthName copyFrom: 1 to: 3), 		((aTime hours \\ 12) asTwoCharacterString), 		(aTime minutes asTwoCharacterString),		(aTime hours > 12 ifTrue: ['pm'] ifFalse: ['am'])! !Integer removeSelector: #asStringOfAtLeastTwoCharacters!"Postscript:"Preferences initializeAddedPreferences.Preferences initializeHelpMessages.!