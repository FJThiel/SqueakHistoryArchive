'From Squeak 2.3 of January 14, 1999 on 1 February 1999 at 9:37:40 pm'!"Change Set:		IntegerTimesFix-diDate:			1 February 1999Author:			Dan IngallsRemoves a couple of superfluous checks in integer arithmetic, thereby restoring proper coercion in mixed arithmetic with collections.0 * #(1 2 3) --> (0 0 0 )Pointed out by Stan Heckman."!!Integer methodsFor: 'private' stamp: 'di 2/1/1999 21:28'!digitMultiply: arg neg: ng	| prod prodLen carry digit k ab |	(arg digitLength = 1 and: [(arg digitAt: 1) = 0]) ifTrue: [^ 0].	(self digitLength = 1 and: [(self digitAt: 1) = 0]) ifTrue: [^ 0].	prodLen _ self digitLength + arg digitLength.	prod _ Integer new: prodLen neg: ng.	"prod starts out all zero"	1 to: self digitLength do: 		[:i | 		(digit _ self digitAt: i) ~= 0			ifTrue: 				[k _ i.				carry _ 0.				"Loop invariant: 0<=carry<=0377, k=i+j-1"				1 to: arg digitLength do: 					[:j | 					ab _ ((arg digitAt: j) * digit) + carry							+ (prod digitAt: k).					carry _ ab bitShift: -8.					prod digitAt: k put: (ab bitAnd: 255).					k _ k + 1].				prod digitAt: k put: carry]].	^ prod normalize! !!SmallInteger methodsFor: 'arithmetic' stamp: 'di 2/1/1999 21:29'!* aNumber 	"Primitive. Multiply the receiver by the argument and answer with the	result if it is a SmallInteger. Fail if the argument or the result is not a	SmallInteger. Essential. No Lookup. See Object documentation whatIsAPrimitive."	<primitive: 9>	^ super * aNumber! !!SmallInteger methodsFor: 'arithmetic' stamp: 'di 2/1/1999 21:31'!+ aNumber 	"Primitive. Add the receiver to the argument and answer with the result	if it is a SmallInteger. Fail if the argument or the result is not a	SmallInteger  Essential  No Lookup. See Object documentation whatIsAPrimitive."	<primitive: 1>	^ super + aNumber! !