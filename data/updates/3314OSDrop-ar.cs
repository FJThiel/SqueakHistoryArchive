'From Squeak2.9alpha of 13 June 2000 [latest update: #3379] on 2 February 2001 at 1:02:11 pm'!"Change Set:		OSDrop-arDate:			10 January 2001Author:			Andreas RaabBasic support for dropping files from the OS. Requires two platform specific functions (retrieving the name and the file handle of the dropped file) and a platform specific mechanism for generating the drop event when a (set of) files has been dropped."!InterpreterPlugin subclass: #DropPlugin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'VMConstruction-Plugins'!!DropPlugin methodsFor: 'initialize' stamp: 'ar 1/10/2001 19:57'!initialiseModule	self export: true.	^self cCode: 'dropInit()' inSmalltalk:[true]! !!DropPlugin methodsFor: 'initialize' stamp: 'ar 1/10/2001 19:57'!shutdownModule	self export: true.	^self cCode: 'dropShutdown()' inSmalltalk:[true]! !!DropPlugin methodsFor: 'primitives' stamp: 'ar 1/10/2001 20:46'!primitiveDropRequestFileHandle	"Note: File handle creation needs to be handled by specific support code explicitly bypassing the plugin file sand box."	| dropIndex handleOop |	self export: true.	self inline: false.	interpreterProxy methodArgumentCount = 1 		ifFalse:[^interpreterProxy primitiveFail].	dropIndex _ interpreterProxy stackIntegerValue: 0.	handleOop _ self dropRequestFileHandle: dropIndex.	"dropRequestFileHandle needs to return the actual oop returned"	interpreterProxy failed ifFalse:[		interpreterProxy pop: 2.		interpreterProxy push: handleOop.	].! !!DropPlugin methodsFor: 'primitives' stamp: 'ar 1/10/2001 20:46'!primitiveDropRequestFileName	"Note: File handle creation needs to be handled by specific support code explicitly bypassing the plugin file sand box."	| dropIndex dropName nameLength nameOop namePtr |	self export: true.	self inline: false.	self var: #dropName type: 'char *'.	self var: #namePtr type: 'char *'.	interpreterProxy methodArgumentCount = 1 		ifFalse:[^interpreterProxy primitiveFail].	dropIndex _ interpreterProxy stackIntegerValue: 0.	dropName _ self dropRequestFileName: dropIndex.	"dropRequestFileName returns name or NULL on error"	dropName == nil 		ifTrue:[^interpreterProxy primitiveFail].	nameLength _ self strlen: dropName.	nameOop _ interpreterProxy instantiateClass: interpreterProxy classString indexableSize: nameLength.	namePtr _ interpreterProxy firstIndexableField: nameOop.	0 to: nameLength-1 do:[:i| namePtr at: i put: (dropName at: i)].	interpreterProxy pop: 2.	interpreterProxy push: nameOop.! !!DropPlugin class methodsFor: 'translation' stamp: 'ar 1/10/2001 20:02'!headerFile^'/* drop support primitives *//* module initialization/shutdown */int dropInit(void);int dropShutdown(void);char* dropRequestFileName(int dropIndex); /* return name of file or NULL if error *//* note: dropRequestFileHandle needs to bypass plugin security checks when implemented */int dropRequestFileHandle(int dropIndex); /* return READ-ONLY file handle OOP or nilObject if error */'! !!EventSensor class methodsFor: 'class initialization' stamp: 'ar 1/30/2001 19:41'!initializeEventSensorConstants	"EventSensor initialize"	Smalltalk declare: #EventSensorConstants from: Undeclared.	EventSensorConstants == nil ifTrue:[EventSensorConstants _ Dictionary new].	#(		(RedButtonBit 4)		(BlueButtonBit 2)		(YellowButtonBit 1)		(ShiftKeyBit 1)		(CtrlKeyBit 2)		(OptionKeyBit 4)		(CommandKeyBit 8)		"Types of events"		(EventTypeNone 0)		(EventTypeMouse 1)		(EventTypeKeyboard 2)		(EventTypeDragDropFiles 3)		"Press codes for keyboard events"		(EventKeyChar 0)		(EventKeyDown 1)		(EventKeyUp 2)	) do:[:spec|		EventSensorConstants declare: spec first from: Undeclared.		EventSensorConstants at: spec first put: spec last.	].! !!FileStream class methodsFor: 'dnd requests' stamp: 'ar 1/10/2001 19:41'!requestDropStream: dropIndex	"Request a read-only stream for some file that was dropped onto Squeak"	^self concreteStream new requestDropStream: dropIndex.! !!StandardFileStream methodsFor: 'dnd requests' stamp: 'ar 1/10/2001 20:01'!primDropRequestFileHandle: dropIndex	"Primitive. Return the (read-only) file handle for some file that was just dropped onto Squeak.	Fail if dropIndex is out of range or the primitive is not supported."	<primitive: 'primitiveDropRequestFileHandle' module:'DropPlugin'>	^nil! !!StandardFileStream methodsFor: 'dnd requests' stamp: 'ar 1/10/2001 20:01'!primDropRequestFileName: dropIndex	"Primitive. Return the file name for some file that was just dropped onto Squeak.	Fail if dropIndex is out of range or the primitive is not supported."	<primitive: 'primitiveDropRequestFileName' module:'DropPlugin'>	^nil! !!StandardFileStream methodsFor: 'dnd requests' stamp: 'ar 1/10/2001 19:41'!requestDropStream: dropIndex	"Return a read-only stream for some file the user has just dropped onto Squeak."	name _ self primDropRequestFileName: dropIndex.	fileID _ self primDropRequestFileHandle: dropIndex.	fileID == nil ifTrue:[^nil].	self register.	rwmode _ false.	buffer1 _ String new: 1.! !"Postscript:Re-initialize event sensor constants."EventSensor initializeEventSensorConstants.!