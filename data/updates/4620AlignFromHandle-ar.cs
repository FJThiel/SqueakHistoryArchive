'From Squeak3.2alpha of 2 October 2001 [latest update: #4614] on 17 December 2001 at 11:49:27 pm'!"Change Set:		AlignFromHandle-arDate:			17 December 2001Author:			Andreas RaabFix alignment changes from handle."!!Text methodsFor: 'emphasis' stamp: 'ar 12/17/2001 23:48'!alignmentAt: characterIndex ifAbsent: aBlock	| attributes emph |	self size = 0 ifTrue: [^aBlock value].	emph _ nil.	attributes _ runs at: characterIndex.	attributes do:[:att | (att isKindOf: TextAlignment) ifTrue:[emph _ att]].	^ emph ifNil: aBlock ifNotNil:[emph alignment]! !!TextMorphEditor methodsFor: 'attributes' stamp: 'ar 12/17/2001 23:48'!changeEmphasisOrAlignment	| aList reply  code align menuList |	self flag: #arNote. "Move this up once we get rid of MVC"	aList _ #(plain bold italic narrow underlined struckOut leftFlush centered rightFlush justified).		align _ paragraph text alignmentAt: startBlock stringIndex 		ifAbsent:[paragraph textStyle alignment].	code _ paragraph text emphasisAt: startBlock stringIndex.	menuList _ WriteStream on: Array new.	menuList nextPut: (code = 0 ifTrue:['<on>plain'] ifFalse:['<off>plain']).	menuList nextPutAll: (#(bold italic underlined struckOut) collect:[:emph|		(code anyMask: (TextEmphasis perform: emph) emphasisCode)			ifTrue:['<on>', emph]			ifFalse:['<off>',emph]]).	((paragraph text attributesAt: startBlock stringIndex forStyle: paragraph textStyle)		anySatisfy:[:attr| attr isKern and:[attr kern < 0]]) 			ifTrue:[menuList nextPut:'<on>narrow']			ifFalse:[menuList nextPut:'<off>narrow'].	menuList nextPutAll: (#(leftFlush centered rightFlush justified) collectWithIndex:[:type :i|		align = (i-1)			ifTrue:['<on>',type]			ifFalse:['<off>',type]]).	aList _ #(plain bold italic underlined struckOut narrow leftFlush centered rightFlush justified).	reply _ (SelectionMenu labelList: menuList contents lines: #(1 6) selections: aList) startUp.	reply ~~ nil ifTrue:		[(#(leftFlush centered rightFlush justified) includes: reply)			ifTrue:				[self setAlignment: reply.				paragraph composeAll.				self recomputeInterval]			ifFalse:				[self setEmphasis: reply.				paragraph composeAll.				self recomputeSelection.				self mvcRedisplay]].	^ true! !