'From Squeak2.9alpha of 12 June 2000 [latest update: #2457] on 18 July 2000 at 11:44:06 am'!"Change Set:		TelemorphicFixesDate:			18 July 2000Author:			Andreas RaabTwo network related fixes for telemorphic.#1: Set TCP_NODELAY for outgoing transmissions (if supported)#2: Handle 'connection refused by host' in a more graceful manner."!!HandMorph methodsFor: 'remote morphic' stamp: 'ar 7/18/2000 11:41'!cleanupDeadConnections	"Clean up any remote connections that have been disconnected or become invalid."	| liveConnections sock |	liveConnections _ OrderedCollection new.	remoteConnections do: [:triple |		sock _ triple first.		sock isConnected			ifTrue: [liveConnections add: triple]			ifFalse: [				(triple at: 2) = #opening					ifTrue: [						(triple first isWaitingForConnection) ifFalse:[							Transcript show: 'trying connection again...'; cr.							sock destroy.							sock _ Socket new.							sock connectTo: (triple at: 3) port: 54323.							triple at: 1 put: sock].						liveConnections add: triple]					ifFalse: [						sock isUnconnectedOrInvalid							ifTrue: [triple first destroy]							ifFalse: [liveConnections add: triple]]]].  "closing"	remoteConnections _ liveConnections.! !!HandMorph methodsFor: 'remote morphic' stamp: 'ar 7/18/2000 11:39'!readyToTransmit	"Return true if all connections are ready to send."	remoteConnections do: [:triple | 		(triple second == #connected and:[(triple first) sendDone not]) ifTrue: [^ false]].	^ true! !!HandMorph methodsFor: 'remote morphic' stamp: 'ar 7/18/2000 11:38'!transmitEvent: aMorphicEvent	"Transmit the given event to all remote connections."	| sock status firstEvt |	lastEventTransmitted = aMorphicEvent ifTrue: [^ self].	transmitBuffer ifNil: [		transmitBuffer _ WriteStream on: (String new: 10000)].	transmitBuffer nextPutAll: aMorphicEvent storeString; cr.	lastEventTransmitted _ aMorphicEvent.	self readyToTransmit ifFalse: [^ self].	self cleanupDeadConnections.	remoteConnections do: [:triple |		sock _ triple first.		status _ triple at: 2.		sock isConnected			ifTrue: [				status = #opening ifTrue: [					"connection established; disable TCP delays on sends"					sock setOption: 'TCP_NODELAY' value: true.					"send worldExtent as first event"					firstEvt _ MorphicEvent newWorldExtent: self worldBounds extent.					sock sendData: firstEvt storeString, (String with: Character cr).					Transcript						show: 'Connection established with remote WorldMorph at ';						show: (NetNameResolver stringFromAddress: sock remoteAddress); cr.					triple at: 2 put: #connected].				sock sendData: transmitBuffer contents]			ifFalse: [				status = #connected ifTrue: [					"other end has closed; close our end"					Transcript						show: 'Closing connection with remote WorldMorph at ';						show: (NetNameResolver stringFromAddress: sock remoteAddress); cr.					sock close.					triple at: 2 put: #closing]]].	transmitBuffer reset.! !!Socket methodsFor: 'primitives' stamp: 'ar 7/18/2000 11:42'!primSocket: socketID setOption: aString value: aStringValue	"Set some option information on this socket. Refer to the UNIX 	man pages for valid SO, TCP, IP, UDP options. In case of doubt	refer to the source code.	TCP_NODELAY, SO_KEEPALIVE are valid options for example	returns an array containing the error code and the negotiated value"	<primitive: 'primitiveSocketSetOptions' module: 'SocketPlugin'>	^nil! !