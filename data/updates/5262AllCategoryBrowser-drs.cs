'From Squeak3.2 of 11 July 2002 [latest update: #4956] on 29 January 2003 at 2:25:30 pm'!"Change Set:		AllCategoryBrowser-drsDate:			29 January 2003Author:			Dean SwanModifies Browser behavior so that when a a class is selected, the '-- all --' category is not selected, but all methods are shown and the class template is shown in the text area.  If '-- all --' is selected, the method template is shown in the text area instead, so that new methods can be entered."!!Browser methodsFor: 'accessing' stamp: 'drs 1/6/2003 16:11'!contentsSelection	"Return the interval of text in the code pane to select when I set the pane's contents"	messageCategoryListIndex > 0 & (messageListIndex = 0)		ifTrue: [^ 1 to: 500]	"entire empty method template"		ifFalse: [^ 1 to: 0]  "null selection"! !!Browser methodsFor: 'class list' stamp: 'drs 1/5/2003 20:14'!classListIndex: anInteger 	"Set anInteger to be the index of the current class selection."	| className |	classListIndex _ anInteger.	self setClassOrganizer.	messageCategoryListIndex _ 0.	messageListIndex _ 0.	self classCommentIndicated		ifTrue: []		ifFalse: [editSelection _ anInteger = 0					ifTrue: [metaClassIndicated | (systemCategoryListIndex == 0)						ifTrue: [#none]						ifFalse: [#newClass]]					ifFalse: [#editClass]].	contents _ nil.	self selectedClass isNil		ifFalse: [className _ self selectedClass name.					(RecentClasses includes: className)				ifTrue: [RecentClasses remove: className].			RecentClasses addFirst: className.			RecentClasses size > 16				ifTrue: [RecentClasses removeLast]].	self changed: #classSelectionChanged.	self changed: #classListIndex.	"update my selection"	self changed: #messageCategoryList.	self changed: #messageList.	self changed: #relabel.	self contentsChanged! !!Browser methodsFor: 'code pane' stamp: 'drs 1/29/2003 14:13'!compileMessage: aText notifying: aController	"Compile the code that was accepted by the user, placing the compiled method into an appropriate message category.  Return true if the compilation succeeded, else false."	| fallBackCategoryIndex fallBackMethodIndex originalSelectorName result |	self selectedMessageCategoryName == nil		ifTrue:			[ self selectOriginalCategoryForCurrentMethod ].	self selectedMessageCategoryName asSymbol = ClassOrganizer allCategory		ifTrue:			[ "User tried to save a method while the ALL category was selected"			fallBackCategoryIndex _ messageCategoryListIndex.			fallBackMethodIndex _ messageListIndex.			editSelection == #newMessage				ifTrue:					[ "Select the 'as yet unclassified' category"					messageCategoryListIndex _ 0.					(result _ self defineMessageFrom: aText notifying: aController)						ifNil:							["Compilation failure:  reselect the original category & method"							messageCategoryListIndex _ fallBackCategoryIndex.							messageListIndex _ fallBackMethodIndex]						ifNotNil:							[self setSelector: result]]				ifFalse:					[originalSelectorName _ self selectedMessageName.					self setOriginalCategoryIndexForCurrentMethod.					messageListIndex _ fallBackMethodIndex _ self messageList indexOf: originalSelectorName.								(result _ self defineMessageFrom: aText notifying: aController)						ifNotNil:							[self setSelector: result]						ifNil:							[ "Compilation failure:  reselect the original category & method"							messageCategoryListIndex _ fallBackCategoryIndex.							messageListIndex _ fallBackMethodIndex.							^ result notNil]].			self changed: #messageCategoryList.			^ result notNil]		ifFalse:			[ "User tried to save a method while the ALL category was NOT selected"			^ (self defineMessageFrom: aText notifying: aController) notNil]! !!Browser methodsFor: 'message category list' stamp: 'drs 1/5/2003 19:12'!messageCategoryListIndex: anInteger 	"Set the selected message category to be the one indexed by anInteger."	messageCategoryListIndex _ anInteger.	messageListIndex _ 0.	editSelection _ 		anInteger <= 0			ifTrue: [#editClass]			ifFalse: [#newMessage].	contents _ nil.	self changed: #messageCategorySelectionChanged.	self changed: #messageCategoryListIndex.	"update my selection"	self changed: #messageList.	self contentsChanged! !!Browser methodsFor: 'message list' stamp: 'drs 1/1/2003 23:33'!messageList	"Answer an Array of the message selectors of the currently selected message category, provided that the messageCategoryListIndex is in proper range.  Otherwise, answer an empty Array  If messageCategoryListIndex is found to be larger than the number of categories (it happens!!), it is reset to zero."	| sel |	(sel _ self messageCategoryListSelection) ifNil: 		[			^ self classOrMetaClassOrganizer				ifNil:		[Array new]				ifNotNil:	[self classOrMetaClassOrganizer allMethodSelectors]			"^ Array new"		].	^ sel = ClassOrganizer allCategory		ifTrue: 			[self classOrMetaClassOrganizer				ifNil:		[Array new]				ifNotNil:	[self classOrMetaClassOrganizer allMethodSelectors]]		ifFalse:			[(self classOrMetaClassOrganizer listAtCategoryNumber: messageCategoryListIndex - 1)				ifNil: [messageCategoryListIndex _ 0.  Array new]]! !!Browser methodsFor: 'metaclass' stamp: 'drs 1/6/2003 21:25'!metaClassIndicated: trueOrFalse 	"Indicate whether browsing instance or class messages."	metaClassIndicated _ trueOrFalse.	self setClassOrganizer.	systemCategoryListIndex > 0 ifTrue:		[editSelection _ classListIndex = 0			ifTrue: [metaClassIndicated				ifTrue: [#none]				ifFalse: [#newClass]]			ifFalse: [#editClass]].	messageCategoryListIndex _ 0.	messageListIndex _ 0.	contents _ nil.	self changed: #classSelectionChanged.	self changed: #messageCategoryList.	self changed: #messageList.	self changed: #contents.	self decorateButtons! !