'From Squeak2.9alpha of 5 August 2000 [latest update: #3320] on 29 January 2001 at 1:44:39 am'!"Change Set:		chgSetMenusStick-swDate:			29 January 2001Author:			Scott WallaceAllows the three list-pane menus in change sorters to 'stay up' (morphic only) -- very handy if you are doing extensive refactoring."!!ChangeSorter methodsFor: 'creation' stamp: 'sw 1/28/2001 20:26'!openAsMorphIn: window rect: rect	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0."	| csListHeight msgListHeight baseline csMsgListHeight annoHeight |	contents _ ''.	csListHeight _ 0.25.	msgListHeight _ 0.25.	annoHeight _ 0.05.	csMsgListHeight _ csListHeight + msgListHeight.	self addDependent: window.		"so it will get changed: #relabel"	window addMorph: ((PluggableListMorphByItem on: self				list: #changeSetList				selected: #currentCngSet				changeSelected: #showChangeSetNamed:				menu: #changeSetMenu:shifted:				keystroke: #changeSetListKey:from:)			autoDeselect: false)		frame: (((0@0 extent: 0.5@csListHeight)			scaleBy: rect extent) translateBy: rect origin).	window addMorph: (PluggableListMorphByItem on: self				list: #classList				selected: #currentClassName				changeSelected: #currentClassName:				menu: #classMenu:shifted:				keystroke: #classListKey:from:)		frame: (((0.5@0 extent: 0.5@csListHeight)			scaleBy: rect extent) translateBy: rect origin).	window addMorph: (PluggableListMorphByItem on: self				list: #messageList				selected: #currentSelector				changeSelected: #currentSelector:				menu: #messageMenu:shifted:				keystroke: #messageListKey:from:)		frame: (((0@csListHeight extent: 1@msgListHeight)			scaleBy: rect extent) translateBy: rect origin).	 self wantsAnnotationPane		ifFalse:			[baseline _ csMsgListHeight]		ifTrue:			[baseline _ csMsgListHeight + annoHeight.			window addMorph: (	(PluggableTextMorph on: self						text: #annotation accept: nil						readSelection: nil menu: nil)					askBeforeDiscardingEdits: false)				frame: (((0@csMsgListHeight extent: 1@annoHeight)					scaleBy: rect extent) translateBy: rect origin)].	window addMorph: (PluggableTextMorph on: self 				text: #contents accept: #contents:notifying:				readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (((0@baseline extent: 1@(1 - baseline))			scaleBy: rect extent) translateBy: rect origin).! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 1/28/2001 19:18'!changeSetMenu: aMenu shifted: isShifted 	"Set up aMenu to hold commands for the change-set-list pane.  This could be for a single or double changeSorter"	isShifted ifTrue: [^ self shiftedChangeSetMenu: aMenu].	Smalltalk isMorphic		ifTrue:			[aMenu title: 'Change Set'.			aMenu addStayUpItemSpecial]		ifFalse:			[aMenu title: 'Change Set:' , myChangeSet name].	aMenu add: 'make changes go to me (m)' action: #newCurrent.	aMenu addLine.	aMenu add: 'new change set... (n)' action: #newSet.	aMenu add: 'find...(f)' action: #findCngSet.	aMenu add: 'show...' action: #chooseCngSet.	aMenu add: 'rename change set (r)' action: #rename.	aMenu addLine.	aMenu add: 'file out (o)' action: #fileOut.	aMenu add: 'mail to list' action: #mailOut.	aMenu add: 'browse methods (b)' action: #browseChangeSet.	aMenu addLine.	parent		ifNotNil: 			[aMenu add: 'copy all to other side (c)' action: #copyAllToOther.			aMenu add: 'submerge into other side' action: #submergeIntoOtherSide.			aMenu add: 'subtract other side' action: #subtractOtherSide.			aMenu addLine].	myChangeSet hasPreamble		ifTrue: 			[aMenu add: 'edit preamble (p)' action: #addPreamble.			aMenu add: 'remove preamble' action: #removePreamble]		ifFalse: [aMenu add: 'add preamble (p)' action: #addPreamble].	myChangeSet hasPostscript		ifTrue: 			[aMenu add: 'edit postscript...' action: #editPostscript.			aMenu add: 'remove postscript' action: #removePostscript]		ifFalse: [aMenu add: 'add postscript...' action: #editPostscript].	aMenu addLine.	aMenu add: 'destroy change set (x)' action: #remove.	aMenu addLine.	aMenu add: 'more...' action: #shiftedYellowButtonActivity.	^ aMenu! !!ChangeSorter methodsFor: 'class list' stamp: 'sw 1/28/2001 19:21'!classMenu: aMenu shifted: shifted	"Fill aMenu with items appropriate for the class list"	aMenu addTitle: 'class list'.	Smalltalk isMorphic ifTrue: [aMenu addStayUpItemSpecial].	(parent notNil and: [shifted not])		ifTrue: [aMenu addList: #( "These two only apply to dual change sorters"			('copy class chgs to other side'			copyClassToOther)				('move class chgs to other side'			moveClassToOther))].	^ aMenu addList: (shifted		ifFalse: [#(			-			('delete class chgs from this change set'	forgetClass)			-			('browse full (b)'						browseMethodFull)			('browse hierarchy (h)'					spawnHierarchy)			('browse protocol (p)'					browseFullProtocol)			-			('printOut'								printOutClass)			('fileOut'								fileOutClass)			-			('inst var refs...'						browseInstVarRefs)			('inst var defs...'						browseInstVarDefs)			('class var refs...'						browseClassVarRefs)			('class vars'								browseClassVariables)			('class refs (N)'							browseClassRefs)			-			('more...'								shiftedYellowButtonActivity))]		ifTrue: [#(			-			('unsent methods'						browseUnusedMethods)			('unreferenced inst vars'				showUnreferencedInstVars)			-			('sample instance'						makeSampleInstance)			('inspect instances'						inspectInstances)			('inspect subinstances'					inspectSubInstances)			-			('more...'								unshiftedYellowButtonActivity))])! !!ChangeSorter methodsFor: 'message list' stamp: 'sw 1/28/2001 19:23'!messageMenu: aMenu shifted: shifted	"Fill aMenu with items appropriate for the message list; could be for a single or double changeSorter"	shifted ifTrue: [^ self shiftedMessageMenu: aMenu].	aMenu addTitle: 'message list'.	Smalltalk isMorphic ifTrue: [aMenu addStayUpItemSpecial].	parent ifNotNil:		[aMenu addList: #(			('copy method to other side'			copyMethodToOther)			('move method to other side'			moveMethodToOther))].	aMenu addList: #(			('delete method from change set'		forget)			-			('remove method from system (x)'	removeMessage)				-			('browse full (b)'					browseMethodFull)			('browse hierarchy (h)'				spawnHierarchy)			('browse method (O)'				openSingleMessageBrowser)			('browse protocol (p)'				browseFullProtocol)			-			('fileOut'							fileOutMessage)			('printOut'							printOutMessage)			-			('senders of... (n)'					browseSendersOfMessages)			('implementors of... (m)'				browseMessages)			('inheritance (i)'					methodHierarchy)			('versions (v)'						browseVersions)			-			('more...'							shiftedYellowButtonActivity)).	^ aMenu! !"Postscript:"Utilities replaceChangeSortersInToolsFlap.!