'From Squeak 2.3 of January 14, 1999 on 14 January 1999 at 12:26:04 pm'!"Change Set:		BookWrapFixDate:			14 January 1999Author:			Dan IngallsSimplifies the next/previous page methods for books.Adds a property #dontWrapAtEnd which, if set, will prevent wrap-around beyond the last page or before the first.  The deafult behavior, as before, is to wrap around.Adds appropriate menu items to control the setting of the wrap-around option."!!BookMorph methodsFor: 'navigation' stamp: 'di 1/14/1999 12:07'!goToPage: pageNumber transitionSpec: transitionSpec	| pageMorph |	pages isEmpty ifTrue: [^ self].	pageMorph _ (self hasProperty: #dontWrapAtEnd)		ifTrue: [pages atPin: pageNumber]		ifFalse: [pages atWrap: pageNumber].	^ self goToPageMorph: pageMorph transitionSpec: transitionSpec! !!BookMorph methodsFor: 'navigation' stamp: 'di 1/14/1999 12:01'!nextPage	currentPage == nil ifTrue: [^ self goToPage: 1].	self goToPage: (self pageNumberOf: currentPage) + 1.! !!BookMorph methodsFor: 'navigation' stamp: 'di 1/14/1999 12:01'!previousPage	currentPage == nil ifTrue: [^ self goToPage: 1].	self goToPage: (self pageNumberOf: currentPage) - 1.! !!BookMorph methodsFor: 'navigation' stamp: 'di 1/14/1999 12:20'!setWrapPages: doWrap	doWrap		ifTrue: [self removeProperty: #dontWrapAtEnd]		ifFalse: [self setProperty: #dontWrapAtEnd toValue: true].! !!BookMorph methodsFor: 'menu' stamp: 'di 1/14/1999 12:13'!addBookMenuItemsTo: aMenu hand: aHandMorph	| controlsShowing subMenu |	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'previous page' action: #previousPage.	subMenu add: 'next page' action: #nextPage.	subMenu add: 'insert a page' action: #insertPage.	subMenu add: 'delete this page' action: #deletePage.	controlsShowing _ self hasSubmorphWithProperty: #pageControl.	controlsShowing		ifTrue: [subMenu add: 'hide page controls' action: #hidePageControls]		ifFalse: [subMenu add: 'show page controls' action: #showPageControls].	subMenu addLine.	subMenu add: 'sound effect for all pages' action: #menuPageSoundForAll:.	subMenu add: 'sound effect this page only' action: #menuPageSoundForThisPage:.	subMenu add: 'visual effect for all pages' action: #menuPageVisualForAll:.	subMenu add: 'visual effect this page only' action: #menuPageVisualForThisPage:.	subMenu addLine.	subMenu add: 'sort pages' action: #sortPages:.	subMenu add: 'uncache page sorter' action: #uncachePageSorter.	(self hasProperty: #dontWrapAtEnd)		ifTrue: [subMenu add: 'wrap after last page' selector: #setWrapPages: argument: true]		ifFalse: [subMenu add: 'stop at last page' selector: #setWrapPages: argument: false].	subMenu addLine.	subMenu add: 'search for text' action: #textSearch.	(aHandMorph classOfPasteBuffer isKindOf: PasteUpMorph class) ifTrue:		[subMenu add: 'paste book page'	action: #pasteBookPage].	subMenu add: 'send all pages to server' action: #savePagesOnURL.	subMenu add: 'send this page to server' action: #saveOneOnURL.	subMenu add: 'reload all from server' action: #reload.	subMenu add: 'copy page url to clipboard' action: #copyUrl.	subMenu add: 'keep in one file' action: #keepTogether.	subMenu add: 'save as new-page prototype' action: #setNewPagePrototype.	newPagePrototype ifNotNil:		[subMenu add: 'clear new-page prototype' action: #clearNewPagePrototype].	aMenu add: 'book...' subMenu: subMenu! !!BookMorph methodsFor: 'menu' stamp: 'di 1/14/1999 12:17'!invokeBookMenu	"Invoke the book's control panel menu."	| aMenu hand |	aMenu _ MenuMorph new defaultTarget: self.	aMenu addList:		#(('sort pages'				sortPages)		('uncache page sorter'	uncachePageSorter)).	(self hasProperty: #dontWrapAtEnd)		ifTrue: [aMenu add: 'wrap after last page' selector: #setWrapPages: argument: true]		ifFalse: [aMenu add: 'stop at last page' selector: #setWrapPages: argument: false].	aMenu addList:		#(('make bookmark'		bookmarkForThisPage)		('make thumbnail'		thumbnailForThisPage)		('remove control panel'	hidePageControls)).	aMenu addLine.	aMenu add: 'sound effect for all pages' action: #menuPageSoundForAll:.	aMenu add: 'sound effect this page only' action: #menuPageSoundForThisPage:.	aMenu add: 'visual effect for all pages' action: #menuPageVisualForAll:.	aMenu add: 'visual effect this page only' action: #menuPageVisualForThisPage:.	aMenu addLine.	(self primaryHand classOfPasteBuffer isKindOf: PasteUpMorph class) ifTrue:		[aMenu add: 'paste book page'	action: #pasteBookPage].	aMenu add: 'save as new-page prototype' action: #setNewPagePrototype.	newPagePrototype ifNotNil: [		aMenu add: 'clear new-page prototype' action: #clearNewPagePrototype].	aMenu add: (openToDragNDrop ifTrue: ['close'] ifFalse: ['open']) , ' dragNdrop'			action: #openCloseDragNDrop.	aMenu add: 'search for text' action: #textSearch.	aMenu add: 'send all pages to server' action: #savePagesOnURL.	aMenu add: 'send this page to server' action: #saveOneOnURL.	aMenu add: 'reload all from server' action: #reload.	aMenu add: 'copy page url to clipboard' action: #copyUrl.	aMenu add: 'keep in one file' action: #keepTogether.	hand _ self world primaryHand.	aMenu popUpAt: hand position forHand: hand."	sel _ aMenu invokeAt: self primaryHand position in: self world.	sel ifNotNil: [self perform: sel]."! !