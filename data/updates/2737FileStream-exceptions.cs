'From Squeak2.8 of 18 June 2000 [latest update: #2348] on 26 July 2000 at 12:05:08 pm'!"Change Set:		FileStream-exceptions.csDate:			26 July 2000Author:			Michael RuegerThis change set introduces exceptions for the handling of file exists/does not exist exceptions so applications can handle these their own way. The default action still pops up the well known menus, now moved to StandardFileStream error-handling.See also FileDoesNotExistException>>example."!Error subclass: #FileStreamException	instanceVariableNames: 'fileName '	classVariableNames: ''	poolDictionaries: ''	category: 'System-Exceptions Kernel'!FileStreamException subclass: #FileDoesNotExistException	instanceVariableNames: 'readOnly '	classVariableNames: ''	poolDictionaries: ''	category: 'System-Exceptions Kernel'!FileStreamException subclass: #FileExistsException	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'System-Exceptions Kernel'!!FileStreamException methodsFor: 'exceptionBuilder' stamp: 'mir 2/23/2000 20:13'!fileName: aFileName	fileName _ aFileName! !!FileStreamException methodsFor: 'exceptionDescription' stamp: 'mir 2/25/2000 17:29'!fileName	^fileName! !!FileStreamException methodsFor: 'exceptionDescription' stamp: 'mir 2/23/2000 20:13'!isResumable	"Determine whether an exception is resumable."	^true! !!FileStreamException methodsFor: 'exceptionDescription' stamp: 'mir 2/23/2000 20:14'!messageText		"Return an exception's message text."	^messageText == nil		ifTrue: [fileName printString]		ifFalse: [messageText]! !!FileDoesNotExistException methodsFor: 'accessing' stamp: 'mir 7/25/2000 16:41'!readOnly	^readOnly == true! !!FileDoesNotExistException methodsFor: 'accessing' stamp: 'mir 7/25/2000 16:40'!readOnly: aBoolean	readOnly _ aBoolean! !!FileDoesNotExistException methodsFor: 'exceptionDescription' stamp: 'mir 7/25/2000 18:22'!defaultAction	"The default action taken if the exception is signaled."	^self readOnly		ifTrue: [StandardFileStream readOnlyFileDoesNotExistUserHandling: self fileName]		ifFalse: [StandardFileStream fileDoesNotExistUserHandling: self fileName]! !!FileExistsException methodsFor: 'exceptionDescription' stamp: 'mir 7/25/2000 18:22'!defaultAction	"The default action taken if the exception is signaled."	^StandardFileStream fileExistsUserHandling: self fileName! !!FileStreamException class methodsFor: 'exceptionInstantiator' stamp: 'mir 2/23/2000 20:12'!fileName: aFileName	^self new fileName: aFileName! !!FileDoesNotExistException class methodsFor: 'examples' stamp: 'mir 2/29/2000 11:44'!example	"FileDoesNotExistException example"	| result |	result _ [(StandardFileStream readOnlyFileNamed: 'error42.log') contentsOfEntireFile]		on: FileDoesNotExistException		do: [:ex | 'No error log'].	Transcript show: result; cr! !!StandardFileStream class methodsFor: 'error handling' stamp: 'mir 2/28/2000 16:06'!fileDoesNotExistUserHandling: fullFileName	| selection newName |	selection _ (PopUpMenu labels:'create a new filechoose another namecancel')			startUpWithCaption: (FileDirectory localNameFor: fullFileName) , 'does not exist.'.	selection = 1 ifTrue:		[^ self new open: fullFileName forWrite: true].	selection = 2 ifTrue:		[ newName _ FillInTheBlank request: 'Enter a new file name'						initialAnswer:  fullFileName.		^ self oldFileNamed:			(self fullName: newName)].	self halt! !!StandardFileStream class methodsFor: 'error handling' stamp: 'mir 2/28/2000 15:24'!fileExistsUserHandling: fullFileName	| dir localName choice newName newFullFileName |	dir _ FileDirectory forFileName: fullFileName.	localName _ FileDirectory localNameFor: fullFileName.	choice _ (PopUpMenu		labels:'overwrite that file\choose another name\cancel' withCRs)		startUpWithCaption: localName, 'already exists.'.	choice = 1 ifTrue: [		dir deleteFileNamed: localName			ifAbsent: [self error: 'Could not delete the old version of that file'].		^ self new open: fullFileName forWrite: true].	choice = 2 ifTrue: [		newName _ FillInTheBlank request: 'Enter a new file name' initialAnswer: fullFileName.		newFullFileName _ self fullName: newName.		^ self newFileNamed: newFullFileName].	self error: 'Please close this to abort file opening'! !!StandardFileStream class methodsFor: 'error handling' stamp: 'mir 2/28/2000 16:05'!readOnlyFileDoesNotExistUserHandling: fullFileName	| dir files choices selection newName fileName |	dir _ FileDirectory forFileName: fullFileName.	files _ dir fileNames.	fileName _ FileDirectory localNameFor: fullFileName.	choices _ fileName correctAgainst: files.	choices add: 'Choose another name'.	choices add: 'Cancel'.	selection _ (PopUpMenu labelArray: choices lines: (Array with: 5) )		startUpWithCaption: (FileDirectory localNameFor: fullFileName), 'does not exist.'.	selection < (choices size - 1) ifTrue: [		newName _ (dir pathName , FileDirectory slash , (choices at: selection))].	selection = (choices size - 1) ifTrue: [		newName _ FillInTheBlank 							request: 'Enter a new file name' 							initialAnswer: fileName].	newName = '' ifFalse: [^ self readOnlyFileNamed: (self fullName: newName)].	^ self error: 'Could not open a file'! !!StandardFileStream class methodsFor: 'file creation' stamp: 'mir 7/25/2000 16:44'!newFileNamed: fileName 	"Create a new file with the given name, and answer a stream opened for writing on that file. If the file already exists, ask the user what to do."	| fullName |	fullName _ self fullName: fileName.	^(self isAFileNamed: fullName)		ifTrue: ["file already exists:"			(FileExistsException fileName: fullName) signal]		ifFalse: [self new open: fullName forWrite: true]! !!StandardFileStream class methodsFor: 'file creation' stamp: 'mir 7/25/2000 16:39'!oldFileNamed: fileName	"Open an existing file with the given name for reading and writing. If the name has no directory part, then the file will be created in the default directory. If the file already exists, its prior contents may be modified or replaced, but the file will not be truncated on close."	| fullName |	fullName _ self fullName: fileName.	^(self isAFileNamed: fullName)		ifTrue: [self new open: fullName forWrite: true]		ifFalse: ["File does not exist..."			(FileDoesNotExistException fileName: fullName) signal]! !!StandardFileStream class methodsFor: 'file creation' stamp: 'mir 7/25/2000 16:41'!readOnlyFileNamed: fileName 	"Open an existing file with the given name for reading."	"Changed to open a more usefull popup menu.  It now also includes the most likely choices.  jaf"	| fullName |	fullName _ self fullName: fileName.	^(self isAFileNamed: fullName)		ifTrue: [self new open: fullName forWrite: false]		ifFalse: ["File does not exist..."			((FileDoesNotExistException fileName: fullName) readOnly: true) signal]! !