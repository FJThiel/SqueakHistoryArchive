'From Squeak2.8alpha of 13 January 2000 [latest update: #1919] on 8 March 2000 at 6:10:18 pm'!"Change Set:		scriptableSlider-swDate:			8 March 2000Author:			Scott WallaceAdds tile-scripting hookup for a Slider.Places a Slider and a Holder into the Supplies flap."!!Object methodsFor: 'macpal' stamp: 'sw 3/6/2000 15:19'!defaultFloatPrecision	"Answer a number indicating the default float precision to be used in a numeric readout for which the receiver is the model."	^ 1! !!Morph methodsFor: 'submorphs-add/remove' stamp: 'sw 3/6/2000 14:08'!addMorph: newMorph asElementNumber: aNumber	"add the given morph so that it becomes the aNumber'th element of my submorph list"	(aNumber <= submorphs size)		ifTrue:			[self addMorph: newMorph inFrontOf: (submorphs at: aNumber)]		ifFalse:			[self addMorphBack: newMorph]! !!HandMorph methodsFor: 'event handling' stamp: 'sw 3/8/2000 13:48'!handleMouseDown: evt	"Dispatch a mouseDown event."	| m localEvt rootForGrab aHalo |	"if carrying morphs, just drop them"	self hasSubmorphs ifTrue: [^ self dropMorphsEvent: evt].	clickState ~~ #idle ifTrue: [^ self checkForDoubleClick: evt].	m _ self recipientForMouseDown:			(gridOn  "Don't grid when determining recipient"				ifTrue: ["Should really use original cursorPoint, but this should do"						evt copy setCursorPoint: Sensor cursorPoint]				ifFalse: [evt]).	m ifNotNil:		[aHalo _ self world haloMorphOrNil.		(aHalo == nil or: [aHalo staysUpWhenMouseIsDownIn: m])			ifFalse: [self world abandonAllHalos].		m deleteBalloon.		(m handlesMouseDown: evt)			ifTrue:				["start a mouse transaction on m"				(self newMouseFocus: m) ifNil: [^ self].				localEvt _ self transformEvent: evt.				targetOffset _ localEvt cursorPoint - m position.				m mouseDown: localEvt.				clickState == #firstClickDown ifFalse:					["ensure that at least one mouseMove: is reported for each mouse transaction:"					m mouseMove: (localEvt copy setType: #mouseMove).					(m handlesMouseOverDragging: localEvt) ifTrue:						["If m also handles dragOver, enter it in the list"						dragOverMorphs add: m.						mouseOverMorphs remove: m ifAbsent: []]]]			ifFalse:				["grab m by the appropriate root"				menuTargetOffset _ targetOffset _ evt cursorPoint.				rootForGrab _ m rootForGrabOf: m.				rootForGrab					ifNotNil:						[self grabMorph: rootForGrab]					ifNil:						[self newMouseFocus: m   "trigger automatic viewing, for example"]].		mouseOverTimes removeKey: m ifAbsent: []]! !!HandMorph methodsFor: 'event handling' stamp: 'sw 3/8/2000 18:00'!newMouseFocus: aMorphOrNil	| itsPasteUp toView |	((mouseDownMorph isKindOf: MenuItemMorph)		and: [(aMorphOrNil isKindOf: MenuItemMorph) not])		ifTrue: [(mouseDownMorph owner isKindOf: MenuMorph)				ifTrue: ["Crock: If a menu is proffered with the mouse up						and the user clicks down outside it (as is normal in MVC),						then the menu goes away and nothing else happens."						mouseDownMorph owner deleteIfPopUp.						^ nil]].	aMorphOrNil ifNotNil: 		[((itsPasteUp  _ aMorphOrNil pasteUpMorph) notNil and:			[itsPasteUp automaticViewing]) ifTrue:				[toView _ itsPasteUp					submorphThat:						[:aMorph | aMorphOrNil hasInOwnerChain: aMorph]					ifNone:						[nil].				(toView notNil and: [toView isCandidateForAutomaticViewing]) ifTrue:					[toView openViewerForArgument]]].	mouseDownMorph _ aMorphOrNil.	self updateMouseDownTransform.! !!PasteUpMorph methodsFor: 'scripting' stamp: 'sw 3/6/2000 15:08'!addCostumeSpecificCategoriesTo: aCategoryList	#('pen trails' 'card/stack' 'animation'  'playfield') do:		[:cat | aCategoryList addIfNotPresent: cat]! !!PasteUpMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 12:45'!categoryContributions	"Answer a list of arrays which characterize the elements in various viewer categories for the etoy system.  Implementors of this method are statically polled to contribute this information when the scripting system reinitializes its scripting info, which typically only happens after a structural change.	Each array returned has two elements.  The first is the category name, and the second is a an array of <elementType> <elementName> pairs, where <elementType is #slot or #script"	^ #(		('playfield' ((script initiatePainting) (slot mouseX) (slot mouseY) (script roundUpStrays) (slot cursor) (slot valueAtCursor) (script unhideHiddenObjects)))		('animation' ((slot cursor) (slot valueAtCursor)))		('card/stack' ((script goToNextCard) (script goToPreviousCard) (script deleteCard) (script newCard)))		('pen trails' ((script liftAllPens) (script lowerAllPens) (script clearTurtleTrails))))! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/7/2000 17:36'!getKnobColor	^ self getValueFromCostume: #sliderColor! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/6/2000 17:11'!getMaxVal	^  self getValueFromCostume: #maxVal! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/6/2000 17:11'!getMinVal	^  self getValueFromCostume: #minVal! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/8/2000 11:41'!getNumericValue	^ self getValueFromCostume: #getScaledValue! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/7/2000 17:36'!setKnobColor: aColor	self setCostumeSlot: #sliderColor: toValue: aColor! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/6/2000 17:14'!setMaxVal: aNumber	self setCostumeSlot: #setMaxVal: toValue: aNumber! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/6/2000 17:16'!setMinVal: aNumber	self setCostumeSlot: #setMinVal: toValue: aNumber! !!Player methodsFor: 'slots-standard-get/set' stamp: 'sw 3/8/2000 12:46'!setNumericValue: amt	self setCostumeSlot: #setScaledValue: toValue: amt! !!Player methodsFor: 'misc' stamp: 'sw 3/6/2000 15:23'!defaultFloatPrecision	^ costume defaultFloatPrecision! !!Presenter methodsFor: 'palette & parts bin' stamp: 'sw 3/6/2000 17:35'!classNamesForStandardPartsBin	^	#(			(RectangleMorph EllipseMorph StarMorph  CurveMorph PolygonMorph TextMorph ImageMorph		PasteUpMorph PaintInvokingMorph  StringMorph)		(  JoystickMorph ClockMorph BasicButton SimpleSliderMorph PianoKeyboardMorph RecordingControlsMorph))! !!Slider methodsFor: 'initialize' stamp: 'sw 3/6/2000 15:23'!defaultFloatPrecision	^ 0.01! !!Slider methodsFor: 'access' stamp: 'sw 3/7/2000 15:39'!sliderColor: newColor	sliderColor _ newColor.	slider ifNotNil: [slider color: sliderColor]! !!SimpleSliderMorph methodsFor: 'menu' stamp: 'sw 3/6/2000 17:13'!setMinVal: newMinVal	minVal _ newMinVal asNumber.	maxVal _ maxVal max: minVal! !!SimpleSliderMorph methodsFor: 'private' stamp: 'sw 3/6/2000 16:04'!addCostumeSpecificCategoriesTo: aCategoryList	aCategoryList addIfNotPresent: 'slider'! !!SimpleSliderMorph methodsFor: 'private' stamp: 'sw 3/6/2000 15:34'!getScaledValue	^ (value * (maxVal - minVal)) + minVal! !!SimpleSliderMorph methodsFor: 'private' stamp: 'sw 3/6/2000 17:19'!setMaxVal: newMaxVal	maxVal _ newMaxVal asNumber.	minVal _ maxVal min: minVal! !!SimpleSliderMorph methodsFor: 'private' stamp: 'sw 3/8/2000 16:22'!setScaledValue: aNumber	| denom |	(denom _ maxVal - minVal) > 0		ifTrue:			[self setValue: (aNumber - minVal) / denom]		ifFalse:			[self setValue: maxVal]	"If minVal = maxVal, that value is the only one this (rather unuseful!!) slider can bear"! !!SimpleSliderMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 16:23'!authoringPrototype	| aSlider nominalColor |	"self currentHand attachMorph: SimpleSliderMorph authoringPrototype"	aSlider _ super authoringPrototype beSticky.	aSlider extent: 14@120.	nominalColor _ Color r: 0.4 g: 0.86 b: 0.7.	aSlider color: nominalColor.	aSlider sliderColor: nominalColor muchLighter.	aSlider setScaledValue: 0.3.	^ aSlider! !!SimpleSliderMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 11:57'!categoryContributions	^ #(('slider' ((slot numericValue) (slot minVal) (slot maxVal) (slot color) (slot knobColor) (slot width) (slot height))))! !!SimpleSliderMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 12:56'!defaultNameStemForInstances	"Answer a basis for names of default instances of the receiver"	^ 'Slider'! !!SimpleSliderMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 12:57'!helpContributions	^ #((numericValue			'A number representing the current position of the knob.')		(minVal			'The number represented when the knob is at the left or top of the slider; the smallest value returned by the slider.')		(maxVal			'The number represented when the knob is at the right or bottom of the slider; the largest value returned by the slider.')		(knobColor			'The color of the slider''s knob.'))! !!SimpleSliderMorph class methodsFor: 'as yet unclassified' stamp: 'sw 3/8/2000 11:56'!standardSlotInfo	^ #((numericValue 	number		readWrite	getNumericValue	setNumericValue:)		(minVal			number		readWrite	getMinVal			setMinVal:)		(maxVal			number		readWrite	getMaxVal			setMaxVal:)		(knobColor		color		readWrite	getKnobColor		setKnobColor:))! !!TabbedPalette methodsFor: 'parts & controls tabs' stamp: 'sw 3/6/2000 17:35'!addPartsTab	| partsBook aPage |	partsBook _ BookMorph new pageSize: pageSize; setNameTo: 'supplies'.	partsBook removeEverything.	aPage _ self presenter newPageForStandardPartsBin.	aPage extent: pageSize.	#(PaintInvokingMorph RectangleMorph EllipseMorph StarMorph  CurveMorph PolygonMorph TextMorph ImageMorph		PasteUpMorph JoystickMorph SimpleSliderMorph) do:		[:sym | aPage addMorphBack: (Smalltalk at: sym) authoringPrototype].	aPage addMorphBack: RectangleMorph roundRectPrototype.	aPage addMorphBack: ScriptingSystem prototypicalHolder.	aPage replaceTallSubmorphsByThumbnails.	aPage setPartsBinStatusTo: true.	aPage fixLayout.	partsBook insertPage: aPage pageSize: pageSize.	self addTabForBook: partsBook withBalloonText: 'parts bin'! !!UpdatingStringMorph methodsFor: 'accessing' stamp: 'sw 3/6/2000 15:24'!target: anObject	target _ anObject.	floatPrecision _ anObject defaultFloatPrecision! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/6/2000 14:10'!addMorph: aMorph asElementNumber: aNumber inGlobalFlapSatisfying: flapBlock	"If any global flap satisfies flapBlock, add aMorph to it at the given position."	| aFlapTab flapPasteUp |	aFlapTab _ self globalFlapTabsIfAny detect: [:aTab | flapBlock value: aTab] ifNone: [^ self].	flapPasteUp _ aFlapTab referent.	flapPasteUp addMorph: aMorph asElementNumber: aNumber.	flapPasteUp replaceTallSubmorphsByThumbnails; setPartsBinStatusTo: true! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/6/2000 14:11'!addToSuppliesFlap: aMorph asElementNumber: aNumber	self addMorph: aMorph asElementNumber: aNumber inGlobalFlapSatisfying:		[:aFlap | aFlap wording = 'Supplies']	! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/8/2000 12:59'!replaceScriptingAreaInToolsFlap	"Utilities replaceScriptingAreaInToolsFlap"	self replacePartSatisfying: [:el |  (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isKindOf: ScriptingDomain]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  ScriptingSystem newScriptingSpace! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/6/2000 14:23'!standardBottomFlap	|  aFlapTab aPage |	aPage _ self newPartsFlapPage.	aPage setProperty: #maximumThumbnailWidth toValue: 80.	aFlapTab _ FlapTab new referent: aPage beSticky.	aFlapTab color: Color red lighter.	aFlapTab setToPopOutOnDragOver: true.	aFlapTab setToPopOutOnMouseOver: true.	aFlapTab assumeString: 'Supplies' font: Preferences standardFlapFont orientation: #horizontal color: Color red lighter.	aFlapTab edgeToAdhereTo: #bottom; inboard: false.	aPage extent: self currentWorld width @ 100.	#(PaintInvokingMorph RectangleMorph EllipseMorph StarMorph  CurveMorph PolygonMorph TextMorph ImageMorph BasicButton SimpleSliderMorph		PasteUpMorph    BookMorph TabbedPalette 		JoystickMorph  ) do:		[:sym | aPage addMorphBack: (Smalltalk at: sym) authoringPrototype].	aPage addMorphBack: ScriptingSystem prototypicalHolder.	aPage addMorphBack: RectangleMorph roundRectPrototype.	aPage addMorphBack: TrashCanMorph new markAsPartsDonor.	aPage addMorphBack: ScriptingSystem scriptControlButtons markAsPartsDonor.	aPage addMorphBack: Morph new previousPageButton markAsPartsDonor.	aPage addMorphBack: Morph new nextPageButton markAsPartsDonor.	aPage addMorphBack: (ClockMorph authoringPrototype showSeconds: false) step.	aPage replaceTallSubmorphsByThumbnails.	aPage fixLayout.	aFlapTab position: ((Display width - aFlapTab width) // 2 @ (self currentWorld height - aFlapTab height)).	aPage setProperty: #flap toValue: true.	aPage color: (Color red muchLighter "alpha: 0.2").	aPage extent: self currentWorld width @ 100.		^ aFlapTab! !"Postscript:"StandardScriptingSystem initialize.Utilities addToSuppliesFlap: ScriptingSystem prototypicalHolder asElementNumber: 5.Utilities addToSuppliesFlap: SimpleSliderMorph authoringPrototype asElementNumber: 7.Utilities replaceScriptingAreaInToolsFlap.ScriptingSystem resetStandardPartsBin.!