'From Squeak 2.4b of April 23, 1999 on 30 April 1999 at 2:45:28 pm'!"Change Set:		FastReframeDate:			30 April 1999Author:			Dan IngallsWhen the FastDragWindowForMorphic preference is enabled, reframing and pane adjustment operations now also use faster display logic."!!NewHandleMorph reorganize!('all' followHand:forEachPointDo:lastPointDo: initialize justDroppedInto:event: step)!!NewHandleMorph methodsFor: 'all' stamp: 'di 4/30/1999 14:06'!justDroppedInto: aMorph event: anEvent	"No dropping behavior because stepping will delete me.	Moreover it needs to be done that way to evaluate lastPointBlock"! !!Rectangle methodsFor: 'rectangle functions' stamp: 'di 4/29/1999 20:50'!withSideOrCorner: side setToPoint: newPoint	"Return a copy with side set to newPoint"	side = #top ifTrue: [^ self withTop: newPoint y].	side = #bottom ifTrue: [^ self withBottom: newPoint y].	side = #left ifTrue: [^ self withLeft: newPoint x].	side = #right ifTrue: [^ self withRight: newPoint x].	side = #topLeft ifTrue: [^ newPoint corner: self bottomRight].	side = #bottomRight ifTrue: [^ self topLeft corner: newPoint].	side = #bottomLeft ifTrue: [^ self topRight rect: newPoint].	side = #topRight ifTrue: [^ self bottomLeft rect: newPoint].! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 4/30/1999 13:51'!spawnPaneFrameHandle: event	| resizer localPt side growingPane newBounds |	((self innerBounds withHeight: self labelHeight+4) containsPoint: event cursorPoint)		ifTrue: [^ self "in label or top of top pane"].	growingPane _ self paneWithLongestSide: [:s | side _ s] near: event cursorPoint.	growingPane ifNil: [^ self].	resizer _ NewHandleMorph new		followHand: event hand		forEachPointDo:			[:p | localPt _ self pointFromWorld: p.			newBounds _ growingPane bounds withSideOrCorner: side setToPoint: localPt.			Preferences fastDragWindowForMorphic			ifTrue:				["For fast display, only higlight the rectangle during loop"				Display border: newBounds width: 2 rule: Form reverse fillColor: Color gray.				(Delay forMilliseconds: 10) wait.				Display border: newBounds width: 2 rule: Form reverse fillColor: Color gray]			ifFalse:				[self reframePanesAdjoining: growingPane along: side to: newBounds]]		lastPointDo:			[:p | Preferences fastDragWindowForMorphic ifTrue:				["After loop, fast display needs to really do the reframe"				self reframePanesAdjoining: growingPane along: side to: newBounds]].	event hand world addMorph: resizer.	resizer startStepping! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 4/30/1999 13:58'!spawnReframeHandle: event	"The mouse has crossed a pane border.  Spawn a reframe handle."	| resizer localPt pt ptName newBounds |	owner ifNil: [^ self  "Spurious mouseLeave due to delete"].	(self isActive not or: [self isCollapsed]) 		ifTrue:  [^ self].	paneMorphs do: [:p | ((p fullBounds insetBy: 1) containsPoint: event cursorPoint)			ifTrue: [^ self  "Don't activate resizer if in a scrollbar"]].	pt _ event cursorPoint.	self bounds forPoint: pt closestSideDistLen:		[:side :dist :len |  "Check for window side adjust"		dist <= 2  ifTrue: [ptName _ side]].	ptName ifNil:		["Check for pane border adjust"		^ self spawnPaneFrameHandle: event].	#(topLeft bottomRight bottomLeft topRight) do:		[:corner |  "Check for window corner adjust"		(pt dist: (self bounds perform: corner)) < 20 ifTrue: [ptName _ corner]].	resizer _ NewHandleMorph new		followHand: event hand		forEachPointDo:			[:p | localPt _ self pointFromWorld: p.			newBounds _ self bounds withSideOrCorner: ptName setToPoint: localPt.			Preferences fastDragWindowForMorphic			ifTrue:				["For fast display, only higlight the rectangle during loop"				Display border: newBounds width: 2 rule: Form reverse fillColor: Color gray.				(Delay forMilliseconds: 10) wait.				Display border: newBounds width: 2 rule: Form reverse fillColor: Color gray]			ifFalse:				[newBounds extent > (60@40) ifTrue: [self bounds: newBounds]]]		lastPointDo:			[:p | Preferences fastDragWindowForMorphic ifTrue:				["After loop, fast display needs to really do the reframe"				newBounds extent > (60@40) ifTrue: [self bounds: newBounds]]].	event hand world addMorph: resizer.	resizer startStepping! !