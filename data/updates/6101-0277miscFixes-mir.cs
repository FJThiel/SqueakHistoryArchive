'From Squeakland 3.8.5976 of 25 August 2004 [latest update: #267] on 31 August 2004 at 4:59:43 pm'!!AlertMorph methodsFor: 'accessing' stamp: 'mir 8/31/2004 15:47'!onColor	^onColor ifNil: [onColor := Color green]! !!AlertMorph methodsFor: 'stepping and presenter' stamp: 'mir 8/31/2004 15:47'!step	super step.	offColor ifNil: [offColor _ self onColor mixed: 0.5 with: Color black].	socketOwner objectsInQueue = 0 ifTrue: [		color = offColor ifFalse: [super color: offColor].	] ifFalse: [		super color: (color = onColor ifTrue: [offColor] ifFalse: [onColor]).	].! !!Project methodsFor: 'language' stamp: 'mir 8/31/2004 15:32'!updateLocaleDependents	"Set the project's natural language as indicated"	ActiveWorld allTileScriptingElements do: [:viewerOrScriptor |			viewerOrScriptor localeChanged].	Flaps disableGlobalFlaps: false.	Preferences eToyFriendly		ifTrue: [			Flaps addAndEnableEToyFlaps.			ActiveWorld addGlobalFlaps]		ifFalse: [Flaps enableGlobalFlaps].	(Project current isFlapIDEnabled: 'Navigator' translated)		ifFalse: [Flaps enableDisableGlobalFlapWithID: 'Navigator' translated].	ParagraphEditor initializeTextEditorMenus.	Utilities emptyScrapsBook.	MenuIcons initializeTranslations.	LanguageEnvironment localeChanged.	#(PartsBin ParagraphEditor BitEditor FormEditor StandardSystemController) 		do: [ :key | Smalltalk at: key ifPresent: [ :class | class initialize ]].	"self setFlaps.	self setPaletteFor: aLanguageSymbol."! !!SystemDictionary methodsFor: 'squeakland' stamp: 'mir 8/31/2004 15:37'!makeSqueaklandReleasePhaseFinalSettings	"Smalltalk makeSqueaklandReleasePhaseFinalSettings"	| serverName serverURL serverDir updateServer highestUpdate newVersion |	ProjectLauncher splashMorph: (FileDirectory default readOnlyFileNamed: 'scripts\SqueaklandSplash.morph') fileInObjectAndCode.	"Dump all morphs so we don't hold onto anything"	World submorphsDo:[:m| m delete].	#(		(honorDesktopCmdKeys false)		(warnIfNoChangesFile false)		(warnIfNoSourcesFile false)		(showDirectionForSketches true)		(menuColorFromWorld false)		(unlimitedPaintArea true)		(useGlobalFlaps false)		(mvcProjectsAllowed false)		(projectViewsInWindows false)		(automaticKeyGeneration true)		(securityChecksEnabled true)		(showSecurityStatus false)		(startInUntrustedDirectory true)		(warnAboutInsecureContent false)		(promptForUpdateServer false)		(fastDragWindowForMorphic false)		(externalServerDefsOnly true)		(expandedFormat false)		(allowCelesteTell false)		(eToyFriendly true)		(eToyLoginEnabled true)		(magicHalos true)		(mouseOverHalos true)		(biggerHandles false)		(includeSoundControlInNavigator true)		(readDocumentAtStartup true)		(preserveTrash true)		(slideDismissalsToTrash true)	) do:[:spec|		Preferences setPreference: spec first toValue: spec last].	"Workaround for bug"	Preferences enable: #readDocumentAtStartup.	World color: (Color r: 0.9 g: 0.9 b: 1.0).	"Clear all server entries"	ServerDirectory serverNames do: [:each | ServerDirectory removeServerNamed: each].	SystemVersion current resetHighestUpdate.	"Add the squeakalpha update stream"	serverName _ 'Squeakalpha'.	serverURL _ 'squeakalpha.org'.	serverDir _ serverURL , '/'.	updateServer _ ServerDirectory new.	updateServer		server: serverURL;		directory: 'updates/';		altUrl: serverDir;		user: 'sqland';		password: nil.	Utilities updateUrlLists addFirst: {serverName. {serverDir. }.}.	"Add the squeakland update stream"	serverName _ 'Squeakland'.	serverURL _ 'squeakland.org'.	serverDir _ serverURL , '/'.	updateServer _ ServerDirectory new.	updateServer		server: serverURL;		directory: 'public_html/updates/';		altUrl: serverDir.	Utilities updateUrlLists addFirst: {serverName. {serverDir. }.}.	highestUpdate _ SystemVersion current highestUpdate.	(self confirm: 'Reset highest update (' , highestUpdate printString , ')?')		ifTrue: [SystemVersion current highestUpdate: 0].	newVersion _ FillInTheBlank request: 'New version designation:' initialAnswer: 'Squeakland 3.8.' , highestUpdate printString. 	SystemVersion newVersion: newVersion.	(self confirm: self version , 'Is this the correct version designation?If not, choose no, and fix it.') ifFalse: [^ self].! !