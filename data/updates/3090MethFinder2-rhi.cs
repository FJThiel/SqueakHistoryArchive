'From Squeak2.9alpha of 16 June 2000 [latest update: #3139] on 7 December 2000 at 12:28:57 pm'!"Change Set:		MethFinder2-rhiDate:			1 December 2000Author:			Robert HirschfeldFurther tweaks to the Method Finder.  Find the world properly.  Mention multiple answers for the 'less than' example.Inform properly when changes file is too big."!!CompiledMethod methodsFor: 'source code management' stamp: 'tk 12/7/2000 12:28'!checkOKToAdd: size at: filePosition	"Issue several warnings as the end of the changes file approaches its limit,	and finally halt with an error when the end is reached."	| fileSizeLimit margin |	fileSizeLimit _ 16r2000000.	3 to: 1 by: -1 do:		[:i | margin _ i*100000.		(filePosition + size + margin) > fileSizeLimit			ifTrue: [(filePosition + margin) > fileSizeLimit ifFalse:						[self inform: 'WARNING: your changes file is within' , margin printString , ' characters of its size limit.You should take action soon to reduce its size.You may proceed.']]			ifFalse: [^ self]].	(filePosition + size > fileSizeLimit) ifFalse: [^ self].	self error: 'You have reached the size limit of the changes file.You must take action now to reduce it.Close this error.  Do not attempt to proceed.'! !!MethodFinder class methodsFor: 'as yet unclassified' stamp: 'tk 12/1/2000 10:40'!methodFor: dataAndAnswers	"Return a Squeak expression that computes these answers.  (This method is called by the comment in the bottom pane of a MethodFinder.  Do not delete this method.)"	| result selFinder |	result _ (self new) load: dataAndAnswers; findMessage.	Smalltalk isMorphic ifTrue: [		selFinder _ (Display bestGuessOfCurrentWorld 				submorphThat: [:mm | mm class == SystemWindow and: 									[mm model isKindOf: SelectorBrowser]] 				ifNone: [^ result]) model.		selFinder searchResult: result].	^result! !!SelectorBrowser methodsFor: 'as yet unclassified' stamp: 'tk 12/1/2000 10:38'!byExample	"The comment in the bottom pane"	false ifTrue: [MethodFinder methodFor: #( (4 3) 7  (0 5) 5  (5 5) 10)].		"to keep the method methodFor: from being removed from the system"	^ 'Type a fragment of a selector in the top pane.  Accept it.Or, use an example to find a method in the system.  Type receiver, args, and answer in the top pane with periods between the items.  3. 4. 7Or, in this pane, use examples to find a method in the system.  Select the line of code and choose "print it".  	MethodFinder methodFor: #( (4 3) 7  (0 5) 5  (5 5) 10).This will discover (data1 + data2).You supply inputs and answers and the system will find the method.  Each inner array is a list of inputs.  It contains the receiver and zero or more arguments.  For Booleans and any computed arguments, use brace notation.	MethodFinder methodFor: { {1. 3}. true.  {20. 10}. false}.This will discover the expressions (data1 < data2), (data2 > data1), and many others.	MethodFinder methodFor: { {''29 Apr 1999'' asDate}. ''Thursday''.  		{''30 Apr 1999'' asDate}. ''Friday'' }.This will discover the expression (data1 weekday)Receiver and arguments do not have to be in the right order.See MethodFinder.verify for more examples.'! !