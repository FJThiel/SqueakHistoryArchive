'From Squeak3.1alpha of 5 February 2001 [latest update: #3641] on 18 February 2001 at 9:02:07 pm'!"Change Set:		moreFilters-swDate:			18 February 2001Author:			Scott WallaceImplements more message-set filters"!!ClassDescription methodsFor: 'method dictionary' stamp: 'sw 12/11/2000 14:00'!isUniClass	"Answer whether the receiver is a uniclass."	^ self name endsWithDigit! !!MessageSet methodsFor: 'filtering' stamp: 'sw 2/13/2001 12:01'!filterMessageList	"Allow the user to refine the list of messages."	| aMenu evt |	Smalltalk isMorphic ifFalse: [^ self inform: 'sorry, morphic only at this time.'].	messageList size <= 1 ifTrue: [^ self inform: 'this is not a propitious filtering situation'].	"would like to get the evt coming in but thwarted by the setInvokingView: circumlocution"	evt _ self currentWorld activeHand lastEvent.	aMenu _ MenuMorph new defaultTarget: self.	aMenu addTitle: 'Filter by only showing...'.	aMenu addStayUpItem.	aMenu addList: #(		('messages that send...'					filterToSendersOf)		-		('messages in current change set'		filterToCurrentChangeSet)		('messages not in current change set'	filterToNotCurrentChangeSet)		('messages in any change set'			filterToAnyChangeSet)		-		('messages authored by me'				filterToCurrentAuthor)		('messages not authored by me'			filterToNotCurrentAuthor)		-		('messages only in .changes file'		filterToMessagesInChangesFile)		('messages with prior versions'			filterToMessagesWithPriorVersions)		-		('messages in hardened classes'			filterToMessagesWithHardenedClasses)			).	aMenu popUpEvent: evt hand lastEvent in: evt hand world.! !!MessageSet methodsFor: 'filtering' stamp: 'sw 2/14/2001 18:30'!filterToCurrentAuthor	"Filter down only to messages with my initials as most recent author"	| myInitials aMethod aTimeStamp |	(myInitials _ Utilities authorInitialsPerSe) ifNil: [^ self inform: 'No author initials set in this image'].	self filterFrom:		[:aClass :aSelector |			(aClass notNil and: [aSelector notNil]) and:							[aMethod _ aClass compiledMethodAt: aSelector ifAbsent: [nil].				aMethod notNil and:					[(aTimeStamp _ Utilities timeStampForMethod: aMethod) notNil and:						[aTimeStamp beginsWith: myInitials]]]]! !!MessageSet methodsFor: 'filtering' stamp: 'sw 2/13/2001 12:02'!filterToMessagesWithHardenedClasses	"Filter the receiver's list down to only those items representing methods of hardened classes, as opposed to uniclasses"	self filterFrom:		[:aClass :aSelector |			(aClass notNil and: [aSelector notNil]) and:				[aClass isUniClass not]]! !!MessageSet methodsFor: 'filtering' stamp: 'sw 2/14/2001 18:24'!filterToNotCurrentAuthor	"Filter down only to messages not stamped with my initials"	| myInitials aMethod aTimeStamp |	(myInitials _ Utilities authorInitialsPerSe) ifNil: [^ self inform: 'No author initials set in this image'].	self filterFrom:		[:aClass :aSelector |			(aClass notNil and: [aSelector notNil]) and:							[aMethod _ aClass compiledMethodAt: aSelector ifAbsent: [nil].				aMethod notNil and:					[(aTimeStamp _ Utilities timeStampForMethod: aMethod) isNil or:						[(aTimeStamp beginsWith: myInitials) not]]]]! !