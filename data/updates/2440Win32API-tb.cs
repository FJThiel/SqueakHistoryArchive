'From Squeak2.9alpha of 13 June 2000 [latest update: #2426] on 25 June 2000 at 5:11:25 pm'!"Change Set:		177Win32API-tbDate:			15 June 2000Author:			Torsten BergmannSome more wrappers for accessing the Win32 API."!ExternalStructure subclass: #Win32Rectangle	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-Win32'!ExternalObject subclass: #Win32Shell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-Win32'!!Win32Shell commentStamp: '<historical>' prior: 0!This class wrappes the Windows 32 shell.Try 	Win32Shell new shellOpen: 'c:\image.bmp' 		to open a document	Win32Shell new shellOpen: 'c:\myprogram.exe' 	to start an executable	Win32Shell new shellExplore: 'c:\'				to explore a directory	Win32Shell new shellFind: 'c:\' 					to initiate a searchNote that this class is platform specific.  !!Color methodsFor: 'conversions' stamp: 'TBn 6/15/2000 20:37'!asColorref	"Convert the receiver into a colorref"	^(self red * 255) asInteger + ((self green * 255) asInteger << 8) + ((self green * 255) asInteger << 16)! !!Win32HBrush class methodsFor: 'instance creation' stamp: 'TBn 6/15/2000 22:44'!createHatchBrush: aStyle color: aColor 	"Creates an instance of the receiver that has the specified hatch pattern and color"	^ self apiCreateHatchBrush: aStyle with: aColor asColorref! !!Win32HBrush class methodsFor: 'api calls' stamp: 'TBn 6/15/2000 22:42'!apiCreateHatchBrush: aStyle with: colorref 	"Creates a logical brush that has the specified hatch pattern and color"	<apicall: Win32HBrush 'CreateHatchBrush' (long ulong) module: 'gdi32.dll'>	^ self externalCallFailed! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:01'!backwardDiagonalWithColor: aColor 	"45-degree downward left-to-right hatch brush"	^ self createHatchBrush: 3 color: aColor! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:06'!crossWithColor: aColor 	"Horizontal and vertical crosshatch brush"	^ self createHatchBrush: 4 color: aColor! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:03'!diagonalCrossWithColor: aColor 	"45-degree crosshatch brush"	^ self createHatchBrush: 5 color: aColor! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:02'!forwardDiagonalWithColor: aColor 	"45-degree upward left-to-right hatch brush"	^ self createHatchBrush: 2 color: aColor! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:04'!horizontalWithColor: aColor 	"Horizontal hatch brush"	^ self createHatchBrush: 0 color: aColor! !!Win32HBrush class methodsFor: 'hatch brushes' stamp: 'TBn 6/15/2000 23:05'!verticalWithColor: aColor 	"Horizontal hatch brush"	^ self createHatchBrush: 1 color: aColor ! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 21:24'!drawFocusRectangle: aRect  	"draws a rectangle in the style used to indicate that the rectangle has the focus" 	self		apiDrawFocusRect: self		with: (Win32Rectangle fromRectangle: aRect)	 	 ! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 21:45'!drawFrameControl: aRect type: aType style: aStyle	"Draws a frame control of the specified type and style (integer values)"	self apiDrawFrameControl: self with: (Win32Rectangle fromRectangle: aRect) with: aType with: aStyle! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 20:38'!fillRectangle: aRect color: aColor 	"fills an area of the display with the given color"	| brush |	 	brush _ Win32HBrush createSolidBrush: aColor asColorref.	self		apiFillRect: self		with: (Win32Rectangle fromRectangle: aRect)		with: brush.	brush delete! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 21:08'!floodFillAt: aPoint boundaryColor: aColor fillColor: anotherColor 	"fills an area of the display with the given color"	| newBrush oldBrush |	newBrush _ Win32HBrush createSolidBrush: anotherColor asColorref.	oldBrush _ self selectObject: newBrush.	(self		apiExtFloodFill: self		with: aPoint x		with: aPoint y		with: aColor asColorref		with: 0) inspect.	self selectObject: oldBrush.	newBrush delete! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 22:38'!frameRectangle: aRect brush: aBrush	"Draws a border around the specified rectangle by using the specified brush. The width and height of the border are always one logical unit." 	self		apiFrameRect: self		with: (Win32Rectangle fromRectangle: aRect)		with: aBrush. ! !!Win32HDC methodsFor: 'drawing' stamp: 'TBn 6/15/2000 21:16'!roundRectangle: aRect width: width height: height 	^ self		apiRoundRect: self		with: aRect left		with: aRect top		with: aRect right		with: aRect bottom		with: width		with: height! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 21:25'!apiDrawFocusRect: aHDC with: lpRect 	"Draws a rectangle in the style used to indicate that the rectangle has 	the focus."	<apicall: bool 'DrawFocusRect' (Win32HDC Win32Rectangle*) module: 'user32.dll'>	^ self externalCallFailed! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 21:42'!apiDrawFrameControl: aHDC with: lpRect with: type with: state	"Draws a frame control of the specified type and style"	<apicall: bool 'DrawFrameControl' (Win32HDC Win32Rectangle* ulong ulong) module: 'user32.dll'>	^ self externalCallFailed! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 20:34'!apiExtFloodFill: aHDC with: x with: y with: colorref with: fillType 	"fills an area of the display surface with the current brush"	<apicall: bool 'ExtFloodFill' (Win32HDC long long ulong ulong) module: 'gdi32.dll'>	^ self externalCallFailed! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 20:22'!apiFillRect: aHDC with: lpRect with: brush 	"Fills a rectangle by using the specified brush. This function includes  	the left and top borders, but excludes the right and bottom borders of  	the rectangle.  	"	<apicall: char 'FillRect' (Win32HDC Win32Rectangle* Win32HBrush) module: 'user32.dll'>	^ self externalCallFailed! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 22:36'!apiFrameRect: aHDC with: lpRect with: brush 	"Draws a border around the specified rectangle by using the specified brush. The width and height of the border are always one logical unit."	<apicall: char 'FrameRect' (Win32HDC Win32Rectangle* Win32HBrush) module: 'user32.dll'>	^ self externalCallFailed! !!Win32HDC methodsFor: 'api calls' stamp: 'TBn 6/15/2000 21:14'!apiRoundRect: aHDC with: left with: top with: right with: bottom with: width with: height	"Draws a rectangle with rounded corners. The rectangle is outlined by  	using the current pen and filled by using the current brush"	<apicall: bool 'RoundRect' (Win32HDC long long long long long long) module: 'gdi32.dll'>	^ self externalCallFailed! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!bottom	"This method was automatically generated"	^handle signedLongAt: 13! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!bottom: anObject	"This method was automatically generated"	handle signedLongAt: 13 put: anObject! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!left	"This method was automatically generated"	^handle signedLongAt: 1! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!left: anObject	"This method was automatically generated"	handle signedLongAt: 1 put: anObject! !!Win32Rectangle methodsFor: 'accessing' stamp: 'TBn 6/15/2000 19:48'!left: left top: top right: right bottom: bottom	"sets the coordinates of the receiver"	self left: left.	self top: top.	self right: right.	self bottom: bottom ! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!right	"This method was automatically generated"	^handle signedLongAt: 9! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!right: anObject	"This method was automatically generated"	handle signedLongAt: 9 put: anObject! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!top	"This method was automatically generated"	^handle signedLongAt: 5! !!Win32Rectangle methodsFor: 'accessing' stamp: 'sma 6/25/2000 17:07'!top: anObject	"This method was automatically generated"	handle signedLongAt: 5 put: anObject! !!Win32Rectangle class methodsFor: 'accessing' stamp: 'TBn 6/15/2000 19:44'!fields	"Win32Rectangle defineFields"	^ #(#(#left 'long') #(#top 'long') #(#right 'long') #(#bottom 'long') )! !!Win32Rectangle class methodsFor: 'instance creation' stamp: 'TBn 6/15/2000 19:49'!fromRectangle: rc 	"returns an instance of the receiver from the given smalltalk rectangle"	^ self new left: rc left top: rc top right: rc right bottom: rc bottom  ! !!Win32Shell methodsFor: 'operations' stamp: 'TBn 6/14/2000 09:39'!shellExplore: aPathString	"Explores the folder specified by aPathString"	(self shellExecute: nil 		lpOperation: 'explore'		lpFile: aPathString		lpParameters: nil		lpDirectory: nil		nShowCmd: 1) <= 32 ifTrue: [self error: 'system error']! !!Win32Shell methodsFor: 'operations' stamp: 'TBn 6/14/2000 09:59'!shellFind: aPathString	"Initiates a search starting from the specified directory."	(self shellExecute: nil 		lpOperation: 'find'		lpFile: nil		lpParameters: nil		lpDirectory: aPathString		nShowCmd: 1) <= 32 ifTrue: [self error: 'system error']! !!Win32Shell methodsFor: 'operations' stamp: 'TBn 6/14/2000 09:37'!shellOpen: aFileString	"Opens the file specified by aFileString. The file can be an executable file, a document file, 	 or a folder."	(self shellExecute: nil 		lpOperation: 'open'		lpFile: aFileString		lpParameters: nil		lpDirectory: nil		nShowCmd: 1) <= 32 ifTrue: [self error: 'system error']! !!Win32Shell methodsFor: 'api calls' stamp: 'sma 6/14/2000 20:17'!shellExecute: hwnd lpOperation: opString lpFile: fileString lpParameters: parmString lpDirectory: dirString nShowCmd: anInteger	"Opens or prints the specified file, which can be an executable or document file.		HINSTANCE ShellExecute(	  		HWND hwnd,			// handle to parent window			LPCTSTR lpOperation,	// pointer to string that specifies operation to perform			LPCTSTR lpFile,		// pointer to filename or folder name string			LPCTSTR lpParameters,	// pointer to string that specifies executable-file parameters 			LPCTSTR lpDirectory,	// pointer to string that specifies default directory			INT nShowCmd 			// whether file is shown when opened		);"	<apicall: long 'ShellExecuteA' (long char* char* char* char* ulong) module:'shell32.dll'>! !