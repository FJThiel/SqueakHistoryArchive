'From Squeak3.1alpha of 5 February 2001 [latest update: #3647] on 19 February 2001 at 6:58:55 am'!"Change Set:		filterOldVersionsDate:			19 February 2001Author:			Bob ArningIn the simple mode of the blue project finder, only show the latest version of each project"!!FileList2 methodsFor: 'as yet unclassified' stamp: 'RAA 2/19/2001 06:41'!listForPattern: pat	"Make the list be those file names which match the pattern."	| sizePad newList |	directory ifNil: [^#()].	(fileSelectionBlock isKindOf: MessageSend) ifTrue: [		fileSelectionBlock arguments: {directory entries}.		newList _ fileSelectionBlock value.		fileSelectionBlock arguments: #().	] ifFalse: [		newList _ directory entries select: [:entry | fileSelectionBlock value: entry value: pat].	].	newList _ newList asSortedCollection: self sortBlock.	sizePad _ (newList inject: 0 into: [:mx :entry | mx max: (entry at: 5)])					asStringWithCommas size - 1.	newList _ newList collect: [ :e | self fileNameFormattedFrom: e sizePad: sizePad ].	^ newList asArray! !!FileList2 class methodsFor: 'as yet unclassified' stamp: 'RAA 2/19/2001 06:57'!projectOnlySelectionMethod: incomingEntries	| versionsAccepted basicInfoTuple basicName basicVersion |	"this shows only the latest version of each project"	versionsAccepted _ Dictionary new.	incomingEntries do: [ :entry |		entry isDirectory ifFalse: [			(#('*.pr' '*.pr.gz' '*.project') anySatisfy: [ :each | each match: entry name]) ifTrue: [				basicInfoTuple _ Project parseProjectFileName: entry name.				basicName _ basicInfoTuple first.				basicVersion _ basicInfoTuple second.				((versionsAccepted includesKey: basicName) and: 						[(versionsAccepted at: basicName) first > basicVersion]) ifFalse: [					versionsAccepted at: basicName put: {basicVersion. entry}				].			]		]	].	^versionsAccepted asArray collect: [ :each | each second]! !!FileList2 class methodsFor: 'blue ui' stamp: 'RAA 2/19/2001 06:56'!morphicViewProjectLoader2InWorld: aWorld reallyLoad: aBoolean dirFilterType: aSymbol	| window aFileList buttons treePane textColor1 fileListPane pane2a pane2b |	window _ AlignmentMorphBob1 newColumn.	window hResizing: #shrinkWrap; vResizing: #shrinkWrap.	textColor1 _ Color r: 0.742 g: 0.839 b: 1.0.	aFileList _ self new directory: FileDirectory default.	aFileList 		optionalButtonSpecs: self specsForProjectLoader;		fileSelectionBlock: (			aSymbol == #limitedSuperSwikiDirectoryList ifTrue: [				MessageSend receiver: self selector: #projectOnlySelectionMethod:			] ifFalse: [				self projectOnlySelectionBlock			]		);		"dirSelectionBlock: self hideSqueakletDirectoryBlock;"		modalView: window.	window		setProperty: #FileList toValue: aFileList;		wrapCentering: #center; cellPositioning: #topCenter;		borderWidth: 4;		borderColor: (Color r: 0.355 g: 0.516 b: 1.0);		useRoundedCorners.	buttons _ #('OK' 'Cancel') collect: [ :each |		self blueButtonText: each textColor: textColor1 inWindow: window	].	(treePane _ aFileList morphicDirectoryTreePaneFiltered: aSymbol)		extent: 250@300; 		retractable: false;		borderWidth: 0.	fileListPane _ aFileList morphicFileListPane 		extent: 350@300; 		retractable: false;		borderWidth: 0.	window		addARow: {			window fancyText: 'Load A Project' ofSize: 21 color: textColor1		};		addARowCentered: {			buttons first. 			(Morph new extent: 30@5) color: Color transparent. 			buttons second		};		addARow: {			window fancyText: 'Please select a project' ofSize: 21 color: Color blue		};		addARow: {			(window inAColumn: {(pane2a _ window inARow: {window inAColumn: {treePane}}) 				useRoundedCorners; layoutInset: 6}) layoutInset: 10.			(window inAColumn: {(pane2b _ window inARow: {window inAColumn: {fileListPane}}) 				useRoundedCorners; layoutInset: 6}) layoutInset: 10.		}.	window fullBounds.	window fillWithRamp: self blueRamp1 oriented: 0.65.	pane2a fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	pane2b fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	buttons do: [ :each |		each fillWithRamp: self blueRamp2 oriented: (0.75 @ 0).	].	buttons first 		on: #mouseUp 		send: (aBoolean ifTrue: [#okHitForProjectLoader] ifFalse: [#okHit])		to: aFileList.	buttons second on: #mouseUp send: #cancelHit to: aFileList.	aFileList postOpen.	window position: aWorld topLeft + (aWorld extent - window extent // 2).	^ window openInWorld: aWorld.! !