'From Squeak3.1alpha of 28 February 2001 [latest update: #4348] on 27 September 2001 at 4:02:20 pm'!"Change Set:		unreferencedVars-swDate:			27 September 2001Author:			Scott WallaceAdds a command to report unreferenced class vars (see in shifted class-pane menu of browser and change sorter).Also fixes a long-standing bug in the code for finding unreferenced inst vars -- had formerly not worked correctly on class side."!!ClassDescription methodsFor: 'instance variables' stamp: 'sw 9/26/2001 01:51'!allUnreferencedClassVariables	"Answer a list of the names of all the receiver's unreferenced class vars, including those defined in superclasses"	|  aList |	aList _ OrderedCollection new.	self withAllSuperclasses reverseDo:		[:aClass |		aClass classVarNames do:			[:var |				(Smalltalk allCallsOn: (aClass classPool associationAt: var))					size == 0 ifTrue:						[aList add: var]]].	^ aList! !!CodeHolder methodsFor: 'commands' stamp: 'sw 9/27/2001 00:11'!showUnreferencedClassVars	"Search for all class variables known to the selected class, and put up a list of those that have no references anywhere in the system.  The search includes superclasses, so that you don't need to navigate your way to the class that defines each class variable in order to determine whether it is unreferenced"	| cls aList aReport |	(cls _ self selectedClass) ifNil: [^ self].	aList _ cls allUnreferencedClassVariables.	aList size == 0 ifTrue: [^ self inform: 'There are no unreferencedclass variables in', cls name].	aReport _ String streamContents:		[:aStream |			aStream nextPutAll: 'Unreferenced class variable(s) in ', cls name; cr.			aList do: [:el | aStream tab; nextPutAll: el; cr]].	Transcript cr; show: aReport.	(SelectionMenu labels: aList selections: aList) startUpWithCaption: 'Unreferencedclass variables in ', cls name! !!CodeHolder methodsFor: 'commands' stamp: 'sw 9/26/2001 01:55'!showUnreferencedInstVars	"Search for all instance variables known to the selected class, and put up a list of those that have no references anywhere in the system.  The search includes superclasses, so that you don't need to navigate your way to the class that defines each inst variable in order to determine whether it is unreferenced"	| cls aList aReport |	(cls _ self selectedClassOrMetaClass) ifNil: [^ self].	aList _ cls allUnreferencedInstanceVariables.	aList size == 0 ifTrue: [^ self inform: 'There are no unreferencedinstance variables in', cls name].	aReport _ String streamContents:		[:aStream |			aStream nextPutAll: 'Unreferenced instance variable(s) in ', cls name; cr.			aList do: [:el | aStream tab; nextPutAll: el; cr]].	Transcript cr; show: aReport.	(SelectionMenu labels: aList selections: aList) startUpWithCaption: 'Unreferencedinstance variables in ', cls name! !!Browser methodsFor: 'class functions' stamp: 'sw 9/26/2001 01:33'!shiftedClassListMenu: aMenu	"Set up the menu to apply to the receiver's class list when the shift key is down"	^ aMenu addList: #(			-			('unsent methods'			browseUnusedMethods)			('unreferenced inst vars'	showUnreferencedInstVars)			('unreferenced class vars'	showUnreferencedClassVars)			('subclass template'			makeNewSubclass)			-			('sample instance'			makeSampleInstance)			('inspect instances'			inspectInstances)			('inspect subinstances'		inspectSubInstances)			-			('fetch documentation'		fetchClassDocPane)			('add all meths to current chgs'		addAllMethodsToCurrentChangeSet)			-			('more...'					offerUnshiftedClassListMenu))! !!ChangeSorter methodsFor: 'class list' stamp: 'sw 9/27/2001 16:00'!classListMenu: aMenu shifted: shifted	"Fill aMenu with items appropriate for the class list"	aMenu title: 'class list'.	(parent notNil and: [shifted not])		ifTrue: [aMenu addList: #( "These two only apply to dual change sorters"			('copy class chgs to other side'			copyClassToOther)				('move class chgs to other side'			moveClassToOther))].	aMenu addList: (shifted		ifFalse: [#(			-			('delete class from change set (d)'		forgetClass)			('remove class from system (x)'			removeClass)			-			('browse full (b)'						browseMethodFull)			('browse hierarchy (h)'					spawnHierarchy)			('browse protocol (p)'					browseFullProtocol)			-			('printOut'								printOutClass)			('fileOut'								fileOutClass)			-			('inst var refs...'						browseInstVarRefs)			('inst var defs...'						browseInstVarDefs)			('class var refs...'						browseClassVarRefs)			('class vars'								browseClassVariables)			('class refs (N)'							browseClassRefs)			-			('more...'								offerShiftedClassListMenu))]		ifTrue: [#(			-			('unsent methods'						browseUnusedMethods)			('unreferenced inst vars'				showUnreferencedInstVars)			('unreferenced class vars'				showUnreferencedClassVars)			-			('sample instance'						makeSampleInstance)			('inspect instances'						inspectInstances)			('inspect subinstances'					inspectSubInstances)			-			('more...'								offerUnshiftedClassListMenu ))]).	^ aMenu! !