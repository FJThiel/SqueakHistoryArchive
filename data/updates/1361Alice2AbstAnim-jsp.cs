'From Squeak 2.4b of April 23, 1999 on 28 July 1999 at 10:10:26 pm'!"Change Set:		Alice2AbstAnimDate:			28 July 1999Author:			Jeff PierceFold what was in AliceSimpleAnimation into AliceAbstractAnimation."!AliceUpdateable subclass: #AliceAbstractAnimation	instanceVariableNames: 'startTime endTime duration state direction loopCount undoable myWonderland pausedInterval animatedObject startState endState proportionDone getStartStateFunction getEndStateFunction updateFunction styleFunction '	classVariableNames: 'Finished Forward Infinity Paused Reverse Running Stopped Waiting '	poolDictionaries: ''	category: 'Alice2.0-Time'!!AliceAbstractAnimation methodsFor: 'initialization' stamp: 'jsp 7/28/1999 21:51'!object: anObject update: func getStartState: startFunc getEndState: endFunc style: styleFunc duration: time undoable: canUndo inWonderland: aWonderland	"This method initializes the Animation with all the information that it needs run."	animatedObject _ anObject.	updateFunction _ func.	styleFunction _ styleFunc.	getStartStateFunction _ startFunc.	getEndStateFunction _ endFunc.	duration _ time.	undoable _ canUndo.	myScheduler _ aWonderland getScheduler.	myWonderland _ aWonderland.	loopCount _ 1.	direction _ Forward.	state _ Waiting.	myScheduler addAnimation: self.! !!AliceAbstractAnimation methodsFor: 'management' stamp: 'jsp 7/28/1999 21:51'!update: currentTime	"Updates the animation using the current Wonderland time"	| newState |	(state = Waiting) ifTrue: [self prologue: currentTime].	(state = Running) ifTrue: [				proportionDone _ styleFunction value: (currentTime - startTime) value: duration.				newState _ startState interpolateTo: endState at: proportionDone.				updateFunction value: newState.				(currentTime >= endTime) ifTrue: [ state _ Finished. ].							  ].	(state = Finished) ifTrue: [self epilogue: currentTime].! !