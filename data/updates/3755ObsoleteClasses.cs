'From Squeak3.1alpha of 4 February 2001 [latest update: #3764] on 3 March 2001 at 12:31:56 am'!"Change Set:		ObsoleteClassesDate:			2 March 2001Author:			Andreas RaabThe change set introduces a weakly remembered list of now obsolete subclasses. This list is updated when classes get removed from the system and used by the ClassBuilder to prevent the excessive enumeration of the entire ObjectMemory for figuring out if any such obsolete subclasses exist."!Object subclass: #Behavior	instanceVariableNames: 'superclass methodDict format '	classVariableNames: 'ObsoleteSubclasses '	poolDictionaries: ''	category: 'Kernel-Classes'!!Behavior methodsFor: 'obsolete subclasses' stamp: 'ar 3/2/2001 00:58'!addObsoleteSubclass: aClass	"Weakly remember that aClass was a subclass of the receiver and is now obsolete"	| obs |	ObsoleteSubclasses finalizeValues. "clean up if need be"	obs _ ObsoleteSubclasses at: self ifAbsent:[WeakArray new].	(obs includes: aClass) ifTrue:[^self].	obs _ obs copyWithout: nil.	obs _ obs copyWith: aClass.	ObsoleteSubclasses at: self put: obs.! !!Behavior methodsFor: 'obsolete subclasses' stamp: 'ar 3/2/2001 00:58'!obsoleteSubclasses	"Return all the weakly remembered obsolete subclasses of the receiver"	| obs |	ObsoleteSubclasses finalizeValues. "clean up if need be"	obs _ ObsoleteSubclasses at: self ifAbsent:[^#()].	obs _ obs copyWithout: nil.	obs isEmpty		ifTrue:[ObsoleteSubclasses removeKey: self ifAbsent:[]]		ifFalse:[ObsoleteSubclasses at: self put: obs].	^obs! !!Class methodsFor: 'initialize-release' stamp: 'ar 3/1/2001 22:28'!removeFromSystem	"Forget the receiver from the Smalltalk global dictionary. Any existing 	instances will refer to an obsolete version of the receiver."	self removeFromSystem: true.! !!Class methodsFor: 'initialize-release' stamp: 'ar 3/2/2001 00:56'!removeFromSystem: logged	"Forget the receiver from the Smalltalk global dictionary. Any existing 	instances will refer to an obsolete version of the receiver."	self superclass ifNotNil:[		"If we have no superclass there's nothing to be remembered"		self superclass addObsoleteSubclass: self].	self environment removeClassFromSystem: self logged: logged.	self obsolete! !!Class methodsFor: 'initialize-release' stamp: 'ar 3/1/2001 22:29'!removeFromSystemUnlogged	"Forget the receiver from the Smalltalk global dictionary. Any existing instances will refer to an obsolete version of the receiver.  Do not log the removal either to the current change set nor to the system changes log"	^self removeFromSystem: false! !!Behavior class methodsFor: 'class initialization' stamp: 'ar 3/3/2001 00:30'!flushObsoleteSubclasses	"Behavior flushObsoleteSubclasses"	ObsoleteSubclasses keys "need a copy" 		do:[:obs| obs ifNotNil:[obs obsoleteSubclasses]]. "remove themselves"	ObsoleteSubclasses finalizeValues.! !!Behavior class methodsFor: 'class initialization' stamp: 'ar 3/2/2001 00:47'!initialize	"Behavior initialize"	"Never called for real"	ObsoleteSubclasses ifNil:[self initializeObsoleteSubclasses].! !!Behavior class methodsFor: 'class initialization' stamp: 'ar 3/2/2001 00:48'!initializeObsoleteSubclasses	ObsoleteSubclasses _ WeakIdentityKeyDictionary new.! !!SystemDictionary methodsFor: 'class names' stamp: 'ar 3/1/2001 22:27'!removeClassFromSystem: aClass logged: aBool	"Delete the class, aClass, from the system, but log the removal neither to the current change set nor to the changes log"	aBool ifTrue:[		aClass wantsChangeSetLogging ifTrue:			[SystemChanges noteRemovalOf: aClass].		aClass acceptsLoggingOfCompilation ifTrue:			[Smalltalk logChange:  'Smalltalk removeClassNamed: #', aClass name].	].	SystemOrganization removeElement: aClass name.	self removeFromStartUpList: aClass.	self removeFromShutDownList: aClass.	self removeKey: aClass name ifAbsent: [].	self flushClassNameCache! !SystemDictionary removeSelector: #removeClassFromSystem:!SystemDictionary removeSelector: #removeClassFromSystemUnlogged:!Behavior initialize!"Postscript:Register all currently existing obsolete subclasses."Smalltalk obsoleteBehaviors do:[:b| b superclass addObsoleteSubclass: b].!