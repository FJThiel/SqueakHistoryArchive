'From Squeak3.1alpha of 26 May 2001 [latest update: #4022] on 26 May 2001 at 9:31:13 am'!"Change Set:		Genie-Update-2Date:			26 May 2001Author:			Nathanael ScharliGenie is a character and gesture recognition system for Squeak.This changeset contains a new class CRStrokeMorph which drastically speeds up the graphical feedback while entering a gesture. In addition it fixes a bug related to the event-handling"!Morph subclass: #CRStrokeMorph	instanceVariableNames: 'points '	classVariableNames: ''	poolDictionaries: ''	category: 'Genie-Engine'!!CRRecognizer methodsFor: 'private' stamp: 'NS 4/18/2001 00:02'!addPointWithoutTest: aPoint	"This method adds aPoint to the collection of all the captured points (in global display	coordinates). It doesn't test wheter the distance to the last one is big enough" 	self echo ifNotNil: [echo ensureOpenAndAddPoint: aPoint].	self lastPoint: aPoint.	self coordinates top isNil		ifTrue: 			[self coordinates top: aPoint.			self coordinates bottom: aPoint.			self coordinates left: aPoint.			self coordinates right: aPoint]		ifFalse: 			[self coordinates top y > aPoint y ifTrue: [self coordinates top: aPoint].			self coordinates bottom y < aPoint y ifTrue: [self coordinates bottom: aPoint].			self coordinates left x > aPoint x ifTrue: [self coordinates left: aPoint].			self coordinates right x < aPoint x ifTrue: [self coordinates right: aPoint]].	self points add: aPoint! !!CRRecognizer methodsFor: 'private' stamp: 'hmm 3/15/2001 21:35'!echo	"The StrokeMorph for the graphical echo"	^ echo! !!CRRecognizer methodsFor: 'private' stamp: 'hmm 3/15/2001 21:36'!echo: aCRStrokeMorph	"The graphical echo"	echo _ aCRStrokeMorph! !!CRRecognizer methodsFor: 'accessing' stamp: 'NS 4/18/2001 00:02'!addPoint: aPoint 	"Add the given point in global screen coordinates (pixel) to the collection of captured	points. The points is only added if the distance to the last one is big enough"	| first |	(self points isEmptyOrNil not and: [(self absMaxCoordDistance: aPoint and: self points first) >= 		self displayProperties minMoveDistance])		ifTrue:			[self escapePossible: false.			(self isEchoEnabled and: [self echo isNil])				ifTrue:					[self echo: CRStrokeMorph new.					self points do: [:each | self echo ensureOpenAndAddPoint: each]]].	first _ self lastPoint isNil.	self lastPoint: aPoint.	(first or: [(self absMaxCoordDistance: self points last and: aPoint)		>= self displayProperties minCaptureDistance]) ifTrue: [self addPointWithoutTest: aPoint].! !!CRRecognizer methodsFor: 'nothing' stamp: 'NS 4/17/2001 23:56'!stop	"Stop capturing points.	This stops the clock measuring how long it took to capture the points.	It returns the informations about the coordinates of the stroke (in global screen	coordinates (pixel))"	self endTime		ifNil: 			[self endTime: Time millisecondClockValue.			self points last ~= self lastPoint ifTrue: [self addPointWithoutTest: self lastPoint]].	self echo ifNotNil:		[self echo delete.		self echo: nil].	^ self coordinates start: self points first; end: self points last.! !!CRStrokeMorph methodsFor: 'initialization' stamp: 'hmm 3/15/2001 22:07'!initialize	super initialize.	points := OrderedCollection new! !!CRStrokeMorph methodsFor: 'adding' stamp: 'NS 4/18/2001 00:08'!ensureOpenAndAddPoint: aPoint	"We can save some time if we don't open this morph before we know the first point."	| r |	(points size > 0 and: [points last = aPoint]) ifTrue: [^self].	points add: aPoint.	r := points last extent: 1@1.	bounds := points size = 1		ifTrue: [r]		ifFalse: [bounds merge: r].	fullBounds := nil.	points size = 1		ifTrue:			[self openInWorld]		ifFalse:			[World canvas line: (points at: (points size-1 max: 1))				to: points last				color: self color].! !!CRStrokeMorph methodsFor: 'drawing' stamp: 'NS 5/26/2001 08:53'!drawOn: aCanvas	| p |	points size < 2 ifTrue: [^self].	p := points first.	2 to: points size do: [:i |		aCanvas line: p			to: (p := points at: i)			color: self color]! !!CRStrokeMorph methodsFor: 'private' stamp: 'hmm 3/15/2001 22:06'!privateMoveBy: aPoint	super privateMoveBy: aPoint.	points := points collect: [:each | each + aPoint]! !!EventHandler methodsFor: 'testing' stamp: 'hmm 3/15/2001 22:02'!handlesMouseDown: evt	mouseDownRecipient ifNotNil: [^ true].	mouseStillDownRecipient ifNotNil: [^ true].	mouseUpRecipient ifNotNil: [^ true].	(self handlesClickOrDrag: evt) ifTrue:[^true].	gestureSelector ifNotNil: [^true].	^ false! !