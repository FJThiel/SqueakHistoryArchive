'From Squeak2.7 of 5 January 2000 [latest update: #1762] on 7 January 2000 at 4:00:11 pm'!"Change Set:		jan7Minor-swDate:			7 January 2000Author:			Scott Wallace*  In mvc file-lists, if using optional buttons, the button hilightings of the three sort-mode buttons indicate the current sort mode.*  Improvement to diff-button placement in annotation panes.*  Remove three unsent #optionalMorphicButtons methods.*  Add balloon help to assignment-setter-phrase in viewer.*  Adds balloon help for file-list buttons*  If a change-sorter is the active window when the user requests 'Utilitites reorderChangeSets', that change-sorter will now reflect the change immediately."!!CategoryViewer methodsFor: 'get/set slots' stamp: 'sw 10/28/1999 08:49'!arrowSetterButtonFor: partName type: partType	| m |	m _ RectangleMorph new		color: (ScriptingSystem colorForType: #command);		extent: 24@TileMorph defaultH;		borderWidth: 0.	m addMorphCentered: (ImageMorph new image: (ScriptingSystem formAtKey: 'Gets')).	m setBalloonText: 'drag from here to obtain an assignment phrase.'.	m on: #mouseDown send: #makeSetter:from:forPart:		to: self		withValue: (Array with: partName with: partType).	^ m! !!CodeHolder methodsFor: 'as yet unclassified' stamp: 'sw 1/6/2000 17:05'!diffButton	|  outerButton aButton |	"Return a checkbox that lets the user decide whether diffs should be shown or not"	outerButton _ AlignmentMorph newRow.	outerButton centering: #center.	outerButton color:  Color transparent.	outerButton hResizing: #shrinkWrap; vResizing: #shrinkWrap.	outerButton addMorph: (aButton _ UpdatingThreePhaseButtonMorph checkBox).	aButton		target: self;		actionSelector: #toggleDiff;		getSelector: #showDiffs.	outerButton addMorphBack: (StringMorph contents: 'diffs') lock.	outerButton setBalloonText: 'If checked, then code differences from the previous version, if any, will be shown.'.	^ outerButton! !!ChangeSorter class methodsFor: 'as yet unclassified' stamp: 'sw 1/4/2000 16:31'!reorderChangeSets	"ChangeSorter reorderChangeSets"	"Change the order of the change sets to something more convenient:		First come the unnumbered changesets that come with the release.		Next come the numbered updates.		Next come all remaining changesets	In a ChangeSorter, they will appear in the reversed order."	| newHead newMid newTail itsName |	self gatherChangeSets.	newHead _ OrderedCollection new.	newMid _ OrderedCollection new.	newTail _ OrderedCollection new.	AllChangeSets do:		[:aSet |			itsName _ aSet name.			((itsName beginsWith:  'Play With Me') or: [#('New Changes' 'MakeInternal') includes: itsName])				ifTrue:					[newHead add: aSet]				ifFalse:					[itsName startsWithDigit						ifTrue:							[newMid add: aSet]						ifFalse:							[newTail add: aSet]]].	AllChangeSets _ newHead, newMid, newTail.	Smalltalk isMorphic ifTrue: [SystemWindow wakeUpTopWindowUponStartup]! !!FileList methodsFor: 'initialization' stamp: 'sw 1/7/2000 15:55'!optionalButtonRow	| aRow aButton |	aRow _ AlignmentMorph newRow.	aButton _ SimpleButtonMorph new target: self.	aButton color: Color transparent; borderWidth: 1; borderColor: Color black.	aRow addTransparentSpacerOfSize: (5@0).	self optionalButtonSpecs do:			[:spec |				aButton actionSelector: spec second.				aButton label: spec first.				aRow addMorphBack: aButton.				aButton setBalloonText: spec fourth.				aRow addTransparentSpacerOfSize: (3 @ 0).				aButton _ aButton fullCopy.				(spec second == #sortBySize)					ifTrue:						[aRow addTransparentSpacerOfSize: (4@0)]].	^ aRow! !!FileList methodsFor: 'initialization' stamp: 'sw 1/7/2000 15:55'!optionalButtonSpecs	^ #(			('Name' 		sortByName				sortingByName	'sort entries by name')		('Date'			sortByDate				sortingByDate	'sort entries by date')		('Size'			sortBySize				sortingBySize	'sort entries by size')		('Changes'		browseChanges			none			'open a changelist browser on selected file')		('File-in'		fileInSelection			none			'fileIn the selected file')		('File-in to New'	fileIntoNewChangeSet	none			'fileIn the selected file into a new change set')		('Delete'			deleteFile				none			'delete the seleted item'))! !!FileList methodsFor: 'initialization' stamp: 'sw 1/7/2000 15:56'!optionalButtonView	| aView bHeight windowWidth offset previousView aButtonView wid specs |	aView _ View new model: self.	bHeight _ self optionalButtonHeight.	windowWidth _ 120.	aView window: (0@0 extent: windowWidth@bHeight).	offset _ 0.	specs _ self optionalButtonSpecs copyFrom: 1 to: 6.  "Too cramped for the seventh!!"	previousView _ nil.	specs do: [:quad |		aButtonView _ PluggableButtonView on: self getState: (quad third == #none ifTrue: [nil] ifFalse: [quad third]) action: quad second.		quad second = specs last second			ifTrue:				[wid _ windowWidth - offset]			ifFalse:				[aButtonView borderWidthLeft: 0 right: 1 top: 0 bottom: 0.				wid _ (windowWidth // (specs size)) - 2].		aButtonView			label: quad first asParagraph;			window: (offset@0 extent: wid@bHeight).		offset _ offset + wid.		quad second = specs first second			ifTrue: [aView addSubView: aButtonView]			ifFalse: [aView addSubView: aButtonView toRightOf: previousView].		previousView _ aButtonView].	^aView! !!FileList methodsFor: 'private' stamp: 'sw 1/7/2000 15:58'!sortingByDate	^ sortMode == #date! !!FileList methodsFor: 'private' stamp: 'sw 1/7/2000 15:57'!sortingByName	^ sortMode == #name! !!FileList methodsFor: 'private' stamp: 'sw 1/7/2000 15:58'!sortingBySize	^ sortMode == #size! !ChangeList removeSelector: #optionalMorphicButtons!FileList removeSelector: #optionalButtonPairs!Preferences class removeSelector: #optionalMorphicButtons!VersionsBrowser removeSelector: #optionalMorphicButtons!