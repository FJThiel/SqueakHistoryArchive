'From Squeak2.9alpha of 13 June 2000 [latest update: #2407] on 21 June 2000 at 10:40:33 am'!B3DSceneMorph subclass: #AdvancedB3DSceneMorph	instanceVariableNames: 'rotationAngle stepTime isRotating oldPoint headLightStatus savedHeadLight '	classVariableNames: ''	poolDictionaries: 'B3DEngineConstants '	category: 'Balloon3D-Demo Morphs'!!AdvancedB3DSceneMorph methodsFor: 'camera actions' stamp: 'ti 6/21/2000 10:38'!rotateFrom: anOldPoint to: aCurrentPoint	| camera matrix anOldPointOnSphere aCurrentPointOnSphere center radius |	center := self bounds center.	radius := self bounds extent r / 2. 	anOldPointOnSphere := self pointOnSphereCentered: center radius: radius atPoint: anOldPoint.	aCurrentPointOnSphere := self pointOnSphereCentered: center radius: radius atPoint: aCurrentPoint.	camera := scene defaultCamera.	matrix := B3DMatrix4x4		rotatedBy: ((anOldPointOnSphere dot: aCurrentPointOnSphere) min: 1.0) arcCos radiansToDegrees		around:			(camera asMatrix4x4 inverseTransformation localPointToGlobal:				(anOldPointOnSphere cross: aCurrentPointOnSphere)) - camera position		centeredAt: camera target.	camera position: (matrix localPointToGlobal: camera position).	camera up: (matrix localPointToGlobal: camera up).	self updateHeadlight.	self changed.! !!AdvancedB3DSceneMorph methodsFor: 'camera actions' stamp: 'ti 6/20/2000 15:47'!transformWithMatrix: matrix	| camera |	camera := scene defaultCamera.	camera position: (matrix localPointToGlobal: camera position).	camera up: (matrix localPointToGlobal: camera up).	self updateHeadlight.	self changed.! !!AdvancedB3DSceneMorph methodsFor: 'event handling' stamp: 'ti 6/20/2000 18:18'!mouseDown: evt	oldPoint := evt cursorPoint.	super mouseDown: evt.! !!AdvancedB3DSceneMorph methodsFor: 'event handling' stamp: 'ti 6/21/2000 09:00'!mouseMove: evt	oldPoint ifNil: [^super mouseMove: evt].	(evt redButtonPressed) ifTrue: [		(evt shiftPressed)			ifTrue: [self panBy: oldPoint - evt cursorPoint]			ifFalse: [				(oldPoint = evt cursorPoint) ifFalse: [					(self rotateFrom: oldPoint to: evt cursorPoint)]].		oldPoint := evt cursorPoint].! !!AdvancedB3DSceneMorph methodsFor: 'private' stamp: 'ti 6/21/2000 10:39'!pointOnSphereCentered: center radius: radius atPoint: aPoint	| x y z r s |	x := (aPoint x - center x) / radius.	y := (aPoint y - center y) / radius.	r := (x * x) + (y * y).	(r > 1.0)		ifTrue: [			s := 1.0 / (r sqrt).			x := s * x negated.			y := s * y.			z := 0.0]		ifFalse: [ z := (1.0 - r) sqrt].	^B3DVector3 x: x y: y negated z: z! !