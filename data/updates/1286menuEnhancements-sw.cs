'From Squeak 2.4c of May 10, 1999 on 29 June 1999 at 3:01:30 pm'!"Change Set:		menuEnhancementsDate:			29 June 1999Author:			Scott WallaceAllows any individual menu item in a MorphicMenu to operate correctly -- as a stand-alone button, as it were -- even when not in a menu.  To use, bring up the halo on any menu item and tear off a copy via the green 'duplication' handle; the item should then be usable on a stand-alone basis.Also, implements a personalizable morphic screen menu, brought up when you click on the desktop with the mac option key (or equivalent) held down."!!HandMorph methodsFor: 'world menu commands' stamp: 'sw 6/28/1999 11:52'!invokeMetaMenu: evt	"Invoke the meta menu. If the hand is over the background, the world menu is presented. If it is over a morph, a menu of operations for that morph is presented. Each menu entry contains a string to be presented in the menu and a selector. If the selector takes an argument, the mouse-down event that invoked the menu is passed as an argument. This lets the command know which hand invoked it in order to do things like attaching the result of the command to that hand.If the hand is over the background and the shift key is pressed, the find-window menu is immediately put up.If the hand is over the background and the 'mac-option-key' is pressed, an alternate menu, which individual users are encouraged to personalize, is put up -- see HandMorph.optionClickOnDesktopWithEvent:"	| menu |	Preferences noviceMode ifTrue: [^ self].	"if carrying morphs, just drop them"	self hasSubmorphs ifTrue: [^ self dropMorphsEvent: evt].	targetOffset _ menuTargetOffset _ self position.	argument _ self argumentOrNil.	argument == nil		ifTrue:			[Utilities bringFlapsToFront.			evt macOptionKeyPressed				ifTrue: [^ self optionClickOnDesktopWithEvent: evt].			evt shiftPressed				ifFalse:					["put put screen menu"					menu _ self buildWorldMenu.					menu addTitle: 'World']				ifTrue:					[^ self findWindow]]		ifFalse:			[menu _ self buildMorphMenuFor: argument.			menu addTitle: argument class name].	self invokeMenu: menu event: evt.! !!HandMorph methodsFor: 'world menu commands' stamp: 'sw 6/28/1999 12:10'!optionClickOnDesktopWithEvent: evt		| aMenu |	aMenu _ MenuMorph new defaultTarget: self world.	Preferences personalizeOptionMenu: aMenu.	aMenu addLine.	aMenu add: 'personalize...' target: Preferences action: #letUserPersonalizeOptionMenu.	self invokeMenu: aMenu event: evt! !!MenuItemMorph methodsFor: 'events' stamp: 'sw 6/24/1999 11:34'!invokeWithEvent: evt	"Perform the action associated with the given menu item."	| selArgCount |	self isEnabled ifFalse: [^ self].	(owner isKindOf: MenuMorph) ifTrue: [owner lastSelection: selector].	Cursor normal showWhile: [  "show cursor in case item opens a new MVC window"		(selArgCount _ selector numArgs) = 0			ifTrue:				[target perform: selector]			ifFalse:				[selArgCount = arguments size					ifTrue: [target perform: selector withArguments: arguments]					ifFalse: [target perform: selector withArguments: (arguments copyWith: evt)]]]! !!MenuItemMorph methodsFor: 'events' stamp: 'sw 6/24/1999 11:47'!mouseUp: evt	"Handle a mouse up event. Menu items get activated when the mouse is over them."	| mouseInMe |	mouseInMe _ self boundsInWorld containsPoint: evt cursorPoint.	self deselectItem.	self isInMenu		ifTrue:			[(mouseInMe and: [self selector = #toggleStayUp:])				ifFalse: [owner deleteIfPopUp].			subMenu ifNil:				[mouseInMe ifTrue:					[evt hand world displayWorld.					owner invokeItem: self event: evt]]]		ifFalse:  			[self invokeWithEvent: evt]						! !!Preferences class methodsFor: 'personalization' stamp: 'sw 6/28/1999 11:50'!letUserPersonalizeOptionMenu	"Invoked from menu, opens up a single-msg browser on the message that user is invited to customize for rapid morphic access via option-click on morphic desktop"	Browser openMessageBrowserForClass: Preferences class 		selector: #personalizeOptionMenu: editString: nil! !!Preferences class methodsFor: 'personalization' stamp: 'sw 6/29/1999 14:14'!personalizeOptionMenu: aMenu	"The user has clicked on the morphic desktop with the mac-option key, or equivalent, held down; a menu is being constructed to present to the user in response; its default target is the current world.  In this method, you are invited to add items to the menu as per personal preferences.	The default implementation, for illustrative purposes, sets the menu title to 'personal', and adds items for go-to-previous-project,m show/hide flaps, and load code updates"		aMenu addTitle: 'personal'.  "Remove or modify this as per personal choice"	aMenu add: 'previous project' action: #goBack.	aMenu addUpdating: #suppressFlapsString target: Utilities action: #toggleFlapSuppressionInProject.	aMenu add: 'load latest code updates' target: Utilities action: #absorbUpdatesFromServer.! !