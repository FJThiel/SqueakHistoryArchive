'From Squeak3.3alpha of 12 January 2002 [latest update: #4769] on 22 February 2002 at 2:51:05 am'!"Change Set:		fileList2Fixes-swDate:			22 February 2002Author:			Scott WallaceThe FileList2 variants had been rather neglected in the file-list-registry work.  This update purports to restore their buttons to their former health."!!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 02:35'!okayAndCancelServices	"Answer ok and cancel services"	^ {self serviceOkay. self serviceCancel}! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 01:29'!serviceCancel	"Answer a service for hitting the cancel button"	^ (SimpleServiceEntry new		provider: self label: 'cancel' selector: #cancelHit 		description: 'hit here to cancel ')		extraSelector: nil;		buttonLabel: 'cancel'! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 01:46'!serviceOkay	"Answer a service for hitting the okay button"	^ (SimpleServiceEntry new		provider: self label: 'okay' selector: #okHit 		description: 'hit here to accept the current selection')		extraSelector: nil;		buttonLabel: 'ok'! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 02:07'!serviceOpenProjectFromFile	"Answer a service for opening a .pr project file"	^ SimpleServiceEntry 		provider: self 		label: 'load as project'		selector: #openProjectFromFile		description: 'open project from file'		buttonLabel: 'load'! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 02:36'!servicesForFolderSelector	"Answer the ok and cancel servies for the folder selector"	^ self okayAndCancelServices! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 02:36'!servicesForProjectLoader	"Answer the services to show in the button pane for the project loader"	^ {self serviceSortByName. self serviceSortByDate. self serviceSortBySize. self serviceOpenProjectFromFile}! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'sw 2/22/2002 02:34'!universalButtonServices	"Answer the services to be reflected in the receiver's buttons"	^ self optionalButtonSpecs! !!FileList2 class methodsFor: 'blue ui' stamp: 'sw 2/22/2002 02:08'!morphicViewProjectLoader2InWorld: aWorld reallyLoad: aBoolean dirFilterType: aSymbol	| window aFileList buttons treePane textColor1 fileListPane pane2a pane2b treeExtent filesExtent |	window _ AlignmentMorphBob1 newColumn.	window hResizing: #shrinkWrap; vResizing: #shrinkWrap.	textColor1 _ Color r: 0.742 g: 0.839 b: 1.0.	aFileList _ self new directory: FileDirectory default.	aFileList 		optionalButtonSpecs: aFileList servicesForProjectLoader;		fileSelectionBlock: (			aSymbol == #limitedSuperSwikiDirectoryList ifTrue: [				MessageSend receiver: self selector: #projectOnlySelectionMethod:			] ifFalse: [				self projectOnlySelectionBlock			]		);		"dirSelectionBlock: self hideSqueakletDirectoryBlock;"		modalView: window.	window		setProperty: #FileList toValue: aFileList;		wrapCentering: #center; cellPositioning: #topCenter;		borderWidth: 4;		borderColor: (Color r: 0.355 g: 0.516 b: 1.0);		useRoundedCorners.	buttons _ #('OK' 'Cancel') collect: [ :each |		self blueButtonText: each textColor: textColor1 inWindow: window	].	aWorld width < 800 ifTrue: [		treeExtent _ 150@300.		filesExtent _ 350@300.	] ifFalse: [		treeExtent _ 250@300.		filesExtent _ 350@300.	].	(treePane _ aFileList morphicDirectoryTreePaneFiltered: aSymbol)		extent: treeExtent; 		retractable: false;		borderWidth: 0.	fileListPane _ aFileList morphicFileListPane 		extent: filesExtent; 		retractable: false;		borderWidth: 0.	window		addARow: {			window fancyText: 'Load A Project' ofSize: 21 color: textColor1		};		addARowCentered: {			buttons first. 			(Morph new extent: 30@5) color: Color transparent. 			buttons second		};		addARow: {			window fancyText: 'Please select a project' ofSize: 21 color: Color blue		};		addARow: {			(window inAColumn: {(pane2a _ window inARow: {window inAColumn: {treePane}}) 				useRoundedCorners; layoutInset: 6}) layoutInset: 10.			(window inAColumn: {(pane2b _ window inARow: {window inAColumn: {fileListPane}}) 				useRoundedCorners; layoutInset: 6}) layoutInset: 10.		}.	window fullBounds.	window fillWithRamp: self blueRamp1 oriented: 0.65.	pane2a fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	pane2b fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	buttons do: [ :each |		each fillWithRamp: self blueRamp2 oriented: (0.75 @ 0).	].	buttons first 		on: #mouseUp 		send: (aBoolean ifTrue: [#okHitForProjectLoader] ifFalse: [#okHit])		to: aFileList.	buttons second on: #mouseUp send: #cancelHit to: aFileList.	aFileList postOpen.	window position: aWorld topLeft + (aWorld extent - window extent // 2).	window adoptPaneColor: (Color r: 0.548 g: 0.677 b: 1.0).	^ window openInWorld: aWorld.! !!FileList2 class methodsFor: 'morphic ui' stamp: 'sw 2/22/2002 02:24'!morphicViewFileSelectorForSuffixes: aList	"Answer a morphic file-selector tool for the given suffix list"	| dir aFileList window fixedSize midLine gap |	dir _ FileDirectory default.	aFileList _ self new directory: dir.	aFileList optionalButtonSpecs: aFileList okayAndCancelServices.	aList ifNotNil: [		aFileList fileSelectionBlock: [ :entry :myPattern |			entry isDirectory ifTrue: [				false			] ifFalse: [				aList includes: (aFileList getSuffix: entry name asLowercase)			]		] fixTemps.	].	window _ BorderedMorph new		layoutPolicy: ProportionalLayout new;		color: Color lightBlue;		borderColor: Color blue;		borderWidth: 4;		layoutInset: 4;		extent: 600@400;		useRoundedCorners.	window setProperty: #fileListModel toValue: aFileList.	aFileList modalView: window.	midLine _ 0.4.	fixedSize _ 25.	gap _ 5.	self addFullPanesTo: window from: {		{self textRow: 'Please select a file'. 0 @ 0 corner: 1 @ 0. 0@0 corner: 0@fixedSize}.		{aFileList optionalButtonRow. 0 @ 0 corner: 1 @ 0. 0@fixedSize corner: 0@(fixedSize * 2)}.		{aFileList morphicDirectoryTreePane. 0@0 corner: midLine@1. 					gap @(fixedSize * 2) corner: gap negated@0}.		{aFileList morphicFileListPane. midLine @ 0 corner: 1@1. 					gap@(fixedSize * 2) corner: gap negated@0}.	}.	aFileList postOpen.	^ window ! !!FileList2 class methodsFor: 'morphic ui' stamp: 'sw 2/22/2002 02:25'!morphicViewFolderSelector	"Answer a file-selector tool for choosing a folder"	| dir aFileList window fixedSize |	dir _ FileDirectory default.	aFileList _ self new directory: dir.	aFileList optionalButtonSpecs: aFileList servicesForFolderSelector.	window _ (SystemWindow labelled: dir pathName) model: aFileList.	aFileList modalView: window.	fixedSize _ 25.	self addFullPanesTo: window from: {		{self textRow: 'Please select a folder'. 0 @ 0 corner: 1 @ 0. 				0@0 corner: 0@fixedSize}.		{aFileList optionalButtonRow. 0 @ 0 corner: 1 @ 0. 				0@fixedSize corner: 0@(fixedSize * 2)}.		{aFileList morphicDirectoryTreePane. 0@0 corner: 1@1.				0@(fixedSize * 2) corner: 0@0}.	}.	aFileList postOpen.	^ window ! !!FileList2 class methodsFor: 'morphic ui' stamp: 'sw 2/22/2002 02:02'!morphicViewProjectLoader	| dir aFileList window midLine fixedSize |	dir _ FileDirectory default.	aFileList _ self new directory: dir.	aFileList optionalButtonSpecs: aFileList servicesForProjectLoader.	aFileList fileSelectionBlock: self projectOnlySelectionBlock.	window _ (SystemWindow labelled: dir pathName) model: aFileList.	fixedSize _ 25.	midLine _ 0.4.	self addFullPanesTo: window from: {		{aFileList optionalButtonRow. 0 @ 0 corner: 1 @ 0. 0@0 corner: 0@fixedSize}.		{aFileList morphicDirectoryTreePane. 0@0 corner: midLine@1. 0@fixedSize corner: 0@0}.		{aFileList morphicFileListPane. midLine @ 0 corner: 1@1. 0@fixedSize corner: 0@0}.	}.	aFileList postOpen.	^ window ! !FileList2 class removeSelector: #specsForFileSelector!FileList2 class removeSelector: #specsForFolderSelector!FileList2 class removeSelector: #specsForProjectLoader!