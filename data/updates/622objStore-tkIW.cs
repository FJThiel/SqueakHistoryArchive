'From Squeak 2.3 of January 14, 1999 on 29 January 1999 at 8:27:01 am'!!Class methodsFor: 'fileIn/Out' stamp: 'tk 1/28/1999 11:44'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a reference to a class in Smalltalk instead."	^ DiskProxy global: self theNonMetaClass name selector: #yourself			args: #()! !!ClassOrganizer methodsFor: 'fileIn/Out' stamp: 'tk 1/28/1999 15:27'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."Smalltalk allBehaviorsDo: [:aClass | 	aClass organization == self ifTrue: [		(aClass isKindOf: Class) ifTrue: [			^ DiskProxy global: aClass name selector: #organization args: #()]]].^ self	"in desparation"! !!DiskProxy methodsFor: 'all' stamp: 'tk 1/28/1999 15:07'!comeFullyUpOnReload	"Internalize myself into a fully alive object after raw loading from a DataStream. (See my class comment.)  DataStream will substitute the object from this eval for the DiskProxy."	| globalObj symbol reader |	symbol _ globalObjectName.	"See if class is mapped to another name"	reader _ thisContext sender receiver.	(reader respondsTo: #renamed) ifTrue: [		symbol _ reader renamed at: symbol ifAbsent: [symbol]].	globalObj _ Smalltalk at: symbol 		ifAbsent: [^ self halt: 'Global not found'].	((symbol == #World) and: [World == nil]) ifTrue: [		self inform: 'These objects will work better if opened in a Morphic World.Dismiss and reopen all menus.'].	Symbol hasInterned: constructorSelector ifTrue: [:selector |		^ globalObj perform: selector				withArguments: constructorArgs].	"(Renamed not checked by arg)"	^ nil 	"was not in proper form"! !!HandMorph methodsFor: 'file in/out' stamp: 'tk 1/28/1999 12:19'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."	^ DiskProxy global: #World selector: #primaryHand args: #()	"Note, when this file is loaded in an MVC project, this will return nil.  The MenuItemMorph that has this in a field will have that item not work.  Maybe warn the user at load time?"! !!Project methodsFor: 'file in/out' stamp: 'tk 1/28/1999 12:33'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."	^ DiskProxy global: #Project selector: #named: args: (Array with: self name)! !!ScreenController commentStamp: 'tk 1/28/1999 11:56' prior: 0!I am the controller for the parts of the display screen that have no view on them. I only provide a standard yellow button menu. I view (a FormView of) an infinite gray form.  (ScheduledControllers screenController) is the way to find me.!!ScreenController methodsFor: 'file in/out' stamp: 'tk 1/28/1999 11:57'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."	^ DiskProxy global: #ScheduledControllers selector: #screenController args: #()! !!StrikeFont methodsFor: 'file in/out' stamp: 'tk 1/29/1999 08:26'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a reference to a known Font in the other system instead.  "	"A path to me"	(TextConstants at: #forceFontWriting ifAbsent: [false]) ifTrue: [^ self].		"special case for saving the default fonts on the disk.  See collectionFromFileNamed:"	^ DiskProxy global: #StrikeFont selector: #familyName:size:emphasized:			args: (Array with: self name   with: self height					with: self emphasis).! !!StrikeFont class methodsFor: 'instance creation' stamp: 'tk 1/28/1999 11:31'!familyName: aName size: aSize emphasized: emphasisCode	"Create the font with this emphasis"	^ (self familyName: aName size: aSize) emphasized: emphasisCode! !!SystemOrganizer methodsFor: 'fileIn/Out' stamp: 'tk 1/28/1999 15:28'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."self == SystemOrganization ifTrue: [	^ DiskProxy global: #SystemOrganization selector: #yourself args: #()].^ self! !!TranscriptStream methodsFor: 'file in/out' stamp: 'tk 1/28/1999 11:52'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."	^ DiskProxy global: #Transcript selector: #yourself args: #()! !!WorldMorph methodsFor: 'fileIn/Out' stamp: 'tk 1/28/1999 12:15'!objectToStoreOnDataStream	"I am about to be written on an object file.  Write a path to me in the other system instead."	^ DiskProxy global: #World selector: #yourself args: #()	"Note, when this file is loaded in an MVC project, this will return nil.  The MenuItemMorph that has this in a field will have that item not work.  Maybe warn the user at load time?"! !!WorldMorph methodsFor: 'fileIn/Out' stamp: 'tk 1/28/1999 12:27'!storeDataOn: aDataStream	"WorldMorphs only save certain fields when written to the disk.  Save only the world's submorphs, model, and stepList. See DataStream.typeIDFor:  "	| cntInstVars cntIndexedVars instVars data ind |	true ifTrue: [^ self error: 'Worlds may not be stored out this way'].	"Why would we want to do it this way, as opposed to installing in the target system's world?"	cntInstVars _ self class instSize.	cntIndexedVars _ self basicSize.	instVars _ self class allInstVarNames.	data _ Array new: instVars size.	"Add any additional fields to write here"	ind _ (instVars indexOf: 'model').	(ind = 0) ifTrue: [self error: 'this method is out of date']			ifFalse: [data at: ind put: model].	ind _ (instVars indexOf: 'submorphs').	(ind = 0) ifTrue: [self error: 'this method is out of date']			ifFalse: [data at: ind put: submorphs].	ind _ (instVars indexOf: 'stepList').	(ind = 0) ifTrue: [self error: 'this method is out of date']			ifFalse: [data at: ind put: stepList].	aDataStream		beginInstance: self class		size: cntInstVars + cntIndexedVars.	1 to: cntInstVars do:		[:i | aDataStream nextPut: (data at: i)].	1 to: cntIndexedVars do:		[:i | aDataStream nextPut: (self basicAt: i)]! !