'From Squeak 2.3 of January 14, 1999 on 28 January 1999 at 9:39:54 am'!"Change Set:		ThreeChanges-diDate:			28 January 1999Author:			Dan IngallsChanges the response of 'browse versions' commands when there is only one version.  A recent change made it simply say 'No older versions', but this was bad if you wanted to see, eg, the version stamp, or just a clean copy of the method.  The new reponse is similar, but offers the option to see the only version anyway.Limits the speed of the zoom transistion (between projects) to 500 ms.  Machines are getting fast enough that you can't see a full-speed zoom.Increases the composition box of a textMorph with no container.  The previous limits had caused a false end in very long paragraphs, as when examining a megabyte long file in the FileList.  The new limit is still finite, but corresponds to the practical limit of single paragraphs.Also updates the text of the command-key help window."!!ChangeList class methodsFor: 'public access' stamp: 'di 1/28/1999 08:12'!browseVersionsOf: method class: class meta: meta		category: category selector: selector 	| changeList |	Cursor read showWhile:		[changeList _ self new			scanVersionsOf: method class: class meta: meta			category: category selector: selector].	changeList		ifNil:			[self inform: 'No versions available']		ifNotNil:			[changeList listHasSingleEntry ifTrue:				[(self confirm:'No older versions of this method.View the current version anyway?')					ifFalse: [^ self]].			self open: changeList name: 'Recent versions of ' ,selector multiSelect: false]! !!Form methodsFor: 'transitions' stamp: 'di 1/28/1999 09:20'!zoomIn: goingIn orOutTo: otherImage at: topLeft vanishingPoint: vp 	"Display zoomInTo: (Form fromDisplay: (40@40 extent: 300@300)) reverse at: 40@40.	Display zoomOutTo: (Form fromDisplay: (40@40 extent: 300@300)) reverse at: 40@40."	| nSteps j bigR lilR minTime startTime lead |	nSteps _ 16.	minTime _ 500.  "milliseconds"	startTime _ Time millisecondClockValue.	^ self wipeImage: otherImage at: topLeft clippingBox: nil rectForIndex:		[:i | "i runs from 1 to nsteps"		i > nSteps			ifTrue: [nil "indicates all done"]			ifFalse:			["If we are going too fast, delay for a bit"			lead _ startTime + (i-1*minTime//nSteps) - Time millisecondClockValue.			lead > 10 ifTrue: [(Delay forMilliseconds: lead) wait].			"Return an array with the difference rectangles for this step."			j _ goingIn ifTrue: [i] ifFalse: [nSteps+1-i].			bigR _ vp - (vp*(j)//nSteps) corner:				vp + (otherImage extent-vp*(j)//nSteps).			lilR _ vp - (vp*(j-1)//nSteps) corner:				vp + (otherImage extent-vp*(j-1)//nSteps).			bigR areasOutside: lilR]]! !!TextMorph methodsFor: 'geometry' stamp: 'di 1/28/1999 09:20'!container	"Return the container for composing this text.  There are four cases:	1.  container is specified as, eg, an arbitrary shape,	2.  container is specified as the bound rectangle, because		this morph is linked to others,	3.  container is nil, and wrap is true -- grow downward as necessary,	4.  container is nil, and wrap is false -- grow in 2D as nexessary."	container ifNil:		[successor ifNotNil: [^ self bounds].		wrapFlag ifTrue: [^ self bounds withHeight: 9999999].		^ self position extent: 9999999@9999999].	^ container! !!Utilities class methodsFor: 'support windows' stamp: 'di 1/28/1999 09:37'!commandKeyMappings	^ self class firstCommentAt: #commandKeyMappings"Lower-case command keysa	Select allb	Browse it (selection is a class name)c	Copyd	Do it (selection is a valid expression)e	Exchangef	Findg	Find againh	Set Search Stringi	Inspect it (selection is a valid expression)j	Again oncek	Set fontl	Cancelm	Implementors of it (selection is a message selector)n	Senders of it (selection is a message selector)o	Spawnp	Print it (selection is a valid expression)q	Query symbolr	Recognizers	Save (i.e. accept)u	Alignv	Pastew	Delete preceding wordx	Cuty	Swap charactersz	UndoNote: for Do it, Senders of it, etc., a null selection will be expanded to a word or to the current line in an attempt to do what you want.  Also note that Senders/Implementors of it will find the outermost keyword selector in a large selection, as when you have selected a bracketed expression or an entire line.  Finally note that the same cmd-m and cmd-n (and cmd-v for versions) work in the message pane of most browsers.Upper-case command keys (Hold down Cmd & Shift, or Ctrl key)A	Advance argumentB	Browse it in this same browser (in System browsers only)C	Compare argument to clipboardD	DuplicateE	Method strings containing itF	Insert 'ifFalse:'J	Again manyK	Set styleL	Outdent (move selection one tab-stop left)N	References to itR	Indent (move selection one tab-stap right)S	SearchT	Insert 'ifTrue:'U	Convert linefeeds to carriage returns in selectionV	Paste author's initialsW	Selectors containing itX	Force selection to lowercaseY	Force selection to uppercaseZ	Capitalize all words in selection<return>		Insert return followed by as many tabs as the previous line			(with a further adjustment for additional brackets in that line)esc			Select current type-inshift-delete	Forward delete characterEnclose the selection in a kind of bracket.  Each is a toggle.Control-(	Enclose within ( and ), or remove enclosing ( and )[	Enclose within [ and ], or remove enclosing [ and ]{	Enclose within { and }, or remove enclosing { and }<	Enclose within < and >, or remove enclosing < and >'	Enclose within ' and ', or remove enclosing ' and '""	Enclose within "" and "", or remove enclosing "" and ""Note also that you can double-click just inside any of the above delimiters (or at the beginning or end of a line) to select the text enclosed.Text Emphasis...1	10 point font2	12 point font3	18 point font4	24 point font5	36 point font6	color, action-on-click, link to class comment, link to method, url	Brings up a menu.  To remove these properties, select	more than the active part and then use command-0.7	bold8	italic9	narrow (same as negative kern)0	plain text (resets all emphasis)-	underlined (toggles it)=	struck out (toggles it)Cmd-shift_ (aka shift -)	negative kern (letters 1 pixel closer)+		positive kern (letters 1 pixel larger spread)"! !