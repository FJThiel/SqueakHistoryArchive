'From Squeak2.9alpha of 13 June 2000 [latest update: #2887] on 24 October 2000 at 6:59:20 pm'!"Change Set:		RegistryFix-arDate:			24 October 2000Author:			Andreas RaabA preliminary fix for the finalization problem identified by John Macintosh."!!WeakKeyDictionary methodsFor: 'finalization' stamp: 'ar 10/21/2000 20:00'!finalizeValues	"remove all nil keys and rehash the receiver afterwards"	| assoc |	1 to: array size do:[:i|		assoc _ array at: i.		(assoc notNil and:[assoc key == nil]) ifTrue:[array at: i put: nil].	].	self rehash.! !!WeakKeyDictionary methodsFor: 'finalization' stamp: 'ar 10/21/2000 20:01'!finalizeValues: finiObjects	"Remove all associations with key == nil and value is in finiObjects.	This method is folded with #rehash for efficiency."	| oldArray assoc newIndex |	oldArray _ array.	array _ Array new: oldArray size.	tally _ 0.	1 to: array size do:[:i|		assoc _ oldArray at: i.		assoc ifNotNil:[			(assoc key == nil and:[finiObjects includes: assoc value]) ifFalse:[				newIndex _ self scanForNil: assoc key.				self atNewIndex: newIndex put: assoc].		].	].! !!WeakKeyDictionary methodsFor: 'private' stamp: 'ar 10/21/2000 19:58'!fixCollisionsFrom: oldIndex	"The element at index has been removed and replaced by nil."	self rehash. "Do it the hard way - we may have any number of nil keys and #rehash deals with them"! !!WeakKeyDictionary methodsFor: 'private' stamp: 'ar 10/21/2000 19:56'!rehash	"Rehash the receiver. Reimplemented to allow for multiple nil keys"	| oldArray assoc newIndex |	oldArray _ array.	array _ Array new: oldArray size.	tally _ 0.	1 to: array size do:[:i|		assoc _ oldArray at: i.		assoc ifNotNil:[			newIndex _ self scanForNil: assoc key.			self atNewIndex: newIndex put: assoc.		].	].! !!WeakKeyDictionary methodsFor: 'private' stamp: 'ar 10/21/2000 19:46'!scanFor: anObject	"ar 10/21/2000: The method has been copied to this location to indicate that whenever #scanFor: changes #scanForNil: must be changed in the receiver as well."	"Scan the key array for the first slot containing either a nil (indicating an empty slot) or an element that matches anObject. Answer the index of that slot or zero if no slot is found. This method will be overridden in various subclasses that have different interpretations for matching elements."	| element start finish |	start _ (anObject hash \\ array size) + 1.	finish _ array size.	"Search from (hash mod size) to the end."	start to: finish do:		[:index | ((element _ array at: index) == nil or: [element key = anObject])			ifTrue: [^ index ]].	"Search from 1 to where we started."	1 to: start-1 do:		[:index | ((element _ array at: index) == nil or: [element key = anObject])			ifTrue: [^ index ]].	^ 0  "No match AND no empty slot"! !!WeakKeyDictionary methodsFor: 'private' stamp: 'ar 10/21/2000 19:46'!scanForNil: anObject	"Private. Scan the key array for the first slot containing nil (indicating an empty slot). Answer the index of that slot."	| start finish |	start _ (anObject hash \\ array size) + 1.	finish _ array size.	"Search from (hash mod size) to the end."	start to: finish do:		[:index | (array at: index) == nil ifTrue: [^ index ]].	"Search from 1 to where we started."	1 to: start-1 do:		[:index | (array at: index) == nil ifTrue: [^ index ]].	^ 0  "No match AND no empty slot"! !!WeakRegistry methodsFor: 'finalization' stamp: 'ar 10/22/2000 20:24'!finalizeValues	"Some of our elements may have gone away. Look for those and activate the associated executors."	| finiObjects |	finiObjects := nil.	"First collect the objects."	self protected:[		valueDictionary associationsDo:[:assoc|			assoc key isNil ifTrue:[				finiObjects isNil 					ifTrue:[finiObjects := OrderedCollection with: assoc value]					ifFalse:[finiObjects add: assoc value]]		].		finiObjects isNil ifFalse:[valueDictionary finalizeValues: finiObjects asArray].	].	"Then do the finalization"	finiObjects isNil ifTrue:[^self].	finiObjects do:[:each| each finalize].! !