'From Squeak 2.3 of January 14, 1999 on 19 April 1999 at 2:41:40 pm'!"Change Set:		WindowDrag-arDate:			19 April 1999Author:			Andreas RaabThis change set adds a preference for dragging windows if clicked inside the label area. If #allowLabelDragging is set to true you can move any system window by clicking inside the label area.Note: This will only affect newly created system windows."!!Preferences class methodsFor: 'initialization' stamp: 'ar 4/19/1999 14:40'!chooseInitialSettings	"Restore the default choices for Preferences."	"Preferences chooseInitialSettings"	#(	(allowLabelDragging				false)		(allowSoundQuickStart				false)		(allowSysWindowEmbedding			false)		(automaticViewerPlacement			true)		(balloonHelpEnabled					true)		(browseWithPrettyPrint				false)		(cmdDotEnabled						true)		(confirmFirstUseOfStyle				true)		(disableSounds						false)		(fastDragWindowForMorphic			false)		(fenceEnabled						true)		(ignoreStyleIfOnlyBold				true)		(inboardScrollbars					false)		(logDebuggerStackToFile				true)		(mouseOverHaloseEnabled			false)		(noviceMode							false)		(printAlternateSyntax				false)		(reverseWindowStagger				true)		(showDebugHaloHandle				true)		(showDiffsInChangeList				true)		(showTimeStampsInMenuTitles		false)		(showProjectZoom					false)		(suppressCheckForSlips				false)		(suppressUpdateServerPrompt		false)		(thoroughSenders					true)		(unlimitedPaintArea					false)		(updateSavesFile						false)		(useAnnotationPanes				false)		(useGlobalFlaps						true)		(warnIfNoChangesFile				true)		(warnIfNoSourcesFile				true))	do:		[:aPair |			aPair last == #true				ifTrue:					[self enable: aPair first]				ifFalse:					[self disable: aPair first]]! !!Preferences class methodsFor: 'initialization' stamp: 'ar 4/19/1999 14:40'!initializeHelpMessages	"Preferences initializeHelpMessages"  	HelpDictionary _ Dictionary new.	#((allowLabelDragging'If true, allow dragging of system windows when clicking on the label')(allowSoundQuickStart'If true, attempt to start playing sounds using optional "quick start"')(allowSysWindowEmbedding'Determines whether, in Morphic, SystemWindows should automatically be droppable into willing receptors')(automaticViewerPlacement'If true, new viewers are automatically positioned near the objects they view; if false, new viewers are attached to the hand, from whence you much choose a destination for them')(balloonHelpEnabled'Whether balloon help should be offered when the cursor lingers over certain objects.')(browseWithPrettyPrint'If true, browsers will automatically format their contents')(cautionBeforeClosing 'If true, Morphic windows seen in an mvc project will put up a warning before allowing themselves to be dismissed')(cmdDotEnabled'If true, cmd-dot brings up a debugger;if false, the cmd-dot interrupt is disabled')(confirmFirstUseOfStyle'If true, the first attempt to submit a method with non-standard style will bring up a confirmation dialog')(disableSounds'If true, all sound playing is disabled')	(editPlayerScriptsInPlace 'If true, textual player scripts are edited in place in Scriptors (still imperfectly implemented)')(eToyScheme'If true, new scripting spaces place the Playfield to the left and the the palette to the right of the window; if false, the opposite is true.')(fastDragWindowForMorphic'If true, morphic window drag will be done by dragging an outline of the window.')(fenceEnabled'Whether an object obeying motion scripts should stop moving when it reaches the edge of its container.')(ignoreStyleIfOnlyBold'If true, then any method submission in which the only style change is for bolding will be treated as a method with no style specifications')(inboardScrollbars'If true, then ScrollPane will place scrollbars inside on the right and will not hide them on exit')(logDebuggerStackToFile'If true, whenever you fall into a debugger a summary of its stack will be written to a file named''SqueakDebug.log''')(mouseOverHalosEnabled'If false, halos will not be put up on mouseovers even if they otherwise might be.')(noviceMode 'If true, certain novice-mode accommodations are made.')(printAlternateSyntax'If true, thenprettyPrint using experimental syntax.Otherwise use normal ST-80 syntax.')(reverseWindowStagger'If true, a reverse-stagger strategy  is used for determining where newly launched windows will be placed; if false, a direct- stagger strategy is used.')(showDebugHaloHandle 'If true, a special debugging halo handle is displayed at the right of the halo; if false, no such handle is shown.')(showDiffsInChangeList'If true, changeList browsers and Versions browsers reveal the differences between successive versions or between the in-memory code and the code on disk')(showPlayerSource'If true, then all Player methods with fewer than 2 arguments are included in Viewers, whether or not they are intended for end-user use.  This can be dangerous')(showProjectZoom'If true, then show a zoom effect when entering or leaving projects.  This can be costly of memory (at least an extra screen buffer) so dont use it in low space situations.  But it is cool.')(showScriptSource'If true, then the actual Smalltalk source code for methods is shown in the detail panes for scripts in a viewer; if false, then a help message for scripts is shown instead.')(showTimeStampsInMenuTitles'If true, then the author''s timestamp is displayed as the menu title of any message list; if false, no author''s timestamps are shown')(suppressCheckForSlips 'If false, then whenever you file out a change set, it is checked for ''slips'' and if any are found, you are so informed and given a chance to open a browser on them')(suppressUpdateServerPrompt'If true, the prompt for server choice when updating code from the server is suppressed.  Set this to true to leave the server choice unchanged from update to update.')(thoroughSenders'If true, then ''senders'' browsers will dive inside structured literals in their search')(uniformWindowColors'If true, then all standard windows are given the same color rather than their customized window-type-specific colors')(unlimitedPaintArea'If true, the painting area for a new drawing will not be limited in size; if false, a reasonablelimit will be applied, in an attempt to hold down memory and time price.')(updateRemoveSequenceNum'If true, then remove the leading sequence number from the filename before automatically saving a local copy of any update loaded.')(updateSavesFile'If true, then when an update is loaded from the server, a copy of it will automatically be saved on a local file as well.')(useAnnotationPanes'If true, a thin horizontal annotation pane is used in message-list browsers.')(useDetailPanesInViewers'If true, then Viewers will have an extra "¦" control at the left of each row, the hitting of which toggles the appearance of a textual detail pane.')(useGlobalFlaps'If true, then flaps are shown along the edges of Morphic projects.')(useNewViewers'If true, then the new kinds of viewers introduced in Squeak 2.3 are used; if false, then the old style, from earlier releases, are still used.  Old viewers will hopefully soon be removed from the system.')(warnIfNoChangesFile'If true, then you will be warned, whenever you start up, if no changes filecan be found')(warnIfNoSourcesFile 'If true, then you will be warned, whenever you start up, if no sources file can be found')) do:		[:pair | HelpDictionary at: pair first put: 			(pair first, ':', pair last)]! !!SystemWindow methodsFor: 'initialization' stamp: 'ar 4/19/1999 14:30'!initialize	| aFont |	super initialize.	isCollapsed _ false.	activeOnlyOnTop _ true.	paneMorphs _ Array new.	paneRects _ Array new.	borderColor _ #raised.	borderWidth _ 1.	color _ Color black.	aFont _ Preferences fontForScriptorButtons.	stripes _ Array with: (RectangleMorph newBounds: bounds)  "see extent:"				with: (RectangleMorph newBounds: bounds).	self addMorph: (stripes first borderWidth: 1).	self addMorph: (stripes second borderWidth: 2).	self addMorph: (label _ StringMorph new contents: labelString;			font: (TextStyle default fontAt: 2) emphasis: 1).	self addMorph: (closeBox _ SimpleButtonMorph new borderWidth: 0;			label: 'X' font: aFont; color: Color transparent;			actionSelector: #delete; target: self; extent: 16@16).	self addMorph: (collapseBox _ SimpleButtonMorph new borderWidth: 0;			label: 'O' font: aFont; color: Color transparent;			actionSelector: #collapseOrExpand; target: self; extent: 16@16).	Preferences noviceMode ifTrue:		[closeBox setBalloonText: 'close window'.		collapseBox 	setBalloonText: 'collapse/expand window'].	self on: #mouseEnter send: #spawnReframeHandle: to: self.	self on: #mouseLeave send: #spawnReframeHandle: to: self.	label on: #mouseDown send: #relabelEvent: to: self.	self extent: 300@200! !!SystemWindow methodsFor: 'label' stamp: 'ar 4/19/1999 14:40'!relabelEvent: evt	^Preferences allowLabelDragging		ifTrue:[self mouseDown: evt]		ifFalse:[self relabel]! !