'From Squeak2.9alpha of 17 July 2000 [latest update: #3146] on 8 December 2000 at 4:27:27 pm'!"Change Set:		multiResumeDate:			8 December 2000Author:			Bob Arning- change to permit signalling and resuming more than once within a block- modified test suite to try this"!!Exception methodsFor: 'signaledException' stamp: 'RAA 12/8/2000 16:26'!resume	"Return from the message that signaled the receiver."	^self resume: nil! !!Exception methodsFor: 'signaledException' stamp: 'RAA 12/8/2000 16:26'!resume: resumptionValue	"Return the argument as the value of the message that signaled the receiver."	| tc |	handlerContext ifNotNil: [handlerContext tempAt: 3 put: true].	self isResumable ifFalse: [IllegalResumeAttempt signal].	tc := thisContext.	tc unwindTo: initialContext.	tc terminateTo: initialContext.	^resumptionValue! !!ExceptionTester methodsFor: 'signaledException tests' stamp: 'RAA 12/8/2000 12:58'!simpleResumeTest	"see if we can resume twice"	| it |	[self doSomething.	it := MyResumableTestError signal.	it = 3 ifTrue: [self doSomethingElse].	it := MyResumableTestError signal.	it = 3 ifTrue: [self doSomethingElse].	]		on: MyResumableTestError		do:			[:ex |			self doYetAnotherThing.			ex resume: 3]! !!ExceptionTester methodsFor: 'signaledException results' stamp: 'RAA 12/8/2000 12:59'!simpleResumeTestResults	"see if we can resume twice"	^OrderedCollection new			add: self doSomethingString;			add: self doYetAnotherThingString;			add: self doSomethingElseString;			add: self doYetAnotherThingString;			add: self doSomethingElseString;			yourself! !