'From Squeak2.8alpha of 16 February 2000 [latest update: #1866] on 18 February 2000 at 11:16:38 am'!"Change Set:		NilColors-arDate:			18 February 2000Author:			Andreas RaabBullet proofing against passing nil as colors."!!FormCanvas methodsFor: 'private' stamp: 'ar 2/18/2000 11:14'!setClearColor: aColor	"Install a new clear color - e.g., a color is used for clearing the background"	| clearColor |	clearColor _ aColor ifNil:[Color transparent].	clearColor isColor ifFalse:[		(clearColor isKindOf: InfiniteForm) ifFalse:[^self error:'Cannot install color'].		^port fillPattern: clearColor; combinationRule: Form over].	"Okay, so clearColor really *is* a color"	port sourceForm: nil.	port combinationRule: Form over.	port fillPattern: clearColor.! !!FormCanvas methodsFor: 'private' stamp: 'ar 2/18/2000 11:15'!setFillColor: aColor	"Install a new color used for filling."	| screen patternWord fillColor |	fillColor _ self shadowColor ifNil:[aColor].	fillColor ifNil:[fillColor _ Color transparent].	fillColor isColor ifFalse:[		(fillColor isKindOf: InfiniteForm) ifFalse:[^self error:'Cannot install color'].		^port fillPattern: fillColor; combinationRule: Form over].	"Okay, so fillColor really *is* a color"	port sourceForm: nil.	fillColor isTranslucent ifFalse:[		port combinationRule: Form over.		^port fillPattern: fillColor].	"fillColor is some translucent color"	self depth > 8 ifTrue:[		"We can represent actual transparency"		port fillPattern: fillColor.		self depth = 16			ifTrue:[port alphaBits: fillColor privateAlpha; combinationRule: 30]			ifFalse:[port combinationRule: Form blend].		^self].	"Less than 16bit depth -- use stipple pattern"	screen _ Color translucentMaskFor: fillColor alpha depth: self depth.	patternWord _ fillColor pixelWordForDepth: self depth.	port fillPattern: (screen collect: [:maskWord | maskWord bitAnd: patternWord]).	port combinationRule: Form paint.! !!FormCanvas methodsFor: 'private' stamp: 'ar 2/18/2000 11:15'!setPaintColor: aColor	"Install a new color used for filling."	| paintColor screen patternWord |	paintColor _ self shadowColor ifNil:[aColor].	paintColor ifNil:[paintColor _ Color transparent].	paintColor isColor ifFalse:[		(paintColor isKindOf: InfiniteForm) ifFalse:[^self error:'Cannot install color'].		^port fillPattern: paintColor; combinationRule: Form paint].	"Okay, so paintColor really *is* a color"	port sourceForm: nil.	(paintColor isTranslucent) ifFalse:[		port fillPattern: paintColor.		^port combinationRule: Form paint].	self depth < 16 ifTrue:[		screen _ Color translucentMaskFor: paintColor alpha depth: self depth.		patternWord _ paintColor pixelWordForDepth: self depth.		port fillPattern: (screen collect: [:maskWord | maskWord bitAnd: patternWord]).		^port combinationRule: Form paint].	port fillPattern: paintColor.	self depth = 16		ifTrue:[port alphaBits: paintColor privateAlpha; combinationRule: 31]		ifFalse:[port combinationRule: Form blend].! !