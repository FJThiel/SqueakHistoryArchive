'From Squeak 2.3 of January 14, 1999 on 4 February 1999 at 12:03:35 pm'!"Change Set:		updateFromDiskDate:			4 February 1999Author:			Scott WallaceProvides a way that users can update their systems from locally-stored copies of update files, which could be distributed by e-mail.  To use, place all update files in a folder named 'updates' which resides in the same directory as your image.  After you've added new files to that folder, you can evaluate	Utilities applyUpdatesFromDisk and all the updates in that updates folder that have not yet been loaded into your image will be loaded, one at a time.  For this mechanism to work, updates need to be issued in strict numeric order -- which we always do in practice, though the update-list-on-server mechanism makes it mechanically possible to violate that practice."!!Utilities class methodsFor: 'fetching updates' stamp: 'sw 2/4/1999 11:57'!applyUpdatesFromDisk	"To use this mechanism, be sure all updates you want to have considered are in a folder named 'updates' which resides in the same directory as your image.  Having done that, simply evaluate:	Utilities applyUpdatesFromDiskand all numbered updates not yet in the image will be loaded, in numerical order."	| previousHighest currentUpdateNumber done fileNames aMessage updateDirectory loaded |	previousHighest _ ChangeSorter highestNumberedChangeSet.	currentUpdateNumber _ previousHighest.	done _ false.	(FileDirectory default directoryNames includes: 'updates') ifFalse:		[^ self inform: 'Error: cannot find "updates" folder'].	updateDirectory _ FileDirectory default directoryNamed: 'updates'.	[done] whileFalse:		[currentUpdateNumber _ currentUpdateNumber + 1.		fileNames _ updateDirectory fileNamesMatching: (currentUpdateNumber printString, '*').		fileNames size > 1 ifTrue: [^ self inform: 'ambiguity -- two files both start with ', currentUpdateNumber printString, '(at this point it is probably best to remedythe situation on disk, then try again.)'].		fileNames size == 0			ifTrue:				[done _ true]			ifFalse:				[ChangeSorter newChangesFromStream: (updateDirectory readOnlyFileNamed: fileNames first) 					named: fileNames first]].	aMessage _ (loaded _ currentUpdateNumber - previousHighest - 1) = 0		ifTrue:			['No new updates found.']		ifFalse:			[loaded printString, ' update(s) loaded.'].	self inform: aMessage, 'Highest numbered update is now ', (currentUpdateNumber - 1) printString, '.'		! !