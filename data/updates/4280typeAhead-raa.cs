'From Squeak3.1alpha of 5 February 2001 [latest update: #4269] on 22 August 2001 at 6:02:40 pm'!"Change Set:		typeAheadDate:			22 August 2001Author:			Bob ArningEnable (re-enable?) the type-ahead handling in Morphic"!!HandMorph methodsFor: 'event handling' stamp: 'RAA 8/22/2001 17:07'!checkForMoreKeyboard	"Quick check for more keyboard activity -- Allows, eg, many characters	to be accumulated into a single replacement during type-in."	| evtBuf |	self flag: #arNote. "Will not work if we don't examine event queue in Sensor"	evtBuf _ (Sensor eventQueue ifNil: [^nil]) nextOrNilSuchThat: [ :buf |		(buf at: 1) = EventTypeKeyboard and: [(buf at: 4) = EventKeyChar] 	].	evtBuf ifNil: [^nil].	^self generateKeyboardEvent: evtBuf! !!SharedQueue methodsFor: 'accessing' stamp: 'RAA 8/22/2001 17:59'!nextOrNilSuchThat: aBlock	"Answer the next object that satisfies aBlock, skipping any intermediate objects. If no object has been sent, answer <nil> and leave me intact."	| value readPos |	accessProtect critical: [		value _ nil.		readPos _ readPosition.		[readPos < writePosition and: [value isNil]] whileTrue: [			value _ contentsArray at: readPos.			readPos _ readPos + 1.			(aBlock value: value) ifTrue: [				readPosition to: readPos - 1 do: [ :j |					contentsArray at: j put: nil.				].				readPosition _ readPos.			] ifFalse: [				value _ nil.			].		].		readPosition >= writePosition ifTrue: [readSynch initSignals].	].	^value"===q _ SharedQueue new.1 to: 10 do: [ :i | q nextPut: i].c _ OrderedCollection new.[	v _ q nextOrNilSuchThat: [ :e | e odd].	v notNil] whileTrue: [	c add: {v. q size}].{c. q} explore==="! !