'From Squeak 2.2 of Sept 23, 1998 on 14 October 1998 at 12:56:09 pm'!"Change Set:		jhmNetInitFixDate:			14 October 1998Author:			John MaloneyFixes a problem introduced by fixing the Socket double-initializationbug. Namely, the socket creation code was doing a network initialize,but is no longer doing so. This fix makes sure that clients are doingtheir own network initialization, rather than expecting it to be doneas a side-effect of socket creation."!!MailDB methodsFor: 'fetch-import-export' stamp: 'jm 10/14/1998 12:31'!fetchMailFromPOP: server userName: userName password: password doFormatting: doFormatting deleteFromServer: deleteFromServer	"Download mail from the given POP3 mail server and append it this mail database. Answer the number of messages fetched. If doFormatting is true, messages will be formatted as they are received. If deleteFromServer is true, then messages will be removed from the POP3 server after being successfully retrieved. (Note: If there is a failure while fetching mail, all messages will be left on the server.)"	| popConnection msgCount |	Socket initializeNetwork.	popConnection _ POPSocket new		serverName: server;			userName: userName;		password: password;		addProgressObserver: Transcript.	Utilities		informUser: 'connecting to ', server		during: [popConnection connectToPOP].	popConnection isConnected ifFalse: [^ -1].	msgCount _ popConnection numMessages.	msgCount > 0 ifTrue: [		self fetchMessageCount: msgCount			fromPOPConnection: popConnection			doFormatting: doFormatting.		deleteFromServer ifTrue: [			self removeMessageCount: msgCount fromPOPConnection: popConnection]].	popConnection disconnectFromPOP.	^ msgCount! !!POPSocket methodsFor: 'low-level protocol' stamp: 'jm 10/14/1998 12:51'!connectToPOP	"connect to the POP server"	| address response |	Socket initializeNetwork.	address _ NetNameResolver addressForName: serverName timeout: 15.	address = nil ifTrue: [		self error: 'Could not find host address'].	"connect the socket"	self connectTo: address port: 110.	(self waitForConnectionUntil: POPSocket standardDeadline) ifFalse: [		self close.		self reportToObservers: 'failed to connect to server'.		^false ].	"get a hello message"	self reportToObservers: (response _ self getResponse).	(response beginsWith: '+') ifFalse: [ self close.  ^false ].	"login"	self sendCommand: 'USER ', userName.	self reportToObservers: (response _ self getResponse).	(response beginsWith: '+') ifFalse: [ self close. ^false ].	self sendCommand: 'PASS ', password.	self reportToObservers: (response _ self getResponse).	(response beginsWith: '+') ifFalse: [ self close. ^false ].	^true! !!SMTPSocket methodsFor: 'low-level protocol' stamp: 'jm 10/14/1998 12:52'!connectToSMTPServer: serverName	"connect to the given server on the SMTP port"	| addr |	Socket initializeNetwork.	addr _ NetNameResolver addressForName: serverName.	addr ifNil: [self error: 'Could not find host address'].	Transcript show: 'connecting to ', serverName, '...'.	self connectTo: addr  port: 25.	self waitForConnectionUntil: Socket standardDeadline.	self isConnected ifFalse: [		^false ].	self checkSMTPResponse.	self sendCommand: 'HELO aSqueakSystem'.	self checkSMTPResponse.	^true! !!Socket class methodsFor: 'instance creation' stamp: 'jm 10/14/1998 12:08'!new	"Return a new, unconnected Socket. Note that since socket creation may fail, it is safer to use the method createIfFail: to handle such failures gracefully; this method is primarily for backward compatibility and may be disallowed in a future release."	^ super new initialize! !POPSocket class removeSelector: #getMessagesNotifying:andForEachDo:!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."!