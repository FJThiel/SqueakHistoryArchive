'From Squeak2.9alpha of 17 July 2000 [latest update: #2937] on 2 November 2000 at 10:41:16 am'!"Change Set:		scrunchedNameDate:			1 November 2000Author:			Bob Arning- restore scaling of long project names in ProjectViewMorph (was lost when names were made directly editable)"!!HandMorph methodsFor: 'object fileIn' stamp: 'RAA 11/2/2000 10:34'!convertbosfcemkemkmmlltdccttrthsul0: varDict bosfcemkemkmmltdcctthsul0: smartRefStrm	"These variables are automatically stored into the new instance #('bounds' 'owner' 'submorphs' 'fullBounds' 'color' 'extension' 'mouseFocus' 'keyboardFocus' 'eventListeners' 'mouseListeners' 'keyboardListeners' 'mouseClickState' 'mouseOverHandler' 'lastMouseEvent' 'targetOffset' 'damageRecorder' 'cacheCanvas' 'cachedCanvasHasHoles' 'temporaryCursor' 'temporaryCursorOffset' 'hasChanged' 'savedPatch' 'userInitials' 'lastEventBuffer').	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."		"These are going away #('lastEvent' 'remoteConnections' 'transmitBuffer').  Possibly store their info in another variable?"! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/1/2000 22:49'!drawOn: aCanvas	| font projectName nameForm rectForName |	self ensureImageReady.	super drawOn: aCanvas.	self isEditingName ifTrue: [^self].	font _ self fontForName.	projectName _ self safeProjectName.	nameForm _ (StringMorph contents: projectName font: font) imageForm.	nameForm _ nameForm scaledToSize: (self extent - (4@2) min: nameForm extent).	rectForName _ self bottomLeft + 			(self width - nameForm width // 2 @ (nameForm height + 2) negated)				extent: nameForm extent.	rectForName topLeft eightNeighbors do: [ :pt |		aCanvas			stencil: nameForm 			at: pt			color: self colorAroundName.	].	aCanvas		stencil: nameForm 		at: rectForName topLeft 		color: Color black.	! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/2/2000 10:39'!ensureImageReady	self isTheRealProjectPresent ifFalse: [^self].	project thumbnail ifNil: [		image fill: image boundingBox rule: Form over 			fillColor: project defaultBackgroundColor.		^self	].	project thumbnail ~~ lastProjectThumbnail ifTrue: ["scale thumbnail to fit my bounds"		lastProjectThumbnail _ project thumbnail.		self updateImageFrom: lastProjectThumbnail.		image borderWidth: 1	].! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/1/2000 22:45'!isEditingName	| nameMorph |	nameMorph _ self findA: UpdatingStringMorph.	nameMorph ifNil: [^false].	^nameMorph hasFocus! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/2/2000 10:38'!isTheRealProjectPresent	project ifNil: [^ false].	project isInMemory ifFalse: [^ false].	project class == DiskProxy ifTrue: [^ false].	^true! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/2/2000 10:39'!safeProjectName	| projectName |	projectName _ self valueOfProperty: #SafeProjectName ifAbsent: ['???'].	self isTheRealProjectPresent ifFalse: [^ projectName].	self setProperty: #SafeProjectName toValue: project name.	^project name! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/2/2000 10:39'!safeProjectName: aString	self addProjectNameMorphFiller.	self isTheRealProjectPresent ifFalse: [^ self].	aString = project name ifFalse: [project changeSet name: aString].	self setProperty: #SafeProjectName toValue: project name.	self updateNamePosition.	(owner isKindOf: SystemWindow) ifTrue: [owner setLabel: aString].! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'RAA 11/2/2000 10:11'!updateNamePosition	| nameMorph shadowMorph nameFillerMorph |	(nameMorph _ self findA: UpdatingStringMorph) ifNotNil: [		nameMorph position:			(self left + (self width - nameMorph width // 2)) @			(self bottom - nameMorph height - 2).	].	(nameFillerMorph _ self findA: AlignmentMorph) ifNotNil: [		nameFillerMorph			position: self bottomLeft - (0@20);			extent: self width@20.	].	(shadowMorph _ self findA: ImageMorph) ifNotNil: [		shadowMorph delete	"no longer used"	].! !!ProjectViewMorph methodsFor: 'events' stamp: 'RAA 11/2/2000 10:39'!acceptDroppingMorph: morphToDrop event: evt	| myCopy smallR |	(self isTheRealProjectPresent) ifFalse: [		^morphToDrop rejectDropMorphEvent: evt.		"can't handle it right now"	].	(morphToDrop isKindOf: NewHandleMorph) ifTrue: [	"don't send these"		^morphToDrop rejectDropMorphEvent: evt.	].	self eToyRejectDropMorph: morphToDrop event: evt.		"we will send a copy"	myCopy _ morphToDrop veryDeepCopy.	"gradient fills require doing this second"	smallR _ (morphToDrop bounds scaleBy: image height / Display height) rounded.	smallR _ smallR squishedWithin: image boundingBox.	image getCanvas		paintImage: (morphToDrop imageForm scaledToSize: smallR extent)		at: smallR topLeft.	myCopy openInWorld: project world! !!ProjectViewMorph methodsFor: 'events' stamp: 'RAA 11/2/2000 10:06'!initialize	super initialize.	currentBorderColor _ Color gray.	self addProjectNameMorphFiller.! !!ProjectViewMorph methodsFor: 'events' stamp: 'RAA 11/2/2000 10:06'!on: aProject	project _ aProject.	self addProjectNameMorphFiller.	lastProjectThumbnail _ nil.	project thumbnail		ifNil: [self extent: 100@80]		"more like screen dimensions?"		ifNotNil: [self extent: project thumbnail extent].! !!ProjectViewMorph methodsFor: 'events' stamp: 'RAA 11/2/2000 10:06'!project: aProject	project _ aProject.	self addProjectNameMorphFiller.! !!ProjectViewMorph methodsFor: 'events' stamp: 'raa 11/2/2000 10:29'!seeIfNameChanged	| nameBefore nameNow |	nameBefore _ self valueOfProperty: #SafeProjectName ifAbsent: ['???'].	nameNow _ self safeProjectName.	(submorphs notEmpty and: [nameBefore = nameNow]) ifTrue: [^self].	self addProjectNameMorphFiller.! !!ProjectViewMorph methodsFor: 'events' stamp: 'raa 11/2/2000 10:20'!step	| cmd |	"Check for a command that could not be executed in my subproject.  Once it is done, remove the trigger.  If this is too slow, make armsLengthCmd an inst var."	self seeIfNameChanged.	cmd _ self valueOfProperty: #armsLengthCmd.	cmd ifNil: [^ super step].	self removeProperty: #armsLengthCmd.	project perform: cmd.	project enter.! !!ProjectViewMorph methodsFor: 'events' stamp: 'raa 11/2/2000 10:21'!stepTime	^1000! !!ProjectViewMorph methodsFor: 'as yet unclassified' stamp: 'RAA 11/2/2000 09:56'!addProjectNameMorph	| m |	self removeAllMorphs.	m _ UpdatingStringMorph contents: self safeProjectName font: self fontForName.	m target: self; getSelector: #safeProjectName; putSelector: #safeProjectName:.	m useStringFormat; fitContents.	self addMorphBack: m.	self updateNamePosition.	^m! !!ProjectViewMorph methodsFor: 'as yet unclassified' stamp: 'RAA 11/2/2000 10:12'!addProjectNameMorphFiller	| m |	self removeAllMorphs.	m _ AlignmentMorph newRow color: Color transparent.	self addMorphBack: m.	m		on: #mouseDown send: #editTheName: to: self;		on: #mouseUp send: #yourself to: self.	self updateNamePosition.! !!ProjectViewMorph methodsFor: 'as yet unclassified' stamp: 'RAA 11/2/2000 10:41'!editTheName: evt	self isTheRealProjectPresent ifFalse: [		^self inform: 'The project is not present and may not be renamed now'	].	self addProjectNameMorph launchMiniEditor: evt.! !!ProjectViewMorph methodsFor: 'as yet unclassified' stamp: 'RAA 11/2/2000 10:40'!wantsDroppedMorph: aMorph event: evt	self isTheRealProjectPresent ifFalse: [^false].	project isMorphic ifFalse: [^false].	project world viewBox ifNil: [^false].		"uninitialized"	^true! !ProjectViewMorph removeSelector: #drawOnWithNameHack:!