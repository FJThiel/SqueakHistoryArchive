'From Squeak2.9BJ of 22 September 2000 [latest update: #2752] on 28 September 2000 at 2:23:51 pm'!"Change Set:		FlapsAndNavigatorDate:			28 September 2000Author:			Andreas RaabMakes flaps and the project navigator stay at the same layer in projects, e.g., in front of a lot of other things but keeping the same relation to each other."!!Morph methodsFor: 'classification' stamp: 'ar 9/28/2000 13:52'!isFlap	^false! !!Morph methodsFor: 'classification' stamp: 'ar 9/28/2000 13:54'!isFlapOrTab	^self isFlap or:[self isFlapTab]! !!Morph methodsFor: 'classification' stamp: 'ar 9/28/2000 13:53'!isFlapTab	^false! !!Morph methodsFor: 'geometry' stamp: 'ar 9/28/2000 13:55'!shiftSubmorphsBy: delta	self shiftSubmorphsOtherThan: (submorphs select: [:m | m isFlapOrTab]) by: delta! !!EToyProjectHistoryMorph methodsFor: 'as yet unclassified' stamp: 'ar 9/28/2000 13:53'!closeMyFlapIfAny	| myFlap allTabs myTab myWorld |	myWorld _ self world.	myFlap _ self nearestOwnerThat: [ :each | each isFlap].	myFlap ifNil: [^self].	allTabs _ myWorld submorphs select: [ :each | each isFlapTab].	myTab _ allTabs detect: [ :each | each referent == myFlap] ifNone: [^self].	myTab hideFlap.	myWorld displayWorldSafely.	! !!FlapTab methodsFor: 'access' stamp: 'ar 9/28/2000 14:04'!morphicLayerNumber	^25 "As navigators"! !!FlapTab methodsFor: 'classification' stamp: 'ar 9/28/2000 13:53'!isFlapTab	^true! !!HandMorph methodsFor: 'world menu commands' stamp: 'ar 9/28/2000 13:53'!findWindow	"Present a menu names of windows and naked morphs, and activate the one that gets chosen.  Collapsed windows appear below line, expand if chosen; naked morphs appear below second line; if any of them has been given an explicit name, that is what's shown, else the class-name of the morph shows; if a naked morph is chosen, bring it to front and have it don a halo."	| menu expanded collapsed nakedMorphs |	self flag: #bob.		"which world??"	menu _ MenuMorph new.	expanded _ SystemWindow windowsIn: self world satisfying: [:w | w isCollapsed not].	collapsed _ SystemWindow windowsIn: self world satisfying: [:w | w isCollapsed].	nakedMorphs _ self world submorphsSatisfying:		[:m | ((m isKindOf: SystemWindow) not and: [(m isKindOf: StickySketchMorph) not]) and:			[(m isFlapTab) not]].	(expanded isEmpty & (collapsed isEmpty & nakedMorphs isEmpty)) ifTrue: [^ self beep].	(expanded asSortedCollection: [:w1 :w2 | w1 label caseInsensitiveLessOrEqual: w2 label]) do:		[:w | menu add: w label target: w action: #activateAndForceLabelToShow.			w model canDiscardEdits ifFalse: [menu lastItem color: Color red]].	(expanded isEmpty | (collapsed isEmpty & nakedMorphs isEmpty)) ifFalse: [menu addLine].	(collapsed asSortedCollection: [:w1 :w2 | w1 label caseInsensitiveLessOrEqual: w2 label]) do: 		[:w | menu add: w label target: w action: #collapseOrExpand.		w model canDiscardEdits ifFalse: [menu lastItem color: Color red]].	nakedMorphs isEmpty ifFalse: [menu addLine].	(nakedMorphs asSortedCollection: [:w1 :w2 | w1 nameForFindWindowFeature caseInsensitiveLessOrEqual: w2 nameForFindWindowFeature]) do:		[:w | menu add: w nameForFindWindowFeature target: w action: #comeToFrontAndAddHalo].	menu addTitle: 'find window'.		menu popUpEvent: lastEvent! !!PasteUpMorph methodsFor: 'classification' stamp: 'ar 9/28/2000 13:51'!isFlap	^self hasProperty: #flap! !!PasteUpMorph methodsFor: 'misc' stamp: 'ar 9/28/2000 13:58'!innocuousName	^ (self isFlap)		ifTrue:			['flap']		ifFalse:			[super innocuousName]! !!PasteUpMorph methodsFor: 'misc' stamp: 'ar 9/28/2000 13:57'!roundUpStrays	self submorphsDo:		[:m |			(m isFlapOrTab)				ifFalse:					[m goHome.					m isPlayfieldLike ifTrue: [m roundUpStrays]]]! !!PasteUpMorph methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:02'!bringFlapTabsToFront	self flapTabs do:		[:m | self addMorphInLayer: m]! !!PasteUpMorph methodsFor: 'flaps' stamp: 'ar 9/28/2000 13:55'!deleteAllFlapArtifacts	"self currentWorld deleteAllFlapArtifacts"	self submorphs do:[:m | m isFlapOrTab ifTrue:[m delete]]! !!PasteUpMorph methodsFor: 'flaps' stamp: 'ar 9/28/2000 13:56'!deleteGlobalFlapArtifacts	"self currentWorld deleteGlobalFlapArtifacts"	| localFlaps |	localFlaps _ self localFlapTabs collect: [:m | m referent].	self submorphs do:		[:m | 			((m isFlapTab) and: [m isGlobal]) ifTrue: [m delete].			m isFlap ifTrue:[(localFlaps includes: m) ifFalse: [m delete]]]! !!PasteUpMorph methodsFor: 'flaps' stamp: 'ar 9/28/2000 13:56'!flapTabs	^ self submorphs select:[:m| m isFlapTab]! !!PasteUpMorph methodsFor: 'flaps' stamp: 'ar 9/28/2000 13:57'!localFlapTabs	| globalList aList aFlapTab |	globalList _ Utilities globalFlapTabsIfAny.	aList _ OrderedCollection new.	submorphs do:		[:m | ((m isFlapTab) and: [(globalList includes: m) not])			ifTrue:				[aList add: m]			ifFalse:				[((m isFlap) and:					[(aFlapTab _ m submorphs detect: [:n | n isFlapTab] ifNone: [nil]) notNil])						ifTrue:							[aList add: aFlapTab]]].	^ aList! !!PasteUpMorph methodsFor: 'world state' stamp: 'ar 9/28/2000 13:55'!allNonFlapRelatedSubmorphs	"Answer all non-window submorphs that are not flap-related"	^ submorphs select:		[:m | (m isKindOf: SystemWindow) not and: [m isFlapOrTab not]]! !!PasteUpMorph methodsFor: 'accessing' stamp: 'ar 9/28/2000 14:00'!beFlap: aBool	aBool		ifTrue:[self setProperty: #flap toValue: true]		ifFalse:[self removeProperty: #flap]! !!PasteUpMorph methodsFor: 'private' stamp: 'ar 9/28/2000 14:03'!morphicLayerNumber	self isFlap ifTrue:[^25]. "As navigators"	^super morphicLayerNumber.! !!PasteUpMorph methodsFor: 'submorphs-add/remove' stamp: 'ar 9/28/2000 14:21'!addMorphInLayer: aMorph	super addMorphInLayer: aMorph.	aMorph isFlapOrTab ifFalse:[self bringFlapTabsToFront].! !!Utilities class methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:00'!menuFlap	| aFlap aFlapTab aHolder verticalHolder aMenu |	aFlap _ PasteUpMorph newSticky color: Color transparent; extent: self currentWorld width @ 264; borderWidth: 0; padding: 0.	aFlapTab _ FlapTab new referent: aFlap.	aFlapTab color: Color brown lighter.	aFlapTab assumeString: 'Menus' font: Preferences standardFlapFont orientation: #horizontal color: Color blue muchLighter.	aFlapTab setToPopOutOnMouseOver: true.	aFlapTab edgeToAdhereTo: #top; inboard: false.	aFlapTab position: ((Display width - aFlapTab width) // 2) @ 0.	aFlap beFlap: true.	aFlap color: (Color blue muchLighter alpha: 0.6).	aFlap extent: self currentWorld width @ 267.	aHolder _ AlignmentMorph newRow beSticky beTransparent.	#(openMenu helpMenu windowsMenu (changesMenu debugMenu ) (playfieldMenu scriptingMenu )) do:		[:elem |			(elem isKindOf: Array)				ifTrue:					[verticalHolder _ AlignmentMorph newColumn beSticky beTransparent.					verticalHolder hResizing: #shrinkWrap; inset: 0; centering: #center.					elem do:						[:aMenuSymbol |							verticalHolder addMorphBack: ((aMenu _ self currentHand getWorldMenu: aMenuSymbol) beSticky; stayUp: true).							aMenu beSticky.							aMenu borderWidth: 1.							aMenu submorphs second delete].					aHolder addMorphBack: verticalHolder]				ifFalse:					[aHolder addMorphBack: ((aMenu _ self currentHand getWorldMenu: elem) beSticky; stayUp: true).					aMenu submorphs second delete.					aMenu beSticky.					aMenu borderWidth: 1]].	aFlap addMorphBack: aHolder.	^ aFlapTab! !!Utilities class methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:00'!newFlapTitled: aString onEdge: anEdge	| aFlap aFlapTab  orientation |	aFlap _ PasteUpMorph newSticky.	aFlapTab _ FlapTab new referent: aFlap.	orientation _ (#(left right) includes: anEdge)		ifTrue:	[#vertical]		ifFalse:	[#horizontal].	aFlapTab assumeString: aString font: Preferences standardFlapFont orientation: orientation color: Color veryLightGray.	aFlapTab edgeToAdhereTo: anEdge; inboard: false.	anEdge == #left ifTrue:		[aFlapTab position: (0 @ 0).		aFlap extent: (200 @ self currentWorld height)].	anEdge == #right ifTrue:		[aFlapTab position: ((self currentWorld width - aFlapTab width) @ 0).		aFlap extent: (200 @ self currentWorld height)].	anEdge == #top ifTrue:		[aFlapTab position: (50 @ 0).		aFlap extent: (self currentWorld width @ 200)].	anEdge == #bottom ifTrue:		[aFlapTab position: (50 @ (self currentWorld height - aFlap height)).		aFlap extent: (self currentWorld width @ 200)].	aFlap beFlap: true.	aFlap color: (Color veryLightGray muchLighter).	^ aFlapTab! !!Utilities class methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:01'!standardBottomFlap	"Answer a fully-instantiated flap named 'Supplies' to be placed at the bottom of the screen"	|  aFlapTab aPage |	aPage _ self newPartsFlapPage.	aPage setProperty: #maximumThumbnailWidth toValue: 80.	aFlapTab _ FlapTab new referent: aPage beSticky.	aFlapTab color: Color red lighter.	aFlapTab setToPopOutOnDragOver: true.	aFlapTab setToPopOutOnMouseOver: true.	aFlapTab assumeString: 'Supplies' font: Preferences standardFlapFont orientation: #horizontal color: Color red lighter.	aFlapTab edgeToAdhereTo: #bottom; inboard: false.	aPage extent: self currentWorld width @ 100.	aPage addMorphBack: Command undoRedoButtons markAsPartsDonor.	aPage addMorphBack: TrashCanMorph new markAsPartsDonor.	aPage addMorphBack: ScriptingSystem scriptControlButtons markAsPartsDonor.	#(PaintInvokingMorph RectangleMorph EllipseMorph StarMorph  CurveMorph PolygonMorph TextMorph ) do:		[:sym | aPage addMorphBack: (Smalltalk at: sym) authoringPrototype].	aPage addMorphBack: ScriptingSystem prototypicalHolder.	aPage addMorphBack: RectangleMorph roundRectPrototype.	#(ImageMorph BasicButton SimpleSliderMorph		PasteUpMorph    BookMorph TabbedPalette 		JoystickMorph  ) do:		[:sym | aPage addMorphBack: (Smalltalk at: sym) authoringPrototype].	aPage addMorphBack: Morph new previousPageButton markAsPartsDonor.	aPage addMorphBack: Morph new nextPageButton markAsPartsDonor.	aPage addMorphBack: ScriptingSystem holderWithAlphabet markAsPartsDonor.	aPage addMorphBack: (ClockMorph authoringPrototype showSeconds: false) step.	aPage replaceTallSubmorphsByThumbnails.	aPage fixLayout.	aFlapTab position: ((Display width - aFlapTab width) // 2 @ (self currentWorld height - aFlapTab height)).	aPage beFlap: true.	aPage color: (Color red muchLighter "alpha: 0.2").	aPage extent: self currentWorld width @ 100.		^ aFlapTab! !!Utilities class methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:01'!standardLeftFlap	| aFlap aFlapTab aButton aClock buttonColor anOffset |	aFlap _ PasteUpMorph newSticky borderWidth: 0.	aFlapTab _ FlapTab new referent: aFlap.	aFlapTab assumeString: 'Squeak' font: Preferences standardFlapFont orientation: #vertical color: Color brown lighter lighter.	aFlapTab edgeToAdhereTo: #left; inboard: false.	aFlapTab setToPopOutOnDragOver: true.	aFlapTab setToPopOutOnMouseOver: true.	aFlapTab position: (0 @ ((Display height - aFlapTab height) // 2)).	aFlap beFlap: true.	aFlap color: (Color brown muchLighter lighter "alpha: 0.3").	aFlap extent: 200 @ self currentWorld height.	self addProjectNavigationButtonsTo: aFlap.	anOffset _ 16.	buttonColor _ Color green muchLighter.	aButton _ SimpleButtonMorph new target: Smalltalk.	aButton color: buttonColor.	aButton actionSelector: #saveSession.	aButton setBalloonText: 'Make a complete snapshot of the current state of the image onto disk.'.	aButton label: 'snapshot'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #fileOutChanges.	aButton label: 'file out changes'.	aButton setBalloonText: 'File out the current change set to disk.'.	aFlap addMorph: aButton.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #browseRecentSubmissions.	aButton setBalloonText: 'Open a message-list browser showing the 20 most-recently-submitted methods.'.	aButton label: 'recent submissions'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aClock _ ClockMorph newSticky.	aClock color: Color red.	aClock showSeconds: false.	aClock font: (TextStyle default fontAt: 3).	aClock step.	aClock setBalloonText: 'The time of day.  If you prefer to see seconds, check out my menu.'.	aFlap addCenteredAtBottom: aClock offset: anOffset.	aButton _ aButton fullCopy target: Preferences.	aButton actionSelector: #openPreferencesInspector.	aButton setBalloonText: 'Open a window allowing me to view and change various Preferences.'.	aButton label: 'preferences...'.	aButton color: Color cyan muchLighter.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #updateFromServer.	aButton label: 'load code updates'.	aButton setBalloonText: 'Check the Squeak server for any new code updates, and load any that are found.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	self addSystemStatusLinesTo: aFlap.	aButton _ SimpleButtonMorph new target: self.	aButton actionSelector: #explainFlaps; color: buttonColor.	aButton label: 'About flaps...'.	aButton setBalloonText: 'Click here to get a window of information about flaps.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Preferences; actionSelector: #editAnnotations;		label: 'Annotations...'.	aButton setBalloonText: 'Click here to get a little window that will allow you to specify which types of annotations, in which order, you wish to see in the annotation pane of method-list browsers.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ TrashCanMorph newSticky.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton startStepping.	^ aFlapTab! !!Utilities class methodsFor: 'flaps' stamp: 'ar 9/28/2000 14:01'!standardRightFlap	|  aFlapTab aPage |	aPage _ self newPartsFlapPage.	aFlapTab _ FlapTab new referent: aPage beSticky.	aFlapTab color: Color red lighter.	aFlapTab assumeString: 'Tools' font: Preferences standardFlapFont orientation: #vertical color: Color orange lighter.	aFlapTab edgeToAdhereTo: #right; inboard: false.	aFlapTab setToPopOutOnDragOver: true.	aFlapTab setToPopOutOnMouseOver: true.	aPage extent: (90 @ self currentWorld height).	self addSampleWindowsTo: aPage.	aPage addMorphBack: ScriptingSystem newScriptingSpace.	aPage addMorphBack: RecordingControlsMorph authoringPrototype.	aPage replaceTallSubmorphsByThumbnails.	aPage fixLayout.	aFlapTab position: (self currentWorld width - aFlapTab width) @ ((Display height - aFlapTab height) // 2).	aPage beFlap: true.	aPage color: (Color brown muchLighter alpha: 0.5).	aPage extent: (90 @ self currentWorld height).		^ aFlapTab! !