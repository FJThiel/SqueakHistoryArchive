'From Squeak 2.0 of May 22, 1998 on 10 June 1998 at 3:12:31 pm'!"Change Set:		ProjectLabels-diDate:			10 June 1998Author:			Dan IngallsIntroduces windowReqNewLabel:, and uses it to pass window label changes to the window's model for approval and possible further action.  Used to pass project labels on to their changeSets in both MVC and Morphic.Introduces windowActiveOnFirstClick in Model, defaulting to false.  This can be overridden by, eg, Projects to get first-click behavior.Organizes the methods in TranscriptStream."!!Object methodsFor: 'user interface' stamp: 'di 6/10/1998 15:06'!modelWakeUp	"A window with me as model is being entered.  Default response is no-op" ! !!Object methodsFor: 'user interface' stamp: 'di 6/10/1998 15:06'!windowActiveOnFirstClick	"Return true if my window should be active on first click."	^ false! !!Object methodsFor: 'user interface' stamp: 'di 6/10/1998 15:06'!windowReqNewLabel: labelString	"My window's title has been edited.	Return true if this is OK, and override for further behavior."	^ true! !!Project methodsFor: 'initialization' stamp: 'di 6/10/1998 13:54'!windowActiveOnFirstClick	^ true! !!Project methodsFor: 'initialization' stamp: 'di 6/10/1998 13:52'!windowReqNewLabel: newLabel	(newLabel isEmpty or: [newLabel = changeSet name])		ifTrue: [^ false].	(ChangeSorter changeSetNamed: newLabel) == nil		ifFalse: [self inform: 'Sorry that name is already used'.				^ false].	changeSet name: newLabel.	^ true! !!StandardSystemController methodsFor: 'basic control sequence' stamp: 'di 6/10/1998 15:10'!controlInitialize	view displayEmphasized.	view uncacheBits.  "Release cached bitmap while active"	model windowActiveOnFirstClick ifFalse: [sensor waitNoButton].	status _ #active.	view topView isCollapsed ifFalse: [model modelWakeUp].! !!StandardSystemView methodsFor: 'label access' stamp: 'di 6/10/1998 13:18'!relabel: aString 	"A new string for the label.  Window is assumed to be active.	Window will redisplay only if label bar has to grow."	| oldRegion oldWidth |	(model windowReqNewLabel: aString) ifFalse: [^ self].	oldRegion _ self labelTextRegion.	oldWidth _ self insetDisplayBox width.	self label: aString.	Display fill: ((oldRegion merge: self labelTextRegion) expandBy: 3@0)			fillColor: self labelColor.	self insetDisplayBox width = oldWidth		ifTrue: [self displayLabelText; emphasizeLabel]		ifFalse: [self uncacheBits; displayEmphasized].! !!SystemWindow methodsFor: 'label' stamp: 'di 6/10/1998 13:53'!relabel	| newLabel |	newLabel _ FillInTheBlank request: 'New label for this window'						initialAnswer: labelString.	(model windowReqNewLabel: newLabel)		ifTrue: [self setLabel: newLabel]! !!SystemWindow methodsFor: 'top window' stamp: 'di 6/10/1998 14:26'!handlesMouseDown: evt	"If I am not the topWindow, then my mouseDown action dominates"	^ self activeOnlyOnTop and: [self ~~ TopWindow]! !!SystemWindow methodsFor: 'top window' stamp: 'di 6/10/1998 14:41'!mouseDown: evt	| cp |	self activate.	model windowActiveOnFirstClick ifTrue:		["Normally window takes control on first click.		Need explicit transmission for first-click activity."		cp _ evt cursorPoint.		submorphs do: [:m | (m containsPoint: cp) ifTrue: [m mouseDown: evt]]]! !!SystemWindow methodsFor: 'top window' stamp: 'di 6/10/1998 14:41'!mouseMove: evt	| cp |	model windowActiveOnFirstClick ifTrue:		["Normally window takes control on first click.		Need explicit transmission for first-click activity."		cp _ evt cursorPoint.		submorphs do: [:m | (m containsPoint: cp) ifTrue: [m mouseMove: evt]]]! !!SystemWindow methodsFor: 'top window' stamp: 'di 6/10/1998 14:41'!mouseUp: evt	| cp |	model windowActiveOnFirstClick ifTrue:		["Normally window takes control on first click.		Need explicit transmission for first-click activity."		cp _ evt cursorPoint.		submorphs do: [:m | (m containsPoint: cp) ifTrue: [m mouseUp: evt]]]! !!TranscriptStream reorganize!('initialization' open openAsMorphLabel: openLabel:)('access' characterLimit)('stream extensions' clear endEntry pastEndPut: show:)('model protocol' codePaneMenu:shifted: defaultBackgroundColor doMenuItem:paneID:from: perform:orSendTo:)!Model removeSelector: #windowReqNewLabel:!Model removeSelector: #modelWakeUp!Model removeSelector: #windowActiveOnFirstClick!ProjectController removeSelector: #controlInitialize!TranscriptStream removeSelector: #windowReqNewLabel:!TranscriptStream removeSelector: #modelWakeUp!TranscriptStream removeSelector: #windowActiveOnFirstClick!