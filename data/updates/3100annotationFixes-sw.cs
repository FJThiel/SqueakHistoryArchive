'From Squeak2.9alpha of 5 August 2000 [latest update: #3138] on 10 December 2000 at 1:30:45 pm'!"Change Set:		annotationFixes-swDate:			10 December 2000Author:			Scott WallaceTwo fixes motivated by the fact that change-sorters can now have annotation panes, and that sometimes a change-sorter's selected class is a deleted one, and/or its selected message is one that has been deleted.  These situations could cause errors when an attempt was made to show the corresponding annotation:* Fixes CodeHolder.annotation so that it won't fail when called on behalf of a deleted class.* Fixes StringHolder.timeStamp so that it won't fail when called on behalf of a method that no longer exists"!!StringHolder methodsFor: 'message list menu' stamp: 'sw 12/6/2000 21:01'!timeStamp	"Answer the time stamp for the chosen class and method, if any, else an empty string"	|  selector  aMethod |	(selector _ self selectedMessageName) ifNotNil:		[self selectedClassOrMetaClass 			ifNil:				[^ String new]			ifNotNil:				[aMethod _ self selectedClassOrMetaClass compiledMethodAt: selector ifAbsent: [nil].				aMethod ifNotNil: [^ Utilities timeStampForMethod: aMethod]]].	^ String new! !!CodeHolder methodsFor: 'as yet unclassified' stamp: 'sw 12/6/2000 21:07'!annotation	"Provide a line of annotation material for a middle pane."	| stamp  sendersCount implementorsCount toShow aCategory separator aString aList versionsCount aClass aSelector |	((aSelector _ self selectedMessageName) == nil or: [(aClass _ self selectedClassOrMetaClass) == nil])		ifTrue: [^ '------'].		toShow _ ReadWriteStream on: ''.	separator _ ' ¥ '.	self annotationRequests do:		[:aRequest |		(aRequest == #timeStamp) ifTrue:			[stamp _ self timeStamp.			toShow nextPutAll: (stamp size > 0				ifTrue: [stamp, separator]				ifFalse: ['no timeStamp', separator])].		(aRequest == #messageCategory) ifTrue:			[aCategory _ aClass organization categoryOfElement:aSelector.			aCategory ifNotNil: "woud be nil for a method no longer present, e.g. in a recent-submissions browser"				[toShow nextPutAll: aCategory, separator]].		(aRequest == #sendersCount) ifTrue:			[sendersCount _ (Smalltalk allCallsOn: aSelector) size.			sendersCount _ sendersCount == 1				ifTrue:					['1 sender']				ifFalse:					[sendersCount printString, ' senders'].			toShow nextPutAll: sendersCount, separator].		(aRequest == #implementorsCount) ifTrue:			[implementorsCount _ (Smalltalk allImplementorsOf: aSelector) size.			implementorsCount _ implementorsCount == 1				ifTrue:					['1 implementor']				ifFalse:					[implementorsCount printString, ' implementors'].			toShow nextPutAll: implementorsCount,  separator].		(aRequest == #priorVersionsCount) ifTrue:			[versionsCount _ VersionsBrowser versionCountForSelector: aSelector class: aClass.			toShow nextPutAll: 				((versionsCount > 1					ifTrue:						[versionsCount == 2 ifTrue:							['1 prior version']							ifFalse:								[versionsCount printString, ' prior versions']]					ifFalse:						['no prior versions']), separator)].		(aRequest == #priorTimeStamp) ifTrue:			[stamp _ VersionsBrowser timeStampFor: aSelector class: aClass reverseOrdinal: 2.			stamp ifNotNil: [toShow nextPutAll: 'prior time stamp: ', stamp, separator]].		(aRequest == #recentChangeSet) ifTrue:			[aString _ ChangeSorter mostRecentChangeSetWithChangeForClass: aClass selector: aSelector.			aString size > 0 ifTrue: [toShow nextPutAll: aString, separator]].		(aRequest == #allChangeSets) ifTrue:			[aList _ ChangeSorter allChangeSetsWithClass: aClass selector: aSelector.			aList size > 0				ifTrue:					[aList size = 1						ifTrue:							[toShow nextPutAll: 'only in change set ']						ifFalse:							[toShow nextPutAll: 'in change sets: '].					aList do:						[:aChangeSet | toShow nextPutAll: aChangeSet name, ' ']]				ifFalse:					[toShow nextPutAll: 'in no change set'].			toShow nextPutAll: separator]].			^ toShow contents! !