'From Squeak3.4alpha of ''11 November 2002'' [latest update: #5109] on 16 November 2002 at 8:06:43 pm'!"Change Set:		ISO8859Date:			15 November 2002Author:			Boris GaertnerJean-Marie Zajac pointed out that accented characters in ISO-8859-1 encoding are not displayed as expected. Scamper is not encoding-aware, but it translates ISO-8859-1 to the encoding that is used in Squeak. Unfortunately, due to a subtle bug the translation is done twice: first, the entire source is translated, later parsed entities are translated again. This change set drops the translation of parsed entites. To make it work, it adds the translation of character entity references (characters that are written in the form &#<integer>; or in the form &<character name>; see sections 5.3.1 and 5.3.2 of the HTML 4.0 specification.)Jean-Marie tested a first version and found a new bug, later he tested a second version that is seemingly ok. With his test he helped me to understand where the real problem was burried. Thanks a lot!! "!!HtmlText methodsFor: 'private-initialization' stamp: 'BG 11/15/2002 21:40'!initialize: source0	super initialize: source0.	self text: source0 replaceHtmlCharRefs.! !!String methodsFor: 'internet' stamp: 'BG 11/15/2002 21:18'!replaceHtmlCharRefs        | pos ampIndex scIndex special specialValue outString outPos newOutPos |        outString _ String new: self size.        outPos _ 0.        pos _ 1.                [ pos <= self size ] whileTrue: [                 "read up to the next ampersand"                ampIndex _ self indexOf: $& startingAt: pos ifAbsent: [0].                                ampIndex = 0 ifTrue: [                        pos = 1 ifTrue: [ ^self ] ifFalse: [ ampIndex _ self size+1 ] ].                newOutPos _ outPos + ampIndex - pos.                outString                        replaceFrom: outPos + 1                        to: newOutPos                        with: self                        startingAt: pos.                outPos _ newOutPos.                pos _ ampIndex.                ampIndex <= self size ifTrue: [                        "find the $;"                        scIndex _ self indexOf: $; startingAt: ampIndex ifAbsent: [ self size + 1 ].                        special _ self copyFrom: ampIndex+1 to: scIndex-1.                               specialValue _ HtmlEntity valueOfHtmlEntity: special.                         specialValue                                ifNil: [                                        "not a recognized entity.  wite it back"								  scIndex > self size ifTrue: [ scIndex _ self size ].                                        newOutPos _ outPos + scIndex - ampIndex + 1.                                        outString                                                replaceFrom: outPos+1                                                to: newOutPos                                                with: self                                                startingAt: ampIndex.                                        outPos _ newOutPos.]                                ifNotNil: [                                        outPos _ outPos + 1.                                        outString at: outPos put: specialValue isoToSqueak.].                                                pos _ scIndex + 1. ]. ].        ^outString copyFrom: 1 to: outPos! !