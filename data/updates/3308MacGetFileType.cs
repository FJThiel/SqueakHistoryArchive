'From Squeak2.9alpha of 13 June 2000 [latest update: #3299] on 1 February 2001 at 11:47:34 pm'!"Change Set:		MacGetFileTypeAndCreatorDate:			29 January 2001Author:			John M McIntosh johnmci@smalltalkconsulting.comAs part of the drag and drop logic you can of course drag and drop macintosh files. However most/many macintosh do NOT have suffixes that indicate what type of document they are I.E. document.txt. Usually a macintosh owner will call the document document. On the macintosh the file is tagged by creator and type. This change set introduces a primitive to the get file creator and type. It also alters the drag and drop change set to fetch this information if the suffix is missing from the file. On other platforms this call does nothing."!!FileDirectory methodsFor: 'file operations' stamp: 'JMM 1/29/2001 23:02'!getMacFileTypeAndCreator: fileName 	| results typeString creatorString |	"get the Macintosh file type and creator info for the file with the given name. Fails if the file does not exist or if the type and creator type arguments are not strings of length 4. Does nothing on other platforms (where the underlying primitive is a noop)."	"FileDirectory default getMacFileNamed: 'foo'"	typeString _ ByteArray new: 4 withAll: ($? asInteger).	creatorString _ ByteArray new: 4 withAll: ($? asInteger).	[self primGetMacFileNamed: (self fullNameFor: fileName)		type: typeString		creator: creatorString.] ensure: 		[typeString _ typeString asString. 		creatorString _ creatorString asString].	results _ Array with: typeString with: creatorString.	^results! !!FileDirectory methodsFor: 'file operations' stamp: 'JMM 1/29/2001 23:18'!mimeTypesFor: fileName	"Return a list of MIME types applicable to the receiver. This default implementation uses the file name extension to figure out what we're looking at but specific subclasses may use other means of figuring out what the type of some file is. Some systems like the macintosh use meta data on the file to indicate data type"	| idx ext dot |	ext _ ''.	dot _ self class extensionDelimiter.	idx _ (self fullNameFor: fileName) findLast: [:ch| ch = dot].	idx = 0 ifFalse:[ext _ fileName copyFrom: idx+1 to: fileName size].	^StandardMIMEMappings at: ext 		ifAbsent: 			[| typeCreator type | 			typeCreator _ self getMacFileTypeAndCreator: ((self fullNameFor: fileName)).			type _ (typeCreator at: 1) asLowercase.			^StandardMIMEMappings at: type ifAbsent: [nil]].! !!FileDirectory methodsFor: 'private' stamp: 'JMM 1/29/2001 23:28'!primGetMacFileNamed: fileName type: typeString creator: creatorString	"Get the Macintosh file type and creator info for the file with the given name. Fails if the file does not exist or if the type and creator type arguments are not strings of length 4. This primitive is Mac specific; it is a noop on other platforms." 	<primitive: 164>! !!FilePlugin methodsFor: 'directory primitives' stamp: 'JMM 1/28/2001 20:12'!primitiveDirectoryGetMacTypeAndCreator	| creatorString typeString fileName creatorStringIndex typeStringIndex fileNameIndex fileNameSize |	self var: 'creatorStringIndex' type: 'char *'.	self var: 'typeStringIndex' type: 'char *'.	self var: 'fileNameIndex' type: 'char *'.	self export: true.	creatorString _ interpreterProxy stackValue: 0.	typeString _ interpreterProxy stackValue: 1.	fileName _ interpreterProxy stackValue: 2.	((interpreterProxy isBytes: creatorString) and: [(interpreterProxy byteSizeOf: creatorString) = 4]) ifFalse:[^interpreterProxy primitiveFail].	((interpreterProxy isBytes: typeString) and: [(interpreterProxy byteSizeOf: typeString) = 4]) ifFalse:[^interpreterProxy primitiveFail].	(interpreterProxy isBytes: fileName) ifFalse:[^interpreterProxy primitiveFail].	creatorStringIndex _ interpreterProxy firstIndexableField: creatorString.	typeStringIndex _ interpreterProxy firstIndexableField: typeString.	fileNameIndex _ interpreterProxy firstIndexableField: fileName.	fileNameSize _ interpreterProxy byteSizeOf: fileName.	(self cCode: 'dir_GetMacFileTypeAndCreator(			(char *) fileNameIndex, fileNameSize,			(char *) typeStringIndex, (char *) creatorStringIndex)'		inSmalltalk:[true]) ifFalse:[^interpreterProxy primitiveFail].	interpreterProxy pop: 3.  "pop filename, type, creator; leave rcvr on stack"! !!FilePlugin class methodsFor: 'translation' stamp: 'JMM 1/28/2001 20:13'!headerFile^'/* File support definitions *//* squeak file record; see sqFilePrims.c for details */typedef struct {	FILE	*file;	int		sessionID;	int		writable;	int		fileSize;	int		lastOp;  /* 0 = uncommitted, 1 = read, 2 = write */} SQFile;/* file i/o */int sqFileAtEnd(SQFile *f);int sqFileClose(SQFile *f);int sqFileDeleteNameSize(int sqFileNameIndex, int sqFileNameSize);int sqFileGetPosition(SQFile *f);int sqFileInit(void);int sqFileShutdown(void);int sqFileOpen(SQFile *f, int sqFileNameIndex, int sqFileNameSize, int writeFlag);int sqFileReadIntoAt(SQFile *f, int count, int byteArrayIndex, int startIndex);int sqFileRenameOldSizeNewSize(int oldNameIndex, int oldNameSize, int newNameIndex, int newNameSize);int sqFileSetPosition(SQFile *f, int position);int sqFileSize(SQFile *f);int sqFileValid(SQFile *f);int sqFileWriteFromAt(SQFile *f, int count, int byteArrayIndex, int startIndex);/* directories */int dir_Create(char *pathString, int pathStringLength);int dir_Delete(char *pathString, int pathStringLength);int dir_Delimitor(void);int dir_Lookup(char *pathString, int pathStringLength, int index,	/* outputs: */	char *name, int *nameLength, int *creationDate, int *modificationDate,	int *isDirectory, int *sizeIfFile);int dir_PathToWorkingDir(char *pathName, int pathNameMax);int dir_SetMacFileTypeAndCreator(char *filename, int filenameSize, char *fType, char *fCreator);int dir_GetMacFileTypeAndCreator(char *filename, int filenameSize, char *fType, char *fCreator);'.! !!Interpreter class methodsFor: 'initialization' stamp: 'JMM 1/28/2001 20:29'!initializePrimitiveTable 	"This table generates a C switch statement for primitive dispatching."	"NOTE: The real limit here is 2047, but our C compiler currently barfs over 700"	MaxPrimitiveIndex _ 700.	PrimitiveTable _ Array new: MaxPrimitiveIndex + 1.	self table: PrimitiveTable from: 	#(	"Integer Primitives (0-19)"		(0 primitiveFail)		(1 primitiveAdd)		(2 primitiveSubtract)		(3 primitiveLessThan)		(4 primitiveGreaterThan)		(5 primitiveLessOrEqual)		(6 primitiveGreaterOrEqual)		(7 primitiveEqual)		(8 primitiveNotEqual)		(9 primitiveMultiply)		(10 primitiveDivide)		(11 primitiveMod)		(12 primitiveDiv)		(13 primitiveQuo)		(14 primitiveBitAnd)		(15 primitiveBitOr)		(16 primitiveBitXor)		(17 primitiveBitShift)		(18 primitiveMakePoint)		(19 primitiveFail)					"Guard primitive for simulation -- *must* fail"		"LargeInteger Primitives (20-39)"		"32-bit logic is aliased to Integer prims above"		(20 39 primitiveFail)		"Float Primitives (40-59)"		(40 primitiveAsFloat)		(41 primitiveFloatAdd)		(42 primitiveFloatSubtract)		(43 primitiveFloatLessThan)		(44 primitiveFloatGreaterThan)		(45 primitiveFloatLessOrEqual)		(46 primitiveFloatGreaterOrEqual)		(47 primitiveFloatEqual)		(48 primitiveFloatNotEqual)		(49 primitiveFloatMultiply)		(50 primitiveFloatDivide)		(51 primitiveTruncated)		(52 primitiveFractionalPart)		(53 primitiveExponent)		(54 primitiveTimesTwoPower)		(55 primitiveSquareRoot)		(56 primitiveSine)		(57 primitiveArctan)		(58 primitiveLogN)		(59 primitiveExp)		"Subscript and Stream Primitives (60-67)"		(60 primitiveAt)		(61 primitiveAtPut)		(62 primitiveSize)		(63 primitiveStringAt)		(64 primitiveStringAtPut)		(65 primitiveNext)		(66 primitiveNextPut)		(67 primitiveAtEnd)		"StorageManagement Primitives (68-79)"		(68 primitiveObjectAt)		(69 primitiveObjectAtPut)		(70 primitiveNew)		(71 primitiveNewWithArg)		(72 primitiveArrayBecomeOneWay)	"Blue Book: primitiveBecome"		(73 primitiveInstVarAt)		(74 primitiveInstVarAtPut)		(75 primitiveAsOop)		(76 primitiveStoreStackp)					"Blue Book: primitiveAsObject"		(77 primitiveSomeInstance)		(78 primitiveNextInstance)		(79 primitiveNewMethod)		"Control Primitives (80-89)"		(80 primitiveBlockCopy)		(81 primitiveValue)		(82 primitiveValueWithArgs)		(83 primitivePerform)		(84 primitivePerformWithArgs)		(85 primitiveSignal)		(86 primitiveWait)		(87 primitiveResume)		(88 primitiveSuspend)		(89 primitiveFlushCache)		"Input/Output Primitives (90-109)"		(90 primitiveMousePoint)		(91 primitiveTestDisplayDepth)			"Blue Book: primitiveCursorLocPut"		(92 primitiveSetDisplayMode)				"Blue Book: primitiveCursorLink"		(93 primitiveInputSemaphore)		(94 primitiveGetNextEvent)				"Blue Book: primitiveSampleInterval"		(95 primitiveInputWord)		(96 primitiveObsoleteIndexedPrimitive)	"primitiveCopyBits"		(97 primitiveSnapshot)		(98 primitiveStoreImageSegment)		(99 primitiveLoadImageSegment)		(100 primitivePerformInSuperclass)		"Blue Book: primitiveSignalAtTick"		(101 primitiveBeCursor)		(102 primitiveBeDisplay)		(103 primitiveScanCharacters)		(104 primitiveObsoleteIndexedPrimitive)	"primitiveDrawLoop"		(105 primitiveStringReplace)		(106 primitiveScreenSize)		(107 primitiveMouseButtons)		(108 primitiveKbdNext)		(109 primitiveKbdPeek)		"System Primitives (110-119)"		(110 primitiveEquivalent)		(111 primitiveClass)		(112 primitiveBytesLeft)		(113 primitiveQuit)		(114 primitiveExitToDebugger)		(115 primitiveFail)					"Blue Book: primitiveOopsLeft"		(116 primitiveFlushCacheByMethod)		(117 primitiveExternalCall)		(118 primitiveDoPrimitiveWithArgs)		(119 primitiveFlushCacheSelective)			"Squeak 2.2 and earlier use 119.  Squeak 2.3 and later use 116.			Both are supported for backward compatibility."		"Miscellaneous Primitives (120-127)"		(120 primitiveCalloutToFFI)		(121 primitiveImageName)		(122 primitiveNoop)					"Blue Book: primitiveImageVolume"		(123 primitiveFail)		(124 primitiveLowSpaceSemaphore)		(125 primitiveSignalAtBytesLeft)		"Squeak Primitives Start Here"		"Squeak Miscellaneous Primitives (128-149)"		(126 primitiveDeferDisplayUpdates)		(127 primitiveShowDisplayRect)		(128 primitiveArrayBecome)		(129 primitiveSpecialObjectsOop)		(130 primitiveFullGC)		(131 primitiveIncrementalGC)		(132 primitiveObjectPointsTo)		(133 primitiveSetInterruptKey)		(134 primitiveInterruptSemaphore)		(135 primitiveMillisecondClock)		(136 primitiveSignalAtMilliseconds)		(137 primitiveSecondsClock)		(138 primitiveSomeObject)		(139 primitiveNextObject)		(140 primitiveBeep)		(141 primitiveClipboardText)		(142 primitiveVMPath)		(143 primitiveShortAt)		(144 primitiveShortAtPut)		(145 primitiveConstantFill)		(146 primitiveObsoleteIndexedPrimitive)	"primitiveReadJoystick"		(147 primitiveObsoleteIndexedPrimitive)	"primitiveWarpBits"		(148 primitiveClone)		(149 primitiveGetAttribute)		"File Primitives (150-169)"		(150 164 primitiveObsoleteIndexedPrimitive)		(165 168 primitiveFail)		(169 primitiveObsoleteIndexedPrimitive)		"Sound Primitives (170-199)"		(170 175 primitiveObsoleteIndexedPrimitive)		(176 primWaveTableSoundmixSampleCountintostartingAtpan)		(177 primFMSoundmixSampleCountintostartingAtpan)		(178 primPluckedSoundmixSampleCountintostartingAtpan)		(179 primSampledSoundmixSampleCountintostartingAtpan)		(180 primFMSoundmixSampleCountintostartingAtleftVolrightVol)		(181 primPluckedSoundmixSampleCountintostartingAtleftVolrightVol)		(182 oldprimSampledSoundmixSampleCountintostartingAtleftVolrightVol)		(183 primReverbSoundapplyReverbTostartingAtcount)		(184 primLoopedSampledSoundmixSampleCountintostartingAtleftVolrightVol)		(185 primSampledSoundmixSampleCountintostartingAtleftVolrightVol)		(186 188 primitiveFail)		(189 194 primitiveObsoleteIndexedPrimitive)		(195 199 primitiveFail)		"Networking Primitives (200-229)"		(200 225 primitiveObsoleteIndexedPrimitive)		(226 229 primitiveFail)		"Other Primitives (230-249)"		(230 primitiveRelinquishProcessor)		(231 primitiveForceDisplayUpdate)		(232 primitiveFormPrint)		(233 primitiveSetFullScreen)		(234 primBitmapdecompressfromByteArrayat)		(235 primStringcomparewithcollated)		(236 primSampledSoundconvert8bitSignedFromto16Bit)		(237 primBitmapcompresstoByteArray)		(238 241 primitiveObsoleteIndexedPrimitive)		(242 primitiveFail)		(243 primStringtranslatefromtotable)		(244 primStringfindFirstInStringinSetstartingAt)		(245 primStringindexOfAsciiinStringstartingAt)		(246 primStringfindSubstringinstartingAtmatchTable)		(247 primitiveSnapshotEmbedded)		(248 primitiveDisablePowerManager)		(249 primitiveFail)		"VM Implementor Primitives (250-255)"		(250 clearProfile)		(251 dumpProfile)		(252 startProfiling)		(253 stopProfiling)		(254 primitiveVMParameter)		(255 primitiveInstVarsPutFromStack) "Never used except in Disney tests.  Remove after 2.3 release."		"Quick Push Const Methods"		(256 primitivePushSelf)		(257 primitivePushTrue)		(258 primitivePushFalse)		(259 primitivePushNil)		(260 primitivePushMinusOne)		(261 primitivePushZero)		(262 primitivePushOne)		(263 primitivePushTwo)		"Quick Push Const Methods"		(264 519 primitiveLoadInstVar)		"MIDI Primitives (520-539)"		(520 529 primitiveObsoleteIndexedPrimitive)		(530 539 primitiveFail)  "reserved for extended MIDI primitives"		"Experimental Asynchrous File Primitives"		(540 545 primitiveObsoleteIndexedPrimitive)		(546 547 primitiveFail)		"Pen Tablet Primitives"		(548 primitiveObsoleteIndexedPrimitive)		(549 primitiveObsoleteIndexedPrimitive)		"Sound Codec Primitives"		(550 primADPCMCodecprivateDecodeMono)			(551 primADPCMCodecprivateDecodeStereo)			(552 primADPCMCodecprivateEncodeMono)			(553 primADPCMCodecprivateEncodeStereo)			(554 569 primitiveFail)  "reserved for additional codec primitives"		"External primitive support primitives"		(570 primitiveFlushExternalPrimitives)		(571 primitiveUnloadModule)		(572 primitiveListBuiltinModule)		(573 primitiveListExternalModule)		(574 primitiveFail) "reserved for addl. external support prims"		"Unassigned Primitives"		(575 700 primitiveFail)).! !!Interpreter class methodsFor: 'initialization' stamp: 'JMM 1/28/2001 20:30'!obsoleteIndexedPrimitiveTable	"Interpreter obsoleteIndexedPrimitiveTableString"	"Initialize the links from the (now obsolete) indexed primitives to	the new named primitives."	| table |	table _ Array new: MaxPrimitiveIndex+1.	#(		(96	(BitBltPlugin primitiveCopyBits))		(104 (BitBltPlugin primitiveDrawLoop))		(147 (BitBltPlugin primitiveWarpBits))		(146 (JoystickTabletPlugin primitiveReadJoystick))		"File Primitives (150-169)"		(150 (FilePlugin primitiveFileAtEnd))		(151 (FilePlugin primitiveFileClose))		(152 (FilePlugin primitiveFileGetPosition))		(153 (FilePlugin primitiveFileOpen))		(154 (FilePlugin primitiveFileRead))		(155 (FilePlugin primitiveFileSetPosition))		(156 (FilePlugin primitiveFileDelete))		(157 (FilePlugin primitiveFileSize))		(158 (FilePlugin primitiveFileWrite))		(159 (FilePlugin primitiveFileRename))		(160 (FilePlugin primitiveDirectoryCreate))		(161 (FilePlugin primitiveDirectoryDelimitor))		(162 (FilePlugin primitiveDirectoryLookup))		(163 (FilePlugin primitiveDirectoryDelete))		(164 (FilePlugin primitiveDirectoryGetMacTypeAndCreator))		(169 (FilePlugin primitiveDirectorySetMacTypeAndCreator))		"Sound Primitives (170-199)"		(170 (SoundPlugin primitiveSoundStart))		(171 (SoundPlugin primitiveSoundStartWithSemaphore))		(172 (SoundPlugin primitiveSoundStop))		(173 (SoundPlugin primitiveSoundAvailableSpace))		(174 (SoundPlugin primitiveSoundPlaySamples))		(175 (SoundPlugin primitiveSoundPlaySilence))		(189 (SoundPlugin primitiveSoundInsertSamples))		(190 (SoundPlugin primitiveSoundStartRecording))		(191 (SoundPlugin primitiveSoundStopRecording))		(192 (SoundPlugin primitiveSoundGetRecordingSampleRate))		(193 (SoundPlugin primitiveSoundRecordSamples))		(194 (SoundPlugin primitiveSoundSetRecordLevel))		"Networking Primitives (200-229)"		(200 (SocketPlugin primitiveInitializeNetwork))		(201 (SocketPlugin primitiveResolverStartNameLookup))		(202 (SocketPlugin primitiveResolverNameLookupResult))		(203 (SocketPlugin primitiveResolverStartAddressLookup))		(204 (SocketPlugin primitiveResolverAddressLookupResult))		(205 (SocketPlugin primitiveResolverAbortLookup))		(206 (SocketPlugin primitiveResolverLocalAddress))		(207 (SocketPlugin primitiveResolverStatus))		(208 (SocketPlugin primitiveResolverError))		(209 (SocketPlugin primitiveSocketCreate))		(210 (SocketPlugin primitiveSocketDestroy))		(211 (SocketPlugin primitiveSocketConnectionStatus))		(212 (SocketPlugin primitiveSocketError))		(213 (SocketPlugin primitiveSocketLocalAddress))		(214 (SocketPlugin primitiveSocketLocalPort))		(215 (SocketPlugin primitiveSocketRemoteAddress))		(216 (SocketPlugin primitiveSocketRemotePort))		(217 (SocketPlugin primitiveSocketConnectToPort))		(218 (SocketPlugin primitiveSocketListenWithOrWithoutBacklog))		(219 (SocketPlugin primitiveSocketCloseConnection))		(220 (SocketPlugin primitiveSocketAbortConnection))		(221 (SocketPlugin primitiveSocketReceiveDataBufCount))		(222 (SocketPlugin primitiveSocketReceiveDataAvailable))		(223 (SocketPlugin primitiveSocketSendDataBufCount))		(224 (SocketPlugin primitiveSocketSendDone))		(225 (SocketPlugin primitiveSocketAccept))		"Other Primitives (230-249)"		(238 (SerialPlugin primitiveSerialPortOpen))		(239 (SerialPlugin primitiveSerialPortClose))		(240 (SerialPlugin primitiveSerialPortWrite))		(241 (SerialPlugin primitiveSerialPortRead))		"MIDI Primitives (520-539)"		(521 (MIDIPlugin primitiveMIDIClosePort))		(522 (MIDIPlugin primitiveMIDIGetClock))		(523 (MIDIPlugin primitiveMIDIGetPortCount))		(524 (MIDIPlugin primitiveMIDIGetPortDirectionality))		(525 (MIDIPlugin primitiveMIDIGetPortName))		(526 (MIDIPlugin primitiveMIDIOpenPort))		(527 (MIDIPlugin primitiveMIDIParameterGetOrSet))		(528 (MIDIPlugin primitiveMIDIRead))		(529 (MIDIPlugin primitiveMIDIWrite))		"Experimental Asynchrous File Primitives"		(540 (AsynchFilePlugin primitiveAsyncFileClose))		(541 (AsynchFilePlugin primitiveAsyncFileOpen))		(542 (AsynchFilePlugin primitiveAsyncFileReadResult))		(543 (AsynchFilePlugin primitiveAsyncFileReadStart))		(544 (AsynchFilePlugin primitiveAsyncFileWriteResult))		(545 (AsynchFilePlugin primitiveAsyncFileWriteStart))		"Pen Tablet Primitives"		(548 (JoystickTabletPlugin primitiveGetTabletParameters))		(549 (JoystickTabletPlugin primitiveReadTablet))		"Sound Codec Primitives"		"(550 primADPCMCodecprivateDecodeMono)			(551 primADPCMCodecprivateDecodeStereo)			(552 primADPCMCodecprivateEncodeMono)			(553 primADPCMCodecprivateEncodeStereo)"	) do:[:spec| table at: spec first+1 put: spec second].	^table! !!Interpreter class methodsFor: 'translation' stamp: 'JMM 1/28/2001 21:13'!translate: fileName doInlining: inlineFlag forBrowserPlugin: pluginFlag	"Note: The pluginFlag is meaningless on Windows and Unix. On these platforms Squeak runs as it's own process and doesn't need any special attention from the VMs point of view. Meaning that NONE of the required additional functions will be supported. In other words, the pluginFlag is not needed and not supported."	"Translate the Smalltalk description of the virtual machine into C. If inlineFlag is true,small method bodies are inlined to reduce procedure call overhead. On the PPC, this results in a factor of three speedup with only 30% increase in code size. If pluginFlag is true, generate code for an interpreter that runs as a browser plugin (Netscape or IE)."	| doInlining cg exports |	doInlining _ inlineFlag.	pluginFlag ifTrue: [doInlining _ true].  "must inline when generating browser plugin"	Interpreter initialize.	ObjectMemory initialize.	GenerateBrowserPlugin _ pluginFlag.	cg _ CCodeGenerator new initialize.	cg addClass: Interpreter.	cg addClass: ObjectMemory.	Interpreter declareCVarsIn: cg.	ObjectMemory declareCVarsIn: cg.	"Get all the named prims from the VM.	Note: the format of exports is:		pluginName -> Array of: primitiveName.	so we can generate a nice table from it."	exports _ Array with: '' -> cg exportedPrimitiveNames asArray.	cg storeCodeOnFile: fileName doInlining: doInlining.	"Add our plugins"	{		"Graphics"			"Note: BitBltSimulation should go first, 			because three of it's entries might be 			looked up quite often (due to refs from 			InterpreterProxy). This will go away at			some point but for now it's a good idea			to have those entries early in the table."		BitBltSimulation.			BalloonEnginePlugin. 		SurfacePlugin. "To support OS surfaces through FXBlt"		"I/O subsystems"		FilePlugin.		SocketPlugin. 		SoundPlugin. 		MIDIPlugin. 		SerialPlugin. 		JoystickTabletPlugin. 		AsynchFilePlugin. 	 	"Numerics"		LargeIntegersPlugin.		FFTPlugin. 		FloatArrayPlugin. 		Matrix2x3Plugin. 		"Compression"		DeflatePlugin.		"Others"		KlattSynthesizerPlugin.		SoundCodecPlugin.		B3DEnginePlugin.		FFIPlugin.		DropPlugin. 		"Note: Optionally, you can translate the following as builtins.		As of Squeak 2.7 they are not builtins by default:			DSAPlugin.		"	} do:[:plugin|		cg _ plugin translate: plugin moduleName, '.c'					doInlining: doInlining					locally: true.		exports _ exports copyWith: 			(plugin moduleName -> cg exportedPrimitiveNames asArray).	].	self storeExports: exports on: 'sqNamedPrims.h'.! !!StandardFileStream methodsFor: 'properties-setting' stamp: 'JMM 1/28/2001 18:44'!getFileType	"On the Macintosh, get the file type and creator of this file. On other platforms, do nothing."	^FileDirectory default		getMacFileTypeAndCreator: self fullName		! !