'From Squeak2.6 of 11 October 1999 [latest update: #1578] on 27 October 1999 at 11:51:52 am'!"Change Set:		windowColorTweaks-swDate:			27 October 1999Author:			Scott WallaceFixes up the default window colors for a few neglected items -- assembly areas, scripting areas, and selector browsers.In the face of current poor support for translucent colors in system windows, no longer admits translucent colors as window colors.  This is a temporary workaround!!Also circumvents some very unfortunate window-color consequences when a black or near-black color is reported from the color picker upon mouse-down in the translucent box and mouse-drag across a picker border line."!!Color methodsFor: 'conversions' stamp: 'sw 10/27/1999 10:51'!asNontranslucentColor	^ self! !!Morph methodsFor: 'e-toy support' stamp: 'sw 10/26/1999 23:32'!embeddedInMorphicWindowLabeled: labelString	| window |	window _ (SystemWindow labelled: labelString) model: nil.	window setStripeColorsFrom: nil defaultBackgroundColor.	window addMorph: self frame: (0@0 extent: 1@1).	^ window! !!ColorPickerMorph class methodsFor: 'as yet unclassified' stamp: 'sw 10/27/1999 11:40'!perniciousBorderColor	"Answer the color of the border lines of a color picker; this color gets reported as you drag the mouse through from the translucent box to the true color area, for example, and can cause some difficulties in some special cases, so it is faithfully reported here in this hard-coded fashion in order that energetic clients wishing to handle it as special-case it can do so."	^ Color r: 0.0 g: 0.0 b: 0.032! !!Preferences class methodsFor: 'window colors' stamp: 'sw 10/27/1999 11:34'!setWindowColorFor: modelSymbol to: incomingColor	| aColor |	(Parameters includesKey: #windowColors) ifFalse:		[Parameters at: #windowColors put: IdentityDictionary new.		self installBrightWindowColors].	aColor _ incomingColor asNontranslucentColor.	(aColor = ColorPickerMorph perniciousBorderColor or: [aColor = Color black]) ifTrue: [^ self].	^ (Parameters at: #windowColors) at: modelSymbol put: aColor	! !!ScriptingDomain methodsFor: 'as yet unclassified' stamp: 'sw 10/27/1999 11:39'!defaultBackgroundColor	^ Color r: 0.91 g: 0.91 b: 0.91! !!SelectorBrowser methodsFor: 'as yet unclassified' stamp: 'sw 10/26/1999 23:30'!morphicWindow	"Create a Browser that lets you type part of a selector, shows a list of selectors, shows the classes of the one you chose, and spawns a full browser on it.  Answer the window	SelectorBrowser new open "	| window typeInView selectorListView classListView |	window _ (SystemWindow labelled: 'later') model: self.	window setStripeColorsFrom: self defaultBackgroundColor.	selectorIndex _ classListIndex _ 0.	typeInView _ PluggableTextMorph on: self 		text: #contents accept: #contents:notifying:		readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	typeInView acceptOnCR: true.	window addMorph: typeInView frame: (0@0 corner: 0.5@0.14).	selectorListView _ PluggableListMorph on: self		list: #messageList		selected: #messageListIndex		changeSelected: #messageListIndex:		menu: #selectorMenu:		keystroke: #messageListKey:from:.	selectorListView menuTitleSelector: #selectorMenuTitle.	window addMorph: selectorListView frame: (0@0.14 corner: 0.5@0.6).	classListView _ PluggableListMorph on: self		list: #classList		selected: #classListIndex		changeSelected: #classListIndex:		menu: nil		keystroke: #arrowKey:from:.	classListView menuTitleSelector: #classListSelectorTitle.	window addMorph: classListView frame: (0.5@0 corner: 1@0.6).	window addMorph: ((PluggableTextMorph on: self text: #byExample 				accept: #byExample:				readSelection: #contentsSelection menu: #codePaneMenu:shifted:)					askBeforeDiscardingEdits: false)		frame: (0@0.6 corner: 1@1).	window setLabel: 'Selector Finder'.	^ window! !!StandardScriptingSystem methodsFor: 'utilities' stamp: 'sw 10/26/1999 23:28'!newScriptingSpace	"Answer a complete scripting space"	| aTemplate  palette aPlayfield aWindow itsModel |	aWindow _ (SystemWindow labelled: 'scripting area') model: (itsModel _ ScriptingDomain new).	aWindow setStripeColorsFrom: itsModel defaultBackgroundColor.	aWindow extent: 640 @ 480.	aTemplate _ PasteUpMorph new setNameTo: 'etoy'.	aTemplate extent: 638 @ 470.	aWindow addMorph: aTemplate frame: (0@0 corner: 1@1).	aTemplate setStandardTexture.	aTemplate impartPrivatePresenter; setProperty: #automaticPhraseExpansion toValue: true; beSticky.	aTemplate presenter addStopStepGoButtons; addTrashCan.	palette _ TabbedPalette new pageSize: 200@320.	palette beSticky.	aTemplate addMorph: palette.	palette addMenuTab.	palette addPartsTab.	palette addControlsTab.	palette addTilesTab.	palette becomeStandardPalette.	aPlayfield _ PasteUpMorph new setNameTo: 'playfield'.	(Preferences valueOfFlag: #eToyScheme)  "Not widely advertised"		ifFalse:				[aPlayfield setToAdhereToEdge: #topRight.			palette setToAdhereToEdge: #topLeft]		ifTrue:			[aPlayfield setToAdhereToEdge: #topLeft.			palette setToAdhereToEdge: #topRight].	aTemplate addMorph: aPlayfield.	aPlayfield extent: 340@300; position: aTemplate topRight - (400@0).	aPlayfield beSticky.	aPlayfield automaticViewing: true.	aPlayfield wantsMouseOverHalos: true.	aTemplate presenter standardPlayfield: aPlayfield.		^ aWindow! !!SystemWindow methodsFor: 'menu' stamp: 'sw 10/27/1999 11:28'!setWindowColor: incomingColor	| existingColor aColor |	incomingColor ifNil: [^ self].  "it happens"	aColor _ incomingColor asNontranslucentColor.	(aColor = ColorPickerMorph perniciousBorderColor 		or: [aColor = Color black]) ifTrue: [^ self].	existingColor _ self paneColorToUse.	existingColor ifNil: [^ self beep].	(self allMorphs copyWithout: self) do:		[:aMorph |			((aMorph isKindOf: PluggableButtonMorph) and: [aMorph offColor = existingColor])				ifTrue:					[aMorph onColor: aColor darker offColor: aColor].			aMorph color = existingColor				ifTrue:					[aMorph color: aColor]].	self setStripeColorsFrom: aColor		! !!TranslucentColor methodsFor: 'conversions' stamp: 'sw 10/27/1999 10:51'!asNontranslucentColor	^ self alpha: 1.0! !