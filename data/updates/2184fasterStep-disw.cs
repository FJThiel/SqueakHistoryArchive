'From Squeak2.8alpha of 13 January 2000 [latest update: #2178] on 23 May 2000 at 6:05:43 pm'!"Change Set:		fasterStep-diswDate:			23 May 2000Author:			Dan Ingalls & Scott WallaceChanges three kinds of 'run once' buttons, namely the 'step' button and the yellow 'try me' buttons in viewer and scriptor, so that all of them repeat as fast as they can while held down, while preserving the ability reliably to step-exactly-once by simple clicking."!!PhraseTileMorph methodsFor: 'miscellaneous' stamp: 'sw 5/23/2000 17:53'!try	| aPlayer |	userScriptSelector == nil		ifFalse:			[aPlayer _ self objectViewed player.			aPlayer perform: userScriptSelector]		ifTrue:			[Compiler evaluate:				self codeString				for: self associatedPlayer				logged: false]! !!Presenter methodsFor: 'stop-step-go buttons' stamp: 'sw 5/23/2000 17:53'!stepStillDown: dummy with: theButton	(stepButton == nil or: [stepButton isInWorld not]) ifTrue: [stepButton _ theButton].	self stepButtonState: true.	self stopButtonState: false.	associatedMorph stepAll.	associatedMorph world displayWorld.	self stepButtonState: false.	self stopButtonState: true! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'di 5/23/2000 16:18'!tryMe	self playerScripted perform: scriptName.! !!SimpleButtonMorph methodsFor: 'events' stamp: 'di 5/23/2000 16:17'!mouseDown: evt	| now dt |	oldColor _ color.	now _ Time millisecondClockValue.	actWhen == #buttonDown		ifTrue: [self doButtonAction].	dt _ Time millisecondClockValue - now max: 0.  "Time it took to do"	dt < 200 ifTrue: [(Delay forMilliseconds: 200-dt) wait]! !!ThreePhaseButtonMorph methodsFor: 'as yet unclassified' stamp: 'sw 5/23/2000 17:53'!mouseDown: evt	| now dt |	self state: #pressed.	actWhen == #buttonDown		ifTrue:			[self doButtonAction]		ifFalse:			[now _ Time millisecondClockValue.			super mouseDown: evt.			"Allow on:send:to: to set the response to events other than actWhen"			dt _ Time millisecondClockValue - now max: 0.  "Time it took to do"			dt < 200 ifTrue: [(Delay forMilliseconds: 200-dt) wait]]	! !