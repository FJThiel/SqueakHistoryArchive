'From Squeak 2.5 of August 6, 1999 [latest update: #1521] on 6 October 1999 at 8:30 pm'!!ImageSegment class methodsFor: 'fileIn/Out' stamp: 'di 10/6/1999 20:36'!reclaimObsoleteSegmentFiles  "ImageSegment reclaimObsoleteSegmentFiles"	"Delete segment files that can't be used after this image is saved.	Note that this is never necessary -- it just saves file space."	| segDir segFiles |	ImageSegment instanceCount = 0 ifTrue: [^ self].	segDir _ self segmentDirectory.	segFiles _ (segDir fileNames select: [:fn | fn endsWith: '.seg']) asSet.	ImageSegment allInstancesDo:		[:is | is isOnFile ifTrue:			[segFiles remove: is segmentName ifAbsent: [self error: 'Can''t find file']]].	segFiles do: [:fn | segDir deleteFileNamed: fn]! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'di 10/6/1999 20:29'!snapshot: save andQuit: quit	"Mark the changes file and close all files. If save is true, save the current state of this Smalltalk in the image file. If quit is true, then exit to the outer shell. The latter part of this method runs when resuming a previously saved image. The resume logic checks for a document file to process when starting up."	| resuming msg sourceLink |	save & (SourceFiles at: 2) notNil ifTrue:		[msg _  (quit			ifTrue: ['----QUIT----']			ifFalse: ['----SNAPSHOT----'])			, Date dateAndTimeNow printString.		sourceLink _ ' priorSource: ' , LastQuitLogPosition printString.		self assureStartupStampLogged.		LastQuitLogPosition _ (SourceFiles at: 2) setToEnd; position.		self logChange: msg , sourceLink.		Transcript cr; show: msg].	self processShutDownList.	Cursor write show.	save ifTrue: [resuming _ self snapshotPrimitive]  "<-- PC frozen here on image file"		ifFalse: [resuming _ false].	resuming		ifFalse: [Smalltalk at: #ImageSegment					ifPresent: [:theClass | theClass reclaimObsoleteSegmentFiles].				quit ifTrue: [self quitPrimitive]].	Cursor normal show.	self setGCParameters.	resuming ifTrue: [self clearExternalObjects].	self processStartUpList.	resuming ifTrue: [self readDocumentFile].	^resuming! !