'From Squeak3.1alpha of 5 February 2001 [latest update: #4003] on 10 May 2001 at 1:07:52 pm'!"Change Set:		fixNewerDate:			10 May 2001Author:			Bob Arning- remove old unneeded projects when loading a newer version of an existing project"!!Project methodsFor: 'menu messages' stamp: 'RAA 5/10/2001 13:07'!finalEnterActions	"Perform the final actions necessary as the receiver project is entered"	| navigator armsLengthCmd navType thingsToUnhibernate |	self projectParameters 		at: #projectsToBeDeleted 		ifPresent: [ :projectsToBeDeleted |			self removeParameter: #projectsToBeDeleted.			projectsToBeDeleted do: [ :each | 				Project deletingProject: each.				each removeChangeSetIfPossible.			].		].	thingsToUnhibernate _ world valueOfProperty: #thingsToUnhibernate ifAbsent: [#()].	thingsToUnhibernate do: [:each | each unhibernate].	world removeProperty: #thingsToUnhibernate.	navType _ ProjectNavigationMorph preferredNavigator.	armsLengthCmd _ self parameterAt: #armsLengthCmd ifAbsent: [nil].	navigator _ world findA: navType.	Preferences showProjectNavigator & navigator isNil ifTrue:		[(navigator _ navType new)			bottomLeft: world bottomLeft;			openInWorld: world].	navigator notNil & armsLengthCmd notNil ifTrue:		[navigator color: Color lightBlue].	armsLengthCmd notNil ifTrue:		[Preferences showFlapsWhenPublishing			ifFalse:				[self flapsSuppressed: true.				navigator ifNotNil:	[navigator visible: false]].		armsLengthCmd openInWorld: world].	Smalltalk isMorphic ifTrue:		[world reformulateUpdatingMenus].	WorldState addDeferredUIMessage: [self startResourceLoading].! !!Project methodsFor: 'release' stamp: 'RAA 5/10/2001 12:58'!deletingProject: aProject	"Clear my previousProject link if it points at the given Project, which is being deleted."	self flag: #bob.		"zapping projects"	parentProject == aProject ifTrue: [		parentProject _ parentProject parent	].	previousProject == aProject		ifTrue: [previousProject _ nil].	nextProject == aProject		ifTrue:	[nextProject _ nil]! !!Project methodsFor: 'release' stamp: 'RAA 5/10/2001 13:06'!removeChangeSetIfPossible	| itsName |	changeSet ifNil: [^self].	changeSet isEmpty ifFalse: [^self].	(changeSet projectsBelongedTo copyWithout: self) isEmpty ifFalse: [^self].	itsName _ changeSet name.	ChangeSorter removeChangeSet: changeSet.	"Transcript cr; show: 'project change set ', itsName, ' deleted.'"! !!Project methodsFor: 'file in/out' stamp: 'RAA 5/10/2001 12:21'!armsLengthCommand: aCommand withDescription: aString	| pvm tempProject foolingForm tempCanvas bbox crossHatchColor stride |	"Set things up so that this aCommand is sent to self as a messageafter jumping to the parentProject.  For things that can't be executedwhile in this project, such as saveAs, loadFromServer, storeOnServer.  SeeProjectViewMorph step."	self isMorphic ifTrue: [		world borderWidth: 0.	"get rid of the silly default border"		tempProject _ Project newMorphic.		foolingForm _ world imageForm.		"make them think they never left"		tempCanvas _ foolingForm getCanvas.		bbox _ foolingForm boundingBox.		crossHatchColor _ Color yellow alpha: 0.3.		stride _ 20.		10 to: bbox width by: stride do: [ :x |			tempCanvas fillRectangle: (x@0 extent: 1@bbox height) fillStyle: crossHatchColor.		].		10 to: bbox height by: stride do: [ :y |			tempCanvas fillRectangle: (0@y extent: bbox width@1) fillStyle: crossHatchColor.		].		tempProject world color: (InfiniteForm with: foolingForm).		tempProject projectParameters 			at: #armsLengthCmd 			put: (				DoCommandOnceMorph new					addText: aString;					actionBlock: [						self doArmsLengthCommand: aCommand.					] fixTemps			).		tempProject projectParameters 			at: #deleteWhenEnteringNewProject 			put: true.		tempProject enter.	] ifFalse: [		parentProject ifNil: [^ self inform: 'The top project can''t do that'].		pvm _ parentProject findProjectView: self.		pvm armsLengthCommand: {self. aCommand}.		self exit.	].! !!ProjectLoading class methodsFor: 'as yet unclassified' stamp: 'RAA 5/10/2001 12:52'!openName: aFileName stream: preStream fromDirectory: aDirectoryOrNil withProjectView: existingView	"Reconstitute a Morph from the selected file, presumed to be represent a Morph saved via the SmartRefStream mechanism, and open it in an appropriate Morphic world." 	| morphOrList proj trusted localDir projStream archive mgr projectsToBeDeleted |	(preStream isNil or: [preStream size = 0]) ifTrue: [		ProgressNotification  signal: '9999 about to enter project'.		"the hard part is over"		^self inform: 'It looks like a problem occurred whilegetting this project. It may be temporary,so you may want to try again,'	].	ProgressNotification signal: '2:fileSizeDetermined ',preStream size printString.	preStream isZipArchive 		ifTrue:[	archive _ ZipArchive new readFrom: preStream.				projStream _ self projectStreamFromArchive: archive]		ifFalse:[projStream _ preStream].	trusted _ SecurityManager default positionToSecureContentsOf: projStream.	trusted ifFalse:[(SecurityManager default enterRestrictedMode) ifFalse:[		(preStream respondsTo: #close) ifTrue:[preStream close].		^self]].	localDir _ Project squeakletDirectory.	aFileName ifNotNil: [		(aDirectoryOrNil isNil or: [aDirectoryOrNil pathName ~= localDir pathName]) ifTrue: [			localDir deleteFileNamed: aFileName.			(localDir fileNamed: aFileName) 				nextPutAll: preStream allContentsWithoutSideEffects;				close.		].	].	morphOrList _ projStream asUnZippedStream.	preStream sleep.		"if ftp, let the connection close"	ProgressNotification  signal: '3:unzipped'.	ResourceCollector current: ResourceCollector new.	morphOrList _ morphOrList fileInObjectAndCode.	mgr _ ResourceManager new initializeFrom: ResourceCollector current.	archive ifNotNil:[mgr preLoadFromArchive: archive].	(preStream respondsTo: #close) ifTrue:[preStream close].	ResourceCollector current: nil.	ProgressNotification  signal: '4:filedIn'.	ProgressNotification  signal: '9999 about to enter project'.		"the hard part is over"	(morphOrList isKindOf: ImageSegment) ifTrue: [		proj _ morphOrList arrayOfRoots 			detect: [:mm | mm class == Project] 			ifNone: [^self inform: 'No project found in this file'].		proj resourceManager: mgr.		proj versionFrom: preStream.		proj lastDirectory: aDirectoryOrNil.		CurrentProjectRefactoring currentBeParentTo: proj.		projectsToBeDeleted _ OrderedCollection new.		existingView ifNil: [			Smalltalk isMorphic ifTrue: [				proj createViewIfAppropriate.			] ifFalse: [				ChangeSorter allChangeSets add: proj changeSet.				ProjectView openAndEnter: proj.				"Note: in MVC we get no further than the above"			].		] ifNotNil: [			(existingView project isKindOf: DiskProxy) ifFalse: [				existingView project changeSet name: ChangeSet defaultName.				projectsToBeDeleted add: existingView project.			].			(existingView owner isKindOf: SystemWindow) ifTrue: [				existingView owner model: proj			].			existingView project: proj.		].		ChangeSorter allChangeSets add: proj changeSet.		Project current projectParameters 			at: #deleteWhenEnteringNewProject 			ifPresent: [ :ignored | 				projectsToBeDeleted add: Project current.				Project current removeParameter: #deleteWhenEnteringNewProject.			].		projectsToBeDeleted isEmpty ifFalse: [			proj projectParameters 				at: #projectsToBeDeleted 				put: projectsToBeDeleted.		].		^ ProjectEntryNotification signal: proj	].	(morphOrList isKindOf: SqueakPage) ifTrue: [		morphOrList _ morphOrList contentsMorph	].	(morphOrList isKindOf: PasteUpMorph) ifFalse: [		^ self inform: 'This is not a PasteUpMorph or exported Project.'	].	(Project newMorphicOn: morphOrList) enter! !