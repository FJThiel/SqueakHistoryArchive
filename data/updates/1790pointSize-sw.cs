'From Squeak2.7 of 5 January 2000 [latest update: #1789] on 19 January 2000 at 11:58:05 am'!"Change Set:		pointSize-swDate:			19 January 2000Author:			Scott WallaceSwitches to pointSize rather than height as the primary number to use to characterize a font in various menus and description windows.Removes the extra number that formerly showed in font-size menus for certain fonts."!!ParagraphEditor methodsFor: 'editing keys' stamp: 'sw 1/19/2000 11:14'!offerFontMenu	"Present a menu of available fonts, and if one is chosen, apply it to the current selection.  	Use only names of Fonts of this paragraph  "	| aList reply |	aList _ paragraph textStyle fontNamesWithPointSizes.	reply _ (SelectionMenu labelList: aList selections: aList) startUp.	reply ~~ nil ifTrue:		[self replaceSelectionWith:			(Text string: self selection asString 				attribute: (TextFontChange fontNumber: (aList indexOf: reply)))] ! !!StrikeFont methodsFor: 'accessing' stamp: 'sw 1/18/2000 20:54'!pointSize	^ pointSize! !!TextStyle methodsFor: 'accessing' stamp: 'sw 1/19/2000 11:12'!fontNamesWithPointSizes	^ fontArray collect:		[:x | x name withoutTrailingDigits, ' ', x pointSize printString]  "TextStyle default fontNamesWithPointSizes"! !!TextStyle methodsFor: 'fonts and font indexes' stamp: 'sw 1/18/2000 21:34'!fontOfPointSize: aPointSize	^ fontArray detect: [:aFont | aFont pointSize = aPointSize] ifNone: [nil]! !!UpdatingStringMorph methodsFor: 'editing' stamp: 'sw 1/19/2000 11:48'!setFontSize	| sizes reply family |	family _ font ifNil: [TextStyle default] ifNotNil: [font textStyle].	family ifNil: [family _ TextStyle default].  "safety net -- this line SHOULD be unnecessary now"	sizes _ 	family fontNamesWithPointSizes.	reply _ (SelectionMenu labelList: sizes selections: sizes) startUp.	reply ifNotNil:		[self font: (family fontAt: (sizes indexOf: reply))]! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/19/2000 11:24'!fontArrayForStyle: aName	^ ((TextStyle named: aName asSymbol) ifNil: [self error: 'text style not found']) fontArray"Utilities fontArrayForStyle: 'Palatino'""Utilities fontPointSizesFor: 'Elmo'"! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/18/2000 21:35'!fontMenuForStyle: styleName target: target selector: selector 	| aMenu |	aMenu _ MenuMorph entitled: styleName. 	(Utilities pointSizesFor: styleName) do:		[:aWidth |			aMenu 				add: (aWidth asString, ' Point') 				target: target 				selector: selector				argument: ((TextStyle named: styleName) fontOfPointSize: aWidth).                aMenu lastItem font: ((TextStyle named: styleName) fontOfPointSize: aWidth)].        ^ aMenu! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/19/2000 11:26'!fontPointSizesFor: aName	^ (self fontArrayForStyle: aName) collect: [:f | f pointSize]"Utilities fontPointSizesFor: 'Palatino'""Utilities fontPointSizesFor: 'Elmo'"! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/18/2000 21:37'!fontSizeSummary	"Utilities fontSizeSummary"	| aString aList |	aList _ Utilities knownTextStyles.	aString _ String streamContents:		[:aStream |			aList do: [:aStyleName |				aStream nextPutAll:					aStyleName, '  ',					(Utilities fontPointSizesFor: aStyleName) asArray storeString.				aStream cr]].	(StringHolder new contents: aString)		openLabel: 'Font styles and sizes'! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/19/2000 11:30'!fontWidthsFor: aName	^ (self fontArrayForStyle: aName) collect: [:f | f maxWidth]"Utilities fontWidthsFor: 'ComicPlain'"! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/19/2000 11:13'!mvcPromptForFont: aPrompt andSendTo: aTarget withSelector: aSelector        | aMenu aChoice aStyle namesAndSizes aFont |	"Utilities mvcPromptForFont: 'Choose system font style' andSendTo: Utilities withSelector: #setSystemFontTo:"	aMenu _ CustomMenu new.	Utilities actualTextStyles keys do:		[:styleName |			aMenu add: styleName action: styleName].	aChoice _ aMenu startUpWithCaption: aPrompt.	aChoice ifNil: [^ self].	aMenu _ CustomMenu new.	aStyle _ TextStyle named: aChoice.	(namesAndSizes _ aStyle fontNamesWithPointSizes) do:		[:aString | aMenu add: aString action: aString].	aChoice _ aMenu startUpWithCaption: nil.	aChoice ifNil: [^ self].	aFont _ aStyle fontAt: (namesAndSizes indexOf: aChoice).	aTarget perform: aSelector with: aFont! !!Utilities class methodsFor: 'text styles and fonts' stamp: 'sw 1/19/2000 11:31'!pointSizesFor: aName	^ (self fontArrayForStyle: aName) collect: [:f | f pointSize]"Utilities pointSizesFor: 'Palatino'"! !