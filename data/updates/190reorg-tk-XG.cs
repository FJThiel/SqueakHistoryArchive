'From Squeak 2.1 of June 30, 1998 on 15 August 1998 at 10:03:49 pm'!!ClassDescription methodsFor: 'fileIn/Out' stamp: 'tk 8/15/1998 22:02'!methodsFor: categoryName stamp: changeStamp prior: indexAndOffset	"Prior source link ignored when filing in."	^ ClassCategoryReader new setClass: self				category: categoryName asSymbol				changeStamp: changeStamp"Most importantly, return the new ClassCategoryReader, so a fileIn will let it seize control.  So method will be placed in the proper category.  See the transfer of control where ReadWriteStream fileIn calls scanFrom:"!]style[(65 333 22 17)f1b,f1,f1LReadWriteStream fileIn;,f1! !!ClassDescription methodsFor: 'fileIn/Out' stamp: 'tk 8/15/1998 15:26'!reorganize	"During fileIn, !!Rectangle reorganize!! allows Rectangle to seize control and treat the next chunk as its organization.  See the transfer of control where ReadWriteStream fileIn calls scanFrom:"	Smalltalk changes reorganizeClass: self.	^self organization!]style[(10 156 22 80)f1b,f1,f1LReadWriteStream fileIn;,f1! !!Morph reorganize!('initialization' initialExtent initialize openInMVC openInWorld openInWorld: standardPalette)('classification' isAlignmentMorph isFlexMorph isHandMorph isLayoutMorph isMorph isPlayfieldLike isRenderer isWorldMorph isWorldOrHandMorph)('accessing' actorState actorState: actorStateOrNil assuredPlayer balloonHelpTextForHandle: balloonText balloonTextSelector: beSticky color color: colorForInsets colorSettable eventHandler eventHandler: forwardDirection hasTranslucentColor highlightColor highlightColor: isLocked isSticky lock lock: player player: regularColor regularColor: toggleStickiness unlock unlockContents)('access properties' hasProperty: setProperty:toValue: valueOfProperty: valueOfProperty:ifAbsent:)('copying' copy copyRecordingIn: copyWithoutSubmorphs fullCopy updateReferencesUsing: usableDuplicate usableDuplicateIn: usableSiblingInstance veryDeepCopy veryDeepCopyWithoutPlayer)('structure' eachStepInOwnerChainDo: isInWorld nearestOwnerThat: outermostMorphThat: owner ownerThatIsA: pasteUpMorph presenter primaryHand renderedMorph root topRendererOrSelf withAllContainers world)('submorphs-accessing' allMorphs allMorphsDo: allNonSubmorphMorphs couldBeOwnedBy: findA: findDeepSubmorphThat:ifAbsent: findInWorldA: findSubmorphThat:ifAbsent: firstSubmorph hasSubmorphWithProperty: hasSubmorphs lastSubmorph morphsAt: morphsAt:addTo: submorphCount submorphNamed: submorphNamed:ifNone: submorphWithProperty: submorphs submorphsBehind:do: submorphsDo: submorphsInFrontOf:do: submorphsReverseDo: submorphsSatisfying: uncoveredAt: unlockedMorphsAt: unlockedMorphsAt:addTo:)('submorphs-add/remove' addAllMorphs: addMorph: addMorphBack: addMorphCentered: addMorphFront: addMorphFront:fromWorldPosition: addMorphNearBack: copyWithoutSubmorph: delete deleteSubmorphsWithProperty: goBehind privateDelete removeAllMorphs removeEmptyLayoutMorphs replaceSubmorph:by:)('drawing' areasRemainingToFill: doesOwnRotation drawOn: flash fullDrawOn: fullDrawOn:butDoNotDraw: hide imageForm imageFormForRectangle: show)('geometry' align:with: bottom bottom: bottomLeft bottomLeft: bottomRight bottomRight: bounds bounds: boundsInWorld center extent extent: fullBounds fullBoundsInWorld height height: innerBounds left left: minHeight minWidth nextOwnerPage pointInWorld: position position: positionAtBottomLeft positionAtBottomRight previousOwnerPage right right: screenLocation screenRectangle setConstrainedPositionFrom: top top: topLeft topLeft: topRight topRight: width width: worldBounds)('rotate scale and flex' addFlexShell maxScaleFactor newScaleFactor:previousScaleFactor: rotationDegrees)('geometry testing' containsPoint: fullContainsPoint:)('geometry eToy' addTransparentSpacerOfSize: color:sees: colorUnder goHome move:toPosition: referencePosition referencePosition: wrap x x: y y:)('thumbnail' newThumbnailOfHeight: thumbnailOfHeight:)('dropping/grabbing' aboutToBeGrabbedBy: acceptDroppingMorph:event: allowSubmorphExtraction beRepelling justDroppedInto:event: morphToDropFrom: morphToGrabFrom: repelsMorph:event: rootForGrabOf: slideBackToFormerSituation: slideToTrash: substituteForMorph:beingDroppedOn: vanishAfterSlidingTo:event: wantsDroppedMorph:event:)('event handling' click: cursorPoint doubleClick: drag: handlesDragOver: handlesMouseDown: handlesMouseOver: hasFocus keyStroke: keyboardFocusChange: mouseDown: mouseEnter: mouseLeave: mouseMove: mouseUp: mouseUpBalk: on:send:to: on:send:to:withValue: passToEventHandler: preemptsMouseDown: removeLink: restoreSuspendedEventHandler suspendEventHandler transformFrom: transformFromWorld trumpsMouseDown: wantsKeyboardFocusFor: wouldAcceptKeyboardFocus)('pen' choosePenColor: choosePenSize getPenColor getPenDown getPenSize liftPen lowerPen penColor:)('naming' allSubmorphNames choosePartName choosePartNameSilently externalName formalCostumeName innocuousName knownName name: nameInModel renameTo: setNamePropertyTo: setNameTo: specialNameInModel updateWorldAfterRenamingMe:)('stepping and presenter' arrangeToStartStepping playfield start startStepping startSteppingIn: step stepTime stop stopStepping wantsSteps)('menus' addAddHandMenuItemsForHalo:hand: addCustomHaloMenuItems:hand: addCustomMenuItems:hand: addDebuggingItemsTo:hand: addDropShadow addPaintingItemsTo:hand: adhereToEdge adhereToEdge: inspectInMorphic setToAdhereToEdge: snapToEdgeIfAppropriate)('halos and balloon help' addFontHandlesTo:box: addHalo addOptionalHandlesTo:box: deleteBalloon editBalloonHelpContent: editBalloonHelpText halo hasHalo mouseDownOnHelpHandle: noHelpString removeHalo setBalloonText: showBalloon: wantsBalloon wantsHalo wantsHaloFor:)('change reporting' changed invalidRect: layoutChanged ownerChanged)('player' newPlayerInstance okayToDuplicate showPlayerMenu)('player commands' beep beep: jumpTo: makeFenceSound set: wearCostume:)('player viewer' openViewerForArgument slotNamesAndTypesForBank: updateLiteralLabel)('scripting' canHaveScript instantiatedUserScriptsDo: isTileLike isTileScriptingElement jettisonScripts justClonedFrom: justDuplicatedFrom: makeAllTilesColored makeAllTilesGreen restoreTypeColor scriptEditorFor: scriptPerformer tearOffTile updatingTileForArgType:partName:getSelector:putSelector: useUniformTileColor valueAsConstant viewAfreshShowingScript:at:)('e-toy support' allMorphsAndBookPagesInto: allMorphsIncludingBookPages asNumber: clearPaletteArea configureForKids holdsDataForEachInstance makeGraphPaper makeGraphPaperGrid:background:line: mustBeBackmost nextPageButton objectViewed previousPageButton referencePlayfield setStandardTexture standardHolder succeededInRevealing: textureParameters unlockOneSubpart)('button' addLabel: addLabel:outset:)('parts bin' inPartsBin isPartsBin isPartsDonor isPartsDonor: markAsPartsDonor residesInPartsBin)('printing' colorString: constructorString defaultLabelForInspector fullPrintOn: initString printConstructorOn:indent: printConstructorOn:indent:nodeDict: printOn: printStructureOn:indent: structureString)('property extension' assureExtension copyPropertiesFrom:dict: extension otherProperties removeProperty:)('caching' fullLoadCachedState fullReleaseCachedState loadCachedState releaseCachedState)('debug and other' inspectOwnerChain installModelIn: slotSpecifications tempCommand)('private' privateAddMorph:atIndex: privateBounds: privateColor: privateFullMoveBy: privateMoveBy: privateOwner: privateRemoveMorph: privateSubmorphs privateSubmorphs:)('fileIn/out' objectToStoreOnDataStream prepareToBeSaved saveOnFile storeDataOn:)('object fileIn' convertbosfce0:bosfcep0: convertbosfcep0:bosfcepc0: convertbosfcepc0:bosfce0:)!!ObjectScanner methodsFor: 'as yet unclassified' stamp: 'tk 8/15/1998 15:26'!initialize	"remove all old class vars that are not instance-specific classes being renamed"	self clear.	"Most importantly, return self, so a fileIn will let ObjectScanner seize control.  So UniClasses can be remapped.  See the transfer of control where ReadWriteStream fileIn calls scanFrom:"!]style[(10 247 22 17)f1b,f1,f1LReadWriteStream fileIn;,f1! !!ReferenceStream reorganize!('writing' beginInstance:size: blockers blockers: isAReferenceType: nextPutWeak: objectIfBlocked: references reset setCurrentReference: setStream: tryToPutReference:typeID:)('reading' beginReference: getCurrentReference internalize: next noteCurrentReference: objectAt:)('statistics' statisticsOfRefs)!!SimpleClientSocket methodsFor: 'all' stamp: 'tk 8/14/1998 11:46'!getMultilineResponseShowing: showFlag	"Get a multiple line response to the last command. A multiple line response ends with a line containing only a single period (.) character. Linefeed characters are filtered out. If showFlag is true, each line is shown in the upper-left corner of the Display as it is received."	| response done chunk |	response _ WriteStream on: ''.	done _ false.	[done] whileFalse: [		showFlag			ifTrue: [chunk _ self getResponseShowing: true]			ifFalse: [chunk _ self getResponse].		response nextPutAll: chunk.		done _ self endsWithSinglePeriodLine: response contents].	^ response contents! !