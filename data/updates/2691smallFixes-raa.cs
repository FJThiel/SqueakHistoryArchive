'From Squeak2.9alpha of 17 July 2000 [latest update: #2688] on 24 September 2000 at 6:02:05 pm'!"Change Set:		smallFixesDate:			24 September 2000Author:			Bob Arning- when the status (paused/ticking) button is clicked on a script, make sure we have the new version of controls- since some old projects have periods in their name, we need to be a bit more careful about parsing the name- disallow periods in project names to avoid problems in the future- implement #dataIsValid in FileStream for polymorphism with RemoteFileStream"!!EToyProjectRenamerMorph methodsFor: 'as yet unclassified' stamp: 'RAA 9/24/2000 17:54'!rebuild	self removeAllMorphs.	self addARow: {		(StringMorph contents: 'Please name this project' font: self myFont) lock.	}.	(self addARow: {		(theNameMorph _ TextMorph new			beAllFont: self myFont;			extent: 300@20;			contentsWrapped: 'the old name';			setBalloonText: 'Pick a name 24 characters or less and avoid the following characters: : < > | / \ ? * " .'			).	}) color: Color white; borderColor: Color black; borderWidth: 1.	self addARow: {		self okButton.		self cancelButton.	}.! !!FileStream methodsFor: 'remote file compatibility' stamp: 'RAA 9/24/2000 18:00'!dataIsValid	self flag: #bob.		"we needed this if a remote stream, but could be local as well"! !!Project class methodsFor: 'squeaklet on server' stamp: 'RAA 9/24/2000 17:54'!isBadNameForStoring: aString	| badChars |	"will the name of this project cause problems when stored on an arbitrary file system?"	badChars _ #( $: $< $> $| $/ $\ $? $* $" $.) asSet.	^aString size > 24 or: [aString anySatisfy: [ :each | badChars includes: each]]! !!Project class methodsFor: 'squeaklet on server' stamp: 'RAA 9/24/2000 17:51'!mostRecent: projName onServer: aServerDirectory	| stem list max goodName triple num stem1 stem2 rawList nothingFound unEscName |	"Find the exact fileName of the most recent version of project with the stem name of projName.  Names are of the form 'projName|mm.pr' where mm is a mime-encoded integer version number.	File names may or may not be HTTP escaped, %20 on the server."	self flag: #bob.		"do we want to handle unversioned projects as well?"	nothingFound _ {nil. -1}.	aServerDirectory ifNil: [^nothingFound].	"23 sept 2000 - some old projects have periods in name so be more careful"	unEscName _ projName unescapePercents.	stem _ unEscName copyUpTo: $|.	stem = unEscName ifTrue: [		(unEscName occurrencesOf: $.) > 1 ifTrue: [			stem _ unEscName copyUpToLast: $..		].	].	rawList _ aServerDirectory fileNames.	rawList class == String ifTrue: [self inform: 'server is unavailable'. ^nothingFound].	list _ rawList collect: [:nnn | nnn unescapePercents].	max _ -1.  goodName _ nil.	list withIndexDo: [:aName :ind |		(aName beginsWith: stem) ifTrue: [			(triple _ aName findTokens: '|.') size >= 3 ifTrue: [				num _ Base64MimeConverter decodeInteger: triple second unescapePercents.				num > max ifTrue: [max _ num.  goodName _ (rawList at: ind)]]]].	max = -1 ifFalse: [^ Array with: goodName with: max].	"try with underbar for spaces on server"	(stem includes: $ ) ifTrue: [		stem1 _ stem copyReplaceAll: ' ' with: '_'.		list withIndexDo: [:aName :ind |			(aName beginsWith: stem1) ifTrue: [				(triple _ aName findTokens: '|.') size >= 3 ifTrue: [					num _ Base64MimeConverter decodeInteger: triple second unescapePercents.					num > max ifTrue: [max _ num.  goodName _ (rawList at: ind)]]]]].	max = -1 ifFalse: [^ Array with: goodName with: max].		"try without the marker | "	stem1 _ stem allButLast, '.pr'.	stem2 _ stem1 copyReplaceAll: ' ' with: '_'.	"and with spaces replaced"	list withIndexDo: [:aName :ind |		(aName beginsWith: stem1) | (aName beginsWith: stem2) ifTrue: [			(triple _ aName findTokens: '.') size >= 2 ifTrue: [				max _ 0.  goodName _ (rawList at: ind)]]].	"no other versions"	max = -1 ifFalse: [^ Array with: goodName with: max].	^nothingFound		"no matches"! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'RAA 9/24/2000 17:50'!replaceRow1	submorphs first delete.  "the button row"	self addMorphFront: self buttonRowForEditor.  "up to date"! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'RAA 9/24/2000 17:50'!updateStatus	"Update that status in the receiver's header"	(self topEditor == self) ifTrue: [		(self firstSubmorph findA: ScriptStatusControl) ifNil: [self replaceRow1].		self updateStatusMorph: (self firstSubmorph findA: ScriptStatusControl)	]! !Undeclared removeUnreferencedKeys!