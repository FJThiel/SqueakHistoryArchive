'From Squeak2.8alpha of 4 February 2000 [latest update: #2005] on 22 April 2000 at 8:00:25 pm'!"Change Set:		1048HandMorphCleanUp-smaDate:			24 March 2000Author:			Stefan Matthias AustGet rid of 'isKindOf: HandMorph'"!!EventHandler methodsFor: 'initialization' stamp: 'sma 3/24/2000 11:44'!adaptToWorld: aWorld	"If any of my recipients refer to a world or a hand, make them now refer	to the corresponding items in the new world.  (instVarNamed: is slow, later	use perform of two selectors.)"	| value newValue |	#(mouseDownRecipient mouseStillDownRecipient mouseUpRecipient	mouseEnterRecipient mouseLeaveRecipient mouseEnterDraggingRecipient	mouseLeaveDraggingRecipient keyStrokeRecipient valueParameter) do:		[:aName |		(value _ self instVarNamed: aName asString) ifNotNil:			[newValue _ nil.			value isMorph				ifTrue:					[value isWorldMorph ifTrue: [newValue _ aWorld].					value isHandMorph ifTrue: [newValue _ aWorld primaryHand]]				ifFalse: [(value isKindOf: Presenter) ifTrue: [newValue _ aWorld presenter]].			(newValue notNil and: [newValue ~~ value])				ifTrue:					[self instVarNamed: aName asString put: newValue]]]! !!Morph methodsFor: 'e-toy support' stamp: 'sma 3/24/2000 11:48'!referencePlayfield	| former |	owner ifNotNil:		[owner isPlayfieldLike ifTrue: [^ owner].		(owner isHandMorph and: [(former _ owner formerOwner) notNil])			ifTrue:				[^ former isPlayfieldLike 					ifTrue: [former]					ifFalse: [former referencePlayfield]]].	self isInWorld ifFalse: [^ nil].	^ self world submorphNamed: 'playfield'! !!BlobMorph methodsFor: 'stepping' stamp: 'sma 3/24/2000 11:40'!bounceOffWalls	" Change sign of velocity when we hit a wall of the container "	| ob sb |	" If owned by a handmorph we're being dragged or something;	  don't bounce since the boundaries are different than our real parent "	owner isHandMorph ifTrue: [ ^ self ].	" If we're entirely within the parents bounds, we don't bounce "	ob := owner bounds.	sb := self bounds.	(ob containsRect: sb) ifTrue: [ ^ self ].	" We're partly outside the parents bounds; better bounce or we disappear!! "	sb top < ob top ifTrue: [ velocity := velocity x @ velocity y abs ].	sb left < ob left ifTrue: [ velocity := velocity x abs @ velocity y ].	sb bottom > ob bottom ifTrue: [ velocity := velocity x @ velocity y abs negated ].	sb right > ob right ifTrue: [ velocity := velocity x abs negated @ velocity y ].! !!MagnifierMorph methodsFor: 'magnifying' stamp: 'sma 3/24/2000 11:45'!sourcePoint	"If we are being dragged use our center, otherwise use pointer position"	^(trackPointer not or: [owner isHandMorph])		ifTrue: [self center]		ifFalse: [self currentHand lastEvent cursorPoint]! !!MenuItemMorph methodsFor: 'accessing' stamp: 'sma 3/24/2000 11:46'!adaptToWorld: aWorld	super adaptToWorld: aWorld.	target isMorph		ifTrue:			[target isWorldMorph ifTrue: [self target: aWorld].			target isHandMorph ifTrue: [self target: aWorld primaryHand]]		ifFalse: [(target isKindOf: Presenter) ifTrue: [self target: aWorld presenter]]! !!ScaleMorph methodsFor: 'object fileIn' stamp: 'sma 3/24/2000 12:20'!convertbosfcebbcssmmmmt0: varDict bosfcebbcssmmmmtlc0: smartRefStrm	labelsAbove _ true.	captionAbove _ true! !!ScaleMorph class methodsFor: 'examples' stamp: 'sma 3/24/2000 12:09'!example1	"Example 1 captions and labels above, ticks point up"	^ (self new		start: 0		stop: 150		minorTick: 1		minorTickLength: 2		majorTick: 10		majorTickLength: 10		caption: 'Example 1'		tickPrintBlock: [:v | v printString];		width: 300) openInWorld! !!ScaleMorph class methodsFor: 'examples' stamp: 'sma 3/24/2000 12:09'!example2	"Example 2 captions and labels above, ticks point down"	^ (self new		start: 0		stop: 150		minorTick: 1		minorTickLength: 2		majorTick: 10		majorTickLength: -10		caption: 'Example 2'		tickPrintBlock: [:v | v printString];		width: 300) openInWorld! !!ScaleMorph class methodsFor: 'examples' stamp: 'sma 3/24/2000 12:11'!example3	"Example 3 caption above, labels below, ticks point down"	^ (self new		start: -23		stop: 47		minorTick: 1		minorTickLength: 2		majorTick: 10		majorTickLength: -10		caption: 'Example 3'		tickPrintBlock: [:v | v printString]		labelsAbove: false		captionAbove: true;		color: Color lightBlue;		width: 300) openInWorld! !!ScaleMorph class methodsFor: 'examples' stamp: 'sma 3/24/2000 12:10'!example4	"Example 4 caption below, labels above, ticks point up"	^ (self new		start: 100000		stop: 300000		minorTick: 5000		minorTickLength: 2		majorTick: 50000		majorTickLength: 10		caption: 'Example 4'		tickPrintBlock: [:v | '$' , v printString]		labelsAbove: true		captionAbove: false;		color: Color lightOrange;		width: 300) openInWorld! !!SimpleButtonMorph methodsFor: 'initialization' stamp: 'sma 3/24/2000 11:49'!adaptToWorld: aWorld	super adaptToWorld: aWorld.	target isMorph		ifTrue:			[target isWorldMorph ifTrue: [self target: aWorld].			target isHandMorph ifTrue: [self target: aWorld primaryHand]]		ifFalse: [(target isKindOf: Presenter) ifTrue: [self target: aWorld presenter]]! !!StringButtonMorph methodsFor: 'initialization' stamp: 'sma 3/24/2000 11:49'!adaptToWorld: aWorld	super adaptToWorld: aWorld.	target isMorph		ifTrue:			[target isWorldMorph ifTrue: [self target: aWorld].			target isHandMorph ifTrue: [self target: aWorld primaryHand]]		ifFalse: [(target isKindOf: Presenter) ifTrue: [self target: aWorld presenter]]! !!ThreePhaseButtonMorph methodsFor: 'as yet unclassified' stamp: 'sma 3/24/2000 11:50'!adaptToWorld: aWorld	super adaptToWorld: aWorld.	target isMorph		ifTrue:			[target isWorldMorph ifTrue: [self target: aWorld].			target isHandMorph ifTrue: [self target: aWorld primaryHand]]		ifFalse: [(target isKindOf: Presenter) ifTrue: [self target: aWorld presenter]]! !!UpdatingMenuItemMorph methodsFor: 'as yet unclassified' stamp: 'sma 3/24/2000 11:51'!adaptToWorld: aWorld	super adaptToWorld: aWorld.	wordingProvider isMorph		ifTrue:			[wordingProvider isWorldMorph ifTrue: [	wordingProvider _ aWorld].			wordingProvider isHandMorph ifTrue: [wordingProvider _ aWorld primaryHand]]		ifFalse: [(wordingProvider isKindOf: Presenter) ifTrue: [wordingProvider _ aWorld presenter]]! !!ScaleMorph reorganize!('initialization' initialize start:stop:minorTick:minorTickLength:majorTick:majorTickLength: start:stop:minorTick:minorTickLength:majorTick:majorTickLength:caption:tickPrintBlock: start:stop:minorTick:minorTickLength:majorTick:majorTickLength:caption:tickPrintBlock:labelsAbove:captionAbove:)('drawing' buildLabels drawMajorTicksOn: drawMinorTicksOn: drawOn: drawTicksOn:)('accessing' caption caption: captionAbove: labelsAbove: majorTickLength: minorTickLength: start start: stop stop: tickPrintBlock:)('geometry' checkExtent: extent:)('object fileIn' convertbosfcebbcssmmmmt0:bosfcebbcssmmmmtlc0:)!