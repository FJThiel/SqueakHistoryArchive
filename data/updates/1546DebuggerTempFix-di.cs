'From Squeak 2.5 of August 6, 1999 [latest update: #1545] on 12 October 1999 at 9:55:21 pm'!"Change Set:		DebuggerTempFixDate:			12 October 1999Author:			Dan IngallsFixes a problem with temps being out of order in the debugger.Thanks to Ted Kaehler for noting when this happened.Also makes it possible to evaluate expressions with temp variables in them in the debugger.Even block temps can used in these expressions."!!MessageAsTempNode methodsFor: 'access to remote temps' stamp: 'di 10/12/1999 17:29'!code	"Allow synthetic temp nodes to be sorted by code"	^ arguments first literalValue! !!Encoder methodsFor: 'results' stamp: 'di 10/12/1999 15:31'!tempNodes 	| tempNodes |	tempNodes _ SortedCollection sortBlock: [:n1 :n2 | n1 code <= n2 code].	scopeTable associationsDo:		[:assn | assn value isTemp ifTrue: [tempNodes add: assn value]].	^ tempNodes! !!ParseNode methodsFor: 'testing' stamp: 'di 10/12/1999 15:28'!isTemp	^ false! !!Encoder methodsFor: 'temps' stamp: 'di 10/12/1999 16:53'!bindAndJuggle: name	| node nodes first thisCode |	node _ self reallyBind: name.	"Declared temps must precede block temps for decompiler and debugger to work right"	nodes _ self tempNodes.	(first _ nodes findFirst: [:n | n scope > 0]) > 0 ifTrue:		[node == nodes last ifFalse: [self error: 'logic error'].		thisCode _ (nodes at: first) code.		first to: nodes size - 1 do:			[:i | (nodes at: i) key: (nodes at: i) key							code: (nodes at: i+1) code].		nodes last key: nodes last key code: thisCode].		^ node! !!Encoder methodsFor: 'results' stamp: 'di 10/12/1999 16:12'!tempNames 	^ self tempNodes collect:		[:node | (node isMemberOf: MessageAsTempNode)					ifTrue: [scopeTable keyAtValue: node]					ifFalse: [node key]]! !!Encoder methodsFor: 'results' stamp: 'di 10/12/1999 17:15'!unusedTempNames 	| unused name |	unused _ OrderedCollection new.	scopeTable associationsDo:		[:assn | (assn value isUnusedTemp)			ifTrue: [name _ assn value key.					name ~= 'homeContext' ifTrue: [unused add: name]]].	^ unused! !!MessageAsTempNode methodsFor: 'access to remote temps' stamp: 'di 10/12/1999 17:29'!code	"Allow synthetic temp nodes to be sorted by code"	^ arguments first literalValue! !!Parser methodsFor: 'error correction' stamp: 'di 10/12/1999 15:17'!declareTempAndPaste: name	| insertion tabbed |	(requestor text string at: tempsMark) = $|				ifTrue:  "Paste it before the second vertical bar"					[insertion _ name, ' '.					(requestor text string at: tempsMark-1) isSeparator						ifFalse: [insertion _ ' ', insertion].					tempsMark _ tempsMark +						(self substituteWord: insertion							wordInterval: (tempsMark to: tempsMark-1)							offset: 0)]				ifFalse:  "No bars - insert some with CR, tab"					[insertion _ '| ' , name , ' |'.					tabbed _ tempsMark > 1						and: [(requestor text string at: tempsMark-1) = Character tab].					tabbed						ifTrue: [insertion _ insertion , (String with: Character tab)].					tempsMark _ tempsMark +						(self substituteWord: insertion							wordInterval: (tempsMark to: tempsMark-1)							offset: 0)						- (tabbed ifTrue: [3] ifFalse: [2])].			^ encoder bindAndJuggle: name! !Encoder removeSelector: #badTemps!VariableNode removeSelector: #isTemp!