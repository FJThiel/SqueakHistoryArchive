'From Squeak 2.5 of August 6, 1999 on 6 September 1999 at 11:05:50 pm'!"Change Set:		StringEditHackDate:			6 September 1999Author:			Dan IngallsDefines a very simple edit protocol to replace the old shift-click edit feature of StringMorphs.  It is grossly inefficient, but mostly compatible with other text editing in the system."!TextMorph subclass: #StringMorphEditor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Text Support'!!StringMorph methodsFor: 'drawing' stamp: 'di 9/6/1999 22:43'!drawOn: aCanvas	aCanvas text: contents bounds: bounds font: self fontToUse color: color.! !!StringMorph methodsFor: 'editing' stamp: 'di 9/6/1999 22:44'!doneWithEdits	hasFocus _ false! !!StringMorph methodsFor: 'editing' stamp: 'di 9/6/1999 22:50'!launchMiniEditor: evt	| textMorph |	hasFocus _ true.  "Really only means edit in progress for this morph"	textMorph _ StringMorphEditor new contentsAsIs: contents.	textMorph beAllFont: self fontToUse.	textMorph bounds: (self bounds expandBy: 0@2).	self addMorphFront: textMorph.	evt hand newMouseFocus: textMorph.	textMorph mouseDown: (evt copy setButtons: (evt buttons bitClear: 8 "without shift")).! !!StringMorph methodsFor: 'editing' stamp: 'di 9/5/1999 17:25'!mouseDown: evt	"If the shift key is pressed, make this string the keyboard input focus."	(evt shiftPressed and: [self wantsKeyboardFocusOnShiftClick])		ifTrue: [self launchMiniEditor: evt]		ifFalse: [super mouseDown: evt].! !!StringMorphEditor commentStamp: 'di 9/6/1999 21:19' prior: 0!I am a textMorph used as a pop-up editor for StringMorphs.  I present a yellow background and I go away when a CR is typed or when the user clicks elsewhere.!!StringMorphEditor reorganize!('all' drawOn: keyStroke: keyboardFocusChange:)!!StringMorphEditor methodsFor: 'all' stamp: 'di 9/6/1999 21:35'!drawOn: aCanvas	aCanvas fillRectangle: self bounds color: Color yellow.	^ super drawOn: aCanvas! !!StringMorphEditor methodsFor: 'all' stamp: 'di 9/6/1999 23:05'!keyStroke: evt	"This is hugely inefficient, but it seems to work, and it's unlikely it will ever need	to be any more efficient -- it's only intended to edit single-line strings."	| priorEditor |	((evt keyCharacter = Character enter)		or: [(evt keyCharacter = Character cr)		or: [evt keyCharacter = $s and: [evt commandKeyPressed]]])		ifTrue: [owner acceptContents; doneWithEdits.				evt hand newKeyboardFocus: nil.				^ self delete].	priorEditor _ self editor.  "Save selection state"	super keyStroke: evt.	self releaseParagraph.  "zap the paragraph cache"	self paragraph.  "re-instantiate to set new bounds"	self installEditorToReplace: priorEditor.  "rtestore selection state"	owner contents: self contents asString! !!StringMorphEditor methodsFor: 'all' stamp: 'di 9/6/1999 22:49'!keyboardFocusChange: aBoolean	super keyboardFocusChange: aBoolean.	aBoolean ifFalse: [owner acceptContents; doneWithEdits.  ^ self delete]! !StringMorph removeSelector: #keyboardFocusChange:!StringMorph removeSelector: #keyStroke:!