'From Squeak 2.2 of Sept 23, 1998 on 28 November 1998 at 12:02:25 am'!!BitBltSimulation methodsFor: 'combination rules' stamp: 'ar 11/27/1998 23:56'!alphaBlendScaled: sourceWord with: destinationWord	"Blend sourceWord with destinationWord using the alpha value from sourceWord.	Alpha is encoded as 0 meaning 0.0, and 255 meaning 1.0.	In contrast to alphaBlend:with: the color produced is		srcColor + (1-srcAlpha) * dstColor	e.g., it is assumed that the source color is already scaled."	| unAlpha dstMask srcMask b g r a |	self inline: false.	"Do NOT inline this into optimized loops"	unAlpha _ 255 - (sourceWord >> 24).  "High 8 bits of source pixel"	dstMask _ destinationWord.	srcMask _ sourceWord.	b _ (dstMask bitAnd: 255) * unAlpha >> 8 + (srcMask bitAnd: 255).	b > 255 ifTrue:[b _ 255].	dstMask _ dstMask >> 8.	srcMask _ srcMask >> 8.	g _ (dstMask bitAnd: 255) * unAlpha >> 8 + (srcMask bitAnd: 255).	g > 255 ifTrue:[g _ 255].	dstMask _ dstMask >> 8.	srcMask _ srcMask >> 8.	r _ (dstMask bitAnd: 255) * unAlpha >> 8 + (srcMask bitAnd: 255).	r > 255 ifTrue:[r _ 255].	dstMask _ dstMask >> 8.	srcMask _ srcMask >> 8.	a _ (dstMask bitAnd: 255) * unAlpha >> 8 + (srcMask bitAnd: 255).	a > 255 ifTrue:[a _ 255].	^(((((a << 8) + r) << 8) + g) << 8) + b! !!Morph methodsFor: 'geometry' stamp: 'ar 11/28/1998 00:00'!setConstrainedPositionFrom: aPoint	"Change the position of this morph and and all of its submorphs to aPoint, but don't let me go outside my owner's bounds."	| trialRect delta |	trialRect _ aPoint extent: self bounds extent.	delta _ owner ifNil:[aPoint] ifNotNil:[trialRect amountToTranslateWithin: owner bounds].	self position: aPoint + delta.	self layoutChanged  "So that, eg, surrounding text will readjust"! !!ObjectMemory methodsFor: 'initialization' stamp: 'ar 11/27/1998 23:56'!adjustAllOopsBy: bytesToShift	"Adjust all oop references by the given number of bytes. This is done just after reading in an image when the new base address of the object heap is different from the base address in the image."	"ar 10/7/1998 - Clear the RootBit of all objects"	| oop last header |	"Note: Don't bypass this method even if bytesToShift is zero 		until the RootBit problem has been fixed in the appropriate places."	"bytesToShift = 0 ifTrue: [ ^ nil ]."	oop _ self firstObject.	[oop < endOfMemory] whileTrue: [		(self isFreeObject: oop) ifFalse: [			(self isIntegerObject: oop) ifFalse:[				header _ self longAt: oop.				self longAt: oop put: (header bitAnd: AllButRootBit)].			self adjustFieldsAndClassOf: oop by: bytesToShift. 		].		last _ oop.		oop _ self objectAfter: oop.	].! !!PluggableDictionary methodsFor: 'accessing' stamp: 'ar 11/27/1998 23:55'!equalBlock: aBlock	"Set a new equality block. The block must accept two arguments and return true if the argumets are considered to be equal, false otherwise"	equalBlock _ aBlock.! !!PluggableSet methodsFor: 'accessing' stamp: 'ar 11/27/1998 23:55'!equalBlock: aBlock	"Set a new equality block. The block must accept two arguments and return true if the argumets are considered equal, false otherwise"	equalBlock _ aBlock.! !