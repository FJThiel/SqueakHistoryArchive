'From Squeak3.1alpha [latest update: #''Squeak3.1alpha'' of 20 February 2001 update 3892] on 9 April 2001 at 10:29:05 pm'!"Change Set:		CelesteFurtherCleanupDate:			9 April 2001Author:			Mike RutenbergRemove further 3 instance variables and 3 methods from Celeste at no cost of functionalityReorganize order of applying filters so that they slow custom filter is only applied once the fast subject and participant filter has been done.DEPENDENCY NOTE: This should be filed in AFTER CelesteCleanup-mdr.cs"!Model subclass: #Celeste	instanceVariableNames: 'mailDB currentCategory currentMessages currentMsgID lastCategory subjectFilter fromFilter participantFilter dateFilter customFilterBlock lastCategoryList lastCategoryMenu messageTextView userPassword status tocLists '	classVariableNames: 'CCList CustomFilters CustomFiltersCompiled DeleteInboxAfterFetching FormatWhenFetching MessageCountLimit PopServer PopUserName SmtpServer SuppressWorthlessHeaderFields TimeZone UserName '	poolDictionaries: ''	category: 'Network-Mail Reader'!!Celeste methodsFor: 'open-close' stamp: 'mdr 4/9/2001 22:05'!openOnDatabase: aMailDB	"Initialize myself for the mail database with the given root filename."	mailDB _ aMailDB.	mailDB addDependent: self.	currentCategory _ 'new'.	lastCategory _ ''.	subjectFilter _ ''.	participantFilter _ ''.	self setCategory: currentCategory.! !!Celeste methodsFor: 'table of contents pane' stamp: 'mdr 4/9/2001 21:52'!getCategoryNameIfNone: aBlock	"Prompt the user for a category name"	| catList categoryName categoryMenu |	catList _ self categoryList.	catList remove: '.all.' ifAbsent: [].	catList remove: '.trash.' ifAbsent: [].	catList remove: '.unclassified.' ifAbsent: [].	catList add: '<new category>'.	categoryMenu _ CustomMenu selections: catList.	categoryName _ categoryMenu startUp.	categoryName = nil ifTrue: [^aBlock value].	categoryName = '<new category>' ifTrue: [		categoryName _ FillInTheBlank			request: 'New category name?'			initialAnswer: ''.		(categoryName isEmpty) ifTrue: [^aBlock value].		mailDB addCategory: categoryName.		self changed: #categoryList.	].	^lastCategory _ categoryName! !!Celeste methodsFor: 'filtering' stamp: 'mdr 4/9/2001 21:58'!filteredMessagesIn: categoryName	| msgList |	msgList _ mailDB messagesIn: categoryName.	(participantFilter size > 0) ifTrue:		[msgList _ msgList select:			[: id | (mailDB getTOCentry: id) participantHas: participantFilter ]].	(subjectFilter size > 0) ifTrue:		[msgList _ msgList select:			[: id | (mailDB getTOCentry: id) subject includesSubstring: subjectFilter caseSensitive: false]].	"We do custom filters last so they have to apply to the smallest number of messages"	(customFilterBlock notNil) ifTrue:		[msgList _ msgList select:			[: id | customFilterBlock value: (mailDB getTOCentry: id) ]].	^msgList! !!Celeste class methodsFor: 'common build' stamp: 'mdr 4/9/2001 21:55'!buildButtonsFor: model 	"Answer a collection of handy buttons for the Celeste user interface."	| buttons b |	buttons _ OrderedCollection new.	b _ self buildButtonFromSpec: self specForSubjectFilterButton forModel: model.	buttons add: b.	b _ self buildButtonFromSpec: self specForParticipantFilterButton forModel: model.	buttons add: b.	b _ self buildButtonFromSpec: self specForCustomFilterButton forModel: model.	buttons add: b.	true		ifFalse: ["Skip these buttons..."	b _ self buildButtonFromSpec: self specForCustomFilterMoveButton forModel: model.	buttons add: b].	b _ self				buildButtonFromSpec: self specForComposeButton				withBlock: [model compose].	buttons add: b.	b _ self				buildButtonFromSpec: self specForReplyButton				withBlock: [model reply].	buttons add: b.	b _ self				buildButtonFromSpec: self specForForwardButton				withBlock: [model forward].	buttons add: b.	b _ self				buildButtonFromSpec: self specForMoveAgainButton				withBlock: [model moveAgain].	buttons add: b.	b _ self				buildButtonFromSpec: self specForDeleteButton				withBlock: [model deleteMessage].	buttons add: b.	^ buttons! !Celeste class removeSelector: #buildFromFilterButtonForModel:!Celeste removeSelector: #fromFilterOff!Celeste removeSelector: #fromFilterOn:!Model subclass: #Celeste	instanceVariableNames: 'mailDB currentCategory currentMessages currentMsgID lastCategory subjectFilter participantFilter customFilterBlock messageTextView userPassword status tocLists '	classVariableNames: 'CCList CustomFilters CustomFiltersCompiled DeleteInboxAfterFetching FormatWhenFetching MessageCountLimit PopServer PopUserName SmtpServer SuppressWorthlessHeaderFields TimeZone UserName '	poolDictionaries: ''	category: 'Network-Mail Reader'!