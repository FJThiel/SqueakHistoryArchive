'From Squeak3.1alpha of 28 February 2001 [latest update: #4148] on 12 June 2001 at 3:11:40 pm'!"Change Set:		flashJPEGWorkaroundDate:			12 June 2001Author:			Michael RuegerAdds a workaround to the flash reader until reading flash files with multiple jpegs is fixed."!!FlashFileReader methodsFor: 'processing tags' stamp: 'mir 6/11/2001 13:06'!processDefineBitsJPEG2: data	| id image decoder |	id _ data nextWord.	decoder _ FlashJPEGDecoder new.	decoder isStreaming: self isStreaming.	decoder decodeJPEGTables: data.	data atEnd		ifFalse: [			image _ decoder decodeNextImageFrom: data.			Preferences compressFlashImages ifTrue:[image _ image asFormOfDepth: 8].			self recordBitmap: id data: image].	^true! !!JPEGReadWriter methodsFor: 'marker parsing' stamp: 'mir 6/12/2001 11:28'!parseFirstMarker	| marker |	self next = 16rFF ifFalse: [self error: 'JFIF marker expected'].	marker _ self next.	marker = 16rD9		ifTrue: [^self "halt: 'EOI encountered.'"].	marker = 16rD8 ifFalse: [self error: 'SOI marker expected'].	self parseStartOfInput.! !!JPEGReadWriter methodsFor: 'marker parsing' stamp: 'mir 6/12/2001 11:28'!parseNextMarker	"Parse the next marker of the stream"	| byte discardedBytes |	discardedBytes _ 0.	[(byte _ self next) = 16rFF] whileFalse: [discardedBytes _ discardedBytes + 1].		[[(byte _ self next) = 16rFF] whileTrue. byte = 16r00] whileTrue:		[discardedBytes _ discardedBytes + 2].	discardedBytes > 0 ifTrue: [self "notifyWithLabel: 'warning: extraneous data discarded'"].	self perform:		(JFIFMarkerParser			at: byte			ifAbsent:				[(self okToIgnoreMarker: byte)					ifTrue: [#skipMarker]					ifFalse: [self error: 'marker ', byte hex , ' cannot be handled']])! !