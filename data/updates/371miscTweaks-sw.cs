'From Squeak 2.2 of Sept 23, 1998 on 15 October 1998 at 11:42:42 am'!"Change Set:		miscTweaks-swDate:			15 October 1998Author:			Scott WallaceA variety of minor tweaks, including:* Restore the feature of presenting the core-sample list upon 'inspect' request from morph meta-menu.* Take down scrollbar in mvc-variant of SelectorBrowser before going off to new window.* Fix-up change-set-list after submerge-into-other-side command.* Wording change from 'scripting' to 'authoring tools' in world menu.* More morphic things work properly when requested in morphic worlds embedded in mvc projects. * If inactive SystemWindow gets dropped, activate it.* Several obsolete methods deleted."!!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 10/15/1998 11:29'!submergeIntoOtherSide	"Copy the contents of the receiver to the other side, then remove the receiver -- all after checking that all is well."	| other message nextToView i |	self okToChange ifFalse: [^ self].	other _ (parent other: self) changeSet.	other == myChangeSet ifTrue: [^ self inform: 'Both sides are the same!!'].	myChangeSet isEmpty ifTrue: [^ self inform: 'Nothing to copy.  To remove,simply choose "remove".'].	myChangeSet okayToRemove ifFalse: [^ self].	message _ 'Please confirm:  copy all changesin "', myChangeSet name, '" into "', other name, '"and then destroy the change setnamed "', myChangeSet name, '"?'. 	(self confirm: message) ifFalse: [^ self].	other assimilateAllChangesFoundIn: myChangeSet.	nextToView _ ((AllChangeSets includes: myChangeSet)		and: [(i _ AllChangeSets indexOf: myChangeSet) < AllChangeSets size])		ifTrue: [AllChangeSets at: i+1]		ifFalse: [other].	self removePrompting: false.	self showChangeSet: nextToView.	self class gatherChangeSets.	parent modelWakeUp.	"(parent other: self) changed: #classList.	(parent other: self) changed: #messageList."! !!Morph methodsFor: 'initialization' stamp: 'sw 10/9/1998 08:41'!openInWorld	"Add this morph to the world.  If in MVC, then provide a Morphic window for it."	Smalltalk isMorphic ifFalse: [^ self openInMVC].	self openInWorld: World! !!Morph methodsFor: 'initialization' stamp: 'sw 10/9/1998 08:40'!openInWorld: aWorld	"Add this morph to the requested World."	aWorld addMorph: self.	aWorld startSteppingSubmorphsOf: self! !!Morph methodsFor: 'geometry' stamp: 'sw 10/9/1998 08:56'!positionSubmorphs	self submorphsDo:		[:aMorph | aMorph snapToEdgeIfAppropriate]! !!HandMorph methodsFor: 'world menu' stamp: 'sw 10/9/1998 15:40'!buildWorldMenu	"Build the meta menu for the world."	| menu |	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'previous project' target: owner action: #goBack.	menu add: 'jump to project...' action: #jumpToProject.	menu add: 'restore display' target: self world action: #fullRepaintNeeded.	menu addLine.	menu add: 'new morph...' action: #newMorph.	menu add: 'authoring tools...' action: #scriptingDo.	menu add: 'remote...' action: #remoteDo.	menu add: 'debug...' action: #debugDo.	menu addLine.	menu add: 'open...' action: #openWindow.	menu add: 'windows...' action: #windowsDo.	menu add: 'changes...' action: #changesDo.	menu add: 'help...' action: #helpDo.	menu add: 'do...' target: Utilities action: #offerCommonRequests.	menu addLine.	menu add: 'save' action: #saveSession.	menu add: 'save as...' action: #saveAs.	menu add: 'save and quit' action: #saveAndQuit.	menu add: 'quit' action: #quitSession.	^ menu! !!HandMorph methodsFor: 'world menu commands' stamp: 'sw 10/8/1998 16:30'!buildMorphMenuFor: argMorph	"Build the morph menu. This menu has two sections. The first section contains commands that are handled by the hand; the second contains commands handled by the argument morph."	| menu |	argument _ argMorph.	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'grab' action: #grabMorph.	menu add: 'delete' action: #dismissMorph.	menu add: 'copy to paste buffer' action: #copyToPasteBuffer.	menu add: 'go behind' action: #goBehind.	menu add: 'add halo' action: #addHalo.	menu add: 'duplicate' action: #maybeDuplicateMorph.	self potentialEmbeddingTargets size > 1 ifTrue:		[menu add: 'embed...' action: #placeArgumentIn].	menu add: 'resize' action: #resizeMorph.	(argMorph isKindOf: SketchMorph)  ifFalse:		[menu add: 'fill color' action: #changeColor].	(argMorph morphsAt: targetOffset) size > 1 ifTrue:		[menu add: 'submorphs...'			target: self			selector: #selectSubmorphToOperateOn:sending:event:			argumentList: (Array with: argMorph with: #operateOnSubmorph:event:)].	menu addLine.	World ifNil:		[menu add: 'inspect (in MVC)' action: #inspectMorph.		menu add: 'inspect' action: #inspectMorphInMorphic]		ifNotNil:		[menu add: 'inspect' action: #inspectMorph].	menu add: 'browse' action: #browseMorphClass.	menu add: 'make own subclass' action: #subclassMorph.	menu addLine.	menu add: 'name me' action: #nameMorph.	(argMorph isKindOf: MorphicModel) ifTrue:		[menu add: 'save morph as prototype' action: #saveAsPrototype.		(argMorph ~~ self world modelOrNil) ifTrue:			 [menu add: 'become this world''s model' action: #beThisWorldsModel]].	menu add: 'save morph in file' action: #saveOnFile.	menu add: 'show actions' action: #showActions.	menu addLine.	menu defaultTarget: argMorph.	argMorph addCustomMenuItems: menu hand: self.	^ menu! !!PluggableListView methodsFor: 'model access' stamp: 'sw 10/9/1998 08:24'!setSelectionSelectorIs: aSelector	^ aSelector == setSelectionSelector! !!SelectorBrowser methodsFor: 'all' stamp: 'sw 10/9/1998 08:26'!classListIndex: anInteger	classListIndex _ anInteger.	classListIndex > 0 ifTrue:		[self dependents do:			[:dep | ((dep isKindOf: PluggableListView) and:				[dep setSelectionSelectorIs: #classListIndex:])					ifTrue: [dep controller controlTerminate]].		Browser fullOnClass: self selectedClass selector: self selectedMessageName.		"classListIndex _ 0"]! !!SystemWindow methodsFor: 'geometry' stamp: 'sw 10/8/1998 13:42'!extent: newExtent	| inner labelRect paneColor |	self removeHandles.	isCollapsed		ifTrue: [super extent: newExtent x @ (self labelHeight + 2)]		ifFalse: [super extent: newExtent].	inner _ self innerBounds.	labelRect _ self labelRect.	paneColor _ Color perform: model defaultBackgroundColor.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	self setStripeColorsFrom: paneColor.	closeBox align: closeBox topLeft with: inner topLeft + (4@0).	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label fitContents; setWidth: (label width min: bounds width - 50).	label align: label bounds topCenter with: inner topCenter.	self setBoundsOfPaneMorphs.	isCollapsed		ifTrue: [collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds].	self isActive ifTrue: [self addHandles]! !!SystemWindow methodsFor: 'geometry' stamp: 'sw 10/15/1998 11:27'!justDroppedInto: aMorph event: anEvent	isCollapsed		ifTrue: [self position: ((self position max: 0@0) grid: 8@8).				collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds.				TopWindow ~~ self ifTrue: [self activate]]! !!SystemWindow methodsFor: 'geometry' stamp: 'sw 10/8/1998 13:41'!setBoundsOfPaneMorphs	| panelRect |	panelRect _ self panelRect.	paneMorphs with: paneRects do:		[:m :frame |  "m color: paneColor."		m bounds: (((frame scaleBy: panelRect extent) translateBy: panelRect topLeft)) truncated]! !!SystemWindow methodsFor: 'open/close' stamp: 'sw 10/15/1998 11:13'!positionSubmorphs	"Feels like overkill, but effect needed"	super positionSubmorphs.	self submorphsDo:		[:aMorph | aMorph positionSubmorphs]! !!SystemWindow methodsFor: 'top window' stamp: 'sw 10/9/1998 08:50'!activate	"Bring me to the front and make me able to respond to mouse and keyboard"	| oldTop outerMorph |	oldTop _ TopWindow.	TopWindow _ self.	oldTop ifNotNil: [oldTop passivate].	outerMorph _ self topRendererOrSelf.	outerMorph owner firstSubmorph == outerMorph		ifFalse: ["Bring me (with any flex) to the top if not already"				outerMorph owner addMorphFront: outerMorph].	self submorphsDo: [:m | m unlock].	self setStripeColorsFrom: self paneColor.	self removeHandles; addHandles.	self isCollapsed ifFalse:		[model modelWakeUp.		self positionSubmorphs]! !Presenter removeSelector: #addPageTwoControlsTo:!Presenter removeSelector: #newPlayfieldButton!Presenter removeSelector: #makeNewPlayfield!SystemWindow removeSelector: #openInWorld!