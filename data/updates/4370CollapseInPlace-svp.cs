'From Squeak3.1alpha of 16 September 2001 [latest update: #4347] on 26 September 2001 at 12:11:22 am'!"Change Set:		CollapseInPlaceDate:			21 August 2001Author:			Stephen PairThis change set adds a Preference (in the windows category) which allows you to collapse and expand SystemWindows in place.  The collapsed bounds are located at the same origin, and have the same width as the full bounds.  (Similar to 'windowshade' on the Mac.)"!!Preferences class methodsFor: 'standard queries'!collapseWindowsInPlace	^ self		valueOfFlag: #collapseWindowsInPlace		ifAbsent: [false]! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'dew 9/26/2001 00:10'!collapseOrExpand	"Collapse or expand the window, depending on existing state"	| cf |	isCollapsed		ifTrue: 			["Expand -- restore panes to morphics structure"			isCollapsed _ false.			Preferences collapseWindowsInPlace				ifTrue: 					[fullFrame := fullFrame align: fullFrame topLeft with: self getBoundsWithFlex topLeft]				ifFalse:					[collapsedFrame _ self getBoundsWithFlex].			collapseBox ifNotNil: [collapseBox setBalloonText: 'collapse this window'].			self setBoundsWithFlex: fullFrame.			paneMorphs				reverseDo: 					[:m | 					self addMorph: m.					self world startSteppingSubmorphsOf: m].			self activate "-- mainly for findWindow"]		ifFalse: 			["Collapse -- remove panes from morphics structure"			isCollapsed _ true.			fullFrame _ self getBoundsWithFlex.			"First save latest fullFrame"			paneMorphs do: [:m | m delete; releaseCachedState].			model modelSleep.			cf := self getCollapsedFrame.			(collapsedFrame isNil and: [Preferences collapseWindowsInPlace not]) ifTrue:				[collapsedFrame _ cf].			self setBoundsWithFlex: cf.			collapseBox ifNotNil: [collapseBox setBalloonText: 'expand this window'].			expandBox ifNotNil: [expandBox setBalloonText: 'expand to full screen']].	self layoutChanged! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'svp 8/21/2001 11:13'!getCollapsedFrame	| tmp |	^Preferences collapseWindowsInPlace 		ifTrue:			[tmp := self getBoundsWithFlex.			tmp origin corner: (tmp corner x @ 18)]		ifFalse:			[RealEstateAgent assignCollapseFrameFor: self]! !"Postscript:"	Preferences preferenceAt: #collapseWindowsInPlace		ifAbsent: [Preferences				addPreference: #collapseWindowsInPlace				category: #windows				default: false				balloonHelp: 'If true, windows will be collapsed to the bounds of the current window title bar, without moving.']!