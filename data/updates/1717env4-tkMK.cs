'From Squeak2.6 of 11 October 1999 [latest update: #1709] on 13 December 1999 at 11:11:51 am'!!Environment methodsFor: 'fileIn/out' stamp: 'tk 12/11/1999 09:23'!stillOut: list	| |	"Write transcript the names of the Environments in the list who are still out on disk."list do: [:env | (Smalltalk at: env) isInMemory ifFalse: [		Transcript cr; show: 'still out ', env]].Transcript cr.! !!Environment methodsFor: 'fileIn/out' stamp: 'tk 12/13/1999 11:00'!storeAll	| all |	"Write all Environments except me and the top one out as image segments."all _ Set new. Smalltalk "the real one" associationsDo: [:pair | 	(pair value isKindOf: Environment) ifTrue: [		(pair value ~~ self) & (pair value ~~ Smalltalk) ifTrue: [			all add: pair value]]].all asArray do: [:anEnv | anEnv storeSegment].! !!Environment methodsFor: 'fileIn/out' stamp: 'tk 12/13/1999 09:20'!storeSegment	"Store my project out on the disk as an ImageSegment.  Keep the outPointers in memory.  Name it <my name>.seg."| is roots |is _ ImageSegment new.is segmentName: self basicName.roots _ (self select: [:global | global class class == Metaclass]) values asOrderedCollection.roots copy do: [:cls | roots add: cls class].roots add: self.is copyFromRootsLocalFileFor: roots sizeHint: 0.is state = #tooBig ifTrue: [^ false].is extract.is state = #active ifFalse: [^ false].is writeToFile: is segmentName.^ true! !!Environment methodsFor: 'printing' stamp: 'tk 12/11/1999 09:04'!basicName	^ Smalltalk keyAtValue: self ifAbsent: ['Env', self identityHash printString]! !!ImageSegment methodsFor: 'read/write segment' stamp: 'tk 12/13/1999 09:19'!segmentName: aString	"Local file name for this segment."	segmentName _ aString! !!ImageSegment methodsFor: 'read/write segment' stamp: 'tk 12/13/1999 08:45'!writeToFile	state = #active ifFalse: [self error: 'wrong state'. ^ self].	Cursor write showWhile: [		segmentName ifNil: [			segmentName _ (FileDirectory localNameFor: fileName) sansPeriodSuffix].			"still has number on end -- OK normally not nil"		fileName _ self class uniqueFileNameFor: segmentName.		(FileStream newFileNamed: fileName) nextPutAll: segment; close.		segment _ nil.		endMarker _ nil.		state _ #onFile].! !!ImageSegmentRootStub methodsFor: 'fetch from disk' stamp: 'tk 12/13/1999 11:10'!doesNotUnderstand: aMessage 	 "Any normal message sent to this object is really intended for another object that is in a non-resident imageSegment.  Reinstall the segment and resend the message."	imageSegment install.	(Smalltalk includesKey: #ISlog) ifTrue: [		Smalltalk at: #ISlog put: 			(String streamContents: [:strm | 				self printOn: strm. strm space. aMessage printOn: strm.				strm cr.  strm nextPutAll: thisContext sender longStack])].	^ self perform: aMessage selector withArguments: aMessage arguments! !