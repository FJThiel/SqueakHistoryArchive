'From Squeak 2.3 of January 14, 1999 on 20 April 1999 at 4:20:55 pm'!"Change Set:		wnld-morphs-jspDate:			20 April 1999Author:			Jeff PierceAdds the place behavior to WonderlandMorphs to allow these morphs to be moved relative to each other.  Also modifies Morph to allow new morphs to be inserted in front of or behind existing morphs."!!Morph methodsFor: 'submorphs-add/remove' stamp: 'jsp 4/20/1999 16:05'!addMorph: newMorph behind: aMorph	"Add a morph to the list of submorphs behind the specified morph"	| newSubmorphs index |	newMorph owner ifNotNil: [newMorph owner privateRemoveMorph: newMorph].	newMorph layoutChanged.	newMorph privateOwner: self.	newSubmorphs _ submorphs species new: submorphs size + 1.	index _ 1.	[ (submorphs at: index) = aMorph ]		whileFalse: [ newSubmorphs at: index put: (submorphs at: index).					  index _ index + 1 ].	newSubmorphs at: index put: aMorph.	newSubmorphs at: (index + 1) put: newMorph.	newSubmorphs		replaceFrom: (index + 2)		to: newSubmorphs size		with: submorphs		startingAt: (index + 1).	submorphs _ newSubmorphs.	newMorph changed.	self layoutChanged.! !!Morph methodsFor: 'submorphs-add/remove' stamp: 'jsp 4/20/1999 16:05'!addMorph: newMorph inFrontOf: aMorph	"Add a morph to the list of submorphs in front of the specified morph"	| newSubmorphs index |	newMorph owner ifNotNil: [newMorph owner privateRemoveMorph: newMorph].	newMorph layoutChanged.	newMorph privateOwner: self.	newSubmorphs _ submorphs species new: submorphs size + 1.	index _ 1.	[ (submorphs at: index) = aMorph ]		whileFalse: [ newSubmorphs at: index put: (submorphs at: index).					  index _ index + 1 ].	newSubmorphs at: index put: newMorph.	newSubmorphs		replaceFrom: (index + 1)		to: newSubmorphs size		with: submorphs		startingAt: index.	submorphs _ newSubmorphs.	newMorph changed.	self layoutChanged.! !!WonderlandMorph methodsFor: 'morph depth' stamp: 'jsp 4/20/1999 16:07'!sendBehind: aMorph	"Put this morph behind the specified morph"	((self owner) = (aMorph owner))		ifFalse: [ myWonderland reportErrorToUser: 'The morphs need to have the same owner to put one behind the other.'.				  ^ nil. ].	(self owner) addMorph: self behind: aMorph.! !!WonderlandMorph methodsFor: 'morph depth' stamp: 'jsp 4/20/1999 16:07'!sendInFrontOf: aMorph	"Put this morph in front of the specified morph"	((self owner) = (aMorph owner))		ifFalse: [ myWonderland reportErrorToUser: 'The morphs need to have the same owner to put one in front of the other.'.				  ^ nil. ].	(self owner) addMorph: self inFrontOf: aMorph.! !!WonderlandMorph methodsFor: 'primitive behaviors' stamp: 'jsp 4/20/1999 14:29'!place: aLocation morph: aMorph	"Place this WonderlandMorph in the specified location relative to the specified morph over 1 second using the gently animation style."	^ self place: aLocation morph: aMorph duration: 1.0 style: gently.! !!WonderlandMorph methodsFor: 'primitive behaviors' stamp: 'jsp 4/20/1999 14:29'!place: aLocation morph: aMorph duration: aDuration	"Place this WonderlandMorph in the specified location relative to the specified morph over 1 second using the gently animation style."	^ self place: aLocation morph: aMorph duration: aDuration style: gently.! !!WonderlandMorph methodsFor: 'primitive behaviors' stamp: 'jsp 4/20/1999 16:20'!place: aLocation morph: aMorph duration: aDuration style: aStyle	"Place this WonderlandMorph in the specified location relative to the specified morph."	| anim endStateFunc |	"Check our arguments to make sure they're valid"	[ WonderlandVerifier VerifyLocation: aLocation ]		ifError: [ :msg :rcvr |			myWonderland reportErrorToUser: 'Squeak could not determine where to place the morph because ', msg.			^ nil ].	[ WonderlandVerifier VerifyDuration: aDuration ]		ifError: [ :msg :rcvr |			myWonderland reportErrorToUser:				'Squeak could not determine the duration to use for placing the morph because ', msg.			^ nil ].	[ WonderlandVerifier VerifyStyle: aStyle ]		ifError: [ :msg :rcvr |			myWonderland reportErrorToUser: 'Squeak could not determine the style to use to place the morph because ', msg.			^ nil ].	"Our parameters check out, so build the animation"	anim _ AbsoluteAnimation new.	(aLocation = toLeftOf)		ifTrue: [ endStateFunc _ [ ((aMorph left) - (self width)) @										((aMorph center y) - ((self height) // 2)) ] ]		ifFalse: [	(aLocation = toRightOf)		ifTrue: [ endStateFunc _ [ (aMorph right) @										((aMorph center y) - ((self height) // 2)) ] ]		ifFalse: [	((aLocation = onTopOf) or: [ aLocation = above ])		ifTrue: [ endStateFunc _ [ ((aMorph center x) - ((self width) // 2)) @										((aMorph top) - (self height)) ] ]		ifFalse: [	(((aLocation = below) or: [ aLocation = beneath ]) or: [ aLocation = onBottomOf ])		ifTrue: [ endStateFunc _ [ ((aMorph center x) - ((self width) // 2)) @										(aMorph bottom) ] ]		ifFalse: [	(aLocation = onCeilingOf)		ifTrue: [ endStateFunc _ [ ((aMorph center x) - ((self width) // 2)) @										(aMorph top) ] ]		ifFalse: [	(aLocation = onFloorOf)		ifTrue: [ endStateFunc _ [ ((aMorph center x) - ((self width) // 2)) @										((aMorph bottom) - (self height)) ] ]		ifFalse: [	(aLocation = inFrontOf)		ifTrue: [ endStateFunc _ [ self sendInFrontOf: aMorph.								   self position ] ]		ifFalse: [	((aLocation = inBackOf) or: [ aLocation = behind ])		ifTrue: [ endStateFunc _ [ self sendBehind: aMorph.								   self position ] ]				]]]]]]].	anim object: self			update: [:tPos | self position: (tPos rounded)]			getStartState: [self position]			getEndState: endStateFunc			style: aStyle			duration: aDuration			undoable: true			inWonderland: myWonderland.	^ anim.! !!WonderlandEditor methodsFor: 'initialization' stamp: 'jsp 4/20/1999 15:54'!initializeWith: aWonderland	"Initialize the editor with the Wonderland."	| hAlign vAlign |	myWonderland _ aWonderland.	self extent: 650@375.	hAlign _ AlignmentMorph new.	hAlign color: (Color gray).	hAlign extent: 650@375.	hAlign hResizing: #rigid.	self addMorph: hAlign.	myTabs _ (WonderlandEditorTabs newFor: aWonderland).	hAlign addMorph: myTabs.	vAlign _ AlignmentMorph new.	vAlign color: (Color r: 0.784 g: 0.784 b: 0.784).	vAlign orientation: #vertical.	hAlign addMorph: vAlign.	myActorBrowser _ (WonderlandActorBrowser newFor: myWonderland).	vAlign addMorph: (myActorBrowser getMorph).	myControls _ WonderlandControls newFor: aWonderland.	vAlign addMorph: myControls.	self position: 200@20.	self color: (Color r: 0.784 g: 0.784 b: 0.784).	self openInWorld.! !