'From Squeak3.7alpha of 11 September 2003 [latest update: #5707] on 21 April 2004 at 1:50:32 pm'!"Change Set:		ParserRevertFix-gkDate:			3 March 2004Author:			Gšran KrampeThe issue was triggered by 'NS' (Nathanael?) in update 5700were he changed 'self selectionAsStream' to 'selfselection string' in #evaluateSelection.The result of that change is that instead of passing a ReadStream with aposition into the full text, it passes only the selected code into theParser. That works fine until the Compiler starts to try to givinngfeedback using instvar requestor.Those methods, like for example when it tries to correct a selector(this one was caught by Frank's patch) or when it reports a compilationerror  (not caught by Frank's patch) then thinks that the position ithas are absolute and can be used in messages to requestor. But they arenow relative.Also, I note that there is still a sender of #selectionAsStream, namelywhen you choose 'debug it'. Given Frank's patch that case is now insteadbroken.So... for the time being, this changeset simply reverts this back to 'self selectionAsStream'."!!ParagraphEditor methodsFor: 'do-its' stamp: 'gk 3/3/2004 17:15'!evaluateSelection	"Treat the current selection as an expression; evaluate it and return the result"	| result rcvr ctxt |	self lineSelectAndEmptyCheck: [^ ''].	(model respondsTo: #doItReceiver) 		ifTrue: [FakeClassPool adopt: model selectedClass.  "Include model pool vars if any"				rcvr _ model doItReceiver.				ctxt _ model doItContext]		ifFalse: [rcvr _ ctxt _ nil].	result _ [		rcvr class evaluatorClass new 			evaluate: self selectionAsStream			in: ctxt			to: rcvr			notifying: self			ifFail: [FakeClassPool adopt: nil. ^ #failedDoit]			logged: true.	] 		on: OutOfScopeNotification 		do: [ :ex | ex resume: true].	FakeClassPool adopt: nil.	^ result! !