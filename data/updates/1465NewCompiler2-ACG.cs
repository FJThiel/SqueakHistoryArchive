'From Squeak 2.5 of August 6, 1999 on 21 September 1999 at 9:48:47 pm'!"Change Set:		NewCompiler2Date:			21 September 1999Author:			Applescript stuffFixes some glitches in the previous changeset.  Class Applescript now has a singleton instance that is automatically reconnected with Applescript upon startup."!ComponentInstance variableWordSubclass: #ApplescriptInstance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Werdna-Applescript'!ApplescriptInstance variableWordSubclass: #Applescript	instanceVariableNames: ''	classVariableNames: 'PrimaryGenericComponentInstance '	poolDictionaries: ''	category: 'Werdna-Applescript'!!ComponentInstance methodsFor: 'private' stamp: 'acg 9/21/1999 21:14'!primOpenDefaultConfiguration: type subtype: subtype	<primitive: 'primOpenDefaultConfiguration' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOpenDefaultConfiguration:subtype:'		withArguments: {type. subtype}! !!ComponentInstance methodsFor: 'private' stamp: 'acg 9/21/1999 21:18'!type: typeString subtype: subtypeString"Associate this object instance with an instance of the generic scripting component.  Answer self."	self 		primOpenDefaultConfiguration: (DescType of: typeString)		subtype: (DescType of: subtypeString)! !!ApplescriptInstance reorganize!('accessing' doScript: doScript:in:mode: scriptingName)('private' initialize primOSACompile:mode:to: primOSADisplay:as:mode:to: primOSADispose: primOSADoScript:in:mode:resultType:to: primOSAExecute:in:mode:to: primOSAScriptingComponentNameTo: reopen)!!ApplescriptInstance methodsFor: 'accessing' stamp: 'acg 9/21/1999 21:03'!doScript: aString	"Answer text result of compiling script in null context"	^self doScript: aString in: OSAID new mode: 0	"Examples:"	"ComponentInstance new doScript: 'beep 7'"! !!ApplescriptInstance methodsFor: 'accessing' stamp: 'acg 9/21/1999 21:03'!doScript: aString in: contextOSAID mode: anInteger	"Answer text result of executing Applescript aString in context contexOSAID in mode: anInteger"	| source object result |	source _ AEDesc textTypeOn: aString.	object _ AEDesc new.	result _ self			primOSADoScript: source		in: contextOSAID		mode: anInteger		resultType: (DescType of: 'TEXT')		to: object.	source dispose.	result isZero ifFalse: [self error: 'operation failed: ', result asString].	^object asStringThenDispose! !!ApplescriptInstance methodsFor: 'accessing' stamp: 'acg 9/21/1999 21:02'!scriptingName"Answer the name of my generic scripting component"	|aeDesc result |	aeDesc _ AEDesc new.	result _ self primOSAScriptingComponentNameTo: aeDesc.	result isZero ifFalse: 		[^self error: 'can''t load scripting name: ', result asString].	^aeDesc asStringThenDispose.! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 21:23'!initialize	super type: 'osa ' subtype: 'scpt'! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSACompile: source mode: mode to: object	<primitive: 'primOSACompile' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOSACompile:mode:to:'		withArguments: {source. mode. object}! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSADisplay: source as: type mode: mode to: result	<primitive: 'primOSADisplay' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOSADisplay:as:mode:to:'		withArguments: {source. type. mode. result}! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSADispose: anOSAID	<primitive: 'primOSADispose' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOSADispose:'		withArguments: {anOSAID}! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSADoScript: source in: context mode: mode resultType: type to: result	<primitive: 'primOSADoScript' module: 'TestOSAPlugin'>	^TestOSAPlugin		doPrimitive: 'primOSADoScript:in:mode:resultType:to:'		withArguments: {source. context. mode. type. result}! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSAExecute: script in: context mode: mode to: result	<primitive: 'primOSAExecute' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOSAExecute:in:mode:to:'		withArguments: { script. context. mode. result }! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 20:57'!primOSAScriptingComponentNameTo: anAEDesc	<primitive: 'primOSAScriptingComponentName' module: 'TestOSAPlugin'>	^TestOSAPlugin 		doPrimitive: 'primOSAScriptingComponentNameTo:'		withArguments: {anAEDesc}! !!ApplescriptInstance methodsFor: 'private' stamp: 'acg 9/21/1999 21:25'!reopen	^super type: 'osa ' subtype: 'scpt'! !!ComponentInstance class methodsFor: 'instance creation' stamp: 'acg 9/21/1999 21:24'!new	^super new: 1! !!ComponentInstance class methodsFor: 'instance creation' stamp: 'acg 9/21/1999 21:24'!new: anInteger	^self error: 'Create ComponentInstances with #new or #type:subtype'! !!ComponentInstance class methodsFor: 'instance creation' stamp: 'acg 9/21/1999 21:20'!type: typeString subtype: subtypeString	^(super new: 1) type: typeString subtype: subtypeString! !!ApplescriptInstance class methodsFor: 'as yet unclassified' stamp: 'acg 9/21/1999 21:22'!new	^super new initialize! !!Applescript class reorganize!('instance creation' doScript: new)('sample scripts' beep: browse: mandatoryDemo say: selectFile selectFolder silly sillyButtons sillyDialog sleep)('initialize-release' initialize reopen startUp)!!Applescript class methodsFor: 'instance creation' stamp: 'acg 9/21/1999 20:46'!doScript: aString	^self new doScript: aString! !!Applescript class methodsFor: 'instance creation' stamp: 'acg 9/21/1999 21:33'!new	"This is a singleton class.  You can make other instances of the Applescript generic component using ApplescriptInstance"	^PrimaryGenericComponentInstance ifNil:		[PrimaryGenericComponentInstance _ super new]! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!beep: anInteger	"Beep n times"	^self doScript: 'beep ', anInteger asString! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!browse: anUrl	"Open Microsoft's Web Browser to a page"		^self doScript: 'tell application "Internet Explorer"		activate		openURL "', anUrl, '"	end tell'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!mandatoryDemo	"A mandatory first script"	^self doScript: '3 + 4'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:50'!say: aString	"Speak the string"	^self doScript: 'say "', aString, '"'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!selectFile	"Harness Apple's select file dialog for Squeak"	^self doScript: '(choose file with prompt "Hi guys!!" of type "TEXT") as string'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!selectFolder	"Harness Apple's select Folder dialog for Squeak"	^self doScript: '(choose folder with prompt "Hi guys!!") as string'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 21:33'!silly	Applescript say: 'please prez a button for me'.	Applescript sillyButtons.	Applescript say: 'thank you for pressing the button' ! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!sillyButtons	"A silly Apple GUI demo"	^self doScript: '		display dialog "The Mouse that Roars!!" ',			'buttons {"One", "Two", "Three"} default button "One"'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 20:48'!sillyDialog	"A silly Apple GUI demo"	self doScript: 'display dialog "Enter a number between 1 and 10." default answer ""set userValue to {text returned of result} as realif (userValue < 1) or (userValue > 10) then	display dialog "That Value is out of range." buttons {"OK"} default button 1else 	display dialog "Thanks for playing." buttons {"OK"} default button 1end if'! !!Applescript class methodsFor: 'sample scripts' stamp: 'acg 9/21/1999 21:48'!sleep	^self doScript: 'tell application "Finder"	sleepend tell'"Applescript sleep"! !!Applescript class methodsFor: 'initialize-release' stamp: 'acg 9/21/1999 20:45'!initialize	Smalltalk addToStartUpList: self after: nil! !!Applescript class methodsFor: 'initialize-release' stamp: 'acg 9/21/1999 21:26'!reopen	^self new reopen! !!Applescript class methodsFor: 'initialize-release' stamp: 'acg 9/21/1999 20:41'!startUp	^self reopen! !!FooPlugin2 methodsFor: 'as yet unclassified' stamp: 'acg 9/21/1999 21:35'!primFooIntegerIdentity: x	self 		primitive: 	'primFooIntegerIdentity'		parameters: #(SmallInteger)		receiver: 	#Oop.	^ x asSmallIntegerObj! !!FooPlugin2 methodsFor: 'as yet unclassified' stamp: 'acg 9/21/1999 21:35'!primFooIntegerSumWith: x	|rcvr myInteger|	rcvr _ self 		primitive: 	'primFooIntegerSumWith'		parameters: #(SmallInteger)		receiver: 	#Foo2.	myInteger _ (rcvr asIf: Foo var: 'myInteger') asCInt.	^ (x + myInteger) asSmallIntegerObj! !ComponentInstance removeSelector: #beep:!ComponentInstance removeSelector: #primOSAScriptingComponentNameTo:!ComponentInstance removeSelector: #primOSACompile:mode:to:!ComponentInstance removeSelector: #primOSADoScript:in:mode:resultType:to:!ComponentInstance removeSelector: #openNewGenericComponent!ComponentInstance removeSelector: #doScript:in:mode:!ComponentInstance removeSelector: #openNewComponentType:subtype:!ComponentInstance removeSelector: #selectFolder!ComponentInstance removeSelector: #primOSAExecute:in:mode:to:!ComponentInstance removeSelector: #browse:!ComponentInstance removeSelector: #openNewGenericComponentType:subtype:!ComponentInstance removeSelector: #primOSADisplay:as:mode:to:!ComponentInstance removeSelector: #selectFile!ComponentInstance removeSelector: #primOSADispose:!ComponentInstance removeSelector: #sillyDialog!ComponentInstance removeSelector: #doScript:!ComponentInstance removeSelector: #mandatoryDemo!ComponentInstance removeSelector: #sillyButtons!ComponentInstance removeSelector: #scriptingName!ApplescriptInstance removeSelector: #openNewApplescriptGenericComponent!Applescript removeSelector: #hello:!Applescript removeSelector: #hello!ComponentInstance class removeSelector: #newType:subtype:!ApplescriptInstance class removeSelector: #newType:subtype:!Applescript initialize!"Postscript:"Applescript initialize!