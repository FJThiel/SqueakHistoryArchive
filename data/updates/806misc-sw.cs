'From Squeak 2.3 of January 14, 1999 on 7 April 1999 at 8:45:41 pm'!"Change Set:		misc-swDate:			7 April 1999Author:			Scott WallaceA potpourri of fixes, including:(1)  RandomNumberTiles now allow their values to be edited via text-editing, rather than only via arrows.(2)  Workaround for a case where a script for a player not currently in a world was causing a halt when one tried to change its status.(3)  PhraseTileMorph more tolerant of untyped args.(4)  In light of Chris Norton's virtual '--all--' category enhancements to the browser, reclassifies all methods formerly classified in an 'all' category back to 'as yet unclassified', and while at it, removes all empty method categories.(5)  Slight cosmetic changes to detail buttons in viewers.(6)  In deciding on innocuous names to ascribe to unnamed morphs, objects in parts bins are now excluded from the search for #allKnownNames.(7)  Disused inst variables removed from CategoryViewer and ViewerEntry.(8)  A dozen or so previously-unorganized classes factored into method categories."!Viewer subclass: #CategoryViewer	instanceVariableNames: 'namePane '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Scripting'!AlignmentMorph subclass: #ViewerEntry	instanceVariableNames: 'helpPane '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Scripting-Tiles'!!Morph methodsFor: 'submorphs-accessing' stamp: 'sw 4/3/1999 12:27'!allMorphsNotInPartsBins	"Return a collection containing all morphs in this composite morph (including the receiver) other than those residing in a parts bin."	| all |	all _ OrderedCollection new: 100.	self allMorphsNotInPartsBinsDo: [: m | all add: m].	^ all! !!Morph methodsFor: 'submorphs-accessing' stamp: 'sw 4/3/1999 12:26'!allMorphsNotInPartsBinsDo: aBlock	"Evaluate the given block for all morphs in this composite morph (including the receiver) other than those that are, or reside in, a parts bin."	self residesInPartsBin ifTrue: [^ self].	submorphs size > 0 ifTrue:		[submorphs do: [:m | m allMorphsNotInPartsBinsDo: aBlock]].	aBlock value: self.! !!AssignmentTileMorph reorganize!('initialization' computeOperatorOrExpression initialize setAssignmentSuffix: setRoot:dataType:)('arrow' addArrowsIfAppropriate arrowAction:)('code generation' storeCodeOn:indent:)('display' updateLiteralLabel)!!BooleanTile reorganize!('type' resultType)!!ColorSeerTile reorganize!('initialization' initialize)('code generation' storeCodeOn:indent:)('display' updateLiteralLabel)!!CommandTilesMorph reorganize!('initialization' initialize setMorph:)('miscellaneous' isTileLike tileRows)!!CompoundTileMorph reorganize!('initialization' initialize)('access' associatedPlayer enclosingEditor scriptee)('code generation' codeString storeCodeBlockFor:on:indent: storeCodeOn:indent:)('miscellaneous' install isTileLike markEdited resultType rowOfRightTypeFor:forActor: scriptEdited tile:isOnLineAfter: tileRows topEditor type)('mouse' acceptDroppingMorph:event: handlesDragOver: handlesMouseOver: handlesMouseOverDragging: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: prepareToUndoDropOf: targetPartFor: wantsDroppedMorph:event:)!!HandMorph methodsFor: 'world menu commands' stamp: 'sw 4/3/1999 08:55'!duplicateMorph	| newMorph aName usedNames |	newMorph _ argument veryDeepCopy.	(aName _ argument knownName) ~~ nil ifTrue:		[usedNames _ self world allKnownNames copyWith: aName.		newMorph setNameTo:			(Utilities keyLike: aName satisfying: [:f | (usedNames includes: f) not])].	self grabMorphFromMenu: newMorph.	formerPosition _ argument position.	newMorph player ifNotNil: [newMorph player startRunning].	^ newMorph! !!NumericReadoutTile reorganize!('keyboard' wantsKeyboardFocusFor:)('literal' literal: literal:width: setLiteralTo:width:)('mouse' arrowAction: mouseMove:)!!NumericReadoutTile class reorganize!('width' defaultW)!!PhraseTileMorph reorganize!('initialization' initialize setAssignmentRoot:type:rcvrType:argType: setOperator:type:rcvrType: setOperator:type:rcvrType:argType: setSlotRefOperator:type:)('mouse' acceptDroppingMorph:event: canAccept: catchDivideByZero:indent: enclosingEditor handlesDragOver: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: mouseDown: mouseEnter: mouseEnterDragging: mouseLeaveDragging: prepareToUndoDropOf: rootForGrabOf: wantsDroppedMorph:event:)('code generation' codeString storeCodeOn:indent:)('miscellaneous' actualObject associatedPlayer booleanOperator brightenTiles bringUpToDate resultType rowOfRightTypeFor:forActor: tileRows topEditor try unbrightenTiles userScriptSelector userScriptSelector:)('queries' isBoolean isCommand isPossessive isTileLike isTileScriptingElement)!!PhraseTileMorph methodsFor: 'initialization' stamp: 'sw 2/5/1999 14:51'!setOperator: opSymbol type: opType rcvrType: rcvrType	self setOperator: opSymbol type: opType rcvrType: rcvrType argType: nil.! !!PhraseTileMorph methodsFor: 'initialization' stamp: 'sw 2/5/1999 14:54'!setOperator: opSymbol type: opType rcvrType: rcvrType argType: argType	resultType _ opType.	self color: (ScriptingSystem colorForType: opType).	self removeAllMorphs.	self addMorph: (TilePadMorph new setType: rcvrType).	self addMorphBack: ((TileMorph new setOperator: opSymbol asString) typeColor: color).	opSymbol numArgs = 1 ifTrue:		[self addMorphBack: (TilePadMorph new setType: (argType ifNil: [#object]))]! !!Player methodsFor: 'scripts-standard' stamp: 'sw 4/6/1999 12:49'!changeScript: scriptName toStatus: statusSymbol	| aWorld |	scriptName ifNil: [^ self].	Symbol hasInterned: scriptName ifTrue:		[:sym | self instantiatedUserScriptsDo:			[:aUserScript | aUserScript selector == sym				ifTrue:					[aUserScript status: statusSymbol.					^ (aWorld _ self costume world) ifNotNil:						[aWorld updateStatusForAllScriptEditors]]]]! !!RandomNumberTile reorganize!('initialization' initialize)('code generation' storeCodeOn:indent:)('value & label' numericValue updateLiteralLabel)!!RandomNumberTile methodsFor: 'initialization' stamp: 'sw 3/23/1999 21:19'!initialize	| m1 m2 |	super initialize.	self typeColor: (ScriptingSystem colorForType: #number).	self addArrows.	m1 _ StringMorph contents: 'random' font: ScriptingSystem fontForTiles.	self addMorph: m1.	m2 _ UpdatingStringMorph contents: '180' font: ScriptingSystem fontForTiles.	m2 target: self; getSelector: #literal; putSelector: #literal:.	m2 position: m1 topRight.	self addMorphBack: m2.	literal _ 180.	self updateLiteralLabel! !!SoundTile reorganize!('initialization' initialize)('user interface' mouseDown: mouseMove: wantsKeyboardFocusFor:)('type' resultType)('access' sound)!!StringReadoutTile reorganize!('literal' literal: literal:width: setLiteralTo:width:)!!StringReadoutTile class reorganize!('width' defaultW)!!SystemQueryPhrase reorganize!('initialization' initialize)('access' actualObject associatedPlayer isBoolean)('code generation' storeCodeOn:indent:)!!TilePadMorph reorganize!('code generation' storeCodeOn:indent:)('miscellaneous' printString setType: topEditor type)('mouse' acceptDroppingMorph:event: canAccept: handlesDragOver: handlesMouseOver: handlesMouseOverDragging: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: prepareToUndoDropOf: rootForGrabOf: wantsDroppedMorph:event:)!!TilePadMorph class reorganize!('initialization' initialize)('color' brightColorFor: brightColorForType: colorForType: colorFudge unbrightColorFor:)!!UndescribedTile reorganize!('initialization' initialize)!!Utilities class methodsFor: 'miscellaneous' stamp: 'sw 4/7/1999 11:42'!decommissionTheAllCategory	"Utilities decommissionTheAllCategory"	"Moves all methods that are in a category named 'all' into the default 'as yet unclassified' category"	| org aCategory methodCount classCount any |	methodCount _ 0.	classCount _ 0.	Smalltalk allBehaviorsDo:		[:aClass | org _ aClass organization.			any _ false.			aClass selectorsDo:				[:aSelector |					aCategory _ org categoryOfElement: aSelector.					aCategory = #all ifTrue:						[org classify: aSelector under: ClassOrganizer default suppressIfDefault: false.						methodCount _ methodCount + 1.						any _ true]].			any ifTrue: [classCount _ classCount + 1].			org removeEmptyCategories].	Transcript cr; show: methodCount printString, ' methods in ', classCount printString, ' classes movedfrom "all" to "as yet unclassified"'! !!ViewerEntry reorganize!('initialization' addHelpPane initialize)('access' entryType phraseTileMorph playerBearingCode viewerRow)('contents' contents contents:notifying: contentsSelection)('menu' codePaneMenu:shifted:)('slot' slotDocumentation slotName userSlotInformation)('user interface' detailButtonPressed rootForGrabOf:)!!ViewerRow reorganize!('initialization' addDetailButton initialize)('access' elementSymbol elementSymbol: entryType playerBearingCode)('user interface' detail rootForGrabOf:)!!ViewerRow methodsFor: 'initialization' stamp: 'sw 2/5/1999 15:36'!addDetailButton	| aButton |	Preferences useDetailPanesInViewers		ifTrue:			[aButton _ SimpleButtonMorph new				target: self;				actionSelector: #detail;				color: Color blue muchLighter;				setBalloonText: 'detail';				borderWidth: 0;				label: 'i']		ifFalse:			[aButton _ Morph new beTransparent; extent: 0@1].  "Place=holder in this case"	self addMorphFront: aButton! !!WorldMorph methodsFor: 'etoy support' stamp: 'sw 4/3/1999 12:27'!allKnownNames	^ self allMorphsNotInPartsBins collect: [:m | m knownName] thenSelect: [:n | n ~~ nil]! !"Postscript:"Utilities decommissionTheAllCategory.!