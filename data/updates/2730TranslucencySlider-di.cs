'From Squeak2.9alpha of 12 June 2000 [latest update: #2749] on 28 September 2000 at 12:12:28 pm'!"Change Set:		TranslucencySliderDate:			28 September 2000Author:			Dan IngallsAdds a slider effect to the translucency control of the color picker.  Fixes a couple of glitches in moving from modal to modeless operation."!SketchMorph subclass: #ColorPickerMorph	instanceVariableNames: 'selectedColor sourceHand deleteOnMouseUp updateContinuously target selector argument originalColor theSelectorDisplayMorph command isModal clickedTranslucency '	classVariableNames: 'ColorChart DragBox FeedbackBox RevertBox TransparentBox TransText '	poolDictionaries: ''	category: 'Morphic-Widgets'!!ColorPickerMorph methodsFor: 'initialization' stamp: 'di 9/28/2000 12:05'!buildChartForm	| chartForm |	chartForm _ ColorChart deepCopy asFormOfDepth: Display depth.	chartForm fill: ((TransparentBox left + 9)@0 extent: 1@9) fillColor: Color lightGray.	chartForm fill: ((TransparentBox right - 10)@0 extent: 1@9) fillColor: Color lightGray.	TransText displayOn: chartForm at: 62@0.	Display depth = 32 ifTrue:		["Set opaque bits for 32-bit display"		chartForm fill: chartForm boundingBox rule: Form under				fillColor: (Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0)].	chartForm borderWidth: 1.	self form: chartForm.	selectedColor ifNotNil: [self updateAlpha: selectedColor alpha].	self updateSelectorDisplay.! !!ColorPickerMorph methodsFor: 'accessing' stamp: 'di 9/28/2000 11:47'!originalColor: colorOrSymbol	"Set the receiver's original color.  It is at this point that a command is launched to represent the action of the picker, in support of Undo."	originalColor _ (colorOrSymbol isKindOf: Color)		ifTrue: [colorOrSymbol]		ifFalse: [Color lightGreen].	originalForm fill: RevertBox fillColor: originalColor.	selectedColor _ originalColor.! !!ColorPickerMorph methodsFor: 'private' stamp: 'di 9/28/2000 11:10'!updateAlpha: alpha	| sliderRect |	sliderRect _ (TransparentBox left + 10)@1 corner: (TransparentBox right - 9)@9.	originalForm fill: (sliderRect withRight: sliderRect left + (alpha*sliderRect width))				fillColor: Color lightGray.	originalForm fillWhite: (sliderRect withLeft: sliderRect left + (alpha*sliderRect width)).	originalForm fill: ((TransparentBox right - 9)@1 extent: 8@8)				fillColor: (alpha < 1.0 ifTrue: [Color white] ifFalse: [Color lightGray]).	TransText displayOn: originalForm at: 62@1 rule: Form paint.! !!ColorPickerMorph methodsFor: 'private' stamp: 'di 9/28/2000 10:38'!updateColor: aColor feedbackColor: feedbackColor	"Set my selected color to the given color if it is different. Give user feedback. Inform the target of the change if the target and selector are not nil." 	selectedColor = aColor ifTrue: [^ self].  "do nothing if color doesn't change"	self updateAlpha: aColor alpha.	originalForm fill: FeedbackBox fillColor: feedbackColor.	self form: originalForm.	selectedColor _ aColor.	updateContinuously ifTrue: [self updateTargetColor].! !!ColorPickerMorph methodsFor: 'menu' stamp: 'di 9/28/2000 11:44'!pickUpColorFor: aMorph	"Show the eyedropper cursor, and modally track the mouse through a mouse-down and mouse-up cycle"      | aHand localPt |	aHand _ aMorph ifNil: [self activeHand] ifNotNil: [aMorph activeHand].	aHand ifNil: [aHand _ self currentHand].	self addToWorld: aHand world near: (aMorph ifNil: [aHand world]) fullBounds.	self owner ifNil: [^ self].	aHand showTemporaryCursor: (ScriptingSystem formAtKey: #Eyedropper) 			hotSpotOffset: 6 negated @ 4 negated.    "<<<< the form was changed a bit??"	self updateContinuously: false.	[Sensor anyButtonPressed]		whileFalse: 			 [self trackColorUnderMouse].	self deleteAllBalloons.	(DragBox containsPoint: (localPt _ Sensor cursorPoint - self topLeft)) ifTrue:		["Click or drag the drag-dot means to anchor as a modeless picker"		^ self anchorAndRunModeless: aHand].	(clickedTranslucency _ TransparentBox containsPoint: localPt)		ifTrue: [selectedColor _ originalColor].	self updateContinuously: true.	[Sensor anyButtonPressed]		whileTrue:			 [self updateTargetColorWith: self indicateColorUnderMouse].	aHand newMouseFocus: nil;		showTemporaryCursor: nil;		flushEvents.	self delete.		  ! !!ColorPickerMorph class methodsFor: 'as yet unclassified' stamp: 'di 9/28/2000 11:09'!initialize	"ColorPickerMorph initialize"	ColorChart _ Color colorPaletteForDepth: 16 extent: 190@60.	DragBox _  (11@0) extent: 9@8.	RevertBox _ (ColorChart width - 20)@1 extent: 9@8.	FeedbackBox _ (ColorChart width - 10)@1 extent: 9@8.	TransparentBox _ DragBox topRight corner: RevertBox bottomLeft.		ColorChart fillBlack: ((DragBox left - 1)@0 extent: 1@9).		ColorChart fillBlack: ((TransparentBox left)@0 extent: 1@9).		ColorChart fillBlack: ((FeedbackBox left - 1)@0 extent: 1@9).		ColorChart fillBlack: ((RevertBox left - 1)@0 extent: 1@9).		(Form dotOfSize: 5) displayOn: ColorChart at: DragBox center + (0@1).	TransText _ (Form extent: 63@8 depth: 1   "Where there's a will there's a way..."			fromArray: #(4194306 1024 4194306 1024 15628058 2476592640					4887714 2485462016 1883804850 2486772764 4756618					2485462016 4748474 1939416064 0 0)			offset: 0@0).	TransText _ ColorForm mappingWhiteToTransparentFrom: TransText! !ColorPickerMorph initialize!SketchMorph subclass: #ColorPickerMorph	instanceVariableNames: 'selectedColor sourceHand deleteOnMouseUp updateContinuously target selector argument originalColor theSelectorDisplayMorph command isModal clickedTranslucency '	classVariableNames: 'ColorChart DragBox FeedbackBox RevertBox TransText TransparentBox '	poolDictionaries: ''	category: 'Morphic-Widgets'!