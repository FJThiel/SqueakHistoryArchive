'From Squeak 2.5 of August 6, 1999 [latest update: #1499] on 28 September 1999 at 11:24:06 pm'!"Change Set:		magnifier2-bfDate:			28 September 1999Author:			Bert FreudenbergFixes a buglet in the magnification menu code.Stops an infinite recursion when two magnifiers try to magnify each other.Subtle code for detecting animations elided by Dan I."!BorderedMorph subclass: #MagnifierMorph	instanceVariableNames: 'magnification trackPointer lastPos srcExtent '	classVariableNames: 'RecursionLock '	poolDictionaries: ''	category: 'Morphic-Demo'!!MagnifierMorph methodsFor: 'menu' stamp: 'bf 9/28/1999 16:22'!chooseMagnification	| result |	result _ (SelectionMenu selections: #(1.5 2 4 8))		startUpWithCaption: 'Choose magnification(currently ', magnification printString, ')'.	(result == nil or: [result = magnification]) ifTrue: [^ self].	magnification _ result.	self extent: self extent. "round to new magnification"	self changed. "redraw even if extent wasn't changed".! !!MagnifierMorph methodsFor: 'magnifying' stamp: 'di 9/28/1999 23:02'!magnifiedForm	| srcRect form exclusion |	lastPos _ self sourcePoint.	srcRect _ self sourceRectFrom: lastPos.	((srcRect intersects: self bounds) and: [ RecursionLock == nil ])		ifTrue: [RecursionLock _ self.				self isRound					ifTrue: [exclusion _ owner]					ifFalse: [exclusion _ self].				form _ self world patchAt: srcRect without: exclusion andNothingAbove: false.				RecursionLock _ nil]		ifFalse: ["cheaper method if the source is not occluded"				form _ Display copy: (srcRect translateBy: self world viewBox origin)].	"smooth if non-integer scale"	^ form magnify: form boundingBox		by: magnification		smoothing: (magnification isInteger ifTrue: [1] ifFalse: [2])! !