"Change Set:		SubjectFilteringDate:			1 July 2000Author:			Daniel Vainsenchercmd-s in the toc list turns on Subj. F.Entering an empty filter turns it off.Subject filter made tolerant of extra spaces.In short, it's now easier to read whole threads."!!Celeste methodsFor: 'table of contents pane' stamp: 'dvf 7/1/2000 15:24'!tocKeystroke: aCharacter 	aCharacter = Character backspace		ifTrue: [self deleteMessage].	aCharacter asciiValue = 30		ifTrue: [self previousMessage].	aCharacter asciiValue = 31		ifTrue: [self nextMessage].	aCharacter = $c		ifTrue: [self customFilterOn].	aCharacter = $m		ifTrue: [self customFilterMove].	aCharacter = $s		ifTrue: [self subjectFilterOn]! !!Celeste methodsFor: 'filtering' stamp: 'dvf 7/1/2000 14:36'!filteredMessagesIn: categoryName 	| msgList |	msgList _ mailDB messagesIn: categoryName.	customFilterBlock notNil		ifTrue: [msgList _ msgList						select: [:id | customFilterBlock								value: (mailDB getTOCentry: id)]].	fromFilter size > 0		ifTrue: [msgList _ msgList						select: [:id | (mailDB getTOCentry: id) from includesSubstring: fromFilter caseSensitive: false]].	subjectFilter size > 0		ifTrue: [msgList _ msgList						select: [:id | (mailDB getTOCentry: id) subject withBlanksCondensed includesSubstring: subjectFilter caseSensitive: false]].	^ msgList! !!Celeste methodsFor: 'filtering' stamp: 'dvf 7/1/2000 15:45'!isSubjectFilterOn	"whether there is a subject filter in effect"	^ subjectFilter isEmptyOrNil not!]style[(17 2 45 4 13 17)f3b,f3,f3c152050000,f3,f3cblack;,f3! !!Celeste methodsFor: 'filtering' stamp: 'dvf 7/1/2000 15:42'!subjectFilterOn	"Show only those messages whose subject matches the currently selected  	message. The user is given a chance to edit the pattern string used to match  	'Subject:' fields."	subjectFilter _ currentMsgID isNil				ifTrue: ['']				ifFalse: [(mailDB getTOCentry: currentMsgID) subject].	subjectFilter _ subjectFilter normalizedSubject.	subjectFilter _ FillInTheBlank request: '''Subject:'' filter pattern?' initialAnswer: subjectFilter.	self updateTOC.	self changed: #isSubjectFilterOn!]style[(15 2 173 2 13 3 12 20 2 17 6 14 12 13 13 3 13 21 13 3 14 10 30 16 13 3 4 27 18)f3b,f3,f3c152050000,f3,f3cblack;,f3,f3cblack;,f3,f3cblue;,f3,f3cblack;,f3,f3cblack;,f3,f3cblack;,f3,f3cblack;,f3,f3cblack;,f3,f3cblack;,f3,f3cblue;,f3,f3cblack;,f3,f3cblack;,f3,f3cblue;! !!Celeste methodsFor: 'filtering' stamp: 'dvf 7/1/2000 14:17'!subjectFilterOn: aSwitch 	"Show only those messages whose subject matches the currently selected 	message. The user is given a chance to edit the pattern string used to match 	'Subject:' fields."	subjectFilter _ currentMsgID isNil				ifTrue: ['']				ifFalse: [(mailDB getTOCentry: currentMsgID) subject].	subjectFilter _ subjectFilter normalizedSubject.	subjectFilter _ FillInTheBlank request: '''Subject:'' filter pattern?' initialAnswer: subjectFilter.	subjectFilter = ''		ifTrue: [aSwitch turnOff.			^ self].	"User cancelled so turn off the switch and return"	self updateTOC! !!Celeste class methodsFor: 'instance creation' stamp: 'dvf 7/1/2000 15:08'!buildButtonsFor: model 	"Answer a collection of handy buttons for the Celeste user interface."	| buttonViewClass buttons b sw |	Smalltalk isMorphic		ifTrue: [buttonViewClass _ PluggableButtonMorph]		ifFalse: [buttonViewClass _ PluggableButtonView].	buttons _ OrderedCollection new.	b _ buttonViewClass on: model				getState: #isSubjectFilterOn				action: #subjectFilterOn.	b label: 'Subj. F.';		 borderWidth: 1.	b setBalloonText: 'Show messages with specific Subject: line content'.	buttons add: b.	sw _ Switch new.	b _ buttonViewClass on: (sw					onAction: [model fromFilterOn: sw];										offAction: [model fromFilterOff]).	b label: 'From F.';		 borderWidth: 1.	b setBalloonText: 'Show messages with specific From: line content'.	buttons add: b.	b _ buttonViewClass				on: model				getState: #isCustomFilterOn				action: #customFilterOn.	b label: 'Custom F.';		 borderWidth: 1.	b setBalloonText: 'Show messages which match a generalized custom filter'.	buttons add: b.	b _ buttonViewClass				on: model				getState: nil				action: #customFilterMove.	b label: 'Custom F. Move';		 borderWidth: 1.	b setBalloonText: 'Move messages which match a custom filter to appropriate category'.	buttons add: b.	b _ buttonViewClass new				model: (Button new						onAction: [model compose]);				 action: #turnOn;				 label: 'New';				 borderWidth: 1.	b setBalloonText: 'Compose a new message'.	buttons add: b.	b _ buttonViewClass new				model: (Button new						onAction: [model reply]);				 action: #turnOn;				 label: 'Reply';				 borderWidth: 1.	b setBalloonText: 'Reply to the selected message'.	buttons add: b.	b _ buttonViewClass new				model: (Button new						onAction: [model forward]);				 action: #turnOn;				 label: 'Forward';				 borderWidth: 1.	b setBalloonText: 'Forward the selected message'.	buttons add: b.	b _ buttonViewClass new				model: (Button new						onAction: [model moveAgain]);				 action: #turnOn;				 label: 'Move Again';				 borderWidth: 1.	b setBalloonText: 'Move the selected message to the same category as previously'.	buttons add: b.	b _ buttonViewClass new				model: (Button new						onAction: [model deleteMessage]);				 action: #turnOn;				 label: 'Delete';				 borderWidth: 1.	b setBalloonText: 'Delete the selected message'.	buttons add: b.	^ buttons! !!String methodsFor: 'Celeste' stamp: 'dvf 7/1/2000 14:16'!normalizedSubject	| res |	res _ self.	(res asLowercase beginsWith: 're:')		ifTrue: [res _ res copyFrom: 4 to: res size].	^ res withBlanksCondensed! !