'From Squeak2.9BJ of 22 September 2000 [latest update: #2712] on 26 September 2000 at 9:28:42 am'!"Change Set:		PaintBoxMods-arDate:			26 September 2000Author:			Andreas RaabTwo enhancements for the paint box:#1: Make the color picker not obscure any of the regions below (such as the stamps).#2: Add a list of 'recently used colors' to the paint palette."!ImageMorph subclass: #PaintBoxMorph	instanceVariableNames: 'action tool currentCursor thumbnail currentColor currentBrush colorMemory colorPatch stampHolder rotationTabForm scaleTabForm colorMemoryThin brushes focusMorph weakDependents recentColors '	classVariableNames: 'AllOffImage AllOnImage AllPressedImage ColorChart OriginalBounds Prototype '	poolDictionaries: ''	category: 'Morphic-Support'!!PaintBoxMorph methodsFor: 'actions' stamp: 'ar 9/23/2000 20:00'!takeColor: aColor event: evt	"Accept the given color programmatically"	currentColor _ aColor.	self notifyWeakDependentsWith: {#currentColor. evt. currentColor}.	self showColor.	self colorable ifFalse: [self setAction: #paint: evt: evt].	"User now thinking of painting"! !!PaintBoxMorph methodsFor: 'actions' stamp: 'ar 9/23/2000 20:39'!takeColorEvt: evt from: colorPicker	"Accept a new color from the colorMemory.  Programs use currentColor: instead.  Do not do this before the picker has a chance to set its own color!!"	^self takeColor: colorPicker currentColor event: evt! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/23/2000 20:19'!fixUpColorPicker	| chart picker |	chart _ ColorChart ifNil:[Cursor wait showWhile:[ColorChart _ (Color colorPaletteForDepth: 16 extent: 120@89)]].	chart getCanvas frameRectangle: chart boundingBox color: Color black.	picker _ Form extent: (chart extent + (14@12)) depth: 16.	picker fillWhite.	"top"	picker copy: (0@0 extent: picker width@6)			from: (colorMemory image width - picker width)@0 			in: colorMemory image rule: Form over.	"bottom"	picker copy: (0@ (picker height-6) extent: picker width@6) 			from: (colorMemory image width - picker width)@(colorMemory image height - 7)			in: colorMemory image rule: Form over.	"left"	picker copy: (0@6 corner: 8@(picker height - 6))			from: (colorMemory image boundingBox topLeft + (0@6)) 			in: colorMemory image rule: Form over.	"right"	picker copy: (picker width-6@6 corner: picker width@(picker height - 6))			from: (colorMemory image boundingBox topRight - (6@-6)) 			in: colorMemory image rule: Form over.	chart displayOn: picker at: 8@6.	picker getCanvas frameRectangle: picker boundingBox color: Color black.	colorMemory image: picker.! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/26/2000 09:23'!fixUpRecentColors	| inner outer border box form newImage canvas morph |	self fixUpColorPicker.	recentColors _ WriteStream on: Array new.	form _ image.	newImage _ Form extent: form extent + (0@41) depth: form depth.	form displayOn: newImage.	newImage copy: ((0@(form height-10)) extent: form width @ (newImage height - form height + 10)) 		from: 0 @ (form height - (newImage height - form height + 10))		in: form rule: Form over.	canvas _ newImage getCanvas.	canvas line: 12@(form height-10) to: 92@(form height-10) width: 1 color: Color black.	canvas _ canvas copyOffset: 12@(form height-9).	inner _ (Color r: 0.677 g: 0.71 b: 0.968).	outer _ inner darker darker.	border _  (Color r: 0.194 g: 0.258 b: 0.194).	0 to: 1 do:[:y|		0 to: 3 do:[:x|			box _ (x*20) @ (y*20) extent: 20@20.			morph _ BorderedMorph new bounds: ((box insetBy: 1) translateBy: canvas origin + bounds origin).			morph borderWidth: 1; borderColor: border.			morph color: Color white.			morph on: #mouseDown send: #mouseDownRecent:with: to: self.			morph on: #mouseStillDown send: #mouseStillDownRecent:with: to: self.			morph on: #mouseUp send: #mouseUpRecent:with: to: self.			self addMorphFront: morph.			recentColors nextPut: morph.			canvas fillRectangle: box color: Color white.			canvas frameRectangle: (box insetBy: 1) color: border.			canvas frameRectangle: (box) color: inner.			box _ box insetBy: 1.			canvas line: box topRight to: box bottomRight width: 1 color: outer.			canvas line: box bottomLeft to: box bottomRight width: 1 color: outer.	]].	recentColors _ recentColors contents.	self image: newImage.	self toggleStamps.	self toggleStamps.! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/23/2000 19:54'!mouseDownRecent: evt with: aMorph	aMorph borderColor: Color white.! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/23/2000 20:01'!mouseStillDownRecent: evt with: aMorph	(aMorph containsPoint: evt cursorPoint)		ifTrue:[aMorph borderColor: Color white]		ifFalse:[aMorph borderColor: (Color r: 0.194 g: 0.258 b: 0.194)]! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/23/2000 19:59'!mouseUpRecent: evt with: aMorph	aMorph borderColor: (Color r: 0.194 g: 0.258 b: 0.194).	(aMorph containsPoint: evt cursorPoint) ifTrue:[		self takeColor: aMorph color event: evt.	].! !!PaintBoxMorph methodsFor: 'recent colors' stamp: 'ar 9/23/2000 20:09'!recentColor: aColor	"Remember the color as one of our recent colors"	(recentColors anySatisfy:[:any| any color = aColor]) ifTrue:[^self]. "already remembered"	recentColors size to: 2 by: -1 do:[:i|		(recentColors at: i) color: (recentColors at: i-1) color.	].	(recentColors at: 1) color: aColor.! !!PaintBoxMorph class methodsFor: 'as yet unclassified' stamp: 'ar 9/26/2000 09:28'!initializeColorChart	"PaintBoxMorph initializeColorChart"	ColorChart _ (Color colorPaletteForDepth: 16 extent: 120@89)! !!PaintBoxMorph class methodsFor: 'as yet unclassified' stamp: 'ar 9/23/2000 19:44'!new	| pb button dualUse formCanvas rect |	pb _ Prototype fullCopy.		"Assume that the PaintBox does not contain any scripted Players!!"	pb stampHolder normalize.	"Get the stamps to show"	"Get my own copies of the brushes so I can modify them"	#(brush1: brush2: brush3: brush4: brush5: brush6:) do: [:sel |		button _ pb submorphNamed: sel.		button offImage: button offImage deepCopy.		dualUse _ button onImage == button pressedImage.	"sometimes shared"		button onImage: button onImage deepCopy.		dualUse			ifTrue: [button pressedImage: button onImage]			ifFalse: [button pressedImage: button pressedImage deepCopy].		"force color maps for later mapping"		button offImage.		button onImage.		button pressedImage.		formCanvas _ button onImage getCanvas.		formCanvas _ formCanvas			copyOrigin: 0@0			clipRect: (rect _ 0@0 extent: button onImage extent).		(#(brush1: brush3:) includes: sel) ifTrue: [			rect _ rect origin corner: rect corner - (2@2)].		(#brush2: == sel) ifTrue: [			rect _ rect origin corner: rect corner - (2@4)].		formCanvas frameAndFillRectangle: rect fillColor: Color transparent			borderWidth: 2 borderColor: (Color r: 0.599 g: 0.8 b: 1.0).		].	pb showColor.	pb fixUpRecentColors.	^ pb! !!SketchEditorMorph methodsFor: 'morphic' stamp: 'ar 9/23/2000 20:39'!mouseDown: evt	"Start a new stroke.  Check if any palette setting have changed.  6/11/97 20:30 tk"	| cur pfPen myAction |	"verify that we are in a good state"	self verifyState: evt.		"includes prepareToPaint and #scalingOrRotate"	pfPen _ self get: #paintingFormPen for: evt.	undoBuffer _ paintingForm deepCopy.	"know we will draw something"	pfPen place: (evt cursorPoint - bounds origin).	myAction _ self getActionFor: evt.	myAction == #paint: ifTrue:[		palette recentColor: (self getColorFor: evt)].	self set: #strokeOrigin for: evt to: evt cursorPoint.		"origin point for pickup: rect: ellispe: polygon: line: star:.  Always take it."	myAction == #pickup: ifTrue: [		cur _ Cursor corner clone.		cur offset: 0@0  "cur offset abs".		evt hand showTemporaryCursor: cur].	myAction == #polygon: ifTrue: [self polyNew: evt].	"a mode lets you drag vertices"! !"Postscript:Create the new color chart."PaintBoxMorph initializeColorChart.!