'From Squeak2.8alpha of 4 February 2000 [latest update: #2052] on 30 April 2000 at 10:54:46 am'!"Change Set:		016WorldRefPart2-smaDate:			30 April 2000Author:			Stefan Matthias AustReplaced World primaryHand attachMorph: with a class method in HandMorph.This reduces the number of World references from 67 to 56."!!Dictionary methodsFor: 'user interface' stamp: 'sma 4/30/2000 10:36'!inspectFormsWithLabel: aLabel	"Open a Form Dictionary inspector on the receiver, with the given label."	| viewClass aList aGraphicalMenu |	Smalltalk isMorphic		ifTrue:			[aList _ self collect: [:f | f].			aList isEmpty ifTrue: [^ self inform: 'Empty!!'].			aGraphicalMenu _ GraphicalDictionaryMenu new 				initializeFor: nil				fromDictionary: self.			^ HandMorph attach: (aGraphicalMenu wrappedInWindowWithTitle: aLabel)].	viewClass _ PluggableTextView.	Smalltalk at: #FormInspectView		ifPresent: [:formInspectView | viewClass _ formInspectView].	^ DictionaryInspector		openOn: self		withEvalPane: true		withLabel: aLabel		valueViewClass: viewClass! !!FileList methodsFor: 'file list menu' stamp: 'sma 4/30/2000 10:38'!openProjectFromFile	"Reconstitute a Morph from the selected file, presumed to be represent	a Morph saved via the SmartRefStream mechanism, and open it in an	appropriate Morphic world." 	| preStream |	Smalltalk verifyMorphicAvailability ifFalse: [^ self].	Smalltalk isMorphic ifFalse: [^ self inform: 			'Later, allow jumping from MVC to Morphic Projects.'].	preStream _ directory oldFileNamed: self fullName.	ProjectViewMorph openFromFile: preStream! !!HTTPSocket class methodsFor: 'utilities' stamp: 'sma 4/30/2000 10:39'!showImage: image named: imageName	Smalltalk isMorphic		ifTrue: [HandMorph attach: (SketchMorph withForm: image)]		ifFalse: [FormView open: image named: imageName]! !!MessageSet class methodsFor: 'instance creation' stamp: 'sma 4/30/2000 10:41'!openAsMorph: aMessageSet name: labelString 	"Create a SystemWindow aMessageSet, with the label labelString, in a Morphic project"	^ self openAsMorph: aMessageSet name: labelString inWorld: self currentWorld! !!Morph methodsFor: 'initialization' stamp: 'sma 4/30/2000 10:43'!openInWorld	"Add this morph to the world.  If in MVC, then provide a Morphic window for it."	Smalltalk isMorphic		ifTrue: [self openInWorld: self currentWorld]		ifFalse: [self openInMVC]! !!Morph methodsFor: 'e-toy support' stamp: 'sma 4/30/2000 10:43'!embedInWindow	| window |	window _ (SystemWindow labelled: self defaultLabelForInspector) model: nil.	window bounds: ((self position - ((0@window labelHeight) + window borderWidth))						corner: self bottomRight + window borderWidth).	window addMorph: self frame: (0@0 extent: 1@1).	window updatePaneColors.	self world addMorph: window.	window activate! !!BookMorph class methodsFor: 'as yet unclassified' stamp: 'sma 4/30/2000 10:36'!grabURL: aURLString	"Create a BookMorph for this url and put it in the hand."	| book |	book _ self new fromURL: aURLString.	"If this book is already in, we will steal the pages out of it!!!!!!!!"	book goToPage: 1.	"install it"	HandMorph attach: book! !!FlashPlayerMorph methodsFor: 'project transition' stamp: 'sma 4/30/2000 10:39'!playProjectTransitionFrom: oldProject to: newProject entering: aBoolean	"Play the transition from the old to the new project."	Smalltalk isMorphic ifFalse: [^ self]. "Not in MVC"	self stopPlaying.	owner ifNotNil:[		self stopStepping.		owner privateRemoveMorph: self.		owner _ nil].	aBoolean ifTrue:[		self updateProjectFillsFrom: newProject.	] ifFalse:[		self updateProjectFillsFrom: oldProject.		self setProperty: #transitionBackground toValue: newProject imageForm.	].	self frameNumber: 1.	self loopFrames: false.	(self valueOfProperty: #fullScreenTransition ifAbsent:[false])		ifTrue:[self bounds: self world bounds].	self comeToFront.	self startStepping.	self startPlaying.	[playing] whileTrue:[World doOneCycleNow].	self stopPlaying.	self stopStepping.	owner privateRemoveMorph: self.	owner _ nil.	self removeProperty: #transitionBackground.	Display deferUpdates: true.	World fullDrawOn: (FormCanvas on: Display).	Display deferUpdates: false.! !!HandMorph class methodsFor: 'utilities' stamp: 'sma 4/30/2000 10:34'!attach: aMorph	"Attach aMorph the current world's primary hand."	self currentWorld primaryHand attachMorph: aMorph! !!MVCMenuMorph methodsFor: 'invoking' stamp: 'sma 4/30/2000 10:40'!displayAt: aPoint during: aBlock	"Add this menu to the Morphic world during the execution of the given block."	Smalltalk isMorphic ifFalse: [^ self].	World addMorph: self centeredNear: aPoint.	self world displayWorld.  "show myself"	aBlock value.	self delete! !!Scamper methodsFor: 'menus' stamp: 'sma 4/30/2000 10:48'!displayHistory	"Let the user selecet a previous page to view."	| menu |	menu _ MenuMorph entitled: 'Recent URLs'.	menu defaultTarget: self.	menu addStayUpItem.	menu addLine.	recentDocuments reverseDo:		[:doc |		menu add: doc url toText selector: #displayDocument: argument: doc].	menu popUpAt: self cursorPoint forHand: self currentHand! !!SystemWindow methodsFor: 'open/close' stamp: 'sma 4/30/2000 10:51'!openInWorldExtent: extent	"This msg and its callees result in the window being activeOnlyOnTop"	Smalltalk isMorphic ifFalse: [^ self openInMVCExtent: extent].	self position: (RealEstateAgent initialFrameFor: self) topLeft.	self extent: extent.	World addMorph: self.	self activate.	self world startSteppingSubmorphsOf: self! !!TTSampleFontMorph methodsFor: 'initialize' stamp: 'sma 4/30/2000 10:51'!openInWorld	Smalltalk isMorphic ifFalse: [^ self openInMVC].	HandMorph attach: self! !!URLMorph methodsFor: 'event handling' stamp: 'sma 4/30/2000 10:52'!mouseUp: evt	| pg ow newPage mm bookUrl bk |	"If url of a book, open it to that page, or bring it in and open to that page."	book ifNotNil: [book == false ifFalse: [		(bookUrl _ book) class == String ifFalse: [			bookUrl _ (SqueakPage stemUrl: url), '.bo'].		(bk _ BookMorph isInWorld: self world withUrl: bookUrl) class ~~ Symbol 			ifTrue: [^ bk goToPageUrl: url].		bk == #conflict ifTrue: [			^ self inform: 'This book is already open in some other project'].		(bk _ BookMorph new fromURL: bookUrl) ifNil: [^ self].		bk goToPageUrl: url.	"turn to the page"		^ HandMorph attach: bk]].	"If inside a SqueakPage, replace it!!"	pg _ self enclosingPage.	pg ifNotNil: [		(ow _ pg contentsMorph owner) ifNotNil: [			pg contentsMorph delete.	"from its owner"			newPage _ SqueakPageCache atURL: url.			mm _ newPage fetchContents.			mm ifNotNil: [ow addMorph: mm.				page _ newPage].			^ self]].	"If I am a project, jump  -- not done yet"	"For now, just put new page on the hand"	newPage _ SqueakPageCache atURL: url.	mm _ newPage fetchInformIfError.	mm ifNotNil: [self primaryHand attachMorph: mm.		page _ newPage].! !!URLMorph class methodsFor: 'instance creation' stamp: 'sma 4/30/2000 10:52'!grabURL: aURLString	"Create a URLMorph for this url.  Drop it and click it to get the SqueakPage."	| um |	(um _ self new) isBookmark: true; setURL: aURLString page: nil.	HandMorph attach: um.	^ um! !HandMorph class removeSelector: #attachMorph:!!HandMorph class reorganize!('initialization' initialize)('accessing' doubleClickTime doubleClickTime:)('instance creation' includeInNewMorphMenu)('utilities' attach:)!