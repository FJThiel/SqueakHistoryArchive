'From Squeak2.9alpha of 5 August 2000 [latest update: #2877] on 18 October 2000 at 5:47:30 pm'!"Change Set:		foosCopyFix-swDate:			18 October 2000Author:			Scott Wallacefixes the bug that made inst vars of a foo's copy (in the scripting system) not have the same values as foo."!!Morph methodsFor: 'copying' stamp: 'sw 10/18/2000 17:46'!usableSiblingInstance	"Return another similar morph whose Player is of the same class as mine"	|  aName usedNames newPlayer newMorph |	self flag: #noteToTed.  "I think this may have deviated majorly from your mainstream veryDeepCopy work, so there will probably be some problems entailed"	newMorph _ self veryDeepCopyWithoutPlayer.	newPlayer _ self player class new costume: newMorph.	newPlayer copyAddedStateFrom: self player.	newPlayer resetCostumeList.	self isFlexMorph ifTrue: [newMorph renderedMorph player: newPlayer]. "???"	newMorph actorState: (self player actorState shallowCopy initializeFor: newPlayer).	(aName _ self knownName) == nil ifTrue:		[self player ~~ nil ifTrue: [aName _ newMorph innocuousName]].			"Force a difference here"	aName ~~ nil ifTrue:		[usedNames _ (self world ifNil: [OrderedCollection new] ifNotNil: [self world allKnownNames]) copyWith: aName.		newMorph setNameTo: (Utilities keyLike: aName satisfying: [:f | (usedNames includes: f) not])].	newMorph privateOwner: nil.	(newMorph renderedMorph eventHandler ~~ nil) ifTrue:		[newPlayer assureEventHandlerRepresentsStatus].	self presenter flushPlayerListCache.	^ newMorph! !