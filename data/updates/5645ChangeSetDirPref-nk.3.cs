'From Squeak3.7alpha of ''11 September 2003'' [latest update: #5623] on 4 January 2004 at 5:18:44 pm'!"Change Set:		ChangeSetDirectoryPref-nkDate:				4 January 2004Author:			Ned KonzThis adds a Preference for a directory to save change sets in.15 October 2003: first version.4 January 2004: removed prompting from accessor."!!ChangeSet methodsFor: 'fileIn/Out' stamp: 'nk 10/15/2003 09:55'!defaultChangeSetDirectory	^self class defaultChangeSetDirectory! !!ChangeSet methodsFor: 'fileIn/Out' stamp: 'nk 1/4/2004 17:07'!fileOut	"File out the receiver, to a file whose name is a function of the  	change-set name and either of the date & time or chosen to have a  	unique numeric tag, depending on the preference  	'changeSetVersionNumbers'"	| file slips nameToUse |	self checkForConversionMethods.	ChangeSet promptForDefaultChangeSetDirectoryIfNecessary.	nameToUse := Preferences changeSetVersionNumbers				ifTrue: [self defaultChangeSetDirectory nextNameFor: self name extension: 'cs']				ifFalse: [(self name , FileDirectory dot , Utilities dateTimeSuffix , FileDirectory dot , 'cs') asFileName].	(Preferences warningForMacOSFileNameLength			and: [nameToUse size > 31])		ifTrue: [nameToUse := FillInTheBlank						request: (nameToUse , '\has ' , nameToUse size asString , ' letters - too long for Mac OS.\Suggested replacement is:') withCRs						initialAnswer: (nameToUse contractTo: 30).			nameToUse = ''				ifTrue: [^ self]].	Cursor write		showWhile: [[file := self defaultChangeSetDirectory newFileNamed: nameToUse.			file header; timeStamp.			self fileOutPreambleOn: file.			self fileOutOn: file.			self fileOutPostscriptOn: file.			file trailer]				ensure: [file close]].	Preferences checkForSlips		ifFalse: [^ self].	slips := self checkForSlips.	(slips size > 0			and: [(PopUpMenu withCaption: 'Methods in this fileOut have haltsor references to the Transcriptor other ''slips'' in them.Would you like to browse them?' chooseFrom: 'Ignore\Browse slips')					= 2])		ifTrue: [self systemNavigation browseMessageList: slips name: 'Possible slips in ' , name]! !!ChangeSet class methodsFor: 'defaults' stamp: 'nk 1/4/2004 16:10'!defaultChangeSetDirectory	"Answer the directory in which to store ChangeSets. 	Answer the default directory if the preferred directory doesn't exist."	| dir directoryName |	directoryName := Preferences				parameterAt: #defaultChangeSetDirectoryName				ifAbsentPut: [''].	dir := FileDirectory default directoryNamed: directoryName.	dir exists		ifTrue: [^ dir].	^ FileDirectory default! !!ChangeSet class methodsFor: 'defaults' stamp: 'nk 10/15/2003 10:06'!defaultChangeSetDirectory: dirOrName	"Set the Preference for storing change sets to the given directory or name (possibly relative).	If dirOrName is an empty string, use the default directory."	"ChangeSet defaultChangeSetDirectory: 'changeSets'"	| dirName |	dirName _ dirOrName isString ifTrue: [ FileDirectory default fullNameFor: dirOrName ] ifFalse: [ dirOrName fullName ].	(dirName beginsWith: FileDirectory default fullName)		ifTrue: [ dirName _ dirName copyFrom: FileDirectory default fullName size + 2 to: dirName size ].	Preferences setParameter: #defaultChangeSetDirectoryName to: dirName.! !!ChangeSet class methodsFor: 'defaults' stamp: 'nk 1/4/2004 16:47'!promptForDefaultChangeSetDirectoryIfNecessary	"Check the Preference (if any), and prompt the user to change it if necessary.	The default if the Preference is unset is the current directory.	Answer the directory."	"ChangeSet promptForDefaultChangeSetDirectoryIfNecessary"	| choice directoryName dir |	directoryName := Preferences				parameterAt: #defaultChangeSetDirectoryName				ifAbsentPut: [''].	[dir := FileDirectory default directoryNamed: directoryName.	dir exists]		whileFalse: [choice := PopUpMenu withCaption: 			('The preferred change set directory (''{1}'') does not exist.Create it or use the default directory ({2})?' translated format: { directoryName. FileDirectory default pathName })	chooseFrom: (#('Create directory' 'Use default directory and forget preference' 'Choose another directory' ) collect: [ :ea | ea translated ]).			choice = 1				ifTrue: [dir assureExistence ].			choice = 3				ifTrue: [dir := FileList2 modalFolderSelector.					directoryName := dir					ifNil: [ '' ]						ifNotNil: [dir pathName ]]].		self defaultChangeSetDirectory: directoryName.		^dir! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'nk 1/4/2004 17:07'!fileIntoNewChangeSet	"Obtain a file designation from the user, and file its contents into a  	new change set whose name is a function of the filename. Show the  	new set and leave the current changeSet unaltered."	| aNewChangeSet stream |	self okToChange		ifFalse: [^ self].	ChangeSet promptForDefaultChangeSetDirectoryIfNecessary.	stream := StandardFileMenu oldFileStreamFrom: ChangeSet defaultChangeSetDirectory.	stream		ifNil: [^ self].	aNewChangeSet := self class				newChangesFromStream: stream				named: (FileDirectory localNameFor: stream name).	aNewChangeSet		ifNotNil: [self showChangeSet: aNewChangeSet]! !!ChangeSet class reorganize!('current changeset' browseChangedMessages current currentChangeSetString newChanges: noChanges)('defaults' defaultChangeSetDirectory defaultChangeSetDirectory: defaultName promptForDefaultChangeSetDirectoryIfNecessary uniqueNameLike:)('fileIn/Out' doWeFileOut:given:cache: superclassOrder:)('instance creation' basicNewNamed: new)!