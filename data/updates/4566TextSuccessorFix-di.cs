'From Squeak3.2alpha of 2 October 2001 [latest update: #4559] on 29 November 2001 at 8:09:09 pm'!"Change Set:		TextSuccessorFixDate:			29 November 2001Author:			Dan IngallsKim Rose reported a while ago that there was a walkback when trying to turn a GeeMail from 1-column book to a 2-column book and Leo Burd recently noted the same problem.  Bob Arning reported a related problem with simple TextMorphs:	In a new TextMorph choose 'add successor' from its menu	Try to add text to first TM, get 'Error: Inconsistency in text editor'This change fixes the simple manifestation of this problem, and hopefully the GeeMail problem as well, though I have not tested it."!!TextMorph methodsFor: 'private' stamp: 'di 11/29/2001 17:07'!updateFromParagraph	"A change has taken place in my paragraph, as a result of editing and I must be updated.  If a line break causes recomposition of the current paragraph, or it the selection has entered a different paragraph, then the current editor will be released, and must be reinstalled with the resulting new paragraph, while retaining any editor state, such as selection, undo state, and current typing emphasis."	| newStyle sel oldLast oldEditor back |	paragraph ifNil: [^ self].	wrapFlag ifNil: [wrapFlag _ true].	editor ifNotNil: [oldEditor _ editor.					sel _ editor selectionInterval.					editor storeSelectionInParagraph].	text _ paragraph text.	paragraph textStyle = textStyle		ifTrue: [self fit]		ifFalse: ["Broadcast style changes to all morphs"				newStyle _ paragraph textStyle.				(self firstInChain text: text textStyle: newStyle) recomposeChain.				editor ifNotNil: [self installEditorToReplace: editor]].	super layoutChanged.	sel ifNil: [^ self].	"If selection is in top line, then recompose predecessor for possible ripple-back"	predecessor ifNotNil:		[sel first <= (self paragraph lines first last+1) ifTrue:			[oldLast _ predecessor lastCharacterIndex.			predecessor paragraph recomposeFrom: oldLast to: text size delta: 0.			oldLast = predecessor lastCharacterIndex				ifFalse: [predecessor changed. "really only last line"						self predecessorChanged]]].	((back _ predecessor~~nil and: [sel first <= self paragraph firstCharacterIndex])		or: [successor~~nil and: [sel first > (self paragraph lastCharacterIndex+1)]])		ifTrue:		["The selection is no longer inside this paragraph.		Pass focus to the paragraph that should be in control."		back ifTrue: [predecessor recomposeChain]			ifFalse: [self recomposeChain].		self firstInChain withSuccessorsDo:			[:m |  (sel first between: m firstCharacterIndex								and: m lastCharacterIndex+1)					ifTrue: [m installEditorToReplace: oldEditor.							^ self passKeyboardFocusTo: m]].		self error: 'Inconsistency in text editor' "Must be somewhere in the successor chain"].	editor ifNil:		["Reinstate selection after, eg, style change"		self installEditorToReplace: oldEditor]! !