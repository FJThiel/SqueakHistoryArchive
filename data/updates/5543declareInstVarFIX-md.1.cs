'From Squeak3.7alpha of ''11 September 2003'' [latest update: #5526] on 12 November 2003 at 11:25 am'!"Change Set:		declareInstVarFIX-mdDate:			12 November 2003Author:			Marcus DenkerThe *very nice* feature introduced by [ENH] DeclareInstVar (5514) doesnot work correctly. This is just disables the menu-entry for now, willlook into this later. Lukas' comment:| I was wondering if this ever worked?|||yes, it works. But some cases (where the class has got super- and subclasses with i-vars) you ||might get a mess with the indexes of the i-vars. I don't know how to fix that problem as the ||Squeak parser is really messy."!!Parser methodsFor: 'error correction' stamp: 'md 11/12/2003 11:13'!correctVariable: proposedVariable interval: spot	"Correct the proposedVariable to a known variable, or declare it as a new	variable if such action is requested.  We support declaring lowercase	variables as temps or inst-vars, and uppercase variables as Globals or 	ClassVars, depending on whether the context is nil (class=UndefinedObject).	Spot is the interval within the test stream of the variable."	"inst-Var support has been disabled for now. See the comment in Parser>>declareInstVar:"	| tempIvar labels actions lines alternatives binding userSelection choice action |	"Check if this is an i-var, that has been corrected already (ugly)"	(encoder classEncoding instVarNames includes: proposedVariable) ifTrue: [		^LiteralVariableNode new 			name: proposedVariable index: (encoder classEncoding instVarNames indexOf: proposedVariable) - 1 type: 1;			yourself ].	"If we can't ask the user for correction, make it undeclared"	self interactive 		ifFalse: [ ^encoder undeclared: proposedVariable ].	"First check to see if the requestor knows anything about the variable"	tempIvar _ proposedVariable first isLowercase.	(tempIvar and: [ (binding _ requestor bindingOf: proposedVariable) notNil ])		ifTrue: [ ^encoder global: binding name: proposedVariable ].	userSelection _ requestor selectionInterval.	requestor selectFrom: spot first to: spot last.	requestor select.	"Build the menu with alternatives"	labels _ OrderedCollection new. actions _ OrderedCollection new. lines _ OrderedCollection new.	alternatives _ encoder possibleVariablesFor: proposedVariable.	tempIvar 		ifTrue: [ 			labels add: 'declare temp'. 			actions add: [ self declareTempAndPaste: proposedVariable ].			"labels add: 'declare instance'.			actions add: [ self declareInstVar: proposedVariable ]" ]		ifFalse: [ 			labels add: 'declare global'.			actions add: [ self declareGlobal: proposedVariable ].			encoder classEncoding == UndefinedObject ifFalse: [ 				labels add: 'declare class variable'.				actions add: [ self declareClassVar: proposedVariable ] ] ].	lines add: labels size.	alternatives do: [ :each | 		labels add: each.		actions add: [ 			self substituteWord: each wordInterval: spot offset: 0.			encoder encodeVariable: each ] fixTemps ].	lines add: labels size.	labels add: 'cancel'.	"Display the pop-up menu"	choice _ (PopUpMenu labelArray: labels asArray lines: lines asArray)		startUpWithCaption: 'Unknown variable: ', proposedVariable, ' please correct, or cancel:'.	action _ actions at: choice ifAbsent: [ ^self fail ].	"Execute the selected action"	requestor deselect.	requestor selectInvisiblyFrom: userSelection first to: userSelection last.	^action value! !!Parser methodsFor: 'error correction' stamp: 'md 11/12/2003 11:15'!declareInstVar: name	| index |	encoder classEncoding addInstVarName: name.	index _ encoder classEncoding instVarNames indexOf: name.	^LiteralVariableNode new		name: name index: index - 1 type: 1;		yourself		"md: This doesn't yet worked. I uncommented the menu-entry fornow. Will look into this soon. This is Lukas' comment:From: Lukas Renggli <renggli@student.unibe.ch>Date: Mar nov 4, 2003  09:18:04 Europe/ZurichTo: ducasse <ducasse@iam.unibe.ch>Subject: Re: about some fixesHi Stef,I was wondering if this ever worked?yes, it works. But some cases (where the class has got super- and subclasses with i-vars) you might get a mess with the indexes of the i-vars. I don't know how to fix that problem as the Squeak parser is really messy.Anyway, the generation of the menu should be included as it makes it much easier to write modify that menu."! !