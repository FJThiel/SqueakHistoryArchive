'From Squeak3.1alpha of 28 February 2001 [latest update: #4235] on 6 August 2001 at 5:54:56 pm'!"Change Set:		WordEndianess-arDate:			17 May 2001Author:			Andreas RaabThe change set fixes various remaining problems with word object's endianess and also cleans up the implementation of various #writeOn: methods."!!ArrayedCollection methodsFor: 'objects from disk' stamp: 'ar 5/17/2001 19:50'!writeOn: aStream 	"Store the array of bits onto the argument, aStream.  (leading byte ~= 16r80) identifies this as raw bits (uncompressed).  Always store in Big Endian (Mac) byte order.  Do the writing at BitBlt speeds. We only intend this for non-pointer arrays.  Do nothing if I contain pointers."	self class isPointers | self class isWords not ifTrue: [^ super writeOn: aStream].				"super may cause an error, but will not be called."	aStream nextInt32Put: self basicSize.	aStream nextWordsPutAll: self.! !!ArrayedCollection class methodsFor: 'instance creation' stamp: 'ar 5/17/2001 19:50'!newFromStream: s	"Only meant for my subclasses that are raw bits and word-like.  For quick unpack form the disk."	| len |	self isPointers | self isWords not ifTrue: [^ super newFromStream: s].		"super may cause an error, but will not be called."	s next = 16r80 ifTrue:		["A compressed format.  Could copy what BitMap does, or use a 		special sound compression format.  Callers normally compress their own way."		^ self error: 'not implemented'].	s skip: -1.	len _ s nextInt32.	^ s nextWordsInto: (self basicNew: len)! !!GZipSurrogateStream methodsFor: 'as yet unclassified' stamp: 'ar 5/17/2001 19:08'!nextWordsPutAll: aCollection	"Write the argument a word-like object in big endian format on the receiver.	May be used to write other than plain word-like objects (such as ColorArray)."	^self nextPutAllWordArray: aCollection! !!MatrixTransform2x3 methodsFor: 'objects from disk' stamp: 'ar 8/6/2001 17:52'!writeOn: aStream	aStream nextWordsPutAll: self.! !!Stream methodsFor: 'testing' stamp: 'ar 5/17/2001 19:07'!nextWordsPutAll: aCollection	"Write the argument a word-like object in big endian format on the receiver.	May be used to write other than plain word-like objects (such as ColorArray)."	aCollection class isPointers | aCollection class isWords not 		ifTrue: [^self error: aCollection class name,' is not word-like'].	1 to: aCollection basicSize do:[:i|		self nextNumber: 4 put: (aCollection basicAt: i).	].	^aCollection! !!StandardFileStream methodsFor: 'read, write, position' stamp: 'ar 5/17/2001 19:07'!nextWordsPutAll: aCollection	"Write the argument a word-like object in big endian format on the receiver.	May be used to write other than plain word-like objects (such as ColorArray)."	| reversed |	aCollection class isPointers | aCollection class isWords not 		ifTrue: [^self error: aCollection class name,' is not word-like'].	Smalltalk isLittleEndian ifTrue:[		reversed _ aCollection clone.		Smalltalk swapBytesIn: reversed from: 1 to: aCollection basicSize.		self nextPutAll: reversed.	] ifFalse:[		self nextPutAll: aCollection.	].	^aCollection! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'ar 5/17/2001 19:02'!swapBytesIn: aNonPointerThing from: start to: stop	"Perform a bigEndian/littleEndian byte reversal of my words.	We only intend this for non-pointer arrays.  Do nothing if I contain pointers."	| hack blt |	"The implementation is a hack, but fast for large ranges"	hack _ Form new hackBits: aNonPointerThing.	blt _ (BitBlt toForm: hack) sourceForm: hack.	blt combinationRule: Form reverse.  "XOR"	blt sourceY: start-1; destY: start-1; height: stop-start+1; width: 1.	blt sourceX: 0; destX: 3; copyBits.  "Exchange bytes 0 and 3"	blt sourceX: 3; destX: 0; copyBits.	blt sourceX: 0; destX: 3; copyBits.	blt sourceX: 1; destX: 2; copyBits.  "Exchange bytes 1 and 2"	blt sourceX: 2; destX: 1; copyBits.	blt sourceX: 1; destX: 2; copyBits.! !SoundBuffer removeSelector: #writeOn:!ShortRunArray removeSelector: #writeOn:!ShortIntegerArray removeSelector: #writeOn:!