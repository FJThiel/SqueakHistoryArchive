'From Squeak2.9alpha of 2 September 2000 [latest update: #3077] on 4 December 2000 at 3:14:14 pm'!"Change Set:		versionsPanesDate:			4 December 2000Author:			Robert HirschfeldAdds annotation panes to VersionsBrowser.Refactors optional button assembly in ChangeList and VersionsBrowser."!!ChangeList methodsFor: 'initialization-release' stamp: 'rhi 12/4/2000 15:05'!optionalButtonsView	| view bHeight vWidth first offset previousView bWidth button |	vWidth _ 200.	bHeight _ self optionalButtonHeight.	previousView _ nil.	offset _ 0.	first _ true.	view _ View new		model: self;		window: (0 @ 0 extent: vWidth @ bHeight).	self changeListButtonSpecs do: [:triplet |		button _ PluggableButtonView			on: self			getState: nil			action: triplet second.		button label: triplet first asParagraph.		bWidth _ button label boundingBox width // 2.		button			window: (offset@0 extent: bWidth@bHeight);			borderWidthLeft: 0 right: 1 top: 0 bottom: 0.		offset _ offset + bWidth.		first			ifTrue:				[view addSubView: button.				first _ false.]			ifFalse:				[view addSubView: button toRightOf: previousView].		previousView _ button].	button _ PluggableButtonView		on: self		getState: #showDiffs		action: #toggleDiff.	button		label: 'toggle diff' asParagraph;		window: (offset@0 extent: (vWidth - offset)@bHeight).	view addSubView: button toRightOf: previousView.	^ view! !!ChangeList class methodsFor: 'instance creation' stamp: 'rhi 12/4/2000 11:05'!open: aChangeList name: aString multiSelect: multiSelect	"Create a standard system view for the messageSet, whose label is aString.	The listView may be either single or multiple selection type"	| topView listHeight annoHeight optButtonHeight codeHeight aListView underPane annotationPane buttonsView aBrowserCodeView |	Smalltalk isMorphic		ifTrue: [^ self openAsMorph: aChangeList name: aString multiSelect: multiSelect].	listHeight _ 70.	annoHeight _ 10.	optButtonHeight _ aChangeList optionalButtonHeight.	codeHeight _ 110.	topView _ (StandardSystemView new)		model: aChangeList;		label: aString;		minimumSize: 200 @ 120;		borderWidth: 1.	aListView _ (multiSelect			ifTrue: [PluggableListViewOfMany]			ifFalse: [PluggableListView])		on: aChangeList		list: #list		selected: #listIndex		changeSelected: #toggleListIndex:		menu: (aChangeList showsVersions			ifTrue: [#versionsMenu:]			ifFalse: [#changeListMenu:])		keystroke: #messageListKey:from:.	aListView window: (0 @ 0 extent: 200 @ listHeight).	topView addSubView: aListView.	underPane _ aListView.	Preferences useAnnotationPanes		ifTrue:			[annotationPane _ PluggableTextView				on: aChangeList				text: #annotation				accept: nil				readSelection: nil				menu: nil.			annotationPane window: (0 @ 0 extent: 200 @ 10).			topView addSubView: annotationPane below: underPane.			underPane _ annotationPane.			codeHeight _ codeHeight - annoHeight].	Preferences optionalButtons		ifTrue:			[buttonsView _ aChangeList optionalButtonsView.			buttonsView borderWidth: 1.			topView addSubView: buttonsView below: underPane.			underPane _ buttonsView.			codeHeight _ codeHeight - optButtonHeight].	aBrowserCodeView _ PluggableTextView			on: aChangeList			text: #contents			accept: #contents:			readSelection: #contentsSelection			menu: #codePaneMenu:shifted:.	aBrowserCodeView			controller: ReadOnlyTextController new;			window: (0 @ 0 extent: 200 @ codeHeight).	topView addSubView: aBrowserCodeView below: underPane.	topView controller open.! !!ChangeList class methodsFor: 'instance creation' stamp: 'rhi 12/4/2000 11:05'!openAsMorph: aChangeList name: labelString multiSelect: multiSelect	"Open a morphic view for the messageSet, whose label is labelString.	The listView may be either single or multiple selection type"	| window listHeight annoHeight optButtonHeight baseline |	listHeight _ 0.4.	annoHeight _ 0.05.	optButtonHeight _ 0.08.	window _ (SystemWindow labelled: labelString)		model: aChangeList.	window addMorph: ((multiSelect				ifTrue: [PluggableListMorphOfMany]				ifFalse: [PluggableListMorph])			on: aChangeList			list: #list			selected: #listIndex			changeSelected: #toggleListIndex:			menu: (aChangeList showsVersions				ifTrue: [#versionsMenu:]				ifFalse: [#changeListMenu:]))		frame: (0 @ 0 extent: 1 @ listHeight).	baseline _ listHeight.	Preferences useAnnotationPanes		ifTrue:			[window addMorph: ((PluggableTextMorph					on: aChangeList					text: #annotation					accept: nil					readSelection: nil					menu: nil)					askBeforeDiscardingEdits: false)				frame: (0@listHeight extent: 1@annoHeight).			baseline _ baseline + annoHeight].	Preferences optionalButtons		ifTrue:			[window addMorph: aChangeList buttonRowForChangeList				frame: (0@baseline extent: 1@optButtonHeight).			baseline _ baseline + optButtonHeight].	window addMorph: (AcceptableCleanTextMorph			on: aChangeList			text: #contents accept: #contents:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0 @ baseline extent: 1 @(1 - baseline)).	^ window openInWorld! !VersionsBrowser removeSelector: #optionalButtonsView!VersionsBrowser removeSelector: #versionListButtonTriples!