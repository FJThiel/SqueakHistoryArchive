'From Squeak2.9alpha of 13 June 2000 [latest update: #2854] on 10 October 2000 at 10:17:46 pm'!"Change Set:		WnldRevivalDate:			10 October 2000Author:			Andreas RaabAh!! Finally!! One of those great moments where you can throw away one of those incredibly ugly hacks and replace it with something that looks exactly the way it should look. Feels good."!!WonderlandActor methodsFor: 'morphic reactions' stamp: 'ar 10/10/2000 22:04'!dispatchEvent: event to: aMorph	| evt delta |	evt _ event getMorphicEvent.	delta _ (myTexture mapPrimitiveVertex: event getVertex) - evt position.	evt _ evt translatedBy: delta.	evt resetHandlerFields.	"Make sure my texture thinks it's in the world otherwise we might run into problems"	aMorph isInWorld ifFalse:[aMorph privateOwner: event getCameraMorph].	aMorph processEvent: evt.! !!WonderlandActor methodsFor: 'morphic reactions' stamp: 'ar 10/10/2000 21:33'!morphicKeyPress: event	"Handle the given event"	myTexture isMorph ifTrue:[self dispatchEvent: event to: myTexture].! !!WonderlandActor methodsFor: 'morphic reactions' stamp: 'ar 10/10/2000 21:32'!morphicMouseDown: event	"Handle the given event.	If a local viewpoint is defined go to this viewpoint."	| vp |	(event getMorphicEvent shiftPressed and:[(vp _ self getUserPointOfView) notNil])		ifTrue:[event getCameraMorph getCamera 					setPointOfView: vp					duration: 2					asSeenBy: self.				"Set an additional flag to avoid inbetween shift key changes"				^self setProperty: #userTransition toValue: true].	myTexture isMorph ifTrue:[		self dispatchEvent: event to: myTexture.	].! !!WonderlandActor methodsFor: 'morphic reactions' stamp: 'ar 10/10/2000 21:32'!morphicMouseMove: event	"Handle the given event"	(event getMorphicEvent shiftPressed and:[self getUserPointOfView notNil])		ifTrue:[^self]. "Reserved for navigation"	(self getProperty: #userTransition) == true ifTrue:[^true]. "Shift key went up"	myTexture isMorph ifTrue:[		self dispatchEvent: event to: myTexture.	].! !!WonderlandActor methodsFor: 'morphic reactions' stamp: 'ar 10/10/2000 21:33'!morphicMouseUp: event	"Handle the given event"	(event getMorphicEvent shiftPressed and:[self getUserPointOfView notNil])		ifTrue:[^self]. "Reserved for navigation"	(self getProperty: #userTransition) == true ifTrue:["Shift key went up"		^self setProperty: #userTransition toValue: nil].	myTexture isMorph ifTrue:[		self dispatchEvent: event to: myTexture.	].! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'ar 10/10/2000 21:31'!containsPoint: aPoint event: anEvent	anEvent isMouseOver ifTrue:[		"Approximate for mouseOver; they're just sent too often"		^self bounds containsPoint: aPoint].	^super containsPoint: aPoint event: anEvent! !!WonderlandWrapperMorph methodsFor: 'accessing' stamp: 'ar 10/10/2000 22:16'!hasHalo: aBool	super hasHalo: aBool.	aBool ifFalse:[self delete].! !!WonderlandWrapperMorph methodsFor: 'handles' stamp: 'ar 10/10/2000 22:14'!dismissViaHalo	myActor destroy.	self delete.! !WonderlandActor removeSelector: #dispatchEvent:using:!Smalltalk removeClassNamed: #FakeHandMorph!