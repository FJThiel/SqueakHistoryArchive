'From Squeak 2.2 of Sept 23, 1998 on 18 October 1998 at 9:27:17 am'!"Change Set:		SqTConstructDate:			18 October 1998Author:			Dan IngallsMakes ScorePlayerMorphs and MoviePlayerMorphs able to be instantiated without an open file.  You can then open a file via menu command.A movie player can be created from the new morphs...Demo menu, but the ScorePlayer is not currently available from any of these menus.  However, both can be instantiated by executing...	MoviePlayerMorph new openInWorld.	ScorePlayerMorph new openInWorld."!!MoviePlayerMorph methodsFor: 'initialization' stamp: 'di 10/13/1998 14:46'!openMovieFile	| fileName |	fileName _ Utilities chooseFileWithSuffixFromList: #('.movie')					withCaption: 'Choose a movie file to open'.	fileName ifNotNil: [self openFileNamed: fileName]! !!MoviePlayerMorph methodsFor: 'initialization' stamp: 'di 10/14/1998 15:50'!setInitialState	super setInitialState.	self borderWidth: 2.	self color: Color veryLightGray.	pageSize _ frameSize _ 200@200.	frameDepth _ 8! !!MoviePlayerMorph methodsFor: 'menu' stamp: 'di 10/13/1998 14:42'!invokeBookMenu	"Invoke the book's control panel menu."	| aMenu sel |	aMenu _ MVCMenuMorph new.	aMenu addList:	#(			('make thumbnail'		thumbnailForThisPage)			('open movie file'		openMovieFile)		).	(sel _ aMenu invokeAt: self primaryHand position in: self world)		ifNotNil: [self perform: sel].! !!ScorePlayerMorph methodsFor: 'all' stamp: 'di 10/18/1998 06:53'!invokeMenu	"Invoke a menu of additonal functions for this WaveEditor."	| aMenu |	aMenu _ CustomMenu new.	aMenu add: 'reload instruments' action: #updateInstrumentsFromLibrary.	aMenu add: 'open a MIDI file' action: #openMIDIFile.	scorePlayer midiPort		ifNil: [			aMenu add: 'play via MIDI' action: #openMIDIPort]		ifNotNil: [			aMenu add: 'play via built in synth' action: #closeMIDIPort.			aMenu add: 'new MIDI controller' action: #makeMIDIController:].	aMenu invokeOn: self defaultSelection: nil.! !!ScorePlayerMorph methodsFor: 'all' stamp: 'di 10/14/1998 15:30'!makeControls	| b r reverbSwitch repeatSwitch |	b _ SimpleButtonMorph new		target: self;		borderColor: #raised;		borderWidth: 2;		color: color.	r _ AlignmentMorph newRow.	r color: b color; borderWidth: 0; inset: 0.	r hResizing: #shrinkWrap; vResizing: #shrinkWrap; extent: 5@5.	r addMorphBack: (b fullCopy label: '<>'; actWhen: #buttonDown;														actionSelector: #invokeMenu).	r addMorphBack: (b fullCopy label: 'Piano Roll';		actionSelector: #makePianoRoll).	r addMorphBack: (b fullCopy label: 'Rewind';		actionSelector: #rewind).	b target: scorePlayer.	r addMorphBack: (b fullCopy label: 'Play';			actionSelector: #resumePlaying).	r addMorphBack: (b fullCopy label: 'Pause';			actionSelector: #pause).	reverbSwitch _ SimpleSwitchMorph new		offColor: color;		onColor: (Color r: 1.0 g: 0.6 b: 0.6);		borderWidth: 2;		label: 'Reverb Disable';		actionSelector: #disableReverb:;		target: scorePlayer;		setSwitchState: SoundPlayer isReverbOn not.	r addMorphBack: reverbSwitch.	scorePlayer ifNotNil:		[repeatSwitch _ SimpleSwitchMorph new			offColor: color;			onColor: (Color r: 1.0 g: 0.6 b: 0.6);			borderWidth: 2;			label: 'Repeat';			actionSelector: #repeat:;			target: scorePlayer;			setSwitchState: scorePlayer repeat.		r addMorphBack: repeatSwitch].	b target: self.	^ r! !!ScorePlayerMorph methodsFor: 'all' stamp: 'di 10/18/1998 09:07'!onScorePlayer: aScorePlayer title: scoreName	| divider col |	scorePlayer _ aScorePlayer.	scorePlayer ifNotNil:		[scorePlayer  reset.		instrumentSelector _ Array new: scorePlayer score tracks size].	self addMorph: self makeControls.	divider _ AlignmentMorph new		extent: 10@1;		borderWidth: 1;		inset: 0;		borderColor: #raised;		color: color;		hResizing: #spaceFill;		vResizing: #rigid.	self removeAllMorphs.	self addMorphBack: self makeControls.	scorePlayer ifNil: [^ self].	self addMorphBack: self rateControl.	self addMorphBack: self volumeControl.	col _ AlignmentMorph newColumn color: color; inset: 0.	self addMorphBack: col.	1 to: scorePlayer trackCount do: [:trackIndex |		col addMorphBack: divider fullCopy.		col addMorphBack: (self trackControlsFor: trackIndex)].	LastMIDIPort ifNotNil: [		"use the most recently set MIDI port"		scorePlayer openMIDIPort: LastMIDIPort].! !!ScorePlayerMorph methodsFor: 'all' stamp: 'di 10/14/1998 15:46'!openMIDIFile	"Open a MIDI score and re-init controls..."	| score fileName f player |	fileName _ Utilities chooseFileWithSuffixFromList: #('.mid' '.midi')					withCaption: 'Choose a MIDI file to open'.	fileName ifNil: [^ self].	f _ FileStream readOnlyFileNamed: fileName.	score _ (MIDIFileReader new readMIDIFrom: f binary) asScore.	f close.	player _ ScorePlayer onScore: score.	self onScorePlayer: player title: fileName! !