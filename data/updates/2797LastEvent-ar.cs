'From Squeak2.9alpha of 13 June 2000 [latest update: #2834] on 9 October 2000 at 4:26:19 pm'!"Change Set:		LastEvent-arDate:			9 October 2000Author:			Andreas RaabRemoves the use of 'lastEvent' for determing what a new event should be. Rather buffers the last raw event buffer (which is private to the hand so nobody outside can mess it up) and determines new mouse events based on this.NOTE: With the CS we now have 3 different 'lastEventXYZ' instVars in HandMorph. I'll clean this up but for now I'm just trying to get around the image quitting problem (and some other issues which I noticed but never got to the root of the problem). Thanks Bob!!"!Morph subclass: #HandMorph	instanceVariableNames: 'mouseFocus keyboardFocus eventListeners mouseListeners keyboardListeners mouseClickState mouseOverHandler lastMouseEvent lastEvent targetOffset damageRecorder cacheCanvas cachedCanvasHasHoles temporaryCursor temporaryCursorOffset remoteConnections transmitBuffer hasChanged savedPatch userInitials lastEventBuffer '	classVariableNames: 'DoubleClickTime EventStats NewEventRules NormalCursor PasteBuffer ShowEvents '	poolDictionaries: 'EventSensorConstants '	category: 'Morphic-Kernel'!!HandMorph methodsFor: 'initialization' stamp: 'ar 10/9/2000 15:49'!initForEvents	lastMouseEvent _ MouseEvent new setType: #mouseMove position: 0@0 buttons: 0 hand: self.	lastEventBuffer _ {1. 0. 0. 0. 0. 0. nil. nil}.	self resetClickState.! !!HandMorph methodsFor: 'private events' stamp: 'ar 10/9/2000 15:52'!generateMouseEvent: evtBuf	"Generate the appropriate mouse event for the given raw event buffer"	| position buttons modifiers type trail stamp |	stamp _ (evtBuf at: 2).	stamp = 0 ifTrue:[stamp _ Time millisecondClockValue].	position _ (evtBuf at: 3) @ (evtBuf at: 4).	buttons _ (evtBuf at: 5).	modifiers _ (evtBuf at: 6).	buttons = 0 		ifTrue:[	(lastEventBuffer at: 5) = 0					ifTrue:[type _ #mouseMove]					ifFalse:[type _ #mouseUp]]		ifFalse:[	(lastEventBuffer at: 5) = 0					ifTrue:[type _ #mouseDown]					ifFalse:[type _ #mouseMove]].	buttons _ buttons bitOr: (modifiers bitShift: 3).	type == #mouseMove ifTrue:[		trail _ self mouseTrailFrom: evtBuf.		lastEventBuffer _ evtBuf.		^MouseMoveEvent new 			setType: type 			startPoint: trail first			endPoint: trail last 			trail: trail			buttons: buttons			hand: self			stamp: stamp.	].	lastEventBuffer _ evtBuf.	^MouseButtonEvent new 		setType: type 		position: position		which: ((lastEventBuffer at: 5) bitXor: buttons)		buttons: buttons 		hand: self		stamp: stamp! !"Postscript:"Smalltalk isMorphic ifTrue:[World primaryHand initForEvents].!