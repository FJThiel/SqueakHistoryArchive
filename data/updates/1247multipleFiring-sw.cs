'From Squeak 2.4c of May 10, 1999 on 15 June 1999 at 11:28:28 pm'!"Change Set:		multipleFiring-swDate:			15 June 1999Author:			Scott WallaceMakes it possible for some scripts to fire more frequently than once per system.  Useful in suport of the sampling e-toy, for example."!!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 4/21/1999 09:10'!chooseFrequency	| currentFrequency aMenu |	currentFrequency _ self scriptInstantiation frequency.	currentFrequency = 0 ifTrue: [currentFrequency _ 1].	aMenu _ MenuMorph new defaultTarget: self.	#(1 2 5 10 25 50 100 1000 5000 10000) do:		[:i | aMenu add: i printString selector: #setFrequencyTo: argument: i].		aMenu add: 'other...' action: #typeInFrequency.	aMenu addTitle: 'Choose frequency (current: ', currentFrequency printString, ')'.	aMenu  popUpAt: self cursorPoint event: self currentEvent! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 4/21/1999 11:14'!offerScriptorMenu	| aMenu result  aList lines title |	self isAnonymous		ifTrue:			["This is a disused branch but will still be reached if someone loads an old thing				from a save-file that has anonymous scripts still present"			aList _ #(				('modernize'						modernizeScript)				('destroy this script'				destroyScript)				('explain status alternatives' 	explainStatusAlternatives)).			title _ 'temporary script'.			lines _ #()]		ifFalse:			[title _ scriptName asString.			self isTextuallyCoded				ifTrue:					[title _ title, ' (textually coded)'.					aList _ #(						('revert to tile version...'		revertScriptVersion)						('modify textual script'			editScriptTextually)						('fires per tick...'				chooseFrequency)				"		('view all scripts'				browseScripts)"						('destroy this script'				destroyScript)						('rename this script'				renameScript)						('explain status alternatives' 	explainStatusAlternatives)).					lines _ #(2 3 5)]				ifFalse:					[aList _ #(						('save this version'				saveScriptVersion)						('revert to prior version...'		revertScriptVersion)						('edit this script textually'		editScriptTextually)						('fires per tick...'				chooseFrequency)					"	('view all scripts'				browseScripts)"						('destroy this script'				destroyScript)						('rename this script'				renameScript)						('explain status alternatives' 	explainStatusAlternatives)).					lines _ #(3 4 6)]].	aMenu _ SelectionMenu labelList: (aList collect: [:pair | pair first]) lines: lines selections: (aList collect: [:pair | pair second]).	result _ aMenu startUpWithCaption: title.	result ifNotNil: [self perform: result]"		('add parameter to this script'	addParameter)"! !!ScriptEditorMorph methodsFor: 'frequency' stamp: 'sw 4/21/1999 09:12'!setFrequencyTo: aNumber	self scriptInstantiation frequency: aNumber! !!ScriptEditorMorph methodsFor: 'frequency' stamp: 'sw 4/21/1999 11:14'!typeInFrequency	| reply aNumber |	reply _ FillInTheBlank request: 'Number of firings per tick: ' initialAnswer: self scriptInstantiation frequency printString.	reply ifNotNil:		[aNumber _ reply asNumber.		aNumber > 0 ifTrue:			[self setFrequencyTo: aNumber]]! !!ScriptInstantiation methodsFor: 'status & running' stamp: 'sw 4/21/1999 09:26'!runIfTicking	status == #ticking ifTrue:		[1 to: self frequency do:			[:i | player perform: selector]]! !!ScriptInstantiation methodsFor: 'frequency' stamp: 'sw 4/21/1999 09:13'!frequency	(frequency == nil or: [frequency = 0]) ifTrue: [frequency _ 1].	^ frequency! !!ScriptInstantiation methodsFor: 'frequency' stamp: 'sw 4/21/1999 09:13'!frequency: aNumber	frequency _ aNumber! !