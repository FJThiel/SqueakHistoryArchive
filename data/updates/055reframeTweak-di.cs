'From Squeak 2.0 BETA of May 8, 1998 on 20 May 1998 at 3:31:37 pm'!!FileList methodsFor: 'private' stamp: 'di 5/20/1998 15:19'!readContentsBrief: brevityFlag	"Read the contents of the receiver's selected file, unless it is too long, in which case show just the first and last 1000 characters. Don't create a file if it doesn't already exist."	| f fileSize first2000 |	listIndex = 0 ifTrue: [^ self defaultContents].	f _ directory oldFileOrNoneNamed: self fullName.	f ifNil: [^ 'For some reason, this file cannot be read'].	(brevityFlag not or: [(fileSize _ f size) <= 30000])		ifTrue: [^ f contentsOfEntireFile].	"if brevityFlag is true, don't display long files when first selected"	first2000 _ f next: 2000.	f close.	^ 'File ''', fileName, ''' is ', fileSize printString, ' bytes long.You may use the ''get'' command to read the entire file.Here are the first 2000 characters...------------------------------------------', first2000 , '------------------------------------------... end of the first 2000 characters.'! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/20/1998 15:15'!enterHandle: event morph: handle pointName: ptName	"The mouse has entered reframing mark.  Start a reframe operation."	| resizer b |	paneMorphs do: [:p | ((p fullBounds insetBy: 1) containsPoint: event cursorPoint)			ifTrue: [^ self  "Don't activate resizer if in a scrollbar"]].	resizer _ NewHandleMorph new followHand: event hand		forEachPointDo:			[:p | b _ self bounds.			ptName = #topCenter ifTrue: [self bounds: (b withTop: p y)].			ptName = #bottomCenter ifTrue: [self bounds: (b withBottom: p y)].			ptName = #leftCenter ifTrue: [self bounds: (b withLeft: p x)].			ptName = #rightCenter ifTrue: [self bounds: (b withRight: p x)].			ptName = #topLeft ifTrue: [self bounds: (b bottomRight rect: p)].			ptName = #bottomRight ifTrue: [self bounds: (b topLeft rect: p)].			ptName = #bottomLeft ifTrue: [self bounds: (b topRight rect: p)].			ptName = #topRight ifTrue: [self bounds: (b bottomLeft rect: p)]]		lastPointDo: [:lastPoint | ].	event hand world addMorph: resizer.	resizer startStepping! !