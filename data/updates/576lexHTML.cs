'From Squeak 2.3 beta of Nov 25, 1998 on 3 January 1999 at 3:25:40 pm'!"Change Set:		HTML-dec98Date:			29 December 1998Author:			Lex Spoonsmall tweaks to HTML handling code.	1. allow <a> anchors to have no ending tag, if they have no href	2. printHtml is improved; if you printHtml a parsed document and then parse it again, you should get something that is semantically the same.	3. The HtmlEntity abstract superclass has a couple of new methods, to help code that wants to modify an HTML document	4. replaceHtmlCharRefs has a bug fixed in the case where a string ends with a character reference"!!HtmlEntity methodsFor: 'contents' stamp: 'ls 10/26/1998 17:24'!removeEntity: anEntity 	"remove the specified entity"	contents remove: anEntity! !!HtmlEntity methodsFor: 'contents' stamp: 'ls 10/26/1998 17:25'!subEntities	"return an ordered collection of this entity's contents"	^ contents! !!HtmlEntity methodsFor: 'printing' stamp: 'ls 10/30/1998 10:08'!printHtmlOn: aStream indent: indent 	aStream next: indent put: $ ;	 nextPutAll: '<';	 nextPutAll: self tagName.	self attributes associationsDo: [:assoc | aStream space; nextPutAll: assoc key; nextPutAll: '="'; nextPutAll: assoc value; nextPutAll: '"'].	aStream nextPut: $>;	 cr.	contents do: [:entity | entity printHtmlOn: aStream indent: indent + 1].	aStream nextPutAll: '</'; nextPutAll: self tagName; nextPutAll: '>'.! !!HtmlAnchor methodsFor: 'testing' stamp: 'ls 10/26/1998 19:34'!mayContain: anEntity 	(self attributes includesKey: 'href') ifFalse: [		"if we have no href, then we can contain nothing"		^false ].	^ anEntity isTextualEntity! !!HtmlCommentEntity methodsFor: 'printing' stamp: 'ls 10/26/1998 17:08'!printHtmlOn: aStream indent: indent 	indent timesRepeat: [aStream space].	aStream nextPutAll: '<!!-- '.	aStream nextPutAll: self commentText.	aStream nextPutAll: ' -->'.	aStream cr! !!HtmlCommentEntity methodsFor: 'printing' stamp: 'ls 10/26/1998 17:08'!printOn: aStream indent: indent 	self printHtmlOn: aStream indent: indent! !!HtmlTextEntity methodsFor: 'printing' stamp: 'ls 10/26/1998 17:09'!printHtmlOn: aStream indent: indent 	indent timesRepeat: [aStream space].	aStream nextPutAll: text.! !!String methodsFor: 'internet' stamp: 'ls 1/3/1999 15:19'!replaceHtmlCharRefs        | pos ampIndex scIndex special specialValue outString outPos newOutPos |        outString _ String new: self size.        outPos _ 0.        pos _ 1.                [ pos <= self size ] whileTrue: [                 "read up to the next ampersand"                ampIndex _ self indexOf: $& startingAt: pos ifAbsent: [0].                                ampIndex = 0 ifTrue: [                        pos = 1 ifTrue: [ ^self ] ifFalse: [ ampIndex _ self size+1 ] ].                newOutPos _ outPos + ampIndex - pos.                outString                        replaceFrom: outPos + 1                        to: newOutPos                        with: self                        startingAt: pos.                outPos _ newOutPos.                pos _ ampIndex.                ampIndex <= self size ifTrue: [                        "find the $;"                        scIndex _ self indexOf: $; startingAt: ampIndex ifAbsent: [ self size + 1 ].                        special _ self copyFrom: ampIndex+1 to: scIndex-1.                               specialValue _ String valueOfHtmlEntity: special.                         specialValue                                ifNil: [                                        "not a recognized entity.  wite it back"								  scIndex > self size ifTrue: [ scIndex _ self size ].                                        newOutPos _ outPos + scIndex - ampIndex + 1.                                        outString                                                replaceFrom: outPos+1                                                to: newOutPos                                                with: self                                                startingAt: ampIndex.                                        outPos _ newOutPos.]                                ifNotNil: [                                        outPos _ outPos + 1.                                        outString at: outPos put: specialValue.].                                                pos _ scIndex + 1. ]. ].        ^outString copyFrom: 1 to: outPos! !