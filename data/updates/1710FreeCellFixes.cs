'From Squeak2.7alpha of 6 December 1999 [latest update: #1686] on 10 December 1999 at 6:40:58 pm'!"Change Set:		FreeCellFixesDate:			9 December 1999Author:			Torge HusfeldtGets the fixes from FreeCell-changes.1 right. i.e.Disallow stacking on FreeCellsDisallow dropping of too much cards into an empty stack."!!FreeCellBoard methodsFor: 'layout' stamp: 'th 12/9/1999 17:18'!freeCell	| freeCell |	freeCell _ self cardCell.	freeCell 		stackingPolicy: #single;		emptyDropPolicy: #any;		target: self;		cardDroppedSelector: #cardMovedToFreeCell;		acceptCardSelector: #acceptCard:onFree:.	^freeCell.! !!FreeCellBoard methodsFor: 'actions' stamp: 'th 12/10/1999 18:40'!acceptCard: aCard onFree: aDeck	"don't accept multiple cards on a free cell, defer to deck for other cases"	aCard hasSubmorphs		ifTrue: [^ false]		ifFalse: [^ nil]! !!FreeCellBoard methodsFor: 'actions' stamp: 'th 12/9/1999 19:10'!acceptCard: aCard onStack: aDeck	" assumes that number of cards was check at drag time, need to reduce count if dropping	into an empty stack"	aCard hasSubmorphs 		ifTrue: [			aDeck ifEmpty: [				(aCard submorphCount+1) > (self maxDraggableStackSize: true)					ifTrue: [^false]]]		ifFalse: [^ nil].	^nil.! !!PlayingCardDeck methodsFor: 'dropping/grabbing' stamp: 'th 12/10/1999 16:07'!acceptCard: aCard default: aBoolean 	"if target and acceptCardSelector are both not nil, send to target, if not  	nil answer  	else answer aBoolean"	"Rewrote this a little (SmallLint calls this 'intention revealing')-th"	^ (target isNil or: [acceptCardSelector isNil])		ifTrue: [aBoolean]		ifFalse: [(target				perform: acceptCardSelector				with: aCard				with: self)				ifNil: [aBoolean]]! !!PlayingCardDeck methodsFor: 'dropping/grabbing' stamp: 'th 12/10/1999 18:34'!repelCard: aCard 	stackingPolicy = #none ifTrue: [^ self repelCard: aCard default: true].	stackingPolicy = #single ifTrue: [^ self ifEmpty: [self repelCard: aCard default: false]			ifNotEmpty: [true]].	(stackingPolicy = #altStraight or: [stackingPolicy = #straight])		ifTrue: [self ifEmpty: [^ self repelCard: aCard default: (self emptyDropNotOk: aCard)]				ifNotEmpty: [(self inStackingOrder: aCard onTopOf: self topCard)						ifFalse: [^ self repelCard: aCard default: true]]].	^ false! !