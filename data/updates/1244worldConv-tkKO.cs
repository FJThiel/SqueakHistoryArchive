'From Squeak 2.4c of May 10, 1999 on 11 June 1999 at 9:58:56 am'!!FileList methodsFor: 'file list menu' stamp: 'tk 6/10/1999 16:48'!itemsForFileEnding: suffix	| labels lines selectors |	labels _ OrderedCollection new.	lines _ OrderedCollection new.	selectors _ OrderedCollection new.	(suffix = 'bmp') | (suffix = 'gif') | (suffix = 'jpg') | (suffix = 'form') | (suffix = '*') ifTrue:		[labels addAll: #('open image in a window' 'read image into ImageImports').		selectors addAll: #(openImageInWindow importImage)].	(suffix = 'morph') | (suffix = 'morphs') | (suffix = 'sp') | (suffix = '*') ifTrue:		[labels add: 'load as morph'.		selectors add: #openMorphFromFile.		labels add: 'load as project'.		selectors add: #openProjectFromFile].	(suffix = 'bo') | (suffix = '*') ifTrue:[		labels add: 'load as book'.		selectors add: #openBookFromFile].	(suffix = 'mid') | (suffix = '*') ifTrue:		[labels add: 'play midi file'.		selectors add: #playMidiFile].	(suffix = 'movie') | (suffix = '*') ifTrue:		[labels add: 'open as movie'.		selectors add: #openAsMovie].	(suffix = 'st') | (suffix = 'cs') | (suffix = '*') ifTrue:		[suffix = '*' ifTrue: [lines add: labels size].		labels addAll: #('fileIn' 'file into new change set' 'browse changes' 'browse code' 'broadcast as update').		lines add: labels size - 1.		selectors addAll: #(fileInSelection fileIntoNewChangeSet browseChanges browseFile putUpdate)].	(suffix = 'swf') | (suffix = '*') ifTrue:[		labels add:'open as Flash'.		selectors add: #openAsFlash].	(suffix = 'ttf') | (suffix = '*') ifTrue:[		labels add: 'open true type font'.		selectors add: #openAsTTF].	(suffix = 'gz') | (suffix = '*') ifTrue:[		labels addAll: #('view decompressed' 'decompress to file').		selectors addAll: #(viewGZipContents saveGZipContents)].	(suffix = '3ds') | (suffix = '*') ifTrue:[		labels add: 'Open 3DS file'.		selectors add: #open3DSFile].	(suffix = 'tape') | (suffix = '*') ifTrue:		[labels add: 'open for playback'.		selectors add: #openTapeFromFile].	(suffix = '*') ifTrue:		[labels addAll: #('generate HTML').		lines add: labels size - 1.		selectors addAll: #(renderFile)].	^ Array with: labels with: lines with: selectors! !!FileList methodsFor: 'file list menu' stamp: 'tk 6/11/1999 09:58'!openProjectFromFile	"Reconstitute a Morph from the selected file, presumed to be represent a Morph saved via the SmartRefStream mechanism, and open it in an appropriate Morphic world" 	| aFileStream morphOrList |	Smalltalk verifyMorphicAvailability ifFalse: [^ self].	World ifNil: [^ self inform: 'Later, allow jumping from MVC to Morphic Projects.'].	aFileStream _ directory oldFileNamed: self fullName.	morphOrList _ aFileStream fileInObjectAndCode.	(morphOrList isKindOf: SqueakPage) ifTrue: [		morphOrList _ morphOrList contentsMorph].	(morphOrList isKindOf: PasteUpMorph) ifFalse: [		^ self inform: 'This is not a PasteUpMorph.'].	(ProjectViewMorph newMorphicProjectOn: morphOrList) openInWorld.	morphOrList project enter.! !!HandMorph methodsFor: 'world menu' stamp: 'tk 6/11/1999 09:55'!buildWorldMenu	"Build the meta menu for the world."	| menu |	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'previous project' target: owner action: #goBack.	menu add: 'jump to project...' action: #jumpToProject.	menu add: 'restore display' target: self world action: #restoreDisplay.	menu addLine.	menu add: 'new morph...' action: #newMorph.	menu add: 'authoring tools...' action: #scriptingDo.	self world addPlayfieldMenuItems: menu hand: self.	menu add: 'remote...' action: #remoteDo.	menu add: 'debug...' action: #debugDo.	menu addLine.	menu add: 'open...' action: #openWindow.	menu add: 'windows...' action: #windowsDo.	menu add: 'changes...' action: #changesDo.	menu add: 'help...' action: #helpDo.	menu add: 'do...' target: Utilities action: #offerCommonRequests.	menu addLine.	menu add: 'save' action: #saveSession.	menu add: 'save as...' action: #saveAs.	menu add: 'save and quit' action: #saveAndQuit.	menu add: 'quit' action: #quitSession.	^ menu! !!PasteUpMorph methodsFor: 'object fileIn' stamp: 'tk 6/10/1999 16:11'!convertbosfcebbfgccpmcpbttloiairfidcuw0: varDict bosfcebbfgccpmcpbttloiairfidcuwp0: smartRefStrm	"These variables are automatically stored into the new instance ('presenter' 'model' 'cursor' 'padding' 'backgroundMorph' 'turtleTrailsForm' 'turtlePen' 'lastTurtlePositions' 'openToDragNDrop' 'isPartsBin' 'autoLineLayout' 'indicateCursor' 'resizeToFit' 'fileName' 'isStackLike' 'dataInstances' 'currentDataInstance' 'userFrameRectangle' 'wantsMouseOverHalos' ).	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."	"New variables: ('project' )  If a non-nil value is needed, please assign it."! !!PasteUpMorph methodsFor: 'project' stamp: 'tk 6/11/1999 09:07'!storeDataOn: aDataStream	"WorldMorphs only save certain fields when written to the disk.  Save only the world's submorphs, model, and stepList. See DataStream.typeIDFor:  "	| cntInstVars instVars subs fldName |	"Store normally, and it may or may not be installed as the World in the target system?"	cntInstVars _ self class instSize.	self class isVariable ifTrue: [self error: 'We are not a variable class'].	instVars _ self class allInstVarNames.	"remove the flaps"	subs _ submorphs select: [:morph | (morph isKindOf: FlapTab) not].	aDataStream		beginInstance: self class		size: cntInstVars "+ 0".	1 to: cntInstVars do:		[:i | (fldName _ instVars at: i) = 'owner' 			ifTrue: [aDataStream nextPutWeak: owner]					"owner only written if it is in our tree"			ifFalse: [fldName = 'project' 				ifTrue: [aDataStream nextPut: nil]	"project _ nil on disk"				ifFalse: [fldName = 'submorphs' 					ifTrue: [aDataStream nextPut: subs]					ifFalse: [aDataStream nextPut: (self instVarAt: i)]]]].	"No variable fields"! !!PasteUpMorph methodsFor: 'accessing' stamp: 'tk 6/10/1999 17:04'!project	^project! !!Project methodsFor: 'file in/out' stamp: 'tk 6/11/1999 08:46'!objectForDataStream: refStrm	"I am about to be written on an object file.  Write a path to me in the other system instead."	self error: 'no, no'.	"^ DiskProxy global: #Project selector: #named: args: (Array with: self name)"! !!WorldMorph methodsFor: 'object fileIn' stamp: 'tk 6/10/1999 16:17'!convertbosfcebbfgccpmcpbttloiairfidcuwhavcdsllb0: varDict bosfcebbfgccpmcpbttloiairfidcuwphavcdsll0: smartRefStrm	"These variables are automatically stored into the new instance ('hands' 'activeHand' 'viewBox' 'canvas' 'damageRecorder' 'stepList' 'lastStepTime' 'lastCycleTime' ).	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."		"These are going away ('balloonHelpEnabled' ).  Possibly store their info in another variable?"! !PasteUpMorph removeSelector: #objectForDataStream:!