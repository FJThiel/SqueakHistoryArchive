'From Squeak2.9alpha of 17 July 2000 [latest update: #2766] on 28 September 2000 at 7:04:44 pm'!"Change Set:		KidNavPlusDate:			28 September 2000Author:			Bob Arning- adds balloon help to the kid navigator to help understand the pop out/in behavior- adds option to warn user before quitting Squeak if there are unsaved projectsimplementation is a bit fuzzy at the moment.Preferences - checkForUnsavedProjects in the general category"!ProjectNavigationMorph subclass: #KidNavigationMorph	instanceVariableNames: ''	classVariableNames: 'PreExistingProjects '	poolDictionaries: ''	category: 'Morphic-Windows'!Model subclass: #Project	instanceVariableNames: 'world changeSet transcript parentProject previousProject displayDepth viewSize thumbnail nextProject guards projectParameters isolatedHead inForce version urlList environment lastDirectory lastSavedAtSeconds '	classVariableNames: 'CurrentProject GoalFreePercent GoalNotMoreThan UIProcess '	poolDictionaries: ''	category: 'System-Support'!!KidNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 9/28/2000 18:23'!balloonText	^(mouseInside ifNil: [false]) ifTrue: [		'Click here to see FEWER buttons.'	] ifFalse: [		'Click here to see MORE buttons.'	].! !!KidNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 9/28/2000 19:00'!quitSqueak	| newProjects limit now msg response |	Preferences checkForUnsavedProjects ifFalse: [^super quitSqueak].	PreExistingProjects ifNil: [^super quitSqueak].	limit _ 5 * 60.	now _ Time totalSeconds.	newProjects _ Project allProjects reject: [ :each | PreExistingProjects includes: each].	newProjects _ newProjects reject: [ :each | 		((each lastSavedAtSeconds ifNil: [0]) - now) abs < limit	].	newProjects isEmpty ifTrue: [^super quitSqueak].	msg _ String streamContents: [ :strm |		strm nextPutAll: 'There are some project(s)that have not been saved recently:----'.		newProjects do: [ :each | strm nextPutAll: each name; cr].		strm nextPutAll: '----What would you like to do?'	].	response _ PopUpMenu 		confirm: msg		trueChoice: 'Go ahead and QUIT'		falseChoice: 'Wait, let me save them first'.	response ifTrue: [^super quitSqueak].! !!KidNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 9/28/2000 18:27'!step	super step.	PreExistingProjects ifNil: [PreExistingProjects _ WeakArray withAll: Project allProjects].! !!Project methodsFor: 'accessing' stamp: 'RAA 9/28/2000 18:33'!lastSavedAtSeconds	^lastSavedAtSeconds! !!Project methodsFor: 'file in/out' stamp: 'RAA 9/28/2000 18:34'!storeOnServerInnards	"Save to disk as an Export Segment.  Then put that file on the server I came from, as a new version.  Version is literal piece of file name.  Mime encoded and http encoded."	| servers resp newName local primaryServerDirectory serverVersionPair localDirectory localVersionPair myVersionNumber warning maxNumber gifFileName gifStream f |	"NebraskaDebug at: #savingproject add: {'beginning'}."	"Find out what version"	(servers _ self serverList) isEmpty ifTrue: [		(primaryServerDirectory _ self findAFolderToStoreProjectIn) ifNotNil: [			servers _ Array with: primaryServerDirectory.			urlList _ Array with: primaryServerDirectory realUrl, '/'.		].	] ifFalse: [		primaryServerDirectory _ servers first.	].	localDirectory _ self squeakletDirectory.	serverVersionPair _ self class mostRecent: self name onServer: primaryServerDirectory.	localVersionPair _ self class mostRecent: self name onServer: localDirectory.	maxNumber _ myVersionNumber _ self currentVersionNumber.	ProgressNotification signal: '2:versionsDetected'.	"NebraskaDebug at: #savingproject add: {'versions detected'}."	warning _ ''.	myVersionNumber < serverVersionPair second ifTrue: [		warning _ warning,'\There are newer version(s) on the server'.		maxNumber _ maxNumber max: serverVersionPair second.	].	myVersionNumber < localVersionPair second ifTrue: [		warning _ warning,'\There are newer version(s) in the local directory'.		maxNumber _ maxNumber max: localVersionPair second.	].	warning isEmpty ifFalse: [		myVersionNumber = 0 ifTrue: [			warning _ warning,'\THIS PROJECT HAS NEVER BEEN SAVED'		].		warning _ 'WARNING', '\Project: ',self name,warning.		resp _ (PopUpMenu labels: 'Store anyway\Cancel' withCRs) startUpWithCaption: 			(warning, '\Please cancel, rename this project, and see what is there.') withCRs.			resp ~= 1 ifTrue: [^ nil]	].	version _ self bumpVersion: maxNumber.	"write locally - now zipped automatically"	newName _ self versionedFileName.	lastSavedAtSeconds _ Time totalSeconds.	self exportSegmentFileName: newName directory: localDirectory.			"NebraskaDebug at: #savingproject add: {'local save complete'}."	ProgressNotification signal: '4:localSaveComplete'.	"3 is deep in export logic"	primaryServerDirectory ifNotNil: [		local _ localDirectory oldFileNamed: newName.		resp _ primaryServerDirectory putFile: local named: newName retry: false.		local close.		resp == true ifFalse: [			self inform: 'the primary server of this project seems to be down (',								resp printString,')'. 			^ self		].		gifFileName _ self name,'.gif'.		gifStream _ primaryServerDirectory fileNamed: gifFileName.		gifStream dataIsValid.		thumbnail unhibernate.		f _ thumbnail colorReduced.  "minimize depth"		f depth > 8 ifTrue: [			f _ thumbnail asFormOfDepth: 8		].		GIFReadWriter putForm: f onStream: gifStream.		primaryServerDirectory sleep.	"if ftp, close the connection"	].	"NebraskaDebug at: #savingproject add: {'remote save complete'}."	ProgressNotification signal: '9999 save complete'.	"Later, store with same name on secondary servers.  Still can be race conditions.  All machines will go through the server list in the same order."	"2 to: servers size do: [:aServer | aServer putFile: local named: newName]."! !!Project methodsFor: 'object fileIn' stamp: 'RAA 9/28/2000 18:37'!convertdwctppdvtngpiivuel0: varDict dwctppdvtngpiivuell0: smartRefStrm	"These variables are automatically stored into the new instance #('dependents' 'world' 'changeSet' 'transcript' 'parentProject' 'previousProject' 'displayDepth' 'viewSize' 'thumbnail' 'nextProject' 'guards' 'projectParameters' 'isolatedHead' 'inForce' 'version' 'urlList' 'environment' 'lastDirectory').	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."	"New variables: #('lastSavedAtSeconds')  If a non-nil value is needed, please assign it."! !KidNavigationMorph removeSelector: #doQuit!"Postscript:Make a preference for checking for unsaved projects."Preferences 	addPreference: #checkForUnsavedProjects 	category: #general 	default: true	balloonHelp: 'If enabled, then ask before quitting Squeak if there are unsaved projects (the definition of unsaved is fuzzy at the moment and this preference may not be honored everywhere)'.!