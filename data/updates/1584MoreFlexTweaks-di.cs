'From Squeak2.6 of 11 October 1999 [latest update: #1575] on 28 October 1999 at 9:56:42 am'!"Change Set:		MoreFlexTweaksDate:			27 October 1999Author:			Dan IngallsReduces the step rate of ThumbnailMorphs from 20/sec to 4/sec.Allows SystemWindows to be flexed, and they collapse flexed as well.Causes scaling of flexMorphs to stick around multiples of 0.25 if shrinking and 0.5 if growing.Tweaks transformationMorphs to yield faithful 90-degree rotations."!Canvas subclass: #FormCanvas	instanceVariableNames: 'origin clipRect shadowDrawing form port shadowStipple '	classVariableNames: 'AA '	poolDictionaries: ''	category: 'Morphic-Support'!MorphicModel subclass: #SystemWindow	instanceVariableNames: 'labelString stripes label closeBox collapseBox activeOnlyOnTop paneMorphs paneRects collapsedFrame fullFrame isCollapsed menuBox mustNotClose labelWidgetAllowance updatablePanes '	classVariableNames: 'TopWindow '	poolDictionaries: ''	category: 'Morphic-Windows'!!FormCanvas methodsFor: 'drawing-support' stamp: 'di 10/28/1999 09:17'!transformBy: aDisplayTransform clippingTo: aClipRect during: aBlock	 smoothing: cellSize	"Note: This method has been originally copied from TransformationMorph."	| innerRect patchRect sourceQuad warp start subCanvas |	(aDisplayTransform isPureTranslation) ifTrue:[		^aBlock value: (self copyOffset: aDisplayTransform offset negated truncated							clipRect: aClipRect)	].	"Prepare an appropriate warp from patch to innerRect"	innerRect _ aClipRect.	patchRect _ aDisplayTransform globalBoundsToLocal: innerRect.	sourceQuad _ (aDisplayTransform sourceQuadFor: innerRect)					collect: [:p | p - patchRect topLeft].	warp _ self warpFrom: sourceQuad toRect: innerRect.	warp cellSize: cellSize.	"Render the submorphs visible in the clipping rectangle, as patchForm"	start _ (self depth = 1 and: [self isShadowDrawing not])		"If this is true B&W, then we need a first pass for erasure."		ifTrue: [1] ifFalse: [2].	start to: 2 do:		[:i | "If i=1 we first make a shadow and erase it for opaque whites in B&W"		subCanvas _ FormCanvas extent: patchRect extent depth: self depth.		i=1	ifTrue: [subCanvas setShadowDrawing; stipple: Color black.					warp combinationRule: Form erase]			ifFalse: [self isShadowDrawing ifTrue:					[subCanvas setShadowDrawing; stipple: self stipple].					warp combinationRule: Form paint].		subCanvas translateBy: patchRect topLeft negated			during:[:offsetCanvas| aBlock value: offsetCanvas].		warp sourceForm: subCanvas form; warpBits.		warp sourceForm: nil.  subCanvas _ nil "release space for next loop"]! !!MenuItemMorph methodsFor: 'events' stamp: 'di 10/28/1999 09:56'!mouseUp: evt	"Handle a mouse up event. Menu items get activated when the mouse is over them."	| mouseInMe |	mouseInMe _ self containsPoint: evt cursorPoint.	self deselectItem.	self isInMenu		ifTrue:			[(mouseInMe and: [self selector = #toggleStayUp:])				ifFalse: [owner deleteIfPopUp].			subMenu ifNil:				[mouseInMe ifTrue:					[evt hand world displayWorld.					owner invokeItem: self event: evt]]]		ifFalse:  			[self invokeWithEvent: evt]						! !!MenuMorph methodsFor: 'menu' stamp: 'di 10/28/1999 09:50'!toggleStayUp: evt	"Toggle my 'stayUp' flag and adjust the menu item to reflect its new state."	self items do: [:item |		item selector = #toggleStayUp: ifTrue:			[stayUp _ stayUp not.				 stayUp				ifTrue: [item contents: 'dismiss this menu']				ifFalse: [item contents: 'keep this menu up']]].	stayUp ifFalse: [self topRendererOrSelf delete].! !!MenuMorph methodsFor: 'control' stamp: 'di 10/28/1999 09:50'!deleteIfPopUp	"Remove this menu from the screen if stayUp is not true. If it is a submenu, also remove its owning menu."	stayUp ifFalse: [self topRendererOrSelf delete].	(popUpOwner notNil and: [popUpOwner isKindOf: MenuItemMorph]) ifTrue: [		popUpOwner isSelected: false.		(popUpOwner owner isKindOf: MenuMorph)			ifTrue: [popUpOwner owner deleteIfPopUp]].! !!MorphicTransform methodsFor: 'transformations' stamp: 'di 10/28/1999 09:10'!invert: aPoint	"Transform the given point from local to global coordinates."	| p3 p2 |	self isPureTranslation ifTrue: [^ aPoint - offset].	p3 _  aPoint * scale.	p2 _ ((p3 x * angle cos) + (p3 y * angle sin))		@ ((p3 y * angle cos) - (p3 x * angle sin)).	^ (p2 - offset)! !!MorphicTransform methodsFor: 'transformations' stamp: 'di 10/28/1999 09:05'!transform: aPoint	"Transform the given point from global to local coordinates."	| p2 p3 |	self isPureTranslation ifTrue: [^ aPoint + offset].	p2 _ aPoint + offset.	p3 _ (((p2 x * angle cos) - (p2 y * angle sin))		@ ((p2 y * angle cos) + (p2 x * angle sin)))			/ scale.	^ p3! !!SystemWindow methodsFor: 'geometry' stamp: 'di 10/27/1999 23:14'!extent: newExtent	| inner labelRect |	isCollapsed		ifTrue: [super extent: newExtent x @ (self labelHeight + 2)]		ifFalse: [super extent: newExtent].	inner _ self innerBounds.	labelRect _ self labelRect.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	self setStripeColorsFrom: self paneColorToUse.	closeBox ifNotNil:		[closeBox align: closeBox topLeft with: inner topLeft + (4@0)].	menuBox ifNotNil:		[menuBox align: menuBox topLeft with: (inner topLeft + (19@1))].	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label fitContents; setWidth: (label width min: bounds width - self labelWidgetAllowance).	label align: label bounds topCenter with: inner topCenter.	isCollapsed		ifTrue: [(owner isKindOf: TransformationMorph)				ifTrue: [collapsedFrame _ ((owner transform localPointToGlobal: bounds topLeft)											extent: bounds extent)]				ifFalse: [collapsedFrame _ self bounds]]		ifFalse: [self setBoundsOfPaneMorphs.				fullFrame _ self bounds].! !!SystemWindow methodsFor: 'open/close' stamp: 'di 10/27/1999 23:25'!delete	| thisWorld sketchEditor aPaintBox |	self mustNotClose ifTrue: [^ self].	model okToChange ifFalse: [^ self].	thisWorld _ self world.	sketchEditor _ self extantSketchEditor.	(owner isKindOf: TransformationMorph)		ifTrue: [owner delete]		ifFalse: [super delete].	model windowIsClosing; release.	model _ nil.	sketchEditor ifNotNil:		[sketchEditor deleteSelfAndSubordinates.		thisWorld notNil ifTrue:			[(aPaintBox _ thisWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]]].			SystemWindow noteTopWindowIn: thisWorld.! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 10/27/1999 23:06'!collapseOrExpand	isCollapsed	ifTrue:		["Expand -- restore panes to morphics structure"		isCollapsed _ false.		super bounds: fullFrame.		paneMorphs reverseDo: [:m | 			self addMorph: m.			self world startSteppingSubmorphsOf: m].		self activate "-- mainly for findWindow"]	ifFalse:		["Collapse -- remove panes from morphics structure"		isCollapsed _ true.		paneMorphs do: [:m | m delete; releaseCachedState].		model modelSleep.		collapsedFrame ifNil:			[collapsedFrame _ (RealEstateAgent assignCollapsePointFor: self)						 extent: (label width + self labelWidgetAllowance) @ (self labelHeight + 2)].		(owner isKindOf: TransformationMorph)			ifTrue: [super bounds: ((owner transform globalPointToLocal: collapsedFrame topLeft)											extent: collapsedFrame extent)]			ifFalse: [super bounds: collapsedFrame]].! !!ThumbnailMorph methodsFor: 'as yet unclassified' stamp: 'di 10/27/1999 20:11'!stepTime 	^ 250! !!TransformationMorph methodsFor: 'accessing' stamp: 'di 10/27/1999 21:33'!scaleToFit: anExtent	| scaleFactor |	scaleFactor _ anExtent r / submorphs first fullBounds extent r.	scaleFactor _ scaleFactor < 1.0		ifTrue: [scaleFactor detentBy: 0.05 atMultiplesOf: 0.25 snap: false]		ifFalse: [scaleFactor detentBy: 0.1 atMultiplesOf: 0.5 snap: false].	self scale: ((scaleFactor min: 8.0) max: 0.1).! !