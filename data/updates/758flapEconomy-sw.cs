'From Squeak 2.3 of January 14, 1999 on 25 March 1999 at 11:59:12 am'!"Change Set:		flapEconomy-swDate:			25 March 1999Author:			Scott WallaceWhen user turns off the useGlobalFlaps preference, put up a dialog offering her the opportunity to clobber the actual flap structures.  If she chooses to preserve the existing structures, flaps will come back much faster when they are reenfranchised, and also they will reflect any modifications she made to them.  If she chooses to clobber the existing structures, it will save considerable space in memory, but if she should subsequently choose to use flaps again, it will take time to reinstantiate them afresh, and the new flaps will not reflect any changes she may have earlier made to the old ones.Also in this change set: the action for toggling an item in the Preferences editor is improved -- the color of the 'true' or 'false' changes when you mouse down on it, but no actual change is made until the mouse comes back UP while the cursor is in the same item.Also included is a minor refactoring of the code for programatically creating the default left flap, eliminating hard-coded positions, and a couple of other flap-related cleanups."!!FlapTab methodsFor: 'menu' stamp: 'sw 3/25/1999 10:52'!destroyFlap	| reply request |	request _ self isGlobal		ifTrue:			['Caution -- this would permanentlyremove this flap, so it would no longer beavailable in this or any other project.Do you really want to this? ']		ifFalse:			['Caution -- this is permanent!!  Doyou really want to do this? '].	reply _ self confirm: request orCancel: [^ self].	reply ifTrue:		[self isGlobal			ifTrue:				[Utilities removeFlapTab: self keepInList: false]			ifFalse:				[referent isInWorld ifTrue: [referent delete].				self delete]]! !!PasteUpMorph methodsFor: 'layout' stamp: 'sw 3/24/1999 14:11'!addCenteredAtBottom: aMorph offset: anOffset	"Add aMorph beneath all other morphs currently in the receiver, centered horizontally, with the vertical offset from the bottom of the previous morph given by anOffset"	| curBot |	curBot _ 0.	submorphs do: [:m | curBot _ curBot max: m bottom].	self addMorphBack: aMorph.	aMorph position: ((self center x - (aMorph width // 2)) @ (curBot + anOffset))! !!Preferences class methodsFor: 'preferences dictionary' stamp: 'sw 3/25/1999 11:13'!noteThatFlag: prefSymbol justChangedTo: aBoolean	"Provides a hook so that a user's toggling of a preference might precipitate some immediate action"	| keep |	(prefSymbol == #useGlobalFlaps) ifTrue:		[aBoolean			ifFalse:		"Turning off use of flaps"				[keep _ self confirm:'Do you want to preserve the existingglobal flaps for future use?'.				Utilities globalFlapTabsIfAny do:					[:aFlapTab | Utilities removeFlapTab: aFlapTab keepInList: keep.					aFlapTab isInWorld ifTrue: [self halt]].				keep ifFalse: [Utilities clobberFlapTabList]]			ifTrue:		"Turning on use of flaps"				[Smalltalk isMorphic ifTrue:					[self currentWorld addGlobalFlaps]]]! !!UpdatingBooleanStringMorph methodsFor: 'all' stamp: 'sw 3/25/1999 10:27'!mouseDown: evt	self flag: #hottest.	self color: Color red	"self contentsClipped: (target perform: getSelector) not asString.	self informTarget"! !!UpdatingBooleanStringMorph methodsFor: 'all' stamp: 'sw 3/25/1999 10:27'!mouseUp: evt	(bounds containsPoint: evt cursorPoint)		ifTrue:			[self contentsClipped: (target perform: getSelector) not asString.			self informTarget]		ifFalse:			[self beep].	self color: Color black! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/25/1999 11:23'!addGlobalFlap	| aMenu reply aFlapTab |	aMenu _ MVCMenuMorph entitled: 'flaps'.	#(left right top bottom) do:		[:sym | aMenu add: sym action: sym].	reply _ aMenu invokeAt: self currentHand position in: self currentWorld.	reply ifNotNil:		[aFlapTab _ self newFlapTitled: 'Flap' onEdge: reply.		self globalFlapTabs add: aFlapTab.	self currentWorld addGlobalFlaps]	! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/24/1999 17:32'!addProjectNavigationButtonsTo: aMorph	"Add prev, next, and go-to buttons at the top of aMorph"	| aButton aFont |	aButton _ SimpleButtonMorph new target: Project.	aButton actionSelector: #returnToPreviousProject.	aFont _ StrikeFont familyName: #ComicBold size: 24.	aButton label: '<' font: aFont; borderWidth: 0.	aButton firstSubmorph color: Color red lighter.	aButton beTransparent.	aButton position: 30 @ 12.	aButton setBalloonText: 'previous project'.	aMorph addMorph: aButton.	aButton _ aButton fullCopy.	aButton actionSelector: #advanceToNextProject.	aButton label: '>' font: aFont; borderWidth: 0.	aButton firstSubmorph color: Color red lighter.	aButton position: 150 @ 14.	aButton setBalloonText: 'next project'.	aMorph addMorph: aButton.	aButton _ aButton fullCopy actWhen: #buttonDown.	aButton actionSelector: #jumpToProject; target: self currentHand.	aButton label: 'Go...' font: (StrikeFont familyName: #ComicBold size: 19); borderWidth: 0.	aButton position: 78 @ 16.	aButton firstSubmorph color: Color red lighter.	aButton setBalloonText: 'go directly to a project'.	aMorph addMorph: aButton! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/24/1999 17:57'!addSystemStatusLinesTo: aPlayfield	"Add three lines of system status info beneath the other items on aPlayfield"	| aString |	aString _ UpdatingStringMorph new target: Smalltalk.	aString useStringFormat; color: Color blue; stepFrequency: 3000; getSelector: #version.	aString setBalloonText: 'Indicates the official Squeak release code of the current image.'.	aPlayfield addCenteredAtBottom: aString offset: 8.	aString left: (aPlayfield left + 6).	aString _ aString fullCopy getSelector: #lastUpdateString.	aString setBalloonText: 'Indicates the update number of the last official update present in the image.'.	aPlayfield addCenteredAtBottom: aString offset: 6.	aString left: (aPlayfield left + 6).	aString _ aString fullCopy getSelector: #currentChangeSetString.	aString setBalloonText: 'Indicates the name of the current change set.'.	aPlayfield addCenteredAtBottom: aString offset: 6.	aString left: (aPlayfield left + 6)! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/25/1999 11:46'!globalFlapTabsIfAny	"Answer a list of the global flap tabs, but it they don't exist, just answer an empty list"	^ FlapTabs copy ifNil: [Array new]! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/25/1999 11:44'!removeFlapTab: aFlapTab keepInList: aBoolean	(FlapTabs ~~ nil and: [FlapTabs includes: aFlapTab])		ifTrue:			[aBoolean ifFalse: [FlapTabs remove: aFlapTab].			aFlapTab referent delete.			aFlapTab delete]! !!Utilities class methodsFor: 'flaps' stamp: 'sw 3/24/1999 17:58'!standardLeftFlap	| aFlap aFlapTab aButton aClock buttonColor anOffset |	aFlap _ PasteUpMorph newSticky borderWidth: 0.	aFlapTab _ FlapTab new referent: aFlap.	aFlapTab assumeString: 'Squeak' font: (ScriptingSystem fontForScriptorButtons) orientation: #vertical color: Color brown lighter lighter.	aFlapTab edgeToAdhereTo: #left; inboard: false.	aFlapTab setToPopOutOnDragOver: true.	aFlapTab setToPopOutOnMouseOver: true.	aFlapTab position: (0 @ ((Display height - aFlapTab height) // 2)).	aFlap setProperty: #flap toValue: true.	aFlap color: (Color brown muchLighter lighter "alpha: 0.3").	aFlap extent: 200 @ self currentWorld height.	self addProjectNavigationButtonsTo: aFlap.	anOffset _ 16.	buttonColor _ Color green muchLighter.	aButton _ SimpleButtonMorph new target: Smalltalk.	aButton color: buttonColor.	aButton actionSelector: #saveSession.	aButton setBalloonText: 'Make a complete snapshot of the current state of the image onto disk.'.	aButton label: 'snapshot'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #fileOutChanges.	aButton label: 'file out changes'.	aButton setBalloonText: 'File out the current change set to disk.'.	aFlap addMorph: aButton.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #browseRecentSubmissions.	aButton setBalloonText: 'Open a message-list browser showing the 20 most-recently-submitted methods.'.	aButton label: 'recent submissions'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aClock _ ClockMorph newSticky.	aClock color: Color red.	aClock showSeconds: false.	aClock font: (TextStyle default fontAt: 3).	aClock setBalloonText: 'The time of day.  If you prefer to see seconds, check out my menu.'.	aFlap addCenteredAtBottom: aClock offset: anOffset.	aButton _ aButton fullCopy target: Preferences.	aButton actionSelector: #openPreferencesInspector.	aButton setBalloonText: 'Open a window allowing me to view and change various Preferences.'.	aButton label: 'preferences...'.	aButton color: Color cyan muchLighter.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Utilities.	aButton actionSelector: #updateFromServer.	aButton label: 'load code updates'.	aButton setBalloonText: 'Check the Squeak server for any new code updates, and load any that are found.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	self addSystemStatusLinesTo: aFlap.	aButton _ SimpleButtonMorph new target: self.	aButton actionSelector: #explainFlaps; color: buttonColor.	aButton label: 'About flaps...'.	aButton setBalloonText: 'Click here to get a window of information about flaps.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ aButton fullCopy target: Preferences; actionSelector: #editAnnotations;		label: 'Annotations...'.	aButton setBalloonText: 'Click here to get a little window that will allow you to specify which types of annotations, in which order, you wish to see in the annotation pane of method-list browsrs.'.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton _ TrashCanMorph newSticky.	aFlap addCenteredAtBottom: aButton offset: anOffset.	aButton startStepping.	^ aFlapTab! !Utilities class removeSelector: #removeFlapTab:!