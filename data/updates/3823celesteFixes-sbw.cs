'From Squeak3.1alpha of 5 February 2001 [latest update: #3834] on 14 March 2001 at 11:36:26 am'!"Change Set:		celesteFixesDate:			14 March 2001Author:			Steve WesselsAttached please find 2 change sets that address a known bug and make some enhancements to Celeste.Ê These changes were tested against Squeak V3.1 by myself, Lex Spoon and Mike Rutenberg. These changes include: 'fix multicolumn morph' fixes a bug in the highlighting code.Ê Celeste uses this in Squeak.'celeste fixes and enhancements' Added an outbox queue status box to the optional status pane row.Ê This is very handy if you are prone to forgetting to tell Celeste to actually send your messages. The attachments indicator is now optional.Ê This is controlled by a new preference.Ê See #celesteShowsAttachmentsFlag.Ê By default it is OFF.Ê The attachments flag handles the big performance hit people have been complaining about in V3.0.Ê This 'solution' provides performance relief at least until we get around to enhanceing the e-mail database itself. The maximum message count constant is now a whole lot larger.Ê See the Celeste class method #maxMessageCountUpperBound.Ê You can still change the maximum viewed message count from the categories menu.Ê This is the upper limit constant defined in Celeste.Ê It is now 100000; up from 500. Ê- Steve Wessels "!!Celeste methodsFor: 'categories pane' stamp: 'sbw 2/3/2001 08:21'!setCategory: newCategory 	"Change the currently selected category. We must also compute the table  	of contents and message list for the new category."	| messageCount |	currentCategory _ newCategory.	newCategory isNil		ifTrue: [currentMessages _ currentTOC _ currentMsgID _ nil.			self class includeStatusPane				ifTrue: [status _ nil]]		ifFalse: [currentMessages _ self filteredMessagesIn: newCategory.			messageCount _ currentMessages size.			messageCount > self maxMessagesToDisplay				ifTrue: [self messages: self maxMessagesToDisplay from: messageCount.					currentMessages _ currentMessages copyLast: self maxMessagesToDisplay]				ifFalse: [self messages: messageCount from: messageCount].			self cacheTOC].	self changed: #category.	self changed: #tocEntryList.	self changed: #tocEntry.	self changed: #messageText.	self changed: #status.	self changed: #outBoxStatus! !!Celeste methodsFor: 'table of contents pane' stamp: 'sbw 2/3/2001 08:21'!updateTOC	"Update the table of contents after a moving, removing, or deleting a 	message. Select a message near the removed message in the table of 	contents if possible."	"remember the currently selected message"	| savedMsgID |	savedMsgID _ currentMsgID.	"update the TOC listing"	currentMsgID _ nil.	self setCategory: currentCategory.	"update currentMessages, currentTOC"	"try to select the previously selected message; if impossible, select the 	first message"	currentMessages isEmptyOrNil		ifFalse: [(currentMessages includes: savedMsgID)				ifTrue: [currentMsgID _ savedMsgID]				ifFalse: [currentMsgID _ currentMessages first]].	"NB: self changed: #tocEntryList is already done above by setCategory: 	and can be slow"	self changed: #tocEntry.	self changed: #messageText.	self changed: #outBoxStatus! !!Celeste methodsFor: 'other' stamp: 'sbw 2/5/2001 21:36'!changeMaxMessageCount	| countString count |	countString _ FillInTheBlank request: 'Maximum number of messages displayed?' initialAnswer: self class messageCountLimit printString.	countString isEmpty		ifTrue: [^ self].	count _ Integer				readFrom: (ReadStream on: countString).	count _ count max: 1.	count _ count min: self class maxMessageCountUpperBound.	"Arbitrary. We could calculate the real upper bound."	self class messageCountLimit: count.	self setCategory: currentCategory! !!Celeste methodsFor: 'other' stamp: 'sbw 2/3/2001 08:20'!outBoxStatus	| outgoing |	outgoing _ mailDB messagesIn: '.tosend.'.	outgoing isEmpty		ifTrue: [^ 'no mail to be sent'].	^ 'messages in queue: ' , outgoing size printString! !!Celeste methodsFor: 'sending mail' stamp: 'sbw 2/3/2001 08:20'!PROTOqueueMessageWithText: aStringOrText 	"Queue a message to be sent later. The message is added to the database 	and filed in the '.tosend.' category."	| messageText id |	messageText _ 'X-Mailer: ' , Celeste versionString , String cr , 'Date: ' , MailMessage dateStampNow , String cr.	messageText _ messageText , aStringOrText asString.	self requiredCategory: '.tosend.'.	"queue the message"	id _ mailDB				addNewMessage: (MailMessage from: messageText).	mailDB file: id inCategory: '.tosend.'.	self category = '.tosend.'		ifTrue: [self updateTOC].	self changed: #outBoxStatus.	^ id! !!Celeste methodsFor: 'sending mail' stamp: 'sbw 2/3/2001 08:20'!queueMessageWithText: aStringOrText 	"Queue a message to be sent later. The message is added to the database  	and filed in the '.tosend.' category."	| messageText id |	messageText _ 'X-Mailer: ' , Celeste versionString , String cr , 'Date: ' , MailMessage dateStampNow , ' ' , self timeZoneString , ' ' , String cr.	messageText _ messageText , aStringOrText asString.	self requiredCategory: '.tosend.'.	"queue the message"	id _ mailDB				addNewMessage: (MailMessage from: messageText).	mailDB file: id inCategory: '.tosend.'.	self category = '.tosend.'		ifTrue: [self updateTOC].	self changed: #outBoxStatus! !!Celeste methodsFor: 'sending mail' stamp: 'sbw 2/3/2001 08:21'!sendQueuedMail	"Post queued messages to the SMTP server."	| outgoing sender n message recipients socket |	outgoing _ mailDB messagesIn: '.tosend.'.	outgoing isEmpty		ifTrue: [^ self inform: 'no mail to be sent'].	self requiredCategory: '.sent.'.	self preSendAuthentication.	sender _ (MailAddressParser addressesIn: self class userName) first.	[socket _ SMTPSocket usingServer: Celeste smtpServer]		ifError: [:a :b | self error: 'error opening connection to mail server'].	'sending ' , outgoing size printString , ' messages...'		displayProgressAt: Sensor mousePoint		from: 1		to: outgoing size		during: [:progressBar | 			n _ 0.			outgoing				do: [:id | 					progressBar value: (n _ n + 1).					message _ mailDB getMessage: id.					recipients _ Set new.					recipients						addAll: (MailAddressParser addressesIn: message to).					recipients						addAll: (MailAddressParser addressesIn: message cc).					[socket						mailFrom: sender						to: recipients						text: message text.					"send this one message on the stream"					mailDB remove: id fromCategory: '.tosend.'.					mailDB file: id inCategory: '.sent.']						ifError: [:a :b | self error: 'error posting mail']]].	socket quit; close.	mailDB saveDB.	self category = '.tosend.' | (self category = '.sent.')		ifTrue: [self updateTOC].	self changed: #outBoxStatus! !!Celeste class methodsFor: 'user preferences' stamp: 'sbw 2/5/2001 21:36'!maxMessageCountUpperBound	"Something arbitrary..."	^ 100000! !!Celeste class methodsFor: 'options' stamp: 'sbw 2/5/2001 22:07'!showAttachmentsFlag	^ Preferences celesteShowsAttachmentsFlag! !!Celeste class methodsFor: 'enhancements documentation' stamp: 'sbw 2/5/2001 22:06'!postLoadOperationsForEnhancements	"Celeste postLoadOperationsForEnhancements."	Preferences addPreferenceForOptionalCelesteStatusPane.	Preferences addPreferenceForCelesteShowingAttachmentsFlag.	true		ifFalse: [Celeste postReadMeEnhancements]! !!Celeste class methodsFor: 'enhancements documentation' stamp: 'sbw 3/5/2001 14:07'!readMeEnhancementsString	^ 'These enhancements are a joint effort between Lex Spoon and Steve Wessels.	1. The custom menu button always presents a menu; matching filters are	   listed at the top of the the menu.	2. The auto-move button is removed.  Instead, the regular TOC menu will	   give the option of an automove.	3. Huge message lists are not shown, but a menu item is added to forcibly	   show all messages.  You can also specify the maximum number to display.	4. The From Filter is switched to a Participant Filter.	5. The table of contents pane uses a new multi-column list morph, which makes	   for nicer looking lists.	6. Messages that have attachments are indicated with @.  	7. If attachments are jpeg or gif then open view will correctly process the image,	   and save will suggest a proper extension for the file name.	8. The delete button is back.	9. The morphic panes use the new fixed pane scheme (layouts).	10. The status pane is displayed depending on an option in Preferences.  Default is	    to not show the status pane.	11. Menus use checkbox style for some of the options:	    (suppress header, and leave messages on server).	12.	Added an outbox queue status to the optional status pane row.	13. The attachments indicator is now optional.  This is now controlled by        a preference.  See #celesteShowsAttachmentsFlag.  By default it is OFF.	14. The maximum message count is now a whole lot larger.  See the Celeste class         method #maxMessageCountUpperBound.'! !!Celeste class methodsFor: 'build-morphic' stamp: 'sbw 2/3/2001 08:18'!addMorphicStatusPaneTo: row from: views at: innerFractions plus: verticalOffset 	| delta statusFractions outputBoxFractions |	delta _ 20.	statusFractions _ innerFractions withRight: 0.5.	outputBoxFractions _ (statusFractions withLeft: 0.5)				withRight: 1.	row		addMorph: (views at: #status)		fullFrame: (LayoutFrame				fractions: statusFractions				offsets: (0 @ verticalOffset corner: 0 @ (verticalOffset + delta))).	row		addMorph: (views at: #outBoxStatus)		fullFrame: (LayoutFrame				fractions: outputBoxFractions				offsets: (0 @ verticalOffset corner: 0 @ (verticalOffset + delta))).	^ verticalOffset + delta! !!Celeste class methodsFor: 'build-morphic' stamp: 'sbw 2/3/2001 08:18'!buildMorphicOutBoxStatusPaneFor: model 	^ PluggableTextMorph new		on: model		text: #outBoxStatus		accept: nil		readSelection: nil		menu: nil! !!Celeste class methodsFor: 'build-morphic' stamp: 'sbw 2/3/2001 08:18'!buildMorphicViewsFor: model 	"Answer a dictionary of window panes for the Celeste user interface."	| listFont views v |	listFont _ StrikeFont allSubInstances				detect: [:f | (f name beginsWith: 'CourierFixed')						and: [f height = 11]]				ifNone: [TextStyle defaultFont].	views _ Dictionary new.	v _ self buildMorphicCategoryListFor: model.	views at: #categoryList put: v.	v _ self buildMorphicTocEntryListFor: model.	v font: listFont.	views at: #tocEntryList put: v.	v _ self buildMorphicMessageTextPaneFor: model.	v borderWidth: 1.	model messageTextView: v.	views at: #messageText put: v.	v _ self buildMorphicStatusPaneFor: model.	v borderWidth: 1.	views at: #status put: v.	v _ self buildMorphicOutBoxStatusPaneFor: model.	v borderWidth: 1.	views at: #outBoxStatus put: v.	^ views! !!IndexFileEntry methodsFor: 'printing' stamp: 'sbw 2/5/2001 21:59'!computeTOCStringAsColumns	"Answer a string for the table of contents."	"IndexFileEntry allInstancesDo: [: e | e flushTOCCache]"	| fromFieldSize array attachFlag |	fromFieldSize _ 18.	attachFlag _ Celeste showAttachmentsFlag		ifTrue: [self getMessage body isMultipart]		ifFalse: [false].	array _ Array new: 5.	array at: 1 put: self dateString.	array		at: 2		put: (self fromStringLimit: fromFieldSize).	array at: 3 put: subject decodeMimeHeader.	array at: 4 put: self textLength asStringWithCommas.	array at: 5 put: attachFlag.	^ array! !!PluggableMultiColumnListMorph methodsFor: 'selection' stamp: 'sbw 2/5/2001 11:12'!highlightSelection	| highlightColor columnLength localIndex m properSelectedIndex totalIndex |	highlightColor _ Color red.	"<-- Change the highlight color here."	selectedMorph		ifNotNil: [selectedMorph color: highlightColor;				 changed.			totalIndex _ scroller submorphs asArray						findFirst: [:mp | mp contents = selectedMorph contents].			columnLength _ lists first size.			properSelectedIndex _ totalIndex \\ columnLength.			properSelectedIndex = 0 ifTrue: [properSelectedIndex _ columnLength].			selectedIndex = properSelectedIndex				ifFalse: [selectedIndex _ properSelectedIndex].			"Highlight the others in the same row."			2				to: lists size				do: [:columnIndex | 					localIndex _ selectedIndex + (columnLength * (columnIndex - 1)).					m _ scroller submorphs asArray at: localIndex.					m color: highlightColor;						 changed]]! !!PluggableMultiColumnListMorph methodsFor: 'selection' stamp: 'sbw 2/5/2001 11:24'!unhighlightSelection	| unhighlightColor columnLength localIndex m previousSelectedIndex totalIndex |	unhighlightColor _ Color black.	selectedMorph		ifNotNil: [selectedMorph color: unhighlightColor;				 changed.			totalIndex _ scroller submorphs						findFirst: [:mp | mp contents = selectedMorph contents].			totalIndex = 0 ifFalse: [			columnLength _ lists first size.			previousSelectedIndex _ totalIndex \\ columnLength.			previousSelectedIndex = 0				ifTrue: [previousSelectedIndex _ columnLength].			2				to: lists size				do: [:columnIndex | 					localIndex _ previousSelectedIndex + (columnLength * (columnIndex - 1)).					localIndex = 0						ifFalse: [m _ scroller submorphs asArray at: localIndex.							m color: unhighlightColor;								 changed]]]]!]style[(20 3 76 4 16 3 5 9 13 14 13 8 16 19 10 3 8 29 4 2 2 12 13 15 10 19 12 3 5 16 21 3 10 4 12 5 21 3 1 14 21 3 12 6 1 9 5 15 13 8 10 3 21 4 12 4 11 3 1 9 10 3 1 17 1 3 8 23 10 9 1 8 16 22)f1b,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblue;,f1,f1cblack;,f1,f1cblack;,f1,f1cblue;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblue;,f1,f1cblack;,f1,f1cblue;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1,f1cblack;,f1! !!Preferences class methodsFor: 'initialization' stamp: 'sbw 2/5/2001 22:05'!addPreferenceForCelesteShowingAttachmentsFlag	"Preferences addPreferenceForCelesteShowingAttachmentsFlag"	(FlagDictionary includesKey: #celesteShowsAttachmentsFlag)		ifFalse: [self				addPreference: #celesteShowsAttachmentsFlag				category: #general				default: false				balloonHelp: 'If true, Celeste (e-mail reader) annotates messages in it''s list that have attachments.  This is a performance hit and by default is off.'			]! !"Postscript:"Celeste postLoadOperationsForEnhancements.!