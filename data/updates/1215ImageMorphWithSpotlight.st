'From Squeak 2.4c of May 10, 1999 on 26 May 1999 at 8:07:14 am'!ImageMorph subclass: #ImageMorphWithSpotlight	instanceVariableNames: 'spotImage spotShape spotBuffer spotOn '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Demo'!!ImageMorphWithSpotlight commentStamp: 'di 5/26/1999 07:59' prior: 0!This class implements an image that appears one way or another depending upon whether it lies within a spotlight shape that moves with the cursor.  As delivered, the shape is a simple circle, the spotlighted appearance is that of a ColorForm, and the non-highlighted apperarance is a derived gray-scale form.The implementation will space-efficient if supplied with a ColorForm, because the gray-scale derived form will share the same bitmap.In general, any two images can be used -- one could be blurred, the other sharp -- and the masking form can be any shape.At some point this class should be merged somehow with ScreeningMorph.!!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/26/1999 07:51'!backgroundImage: bkgndImage spotImage: anImage spotShape: formOfDepth1	"See class comment."	spotImage _ anImage.	spotShape _ formOfDepth1.	spotBuffer _ Form extent: spotShape extent depth: spotImage depth.	super image: bkgndImage.	spotOn _ false.! !!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/24/1999 22:14'!drawOn: aCanvas	super drawOn: aCanvas.	spotOn ifTrue:		[aCanvas image: spotBuffer at: spotBuffer offset].! !!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/26/1999 08:05'!image: anImage	"The spotlight will reveal the original  form supplied	while the background form will be derived grayscale."	"See class comment."	self backgroundImage: anImage asGrayScale		spotImage: anImage		spotShape: (Form dotOfSize: 100)! !!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/24/1999 22:37'!spotChanged	self invalidRect:		((spotBuffer offset extent: spotBuffer extent) "intersect: self bounds")! !!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/24/1999 22:50'!step	| cp |	((self bounds expandBy: spotBuffer extent // 2) containsPoint: (cp _ self cursorPoint))		ifTrue:		[(cp - (spotBuffer extent // 2)) = spotBuffer offset ifTrue: [^ self].  "No change"		"Cursor has moved where its spotShape is visible"		spotOn _ true.		self spotChanged.		spotBuffer offset: cp - (spotBuffer extent // 2).		self spotChanged.		(BitBlt toForm: spotBuffer)			"clear the buffer"			fill: spotBuffer boundingBox fillColor: (Bitmap with: 0) rule: Form over;			"Clip anything outside the base form"			clipRect: (spotBuffer boundingBox				intersect: (self bounds translateBy: spotBuffer offset negated));			"Fill the spotBuffer with the spot image"			copyForm: spotImage to: self position - spotBuffer offset rule: Form over;			"Mask everything outside the spot shape to 0 (transparent)."			copyForm: spotShape to: spotShape offset negated rule: Form and				colorMap: (Bitmap with: 0 with: 16rFFFFFFFF)]		ifFalse:		[spotOn ifTrue: [self spotChanged. spotOn _ false]]! !!ImageMorphWithSpotlight methodsFor: 'all' stamp: 'di 5/24/1999 21:43'!stepTime	^ 20! !