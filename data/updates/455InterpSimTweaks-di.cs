'From Squeak 2.3 beta of Nov 25, 1998 on 5 December 1998 at 12:45:39 pm'!Interpreter subclass: #InterpreterSimulator	instanceVariableNames: 'byteCount sendCount traceOn myBitBlt displayForm filesOpen imageName messageQueue '	classVariableNames: ''	poolDictionaries: ''	category: 'Squeak-Interpreter'!!InterpreterSimulator methodsFor: 'initialization' stamp: 'di 11/23/1998 16:46'!close  "close any files that ST may have opened"	filesOpen do: [:f | f close]! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 12/3/1998 15:29'!findNewMethodInClass: class"	| cName |	traceOn ifTrue:		[cName _ (self sizeBitsOf: class) = 16r20			ifTrue: ['class ' , (self nameOfClass: (self fetchPointer: 6 ofObject: class))]			ifFalse: [(self nameOfClass: class)].		self cr; print: cName , '>>' , (self stringOf: messageSelector)].""(self stringOf: messageSelector) = 'doesNotUnderstand:' ifTrue: [self halt]."	sendCount _ sendCount + 1."	(sendCount > 1000 and: [sendCount\\10 = 0]) ifTrue:		[Transcript print: sendCount; space.		self validate].""	(sendCount > 100150) ifTrue:		[self qvalidate.		messageQueue == nil ifTrue: [messageQueue _ OrderedCollection new].		messageQueue addLast: (self stringOf: messageSelector)]."	super findNewMethodInClass: class.! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 11/23/1998 16:45'!profile: nBytecodes	"(InterpreterSimulator new openOn: 'clonex.image') profile: 60000"	Transcript clear.	byteCount _ 0.	MessageTally spyOn: [		self internalizeIPandSP.		[byteCount < nBytecodes] whileTrue: [			currentBytecode _ self fetchByte.			self dispatchOn: currentBytecode in: BytecodeTable.			byteCount _ byteCount + 1.		].		self externalizeIPandSP.	].	self close! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 11/23/1998 16:45'!profileSends: nBytecodes	"(InterpreterSimulator new openOn: 'clonex.image') profileSends: 5000"	Transcript clear.	byteCount _ 0.	MessageTally tallySendsTo: self inBlock: [		self internalizeIPandSP.		[byteCount < nBytecodes] whileTrue: [			currentBytecode _ self fetchByte.			self dispatchOn: currentBytecode in: BytecodeTable.			byteCount _ byteCount + 1.		].		self externalizeIPandSP.	] showTree: true.	self close! !!InterpreterSimulator methodsFor: 'I/O primitives' stamp: 'di 12/1/1998 00:09'!ioLowResMSecs	^ Time millisecondClockValue! !!InterpreterSimulator methodsFor: 'I/O primitives support' stamp: 'di 12/1/1998 00:05'!primitiveRelinquishProcessor	"No-op in simulator"	^ self pop: 1! !!InterpreterSimulator methodsFor: 'other primitives' stamp: 'di 11/23/1998 22:41'!primBitmapdecompressfromByteArrayat	| indexInt index baOop bmOop baSize bmSize ba bm |	indexInt _ self stackTop.	(self isIntegerValue: indexInt) ifFalse: [^ self primitiveFail].	index _ self integerValueOf: indexInt.	baOop _ self stackValue: 1.	bmOop _ self stackValue: 2.	baSize _ self stSizeOf: baOop.	bmSize _ self stSizeOf: bmOop.	ba _ ByteArray new: baSize.	bm _ Bitmap new: bmSize.	"Copy the byteArray into ba"	1 to: baSize do: [:i | ba at: i put: (self fetchByte: i-1 ofObject: baOop)].	"Decompress ba into bm"	bm decompress: bm fromByteArray: ba at: index.	"Then copy bm into the Bitmap"	1 to: bmSize do: [:i | self storeWord: i-1 ofObject: bmOop withValue: (bm at: i)].	self pop: 3! !