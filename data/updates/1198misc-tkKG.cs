'From Squeak 2.4b of April 23, 1999 on 7 May 1999 at 5:52:17 pm'!"Change Set:		misc-tkKGDate:			7 May 1999Author:			Ted KaehlerSeveral fixes:	Stephen Pope's fix to ignore the parameter to BlockContext new:.  (Because contexts lie about their sizes)	Inspectors value pane strings are limited to 5000 characters in length, so updates several times a second will go fast.	A bug in a SyntaxError feature is fixed.	Some preliminary fixes to allow Wonderlands to be stored on files as objects.  (Still not complete).	SelectorFinder has 'copy selector' menu item.	 Fixed bug in SmartRefStream when a UniClass has no class inst vars."!!Object methodsFor: 'printing' stamp: 'tk 5/7/1999 16:20'!printStringLimitedTo: limit	"Answer a String whose characters are a description of the receiver.	If you want to print without a character limit, use fullPrintString."	| limitedString |	limitedString _ String streamContents: [:s | self printOn: s] limitedTo: limit.	limitedString size < limit ifTrue: [^ limitedString].	^ limitedString , '...etc...'! !!BlockContext class methodsFor: 'as yet unclassified' stamp: 'tk 5/7/1999 16:40'!basicNew: frameSize	"Ignore the arg.  All are the same size.  They report only the size of the stack that they currently have filled in."	^ super basicNew: CompiledMethod fullFrameSize! !!BlockContext class methodsFor: 'as yet unclassified' stamp: 'tk 5/7/1999 16:42'!new: frameSize	"Ignore the arg.  All are the same size.  They report only the size of the stack that they currently have filled in."	^ super new: CompiledMethod fullFrameSize! !!Inspector methodsFor: 'accessing' stamp: 'tk 5/7/1999 16:23'!step	"Continuously update the value of the selected item"	| newText |	newText _ self contentsIsString		ifTrue: [newText _ self selection]		ifFalse: ["keep it short to reduce time to compute it"			self selection printStringLimitedTo: 5000].	newText = contents ifFalse:		[contents _ newText.		self changed: #contents]! !!MethodContext class methodsFor: 'instance creation' stamp: 'tk 5/7/1999 16:42'!basicNew: frameSize	"Ignore the arg.  All are the same size.  They report only the size of the stack that they currently have filled in."	^ super basicNew: CompiledMethod fullFrameSize! !!MethodContext class methodsFor: 'instance creation' stamp: 'tk 5/7/1999 16:43'!new: frameSize	"Ignore the arg.  All are the same size.  They report only the size of the stack that they currently have filled in."	^ super new: CompiledMethod fullFrameSize! !!SelectorBrowser methodsFor: 'as yet unclassified' stamp: 'tk 5/6/1999 13:57'!selectorMenu: aMenu	^ aMenu labels: 'sendersimplementorscopy selector to clipboard'	lines: #()	selections: #(senders implementors copyName)! !!SmartRefStream methodsFor: 'read write' stamp: 'tk 5/7/1999 15:22'!saveClassInstVars	"Install the values of the instance variables of UniClasses.  classInstVars is an array of arrays (#Player3 (Player3 class's inst var scripts) (Player3 class's inst var slotInfo) ...) "	| normal mySize list |	classInstVars _ OrderedCollection new: 100.	normal _ Object class instSize.	self uniClasesDo: [:aUniClass | 		list _ OrderedCollection new.		mySize _ aUniClass class instSize.		mySize = normal ifFalse: [			list add: aUniClass name.	"a symbol"			normal+1 to: mySize do: [:ii | 				list addLast: (aUniClass instVarAt: ii)]].		classInstVars add: list asArray].	classInstVars _ classInstVars asArray.	! !!SyntaxError methodsFor: 'initialization' stamp: 'tk 5/6/1999 13:28'!setClass: aClass code: aString debugger: aDebugger doitFlag: flag	| types printables badChar |	class _ aClass.	debugger _ aDebugger.	selector _ aClass parserClass new parseSelector: aString.	types _ Scanner classPool at: #TypeTable.	"dictionary"	printables _ '!!@#$%&*-_=+<>{}?/\,•£¢§¶ªº–—“‘”’…ÚæÚ¯˘¿«»`~`' asSet.	badChar _ aString detect: [:aChar | (types at: aChar asciiValue) == #xBinary and: [			(printables includes: aChar) not]] ifNone: [nil].	contents _ badChar 		ifNil: [aString]		ifNotNil: ['<<<This string contains a character (ascii value ', 			badChar asciiValue printString,			') that is not normally used in code>>> ', aString].	category ifNil: [category _ aClass organization categoryOfElement: selector].	category ifNil: [category _ ClassOrganizer default].	doitFlag _ flag! !!WonderlandActor class methodsFor: 'unique name creation' stamp: 'tk 5/7/1999 15:14'!isSystemDefined	^ name endsWithDigit not! !