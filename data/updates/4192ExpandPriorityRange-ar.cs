'From Squeak3.1alpha of 28 February 2001 [latest update: #4187] on 8 July 2001 at 4:43:03 pm'!"Change Set:		ExpandPriorityRange-arDate:			8 July 2001Author:			Andreas RaabThe change set expands the currently available process priority range by a factor of 10.WARNING: The change set has been manually re-arranged. Do not file out again!!"!!ProcessorScheduler class methodsFor: 'class initialization' stamp: 'ar 7/8/2001 16:39'!initialize     	SystemRockBottomPriority _ 10.	SystemBackgroundPriority _ 20.	UserBackgroundPriority _ 30.	UserSchedulingPriority _ 40.	UserInterruptPriority _ 50.	LowIOPriority _ 60.	HighIOPriority _ 70.	TimingPriority _ 80.	"ProcessorScheduler initialize."! !!ProcessorScheduler methodsFor: 'accessing' stamp: 'ar 7/8/2001 16:21'!waitingProcessesAt: aPriority	"Return the list of processes at the given priority level."	^quiescentProcessLists at: aPriority! !!ProcessorScheduler class methodsFor: 'class initialization' stamp: 'ar 7/8/2001 16:38'!expandPriorityRange	"ProcessorScheduler expandPriorityRange"	| activeProcess activePriority max allProcesses waitingList found |	activeProcess _ Processor activeProcess.	activePriority _ activeProcess priority.	"expand priority range"	max _ Processor highestPriority.	Processor highestPriority: max * 10.	activeProcess priority: Processor highestPriority. "don't you dare interrupting me"	"convert all the living processes"	allProcesses _ Process allSubInstances asArray copyWithout: activeProcess.	allProcesses sort:[:p1 :p2 | p1 priority > p2 priority].	allProcesses do:[:p|		waitingList _ Processor waitingProcessesAt: p priority.		p priority: p priority * 10.		waitingList == p suspendingList ifTrue:[			found _ (waitingList remove: p ifAbsent:[nil]) notNil.			found ifTrue:[p offList; resume]. "put back on right list"		].	].	"convert priority values"	#(HighIOPriority LowIOPriority SystemBackgroundPriority SystemRockBottomPriority TimingPriority UserBackgroundPriority UserInterruptPriority UserSchedulingPriority) do:[:priorityName|		ProcessorScheduler classPool at: priorityName			put: (ProcessorScheduler classPool at: priorityName) * 10].	"done"	activeProcess priority: activePriority * 10.	Processor yield.! !ProcessorScheduler expandPriorityRange.!ProcessorScheduler class removeSelector: #expandPriorityRange!ProcessorScheduler initialize!