'From Squeak 2.3 of January 14, 1999 on 13 February 1999 at 9:34:34 pm'!"Change Set:		MiscTweaks-arDate:			12 February 1999Author:			Andreas RaabSeveral tweaks including:* Fixes to the appearance of flash buttons* Fix to #restoreDisplay in Morphic (e.g., using the actual display extent)* Allowing morphs not to be attached to a hand when opened from the 'new morph' menu* Added Point>>normalized* Added #collapse/#expand messages to SystemWindow* Use OrderedCollectionInspector for FloatArrays"!FlashCharacterMorph subclass: #FlashButtonMorph	instanceVariableNames: 'events sounds target '	classVariableNames: 'ActionHelpText '	poolDictionaries: ''	category: 'MM-Flash-Morphs'!!DisplayScreen methodsFor: 'other' stamp: 'ar 2/11/1999 18:14'!forceToScreen	"Force the entire display area to the screen"	^self forceToScreen: self boundingBox! !!FileList methodsFor: 'file list menu' stamp: 'ar 2/13/1999 21:25'!openAsFlash	"Open a MoviePlayerMorph on the given file (must be in .movie format)."	| f player |	Smalltalk at: #Morph ifAbsent: [^ self beep].	f _ (directory readOnlyFileNamed: self fullName) binary.	player _ (FlashMorphReader on: f) processFile.	player startPlaying.	player open.! !!FlashMorphReader methodsFor: 'reading' stamp: 'ar 2/13/1999 21:25'!processFile	"Read and process the entire file"	super processFile.	player loadInitialFrame.	^player! !!FloatArray methodsFor: 'user interface' stamp: 'ar 2/13/1999 21:33'!inspect	"Open a OrderedCollectionInspector on the receiver.  Use basicInspect to get a normal (less useful) type of inspector."	OrderedCollectionInspector openOn: self withEvalPane: true! !!FloatArray methodsFor: 'user interface' stamp: 'ar 2/13/1999 21:33'!inspectWithLabel: aLabel	"Open a OrderedCollectionInspector on the receiver. Use basicInspect to get a normal (less useful) type of inspector."	OrderedCollectionInspector openOn: self withEvalPane: true withLabel: aLabel! !!Morph methodsFor: 'dropping/grabbing' stamp: 'ar 2/10/1999 05:44'!wantsToBeOpenedInWorld	"Return true if the receiver wants to be put into the World directly,	rather than allowing the user to place it (e.g., prevent attaching me	to the hand after choosing 'new morph' in the world menu)"	^false! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/12/1999 15:47'!executeActions: type	| rcvr |	(events isNil or:[events isEmpty]) ifTrue:[^self].	rcvr _ target.	rcvr ifNil:[rcvr _ self ownerSprite].	rcvr isNil ifTrue:[^self].	(events at: type ifAbsent:[^self]) do:[:action|		action sentTo: rcvr.	].! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/10/1999 04:16'!executeSounds: type	| sound |	(sounds isNil or:[sounds isEmpty]) ifTrue:[^self].	sound _ sounds at: type ifAbsent:[^self].	sound isPlaying & false ifFalse:[sound play].! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/10/1999 04:32'!mouseDown: evt	self lookEnable: #(pressLook) disable:#(overLook).	self executeSounds: #mouseDown.	self executeActions: #mouseDown.! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/10/1999 04:33'!mouseUp: evt	self lookEnable:#(overLook) disable:#(pressLook).	self executeSounds: #mouseUp.	self executeActions: #mouseUp.! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/12/1999 15:48'!on: eventName send: action	"Note: We handle more than the standard Morphic events here"	^self on: eventName sendAll:(Array with: action).! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/11/1999 03:52'!simulateMouseDown	"Invoked from a client --  simulate mouse down"	self lookEnable: #(pressLook) disable:#(overLook).	self executeSounds: #mouseDown.	self executeActions: #mouseDown.! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/11/1999 03:52'!simulateMouseEnter	"Invoked from a client -- simulate mouseEnter"	self lookEnable: #(overLook) disable:#(pressLook defaultLook).	self executeSounds: #mouseEnter.	self executeActions: #mouseEnter.! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/11/1999 03:53'!simulateMouseLeave	"Invoked from a client -- simulate mouse leave"	self lookEnable: #(defaultLook) disable:#(pressLook overLook).	self executeSounds: #mouseLeave.	self executeActions: #mouseLeave.! !!FlashButtonMorph methodsFor: 'event handling' stamp: 'ar 2/11/1999 03:53'!simulateMouseUp	"Invoked from a client -- simulate mouse up"	self lookEnable:#(overLook) disable:#(pressLook).	self executeSounds: #mouseUp.	self executeActions: #mouseUp.! !!FlashPlayerMorph methodsFor: 'accessing' stamp: 'ar 2/10/1999 03:37'!activeMorphs	^activeMorphs! !!HandMorph methodsFor: 'world menu' stamp: 'ar 2/11/1999 03:08'!buildWorldMenu	"Build the meta menu for the world."	| menu |	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'previous project' target: owner action: #goBack.	menu add: 'jump to project...' action: #jumpToProject.	menu add: 'restore display' target: self world action: #restoreDisplay.	menu addLine.	menu add: 'new morph...' action: #newMorph.	menu add: 'authoring tools...' action: #scriptingDo.	menu add: 'remote...' action: #remoteDo.	menu add: 'debug...' action: #debugDo.	menu addLine.	menu add: 'open...' action: #openWindow.	menu add: 'windows...' action: #windowsDo.	menu add: 'changes...' action: #changesDo.	menu add: 'help...' action: #helpDo.	menu add: 'do...' target: Utilities action: #offerCommonRequests.	menu addLine.	menu add: 'save' action: #saveSession.	menu add: 'save as...' action: #saveAs.	menu add: 'save and quit' action: #saveAndQuit.	menu add: 'quit' action: #quitSession.	^ menu! !!HandMorph methodsFor: 'world menu commands' stamp: 'ar 2/10/1999 05:44'!newMorphOfClass: morphClass event: evt	"Attach a new morph of the given class to the invoking hand."	| m |	m _ morphClass new.	m installModelIn: owner.  "a chance to install model pointers"	m wantsToBeOpenedInWorld		ifTrue:[self world addMorph: m]		ifFalse:[evt hand attachMorph: m].	owner startSteppingSubmorphsOf: m.! !!Point methodsFor: 'point functions' stamp: 'ar 2/11/1999 17:11'!normalized	^self / self r! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'ar 2/10/1999 04:19'!collapse	self isCollapsed ifFalse:[self collapseOrExpand]! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'ar 2/10/1999 04:20'!expand	self isCollapsed ifTrue:[self collapseOrExpand]! !!WorldMorph methodsFor: 'initialization' stamp: 'ar 2/11/1999 03:07'!restoreDisplay	Display extent = DisplayScreen actualScreenSize 		ifFalse:[	DisplayScreen startUp.				self extent: Display extent].	self fullRepaintNeeded.! !FlashMorphReader removeSelector: #processContents!