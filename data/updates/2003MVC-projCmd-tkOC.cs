'From Squeak2.8alpha of 13 January 2000 [latest update: #1995] on 20 April 2000 at 9:27:58 pm'!StandardSystemView subclass: #ProjectView	instanceVariableNames: ''	classVariableNames: 'ArmsLengthCmd '	poolDictionaries: ''	category: 'ST80-Support'!!Project methodsFor: 'accessing' stamp: 'tk 4/19/2000 17:09'!findProjectView: projectDescription	| pName dpName proj |	"In this world, find the morph that holds onto the project described by projectDescription.  projectDescription can be a project, or the name of a project.  The project may be represented by a DiskProxy.  The holder morph may be at any depth in the world.	Need to fix this if Projects have subclasses, or if a class other than ProjectViewMorph can officially hold onto a project.  (Buttons, links, etc)	If parent is an MVC world, return the ProjectController."	pName _ (projectDescription isKindOf: String) 		ifTrue: [projectDescription]		ifFalse: [projectDescription name].	self isMorphic 		ifTrue: [world allMorphsDo: [:pvm |				pvm class == ProjectViewMorph ifTrue: [					(pvm project class == Project and: 						[pvm project name = pName]) ifTrue: [^ pvm].					pvm project class == DiskProxy ifTrue: [ 						dpName _ pvm project constructorArgs first.						dpName _ (dpName findTokens: '/') last.						dpName _ (dpName findTokens: '.|') first.						dpName = pName ifTrue: [^ pvm]]]]]		ifFalse: [world scheduledControllers do: [:cont |				(cont isKindOf: ProjectController) ifTrue: [					((proj _ cont model) class == Project and: 						[proj name = pName]) ifTrue: [^ cont view].					proj class == DiskProxy ifTrue: [ 						dpName _ proj constructorArgs first.						dpName _ (dpName findTokens: '/') last.						dpName _ (dpName findTokens: '.|') first.						dpName = pName ifTrue: [^ cont view]]]]			].	^ nil! !!Project methodsFor: 'file in/out' stamp: 'tk 4/19/2000 17:13'!armsLengthCommand: aCommand	| pvm |	"Set things up so that this aCommand is sent to self as a message after jumping to the parentProject.  For things that can't be executed while in this project, such as saveAs, loadFromServer, storeOnServer.  See ProjectViewMorph step."	parentProject ifNil: [^ self inform: 'The top project can''t do that'].	pvm _ parentProject findProjectView: self.	parentProject isMorphic		ifTrue: [			pvm setProperty: #armsLengthCmd toValue: aCommand.			pvm setProperty: #wasStepping toValue: false.			pvm world startStepping: pvm]		ifFalse: [			pvm armsLengthCommand: aCommand.			].	self exit.! !!ProjectView methodsFor: 'displaying' stamp: 'tk 4/19/2000 17:15'!armsLengthCommand: aCommand	"Set up a save to be done after the subproject exits to here.  displayOn: checks it."	ArmsLengthCmd _ aCommand.! !!ProjectView methodsFor: 'displaying' stamp: 'tk 4/20/2000 21:27'!displayDeEmphasized 	| cmd |	"Display this view with emphasis off.  Check for a command that could not be executed in my subproject.  Once it is done, remove the trigger."	super displayDeEmphasized.	ArmsLengthCmd ifNil: [^ self].	cmd _ ArmsLengthCmd.	ArmsLengthCmd _ nil.	model "project" perform: cmd.	model "project" enter.! !