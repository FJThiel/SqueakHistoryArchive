'From Squeak2.7 of 5 January 2000 [latest update: #1789] on 6 February 2000 at 12:37:45 pm'!"Change Set:		1023FileCntsBrowserEnh-smaDate:			6 February 2000Author:			Stefan Matthias AustAdds the usual shortcuts to the FileContentsBrowser and makes sure that you can't press Cmd+b which otherwise results in a walkback."!!FileContentsBrowser methodsFor: 'other' stamp: 'sma 2/6/2000 12:27'!methodHierarchy	(self selectedClassOrMetaClass isNil or:		[self selectedClassOrMetaClass hasDefinition])			ifFalse: [super methodHierarchy]! !!FileContentsBrowser methodsFor: 'creation' stamp: 'sma 2/6/2000 12:03'!createViews	"Create a pluggable version of all the views for a Browser, including views and controllers."	| hasSingleFile width topView packageListView classListView switchView messageCategoryListView messageListView browserCodeView infoView |	showDiffs _ true.	Smalltalk isMorphic ifTrue: [^ self openAsMorph].	(hasSingleFile _ self packages size = 1)		ifTrue: [width _ 150]		ifFalse: [width _ 200].	(topView _ StandardSystemView new) 		model: self;		borderWidth: 1.		"label and minSize taken care of by caller"		hasSingleFile 		ifTrue: [			self systemCategoryListIndex: 1.			packageListView _ PluggableListView on: self				list: #systemCategorySingleton				selected: #indexIsOne 				changeSelected: #indexIsOne:				menu: #packageListMenu:				keystroke: #packageListKey:from:.			packageListView window: (0 @ 0 extent: width @ 12)]		ifFalse: [			packageListView _ PluggableListView on: self				list: #systemCategoryList				selected: #systemCategoryListIndex				changeSelected: #systemCategoryListIndex:				menu: #packageListMenu:				keystroke: #packageListKey:from:.			packageListView window: (0 @ 0 extent: 50 @ 70)].	topView addSubView: packageListView.	classListView _ PluggableListView on: self		list: #classList		selected: #classListIndex		changeSelected: #classListIndex:		menu: #classListMenu:		keystroke: #classListKey:from:.	classListView window: (0 @ 0 extent: 50 @ 62).	hasSingleFile 		ifTrue: [topView addSubView: classListView below: packageListView]		ifFalse: [topView addSubView: classListView toRightOf: packageListView].	switchView _ self buildInstanceClassSwitchView.	switchView borderWidth: 1.	topView addSubView: switchView below: classListView.	messageCategoryListView _ PluggableListView on: self		list: #messageCategoryList		selected: #messageCategoryListIndex		changeSelected: #messageCategoryListIndex:		menu: #messageCategoryMenu:.	messageCategoryListView window: (0 @ 0 extent: 50 @ 70).	topView addSubView: messageCategoryListView toRightOf: classListView.	messageListView _ PluggableListView on: self		list: #messageList		selected: #messageListIndex		changeSelected: #messageListIndex:		menu: #messageListMenu:		keystroke: #messageListKey:from:.	messageListView window: (0 @ 0 extent: 50 @ 70).	topView addSubView: messageListView toRightOf: messageCategoryListView.	browserCodeView _ PluggableTextView on: self 			text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	browserCodeView window: (0@0 extent: width@110).	topView 		addSubView: browserCodeView 		below: (hasSingleFile 			ifTrue: [switchView]			ifFalse: [packageListView]).	infoView _ StringHolderView new		model: self infoString;		window: (0@0 extent: width@12);		borderWidth: 1.	topView addSubView: infoView below: browserCodeView.	^ topView! !!FileContentsBrowser methodsFor: 'creation' stamp: 'sma 2/6/2000 11:59'!openAsMorph	"Create a pluggable version of all the views for a Browser, including views and controllers."	| window aListExtent next |	window _ (SystemWindow labelled: 'later') model: self.	self packages size = 1		ifTrue: [			aListExtent _ 0.333333 @ 0.34.			self systemCategoryListIndex: 1.			window addMorph: (PluggableListMorph on: self list: #systemCategorySingleton					selected: #indexIsOne changeSelected: #indexIsOne:					menu: #packageListMenu:					keystroke: #packageListKey:from:)				frame: (0@0 extent: 1.0@0.06).			next := 0@0.06]		ifFalse: [			aListExtent _ 0.25 @ 0.4.			window addMorph: (PluggableListMorph on: self list: #systemCategoryList					selected: #systemCategoryListIndex changeSelected: #systemCategoryListIndex:					menu: #packageListMenu:					keystroke: #packageListKey:from:)				frame: (0@0 extent: aListExtent).			next := aListExtent x @ 0].	window addMorph: (PluggableListMorph on: self list: #classList			selected: #classListIndex changeSelected: #classListIndex:			menu: #classListMenu:			keystroke: #classListKey:from:)		frame: (next extent: aListExtent - (0.0 @ 0.05)).	window addMorph: self buildMorphicSwitches		frame: (next + (0 @ (aListExtent y - 0.05)) extent: aListExtent x @ 0.05).	next := next + (aListExtent x @ 0).	window addMorph: (PluggableListMorph on: self list: #messageCategoryList			selected: #messageCategoryListIndex changeSelected: #messageCategoryListIndex:			menu: #messageCategoryMenu:)		frame: (next extent: aListExtent).	next := next + (aListExtent x @ 0).	window addMorph: (PluggableListMorph on: self list: #messageList			selected: #messageListIndex changeSelected: #messageListIndex:			menu: #messageListMenu:			keystroke: #messageListKey:from:)		frame: (next extent: aListExtent).	window addMorph: (PluggableTextMorph on: self text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0@0.4 corner: 1@0.94).	window addMorph: (PluggableTextMorph on: self text: #infoViewContents accept: nil			readSelection: nil menu: nil)		frame: (0@0.94 corner: 1@1).	^ window! !!FileContentsBrowser methodsFor: 'menus' stamp: 'sma 2/6/2000 11:57'!classListMenu: aMenu	^ aMenu 		labels:'definitioncommentclass refs (N)fileInfileOutrename...removeremove existing'		lines: #(2 3 5 7)		selections: #(editClass editComment browseClassRefs fileInClass fileOutClass renameClass removeClass removeUnmodifiedCategories) ! !!FileContentsBrowser methodsFor: 'menus' stamp: 'sma 2/6/2000 12:28'!messageListMenu: aMenu	^ aMenu 		labels:'fileInfileOutsenders (n)implementors (m)method inheritance (h)versions (v)remove'		lines: #(2 6)		selections: #(fileInMessage fileOutMessagebrowseSenders browseImplementors methodHierarchy browseVersionsremoveMessage).! !!FileContentsBrowser methodsFor: 'menus' stamp: 'sma 2/6/2000 11:48'!packageListMenu: aMenu	^ aMenu 		labels:'find class... (f)fileInfileOutremoveremove existing'		lines: #(1 3 4)		selections: #(findClass fileInPackage fileOutPackage removePackage removeUnmodifiedClasses)! !!FileContentsBrowser methodsFor: 'keys' stamp: 'sma 2/6/2000 12:05'!classListKey: aChar from: view	aChar == $N ifTrue: [^ self browseClassRefs].	self packageListKey: aChar from: view! !!FileContentsBrowser methodsFor: 'keys' stamp: 'sma 2/6/2000 12:26'!messageListKey: aChar from: view	aChar == $b ifTrue: [^ self].	super messageListKey: aChar from: view! !!FileContentsBrowser methodsFor: 'keys' stamp: 'sma 2/6/2000 12:05'!packageListKey: aChar from: view	aChar == $f ifTrue: [^ self findClass].	self arrowKey: aChar from: view! !!PseudoClass methodsFor: 'accessing' stamp: 'sma 2/6/2000 12:30'!allSuperclasses	^ self realClass allSuperclasses! !!PseudoClass methodsFor: 'private' stamp: 'sma 2/6/2000 12:23'!allSubclassesWithLevelDo: classAndLevelBlock startingLevel: level	^ self realClass allSubclassesWithLevelDo: classAndLevelBlock startingLevel: level! !