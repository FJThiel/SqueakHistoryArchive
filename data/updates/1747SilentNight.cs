'From Squeak2.7alpha of 25 November 1999 [latest update: #1671] on 24 December 1999 at 5:40:30 am'!"Change Set:		SilentNightDate:			24 December 1999Author:			Luciano NotarfrancescoNew Silent Night examples. See the 'examples' method category in DECTalkReader class."!Smalltalk renameClassNamed: #VoiceParameter as: #CosineInterpolator!!DECTalkReader methodsFor: 'initialization' stamp: 'len 12/24/1999 03:20'!initialize	phonemes _ PhonemeSet dectalkToArpabet.	events _ CompositeEvent new.	currentDuration _ 80.	currentPitch _ 100.	f0Contour _ CosineInterpolator new.	durations _ Dictionary new.	#(	('ae'	230.0	80.0)	('aa'	240.0	100.0)	('ax'	120.0	60.0)	('er'	180.0	80.0)	('ay'	250.0	150.0)	('aw'	240.0	100.0)	('b'		85.0		60.0)	('ch'	70.0		50.0)	('d'		75.0		50.0)	('dh'	50.0		30.0)	('eh'	150.0	70.0)	('ea'	270.0	130.0)	('ey'	180.0	100.0)	('f'		100.0	80.0)	('g'		80.0		60.0)	('hh'	80.0		20.0)	('ih'	135.0	40.0)	('ia'	230.0	100.0)	('iy'	155.0	55.0)	('jh'	70.0		50.0)	('k'		80.0		60.0)	('l'		80.0		40.0)	('m'		70.0		60.0)	('n'		60.0		50.0)	('ng'	95.0		60.0)"	('oh'	240.0	130.0)"	('oy'	280.0	150.0)	('ao'	240.0	130.0)	('ow'	220.0	80.0)	('p'		90.0		50.0)	('r'		80.0		30.0)	('s'		105.0	60.0)	('sh'	105.0	80.0)	('t'		75.0		50.0)	('th'	90.0		60.0)	('uh'	210.0	70.0)	('ua'	230.0	110.0)	('ah'	160.0	60.0)	('uw'	230.0	150.0)	('v'		60.0		40.0)	('w'		80.0		60.0)	('y'		80.0		40.0)	('z'		75.0		40.0)	('zh'	70.0		40.0)	('sil'	100.0	100.0)) do: [ :each |		durations at: (PhonemeSet arpabet at: each first) put: each second / 1000.0]! !!DECTalkReader methodsFor: 'reading' stamp: 'len 12/24/1999 05:35'!read	| phoneme time |	time _ 0.	[stream skipSeparators; atEnd]		whileFalse: [phoneme _ self nextPhoneme.					currentDuration _ self defaultDurationFor: phoneme.					stream peek = $< ifTrue: [self readPitchAndDuration].					f0Contour at: time + (currentDuration / 2.0 min: 0.1) put: currentPitch.					time _ time + currentDuration.					f0Contour at: time put: currentPitch.					events add: (PhoneticEvent new phoneme: phoneme; duration: currentDuration; loudness: 1.0)].	self addPitches! !!DECTalkReader methodsFor: 'reading' stamp: 'len 12/24/1999 03:17'!readPitchAndDuration	| tokens code |	stream next.	tokens _ (stream upTo: $>) findTokens: ','.	currentDuration _ tokens first asNumber / 1000.0.	tokens size > 1 ifFalse: [^ self].	code _ tokens last asNumber.	currentPitch _ code > "37" 64 ifTrue: [code] ifFalse: [AbstractSound pitchForMIDIKey: 35 + code]! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 05:14'!silentNightDuetExample	"	DECTalkReader silentNightDuetExample	"	| song1 song2 voice1 voice2 time |	song1 _ DECTalkReader silentNightVoice1.	song2 _ DECTalkReader silentNightVoice2.	voice1 _ KlattVoice new tract: 14.4.	voice2 _ KlattVoice new tract: 18.5; turbulence: 59.	time _ Time millisecondClockValue + 30000. "give it 30 secounds for precomputing"	song1 playOn: voice1 at: time.	song2 playOn: voice2 at: time! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 05:14'!silentNightDuetExample2	"	DECTalkReader silentNightDuetExample2	"	| song1 song2 voice1 voice2 time |	song1 _ DECTalkReader silentNightVoice1 pitchBy: 0.5.	song2 _ DECTalkReader silentNightVoice2 pitchBy: 0.5.	voice1 _ KlattVoice new tract: 14.4.	voice2 _ KlattVoice new tract: 18.5; turbulence: 59.	time _ Time millisecondClockValue + 30000. "give it 30 secounds for precomputing"	song1 playOn: voice1 at: time.	song2 playOn: voice2 at: time! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 05:14'!silentNightDuetExample3	"	DECTalkReader silentNightDuetExample3	"	| song1 song2 voice1 voice2 time |	song1 _ DECTalkReader silentNightVoice1 pitchBy: 0.25.	song2 _ DECTalkReader silentNightVoice2 pitchBy: 0.25.	voice1 _ KlattVoice new tract: 18.5; turbulence: 59.	voice2 _ KlattVoice new tract: 20; flutter: 0.5.	time _ Time millisecondClockValue + 30000. "give it 30 secounds for precomputing"	song1 playOn: voice1 at: time.	song2 playOn: voice2 at: time! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 05:18'!silentNightDuetExample4	"	DECTalkReader silentNightDuetExample4	"	| song1 song2 voice1 voice2 gestural1 gestural2 time |	song1 _ DECTalkReader silentNightVoice1 pitchBy: 0.5.	song2 _ DECTalkReader silentNightVoice2 pitchBy: 0.5.	gestural1 _ GesturalVoice new.	gestural1 newHead position: 1 @ 50.	voice1 _ (KlattVoice new tract: 14.4) + gestural1.	gestural2 _ GesturalVoice new.	gestural2 newHead position: 150 @ 50.	voice2 _ (KlattVoice new tract: 18.5; turbulence: 59) + gestural2.	time _ Time millisecondClockValue + 30000. "give it 30 secounds for precomputing"	song1 playOn: voice1 at: time.	song2 playOn: voice2 at: time! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 04:58'!silentNightVoice1	"	(DECTalkReader silentNightVoice1 pitchBy: 0.5) playOn: KlattVoice new delayed: 1000	"	^ self eventsFromString: 'sae<600,32>ay<200,34>leh<400,32>nt nae<600,29>ay<400>t.hxow<600,32>ow<200,34>liy<400,32> nae<600,29>ay<400>t.ao<600,39>l ih<200>z kaa<800,36>lm.ao<600,37>l ih<200>z bray<800,32>t.raw<600,34>nd yah<400>ng ver<600,37>er<200,36>jhah<400,34>nmah<600,32>dher<200,32> ae<400>nd chah<600,29>ay<200>ld.hxow<800,34>liy<400> ih<600,37>nfah<200,36>ntsow<400,34> teh<600,32>nder<400,34> ae<400,32>nd may<600,29>ld.sliy<600,39>p ah<400>n hxeh<400,42>vah<400,39>nliy<400,36> piy<1000,37>iy<800,41>s.sliy<400,37>iy<400,32>p ah<400,29>n hxeh<400,32>vah<400,30>nliy<600,27> piy<1800,25>s.'! !!DECTalkReader class methodsFor: 'examples' stamp: 'len 12/24/1999 05:06'!silentNightVoice2	"	(DECTalkReader silentNightVoice2 pitchBy: 0.5) playOn: KlattVoice new delayed: 1000	"	^ self eventsFromString: 'sae<600,29>ay<200,30>leh<400,29>nt nae<600,25>ay<400>t.hxow<600,29>ow<200,30>liy<400,29> nae<600,25>ay<400>t.ao<600,30>l ih<200>z kaa<800,27>lm.ao<600,29>l ih<200>z bray<800,29>t.raw<600,30>nd yah<400>ng ver<600,34>er<200,32>jhah<400,30>nmah<600,29>dher<200,30> ae<400,29>nd chah<600,25>ay<200>ld.hxow<800,30>liy<400> ih<600,34>nfah<200,32>ntsow<400,30> teh<600,29>nder<400,30> ae<400,29>nd may<600,25>ld.sliy<600,30>p ah<400>n hxeh<400,27>vah<400,30>nliy<400,27> piy<1000,29>iy<800,32>s.sliy<400,29>iy<400,29>p ah<400,25>n hxeh<400,24>vah<400,24>nliy<600,24> piy<1800,25>s.'! !!F0RenderingVisitor methodsFor: 'visiting' stamp: 'len 12/24/1999 03:20'!clause: aClause	contour _ CosineInterpolator new at: 0 put: pitch; yourself.	super clause: aClause.	self renderPhraseAccentOrBoundaryTone: clause accent.	self assignF0ToEvents! !!PhonemeSet class methodsFor: 'examples' stamp: 'len 12/24/1999 02:44'!arpabetToSampa	"Answer a dictionary with ARPAbet phonemes	as keys and SAMPA phoneme names as values."	| answer |	answer _ Dictionary new.	self sampaToArpabet associationsDo: [ :each | answer at: each value put: each key].	^ answer! !!VoiceEvent methodsFor: 'playing' stamp: 'len 12/24/1999 02:23'!playDelayed: delay	self playAt: Time millisecondClockValue + delay! !!PhoneticEvent methodsFor: 'converting' stamp: 'len 12/24/1999 02:45'!asPHOString	| stream |	stream _ WriteStream on: String new.	stream		nextPutAll: (PhonemeSet arpabetToSampa at: self phoneme); space;		print: (self duration * 1000) rounded.	self pitchPoints do: [ :each | stream space; print: (each x * 1000) rounded; space; print: each y rounded].	^ stream contents! !