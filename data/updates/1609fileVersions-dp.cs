'From Squeak2.6 of 11 October 1999 [latest update: #1559] on 27 October 1999 at 9:10:42 am'!"Change Set:		fileVersions-dpDate:			27 October 1999Author:			David PennellAdds FileDirectory>>nextNameFor:extension:Using a file name pattern of fileName.#.extension, finds the highest version # for fileName and extension in the current directory, increments the version # and answers a new name.  Useful for creating unique, sequential file names."!!FileDirectory methodsFor: 'file name utilities' stamp: 'djp 10/27/1999 09:01'!nextNameFor: baseFileName extension: extension	"Assumes a file name includes a version number encoded as '.' followed by digits 	preceding the file extension.  Increment the version number and answer the new file name.	If a version number is not found, set the version to 1 and answer a new file name"	| files splits version |	files _ self fileNamesMatching: (baseFileName,'*', self class dot, extension).	splits _ files 			collect: [:file | self splitNameVersionExtensionFor: file]			thenSelect: [:split | (split at: 1) = baseFileName].	splits _ splits asSortedCollection: [:a :b | (a at: 2) < (b at: 2)].	splits isEmpty 			ifTrue: [version _ 1]			ifFalse: [version _ (splits last at: 2) + 1].	^ (baseFileName, '.', version asString, self class dot, extension) asFileName! !!FileDirectory methodsFor: 'file name utilities' stamp: 'djp 10/27/1999 08:58'!splitNameVersionExtensionFor: fileName	" answer an array with the root name, version # and extension.	See comment in nextSequentialNameFor: for more details"	| baseName version extension i j |	baseName _ self class baseNameFor: fileName.	extension _ self class extensionFor: fileName.	i _ j _ baseName findLast: [:c | c isDigit not].	i = 0		ifTrue: [version _ 0]		ifFalse:			[(baseName at: i) = $.				ifTrue:					[version _ (baseName copyFrom: i+1 to: baseName size) asNumber.					j _ j - 1]				ifFalse: [version _ 0].			baseName _ baseName copyFrom: 1 to: j].	^ Array with: baseName with: version with: extension! !!String methodsFor: 'testing' stamp: 'djp 10/26/1999 21:25'!isAllDigits	"whether the receiver is composed entirely of digits"	self do: [:c | c isDigit ifFalse: [^ false]].	^ true! !