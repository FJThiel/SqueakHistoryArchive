'From Squeak 2.3 beta of Nov 25, 1998 on 18 December 1998 at 12:04:16 pm'!"Change Set:		NullSourcePointerFixDate:			18 December 1998Author:			Dan IngallsThis changeset fixes a bug that improperly replicated a null source code pointer.  This showed up only on quick store instvar methods, but the code has been fixed for any such attempt to set source code position to zero.  The calling method has also been simplified in such a way that this wouldn't have happened anyway."!!CompiledMethod methodsFor: 'source code management' stamp: 'di 12/18/1998 11:55'!setSourcePosition: position inFile: fileIndex 	"Store the location of the source code for the receiver in the receiver. The 	location consists of which source file (*.sources or *.changes) and the 	position in that file.  Properly replicate a null source pointer as well."	fileIndex > 4 ifTrue: [^ self error: 'invalid file number'].	self at: self size put: 		((fileIndex = 0 and: [position = 0])			ifTrue:[0  "null source pointer"]			ifFalse: [251 + fileIndex]).	1 to: 3 do: 		[:i | self at: self size - i put: ((position bitShift: (i-3)*8) bitAnd: 16rFF)].! !!MethodNode methodsFor: 'code generation' stamp: 'di 12/18/1998 11:57'!generate: trailer 	"The receiver is the root of a parse tree. Answer a CompiledMethod. The 	argument, trailer, is the references to the source code that is stored with 	every CompiledMethod."	| blkSize nLits stack strm nArgs offsets |	self generateIfQuick: 		[:method | 		1 to: trailer size do: [:i | method at: method size - trailer size + i put: (trailer at: i)].		method cacheTempNames: self tempNames.		^method].	nArgs _ arguments size.	blkSize _ block sizeForEvaluatedValue: encoder.	encoder maxTemp > 31		ifTrue: [^self error: 'Too many temporary variables'].		literals _ encoder allLiterals.	(nLits _ literals size) > 255		ifTrue: [^self error: 'Too many literals referenced'].	method _ CompiledMethod	"Dummy to allocate right size"				newBytes: blkSize				nArgs: nArgs				nTemps: encoder maxTemp				nStack: 0				nLits: nLits				primitive: primitive.	strm _ ReadWriteStream with: method.	strm position: method initialPC - 1.	stack _ ParseStack new init.	block emitForEvaluatedValue: stack on: strm.	stack position ~= 1 ifTrue: [^self error: 'Compiler stack discrepancy'].	strm position ~= (method size - trailer size) 		ifTrue: [^self error: 'Compiler code size discrepancy'].	method needsFrameSize: stack size.	1 to: nLits do: [:lit | method literalAt: lit put: (literals at: lit)].	1 to: trailer size do: [:i | method at: method size - trailer size + i put: (trailer at: i)].	nLits = 0 ifTrue:		["Check for quick store instvars case"		(offsets _ method storeOffsets) size > 0 ifTrue:			[method _ CompiledMethod toStoreInstVars: offsets]].	1 to: trailer size do: [:i | method at: method size - trailer size + i put: (trailer at: i)].	method cacheTempNames: self tempNames.	^ method! !