'From Squeak 2.2 of Sept 23, 1998 on 9 November 1998 at 12:08:36 pm'!"Change Set:		ChangeSetMsgs-diDate:			9 November 1998Author:			Dan IngallsA number of cleanups and improved do-its resulting from isolating the function of	ChangeSorter>>changeSetsNamedSuchThat: nameBlock."!!ChangeSet methodsFor: 'fileIn/Out' stamp: 'di 11/8/1998 16:36'!summaryString	"Answer the string summarizing this changeSet"	| ps s2 date author line |	^ String streamContents:		[:s |		s nextPutAll: self name.		(ps _ self preambleString)			ifNil: [s cr]			ifNotNil:			[s2 _ ReadStream on: ps.			s2 match: 'Date:		'.  date _ s2 upTo: Character cr.			s2 match: 'Author:			'.  author _ s2 upTo: Character cr.			s nextPutAll: ' -- '; nextPutAll: author; nextPutAll: ' -- '; nextPutAll: date; cr.			[s2 atEnd] whileFalse:				[line _ s2 upTo: Character cr.				(line isEmpty or: [line = '"']) ifFalse: [s nextPutAll: line; cr]]]]."To summarize all recent changeSets...(FileStream newFileNamed: 'ChangeSummaries.txt') nextPutAll:	(String streamContents:		[:s | (ChangeSorter changeSetsNamedSuchThat:			[:name | name first isDigit and: [name initialInteger >= 373]])			 do: [:cs | s nextPutAll: cs summaryString; cr]]);	close"! !!ChangeSorter class methodsFor: 'all' stamp: 'di 11/8/1998 16:31'!changeSetsNamedSuchThat: nameBlock	"(ChangeSorter changeSetsNamedSuchThat:		[:name | name first isDigit and: [name initialInteger >= 373]])		do: [:cs | AllChangeSets remove: cs wither]"	^ (self allChangeSetNames		select: [:csName | nameBlock value: csName])		collect: [:csName | self changeSetNamed: csName]! !!ChangeSorter class methodsFor: 'all' stamp: 'di 11/8/1998 16:32'!removeChangeSetsNamedSuchThat: nameBlock	(ChangeSorter changeSetsNamedSuchThat: nameBlock)		do: [:cs | AllChangeSets remove: cs wither]! !!ChangeSorter class methodsFor: 'all' stamp: 'di 11/9/1998 10:23'!removeEmptyUnnamedChangeSets	"Remove all change sets that are empty, whose names start with Unnamed,		and which are not nailed down by belonging to a Project."	"ChangeSorter removeEmptyUnnamedChangeSets"	| toGo |	(toGo _ (self changeSetsNamedSuchThat: [:csName | csName beginsWith: 'Unnamed'])		select: [:cs | cs isEmpty and: [cs okayToRemoveInforming: false]])		do: [:cs | AllChangeSets remove: cs wither].	self inform: toGo size printString, ' change set(s) removed.'! !ChangeSorter class removeSelector: #removeOldChangeSets!