'From Squeak3.6beta of ''4 July 2003'' [latest update: #5387] on 17 August 2003 at 1:18:36 am'!"Change Set:		SocketFixRev2Date:			17 August 2003Author:			Masashi UmezawaAfter installing Stephen Pair's socket accept fix, I still found minor bugs. So I fixed them.-Socket>>receiveAvailableDataInto:startingAt: ansers self.	Now it answers the size of received data correctly.-Socket>>connectTo:port:waitForConnectionFor: -Socket>>waitForConnectionFor:	Both try to report bad host address, but it fails. (because remoteHost is not known if it fails to connect).	Now it reports bad host address and port in timeout.  (added #waitForConnectionFor: from masashi's aggregated changeset -dew)"!!Socket methodsFor: 'connection open/close' stamp: 'mu 8/14/2003 15:15'!connectTo: hostAddress port: port waitForConnectionFor: timeout 	"Initiate a connection to the given port at the given host 	address. Waits until the connection is established or time outs."	self connectNonBlockingTo: hostAddress port: port.	self		waitForConnectionFor: timeout		ifTimedOut: [ConnectionTimedOut signal: 'Cannot connect to '					, (NetNameResolver stringFromAddress: hostAddress) , ':' , port asString]! !!Socket methodsFor: 'receiving' stamp: 'mu 8/14/2003 15:42'!receiveAvailableDataInto: buffer startingAt: startIndex	"Receive all available data into the given buffer and return the number of bytes received.	Note the given buffer may be only partially filled by the received data.	Do not wait for data."	| bufferPos bytesRead |	bufferPos := startIndex.	bytesRead := 0.	[self dataAvailable		and: [bufferPos-1 < buffer size]] 		whileTrue: [			bytesRead := self receiveSomeDataInto: buffer startingAt: bufferPos.			bufferPos := bufferPos + bytesRead].	^bufferPos - startIndex! !!Socket methodsFor: 'waiting' stamp: 'mu 8/19/2003 02:57'!waitForConnectionFor: timeout	"Wait up until the given deadline for a connection to be established. Return true if it is established by the deadline, false if not."	^self 		waitForConnectionFor: timeout 		ifTimedOut: [ConnectionTimedOut signal: 'Failed to connect in ', timeout asString, ' seconds']! !