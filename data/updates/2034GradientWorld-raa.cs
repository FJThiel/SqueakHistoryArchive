'From Squeak2.8alpha of 4 February 2000 [latest update: #2005] on 22 April 2000 at 8:12:41 pm'!"Change Set:		1052GradientWorld-raaDate:			24 March 2000Author:			Bob ArningPermit the world to be drawn with a gradient. Note that the world has a #color: method that sets the fillColor2 to be the same as color, thus eliminating the gradient. So, if you want to change the color and keep the gradient, calls to #color: should be followed by a call to #gradientFillColor:.World color: Color green.World gradientFillColor: Color lightGreen"!!HandMorph methodsFor: 'world menu' stamp: 'bf 3/24/2000 14:22'!appearanceMenu	"Build the appearance menu for the world."	| menu screenCtrl |	screenCtrl _ ScreenController new.	menu _ (MenuMorph entitled: 'appearance...') defaultTarget: self.	menu addStayUpItem.	menu add: 'window colors...' target: Preferences action: #windowSpecificationPanel.	menu balloonTextForLastItem: 'Lets you specify colors for standard system windows.'.	menu add: 'system fonts...' target: self action: #standardFontDo.	menu balloonTextForLastItem: 'Choose the standard fonts to use for code, lists, menus, window titles, etc.'.	menu add: 'text highlight color...' target: Preferences action: #chooseTextHighlightColor.	menu balloonTextForLastItem: 'Choose which color should be used for text highlighting in Morphic.'.	menu add: 'insertion point color...' target: Preferences action: #chooseInsertionPointColor.	menu balloonTextForLastItem: 'Choose which color to use for the text insertion point in Morphic.'.	menu addLine.	menu addUpdating: #menuColorString target: Preferences action: #toggleMenuColorPolicy.	menu balloonTextForLastItem: 'Governs whether menu colors should be derived from the desktop color.'.	menu addUpdating: #roundedCornersString target: Preferences action: #toggleRoundedCorners.	menu balloonTextForLastItem: 'Governs whether morphic windows and menus should have rounded corners.'.	menu addLine.	menu add: 'full screen on' target: screenCtrl action: #fullScreenOn.	menu balloonTextForLastItem: 'puts you in full-screen mode, if not already there.'.	menu add: 'full screen off' target: screenCtrl action: #fullScreenOff.	menu balloonTextForLastItem: 'if in full-screen mode, takes you out of it.'.	menu addLine.	menu add: 'set display depth...' action: #setDisplayDepth.	menu balloonTextForLastItem: 'choose how many bits per pixel.'.	menu add: 'set desktop color...' action: #changeBackgroundColor.	menu balloonTextForLastItem: 'choose a uniform color to use as desktop background.'.	menu add: 'set gradient color...' target: self world action: #setGradientColor:.	menu balloonTextForLastItem: 'choose second color to use as gradient for desktop background.'.	menu add: 'use texture background' target: self world action: #setStandardTexture.	menu balloonTextForLastItem: 'apply a graph-paper-like texture background to the desktop.'.	^ menu! !!PasteUpMorph methodsFor: 'display' stamp: 'RAA 3/24/2000 07:04'!pseudoDraw: aRectangle on: aCanvas	| c style |	c _ aCanvas copyClipRect: aRectangle.	c fillColor: color.	(color isColor and: [color ~= Color transparent and: [color ~= fillColor2]]) ifTrue:		[style _ GradientFillStyle ramp: {0.0 -> color. 1.0 -> fillColor2}.		style origin: self position.		style direction: (gradientDirection == #vertical 			ifTrue:[0@self height] 			ifFalse:[self width@0]).		aCanvas fillRectangle: aRectangle fillStyle: style].	turtleTrailsForm ifNotNil: [c paintImage: turtleTrailsForm at: 0@0].	^c! !!PasteUpMorph methodsFor: 'misc' stamp: 'RAA 3/24/2000 07:01'!drawInvalidAreasOn: aCanvas 	"Redraw the damaged areas of the given canvas and clear the damage list. Return a collection of the areas thatwere redrawn."	| rectList c i n mm morphs rects rectToFill remnants rect |	rectList _ self damageRecorder invalidRectsFullBounds: ("0@0 extent:" self viewBox "extent").	self damageRecorder reset.	n _ self submorphs size.	morphs _ OrderedCollection new: n*2.	rects _ OrderedCollection new: n*2.	rectList do: [:r |		true		ifTrue:			["Experimental top-down drawing --			Traverses top to bottom, stopping if the entire area is filled.			If only a single rectangle remains, then continue with the reduced rectangle."			rectToFill _ r.			i _ 1.			[rectToFill == nil or: [i > n]] whileFalse:				[mm _ submorphs at: i.				((mm fullBounds intersects: r) and: [mm visible]) ifTrue:					[morphs addLast: mm.  rects addLast: rectToFill.					remnants _ mm areasRemainingToFill: rectToFill.					remnants size = 1 ifTrue: [rectToFill _ remnants first].					remnants size = 0 ifTrue: [rectToFill _ nil]].				i _ i+1].			"Now paint from bottom to top, but using the reduced rectangles."			rectToFill ifNotNil:				[c _ self pseudoDraw: rectToFill on: aCanvas].			[morphs isEmpty] whileFalse:				[(rect _ rects removeLast) == rectToFill ifFalse:					[c _ aCanvas copyClipRect: (rectToFill _ rect)].				morphs removeLast fullDrawOn: c].			morphs reset.  rects reset]		ifFalse: [c _ self pseudoDraw: r on: aCanvas.				submorphs reverseDo: [:m | m fullDrawOn: c]]		].	^ rectList! !