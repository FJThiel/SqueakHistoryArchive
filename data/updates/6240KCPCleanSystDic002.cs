'From Squeak3.8alpha of ''17 July 2004'' [latest update: #6232] on 24 September 2004 at 8:53:46 pm'!"Change Set:		KCPCleanSystDic002Date:			24 September 2004Author:			stéphane ducasseMove pointersTo: and related to PointerFinder.Funny sentence but this should be second degree humor..."!!ObjectOut methodsFor: 'fetch from disk' stamp: 'sd 9/24/2004 20:49'!xxxFixup	"There is already an object in memory for my url.  All pointers to me need to be pointers to him.  Can't use become, because other pointers to him must stay valid."	| real temp list |	real _ page contentsMorph.	real == self ifTrue: [page error: 'should be converted by now'].	temp _ self.	list _ (PointerFinder pointersTo: temp) asOrderedCollection.	list add: thisContext.  list add: thisContext sender.	list do: [:holder |		1 to: holder class instSize do:			[:i | (holder instVarAt: i) == temp ifTrue: [holder instVarAt: i put: real]].		1 to: holder basicSize do:			[:i | (holder basicAt: i) == temp ifTrue: [holder basicAt: i put: real]].		].	^ real! !!PointerFinder class methodsFor: 'utilities' stamp: 'sd 9/24/2004 20:49'!pointersTo: anObject	"Find all occurrences in the system of pointers to the argument anObject."	"(PointerFinder pointersTo: Browser) inspect."	^ self pointersTo: anObject except: #()! !!PointerFinder class methodsFor: 'utilities' stamp: 'sd 9/24/2004 20:47'!pointersTo: anObject except: objectsToExclude	"Find all occurrences in the system of pointers to the argument anObject. 	Remove objects in the exclusion list from the results."		| results anObj |	Smalltalk garbageCollect.	"big collection shouldn't grow, so it's contents array is always the same"	results _ OrderedCollection new: 1000.	"allObjectsDo: is expanded inline to keep spurious	 method and block contexts out of the results"	anObj _ self someObject.	[0 == anObj] whileFalse: [		anObj isInMemory ifTrue: [			(anObj pointsTo: anObject) ifTrue: [				"exclude the results collector and contexts in call chain"				((anObj ~~ results collector) and:				 [(anObj ~~ objectsToExclude) and:				 [(anObj ~~ thisContext) and:				 [(anObj ~~ thisContext sender) and:				 [anObj ~~ thisContext sender sender]]]])					 ifTrue: [ results add: anObj ].			]].		anObj _ anObj nextObject.	].	objectsToExclude do: [ :obj | results removeAllSuchThat: [ :el | el == obj]].	^ results asArray! !!PointerFinder class methodsFor: 'utilities' stamp: 'sd 9/24/2004 20:48'!pointersToItem: index of: anArray	"Find all occurrences in the system of pointers to the given element of the given array. 	This is useful for tracing up a pointer chain from an inspector on the results of a previous 	call of pointersTo:. To find out who points to the second element of the results, one would 	evaluate:		PointerFinder pointersToItem: 2 of: self	in the inspector."	^ self pointersTo: (anArray at: index) except: (Array with: anArray)! !!SystemDictionary methodsFor: 'deprecated' stamp: 'sd 9/24/2004 20:50'!obsoleteMethodReferences	"Smalltalk obsoleteMethodReferences"	"Smalltalk browseObsoleteMethodReferences"	"Open a browser on all referenced behaviors that are obsolete"	| obsClasses obsRefs references |	self deprecated: 'Use SystemNavigation default obsoleteMethodReferences'.	references _ WriteStream on: Array new.	obsClasses _ self obsoleteBehaviors.	'Scanning for methods referencing obsolete classes' displayProgressAt: Sensor cursorPoint		from: 1 to: obsClasses size during:[:bar|	obsClasses keysAndValuesDo:[:index :each|		bar value: index.		obsRefs _ PointerFinder pointersTo: each except: obsClasses.		obsRefs do:[:ref|			"Figure out if it may be a global"			((ref isVariableBinding) and:[ref key isString "or Symbol"]) ifTrue:[				(PointerFinder pointersTo: ref) do:[:meth|					(meth isKindOf: CompiledMethod) ifTrue:[						meth methodReference ifNotNilDo:[:mref|							references nextPut: mref]]]]]].	].	^references contents! !!SystemDictionary methodsFor: 'deprecated' stamp: 'sd 9/24/2004 20:49'!pointersTo: anObject	"Find all occurrences in the system of pointers to the argument anObject."	"(Smalltalk pointersTo: Browser) inspect."	self deprecated: 'Use PointerFinder pointersTo: anObject'. 	^ self pointersTo: anObject except: #()! !!SystemDictionary methodsFor: 'deprecated' stamp: 'sd 9/24/2004 20:47'!pointersTo: anObject except: objectsToExclude	"Find all occurrences in the system of pointers to the argument anObject. Remove objects in the exclusion list from the results."	| results anObj |	self deprecated: 'Use PointerFinder pointersTo: anObject except: objectsToExclude'. 	Smalltalk garbageCollect.	"big collection shouldn't grow, so it's contents array is always the same"	results _ OrderedCollection new: 1000.	"allObjectsDo: is expanded inline to keep spurious	 method and block contexts out of the results"	anObj _ self someObject.	[0 == anObj] whileFalse: [		anObj isInMemory ifTrue: [			(anObj pointsTo: anObject) ifTrue: [				"exclude the results collector and contexts in call chain"				((anObj ~~ results collector) and:				 [(anObj ~~ objectsToExclude) and:				 [(anObj ~~ thisContext) and:				 [(anObj ~~ thisContext sender) and:				 [anObj ~~ thisContext sender sender]]]])					 ifTrue: [ results add: anObj ].			]].		anObj _ anObj nextObject.	].	objectsToExclude do: [ :obj | results removeAllSuchThat: [ :el | el == obj]].	^ results asArray! !!SystemDictionary methodsFor: 'deprecated' stamp: 'sd 9/24/2004 20:48'!pointersToItem: index of: anArray	"Find all occurrences in the system of pointers to the given element of the given array. This is useful for tracing up a pointer chain from an inspector on the results of a previous call of pointersTo:. To find out who points to the second element of the results, one would evaluate:	Smalltalk pointersToItem: 2 of: selfin the inspector."	self deprecated: 'Use PointerFinder pointersToItem: index of: anArray'.	^ self pointersTo: (anArray at: index) except: (Array with: anArray)! !!SystemNavigation methodsFor: 'query' stamp: 'sd 9/24/2004 20:50'!obsoleteMethodReferences	"SystemNavigation default obsoleteMethodReferences"	"Open a browser on all referenced behaviors that are obsolete"	| obsClasses obsRefs references |	references _ WriteStream on: Array new.	obsClasses _ self obsoleteBehaviors.	'Scanning for methods referencing obsolete classes' displayProgressAt: Sensor cursorPoint		from: 1 to: obsClasses size during:[:bar|	obsClasses keysAndValuesDo:[:index :each|		bar value: index.		obsRefs _ PointerFinder pointersTo: each except: obsClasses.		obsRefs do:[:ref|			"Figure out if it may be a global"			((ref isVariableBinding) and:[ref key isString "or Symbol"]) ifTrue:[				(PointerFinder pointersTo: ref) do:[:meth|					(meth isKindOf: CompiledMethod) ifTrue:[						meth methodReference ifNotNilDo:[:mref|							references nextPut: mref]]]]]].	].	^references contents! !!SystemDictionary reorganize!('accessing' organization)('class names' classNamed: classNames flushClassNameCache forgetClass:logged: hasClassNamed: removeClassNamed: renameClass:as: renameClassNamed:as:)('dictionary access' associationAtOrAbove:ifAbsent: associationOrUndeclaredAt: at:put: atOrAbove:ifAbsent: atOrBelow:ifAbsent: environmentForCategory: includesKeyOrAbove: kernelCategories scopeFor:from:envtAndPathIfFound:)('housekeeping' cleanOutUndeclared compressSources condenseChanges condenseSources forgetDoIts makeExternalRelease makeInternalRelease makeSqueaklandRelease reclaimDependents recompileAllFrom: reconstructChanges reformatChangesToUTF8 removeAllLineFeeds removeEmptyMessageCategories testDecompiler testFormatter testFormatter2 verifyChanges)('memory space' bytesLeft bytesLeft: bytesLeftString createStackOverflow garbageCollect garbageCollectMost installLowSpaceWatcher lowSpaceThreshold lowSpaceWatcher lowSpaceWatcherProcess memoryHogs okayToProceedEvenIfSpaceIsLow primBytesLeft primLowSpaceSemaphore: primSignalAtBytesLeft: primitiveGarbageCollect signalLowSpace useUpMemory useUpMemoryWithArrays useUpMemoryWithContexts useUpMemoryWithTinyObjects)('miscellaneous' exitToDebugger handleUserInterrupt hasMorphic logError:inContext:to: m17nVersion nihongoVersion setMacFileInfoOn: verifyMorphicAvailability)('objects from disk' objectForDataStream: storeDataOn:)('printing' printElementsOn:)('retrieving' allClasses allClassesDo: poolUsers)('shrinking' abandonSources abandonTempNames cleanUpUndoCommands computeImageSegmentation discard3D discardDiscards discardFFI discardFlash discardMIDI discardMVC discardMorphic discardNetworking discardOddsAndEnds discardSUnit discardSoundAndSpeech discardSoundSynthesis discardSpeech discardTrueType discardWonderland lastRemoval majorShrink presumedSentMessages removeAllUnSentMessages removeNormalCruft removeSelector: reportClassAndMethodRemovalsFor: unusedClasses unusedClassesAndMethodsWithout: writeImageSegmentsFrom:withKernel: zapAllOtherProjects zapMVCprojects)('snapshot and quit' add:toList:after: addToShutDownList: addToShutDownList:after: addToStartUpList: addToStartUpList:after: isMorphic processShutDownList: processStartUpList: quitPrimitive removeFromShutDownList: removeFromStartUpList: send:toClassesNamedIn:with: setGCParameters shutDown shutDownSound snapshotEmbeddedPrimitive snapshotPrimitive unbindExternalPrimitives)('sources, change log' aboutThisSystem assureStartupStampLogged copyright currentChangeSetString currentProjectDo: datedVersion endianness externalizeSources forceChangesToDisk internalizeChangeLog internalizeSources lastUpdateString recover: systemInformationString timeStamp: writeRecentCharacters:toFileNamed: writeRecentToFile)('special objects' clearExternalObjects compactClassesArray externalObjects hasSpecialSelector:ifTrueSetByte: recreateSpecialObjectsArray registerExternalObject: specialNargsAt: specialObjectsArray specialSelectorAt: specialSelectorSize specialSelectors unregisterExternalObject:)('copying' assureUniClass veryDeepCopyWith: vocabularyDemanded)('deprecated' browseObsoleteMethodReferences changeImageNameTo: changesName clearProfile closeSourceFiles dumpProfile extraVMMemory extraVMMemory: fullNameForChangesNamed: fullNameForImageNamed: getFileNameFromUser getSystemAttribute: getVMParameters imageName imageName: imagePath isBigEndian isLittleEndian lastQuitLogPosition listBuiltinModule: listBuiltinModules listLoadedModule: listLoadedModules logChange: obsoleteBehaviors obsoleteClasses obsoleteMethodReferences openSourceFiles osVersion platformName platformSubtype pointersTo: pointersTo:except: pointersToItem:of: profile: readDocumentFile removeClassFromSystem:logged: saveAs saveAsEmbeddedImage saveAsNewVersion saveChangesInFileNamed: saveImageInFileNamed: saveImageSegments saveSession setPlatformPreferences snapshot:andQuit: snapshot:andQuit:embedded: sourcesName startProfiling stopProfiling swapBytesIn:from:to: unloadModule: version vmParameterAt: vmParameterAt:put: vmPath vmVersion)('ui' inspectGlobals)('*Refactory-RBAddonsReasonable')('image, changes name' primImageName primImageName: primVmPath)('squeakland' fixObsoleteReferences makeSqueaklandReleasePhaseCleanup makeSqueaklandReleasePhaseFinalSettings makeSqueaklandReleasePhasePrepare makeSqueaklandReleasePhaseStripping)!!PointerFinder class reorganize!('instance creation' on:)('utilities' pointersTo: pointersTo:except: pointersToItem:of:)!