'From Squeak2.7alpha of 1 November 1999 [latest update: #1592] on 4 November 1999 at 10:01:09 pm'!"Change Set:		Forms-bfDate:			4 November 1999Author:			Bert FreudenbergPrerequisites:	Forms	(Bolot/Lex)				buttons-bf	(myself)Makes checkboxes and radiobuttons in Scamper forms look like checkboxes and radiobuttons."!FormInput subclass: #RadioButtonInput	instanceVariableNames: 'inputSet state value button '	classVariableNames: ''	poolDictionaries: ''	category: 'HTML-Forms'!!HtmlInput methodsFor: 'formatting' stamp: 'bf 11/4/1999 21:29'!addCheckBoxButtonToFormatter: formatter	| name formData checked button buttonInput |	"dig up relevant attributes"	name _ self getAttribute: 'name'.	name ifNil: [ ^self ].	value _ self getAttribute: 'value'.	value ifNil: [ ^value ].		formData _ formatter currentFormData.	formData ifNil:  [ ^self ].	checked _ (self getAttribute: 'checked') isNil not.	"set up the form input"	buttonInput _ ToggleButtonInput name: name value: value checkedByDefault: checked.	formData addInput: buttonInput.	"create the actual button"	button _ UpdatingThreePhaseButtonMorph checkBox.	button target: buttonInput;		getSelector: #pressed;		actionSelector: #toggle.	buttonInput button: button.	formatter addMorph: button.! !!HtmlInput methodsFor: 'formatting' stamp: 'bf 11/4/1999 21:47'!addRadioButtonToFormatter: formatter	| name formData checked buttonSet button buttonInput |	"dig up relevant attributes"	name _ self getAttribute: 'name'.	name ifNil: [ ^self ].	value _ self getAttribute: 'value'.	value ifNil: [ ^value ].		formData _ formatter currentFormData.	formData ifNil:  [ ^self ].	checked _ self getAttribute: 'checked'.	"find or create the set of buttons with our same name"	buttonSet _ formData inputs detect: [ :i | i isRadioButtonSetInput and: [ i name = name ] ] ifNone: [ nil ].	buttonSet ifNil: [ 		"create a new button set"		buttonSet _ RadioButtonSetInput name: name.		formData addInput: buttonSet. ].	"set up the form input"	buttonInput _ RadioButtonInput  inputSet: buttonSet value: value.	buttonSet addInput: buttonInput.	checked ifNotNil: [		buttonSet  defaultButton: buttonInput ].	"create the actual button"	button _ UpdatingThreePhaseButtonMorph radioButton.	button target: buttonInput;		getSelector: #pressed;		actionSelector: #toggle.	buttonInput button: button.	formatter addMorph: button.! !!RadioButtonInput reorganize!('access' valueIfPressed)('private-initialization' button: inputSet:value:)('button state' pressed pressed: toggle)!!RadioButtonInput methodsFor: 'private-initialization' stamp: 'bf 11/4/1999 21:45'!button: aMorph	button _ aMorph! !!RadioButtonInput methodsFor: 'button state' stamp: 'bf 11/4/1999 21:48'!pressed: aBoolean	state _ aBoolean.	self changed: #pressed.	button ifNotNil: [button step].	^true! !!ToggleButtonInput methodsFor: 'button state' stamp: 'bf 11/4/1999 21:49'!pressed: aBoolean	state _ aBoolean.	self changed: #pressed.	button ifNotNil: [button step].	^true! !