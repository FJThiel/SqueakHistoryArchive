'From Squeak2.6 of 13 October 1999 [latest update: #1705] on 22 December 1999 at 5:37:30 pm'!"Change Set:		SysCatFileOut-arDate:			22 December 1999Author:			Andreas RaabWhen filing out entire system categories #initialize methods should be sent after all classes are filed out. This change set fixes the problem."!!Class methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:32'!fileOutInitializerOn: aStream	^self class fileOutInitializerOn: aStream! !!Class methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:30'!fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex 	"File a description of the receiver on aFileStream. If the boolean argument,	moveSource, is true, then set the trailing bytes to the position of aFileStream and	to fileIndex in order to indicate where to find the source code."	^self fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex initializing: true! !!Class methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:29'!fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex initializing: aBool	"File a description of the receiver on aFileStream. If the boolean argument,	moveSource, is true, then set the trailing bytes to the position of aFileStream and	to fileIndex in order to indicate where to find the source code."	Transcript cr; show: name.	super		fileOutOn: aFileStream		moveSource: moveSource		toFile: fileIndex.	self class nonTrivial		ifTrue:			[aFileStream cr; nextPutAll: '"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!!'; cr; cr.			self class				fileOutOn: aFileStream				moveSource: moveSource				toFile: fileIndex				initializing: aBool]! !!Metaclass methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:33'!fileOutInitializerOn: aStream	(methodDict includesKey: #initialize) ifTrue: 		[aStream cr.		aStream nextChunkPut: thisClass name , ' initialize'].! !!Metaclass methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:31'!fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex	^self fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex initializing: true! !!Metaclass methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:30'!fileOutOn: aFileStream moveSource: moveSource toFile: fileIndex initializing: aBool	super fileOutOn: aFileStream		moveSource: moveSource		toFile: fileIndex.	(aBool and:[moveSource not and: [methodDict includesKey: #initialize]]) ifTrue: 		[aFileStream cr.		aFileStream cr.		aFileStream nextChunkPut: thisClass name , ' initialize'.		aFileStream cr]! !!SystemOrganizer methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:33'!fileOutCategory: category asHtml: useHtml	"FileOut all the classes in the named system category."	| fileStream |	fileStream _ useHtml		ifTrue: [(FileStream newFileNamed: category , '.html') asHtml]		ifFalse: [FileStream newFileNamed: category , '.st'].	self fileOutCategory: category on: fileStream initializing: true.	fileStream close! !!SystemOrganizer methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:28'!fileOutCategory: category on: aFileStream 	"Store on the file associated with aFileStream, all the classes associated 	with the category and any requested shared pools."	^self fileOutCategory: category on: aFileStream initializing: true! !!SystemOrganizer methodsFor: 'fileIn/Out' stamp: 'ar 12/22/1999 17:28'!fileOutCategory: category on: aFileStream initializing: aBool	"Store on the file associated with aFileStream, all the classes associated 	with the category and any requested shared pools."	| first poolSet tempClass classes |	classes _ (self superclassOrder: category).	poolSet _ Set new.	classes do: 		[:class | class sharedPools do: [:eachPool | poolSet add: eachPool]].	poolSet size > 0 ifTrue:		[tempClass _ Class new.		tempClass shouldFileOutPools ifTrue:			[poolSet _ poolSet select: [:aPool | tempClass shouldFileOutPool: (Smalltalk keyAtIdentityValue: aPool)].			poolSet do: [:aPool | tempClass fileOutPool: aPool onFileStream: aFileStream]]].	first _ true.	classes do: 		[:class | 		first			ifTrue: [first _ false]			ifFalse: [aFileStream cr; nextPut: Character newPage; cr].		class			fileOutOn: aFileStream			moveSource: false			toFile: 0			initializing: false].	aBool ifTrue:[classes do:[:cls| cls fileOutInitializerOn: aFileStream]].! !