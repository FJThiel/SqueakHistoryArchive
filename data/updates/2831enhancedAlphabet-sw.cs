'From Squeak2.9alpha of 5 August 2000 [latest update: #2877] on 18 October 2000 at 6:52:44 pm'!"Change Set:		enhancedAlphabet-swDate:			18 October 2000Author:			Scott WallaceAdds a couple of special characters to the alphabet holder as per ack request."!!StandardScriptingSystem methodsFor: 'utilities' stamp: 'sw 10/18/2000 18:24'!holderWithAlphabet	"Answer a fully instantiated Holder that has submorphs that represent the letters of the uppercase alphabet, with each one having an 'index' slot which bears the letter's index in the alphabet -- 1 for A, 2 for B, etc.   A few special characters are provided as per ack request 10/00; for these the index provided is rather arbitrarily assigned"	| aMorph aPlayer newMorph oneCharString aContainer aWrapper |	"ScriptingSystem holderWithAlphabet openInHand"	aContainer _ self prototypicalHolder useRoundedCorners.	aContainer borderColor: Color blue lighter.	aWrapper _ AlignmentMorph new hResizing: #shrinkWrap; vResizing: #shrinkWrap; inset: 0.	aWrapper addMorphBack: (aMorph _ TextMorph new contents: 'A').	aMorph beAllFont: ((TextStyle named: #ComicBold) fontOfSize: 24).	aMorph width: 14; lock.	aWrapper beTransparent; setNameTo: 'A'.	aPlayer _ aWrapper assuredPlayer.	aPlayer addInstanceVariableNamed: #index type: #number value: 1.	aContainer addMorphBack: aWrapper.	2 to: 26 do:		[:anIndex |			newMorph _ aWrapper usableSiblingInstance.			newMorph player perform: #setIndex: with: anIndex.			newMorph firstSubmorph contents: (oneCharString _ ($A asciiValue + anIndex - 1) asCharacter asString).			newMorph setNameTo: oneCharString.			aContainer addMorphBack: newMorph].	#(' ' '.' '#') with: #(27 28 29) do:		[:aString :anIndex |			newMorph _ aWrapper usableSiblingInstance.			newMorph player perform: #setIndex: with: anIndex.			newMorph firstSubmorph contents: aString.			aString = ' '				ifTrue:					[newMorph setNameTo: 'space'.					newMorph color: (Color gray alpha: 0.2)]				ifFalse:					[newMorph setNameTo: aString].			aContainer addMorphBack: newMorph].	aContainer setNameTo: 'alphabet'.	aContainer isPartsBin: true.	aContainer enableDrop: false.	aContainer indicateCursor: false; width: 162.	aContainer color: (Color r: 0.839 g: 1.0 b: 1.0).  "Color fromUser"	^ aContainer! !!Utilities class methodsFor: 'flaps' stamp: 'sw 10/18/2000 18:45'!deleteMorphsSatisfying: deleteBlock fromGlobalFlapSatisfying: flapBlock	"If any global flap satisfies flapBlock, Then delete objects satisfying from deleteBlock from it"	| aFlapTab flapPasteUp |	aFlapTab _ self globalFlapTabsIfAny detect: [:aTab | flapBlock value: aTab] ifNone: [^ self].	flapPasteUp _ aFlapTab referent.	flapPasteUp submorphs do:		[:aMorph | (deleteBlock value: aMorph) ifTrue: [aMorph delete]]! !"Postscript:"Utilities deleteMorphsSatisfying: [:m | m morphRepresented externalName = 'alphabet'] 	fromGlobalFlapSatisfying:  [:aFlap | aFlap wording = 'Supplies'].Utilities addToSuppliesFlap: ScriptingSystem holderWithAlphabet asElementNumber: 20!