'From Squeak 2.5 of August 6, 1999 on 3 September 1999 at 6:19:03 pm'!"Change Set:		ColorPickerTweaksDate:			3 September 1999Author:			Dan IngallsFixes a number of problems with color pickers...	Makes them come to the front when used	Shows the original color so you can easily revert	Reactivates an existing picker rather than opening a new one	Places two pickers for different features of the same morph in different places	Adds a draggable dot	Now fully reconfigures across changes in display depth"!SketchMorph subclass: #ColorPickerMorph	instanceVariableNames: 'selectedColor sourceHand deleteOnMouseUp updateContinuously target selector argument originalColor '	classVariableNames: 'ColorChart DragBox FeedbackBox RevertBox TransparentBox '	poolDictionaries: ''	category: 'Morphic-Widgets'!!ActorState methodsFor: 'pen' stamp: 'di 9/3/1999 09:16'!choosePenColor: evt	evt hand changeColorTarget: owningPlayer costume selector: #penColor: originalColor: owningPlayer penColor.! !!Color methodsFor: 'Morphic menu' stamp: 'di 9/3/1999 10:19'!changeColorIn: aMorph event: evt	"Note: This is just a workaround to make sure we don't use the old color inst var"	evt hand changeColorTarget: aMorph selector: #fillStyle: originalColor: self.! !!ColorPickerMorph class methodsFor: 'as yet unclassified' stamp: 'di 9/3/1999 13:14'!initialize	"ColorPickerMorph initialize"	ColorChart _ Color colorPaletteForDepth: 16 extent: 190@60.	DragBox _  (11@0) extent: 9@8.	RevertBox _ (ColorChart width - 20)@1 extent: 9@8.	FeedbackBox _ (ColorChart width - 10)@1 extent: 9@8.	TransparentBox _ DragBox topRight corner: RevertBox bottomLeft.		ColorChart fillBlack: ((DragBox left - 1)@0 extent: 1@9).		ColorChart fillBlack: ((TransparentBox left)@0 extent: 1@9).		ColorChart fillBlack: ((FeedbackBox left - 1)@0 extent: 1@9).		ColorChart fillBlack: ((RevertBox left - 1)@0 extent: 1@9).		(Form dotOfSize: 5) displayOn: ColorChart at: DragBox center + (0@1).		! !!GradientFillStyle methodsFor: 'Morphic menu' stamp: 'di 9/3/1999 11:32'!changeColorSelector: aSymbol hand: aHand morph: aMorph originalColor: originalColor	ColorPickerMorph new		sourceHand: aHand;		target: self;		selector: aSymbol;		argument: aMorph;		originalColor: originalColor;		addToWorld: aMorph world			near: aMorph fullBounds! !!GradientFillStyle methodsFor: 'Morphic menu' stamp: 'di 9/3/1999 11:34'!changeFirstColorIn: aMorph event: evt	^self changeColorSelector: #firstColor:forMorph:hand: hand: evt hand morph: aMorph originalColor: colorRamp first value! !!GradientFillStyle methodsFor: 'Morphic menu' stamp: 'di 9/3/1999 11:34'!changeSecondColorIn: aMorph event: evt	^self changeColorSelector: #lastColor:forMorph:hand: hand: evt hand morph: aMorph originalColor: colorRamp last value! !!Morph methodsFor: 'submorphs-add/remove' stamp: 'di 9/2/1999 15:12'!comeToFront	| outerMorph |	outerMorph _ self topRendererOrSelf.	(outerMorph owner == nil or: [outerMorph owner hasSubmorphs not]) ifTrue: [^ self].	outerMorph owner firstSubmorph == outerMorph ifFalse:		[outerMorph owner addMorphFront: outerMorph]! !!Morph methodsFor: 'menus' stamp: 'di 9/3/1999 10:17'!changeColor	ColorPickerMorph new		sourceHand: self activeHand;		target: self;		selector: #color:;		originalColor: self color;		addToWorld: self world			near: self fullBounds! !!BorderedMorph methodsFor: 'menu' stamp: 'di 9/3/1999 09:17'!changeBorderColor: evt	| aHand |	aHand _ evt ifNotNil: [evt hand] ifNil: [self primaryHand].	aHand changeColorTarget: self selector: #borderColor: originalColor: self borderColor.! !!ColorPickerMorph methodsFor: 'initialization' stamp: 'di 9/3/1999 13:15'!buildChartForm	| chartForm transText |	chartForm _ ColorChart deepCopy asFormOfDepth: Display depth.	Display depth >= 16 ifTrue:		[chartForm fill: ((TransparentBox left + 9)@0 extent: 1@9) fillColor: Color lightGray.		chartForm fill: ((TransparentBox right - 10)@0 extent: 1@9) fillColor: Color lightGray.		transText _ (Form extent: 63@9 depth: 1   "Where there's a will there's a way..."					fromArray: #( 0 0 4194306 1024 4194306 1024 15628058 2476592640									4887714 2485462016 1883804850 2486772764 4756618									2485462016 4748474 1939416064 0 0)					offset: 0@0).		transText displayOn: chartForm at: 62@0.		Display depth = 32 ifTrue:			["Set opaque bits for 32-bit display"			chartForm fill: chartForm boundingBox rule: Form under					fillColor: (Color r: 0.0 g: 0.0 b: 0.0 alpha: 1.0)]].	chartForm borderWidth: 1.	self form: chartForm.! !!ColorPickerMorph methodsFor: 'accessing' stamp: 'ar 6/25/1999 11:33'!argument	^argument! !!ColorPickerMorph methodsFor: 'accessing' stamp: 'ar 6/25/1999 11:33'!argument: anObject	argument _ anObject! !!ColorPickerMorph methodsFor: 'accessing' stamp: 'di 9/3/1999 10:08'!originalColor: aColor	originalColor _ aColor.	originalForm fill: RevertBox fillColor: originalColor! !!ColorPickerMorph methodsFor: 'event handling' stamp: 'di 9/3/1999 13:33'!mouseDown: evt	(DragBox containsPoint: evt cursorPoint - self topLeft)		ifTrue: [^ evt hand grabMorph: self].	self comeToFront.	sourceHand _ evt hand.	self startStepping.! !!ColorPickerMorph methodsFor: 'private' stamp: 'di 9/3/1999 13:27'!pickColorAt: aPoint 	| worldBox globalP c alpha localPt |	localPt _ aPoint - self topLeft.	(FeedbackBox containsPoint: localPt) ifTrue: [^ self].	(RevertBox containsPoint: localPt)		ifTrue: [^ self updateColor: originalColor feedbackColor: originalColor].	"pick up color, either inside or outside this world"	worldBox _ self world viewBox.	globalP _ aPoint + worldBox topLeft.	"get point in screen coordinates"	(worldBox containsPoint: globalP)		ifTrue: [c _ self world colorAt: aPoint belowMorph: Morph new]		ifFalse: [c _ Display colorAt: globalP].	"check for transparent color and update using appropriate feedback color "	(TransparentBox containsPoint: localPt)		ifTrue: [Display depth >= 16				ifTrue: 					[alpha _ (aPoint x - bounds left - TransparentBox left - 10) asFloat /							(TransparentBox width - 20)							min: 1.0 max: 0.0.					"(alpha roundTo: 0.01) printString , '   ' displayAt: 0@0." " -- debug"					self updateColor: (selectedColor alpha: alpha)						feedbackColor: (selectedColor alpha: alpha)]				ifFalse: [self updateColor: Color transparent feedbackColor: Color white]]		ifFalse: [self updateColor: ((selectedColor isColor and: [selectedColor isTranslucentColor])					ifTrue: [c alpha: selectedColor alpha]					ifFalse: [c])				feedbackColor: c]! !!ColorPickerMorph methodsFor: 'other' stamp: 'di 9/3/1999 18:17'!addToWorld: world near: box	| goodLocation |	goodLocation _ self bestPositionNear: box inWorld: world.	ColorPickerMorph allInstancesDo:		[:p | (p ~~ self and: [p owner notNil and: [p target == target]]) ifTrue:			[(p selector == selector and: [p argument == argument])				ifTrue: [^ p comeToFront  "uncover existing picker"]				ifFalse: ["place second picker relative to first"						goodLocation _ self bestPositionNear: p bounds inWorld: world]]].	self position: goodLocation.	world addMorphFront: self.	self changed! !!ColorPickerMorph methodsFor: 'other' stamp: 'di 9/2/1999 18:23'!bestPositionNear: box inWorld: world	| points b |	points _ #(topCenter rightCenter bottomCenter leftCenter).  "possible anchors"	1 to: 4 do:		[:i |  "Try the four obvious anchor points"		b _ self bounds align: (self bounds perform: (points at: i))					with: (box perform: (points atWrap: i + 2)).		(world bounds containsRect: b) ifTrue:			[^ b topLeft"  Yes, it fits"]].	^ 20@20  "when all else fails"! !!ColorPickerMorph methodsFor: 'other' stamp: 'di 9/3/1999 13:34'!drawOn: aCanvas	aCanvas depth = 1 ifTrue: [aCanvas fillRectangle: self bounds color: Color white].	Display depth = originalForm depth ifFalse: [self buildChartForm].	super drawOn: aCanvas! !!ColorTileMorph methodsFor: 'events' stamp: 'di 9/3/1999 09:19'!mouseUp: evt	evt hand changeColorTarget: colorSwatch selector: #userSelectedColor: originalColor: colorSwatch color! !!FatBitsPaint methodsFor: 'menu' stamp: 'di 9/3/1999 09:21'!setPenColor: evt	evt hand changeColorTarget: self selector: #brushColor: originalColor: brushColor.! !!FlexMorph methodsFor: 'as yet unclassified' stamp: 'di 9/3/1999 09:50'!changeBorderColor: evt	| aHand |	aHand _ evt ifNotNil: [evt hand] ifNil: [self primaryHand].	aHand changeColorTarget: self selector: #borderColor: originalColor: self borderColor.! !!GradientFillMorph methodsFor: 'as yet unclassified' stamp: 'di 9/3/1999 09:25'!setGradientColor: evt	evt hand changeColorTarget: self selector: #gradientFillColor: originalColor: fillColor2.! !!HandMorph methodsFor: 'world menu commands' stamp: 'di 9/3/1999 09:28'!changeBackgroundColor	self changeColorTarget: self world selector: #color: originalColor: self world color.! !!HandMorph methodsFor: 'world menu commands' stamp: 'di 9/3/1999 10:48'!changeColorForMorph: aMorph target: target selector: aSymbol originalColor: aColor	ColorPickerMorph new		sourceHand: self;		target: target;		selector: aSymbol;		originalColor: aColor;		addToWorld: self world near: aMorph fullBounds! !!HandMorph methodsFor: 'world menu commands' stamp: 'di 9/3/1999 10:47'!changeColorTarget: target forMorph: aMorph selector: aSymbol originalColor: aColor	ColorPickerMorph new		sourceHand: self;		target: target;		selector: aSymbol;		originalColor: aColor;		addToWorld: self world near: aMorph fullBounds! !!HandMorph methodsFor: 'world menu commands' stamp: 'di 9/3/1999 09:15'!changeColorTarget: aMorph selector: aSymbol	^ self changeColorTarget: aMorph selector: aSymbol originalColor: Color white! !!HandMorph methodsFor: 'world menu commands' stamp: 'di 9/3/1999 10:19'!changeColorTarget: aMorph selector: aSymbol originalColor: aColor	ColorPickerMorph new		sourceHand: self;		target: aMorph;		selector: aSymbol;		originalColor: aColor;		addToWorld: self world			near: (aMorph					ifNil: [Rectangle center: self position extent: 50]					ifNotNil: [aMorph fullBounds])! !!MultiuserTinyPaint methodsFor: 'menu' stamp: 'di 9/3/1999 09:34'!setPenColor: evt	| state |	(drawState includesKey: evt hand) ifFalse: [self createDrawStateFor: evt hand].	state _ drawState at: evt hand.	evt hand changeColorTarget: self selector: #brushColor:hand: originalColor: (state at: PenColorIndex).! !!Player methodsFor: 'pen' stamp: 'di 9/3/1999 09:42'!choosePenColor: evt	evt hand changeColorTarget:  self costume  selector: #penColor: originalColor: self getPenColor! !!TinyPaint methodsFor: 'menu' stamp: 'di 9/3/1999 09:43'!setPenColor: evt	evt hand changeColorTarget: self selector: #brushColor: originalColor: brushColor.! !!UpdatingRectangleMorph methodsFor: 'setting' stamp: 'di 9/3/1999 09:43'!mouseUp: evt	evt hand changeColorTarget: self selector: #setTargetColor: originalColor: color.! !ColorPickerMorph initialize!GradientFillStyle removeSelector: #changeColorSelector:hand:morph:!ColorPickerMorph removeSelector: #bestPositionNear:!ColorPickerMorph removeSelector: #comeToFront!FatBitsPaint removeSelector: #brushColor!GradientFillMorph removeSelector: #setGradientFillColor:!