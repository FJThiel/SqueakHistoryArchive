'From Squeak2.9alpha of 13 June 2000 [latest update: #2915] on 11 November 2000 at 1:44:34 pm'!"Change Set:		202ChgSorterAnnPanes-rhiDate:			10 September 2000Author:			Robert HirschfeldMakes ChangeSorter>>openAsMorphIn:rect: and ChangeSorter>>openView:offsetBy: sensitive to Preferences for #annotationPanes and #optionalButtons.RAA - 27 Nov 2000 - actually I don't see any reference to optionalButtons in here"!!ChangeSorter methodsFor: 'creation' stamp: 'rhi 9/10/2000 10:36'!openAsMorphIn: window rect: rect	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 0.5@0."	| csListHeight msgListHeight baseline csMsgListHeight annoHeight |	contents _ ''.	csListHeight _ 0.25.	msgListHeight _ 0.25.	annoHeight _ 0.05.	csMsgListHeight _ csListHeight + msgListHeight.	self addDependent: window.		"so it will get changed: #relabel"	window addMorph: ((PluggableListMorphByItem on: self				list: #changeSetList				selected: #currentCngSet				changeSelected: #showChangeSetNamed:				menu: #changeSetMenu:shifted:				keystroke: #changeSetListKey:from:)			autoDeselect: false)		frame: (((0@0 extent: 0.5@csListHeight)			scaleBy: rect extent) translateBy: rect origin).	window addMorph: (PluggableListMorphByItem on: self				list: #classList				selected: #currentClassName				changeSelected: #currentClassName:				menu: #classMenu:				keystroke: #classListKey:from:)		frame: (((0.5@0 extent: 0.5@csListHeight)			scaleBy: rect extent) translateBy: rect origin).	window addMorph: ((PluggableListMorphByItem on: self				list: #messageList				selected: #currentSelector				changeSelected: #currentSelector:				menu: #messageMenu:shifted:				keystroke: #messageListKey:from:)			menuTitleSelector: #messageListSelectorTitle)		frame: (((0@csListHeight extent: 1@msgListHeight)			scaleBy: rect extent) translateBy: rect origin).	Preferences useAnnotationPanes		ifFalse:			[baseline _ csMsgListHeight]		ifTrue:			[baseline _ csMsgListHeight + annoHeight.			window addMorph: (	(PluggableTextMorph on: self						text: #annotation accept: nil						readSelection: nil menu: nil)					askBeforeDiscardingEdits: false)				frame: (((0@csMsgListHeight extent: 1@annoHeight)					scaleBy: rect extent) translateBy: rect origin)].	window addMorph: (PluggableTextMorph on: self 				text: #contents accept: #contents:notifying:				readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (((0@baseline extent: 1@(1 - baseline))			scaleBy: rect extent) translateBy: rect origin).! !!ChangeSorter methodsFor: 'creation' stamp: 'rhi 9/10/2000 10:50'!openView: topView offsetBy: offset	"Add a set of change sorter views to the given top view offset by the given amount. To create a single change sorter, call this once with an offset of 0@0. To create a dual change sorter, call it twice with offsets of 0@0 and 360@0."	| classView messageView codeView cngSetListView basePane annoPane annoHeight |	contents _ ''.	annoHeight _ 20.	self addDependent: topView. "so it will get changed: #relabel"	cngSetListView _ PluggableListViewByItem on: self		list: #changeSetList		selected: #currentCngSet		changeSelected: #showChangeSetNamed:		menu: #changeSetMenu:shifted:.	cngSetListView window: ((0@0 extent: 180@100) translateBy: offset).	topView addSubView: cngSetListView.	classView _ PluggableListViewByItem on: self		list: #classList		selected: #currentClassName		changeSelected: #currentClassName:		menu: #classMenu:		keystroke: #classListKey:from:.	classView window: ((0@0 extent: 180@100) translateBy: offset).	topView addSubView: classView toRightOf: cngSetListView.	messageView _ PluggableListViewByItem on: self		list: #messageList		selected: #currentSelector		changeSelected: #currentSelector:		menu: #messageMenu:shifted:		keystroke: #messageListKey:from:.	messageView menuTitleSelector: #messageListSelectorTitle.	messageView window: ((0@0 extent: 360@100) translateBy: offset).	topView addSubView: messageView below: cngSetListView.	Preferences useAnnotationPanes		ifFalse:			[basePane _ messageView]		ifTrue:			[annoPane _ PluggableTextView on: self				text: #annotation				accept: nil				readSelection: nil				menu: nil.			annoPane window: ((0@0 extent: 360@annoHeight) translateBy: offset).			topView addSubView: annoPane below: messageView.			basePane _ annoPane].	codeView _ PluggableTextView on: self 		text: #contents		accept: #contents:notifying:		readSelection: #contentsSelection		menu: #codePaneMenu:shifted:.	codeView window: ((0 @ 0 extent: 360 @ 180) translateBy: offset).	topView addSubView: codeView below: basePane.! !