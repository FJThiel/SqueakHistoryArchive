'From Squeak3.1alpha of 28 February 2001 [latest update: #4109] on 1 June 2001 at 1:44:35 am'!"Change Set:		pianoRollClickFix-jmDate:			1 June 2001Author:			John MaloneyRemoves clicks and other artifacts when mousing on chords in a PianoRollMorph."!!PianoRollNoteMorph methodsFor: 'note playing' stamp: 'jm 6/1/2001 01:29'!soundOfDuration: duration	| sound |	sound _ MixedSound new.	sound add: (self noteOfDuration: duration)		pan: (owner scorePlayer panForTrack: trackIndex)		volume: owner scorePlayer overallVolume *				(owner scorePlayer volumeForTrack: trackIndex).	^ sound reset! !!PianoRollScoreMorph methodsFor: 'event handling' stamp: 'jm 6/1/2001 01:30'!mouseDown: evt	| noteMorphs chordRect sound |	(self notesInRect: ((evt cursorPoint extent: 1@0) expandBy: 2@30)) isEmpty		ifTrue: ["If not near a note, then put up score edit menu"				^ self invokeScoreMenu: evt].	"Clicked near (but not on) a note, so play all notes at the cursor time"	noteMorphs _ self notesInRect: ((evt cursorPoint extent: 1@0) expandBy: 0@self height).	chordRect _ (self innerBounds withLeft: evt cursorPoint x) withWidth: 1.	soundsPlayingMorph _ Morph newBounds: chordRect color: Color green.	self addMorphBack: soundsPlayingMorph.		soundsPlaying _ IdentityDictionary new.	noteMorphs do:		[:m | sound _ m soundOfDuration: 999.0.		soundsPlaying at: m put: sound.		SoundPlayer resumePlaying: sound quickStart: false].! !!PianoRollScoreMorph methodsFor: 'event handling' stamp: 'jm 6/1/2001 01:30'!mouseMove: evt	| noteMorphs chordRect sound |	soundsPlaying ifNil: [^ self].	self autoScrollForX: evt cursorPoint x.	"Play all notes at the cursor time"	noteMorphs _ self notesInRect: ((evt cursorPoint extent: 1@0) expandBy: 0@self height).	chordRect _ (self innerBounds withLeft: evt cursorPoint x) withWidth: 1.	soundsPlayingMorph delete.	soundsPlayingMorph _ Morph newBounds: chordRect color: Color green.	self addMorphBack: soundsPlayingMorph.		noteMorphs do:		[:m |  "Add any new sounds"		(soundsPlaying includesKey: m)			ifFalse: [sound _ m soundOfDuration: 999.0.					soundsPlaying at: m put: sound.					SoundPlayer resumePlaying: sound quickStart: false]].	soundsPlaying keys do:		[:m |  "Remove any sounds no longer in selection."		(noteMorphs includes: m)			ifFalse: [(soundsPlaying at: m) stopGracefully.					soundsPlaying removeKey: m]].! !