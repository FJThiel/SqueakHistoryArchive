'From Squeak 2.2beta of Sept 16, 1998 on 16 September 1998 at 10:31:42 am'!!HTTPSocket methodsFor: 'all' stamp: 'tk 9/16/1998 06:20'!getRestOfBuffer: beginning totalLength: length	"Reel in a string of a fixed length.  Part of it has already been received.  Close the connection after all chars are received.  We do not strip out linefeed chars.  tk 6/16/97 22:32" 	"if length is nil, read until connection close"	| buf response bytesRead |	buf _ String new: (length ifNil: [ 2000 ]).	response _ RWBinaryOrTextStream on: buf.	response nextPutAll: beginning.	buf _ String new: (length ifNil: [ 2000 ]).	[(length isNil ifTrue: [ true ] ifFalse: [response position < length]) 	 & (self dataAvailable | self isConnected)] 	whileTrue: [		[self isConnected and: [(self waitForDataUntil: (Socket deadlineSecs: 5)) not]] 			whileTrue: [Transcript show: 'data was slow'; cr].		bytesRead _ self primSocket: socketHandle receiveDataInto: buf startingAt: 1 			count: (length isNil ifTrue: [ buf size ] ifFalse: [ length - response size ]). 		bytesRead > 0 ifTrue: [  			response nextPutAll: (buf copyFrom: 1 to: bytesRead)] ].	Transcript cr; show: 'data byte count: ', response position printString.	Transcript cr; show: ((self isConnected) ifTrue: ['Over length by: ', bytesRead printString] 		ifFalse: ['Socket closed']). 	"response text.	is already a text stream"	response reset.	"position: 0."	^ response! !!TextURL methodsFor: 'as yet unclassified' stamp: 'tk 9/16/1998 06:17'!actOnClickFor: anObject	"Do what you can with this URL.  Later a web browser."	| response m browser | 		"if it's a web browser, tell it to jump"		anObject isWebBrowser ifTrue: [			anObject jumpToUrl: url.			^true ].		"if it's a morph, see if it is contained in a web browser"		(anObject isKindOf: Morph) ifTrue: [			m _ anObject.			[ m ~= nil ] whileTrue: [				(m isWebBrowser) ifTrue: [ 					m  jumpToUrl: url.  					^true ].				(m hasProperty: #webBrowserView) ifTrue: [					m model jumpToUrl: url.					^true ].				m _ m owner. ]		].	"no browser in sight.  ask if we should start a new browser"	(self confirm: 'open a browser to view this URL?') ifTrue: [		browser _ Scamper new.		browser jumpToUrl: url.		browser openAsMorph.		^self ].		"couldn't display in a browser.  Offer to put up just the source"		response _ (PopUpMenu labels: 'View web page as source\Cancel' withCRs)		startUpWithCaption: 'Couldn''t find a web browser.  View page as source?'.	response = 1 ifTrue: [HTTPSocket httpShowPage: url].	^ true! !