'From Squeak3.5 of ''11 April 2003'' [latest update: #5180] on 16 May 2003 at 12:52:24 am'!!ClassBuilder methodsFor: 'class definition' stamp: 'ar 5/16/2003 00:48'!silentlyMoveInstVarNamed: instVarName from: srcClass to: dstClass after: prevInstVarName	"Move the instvar from srcClass to dstClass.	Do not perform any checks."	| srcVars dstVars dstIndex newClass |	srcVars _ srcClass instVarNames copyWithout: instVarName.	srcClass == dstClass		ifTrue:[dstVars _ srcVars]		ifFalse:[dstVars _ dstClass instVarNames].	dstIndex _ dstVars indexOf: prevInstVarName.	dstVars _ (dstVars copyFrom: 1 to: dstIndex),				(Array with: instVarName),				(dstVars copyFrom: dstIndex+1 to: dstVars size).	instVarMap at: srcClass name put: srcVars.	instVarMap at: dstClass name put: dstVars.	(srcClass inheritsFrom: dstClass) ifTrue:[		newClass _ self reshapeClass: dstClass toSuper: dstClass superclass.		self recompile: false from: dstClass to: newClass mutate: true.	] ifFalse:[		(dstClass inheritsFrom: srcClass) ifTrue:[			newClass _ self reshapeClass: srcClass toSuper: srcClass superclass.			self recompile: false from: srcClass to: newClass mutate: true.		] ifFalse:[ "Disjunct hierarchies"			srcClass == dstClass ifFalse:[				newClass _ self reshapeClass: dstClass toSuper: dstClass superclass.				self recompile: false from: dstClass to: newClass mutate: true.			].			newClass _ self reshapeClass: srcClass toSuper: srcClass superclass.			self recompile: false from: srcClass to: newClass mutate: true.		].	].	self doneCompiling: srcClass.	self doneCompiling: dstClass.! !