'From Squeak 2.2beta of Sept 11, 1998 on 14 September 1998 at 12:03:31 pm'!"Change Set:		MorphicCmdFixes-diDate:			14 September 1998Author:			Dan IngallsSupports prevervation of morphic selection necessary to make various text-editor commands work."!!NewParagraph methodsFor: 'selection' stamp: 'di 9/14/1998 11:43'!defaultStartBlock	selectionStart ifNotNil: [^ selectionStart].	^ (CharacterBlock new stringIndex: firstCharacterIndex text: text			topLeft: lines first topLeft extent: 0 @ 0)		textLine: lines first! !!NewParagraph methodsFor: 'selection' stamp: 'di 9/14/1998 11:45'!defaultStopBlock: aCharacterBlock	selectionStop ifNotNil: [^ selectionStop].	^ aCharacterBlock! !!Paragraph methodsFor: 'character location' stamp: 'di 9/14/1998 11:42'!defaultStartBlock	^ CharacterBlock new stringIndex: 1 text: text			topLeft: compositionRectangle topLeft extent: 0 @ 0! !!Paragraph methodsFor: 'character location' stamp: 'di 9/14/1998 11:45'!defaultStopBlock: aCharacterBlock	^ aCharacterBlock! !!ParagraphEditor methodsFor: 'initialize-release' stamp: 'di 9/14/1998 11:45'!resetState 	"Establish the initial conditions for editing the paragraph: place caret 	before first character, set the emphasis to that of the first character,	and save the paragraph for purposes of canceling."	startBlock _ paragraph defaultStartBlock.	stopBlock _ paragraph defaultStopBlock: startBlock copy.	beginTypeInBlock _ nil.	UndoInterval _ otherInterval _ 1 to: 0.	self setEmphasisHere.	selectionShowing _ false.	initialText _ paragraph text copy! !!TextMorph methodsFor: 'private' stamp: 'di 9/14/1998 11:35'!releaseEditor 	"Release the editor for my paragraph.  This morph no longer 'hasFocus'."	editor ifNotNil:		[self selectionChanged.		editor storeSelectionInParagraph: self paragraph.		editor _ nil].! !!TextMorphEditor methodsFor: 'mvc compatibility' stamp: 'di 9/14/1998 12:02'!storeSelectionInParagraph: aParagraph	paragraph == aParagraph		ifTrue: [self storeSelectionInParagraph]		ifFalse: ["Should never get here."				aParagraph selectionStart: nil selectionStop: nil]! !!TextOnCurve methodsFor: 'all' stamp: 'di 9/14/1998 11:46'!characterBlockAtPoint: aPoint 	"Answer a CharacterBlock for the character in the text at aPoint."	| sourcePoint cb curvePoint |	self textSegmentsDo:		[:line :destRect :segStart :segAngle |		(destRect containsPoint: aPoint) ifTrue:			["It's in the destRect; now convert to source coords"			sourcePoint _ self pointInLine: line forDestPoint: aPoint							segStart: segStart segAngle: segAngle.			cb _ (CharacterBlockScanner new text: text textStyle: textStyle)				characterBlockAtPoint: (sourcePoint adhereTo: line rectangle)				index: nil in: line.			(sourcePoint x between: line left and: line right) ifTrue:				["Definitely in this segment"				^ cb]]].	"Point is off curve -- try again with closest point on curve"	curvePoint _ curve closestPointTo: aPoint.	curvePoint = aPoint ifFalse:		[^ self characterBlockAtPoint: curvePoint].	"If all else fails, at least return something acceptable."	^ cb ifNil: [self defaultStartBlock]! !NewParagraph removeSelector: #defaultCharacterBlock!Paragraph removeSelector: #defaultCharacterBlock!