'From Squeak2.6 of 11 October 1999 [latest update: #1559] on 24 October 1999 at 10:13:37 pm'!"Change Set:		pre-FreeCellDate:			24 October 1999Author:			David PennellSystem changes needed for FreeCell and miscellaneous other changes.1.  Ability to specify the seed when shuffling collections.2.  Restore stepping in SystemWindow when expanding.3.  Morph>>openInWindow and related methods allow any Morph to be opened in a SystemWindow.  Uses RealEstateAgent to locate window and causes AlignmentMorphs to layout"!!Morph methodsFor: 'initialization' stamp: 'djp 10/24/1999 17:13'!openInWindow	^self openInWindowLabeled: self defaultLabelForInspector! !!Morph methodsFor: 'initialization' stamp: 'djp 10/24/1999 17:13'!openInWindowLabeled: aString	^self openInWindowLabeled: aString inWorld: World! !!Morph methodsFor: 'initialization' stamp: 'djp 10/24/1999 17:13'!openInWindowLabeled: aString inWorld: aWorld	| window extent |	window _ (SystemWindow labelled: aString) model: nil.	window 		" guess at initial extent"		bounds:  (RealEstateAgent initialFrameFor: window initialExtent: self fullBounds extent);		addMorph: self frame: (0@0 extent: 1@1);		updatePaneColors.	" calculate extent after adding in case any size related attributes were changed.  Use	fullBounds in order to trigger re-layout of layout morphs"	extent _ self fullBounds extent + 			(window borderWidth@window labelHeight) + window borderWidth.	window extent: extent.	aWorld addMorph: window.	window activate.	aWorld startSteppingSubmorphsOf: window.	^window! !!AlignmentMorph methodsFor: 'initialization' stamp: 'djp 10/24/1999 17:13'!openInWindowLabeled: aString inWorld: aWorld	inset _ 0.	^super openInWindowLabeled: aString inWorld: aWorld.! !!SequenceableCollection methodsFor: 'copying' stamp: 'djp 10/23/1999 22:12'!shuffled	"($A to: $Z) shuffled"	^self shuffledBy: RandomForPicking! !!SequenceableCollection methodsFor: 'copying' stamp: 'djp 10/23/1999 22:12'!shuffledBy: aRandom	| copy | 	copy _ self shallowCopy.	copy size to: 1 by: -1 do: 		[:i | copy swap: i with: ((1 to: i) atRandom: aRandom)].	^ copy! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'djp 10/23/1999 18:54'!collapseOrExpand	isCollapsed	ifTrue:		["Expand -- restore panes to morphics structure"		isCollapsed _ false.		super bounds: fullFrame.		paneMorphs reverseDo: [:m | 			self addMorph: m.			self world startSteppingSubmorphsOf: m].		self activate "-- mainly for findWindow"]	ifFalse:		["Collapse -- remove panes from morphics structure"		isCollapsed _ true.		paneMorphs do: [:m | m delete; releaseCachedState].		model modelSleep.		collapsedFrame			ifNil:	[self extent: (label width + self labelWidgetAllowance) @ (self labelHeight + 2).					self position: (RealEstateAgent assignCollapsePointFor: self)]			ifNotNil: [super bounds: collapsedFrame]]! !