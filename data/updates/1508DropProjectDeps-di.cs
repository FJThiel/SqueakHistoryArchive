'From Squeak 2.5 of August 6, 1999 on 29 September 1999 at 12:12 am'!"Change Set:		Etoys HolderDate:			26 September 1999Author:			Dan IngallsEliminate registration of views as dependents of Projects.  This used to have the bad effect of being an inward pointer into a world which, through owner pointers, tied down most of the morphic structure.  The dependent relationship had only really been used to update labels, and to determine the view loc for project zoom effect.  These are now handled by different mechanisms."!!Project methodsFor: 'menu messages' stamp: 'di 9/26/1999 21:49'!saveState	"Save the current state in me prior to leaving this project"	changeSet _ Smalltalk changes.	world isMorph		ifTrue: [world _ World.				world sleep]		ifFalse: [world _ ScheduledControllers.				ScheduledControllers unCacheWindows].	transcript _ Transcript.	"displayDepth _ Display depth." "ar 6/2/1999: The Display HAS already changed!!"	activeProcess _ nil! !!Project methodsFor: 'menu messages' stamp: 'di 9/29/1999 00:09'!viewLocFor: exitedProject	"Look for a view of the exitedProject, and return its center"	| ctlr |	world isMorph		ifTrue: [world submorphsDo:					[:v | ((v isKindOf: SystemWindow) and: [v model == exitedProject])						ifTrue: [^ v center]]]		ifFalse: [ctlr _ world controllerWhoseModelSatisfies:							[:p | p == exitedProject].				ctlr ifNotNil: [^ ctlr view windowBox center]].	^ Sensor cursorPoint.  "default result"! !!Project methodsFor: 'release' stamp: 'di 9/28/1999 23:46'!addDependent: aMorph	"Projects do not keep track of their dependents, lest they point into other projects and thus foul up the tree structure for image segmentation."	^ self  "Ignore this request"! !!ProjectView methodsFor: 'initialization' stamp: 'di 9/26/1999 22:56'!uncacheBits	super uncacheBits.	self label ~=  model name ifTrue: [self relabel: model name]! !!SystemDictionary methodsFor: 'shrinking' stamp: 'di 9/26/1999 21:44'!zapMVCprojects   "Smalltalk zapMVCprojects"	| window |	Smalltalk garbageCollect.  "So allInstances is precise"	Project allSubInstancesDo:		[:proj |		proj isTopProject		ifTrue: [proj isMorphic ifFalse:					["Root project is MVC -- we must become the root"					Project current setParent: Project current]]		ifFalse: [proj parent isMorphic				ifFalse: [proj isMorphic ifTrue:							["Remove Morphic projects from MVC views"							"... and add them back here."							window _ (SystemWindow labelled: proj name) model: proj.							window addMorph: (ProjectViewMorph on: proj)									frame: (0@0 corner: 1.0@1.0).							window openInWorld.							proj setParent: Project current]].				proj isMorphic					ifFalse: ["Remove MVC projects from Morphic views"							Project allInstancesDo: [:p | p deletingProject: proj].							ProjectViewMorph allInstancesDo: [:p | p deletingProject: proj]]]		]! !!SystemWindow class methodsFor: 'top window' stamp: 'di 9/26/1999 22:48'!noteTopWindowIn: aWorld	| newTop |	"TopWindow must be nil or point to the top window in this project."	TopWindow _ nil.	aWorld ifNil: [^ self].	newTop _ nil.	aWorld submorphsDo:		[:m | (m isKindOf: SystemWindow) ifTrue:			[(newTop == nil and: [m activeOnlyOnTop])				ifTrue: [newTop _ m].			(m model isKindOf: Project)				ifTrue: ["This really belongs in a special ProjWindow class"						m label ~= m model name ifTrue: [m setLabel: m model name]]]].	newTop == nil ifFalse: [newTop activate]! !Project removeSelector: #removeViewFromParent!ProjectView removeSelector: #update:!"Postscript:Eliminate project dependents (they interfere with swapping out Project windows)."Project allInstancesDo: [:p | p breakDependents].!