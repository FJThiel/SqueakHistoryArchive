'From Squeak2.9alpha of 16 June 2000 [latest update: #2424] on 20 June 2000 at 1:20:24 pm'!"Change Set:		detectCrLf-tkDate:			20 June 2000Author:			Ted KaehlerStuffit Expander 5.0 and other decompression programs have the annoying habit of converting carriage returns into CrLfs.  Detect when there are CrLfs and there are no bare Lfs and warn the user to change the preferences and unpack again.  Checks the two common cases of the Changes file (in a new release of the system) and a SmartRefStream (a project)."!!FileDirectory class methodsFor: 'system start up' stamp: 'tk 6/20/2000 13:20'!openSources: sourcesName andChanges: changesName forImage: imageName 	"Initialize the default directory to the image directory and open the  	sources and changes files, if possible. Look for the changes file in  	image directory. Look for the system sources (or an alias to it) first in  	the VM directory, then in the image directory. Open the changes and  	sources files and install them in SourceFiles."	"Note: SourcesName and imageName are full paths; changesName is a  	local name."	| sources changes sourceAlias msg wmsg localSourcesName |	msg _ 'Squeak cannot locate &fileRef.Please check that the file is named properly and is in thesame directory as this image.  Further explanation can foundin the startup window, ''How Squeak Finds Source Code''.'.	wmsg _ 'Squeak cannot write to &fileRef.Please check that you have write permission for this file.You won''t be able to save this image correctly until you fix this.'.	self setDefaultDirectoryFrom: imageName.	sources _ changes _ nil.	"look for the sources file or an alias to it in the VM's directory"	(DefaultDirectory fileExists: sourcesName)		ifTrue: [sources _ DefaultDirectory readOnlyFileNamed: sourcesName]		ifFalse: 			["look for an un-renamed Macintosh alias to the sources file"			sourceAlias _ sourcesName , ' alias'.			(DefaultDirectory fileExists: sourceAlias)				ifTrue: [sources _ DefaultDirectory readOnlyFileNamed: sourceAlias]].	sources		ifNil: 			["look for the sources file or an alias to it in the image directory"			localSourcesName _ FileDirectory localNameFor: sourcesName.			(DefaultDirectory fileExists: localSourcesName)				ifTrue: [sources _ DefaultDirectory readOnlyFileNamed: localSourcesName]				ifFalse: 					["look for an un-renamed Macintosh alias to the sources  					file"					sourceAlias _ localSourcesName , ' alias'.					(DefaultDirectory fileExists: sourceAlias)						ifTrue: [sources _ DefaultDirectory readOnlyFileNamed: sourceAlias]]].	(DefaultDirectory fileExists: changesName)		ifTrue: 			[changes _ DefaultDirectory oldFileNamed: changesName.			changes isNil				ifTrue: 					[PopUpMenu notify: (wmsg copyReplaceAll: '&fileRef' with: 'the changes file named ' , changesName).					changes _ DefaultDirectory readOnlyFileNamed: changesName]].	((sources == nil or: [sources atEnd])		and: [Preferences valueOfFlag: #warnIfNoSourcesFile])		ifTrue: 			[PopUpMenu notify: (msg copyReplaceAll: '&fileRef' with: 'the sources file named ' , sourcesName).			(Smalltalk getSystemAttribute: 1001)				= 'Mac OS' ifTrue: [PopUpMenu notify: 'Make sure the sources file is not an Alias.']].	(changes == nil and: [Preferences valueOfFlag: #warnIfNoChangesFile])		ifTrue: [PopUpMenu notify: (msg copyReplaceAll: '&fileRef' with: 'the changes file named ' , changesName)].	(Preferences valueOfFlag: #warnIfNoChangesFile) ifTrue: [		((changes next: 200) includesSubString: String crlf) ifTrue: [			PopUpMenu notify: 'The changes file named ' , changesName, 'has been injured by an unpacking utility.  Crs were changed to CrLfs.Please set the preferences in your decompressing program to "do not convert text files" and unpack the system again.']].	SourceFiles _ Array with: sources with: changes! !!SmartRefStream methodsFor: 'read write' stamp: 'tk 6/19/2000 21:22'!checkCrLf	| save isCrLf cc prev loneLf |	"Watch for a file that has had all of its Cr's converted to CrLf's.  Some unpacking programs like Stuffit 5.0 do this by default!!"	save _ byteStream position.	isCrLf _ false.  loneLf _ false.	cc _ 0.	350 timesRepeat: [		prev _ cc.		(cc _ byteStream next) = 16r0A "Lf" ifTrue: [			prev = 16r0D "Cr" ifTrue: [isCrLf _ true] ifFalse: [loneLf _ true]].		].	isCrLf & (loneLf not) ifTrue: [		self inform: 'Carriage Returns in this file were converted to CrLfs by an evil unpacking utility.  Please set the preferences in StuffIt Expander to "do not convert file formats"'].	byteStream position: save.! !!SmartRefStream methodsFor: 'read write' stamp: 'tk 6/19/2000 17:06'!next	"Really write three objects: (version, class structure, object). But only when called from the outside.  "	| version ss object |	^ topCall == nil 		ifTrue: 			[topCall _ #marked.			version _ super next.			version class == SmallInteger ifFalse: [^ version].					"version number, else just a regular object, not in our format, "			self checkCrLf.			ss _ super next.			ss class == Array ifFalse: [^ ss].  "just a regular object"			(ss at: 1) = 'class structure' ifFalse: [^ ss].			structures _ ss at: 2.			superclasses _ (ss size > 3 and: [(ss at: 3) = 'superclasses']) 				ifTrue: [ss at: 4]		"class name -> superclass name"				ifFalse: [Dictionary new].			(self verifyStructure = 'conversion method needed') ifTrue: [^ nil].			object _ super next.	"all the action here"			self restoreClassInstVars.		"for UniClasses. version 4"			topCall _ nil.	"reset it"			object]		ifFalse:			[super next]! !