'From Squeak 2.3 of January 14, 1999 on 14 January 1999 at 11:13:52 am'!"Change Set:		jhmSampledSndDate:			14 January 1999Author:			John MaloneyMake SampledSound use the AIFF file reader toread sample data rather than its old hack."!!AIFFFileReader methodsFor: 'other' stamp: 'jm 1/14/1999 10:12'!play	"Play the sound represented by this AIFFFileReader. This method should be called only after readFrom: has been done."	self sound play.! !!AIFFFileReader methodsFor: 'other' stamp: 'jm 1/14/1999 10:11'!sound	"Answer the sound represented by this AIFFFileReader. This method should be called only after readFrom: has been done."	| snd rightSnd |	snd _ SampledSound		samples: (channelData at: 1)		samplingRate: samplingRate.	self isStereo ifTrue: [		rightSnd _ SampledSound			samples: (channelData at: 2)			samplingRate: samplingRate.		snd _ MixedSound new			add: snd pan: 0;			add: rightSnd pan: 1.0].	^ snd! !!GraphMorph methodsFor: 'script support' stamp: 'jm 1/14/1999 10:45'!readDataFromFile	| fileName |	fileName _ FillInTheBlank		request: 'File name?'		initialAnswer: ''.	fileName isEmpty ifTrue: [^ self].	(StandardFileStream isAFileNamed: fileName) ifFalse: [		^ self inform: 'Sorry, I cannot find that file'].	data _ (SampledSound fromAIFFfileNamed: fileName) samples.	self flushCachedForm.! !!RecordingControlsMorph methodsFor: 'button commands' stamp: 'jm 1/14/1999 10:39'!makeTile	| newStyleTile sndName tile |	recorder pause.	newStyleTile _ true.	newStyleTile		ifTrue: [			sndName _ FillInTheBlank				request: 'Please enter a name this sound'				initialAnswer: 'sound'.			sndName isEmpty ifTrue: [^ self].			sndName _ SampledSound unusedSoundNameLike: sndName.			SampledSound				addLibrarySoundNamed: sndName				samples: recorder condensedSamples				samplingRate: recorder samplingRate.			tile _ SoundTile new literal: sndName]		ifFalse: [			tile _ InterimSoundMorph new sound: 				(SampledSound					samples: recorder condensedSamples					samplingRate: recorder samplingRate)].	self world hands first attachMorph: tile.! !!SampledSound class methodsFor: 'instance creation' stamp: 'jm 1/14/1999 10:34'!fromAIFFfileNamed: fileName	"Read a SampledSound from the AIFF file of the given name, merging stereo to mono if necessary."	"(SampledSound fromAIFFfileNamed: '1.aif') play"	"| snd |	 FileDirectory default fileNames do: [:n |		(n endsWith: '.aif')			ifTrue: [				snd _ SampledSound fromAIFFfileNamed: n.				snd play.				SoundPlayer waitUntilDonePlaying: snd]]."	| aiffFileReader |	aiffFileReader _ AIFFFileReader new.	aiffFileReader readFromFile: fileName		mergeIfStereo: true		skipDataChunk: false.	^ self		samples: (aiffFileReader channelData at: 1)		samplingRate: aiffFileReader samplingRate! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 10:59'!addLibrarySoundNamed: aString fromAIFFfileNamed: fileName	"Add a sound from the given AIFF file to the library."	"SampledSound		addLibrarySoundNamed: 'shutterClick'		fromAIFFfileNamed: '7.aif'"	"Add all .aif files in the current directory to the sound library:	| fileNames |	fileNames _ FileDirectory default fileNamesMatching: '*.aif'.	fileNames do: [:fName |		SampledSound			addLibrarySoundNamed: (fName copyUpTo: $.)			fromAIFFfileNamed: fName]"	| snd |	snd _ self fromAIFFfileNamed: fileName.	self addLibrarySoundNamed: aString		samples: snd samples		samplingRate: snd originalSamplingRate.! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 10:41'!addLibrarySoundNamed: aString samples: sampleData samplingRate: samplesPerSecond	"Add the given sound to the sound library. The sample data may be either a ByteArray or a SoundBuffer. If the former, it is take to be 8-bit unsigned samples. If the latter, it is taken to be 16 bit signed samples."	SoundLibrary		at: aString		put: (Array with: sampleData with: samplesPerSecond).! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 11:04'!playSoundNamed: aString	"Play the sound with given name. Do nothing if there is no sound of that name in the library."	"SampledSound playSoundNamed: 'croak'"	| snd |	snd _ self soundNamed: aString.	snd ifNotNil: [snd play].	^ snd! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 10:40'!putCoffeeCupClinkInSoundLibrary	"SampledSound putCoffeeCupClinkInSoundLibrary"	self addLibrarySoundNamed: 'clink'		samples: self coffeeCupClink		samplingRate: 11025! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 11:06'!soundLibrary	"Answer the sound library dictionary."	^ SoundLibrary! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 11:07'!soundNamed: aString	"Answer the sound of the given name, or nil if there is no sound of that name."	"(SampledSound soundNamed: 'shutterClick') play"	| entry samples |	entry _ SoundLibrary		at: aString		ifAbsent:			[self inform: aString, ' not found in the Sound Library'.			^ nil].	entry ifNil: [^ nil].	samples _ entry at: 1.	samples class isBytes ifTrue: [samples _ self convert8bitSignedTo16Bit: samples].	^ self samples: samples samplingRate: (entry at: 2)! !!SampledSound class methodsFor: 'sound library' stamp: 'jm 1/14/1999 11:08'!soundNames	"Answer a list of sound names for the sounds stored in the sound library."	"| s |	 SampledSound soundNames asSortedCollection do: [:n |		n asParagraph display.		s _ SampledSound soundNamed: n.		s ifNotNil: [s playAndWaitUntilDone]]"	^ SoundLibrary keys asArray! !SampledSound class removeSelector: #rawDataFromAIFFfileNamed:!SampledSound class removeSelector: #fromAIFFfileNamed:samplingRate:!SampledSound class removeSelector: #readLibrarySoundsFromDisk!SampledSound class removeSelector: #from16BitAIFFfileNamed:samplingRate:!SampledSound class removeSelector: #addLibrarySoundNamed:samples:sampleRate:!SampledSound class removeSelector: #addLibrarySoundNamed:fromAIFFfileNamed:sampleRate:!SampledSound class removeSelector: #readTrimmedSamplesFromAIFF:!SampledSound class removeSelector: #atSoundLibraryKey:put:!