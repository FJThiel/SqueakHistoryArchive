'From Squeak2.9alpha of 17 July 2000 [latest update: #3187] on 19 December 2000 at 9:44:03 am'!"Change Set:		lessDelayDate:			18 December 2000Author:			Bob Arningmake pluggable lists a little more responsive:- do not highlight the mouseDown state unless dragging is enabled.- do not enable the double-click handler unless there is a method to process it"!!Debugger methodsFor: 'initialize' stamp: 'RAA 12/19/2000 09:40'!openFullMorphicLabel: labelString	| window aListMorph codeTop aTextMorph |	self expandStack.	window _ (SystemWindow labelled: labelString) model: self.	aListMorph _ PluggableListMorph on: self list: #contextStackList			selected: #contextStackIndex changeSelected: #toggleContextStackIndex:			menu: #contextStackMenu:shifted: keystroke: #contextStackKey:from:.	aListMorph menuTitleSelector: #messageListSelectorTitle.	window addMorph: aListMorph		frame: (0@0 corner: 1@0.3).	Preferences useAnnotationPanes		ifFalse:			[codeTop _ 0.3]		ifTrue:			[aTextMorph _ PluggableTextMorph on: self					text: #annotation accept: nil					readSelection: nil menu: nil.			aTextMorph askBeforeDiscardingEdits: false.			window addMorph: aTextMorph				frame: (0@0.3 corner: 1@0.35).			codeTop _ 0.35].	Preferences optionalButtons ifTrue:		[window addMorph: self optionalButtonRow frame: ((0@codeTop corner: 1 @ (codeTop + 0.1))).		codeTop _ codeTop + 0.1].	window addMorph: (PluggableTextMorph on: self			text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0 @ codeTop corner: 1 @ 0.7).	window addMorph: (		PluggableListMorph new			doubleClickSelector: #inspectSelection;			on: self receiverInspector list: #fieldList			selected: #selectionIndex changeSelected: #toggleIndex:			menu: #fieldListMenu: keystroke: #inspectorKey:from:)		frame: (0@0.7 corner: 0.2@1).	window addMorph: (PluggableTextMorph on: self receiverInspector			text: #contents accept: #accept:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0.2@0.7 corner: 0.5@1).	window addMorph: (		PluggableListMorph new			doubleClickSelector: #inspectSelection;			on: self contextVariablesInspector list: #fieldList			selected: #selectionIndex changeSelected: #toggleIndex:			menu: #fieldListMenu: keystroke: #inspectorKey:from:)		frame: (0.5@0.7 corner: 0.7@1).	window addMorph: (PluggableTextMorph on: self contextVariablesInspector			text: #contents accept: #accept:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0.7@0.7 corner: 1@1).	^ window openInWorld! !!Inspector class methodsFor: 'instance creation' stamp: 'RAA 12/19/2000 09:41'!openAsMorphOn: anObject withLabel: aLabel	"(Inspector openAsMorphOn: SystemOrganization) openInMVC"	| window inspector |	inspector _ self inspect: anObject.	window _ (SystemWindow labelled: aLabel) model: inspector.	window addMorph: (		PluggableListMorph new			doubleClickSelector: #inspectSelection;			on: inspector list: #fieldList			selected: #selectionIndex			changeSelected: #toggleIndex:			menu: ((inspector isMemberOf: DictionaryInspector)					ifTrue: [#dictionaryMenu:]					ifFalse: [#fieldListMenu:])			keystroke: #inspectorKey:from:)		frame: (0@0 corner: self horizontalDividerProportion @ self verticalDividerProportion).	window addMorph: (PluggableTextMorph on: inspector text: #contents accept: #accept:				readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (self horizontalDividerProportion @0 corner: 1@self verticalDividerProportion).	window addMorph: ((PluggableTextMorph on: inspector text: #trash accept: #trash:				readSelection: #contentsSelection menu: #codePaneMenu:shifted:)					askBeforeDiscardingEdits: false)		frame: (0@self verticalDividerProportion corner: 1@1).	window setUpdatablePanesFrom: #(fieldList).	window position: 16@0.  "Room for scroll bar."	^ window! !!PluggableListMorph methodsFor: 'events' stamp: 'RAA 12/18/2000 19:51'!mouseDown: event onItem: aMorph	event yellowButtonPressed ifTrue: [^ self yellowButtonActivity: event shiftPressed].	aMorph ifNotNil: [		self dragEnabled ifTrue: [aMorph highlightForMouseDown]	]! !!PluggableListMorph methodsFor: 'drag and drop' stamp: 'RAA 12/18/2000 19:51'!installEventHandlerOn: morphList	| handler |	handler _ EventHandler new.	handler		on: #mouseDown send: #mouseDown:onItem: to: self;		on: #mouseUp send: #mouseUp:onItem: to: self.	doubleClickSelector ifNotNil: [		handler on: #doubleClick send: #doubleClick:onItem: to: self.	].	self dragEnabled		ifTrue: [handler				on: #startDrag				send: #startDrag:onItem:				to: self].	self dropEnabled		ifTrue: 			[handler				on: #mouseEnterDragging				send: #mouseEnterDragging:onItem:				to: self.			handler				on: #mouseLeaveDragging				send: #mouseLeaveDragging:onItem:				to: self].	morphList do: [:m | m eventHandler: handler].! !!PointerFinder methodsFor: 'morphic ui' stamp: 'RAA 12/19/2000 09:42'!open	| window list |	window _ (SystemWindow labelled: 'Pointer Finder')		model: self.	list _ PluggableListMorph new		doubleClickSelector: #inspectObject;		on: self		list: #pointerList		selected: #pointerListIndex		changeSelected: #pointerListIndex:		menu: #menu:shifted:.	window addMorph: list frame: (0@0 extent: 1@1).	list color: Color lightMagenta.	window openInWorld! !