'From Squeak3.1alpha of 28 February 2001 [latest update: #3786] on 5 March 2001 at 1:59:48 pm'!"Change Set:		toneDownWarning-swDate:			5 March 2001Author:			Scott WallaceTone down the overly-alarmist warning put up when the user attempts to switch universalTiles preference to false."!!Preferences class methodsFor: 'preferences dictionary' stamp: 'sw 3/5/2001 13:20'!largeTilesSettingToggled	"The current value of the largeTiles flag has changed; now react"	Smalltalk isMorphic ifTrue:		[Preferences universalTiles			ifFalse:				[self inform: 'note that this will only have a noticeableeffect if the universalTiles preference isset to true, which it currently is not']			ifTrue:				[World recreateScripts]]! !!Preferences class methodsFor: 'preferences dictionary' stamp: 'sw 3/5/2001 13:04'!noteThatFlag: prefSymbol justChangedTo: aBoolean 	"Provides a hook so that a user's toggling of a preference might precipitate some immediate action"	| keep |	prefSymbol == #useGlobalFlaps ifTrue:		[aBoolean			ifFalse:		"Turning off use of flaps"				[keep _ self confirm:'Do you want to preserve the existingglobal flaps for future use?'.				Utilities globalFlapTabsIfAny do:					[:aFlapTab | Utilities removeFlapTab: aFlapTab keepInList: keep.					aFlapTab isInWorld ifTrue: [self error: 'Flap problem']].				keep ifFalse: [Utilities clobberFlapTabList]]			ifTrue:		"Turning on use of flaps"				[Smalltalk isMorphic ifTrue:					[self currentWorld enableGlobalFlaps]]].	prefSymbol == #roundedWindowCorners ifTrue: [Display repaintMorphicDisplay].	prefSymbol == #optionalButtons ifTrue:		[Utilities replacePartSatisfying: [:el | (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isKindOf: FileList]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  FileList openAsMorph applyModelExtent].	(prefSymbol == #optionalButtons  or: [prefSymbol == #annotationPanes]) ifTrue:		[Utilities replaceBrowserInToolsFlap].	(prefSymbol == #smartUpdating) ifTrue:		[SystemWindow allSubInstancesDo:			[:aWindow | aWindow amendSteppingStatus]].	(prefSymbol == #eToyFriendly) ifTrue:		[ScriptingSystem customizeForEToyUsers: aBoolean].	((prefSymbol == #infiniteUndo) and: [aBoolean not]) ifTrue:		[CommandHistory resetAllHistory].	(prefSymbol == #showProjectNavigator) ifTrue:		[Project current assureNavigatorPresenceMatchesPreference].	(prefSymbol == #largeTiles) ifTrue:		[^ self largeTilesSettingToggled].	prefSymbol == #universalTiles ifTrue:		[^ self universalTilesSettingToggled]! !!Preferences class methodsFor: 'preferences dictionary' stamp: 'sw 3/5/2001 13:00'!universalTilesSettingToggled	"The current value of the universalTiles flag has changed; now react"	(self isProjectPreference: #universalTiles) ifFalse:			[^ self inform: 'This is troubling -- you may regret having done that, becausethe change will apply to *all projects*, including pre-existing ones.  Unfortunately this check is done after the damage is done, so youmay be hosed.  Fortunately, however, you can simply reverse your choice right now and perhaps no deep damage will have been done.'].	self universalTiles  "User just switched project to classic tiles"		ifFalse:			[self inform: 'CAUTION -- if you had any scripted objects inthis project that already used universal tiles, there is no reasonable way to go back to classictiles.  Recommended course of action in that case:just toggle this preference right back to true.']		ifTrue:			[Preferences capitalizedReferences ifFalse:				[Preferences enable: #capitalizedReferences.				self inform: 'Note that the "capitalizedReferences" flaghas now been automatically set to true foryou, since this is required for the use ofuniversal tiles.'].			World isMorph ifTrue:				[World recreateScripts]]! !