'From Squeak2.9alpha of 26 July 2000 [latest update: #2554] on 1 September 2000 at 11:13:25 am'!"Change Set:		chgSorterKeys-swDate:			31 August 2000Author:			Scott WallaceAdds accelerator keys for the changeset-list pane of a change sorter, as follows:	cmd-b	Browse methods of change set.	cmd-c	Make changes go to me	cmd-f	Find a change set by name	cmd-n	reName change set	cmd-o	file Out change set	cmd-p	add or change the Preamble	cmd-x	destroy change set"!!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 8/31/2000 10:02'!changeSetListKey: aChar from: view	"Respond to a Command key.  I am a model with a listView that has a list of changeSets."	aChar == $b ifTrue: [^ self browseChangeSet].	aChar == $f ifTrue: [^ self findCngSet].	aChar == $m ifTrue: [^ self newCurrent].	aChar == $n ifTrue: [^ self newSet].	aChar == $o ifTrue: [^ self fileOut].	aChar == $r ifTrue: [^ self rename].	aChar == $x ifTrue: [^ self remove].	aChar == $p ifTrue: [^ self addPreamble].	^ self arrowKey: aChar from: view! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 9/1/2000 06:10'!changeSetMenu: aMenu shifted: isShifted 	"Set up aMenu to hold commands for the change-set-list pane.  This could be for a single or double changeSorter"	aMenu title: 'Change Set:' , myChangeSet name.	isShifted ifTrue: [^ self shiftedChangeSetMenu: aMenu].	aMenu add: 'make changes go to me (m)' action: #newCurrent.	aMenu addLine.	aMenu add: 'new change set... (n)' action: #newSet.	aMenu add: 'find...(f)' action: #findCngSet.	aMenu add: 'show...' action: #chooseCngSet.	aMenu add: 'rename change set (r)' action: #rename.	aMenu addLine.	aMenu add: 'file out (o)' action: #fileOut.	aMenu add: 'mail to list' action: #mailOut.	aMenu add: 'browse methods (b)' action: #browseChangeSet.	aMenu addLine.	parent		ifNotNil: 			[aMenu add: 'copy all to other side' action: #copyAllToOther.			aMenu add: 'submerge into other side' action: #submergeIntoOtherSide.			aMenu add: 'subtract other side' action: #subtractOtherSide.			aMenu addLine].	myChangeSet hasPreamble		ifTrue: 			[aMenu add: 'edit preamble (p)' action: #addPreamble.			aMenu add: 'remove preamble' action: #removePreamble]		ifFalse: [aMenu add: 'add preamble (p)' action: #addPreamble].	myChangeSet hasPostscript		ifTrue: 			[aMenu add: 'edit postscript...' action: #editPostscript.			aMenu add: 'remove postscript' action: #removePostscript]		ifFalse: [aMenu add: 'add postscript...' action: #editPostscript].	aMenu addLine.	aMenu add: 'destroy change set (x)' action: #remove.	aMenu addLine.	aMenu add: 'more...' action: #shiftedYellowButtonActivity.	^ aMenu! !!Utilities class methodsFor: 'flaps' stamp: 'sw 9/1/2000 06:11'!replaceChangeSortersInToolsFlap	"Get prototypes of the latest versions of the the Change Sorters into the Tools flap"	self replacePartSatisfying: [:el |  (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isMemberOf: ChangeSorter]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  (ChangeSorter new morphicWindow applyModelExtent).	self replacePartSatisfying: [:el |  (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isMemberOf: DualChangeSorter]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  (DualChangeSorter new morphicWindow applyModelExtent)! !"Postscript:"Utilities replaceChangeSortersInToolsFlap.Preferences resetStandardPartsBin.!