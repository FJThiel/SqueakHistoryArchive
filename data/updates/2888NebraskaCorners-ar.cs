'From Squeak2.9alpha of 13 June 2000 [latest update: #2934] on 1 November 2000 at 10:26:34 pm'!"Change Set:		NebraskaCorners-arDate:			1 November 2000Author:			Andreas RaabA quick fix for making round corners appear in Nebraska. This is not a final solution but just a quick hack since the protocols involved in Morph's corner rounding process is way to complicated. But I can't be bothered to fix this right now."!!Morph methodsFor: 'drawing' stamp: 'ar 11/1/2000 22:26'!fullDrawOn: aCanvas	"Draw the full Morphic structure on the given Canvas"	self visible ifFalse: [^ self].	(self hasProperty: #errorOnDraw) ifTrue:[^self drawErrorOn: aCanvas].	"Note: At some point we should generalize this into some sort of 	multi-canvas so that we can cross-optimize some drawing operations."	"Pass 1: Draw eventual drop-shadow"	self hasDropShadow ifTrue:[		aCanvas translateBy: self shadowOffset during:[:shadowCanvas|			shadowCanvas shadowColor: self shadowColor.			shadowCanvas roundCornersOf: self during:[shadowCanvas drawMorph: self]]].	"Pass 2: Draw receiver itself"	aCanvas roundCornersOf: self during:[		aCanvas drawMorph: self.		self drawSubmorphsOn:aCanvas.		self drawDropHighlightOn: aCanvas.		self drawMouseDownHighlightOn: aCanvas].! !!PluggableCanvas methodsFor: 'canvas methods' stamp: 'ar 11/1/2000 22:21'!roundCornersOf: aMorph during: aBlock	aMorph wantsRoundedCorners ifFalse:[^aBlock value].	(self seesNothingOutside: (CornerRounder rectWithinCornersOf: aMorph bounds))		ifTrue: ["Don't bother with corner logic if the region is inside them"				^ aBlock value].	CornerRounder roundCornersOf: aMorph on: self		displayBlock: aBlock		borderWidth: aMorph borderWidth		corners: aMorph roundedCorners! !