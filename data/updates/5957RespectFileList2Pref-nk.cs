'From Squeak3.7beta of ''1 April 2004'' [latest update: #5954] on 14 June 2004 at 9:19:58 am'!"Change Set:		RespectUseFileList2Pref-nkDate:			14 June 2004Author:			Ned KonzMakes the system respect the setting of the #useFileList2 Preference, and changes the Tools flap dynamically when it's changed.- updates the Tools flap with the preferred FileList tool- respects the setting for cmd-L in Morphic projects"!!FileList2 class methodsFor: 'class initialization' stamp: 'nk 6/14/2004 08:47'!initialize	Preferences		addPreference: #useFileList2		categories:  #(general)		default: true		balloonHelp: 'if true, then when you open a file list from the World menu, it''ll be an enhanced one'		projectLocal:  false		changeInformee:  self		changeSelector: #useFileList2preferenceChanged! !!FileList2 class methodsFor: 'instance creation' stamp: 'nk 6/14/2004 08:41'!prototypicalToolWindow	"Answer an example of myself seen in a tool window, for the benefit of parts-launching tools"	^ self morphicView applyModelExtent! !!FileList2 class methodsFor: 'preferences' stamp: 'nk 6/14/2004 09:04'!useFileList2preferenceChanged	| preferred quads registered |	preferred := Preferences useFileList2				ifTrue: [#FileList2]				ifFalse: [#FileList].	quads := Flaps registeredFlapsQuads				at: 'Tools'				ifAbsent: [^ self].	registered := quads				detect: [:quad | quad first startsWith: 'FileList']				ifNone: [Flaps registerQuad: {					preferred. 					#prototypicalToolWindow.					'File List'.					'A File List is a tool for browsing folders and files on disks and FTP servers.'} 						forFlapNamed: 'Tools'.					nil].	registered		ifNotNil: [registered at: 1 put: preferred].	Flaps replaceToolsFlap! !!Flaps class methodsFor: 'flaps registry' stamp: 'nk 6/14/2004 08:39'!defaultsQuadsDefiningToolsFlap	"Answer a structure defining the default Tools flap.	previously in quadsDefiningToolsFlap"	^ OrderedCollection new	addAll: #(	(Browser 				prototypicalToolWindow		'Browser'			'A Browser is a tool that allows you to view all the code of all the classes in the system')	(TranscriptStream		openMorphicTranscript				'Transcript'			'A Transcript is a window usable for logging and debugging; browse references to #Transcript for examples of how to write to it.')	(Workspace			prototypicalToolWindow		'Workspace'			'A Workspace is a simple window for editing text.  You can later save the contents to a file if you desire.'));		add: { Preferences useFileList2 ifTrue: [ #FileList2 ] ifFalse: [ #FileList ].				#prototypicalToolWindow.				'File List'.				'A File List is a tool for browsing folders and files on disks and FTP servers.' };	addAll: #(	(DualChangeSorter		prototypicalToolWindow		'Change Sorter'		'Shows two change sets side by side')	(SelectorBrowser		prototypicalToolWindow		'Method Finder'		'A tool for discovering methods by providing sample values for arguments and results')	(MessageNames		prototypicalToolWindow		'Message Names'		'A tool for finding, viewing, and editing all methods whose names contain a given character sequence.')	(Preferences			preferencesControlPanel	'Preferences'			'Allows you to control numerous options')	(Utilities				recentSubmissionsWindow	'Recent'				'A message browser that tracks the most recently-submitted methods')	(ProcessBrowser		prototypicalToolWindow		'Processes'			'A Process Browser shows you all the running processes')	(Preferences			annotationEditingWindow	'Annotations'		'Allows you to specify the annotations to be shown in the annotation panes of browsers, etc.')	(Scamper				newOpenableMorph			'Scamper'			'A web browser')	(Celeste				newOpenableMorph			'Celeste'				'Celeste -- an EMail reader')	(PackagePaneBrowser	prototypicalToolWindow		'Packages'			'Package Browser:  like a System Browser, except that if has extra level of categorization in the top-left pane, such that class-categories are further organized into groups called "packages"')	(ChangeSorter			prototypicalToolWindow		'Change Set'			'A tool that allows you to view and manipulate all the code changes in a single change set'));		yourself! !!Flaps class methodsFor: 'class initialization' stamp: 'nk 6/14/2004 08:37'!initialize	self initializeFlapsQuads! !!PasteUpMorph methodsFor: 'world menu' stamp: 'nk 6/14/2004 09:08'!findAFileList: evt 	"Locate a file list, open it, and bring it to the front.	Create one if necessary, respecting the Preference."	self		findAWindowSatisfying: [:aWindow | aWindow model isKindOf: FileList]		orMakeOneUsing: [Preferences useFileList2				ifTrue: [FileList2 prototypicalToolWindow]				ifFalse: [FileList prototypicalToolWindow]]! !!TheWorldMenu methodsFor: 'commands' stamp: 'nk 6/14/2004 09:18'!openFileList	Preferences useFileList2		ifTrue: [ FileList2 prototypicalToolWindow openInWorld: myWorld ]		ifFalse: [ FileList prototypicalToolWindow openInWorld: myWorld ]! !Flaps initialize!!Flaps class reorganize!('*connectorsShapes-flaps' newClassDiagramConnectorsFlap newConnectorsFlap newFSMConnectorsFlap newNCPartsBinFlap preferredConnectorsButtonClass preferredConnectorsFlapBinClass quadsDefiningClassDiagramConnectorsFlap quadsDefiningConnectorsFlap quadsDefiningFSMConnectorsFlap)('construction support' addMorph:asElementNumber:inGlobalFlapSatisfying: addMorph:asElementNumber:inGlobalFlapWithID: addToSuppliesFlap:asElementNumber: deleteMorphsSatisfying:fromGlobalFlapSatisfying:)('flap mechanics' clobberFlapTabList freshFlapsStart reinstateDefaultFlaps removeFlapTab:keepInList:)('flaps registry' defaultsQuadsDefiningScriptingFlap defaultsQuadsDefiningStackToolsFlap defaultsQuadsDefiningSuppliesFlap defaultsQuadsDefiningToolsFlap defaultsQuadsDefiningWidgetsFlap initializeFlapsQuads registerQuad:forFlapNamed: registeredFlapsQuads registeredFlapsQuadsAt: unregisterQuad:forFlapNamed: unregisterQuadsWithReceiver: unregisterQuadsWithReceiver:fromFlapNamed:)('menu commands' disableGlobalFlapWithID: disableGlobalFlaps disableGlobalFlaps: enableDisableGlobalFlapWithID: enableGlobalFlapWithID: explainFlaps explainFlapsText)('menu support' addIndividualGlobalFlapItemsTo: enableEToyFlaps enableGlobalFlaps globalFlapWithIDEnabledString: setUpSuppliesFlapOnly showSharedFlaps suppressFlapsString)('miscellaneous' automaticFlapLayoutChanged doAutomaticLayoutOfFlapsIfAppropriate enableClassicNavigatorChanged fileOutChanges makeNavigatorFlapResembleGoldenBar orientationForEdge: paintFlapButton removeFromGlobalFlapTabList:)('new flap' addLocalFlap defaultColorForFlapBackgrounds newFlapTitled:onEdge: newFlapTitled:onEdge:inPasteUp:)('predefined flaps' addAndEnableEToyFlaps addNewDefaultSharedFlaps addStandardFlaps defaultsQuadsDefiningPlugInSuppliesFlap initializeStandardFlaps newLoneSuppliesFlap newNavigatorFlap newObjectsFlap newPaintingFlap newSqueakFlap newStackToolsFlap newSuppliesFlap newSuppliesFlapFromQuads:positioning: newToolsFlap newWidgetsFlap quadsDefiningPlugInSuppliesFlap quadsDefiningStackToolsFlap quadsDefiningSuppliesFlap quadsDefiningToolsFlap quadsDefiningWidgetsFlap quadsDeiningScriptingFlap twiddleSuppliesButtonsIn:)('replacement' replaceGlobalFlapwithID: replacePartSatisfying:inGlobalFlapSatisfying:with: replacePartSatisfying:inGlobalFlapWithID:with: replaceToolsFlap)('shared flaps' addGlobalFlap: enableOnlyGlobalFlapsWithIDs: globalFlapTab: globalFlapTabOrDummy: globalFlapTabWithID: globalFlapTabs globalFlapTabsIfAny globalFlapTabsWithID: positionNavigatorAndOtherFlapsAccordingToPreference positionVisibleFlapsRightToLeftOnEdge:butPlaceAtLeftFlapsWithIDs: removeDuplicateFlapTabs sharedFlapsAllowed sharedFlapsAlongBottom)('class initialization' initialize)!FileList2 initialize!!FileList2 class reorganize!('*bfav' morphicViewOn:withLabel:)('*monticello' modalFileSelectorForSuffixes:directory: morphicViewFileSelectorForSuffixes:directory:)('class initialization' initialize)('as yet unclassified' hideSqueakletDirectoryBlock projectOnlySelectionBlock projectOnlySelectionMethod: selectionBlockForSuffixes:)('blue ui' blueButtonText:textColor:inWindow: blueButtonText:textColor:inWindow:balloonText:selector:recipient: blueRamp1 blueRamp2 blueRamp3 enableTypeButtons:info:forDir: endingSpecs morphicViewGeneralLoaderInWorld: morphicViewProjectLoader2InWorld: morphicViewProjectLoader2InWorld:reallyLoad: morphicViewProjectLoader2InWorld:reallyLoad:dirFilterType: morphicViewProjectSaverFor:)('instance creation' openMorphicViewInWorld prototypicalToolWindow)('modal dialogs' modalFileSelector modalFileSelectorForSuffixes: modalFolderSelector modalFolderSelector: modalFolderSelectorForProject: modalFolderSelectorForProjectLoad)('morphic ui' morphicView morphicViewFileSelector morphicViewFileSelectorForSuffixes: morphicViewFolderSelector morphicViewFolderSelector: morphicViewNoFile morphicViewProjectLoader update:in:fileTypeRow:morphUp:)('utility' addFullPanesTo:from: textRow:)('preferences' useFileList2preferenceChanged)!