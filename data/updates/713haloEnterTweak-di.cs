'From Squeak 2.3 of January 14, 1999 on 8 March 1999 at 10:42:35 pm'!"Change Set:		haloEnterTweakDate:			4 January 1999Author:			Dan IngallsThis is a small change that allows mouseOvers to be tracked in two or more ranks of morphs -- ie in morphs rooted in more than one root morph.  The particular need for such logic is so that entering a handle of a halo need not force a leave event in a mouse-over morph below the halo."!!HandMorph methodsFor: 'event dispatching' stamp: 'di 1/4/1999 22:27'!mouseOverList: evt	"Returns a list consisting of the topmost unlocked morph in the	innermost frame (pasteUp), and all of its containers in that frame."	"This new version treats halos as independent so as not to mask	mouseovers of morphs beneath an active halo."	| top |	top _ self mouseOverList: evt rank: 1.	(top isEmpty or: [(top last isKindOf: HaloMorph) not])		ifTrue: [^ top]		ifFalse: [^ top , (self mouseOverList: evt rank: 2)]! !!HandMorph methodsFor: 'event dispatching' stamp: 'di 1/4/1999 22:27'!mouseOverList: evt rank: rank 	"With rank = 1, returns a list consisting of the topmost unlocked morph in the	innermost frame (pasteUp), and all of its containers in that frame.	With rank = 2, returns the smae kind of list, but rooted in the next lower	rootmorph.  This can be useful to get mouseOvers below an active halo."	| p roots mList mm r |	p _ evt cursorPoint.	roots _ self world rootMorphsAt: p.  "root morphs in world"	roots size >= rank		ifTrue: [mList _ (roots at: rank) unlockedMorphsAt: p.				mList size > 0 ifTrue:					["NOTE: We really only want the top morph and all its owners"					mm _ mList first.  r _ roots at: rank.					mList _ OrderedCollection new.					[mm == r] whileFalse:						[mList addLast: mm.						mm _ mm owner].					mList add: r]]		ifFalse: [mList _ EmptyArray].	^ mList! !