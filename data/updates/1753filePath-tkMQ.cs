'From Squeak2.6 of 11 October 1999 [latest update: #1748] on 2 January 2000 at 10:40:38 pm'!"Change Set:		filePath-tkMQDate:			2 January 2000Author:			Ted KaehlerRecent changes to FileDirectories made the top level of the FileList not work.  If selected [] to choose your hard disk or a server, and chose the hard disk, it broke.	In that case, we now look up HardDisk: instead of just HardDisk (with suitable delimiter for each platform).  	And don't call checkName:fixErrors: when the local name is empty (i.e. the top directory)."!!FileDirectory methodsFor: 'file name utilities' stamp: 'tk 1/2/2000 12:18'!fullNameFor: fileName	"Return a corrected, fully-qualified name for the given file name. If the given name is already a full path (i.e., it contains a delimiter character), assume it is already a fully-qualified name. Otherwise, prefix it with the path to this directory. In either case, correct the local part of the file name."	"Details: Note that path relative to a directory, such as '../../foo' are disallowed by this algorithm."	| correctedLocalName prefix |	self class splitName: fileName to:		[:filePath :localName |			correctedLocalName _ localName isEmpty 				ifFalse: [self checkName: localName fixErrors: true]				ifTrue: [localName].			prefix _ self fullPathFor: filePath].	prefix last = self pathNameDelimiter		ifTrue:[^ prefix, correctedLocalName]		ifFalse:[^ prefix, self slash, correctedLocalName]! !!FileList methodsFor: 'file list' stamp: 'tk 1/2/2000 13:07'!fileListIndex: anInteger	"Select the file name having the given index, and display its contents."	| item name |	self okToChange ifFalse: [^ self].	listIndex := anInteger.	listIndex = 0 		ifTrue: [fileName := nil]		ifFalse:			[item := self fileNameFromFormattedItem: (list at: anInteger).			(item endsWith: self folderString)				ifTrue:					["remove [...] folder string and open the folder"					name := item copyFrom: 1 to: item size - self folderString size.					listIndex := 0.					brevityState := #FileList.					self addPath: name.					name first = $^						ifTrue: [self directory: (ServerDirectory serverNamed: name allButFirst)]						ifFalse: [volListIndex = 1 ifTrue: [name _ name, directory slash].							self directory: (directory directoryNamed: name)]]				ifFalse: [fileName := item]].  "open the file selected"	brevityState := #needToGetBrief.	self changed: #fileListIndex.	self changed: #contents! !