'From Squeak3.1alpha of 5 February 2001 [latest update: #3556] on 10 February 2001 at 12:35:46 am'!"Change Set:		commonReq-swDate:			10 February 2001Author:			Scott WallaceIn Morphic, for the 'Common Requests' feature (from the 'do' menu item in the Screen menu), use a proper menu morph, and allow it to stay up.  Note that this makes it easy to create a button that will evaluate any given do-it.  Just put the do-it in common-request-strings, bring them up in their persistent-menu form, choose the item you want, and duplicate it.Also, tweaks the initial settings, and reinitializes the common-request-strings to these new initial settings."!!Utilities class methodsFor: 'common requests' stamp: 'sw 2/10/2001 00:20'!eval: aString	"Evaluate the string in a neutral context, and under certain circumstances print the result in the transcript"	| result |	result _ self evaluate: aString in: nil to: nil.	(result isKindOf: Number) | (result isKindOf: String)		ifTrue:			[Transcript cr; nextPutAll: result printString]! !!Utilities class methodsFor: 'common requests' stamp: 'sw 2/10/2001 00:32'!initializeCommonRequestStrings	"Initialize an array of common request strings.  2/1/96 sw"	CommonRequestStrings _ StringHolder new contents: 'Utilities emergencyCollapse.Utilities closeAllDebuggers.-Sensor keyboard.ParagraphEditor abandonChangeText.Cursor normal show.-Project allInstancesDo: [:p | p displayDepth: 16].ScriptingSystem inspectFormDictionary.Form fromUser bitEdit.Display border: (0@0 extent: 640@480) width: 2.-Undeclared inspect.Undeclared removeUnreferencedKeys; inspect.Transcript clear.Utilities grabScreenAndSaveOnDisk.FrameRateMorph new openInHand.-Utilities reconstructTextWindowsFromFileNamed: ''TW''.Utilities storeTextWindowContentsToFileNamed: ''TW''.ChangeSorter removeEmptyUnnamedChangeSets.ChangeSorter reorderChangeSets.'"Utilities initializeCommonRequestStrings"! !!Utilities class methodsFor: 'common requests' stamp: 'sw 2/10/2001 00:21'!offerCommonRequests	"Offer up the common-requests menu.  If the user chooses one, then evaluate it, and -- provided the value is a number or string -- show it in the Transcript."	"Utilities offerCommonRequests"	| reply result aMenu index normalItemCount strings |	Smalltalk isMorphic ifTrue: [^ self offerCommonRequestsInMorphic].	(CommonRequestStrings == nil or: [CommonRequestStrings isKindOf: Array])		ifTrue:			[self initializeCommonRequestStrings].	strings _ CommonRequestStrings contents.	normalItemCount _ strings asString lineCount.	aMenu _ PopUpMenu labels: (strings asString, 'edit this menu') lines: (Array with: normalItemCount).	index _ aMenu startUp.	index == 0 ifTrue: [^ self].	reply _ aMenu labelString lineNumber: index.	reply size == 0 ifTrue: [^ self].	index > normalItemCount ifTrue:		[^ self editCommonRequestStrings].	result _ self evaluate: reply in: nil to: nil.	(result isKindOf: Number) | (result isKindOf: String)		ifTrue:			[Transcript cr; nextPutAll: result printString]! !!Utilities class methodsFor: 'common requests' stamp: 'sw 2/10/2001 00:31'!offerCommonRequestsInMorphic	"Offer up the common-requests menu.  If the user chooses one, then evaluate it, and -- provided the value is a number or string -- show it in the Transcript."	"Utilities offerCommonRequests"	| aMenu  strings |	(CommonRequestStrings == nil or: [CommonRequestStrings isKindOf: Array])		ifTrue:			[self initializeCommonRequestStrings].	strings _ CommonRequestStrings contents.	aMenu _ MenuMorph new.	aMenu title: 'Common Requests'.	aMenu addStayUpItem.	strings asString linesDo:		[:aString |			aString = '-'				ifTrue:					[aMenu addLine]				ifFalse:					[aMenu add: aString target: self selector: #eval: argument: aString]].	aMenu addLine.	aMenu add: 'edit this list' target: self action: #editCommonRequestStrings.	aMenu popUpInWorld: self currentWorld! !"Postscript:"Utilities initializeCommonRequestStrings.!