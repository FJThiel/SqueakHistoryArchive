'From Squeak 2.4b of April 23, 1999 on 28 April 1999 at 3:51:49 pm'!"Change Set:		projectFlapPref-swDate:			28 April 1999Author:			Scott WallaceAdds a mechanism for projects to bear project-local parameters, and uses the new mechanism to make the decision of whether-or-not-to-show-global-flaps dependent on the setting of this flag.At present, anyway, the global Preference concerning global flaps continues to govern whether they are generally to be shown; the project-local preference allows local override.  This interplay is open to review and may well change in due course."!Model subclass: #Project	instanceVariableNames: 'world changeSet transcript parentProject previousProject displayDepth activeProcess exitFlag viewSize thumbnail nextProject guards projectParameters '	classVariableNames: 'CurrentProject '	poolDictionaries: ''	category: 'Interface-Projects'!!HandMorph methodsFor: 'world menu commands' stamp: 'sw 4/22/1999 15:30'!offerFlapsMenu	| aMenu reply showing suppressed |	showing _ Preferences valueOfFlag: #useGlobalFlaps.	suppressed _ Project current globalFlapsEnabledInProject not.	aMenu _ MVCMenuMorph entitled: 'flaps'.	aMenu add: 'new global flap...'  action: #addGlobalFlap.	aMenu balloonTextForLastItem: 'Create a new flap that will be shared by all morphic projects'.	aMenu add: 'new local flap...'  action: #addLocalFlap.	aMenu balloonTextForLastItem: 'Create a new flap that will occur only in this project.'.	aMenu add:  (showing							ifTrue: ['stop showing global flaps']							ifFalse: ['start showing global flaps'])		 action: #toggleWhetherToShowFlaps.	showing		ifTrue:			[aMenu balloonTextForLastItem: 'Hide the global flaps, so they do not show along the edges of morphic projects.'.			aMenu add: 'bring flaps to front' action: #bringFlapsToFront.			aMenu balloonTextForLastItem: 'Makes tabs for all flaps visible.']		ifFalse:			[aMenu balloonTextForLastItem: 'Create a new flap that will be shared by all morphic projects.'].	aMenu add:  (suppressed							ifTrue: ['end suppression of global flaps in this project']							ifFalse: ['suppress global flaps in this project'])		 action: #toggleSuppressionOfGlobalFlapsInProject.	suppressed		ifTrue:			[aMenu balloonTextForLastItem: 'This project currently is set up to suppress the use of global flaps, whether or not they are otherwise enabled.  Choose this item to resume use of global flaps.']		ifFalse:			[aMenu balloonTextForLastItem: 'Choose this item if you want to suppress use of global flaps in this project, whether or not they are otherwise enabled.'].	reply _ aMenu invokeAt: self position in: self currentWorld.	reply ifNotNil: [Utilities perform: reply]	! !!PasteUpMorph methodsFor: 'flaps' stamp: 'sw 4/22/1999 15:32'!addGlobalFlaps	"Normally, like all the flap stuff, intended for use only in a World -- but the code for flaps generally put into PasteUpMorph for possible more general use in future"	| flapList |	(Preferences valueOfFlag: #useGlobalFlaps) ifFalse: [^ self].	Project current globalFlapsEnabledInProject ifFalse: [^ self].	Smalltalk isMorphic ifFalse: [^ self].		flapList _ Utilities globalFlapTabs.	flapList do:		[:aFlapTab |			(aFlapTab world == self) ifFalse:				[self addMorphFront: aFlapTab.				aFlapTab adaptToWorld: self].			aFlapTab spanWorld.			aFlapTab adjustPositionAfterHidingFlap.			aFlapTab flapShowing ifTrue: [aFlapTab showFlap]]"	Utilities clobberFlapTabList.	Utilities initializeStandardFlaps.	self currentWorld deleteAllFlapArtifacts.	self currentWorld addGlobalFlaps."! !!Project methodsFor: 'project parameters' stamp: 'sw 4/22/1999 15:14'!globalFlapsEnabledInProject	^ self projectParameters at: #globalFlapsEnabledInProject! !!Project methodsFor: 'project parameters' stamp: 'sw 4/22/1999 15:42'!globalFlapsEnabledInProject: aBoolean	self projectParameters at: #globalFlapsEnabledInProject put: aBoolean.	aBoolean		ifFalse:					[Utilities globalFlapTabsIfAny do:				[:aFlapTab | Utilities removeFlapTab: aFlapTab keepInList: true]]		ifTrue:			[Smalltalk isMorphic  ifTrue:				[self currentWorld addGlobalFlaps]]! !!Project methodsFor: 'project parameters' stamp: 'sw 4/22/1999 15:13'!initializeProjectParameters	projectParameters _ IdentityDictionary new.	projectParameters at: #globalFlapsEnabledInProject put: true.	^ projectParameters! !!Project methodsFor: 'project parameters' stamp: 'sw 4/22/1999 15:14'!projectParameters	^ projectParameters ifNil: [self initializeProjectParameters]! !!Utilities class methodsFor: 'flaps' stamp: 'sw 4/22/1999 15:42'!toggleSuppressionOfGlobalFlapsInProject	Project current globalFlapsEnabledInProject: Project current globalFlapsEnabledInProject not.	self currentWorld restoreDisplay! !!WorldMorph methodsFor: 'initialization' stamp: 'sw 4/22/1999 15:34'!restoreFlapsDisplay	(Preferences useGlobalFlaps and: [Project current globalFlapsEnabledInProject]) ifTrue:		[Utilities globalFlapTabs do:			[:aFlapTab | aFlapTab adaptToWorld]].	self localFlapTabs do:			[:aFlapTab | aFlapTab adaptToWorld].	self assureFlapTabsFitOnScreen.	self bringFlapTabsToFront! !"Postscript:"SimpleButtonMorph allInstancesDo:	[:m | (#(returnToPreviousProject advanceToNextProject jumpToProject) includes: m actionSelector) 		ifTrue:			[m target: Project]].!