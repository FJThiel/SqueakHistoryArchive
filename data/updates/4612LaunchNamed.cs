'From Squeak3.2alpha of 2 October 2001 [latest update: #4609] on 15 December 2001 at 2:24:58 pm'!"Change Set:		LaunchNamedDate:			15 December 2001Author:			Andreas RaabThree changes for PartsBins:#1: Use BorderedStringMorph for the label rather than NameStringInHalo.#2: Use the name of the quad defining the object when it is launched. As an example, the 'Picture' in the parts bin used to come up in the world as 'Image'. Now consistency with the parts bin description is enforced.#3: Make objects in parts bins bottom-center aligned to have all the labels at the same height."!!Object methodsFor: 'user interface' stamp: 'ar 12/14/2001 20:08'!launchPartVia: aSelector label: aString	"Obtain a morph by sending aSelector to self, and attach it to the morphic hand.  This provides a general protocol for parts bins"	| aMorph |	aMorph _ self perform: aSelector.	aMorph setNameTo: aString.	aMorph setProperty: #beFullyVisibleAfterDrop toValue: true.	aMorph openInHand! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/15/2001 14:12'!initializeWithThumbnail: aThumbnail withLabel: aLabel andSend: aSelector to: aReceiver 		"Initialize the receiver to show aThumbnail on its face, giving it the label supplied and arranging for it, when the button goes down on it, to obtain a new morph by sending the supplied selector to the supplied receiver"	| labeledItem  |	labeledItem _ AlignmentMorph newColumn beTransparent.	labeledItem borderWidth: 0.	labeledItem addMorph: aThumbnail.	labeledItem addMorphBack: (Morph new extent: (4@4)) beTransparent.	labeledItem addMorphBack: (BorderedStringMorph contents: aLabel font: (StrikeFont familyName: 'ComicBold' size: 15)).	self		beTransparent;		labelGraphic: labeledItem imageForm;		borderWidth: 0;		target: aReceiver;		actionSelector: #launchPartVia:label:;		arguments: {aSelector. aLabel};		actWhen: #buttonDown! !!PartsBin methodsFor: 'initialization' stamp: 'ar 12/15/2001 14:10'!listDirection: aListDirection quadList: quadList	"Initialize the receiver to run horizontally or vertically, obtaining its elements from the list of tuples of the form:		(<receiver> <selector> <label> <balloonHelp>)"	| aButton aClass |	self layoutPolicy: TableLayout new.	self listDirection: aListDirection.	self wrapCentering: #topLeft.	self layoutInset: 2.	self cellPositioning: #bottomCenter.	aListDirection == #leftToRight		ifTrue:			[self vResizing: #rigid.			self hResizing: #spaceFill.			self wrapDirection: #topToBottom]		ifFalse:			[self hResizing: #rigid.			self vResizing: #spaceFill.			self wrapDirection: #leftToRight].	quadList do:		[:tuple |			aClass _ Smalltalk at: tuple first.			aButton _ IconicButton new initializeWithThumbnail: (self class thumbnailForQuad: tuple) withLabel: tuple third andSend: tuple second to: aClass.			(tuple size > 3 and: [tuple fourth isEmptyOrNil not]) ifTrue:				[aButton setBalloonText: tuple fourth]. 			self addMorphBack: aButton]! !"Postscript:Re-Initialize flaps."Preferences okToReinitializeFlaps ifTrue:[Flaps reinstateDefaultFlaps]!