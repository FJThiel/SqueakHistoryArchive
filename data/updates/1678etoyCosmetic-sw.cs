'From Squeak2.6 of 11 October 1999 [latest update: #1660] on 30 November 1999 at 7:50:48 am'!"Change Set:		etoyCosmetic-swDate:			30 November 1999Author:			Scott WallaceSome cosmetic changes to viewers & scriptors.Rounded buttons used for 'try', etc.Iconic buttons substituted for the string-based ones for: - add test/yes/no button in scriptor - add-another-category-pane in viewer.A roundrect added to the set of supplies in the default parts bin.Help-message enhancements for some of the controls in Scriptors.NB: Manually patched, sw 11/30/1999 13:17 -- put in bulletproofing in PasteUpMorph.viewBox, so that a doIt in the postscript does not drop users updating within mvc into a debugger.  Eary loaders of this update will not have that fix and will not see this addendum in the preamble."!!FlapTab methodsFor: 'positioning' stamp: 'sw 11/30/1999 13:14'!positionObject: anObject	"anObject could be myself or my referent"	| container |	(container _ self currentWorld viewBox) ifNil: [^ self].	"Could consider container _ referent pasteUpMorph, to allow flaps on things other than the world, but for the moment, let's skip it!!"	(edgeToAdhereTo == #left) ifTrue:		[^ anObject left: container left].	(edgeToAdhereTo == #right) ifTrue:		[^ anObject right: container right].	(edgeToAdhereTo == #top) ifTrue:		[^ anObject top: container top].	(edgeToAdhereTo == #bottom) ifTrue:		[^ anObject bottom: container bottom]! !!CategoryViewer methodsFor: 'header pane' stamp: 'sw 11/29/1999 22:18'!addHeaderMorph	| header aFont aButton wrpr |	header _ AlignmentMorph newRow color: self color; centering: #center.	aFont _ ScriptingSystem fontForScriptorButtons.	header addMorph: (aButton _ SimpleButtonMorph new label: 'X' font: aFont).	aButton target: self;			color:  Color lightRed;			actionSelector: #delete;			setBalloonText: 'Delete this pane'.	header addTransparentSpacerOfSize: 5@5.	Preferences useCategoryListsInViewers		ifFalse:			[header addUpDownArrowsFor: self.			(wrpr _ header submorphs last) submorphs second setBalloonText: 'previous category'.				wrpr submorphs first  setBalloonText: 'next category'].	header beSticky.	self addMorph: header.	namePane _ RectangleMorph newSticky color: Color brown veryMuchLighter.	namePane borderWidth: 0.	aButton _ (StringButtonMorph contents: '-----' "font: ScriptingSystem fontForScriptorButtons") color: Color black.	aButton target: self; arguments: Array new; actionSelector: #chooseCategory.	aButton actWhen: #buttonDown.	namePane addMorph: aButton.	aButton position: namePane position.	namePane align: namePane topLeft with: (bounds topLeft + (50 @ 0)).	namePane setBalloonText: 'category (click here to choose a different one)'.	header addMorphBack: namePane.	(namePane isKindOf: RectangleMorph) ifTrue:		[namePane addDropShadow.		namePane owner color: Color gray].	self categoryChoice: 'basic'! !!Morph class methodsFor: 'misc' stamp: 'sw 11/30/1999 08:52'!helpContributions	"Answer a list of pairs of the form		<symbol> <help message> 	to contribute to the system help dictionary"	^ #(		(acceptScript:for:			'submit the contents of the given script editor as the code defining the given selector')		(actorState			'return the ActorState object for the receiver, creating it if necessary')		(addInstanceVariable			'start the interaction for adding a new instance variable to the receiver')		(addPlayerMenuItemsTo:hand:			'add player-specific menu items to the given menu, on behalf of the given hand.  At present, these are only commands relating to the turtle')		(addSlotNamedLike:withValue:			'add a slot with a unique name derived from the first parameter, giving it the second parameter as its initial value')		(addYesNoToHand			'Press here to tear off a  TEST/YES/NO unit which you can drop into your script')		(allScriptEditors			'answer a list off the extant ScriptEditors for the receiver')		(amount			'The amount of displacement')		(angle				'The angular displacement')		(anonymousScriptEditorFor:			'answer a new ScriptEditor object to serve as the place for scripting an anonymous (unnamed, unsaved) script for the receiver')		(assignDecrGetter:setter:amt:			'evaluate the decrement variant of assignment')		(assignGetter:setter:amt:			'evaluate the vanilla variant of assignment')		(assignIncrGetter:setter:amt:			'evalute the increment version of assignment')		(assignMultGetter:setter:amt:			'evaluate the multiplicative version of assignment')		(assureEventHandlerRepresentsStatus			'make certain that the event handler associated with my current costume is set up to conform to my current script-status')		(assureExternalName			'If I do not currently have an external name assigned, get one now')		(assureUniClass			'make certain that I am a member a uniclass (i.e. a unique subclass); if I am not, create one now and become me into an instance of it')		(availableCostumeNames			'answer a list of strings representing the names of all costumes currently available for me')		(availableCostumesForArrows			'answer a list of actual, instantiated costumes for me, which can be cycled through as the user hits a next-costume or previous-costume button in a viewer')		(beep:			'make the specified sound')		(borderColor			'The color of the object''s border')		(borderWidth			'The width of the object''s border')		(bottom			'My bottom edge, measured downward from the top edge of the world')		(bounce:			'If object strayed beyond the boundaries of its container, make it reflect back into it, making the specified noise while doing so.')		(chooseTrigger'When this script should run."normal" means "only when called"')		(clearTurtleTrails			'Clear all the pen trails in the interior.')		(color				'The object''s interior color')		(colorSees			'Whether a given color in the object is over another given color')		(colorUnder			'The color under the center of the object')		(cursor				'The index of the chosen element')		(deleteCard			'Delete the current card.')		(dismiss			'Click here to dismiss me')		(firstPage			'Go to first page of book')		(followPath				'Retrace the path the object has memorized, if any.')		(forward:			'Moves the object forward in the direction it is heading') 		(goto:			'Go to the specfied book page')		(goToNextCard			'Go to the next card')		(goToPreviousCard			'Go to the previous card.')		(goToRightOf:			'Align the object just to the right of any specified object.')		(heading			'Which direction the object is facing.  0 is straight up') 		(height				'The distance between the top and bottom edges of the object')		(hide			'Make the object so that it does not display and cannot handle input')		(initiatePainting				'Initiate painting of a new object in the standard playfield.')		(initiatePaintingIn:			'Initiate painting of a new object in the given place.')		(isOverColor			'Whether any part of this object is directly over the specified color')		(isUnderMouse			'Whether any part of this object is beneath the current mouse-cursor position')		(lastPage			'Go to the last page of the book.')		(left			'My left edge, measured from the left edge of the World')		(leftRight			'The horizontal displacement')		(liftAllPens			'Lift the pens on all the objects in my interior.')		(lowerAllPens			'Lower the pens on all the objects in my interior.')		(mouseX			'The x coordinate of the mouse pointer')		(mouseY			'The y coordinate of the mouse pointer')		(moveToward:			'Move in the direction of another object.')		(newCard			'Create a new card.')		(nextPage			'Go to next page.')		(objectNameInHalo			'Object''s name -- To change: click here, edit, hit ENTER')		(offerScriptorMenu			'Owner and script name.Press to get a menu')		(pauseScript:			'Make a running script become paused.')		(penDown			'Whether the object''s pen is down (true) or up (false)')		(penColor			'The color of the object''s pen')		(penSize				'The size of the object''s pen')		(previousPage			'Go to previous page')		(show			'If object was hidden, make it show itself again.')		(startScript:			'Make a script start running.')		(stopScript:			'Make a script stop running.')		(top			'My top edge, measured downward from the top edge of the world')		(right			'My right edge, measured from the left edge of the world')		(roundUpStrays			'Bring all out-of-container subparts back into view.')		(scaleFactor			'The amount by which the object is scaled')		(stopScript:			'make the specified script stop running')		(try			'Run this command once.')		(tryMe			'Click here to run this script once; hold button down to run repeatedly.')		(turn:							'Change the heading of the object by the specified amount')		(unhideHiddenObjects			'Unhide all hidden objects.')		(upDown			'The vertical displacement')		(userScript			'This is a script defined by you.  Click here to rename or delete it')		(userSlot			'This is an instance variable defined by you.  Click here to change its type')		(valueAtCursor			'The chosen element')		(wearCostumeOf:			'Wear the same kind of costume as the other object')		(width				'The distance between the left and right edges of the object')		(wrap			'If object has strayed beond the boundaries of its container, make it reappear from the opposite edge.')		(x			'The x coordinate, measured from the left of the container')		(y			'The y-coordinate, measured upward from the bottom of the container')		)! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 11/30/1999 07:31'!addDismissButtonTo: aRowMorph	aRowMorph addMorphBack:		((SimpleButtonMorph new label: 'X' font: ScriptingSystem fontForScriptorButtons)			target: self;			color:  Color lightRed;			actionSelector: #dismiss;			setBalloonText: 'Remove this scriptfrom the screen(you can open itagain from a Viewer)').	^ aRowMorph! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 11/29/1999 22:15'!buttonRowForEditor	| r aString aButtonMorph buttonFont aStatusMorph aStatus |	buttonFont _ ScriptingSystem fontForScriptorButtons.	r _ AlignmentMorph newRow color: Color transparent; inset: 0.	r addMorphFront:		(SimpleButtonMorph new			label: '!!' font: (StrikeFont familyName: #ComicBold size: 16);			target: self;			color: Color yellow;			borderWidth: 0;			actWhen: #whilePressed;			actionSelector: #tryMe;			balloonTextSelector: #tryMe).	r addTransparentSpacerOfSize: 6@10.	aString _ playerScripted externalName, ' ', self scriptTitle.	r addMorphBack:		(aButtonMorph _ SimpleButtonMorph new useSquareCorners label: aString font: buttonFont; target: self; setNameTo: 'title').	aButtonMorph actWhen: #buttonDown; actionSelector: #offerScriptorMenu.	aButtonMorph borderColor: (Color fromRgbTriplet: #(0.065 0.258 1.0)).	aButtonMorph color: (self isAnonymous ifTrue: [Color blue muchLighter] ifFalse: [ScriptingSystem uniformTileInteriorColor]).	aButtonMorph balloonTextSelector: #offerScriptorMenu.	r addTransparentSpacerOfSize: 6@10.	aStatus _ self scriptInstantiation status.	r addMorphBack:			(aStatusMorph _ SimpleButtonMorph new useSquareCorners label: aStatus font: buttonFont;				setNameTo: 'trigger';				target: self;				actWhen: #buttonDown;				actionSelector: #chooseTrigger;				setBalloonText: (ScriptingSystem helpStringFor: #chooseTrigger) maxLineLength: 65;				balloonTextSelector: #chooseTrigger).	r addTransparentSpacerOfSize: 10@10.	r addMorphBack:		(IconicButton new borderWidth: 0;			labelGraphic: (ScriptingSystem formAtKey: 'AddTest'); color: Color transparent; 			actWhen: #buttonDown;			target: self;			actionSelector: #addYesNoToHand;			shedSelvedge;			balloonTextSelector: #addYesNoToHand).	r addTransparentSpacerOfSize: 12@10.	self addDismissButtonTo: r.	self updateStatusMorph: aStatusMorph.	^ r! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 11/30/1999 07:37'!chooseTrigger	"NB; the keyStroke branch commented out temporarily until keystrokes can actually be passed along to the user's scripting code"	| aMenu reply standardStati aScriptInstantiation m |	standardStati _ #(normal paused ticking mouseDown mouseStillDown mouseUp mouseEnter mouseLeave mouseEnterDragging mouseLeaveDragging opening closing "keyStroke").	aScriptInstantiation _ self scriptInstantiation.	aMenu _ SelectionMenu labelList:  #(		'normal'		" -- run when called"				'paused' 		"ready to run all the time"		'ticking'		"run all the time"		'mouseDown'	"run when mouse goes down on me"		'mouseStillDown'	"while mouse still down"		'mouseUp'		"when mouse comes back up"		'mouseEnter'	"when mouse enters my bounds, button up"		'mouseLeave'	"when mouse exits my bounds, button up"		'mouseEnterDragging'	"when mouse enters my bounds, button down"		'mouseLeaveDragging'	"when mouse exits my bounds, button down"		'opening'	"when I am being opened"		'closing'	"when I am being closed"	"	'keyStroke'	run when user hits a key"		'what do these mean?'		)		lines: #(1 3 6 10 12)		selections: (standardStati, #(explainStatusAlternatives)).	reply _ aMenu startUpWithCaption: 'When should this script run?'.	(reply == #keyStroke) ifTrue: [^ self inform: 'user-scripted fieldingof keystrokes is notyet available.'].	reply == #explainStatusAlternatives ifTrue: [^ self explainStatusAlternatives].	reply ifNotNil: 		[aScriptInstantiation status: reply.  "Gets event handlers fixed up"		reply == #ticking ifTrue: [playerScripted costume arrangeToStartStepping].		reply == #paused ifTrue: [			m _ playerScripted costume.			(m isKindOf: SpeakerMorph) ifTrue: [m stopSound]].		self updateStatus]! !!StandardViewer methodsFor: 'as yet unclassified' stamp: 'sw 11/30/1999 07:25'!addHeaderMorphWithBarHeight: anInteger includeDismissButton: aBoolean	| header aFont aButton aTextMorph nail wrpr costs headWrapper inner |	header _ AlignmentMorph newRow color: self color muchLighter; centering: #center.	aFont _ ScriptingSystem fontForScriptorButtons.	aBoolean ifTrue:		[header addMorph: (aButton _ SimpleButtonMorph new label: 'X' font: aFont).		aButton target: self;				color:  Color lightRed;				actionSelector: #dismiss;				setBalloonText: 'Delete this entire Viewer'.		header addTransparentSpacerOfSize: 4@1].	aButton _ IconicButton new borderWidth: 0;			labelGraphic: (ScriptingSystem formAtKey: #AddCategoryViewer); color: Color transparent; 			actWhen: #buttonDown;			target: self;			actionSelector: #addCategoryViewer;			setBalloonText: 'click here to addanother category pane';			shedSelvedge.	header addMorphBack: aButton.	header addTransparentSpacerOfSize: 4@1.	costs _ scriptedPlayer costumes.	costs ifNotNil:	[(costs size > 1 or: [costs size = 1 and: [costs first ~~ scriptedPlayer costume]]) ifTrue:		[header addUpDownArrowsFor: self.		(wrpr _ header submorphs last) submorphs second setBalloonText: 'switch to previous costume'.			wrpr submorphs first  setBalloonText: 'switch to next costume']].		aBoolean		ifTrue:			[nail _ ThumbnailMorph new objectToView: scriptedPlayer viewSelector: #costume]		ifFalse:			[inner _ ImageMorph new image: (ScriptingSystem formAtKey: 'Menu').			nail _ RectangleMorph new beTransparent extent: inner extent.			nail addMorph: inner lock].	nail on: #mouseDown send: #thumbnailMenuEvt:forMorph: to: scriptedPlayer.	header addMorphBack: nail.	nail setBalloonText: 'click here to get a menuthat will allow you toadd an instance variable,,tear off a tile, etc..'.	nail borderWidth: 3; borderColor: #raised.	"nail addDropShadow.	nail owner color: Color gray."	header addTransparentSpacerOfSize: 5@5."	aButton _ SimpleButtonMorph new target: self; actionSelector: #newEmptyScript; label: 'S' font: (aFont _ StrikeFont familyName: #ComicBold size: 16);  color: Color transparent; borderWidth: 0; actWhen: #buttonDown.	aButton setBalloonText: 'drag from here tocreate a new scriptfor this object'.		header addMorphBack: aButton.	header addTransparentSpacerOfSize: 8@5.	aButton _ SimpleButtonMorph new target: scriptedPlayer; actionSelector: #addInstanceVariable; label: 'I' font: aFont;  color: Color transparent; borderWidth: 0; actWhen: #buttonUp.	aButton setBalloonText: 'click here to addan instance variableto this object.'.	header addMorphBack: aButton.	header addTransparentSpacerOfSize: 5@5."	scriptedPlayer costume assureExternalName.	aTextMorph _ UpdatingStringMorph new		useStringFormat;		target:  scriptedPlayer;		getSelector: #getName;		putSelector: #setName:;		setNameTo: 'name';		font: ScriptingSystem fontForNameEditingInScriptor.	aTextMorph setProperty: #okToTextEdit toValue: true.	aTextMorph step.	header  addMorphBack: aTextMorph.	aTextMorph setBalloonText: 'Click here to edit the player''s name.'.		header beSticky.	anInteger > 0		ifTrue:			[headWrapper _ AlignmentMorph newColumn color: self color.			headWrapper addTransparentSpacerOfSize: (0 @ anInteger).			headWrapper addMorphBack: header.			self addMorph: headWrapper]		ifFalse:			[self addMorph: header]! !!TabbedPalette methodsFor: 'parts & controls tabs' stamp: 'sw 11/29/1999 22:05'!addPartsTab	| partsBook aPage |	partsBook _ BookMorph new pageSize: pageSize; setNameTo: 'supplies'.	partsBook removeEverything.	aPage _ self presenter newPageForStandardPartsBin.	aPage extent: pageSize.	#(PaintInvokingMorph RectangleMorph EllipseMorph StarMorph  CurveMorph PolygonMorph TextMorph ImageMorph		PasteUpMorph JoystickMorph) do:		[:sym | aPage addMorphBack: (Smalltalk at: sym) authoringPrototype].	aPage addMorphBack: RectangleMorph roundRectPrototype.	aPage addMorphBack: ScriptingSystem prototypicalHolder.	aPage replaceTallSubmorphsByThumbnails.	aPage setPartsBinStatusTo: true.	aPage fixLayout.	partsBook insertPage: aPage pageSize: pageSize.	self addTabForBook: partsBook withBalloonText: 'parts bin'! !"Postscript:"ScriptingSystem saveForm: (Form	extent: 17@19 depth: 8 fromArray: #( 673720360 673720360 673720360 673720360 671088640 687471097 4193909241 4193852187 454761243 671088640 687471097 4193909241 4193909241 4193909241 671088640 687471097 4193909241 4193909241 4193909241 671088640 687415123 522132307 4193909241 4193909241 671088640 687470875 1394547483 4193909241 4193909241 671088640 687415067 521871135 4193909241 4193909241 671088640 687471097 4193909241 4193909241 4193909241 671088640 687471097 4179565343 4193909241 4193909241 671088640 687471097 4179565339 455670265 4193909241 671088640 687471097 4179565339 525597177 4193909241 671088640 687471097 4193909241 4193909241 4193909241 671088640 687471097 4193909241 4193909241 4193909241 671088640 687471097 4182987547 536476153 4193909241 671088640 687471097 4179306523 469367289 4193909241 671088640 687471097 4179565343 536476153 4193909241 671088640 687471097 4193909241 4193909241 4193909241 671088640 672865051 454761243 454761243 469367289 671088640 673720360 673720360 673720360 673720360 671088640) offset: 0@0) atKey: #AddTest.ScriptingSystem saveForm:  (Form extent: 30@19 depth: 16	fromArray: #(633945583 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 1039089135 633961470 2073782137 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 2080275454 633961371 1582521939 2080270265 1064270846 2075950012 2075950012 2075950012 2075950012 2075950012 2075950012 2075945817 2080275454 2080275454 2080275454 2080275454 633961371 1032674899 2080265108 720010238 2075934158 65537 2075950012 2075925735 2075934158 2075950012 1521835734 2080275454 2080275454 2080275454 2080275454 633961404 2134468374 2080275454 1062239230 1801019094 1591107286 1591107286 1591107286 1591107286 1591107286 1591103091 2080275454 2080275454 2080275454 2080275454 633958395 1536711576 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 1878749179 633958395 2079292414 2080273305 1798597428 1798597428 1798597428 1798597428 1798597428 1459114842 1398428506 1398428506 1599962110 2080275454 2080275454 2080275454 633959404 1591770110 2080272379 837642233 1744398329 1744384493 1257465849 1744398329 1398433785 1257465849 1744398329 1599962110 2080275454 2080275454 2080275454 633959404 1038121982 2080272379 417804781 1257458419 837615617 837615617 78317 1398407169 417804781 1257458419 1599962110 2080275454 2080275454 2080275454 633958388 2145418238 2080272379 1744398329 1744398329 1744398329 1744398329 1744398329 1398433785 1744398329 1744398329 1599962110 2080275454 2080275454 2080275454 633958395 2080275454 2080274330 2000123703 2000123703 2000123703 2000123703 2000123703 1798987613 1599954781 1599957917 2080275454 2080275454 2080275454 2080275454 633958388 2145418238 2080272379 1744398329 1744398329 1744398329 1744398329 1744398329 1398433785 1744398329 1744400379 2080275454 2080275454 2080275454 2080275454 633959404 1038121982 2080272379 417811187 1744390899 1257439233 837628397 837628397 1398413543 1257445607 837644283 2080275454 2080275454 2080275454 2080275454 633958388 1591770110 2080272379 837634803 1257465849 1257452013 1257452013 837642233 1398419949 1257452013 837644283 2080275454 2080275454 2080275454 2080275454 633958395 2079751166 2080273404 1878749179 1878749179 1878749179 1878749179 1878749179 1738305531 1878749179 1878750204 2080275454 2080275454 2080275454 2080275454 633958395 2078768126 2080272379 1744398329 1744398329 1744398329 1744398329 1744398329 1398433785 1744398329 1744398329 1744398329 1744393050 1744398329 1744398329 633959404 1038121982 2080272379 92153 1744398329 1744371713 1257465849 1744398329 1398419949 1744398329 1744398329 1744398329 1744393050 1744384493 1744398329 633959404 1038121982 2080272379 417811187 1257465849 1257439233 837634803 837642233 1398413543 837634803 837642233 1744384493 86874 1257439233 1257465849 633958395 2078768126 2080272379 1744398329 1744398329 1744398329 1744398329 1744398329 1398433785 1744398329 1744398329 1744398329 1744393050 1744398329 1744398329) offset: 0@0) atKey: #AddCategoryViewer.Utilities replaceToolsFlap.ScriptingSystem initializeHelpStrings.!