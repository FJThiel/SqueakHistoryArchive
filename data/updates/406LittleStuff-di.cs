'From Squeak 2.2 of Sept 23, 1998 on 13 November 1998 at 3:29:55 pm'!"Change Set:		LittleStuff-diDate:			13 November 1998Author:			Dan IngallsThis changeSet...Fixes a small problem with the PianoKeyboard (makes it not play when draggin things over it (as I tell my toddler, only use your hand ;-)Cleans up SeqCollection>>pairsDo: and adds a similar pairsCollect:Removes SeqCollection>>adjacent which was unused and did what pairsCollect: does.Uses ClassOrganizer default instead of the literal 'as yet unclassified' in two methods, for better factoring and easer maintenance.  [thanks to R.A. Harmon]"!!ClassDescription methodsFor: 'fileIn/Out' stamp: 'di 11/13/1998 15:25'!methods	"Answer a ClassCategoryReader for compiling messages that are not classified, as in fileouts made with Smalltalk/V"	^ ClassCategoryReader new setClass: self category: ClassOrganizer default! !!InspectorBrowser methodsFor: 'all' stamp: 'di 11/13/1998 15:27'!msgAccept: newText from: editor	| category |	category _ msgListIndex = 0		ifTrue: [ClassOrganizer default]		ifFalse: [object class organization categoryOfElement: (msgList at: msgListIndex)].	^ (object class compile: newText classified: category notifying: editor) ~~ nil! !!PianoKeyboardMorph methodsFor: 'all' stamp: 'di 11/13/1998 08:43'!mouseDownEvent: event noteMorph: noteMorph pitch: midiKey	| pitch wasPlaying |	event hand hasSubmorphs ifTrue: [^ self  "no response if drag something over me"].	noteMorph color: playingKeyColor.	pitch _ AbstractSound pitchForMIDIKey: midiKey + 23.	wasPlaying _ false.	soundPlaying		ifNil: [			soundPlaying _ soundPrototype soundForPitch: pitch dur: 100.0 loudness: 0.3]		ifNotNil: [			wasPlaying _ soundPlaying samplesRemaining > 0.			wasPlaying ifFalse: [soundPlaying _ soundPrototype soundForPitch: pitch dur: 100.0 loudness: 0.3]].	soundPlaying		pitch: pitch;		internalizeModulationAndRatio;		duration: 100.0.	wasPlaying		ifTrue: [soundPlaying envelopes do: [:e | e centerPitch: pitch]]		ifFalse: [soundPlaying reset].	SoundPlayer resumePlaying: soundPlaying quickStart: wasPlaying not.! !!SequenceableCollection methodsFor: 'enumerating' stamp: 'di 11/12/1998 15:01'!pairsCollect: aBlock 	"Evaluate aBlock with my elements taken two at a time, and return an Array with the results"	^ (1 to: self size // 2) collect:		[:index | aBlock value: (self at: 2 * index - 1) value: (self at: 2 * index)]"#(1 'fred' 2 'charlie' 3 'elmer') pairsCollect:	[:a :b | b, ' is number ', a printString]"! !!SequenceableCollection methodsFor: 'enumerating' stamp: 'di 11/12/1998 15:01'!pairsDo: aBlock 	"Evaluate aBlock with my elements taken two at a time.  If there's an odd number of items, ignore the last one.  Allows use of a flattened array for things that naturally group into pairs.  See also pairsCollect:"	1 to: self size // 2 do:		[:index | aBlock value: (self at: 2 * index - 1) value: (self at: 2 * index)]"#(1 'fred' 2 'charlie' 3 'elmer') pairsDo:	[:a :b | Transcript cr; show: b, ' is number ', a printString]"! !SequenceableCollection removeSelector: #adjacent:!