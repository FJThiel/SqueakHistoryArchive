'From Squeak2.8alpha of 4 February 2000 [latest update: #2210] on 5 June 2000 at 8:06:07 pm'!"Change Set:		127CustomFilterMove-dvfDate:			4 June 2000Author:			Daniel Vainsencher(Karl made me think...)Filtering read mail is now quick and painless -Pressing the new Custom F. Move button will present a subset of the custom filters defined - those named like an existing category. Choosing a filter will move all matching messages to the appropriate category.A category menu option called edit category filter allows you to immidiately define/edit a filter for that category.Remember to close and open Celeste so it'll create the new button."!!Celeste methodsFor: 'categories pane' stamp: 'dvf 6/4/2000 00:55'!categoryMenu: aMenu 	"Answer the menu for the categories pane."	| labels lineSeparations selectors lines |	labels _ 'save\fetch mail\send queued mail\add category' withCRs.	lineSeparations _ #(1 2 1 ).	selectors _ #(#save #fetchMail #sendQueuedMail #addCategory ).	"add commands if any category is selected."	currentCategory notNil		ifTrue: 			[labels _ labels , '\view all messages' withCRs.			selectors _ selectors , #(#viewAllMessages ).	"add extra commands if a normal category is selected"	(currentCategory ~= '.all.' & (currentCategory ~= '.unclassified.'))		ifTrue: 			[labels _ labels , '\edit category filter\rename category\remove category\import into category\export category (Celeste)\export category (Unix/Eudora)' withCRs.			lineSeparations _ lineSeparations , #(4 3 ).			selectors _ selectors , #(#editCategoryFilter #renameCategory #removeCategory #importIntoCategory #exportCategory #exportCategoryUnix )]		ifFalse: [lineSeparations _ lineSeparations , #(1 )]].	labels _ labels , '\empty trash\compact\find duplicates\toggle headers\set user name\set cc: list\set POP server\set POP username\set SMTP server' withCRs.	lineSeparations _ lineSeparations , #(3 1 5 ).	selectors _ selectors , #(#emptyTrash #compact #findDuplicates #toggleSuppressHeaders #setUserName #setCCList #setPopServer #setPopUserName #setSmtpServer ).	"add toggle for whether to delete messages on download"	DeleteInboxAfterFetching		ifTrue: 			[labels _ labels , '\leave messages on server' withCRs.			selectors _ selectors , #(#keepMessagesOnServer )]		ifFalse: 			[labels _ labels , '\don''t leave messages on server' withCRs.			selectors _ selectors , #(#deleteMessagesAfterFetching )].	lineSeparations _ lineSeparations , #(1 ).	"convert lineSeperations into absolute line positions"	lines _ lineSeparations copyFrom: 1 to: lineSeparations size - 1.	(2 to: lines size)		do: [:i | lines at: i put: (lines at: i)					+ (lines at: i - 1)].	^ aMenu		labels: labels		lines: lines		selections: selectors! !!Celeste methodsFor: 'filtering' stamp: 'dvf 6/4/2000 00:07'!customFilterMove	"Select or define and activate a custom filter."	| filterList filterName filterExpr msgList |	filterList _ CustomFilters keys asSortedCollection asOrderedCollection select: [:e | self categoryList includes: e].	filterName _ (CustomMenu selections: filterList)				startUpWithCaption: 'Select a move filter:'.	filterName ifNil: [^ self].	filterExpr _ CustomFilters at: filterName.	filterExpr isEmpty ifTrue: [^ self].	customFilterBlock _ Compiler evaluate: '[ :m | ' , filterExpr , ']'.	msgList _ self filteredMessagesIn: currentCategory.	mailDB removeAll: msgList fromCategory: currentCategory.	mailDB fileAll: msgList inCategory: filterName.	customFilterBlock _ nil.	self updateTOC! !!Celeste methodsFor: 'filtering' stamp: 'dvf 6/4/2000 00:48'!defineFilter	| filterName |	filterName _ FillInTheBlank request: 'Filter name?'.	filterName isEmpty ifTrue: [^ ''].	^self editFilterNamed: filterName ! !!Celeste methodsFor: 'filtering' stamp: 'dvf 6/4/2000 00:49'!editCategoryFilter	self editFilterNamed: currentCategory! !!Celeste methodsFor: 'filtering' stamp: 'dvf 6/4/2000 00:47'!editFilterNamed: filterName	| expr |	(CustomFilters includesKey: filterName)		ifTrue: [expr _ CustomFilters at: filterName]		ifFalse: [expr _ ''].	^ self editFilterNamed: filterName filterExpr: expr! !!Celeste class methodsFor: 'instance creation' stamp: 'dvf 6/4/2000 00:08'!buildButtonsFor: model 	"Answer a collection of handy buttons for the Celeste user interface."	| buttonViewClass buttons b |	Smalltalk isMorphic		ifTrue: [buttonViewClass _ PluggableButtonMorph]		ifFalse: [buttonViewClass _ PluggableButtonView].	buttons _ OrderedCollection new.	b _ buttonViewClass on: (Switch new onAction: [model subjectFilterOn];				 offAction: [model subjectFilterOff]).	b label: 'Subj. F.';	 borderWidth: 1.	buttons add: b.	b _ buttonViewClass on: (Switch new onAction: [model fromFilterOn];				 offAction: [model fromFilterOff]).	b label: 'From F.';	 borderWidth: 1.	buttons add: b.		b _ buttonViewClass				on: model				getState: #isCustomFilterOn				action: #customFilterOn.	b label: 'Custom F.';	 borderWidth: 1.	buttons add: b.b _ buttonViewClass				on: model				getState: nil				action: #customFilterMove.	b label: 'Custom F. Move';	 borderWidth: 1.	buttons add: b.	b _ buttonViewClass new model: (Button new onAction: [model compose]);			 action: #turnOn;			 label: 'New';			 borderWidth: 1.	buttons add: b.	b _ buttonViewClass new model: (Button new onAction: [model reply]);			 action: #turnOn;			 label: 'Reply';			 borderWidth: 1.	buttons add: b.	b _ buttonViewClass new model: (Button new onAction: [model forward]);			 action: #turnOn;			 label: 'Forward';			 borderWidth: 1.	buttons add: b.	b _ buttonViewClass new model: (Button new onAction: [model moveAgain]);			 action: #turnOn;			 label: 'Move Again';			 borderWidth: 1.	buttons add: b.	b _ buttonViewClass new model: (Button new onAction: [model deleteMessage]);			 action: #turnOn;			 label: 'Delete';			 borderWidth: 1.	buttons add: b.	^ buttons! !