'From Squeak3.2alpha of 3 October 2001 [latest update: #4588] on 7 December 2001 at 12:45:13 am'!"Change Set:		kbdFocusColor-swDate:			7 December 2001Author:			Scott WallaceAllows the color used for keyboard-focus highlighting to be specified by the user independently of the text-highlighing color."!!PluggableListMorph methodsFor: 'drawing' stamp: 'sw 12/7/2001 00:15'!drawOn: aCanvas	"Draw the list on the canvas, and possibly also draw frame feedback"	| colorToFillWith areaToFill next |	super drawOn: aCanvas.		selectedMorph ifNotNil:		[colorToFillWith _ color.		next _ self.		[colorToFillWith isTransparent and: [(next _ next owner) notNil]] whileTrue:			[colorToFillWith _ next color].		colorToFillWith _ colorToFillWith luminance < 0.5			ifTrue:				[colorToFillWith muchLighter]			ifFalse:				[colorToFillWith darker].		areaToFill _ ((scroller transformFrom: self) localBoundsToGlobal: selectedMorph bounds)						intersect: scroller bounds.		aCanvas fillRectangle: areaToFill color: colorToFillWith].	self hasFocus ifTrue:		[Preferences greenKeyboardFoci ifTrue:			[aCanvas frameRectangle: scroller bounds color: Preferences keyboardFocusColor]]! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 12/7/2001 00:44'!chooseKeyboardFocusColor	"Let the user indicate what color he wishes to have used for keyboard-focus feedback"	ColorPickerMorph new		choseModalityFromPreference;		sourceHand: self currentHand;		target: self;		selector: #keyboardFocusColor:;		originalColor: self keyboardFocusColor;		putUpFor: self currentHand near: self currentHand cursorBounds! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 12/7/2001 00:22'!keyboardFocusColor	"Answer the keyboard focus color, initializing it if necessary"	^ Parameters at: #keyboardFocusColor ifAbsentPut: [Color gray]"Parameters removeKey: #keyboardFocusColor.Preferences keyboardFocusColor"! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 12/7/2001 00:44'!keyboardFocusColor: aColor	"Set the keyboard focus color"	Parameters at: #keyboardFocusColor put: aColor! !!TheWorldMenu methodsFor: 'construction' stamp: 'sw 12/7/2001 00:03'!appearanceMenu	"Build the appearance menu for the world."	| screenCtrl |	screenCtrl _ ScreenController new.	^self fillIn: (self menu: 'appearance...') from: {		{'window colors...' . { Preferences . #windowSpecificationPanel} . 'Lets you specify colors for standard system windows.'}.		{'system fonts...' . { self . #standardFontDo} . 'Choose the standard fonts to use for code, lists, menus, window titles, etc.'}.		{'text highlight color...' . { Preferences . #chooseTextHighlightColor} . 'Choose which color should be used for text highlighting in Morphic.'}.		{'insertion point color...' . { Preferences . #chooseInsertionPointColor} . 'Choose which color to use for the text insertion point in Morphic.'}.		{'keyboard focus color' . { Preferences . #chooseKeyboardFocusColor} . 'Choose which color to use for highlighting which pane has the keyboard focus'}.		nil.		{#menuColorString . { Preferences . #toggleMenuColorPolicy} . 'Governs whether menu colors should be derived from the desktop color.'}.		{#roundedCornersString . { Preferences . #toggleRoundedCorners} . 'Governs whether morphic windows and menus should have rounded corners.'}.		nil.		{'full screen on' . { screenCtrl . #fullScreenOn} . 'puts you in full-screen mode, if not already there.'}.		{'full screen off' . { screenCtrl . #fullScreenOff} . 'if in full-screen mode, takes you out of it.'}.		nil.		{'set display depth...' . {self. #setDisplayDepth} . 'choose how many bits per pixel.'}.		{'set desktop color...' . {self. #changeBackgroundColor} . 'choose a uniform color to use as desktop background.'}.		{'set gradient color...' . {self. #setGradientColor} . 'choose second color to use as gradient for desktop background.'}.		{'use texture background' . { #myWorld . #setStandardTexture} . 'apply a graph-paper-like texture background to the desktop.'}.		nil.		{'clear turtle trails from desktop' . { #myWorld . #clearTurtleTrails} . 'remove any pigment laid down on the desktop by objects moving with their pens down.'}.	}! !