'From Squeak 2.0 of May 22, 1998 on 18 June 1998 at 3:48:26 am'!!Utilities class methodsFor: 'fetching updates' stamp: 'wod 6/18/1998 03:45'!absorbUpdatesFromServer	"Go to two common servers and look for updates.  Do not bring themto the user's disk.  A file on the server called updates.list has the namesof the last N update files.  We look backwards for the first one we do nothave, and start there bringing them in.  tk 9/10/97""* To add a new update:  Name it starting with a new two-digit code.  * Do not use %, /, *, space, or more than one period in the name of an update file.* The update name does not need to have any relation to the version name.* Figure out which versions of the system the update makes sense for.* Add the name of the file to each version's category below.* Put this file and the update file on all of the servers.** To make a new version of the system:  Pick a name for it (no restrictions)* Put # and exactly that name on a new line at the end of this file.* During the release process, fill in exactly that name in the dialog box.* Put this file on the server.""wod 6/18/1998: stop after first failure""Utilities absorbUpdatesFromServer"| doc urls failed loaded str |Utilities chooseUpdateList ifFalse: [^ self].	"ask the user which kind of updates"Cursor wait showWhile: [	(Smalltalk includesKey: #EToySystem)		ifTrue: [(Smalltalk at: #EToySystem) guessDOLProxy].	urls _ self newUpdatesOn: 		(Utilities serverUrls collect: [:url | url, 'updates/']).	loaded _ 0.	failed _ nil.	urls do: [:this |		failed ifNil: [			doc _ HTTPSocket httpGet: this accept: 'application/octet-stream'.			"check here that it worked"			doc class == String				ifTrue: [failed _ this]	"an error loading"				ifFalse: [					doc reset; text.					doc peek asciiValue = 4	"pure object file"						ifTrue: [failed _ this]	"Must be fileIn, not pure object file"						ifFalse: [							"(this endsWith: '.html') ifTrue: [doc _ doc asHtml]."								"HTML source code not supported here yet"							ChangeSorter newChangesFromStream: doc								named: (this findTokens: '/') last.							self saveUpdate: doc onFile: (this findTokens: '/') last.	"if wanted"							loaded _ loaded + 1]]]].	].str _ 'Loaded ', loaded printString ,' new update files.'.failed ifNotNil: [str _ str, '\Could not load ' withCRs, (urls size - loaded) printString ,' update files.',					'\Starting with "' withCRs, failed, '".'].self inform: str.! !