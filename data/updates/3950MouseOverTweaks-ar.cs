'From Squeak3.1alpha [latest update: #''Squeak3.1alpha'' of 28 February 2001 update 3949] on 23 April 2001 at 5:25:32 pm'!"Change Set:		MouseOverTweaks-arDate:			23 April 2001Author:			Andreas RaabMake enter/leave notification accurate for morphs being the current mouse focus in which case we have to check explicitly if the hand is really over the receiver."!!Morph methodsFor: 'events-processing' stamp: 'ar 4/23/2001 17:24'!handleMouseOver: anEvent	"System level event handling."	anEvent hand mouseFocus == self ifTrue:[		"Got this directly through #handleFocusEvent: so check explicitly"		(self containsPoint: anEvent position event: anEvent) ifFalse:[^self]].	anEvent hand noticeMouseOver: self event: anEvent! !!MouseOverHandler methodsFor: 'event handling' stamp: 'ar 4/23/2001 17:22'!processMouseOver: anEvent	"Re-establish the z-order for all morphs wrt the given event"	| hand localEvt focus evt |	hand _ anEvent hand.	leftMorphs _ mouseOverMorphs asIdentitySet.	"Assume some coherence for the number of objects in over list"	overMorphs _ WriteStream on: (Array new: leftMorphs size).	enteredMorphs _ WriteStream on: #().	"Now go looking for eventual mouse overs"	hand handleEvent: anEvent asMouseOver.	"Get out early if there's no change"	(leftMorphs size = 0 and:[enteredMorphs position = 0]) 		ifTrue:[^leftMorphs _ enteredMorphs _ overMorphs _ nil].	focus _ hand mouseFocus.	"Send #mouseLeave as appropriate"	evt _ anEvent asMouseLeave.	"Keep the order of the left morphs by recreating it from the mouseOverMorphs"	leftMorphs size > 1 ifTrue:[leftMorphs _ mouseOverMorphs select:[:m| leftMorphs includes: m]].	leftMorphs do:[:m|		(m == focus or:[m hasOwner: focus]) 			ifTrue:[localEvt _ evt transformedBy: (m transformedFrom: hand).					m handleEvent: localEvt]			ifFalse:[overMorphs nextPut: m]].	"Send #mouseEnter as appropriate"	evt _ anEvent asMouseEnter.	enteredMorphs ifNil: ["inform: was called in handleEvent:"		^leftMorphs _ enteredMorphs _ overMorphs _ nil].	enteredMorphs _ enteredMorphs contents.	enteredMorphs reverseDo:[:m|		(m == focus or:[m hasOwner: focus]) 			ifTrue:[	localEvt _ evt transformedBy: (m transformedFrom: hand).					m handleEvent: localEvt]].	"And remember the over list"	overMorphs ifNil: ["inform: was called in handleEvent:"		^leftMorphs _ enteredMorphs _ overMorphs _ nil].	mouseOverMorphs _ overMorphs contents.	leftMorphs _ enteredMorphs _ overMorphs _ nil.! !