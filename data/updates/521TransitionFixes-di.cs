'From Squeak 2.3 beta of Nov 25, 1998 on 2 January 1999 at 10:59 pm'!"Change Set:		TransitionFixes-diDate:			2 January 1999Author:			Dan IngallsMakes WorldMorph start and stop timing for interCyclePause in the same place, so as to include any effects of, eg, Processor yield in the doOneCycle loop.The above fix made it possible for transitions to use the normal world stepping mechanism, instead of its former preemptive loop, and this in turn relieves a conflict with sound generation during transitions.Removed classVar PageFlipSoundOn from BookMorph.  It is also in BooklikeMorph (where it belongs) and this was very confusing."!!TransitionMorph methodsFor: 'initialization' stamp: 'di 1/2/1999 20:55'!initiateReplacement	| n |	startForm _ effect = #dissolve		ifTrue: [(startMorph imageForm: 16 forRectangle: bounds) offset: 0@0]		ifFalse: [(startMorph imageFormForRectangle: bounds) offset: 0@0].	endForm _ (endMorph imageFormForRectangle: bounds) offset: 0@0.	nSteps == nil ifTrue:		[self nSteps: 30 stepTime: 10.		(#(zoom pageForward pageBack) includes: effect) ifTrue:			[n _ 20 * 100000 // self bounds area min: 20 max: 4.			self nSteps: n stepTime: 10].		(#dissolve = effect) ifTrue:			[n _ 20 * 50000 // self bounds area min: 20 max: 4.			self nSteps: n stepTime: 10]].	startBlock value.  "with forms in place there should b no further delay."	self arrangeToStartStepping.! !!WorldMorph methodsFor: 'interaction loop' stamp: 'di 1/2/1999 20:53'!doOneCycleNow	"Do one cycle of the interactive loop. This method is called repeatedly when the world is running."	"process user input events"	hands do: [:h |		self activeHand: h.		h processEvents.		self activeHand: nil].	self runStepMethods.	self displayWorld.! !!WorldMorph methodsFor: 'interaction loop' stamp: 'di 1/2/1999 20:53'!interCyclePause: milliSecs	"delay enough that the next interaction cycle won't happen too soon after the original; thus, if all the system is doing is polling for interaction, the overall CPU usage of Squeak will be low"	| currentTime wait |	currentTime _ Time millisecondClockValue.	lastCycleTime ifNotNil: [ 		wait _ lastCycleTime + milliSecs - currentTime.		wait > 0 ifTrue: [ 			wait < milliSecs  "big waits happen after a snapshot"				ifTrue: [ (Delay forMilliseconds: wait) wait ]. ]. ].	lastCycleTime _ currentTime! !BookMorph class removeSelector: #initialize!TabbedPalette removeSelector: #showPageTurningFeedbackFromOrigin:ascending:!BooklikeMorph subclass: #BookMorph	instanceVariableNames: 'pages currentPage '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Books'!