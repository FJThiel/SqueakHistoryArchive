'From Squeak3.1alpha of 28 February 2001 [latest update: #4299] on 2 September 2001 at 12:03:42 pm'!"Change Set:		etoyDo-swDate:			2 September 2001Author:			Scott WallaceAdds a #do command to the #misc category in etoy viewers, which performs a given script once, on the next tick."!!Morph methodsFor: 'scripting' stamp: 'sw 9/2/2001 12:01'!triggerScript: aSymbol	"Have my player perform the script of the given name, which is guaranteed to exist."	self player perform: aSymbol! !!Morph class methodsFor: 'scripting' stamp: 'sw 9/2/2001 08:49'!additionsToViewerCategoryMiscellaneous	^#(		miscellaneous 		(			(command doMenuItem: 'do the menu item' menu)			(command show 'make the object visible')			(command hide 'make the object invisible')			(command wearCostumeOf: 'wear the costume of...' player)			(command doScript: 'run the given script once, on the next tick' string)			(command startScript: 'start the given script ticking' string)			(command stopScript: 'make the given script be "normal"' string)			(command pauseScript: 'make the given script be "paused"' string)			(command tellAllSiblings: 'send a message to all siblings' string)			(command fire 'trigger any and all of this object''s button actions')			(slot copy 'returns a copy of this object' player readOnly player getNewClone	 unused unused)			(slot elementNumber 'my index in my container' number readWrite player getIndexInOwner player setIndexInOwner:)			(slot holder 'the object''s container' player readOnly player getHolder player setHolder:)			(command stampAndErase 'add my image to the pen trails and go away')		)	)! !!Morph class methodsFor: 'scripting' stamp: 'sw 9/2/2001 08:56'!helpContributions	"Answer a list of pairs of the form (<symbol> <help message> ) to contribute to the system help dictionary"	"NB: Many of the items here are not needed any more since they're specified as part of command definitions now.  Someone needs to take the time to go through the list and remove items no longer needed.  But who's got that kind of time?"	^ #(		(acceptScript:for:			'submit the contents of the given script editor as the code defining the given selector')		(actorState			'return the ActorState object for the receiver, creating it if necessary')		(addInstanceVariable			'start the interaction for adding a new instance variable to the receiver')		(addPlayerMenuItemsTo:hand:			'add player-specific menu items to the given menu, on behalf of the given hand.  At present, these are only commands relating to the turtle')		(addYesNoToHand			'Press here to tear off a  TEST/YES/NO unit which you can drop into your script')		(allScriptEditors			'answer a list off the extant ScriptEditors for the receiver')		(amount			'The amount of displacement')		(angle				'The angular displacement')		(anonymousScriptEditorFor:			'answer a new ScriptEditor object to serve as the place for scripting an anonymous (unnamed, unsaved) script for the receiver')		(append:			'add an object to this container')		(assignDecrGetter:setter:amt:			'evaluate the decrement variant of assignment')		(assignGetter:setter:amt:			'evaluate the vanilla variant of assignment')		(assignIncrGetter:setter:amt:			'evalute the increment version of assignment')		(assignMultGetter:setter:amt:			'evaluate the multiplicative version of assignment')		(assureEventHandlerRepresentsStatus			'make certain that the event handler associated with my current costume is set up to conform to my current script-status')		(assureExternalName			'If I do not currently have an external name assigned, get one now')		(assureUniClass			'make certain that I am a member a uniclass (i.e. a unique subclass); if I am not, create one now and become me into an instance of it')		(availableCostumeNames			'answer a list of strings representing the names of all costumes currently available for me')		(availableCostumesForArrows			'answer a list of actual, instantiated costumes for me, which can be cycled through as the user hits a next-costume or previous-costume button in a viewer')		(beep:			'make the specified sound')		(borderColor			'The color of the object''s border')		(borderWidth			'The width of the object''s border')		(bottom			'My bottom edge, measured downward from the top edge of the world')		(bounce:			'If object strayed beyond the boundaries of its container, make it reflect back into it, making the specified noise while doing so.')		(bounce			'If object strayed beyond the boundaries of its container, make it reflect back into it')		(chooseTrigger'When this script should run."normal" means "only when called"')		(clearTurtleTrails			'Clear all the pen trails in the interior.')		(clearOwnersPenTrails			'Clear all the pen trails in my container.')		(color				'The object''s interior color')		(colorSees			'Whether a given color in the object is over another given color')		(colorUnder			'The color under the center of the object')		(copy			'Return a new object that is very much like this one')		(cursor				'The index of the chosen element')		(deleteCard			'Delete the current card.')		(dismiss			'Click here to dismiss me')		(doMenuItem:			'Do a menu item, the same way as if it were chosen manually')		(doScript:			'Perform the given script once, on the next tick.')		(elementNumber			'My element number as seen by my owner')		(fire			'Run any and all button-firing scripts of this object')		(firstPage			'Go to first page of book')		(followPath				'Retrace the path the object has memorized, if any.')		(forward:			'Moves the object forward in the direction it is heading') 		(goto:			'Go to the specfied book page')		(goToNextCardInStack			'Go to the next card')		(goToPreviousCardInStack			'Go to the previous card.')		(goToRightOf:			'Align the object just to the right of any specified object.')		(heading			'Which direction the object is facing.  0 is straight up') 		(height				'The distance between the top and bottom edges of the object')		(hide			'Make the object so that it does not display and cannot handle input')		(initiatePainting				'Initiate painting of a new object in the standard playfield.')		(initiatePaintingIn:			'Initiate painting of a new object in the given place.')		(isOverColor			'Whether any part of this object is directly over the specified color')		(isUnderMouse			'Whether any part of this object is beneath the current mouse-cursor position')		(lastPage			'Go to the last page of the book.')		(left			'My left edge, measured from the left edge of the World')		(leftRight			'The horizontal displacement')		(liftAllPens			'Lift the pens on all the objects in my interior.')		(lowerAllPens			'Lower the pens on all the objects in my interior.')		(mouseX			'The x coordinate of the mouse pointer')		(mouseY			'The y coordinate of the mouse pointer')		(moveToward:			'Move in the direction of another object.')		(insertCard			'Create a new card.')		(nextPage			'Go to next page.')		(numberAtCursor			'The number held by the object at the chosen element')		(objectNameInHalo			'Object''s name -- To change: click here, edit, hit ENTER')		(obtrudes			'Whether any part of the object sticks out beyond its container''s borders')		(offerScriptorMenu			'The Scriptee.Press here to get a menu')		(pauseScript:			'Make a running script become paused.')		(penDown			'Whether the object''s pen is down (true) or up (false)')		(penColor			'The color of the object''s pen')		(penSize				'The size of the object''s pen')		(clearPenTrails			'Clear all pen trails in the current playfield')		(playerSeeingColorPhrase			'The player who "sees" a given color')		(previousPage			'Go to previous page')		(show			'If object was hidden, make it show itself again.')		(startScript:			'Make a script start running.')		(stopScript:			'Make a script stop running.')		(top			'My top edge, measured downward from the top edge of the world')		(right			'My right edge, measured from the left edge of the world')		(roundUpStrays			'Bring all out-of-container subparts back into view.')		(scaleFactor			'The amount by which the object is scaled')		(stopScript:			'make the specified script stop running')		(tellAllSiblings:			'send a message to all of my sibling instances')		(try			'Run this command once.')		(tryMe			'Click here to run this script once; hold button down to run repeatedly')		(turn:							'Change the heading of the object by the specified amount')		(unhideHiddenObjects			'Unhide all hidden objects.')		(upDown			'The vertical displacement')		(userScript			'This is a script defined by you.')		(userSlot			'This is an instance variable defined by you.  Click here to change its type')		(valueAtCursor			'The chosen element')		(wearCostumeOf:			'Wear the same kind of costume as the other object')		(width				'The distance between the left and right edges of the object')		(wrap			'If object has strayed beond the boundaries of its container, make it reappear from the opposite edge.')		(x			'The x coordinate, measured from the left of the container')		(y			'The y-coordinate, measured upward from the bottom of the container')		)! !!Player methodsFor: 'slots-kernel' stamp: 'sw 9/2/2001 09:00'!usableMethodInterfacesIn: methodInterfaceList	"Filter the list given by methodInterfaceList, to remove items inappropriate to the receiver"	self hasCostumeThatIsAWorld ifTrue:		[^ methodInterfaceList select: [:anInterface |			#(append: beep: clearTurtleTrails doScript: getColor "color" getCursor "cursor" deleteCard doMenuItem emptyScript firstPage goToFirstCardInBackground goToFirstCardOfStack goToLastCardInBackground goToLastCardOfStack goToNextCardInStack goToPreviousCardInStack initiatePainting insertCard  liftAllPens lowerAllPens getMouseX getMouseY "mouseX mouseY" pauseScript: reverse roundUpStrays shuffleContents startScript: stopScript: unhideHiddenObjects getValueAtCursor "valueAtCursor")includes: anInterface selector]].	self hasAnyBorderedCostumes ifTrue: [^ methodInterfaceList].	^ self hasOnlySketchCostumes		ifTrue:			[methodInterfaceList select: [:anInterface | (#(getColor getBorderColor getBorderWidth) includes: anInterface selector) not]]		ifFalse:			[methodInterfaceList select: [:anInterface | (#(getBorderColor getBorderWidth) includes: anInterface selector) not]]! !!Player methodsFor: 'slots-kernel' stamp: 'sw 9/2/2001 08:57'!usablePhraseSpecsIn: aListOfTuples	"Filter the list given by aListOfTuples, to remove items inappropriate to the receiver"	self hasCostumeThatIsAWorld ifTrue:		[^ aListOfTuples select: [:tuple |			#(beep doMenuItem color doScript: startScript: stopScript: pauseScript: liftAllPens lowerAllPens clearTurtleTrails initiatePainting cursor valueAtCursor mouseX mouseY roundUpStrays unhideHiddenObjects) includes: tuple second]].	self hasAnyBorderedCostumes ifTrue: [^ aListOfTuples].	^ self hasOnlySketchCostumes		ifTrue:			[aListOfTuples select: [:tuple | (#(color borderColor borderWidth) includes: tuple second) not]]		ifFalse:			[aListOfTuples select: [:tuple | (#(borderColor borderWidth) includes: tuple second) not]]! !!Player methodsFor: 'scripts-standard' stamp: 'sw 9/2/2001 11:59'!doScript: scriptNameString	"On the next tick of the clock, run the given script once"	Symbol hasInterned: scriptNameString ifTrue:		[:sym | (self class includesSelector: sym) ifTrue:			[costume addAlarm: #triggerScript: with: sym after: 1]]! !!StandardScriptingSystem methodsFor: 'utilities' stamp: 'sw 9/2/2001 08:54'!wordingForOperator: aString	"Answer the wording to be seen by the user for the given operator symbol/string"	| toTest |	"StandardScriptingSystem initialize"	toTest _ aString asString.	#(	(append:				'append')		(beep:					'make sound')		(bounce:				'bounce')		(clearTurtleTrails		'clear pen trails')		(clearOwnersPenTrails	'clear all pen trails')		(doMenuItem:			'do menu item')		(doScript:				'do')		(forward:				'forward by')		(moveToward:			'move toward')		(goToRightOf:			'align after')		(isDivisibleBy:			'is divisible by')		(liftAllPens				'lift all pens')		(lowerAllPens			'lower all pens')		(pauseScript:			'pause script')		(max:					'max')		(min:					'min')		(seesColor:				'is over color')		(makeNewDrawingIn:	'start painting in')		(startScript:				'start script')		(stopProgramatically	'stop')		(stopScript:				'stop script')		(turn:					'turn by')		(wearCostumeOf:		'look like'))	do:		[:pair | toTest = pair first ifTrue: [^ pair second]].	^ toTest! !!Vocabulary class methodsFor: 'class initialization' stamp: 'sw 9/2/2001 08:59'!addKiswahiliVocabulary	"Add a Kiswahili vocabulary"	"Vocabulary addKiswahiliVocabulary"	| voc |	self removeVocabularyNamed: 'Kiswahili'.	self removeVocabularyNamed: 'Kiswahili - EToy'.	voc _ EToyVocabulary new vocabularyName: 'Kiswahili - EToy'.	self addVocabulary: voc.	voc translateMethodInterfaceWordings: #((append:					'tia mwishoni'				'weka kitu hicho mwishoni')(beep:						'fanya kelele'  				'piga kelele fulani')(bounce:					'ruka duta'					'ruka duta kama mpira')(cameraPoint 				'penye kamera'				'mahali penya kamera') (clear 						'kumba'						'ondoa vilivyokwemo')(clearOwnersPenTrails		'ondoa nyayo'				'ondoa nyayo za wino')(clearTurtleTrails 			'ondoa nyayo ndani' 		'ondoa nyayo za wino zilzo ndani')(color:sees: 					'rangi yaona rangi'			'kama rangi fulana yaona rangi nyingine')(deleteCard 					'tupa karata'				'tupa karata hii')(doMenuItem: 				'fanya uchaguzi'			'fanya uchaguzi fulani')(doScript:					'piga script'					'piga script ya jina fulani mara moja')(emptyScript 				'script tupu'				'tengeneza script mpya tupu')(fire						'waka'						'waka script, yaani kuianzisha')(firstPage 					'nenda mwanzoni'			'nenda penye ukurasa wa kwanza')(followPath					'fuata njia'					'fuata njia iliyofanywa kabla')(forward: 					'nenda mbele'				'sogea mbela kwa kiasi fulani')(goToFirstCardInBackground	'endea kwanza ya nyuma'	'endea karata kwanza ya nyuma')(goToFirstCardOfStack		'endea kwanza ya stack'	'endea karata iliyo ya kwanza ya stack')(goToLastCardInBackground	'endea mwisho ya nyuma'	'endea karata ya mwisho ya nyuma')(goToLastCardOfStack		'endea mwisho ya stack'		'endea karata ya mwisho ya stack')(goToNextCardInStack		'endea karata ifuatayo'		'endea karata itakayofuata penye stack')(goToPreviousCardInStack	'endea karata itanguliayo'	'endea karata kliyonitangulia penye stack')(goToRightOf:				'endea karibu ya kulia'		'sogea hata nipo upande wa kulia kuhusu kitu fulani')(goto:						'endea mahali fulani'		'endea mahali fulani')(hide					'ficha'							'nifanywe ili nisionekane')(initiatePainting			'anza kupiga picha'				'anza kupiga picha mpya')(insertCard				'weka karata mpya'				'weka karata mpya ndani ya stack')(lastPage				'ukurasa wa mwisho'			'endea ukurasa ya mwisho')(liftAllPens				'inua kalamu zote'				'inua kalamu zote zilizomo ndani, ili zisipige rangi')(loadSineWave			'pakia wimbi la sine'			'pakia wimibi (la kitrigonometry) la sine')(loadSound:				'pakia kelele'					'pakia kelele fulani')(lowerAllPens			'telemsha kalamu zote'			'telemsha kalamu zote ya vitu vyote vilivyomo ndani')(makeNewDrawingIn:	'anza kupiga picha kiwanjani'	'anza kupaga picha mpya ndani ya kiwanja')(moveToward:			'nenda upande wa'				'nenda upande wa kitu fulani')(nextPage				'endea ukurasa ufuatao'		'nenda ukurasani unaofuata')(pauseScript:			'pumzisha script'				'pumzisha script fulani')(play					'cheza'							'cheza, basi!!')(previousPage			'endea ukurasa uliotangulia'	'enda ukurasa uliotangulia ukurusa huu')(removeAll				'ondoa vyote vilivyokuwemo'	'ondoa vitu vyote vilvyomo dani')(reverse				'kinyume'						'kinyume cha upande')(roundUpStrays			'kusanya'						'sanya vitu vilovyopotoleka')(seesColor:				'yaona rangi'					'kama naona rangi fulani')(show					'onyesha'						'fanya hata naonekana')(shuffleContents			'changanya'					'changanya orodha ya ndani')(stampAndErase			'piga chapa na kufuta'			'piga chapa, halafu kufuta')(startScript:				'anzisha script'					'anzisha script ya jina fulani')(stopScript:				'simamisa skriptu'				'simamisha script ya jana fulani')(tellAllSiblings:			'watangazie ndugu'				'tangaza habari kwa ndugu zangu wote')(touchesA:				'yagusa'						'kama nagusa kitu cha aina fulani')(turn:					'geuka'							'geuka kwa pembe fulani')(unhideHiddenObjects	'onyesha vilivyofichwa' 		'onyesha vitu ndani vilivyofichwa')(wearCostumeOf: 		'vaa nguo za'					'vaa nguo za mtu mwingine')(wrap					'zunguka'						'baada ya kutoka, ingia n''gambo')(getActWhen 			'waka kama'			'lini ya waka')(getAllButFirstCharacter	'herufi ila ya kwanza' 'herufi zote isipokuwa ile ya kwanza tu')(getAmount				'kiasi'					'kiasi gani')(getAngle				'pembe'					'pembe iliyopo (degree)')(getBorderColor			'rangi ya mpaka'		'rangi ya mpaka wangu')(getBorderWidth			'upana wa mpaka'		'upana wa mpaka wangu')(getBottom 				'chini'					'chini yangu')(getBrightnessUnder		'mng''aro chini'			'mwangaza chini yangu')(getCharacters			'herufi'					'herufi zangu')(getColor				'rangi' 					'rangi yangu')(getColorUnder 			'rangi chini'			'rangi chini yangu')(getConePosition			'penye cone'			'mahali penye cone')(getCursor				'kidole'					'namba ya kitu ndani kilichagulwa')(getDescending			'kama yaenda chini'	'kama naonyesha vitu chini')(getDistance				'urefu'					'urefu kutoka asili')(getFirstCharacter		'herufi ya kwanza'		'herufi yangu ya kwanza')(getFirstElement			'kitu cha kwanza'		'kitu changu cha ndani cha kwanza')(getFogColor				'rangi ya ukungu'		'rangi ya ukungu wangu')(getFogDensity			'nguvu wa ukungu'	'nguvu ya ukungu wangu')(getFogRangeEnd		'mwisho wa ukungu'	'mwisho wa upana wa ukungu wangu')(getFogRangeStart		'mwanzo wa ukungu'	'mwanzo wa upana wa ukungu wangu')(getFogType				'aina ya ukungu'		'aina ya ukungu wangu')(getGraphic				'picha'					'picha ninayonyesha')(getGraphicAtCursor		'picha penye kidolee'	'picha iliyopo penye kidole changu')(getHeading				'upande'				'upande gani ninayoelekea')(getHeight				'urefu'					'urefu wangu')(getHolder				'mshikoi'				'kitu niliomo ndani yake')(getIndexInOwner		'namba kataki mwenyeji' 'namba niliyo nayo katika mwenyeji')(getIsUnderMouse		'chini kipanya'			'kama nipo chini ya kipanya')(getKnobColor			'rangi ya ndani'		'rangi ya sehemu yangu ya ndani')(getLabel				'tangazo'				'iliyoandishwa juu yangu')(getLastValue			'mapimo'				'iliyokuwemo ndani')(getLeft					'kushoto'				'mpaka wa kushoto')(getLeftRight			'kiasi cha sawasawa'	'kiasi cha kushoto ama kulia')(getLuminanceUnder	'uNg''aa chini'			'uNg''aa ya sehemu chini yangu')(getMaxVal				'kiasi cha juu'			'kiasi cha juu humu ndani')(getMinVal				'kiasi cha chini'		'kiasi cha chini humu ndani')(getMouseX				'x ya kipanya'			'mahali pa x pa kipanya')(getMouseY				'y ya kipanya'			'mahali pa y pa kipanya')(getNewClone			'nakala'				'fanya nakala yangu')(getNumberAtCursor		'namba kidoleni'		'namba iliyopo kidoleni')(getNumericValue		'namba humu'			'namba iliyopo katika kituc hicho')(getObtrudes				'jiingiliza'				'kama kitu hicho hujiingiliza')(getPenColor				'rangi ya kalamu'		'rangi ninayotumia kwa kalamu')(getPenDown			'kalamu chini'			'kama kalamu hukaa chini')(getPenSize				'upana wa kalamu'		'urefu wa kalamu ninayotumia')(getRight				'kulia'					'mpaka wa kulia')(getRoundedCorners		'viringisha'				'tumia pembe zilizoviringishwa')(getSampleAtCursor		'kiasi kidoleni'			'kiasi kilichopo kidoleni')(getSaturationUnder		'kunyewesha chini'		'kiasi cha kunyewesha chini ya kati yangu')(getScaleFactor			'kuzidisha kwa'			'kiasi ninachozidishwa nacho')(getTheta				'theta'					'pemba kwa x-axis')(getTop					'juu'					'mpaka wa juu')(getTruncate			'kata'					'kama kukata ama sivyo')(getUpDown				'juu/chini'				'kiasi cha juu ama cha chini')(getValueAtCursor		'mchezaji kidoleni'		'mchechazji aliyepo kidoneni')(getViewingByIcon 		'angalia kwa picha'		'kama vitu vilivyomo ndani huanagaliwa kwa picha ama sivyo')(getX					'x'						'mahali pa x')(getY					'y'						'mahali ya y')(getWidth				'upana'					'upana wangu')).	voc addToTranslationTableFrom: #((:						'_'						'tia ndani')(Incr:					'pamoja na'				'tia thamani + fulani')(Decr:					'toa'					'tia thamani - fulani')(Mult:					'mara'					'tia thamani * fulani')).	voc translateCategories: #((basic					muhimu				'mambo muhimu muhimu')(#'book navigation'		#'kuongoza vitabu'		'kuhusu kuongozea vitabu')(button					kifungo					'mambo kuhusu vifungo')(collections				mikusanyo				'kuhusu mikusanyo ya vitu')(fog					ukungu					'kuhusu ukungu (3D)')(geometry				kupimia					'urefu na kadhaliki')(#'color & border'		#'rangi & mpaka'		'kuhusu rangi na mpaka')(graphics				picha					'mambo kuhusu picha')(#'instance variables'	badiliko					'data zilizoundwa na yule atumiaye')(joystick				#'fimbo la furaha'		'kuhusu fimbo la furaha, yaani "joystick"')(miscellaneous			mbalimbali				'mambo mbalimbali')(motion					kusogea					'kwenda, kuegeuka, etc.')(paintbox				#'kupiga rangi'			'vitu kuhusu kupigia rangi')(#'pen trails'			#'nyayo za kalamu'		'kuhusu nyay za kalamu')(#'pen use'				#'kalamu'				'kuhusu kalamu')(playfield				kiwanja					'vitu kuhusu kiwanjani')(sampling				kuchagua				'mambo kuhusu kuchagua')(scripts					taratibu				'taratibu zilizoundwa na atumiaye')(slider					telezo					'kitu kionyeshacho kiasi cha namba fulani')(speaker				spika					'kuhusu spika za kelele')(#'stack navigation'		#'kuongoza chungu'	'kuhuso kuongozea chungu')(storyboard				kusimulia				'kusimilia hadithi')(tests					kama					'amua kama hali fulani i kweli ama sivyo')(text					maneno					'maandiko ya maneno')(viewing				kuangaliwa				'kuhusu kuangalia vitu')).! !"Postscript:"StandardScriptingSystem initialize.Vocabulary initialize.!