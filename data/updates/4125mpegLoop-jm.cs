'From Squeak3.1alpha of 28 February 2001 [latest update: #4120] on 3 June 2001 at 7:03:47 pm'!"Change Set:		mpegLoop-jmDate:			3 June 2001Author:			John MaloneyAdds a repeat button to the MPEG player. Also adds a work-aroundfor bugs in the C library that cause errors if you seek to a newposition while playing. The work-around is to simply stop playingif the position slider is dragged. Finally, hides the video displaywhen playing an audio-only (MP3) file."!Morph subclass: #MPEGDisplayMorph	instanceVariableNames: 'frameBuffer mpegFile running desiredFrameRate allowFrameDropping startMSecs startFrame soundTrack volume endMSecs repeat '	classVariableNames: ''	poolDictionaries: ''	category: 'MPEG-Player'!AbstractSound subclass: #StreamingMP3Sound	instanceVariableNames: 'mpegHandle mpegStreamIndex mpegSamplingRate volume totalSamples mixer repeat '	classVariableNames: ''	poolDictionaries: ''	category: 'MPEG-Player'!!MPEGDisplayMorph methodsFor: 'initialization' stamp: 'jm 6/3/2001 14:35'!initialize	super initialize.	super extent: 320@240.	frameBuffer _ mpegFile _ nil.	desiredFrameRate _ 10.0.	allowFrameDropping _ true.	running _ false.	repeat _ false.	volume _ 0.5.! !!MPEGDisplayMorph methodsFor: 'accessing' stamp: 'jm 6/3/2001 18:21'!moviePosition: fraction	"Jump to the position the given fraction through the movie. The argument is a number between 0.0 and 1.0."	| totalSamples sampleIndex lastFrame frameIndex |	self mpegFileIsOpen ifFalse: [^ self].	self stopPlaying.	sampleIndex _ nil.	mpegFile hasAudio ifTrue: [		totalSamples _ mpegFile audioSamples: 0.		sampleIndex _ ((totalSamples * fraction) truncated max: 0) min: totalSamples.		mpegFile audioSetSample: 0 stream: 0.		mpegFile audioSetSample: sampleIndex stream: 0].	mpegFile hasVideo ifTrue: [		lastFrame _ mpegFile videoFrames: 0.		sampleIndex			ifNil: [frameIndex _ (lastFrame * fraction) truncated - 1]			ifNotNil: [frameIndex _ (lastFrame * (sampleIndex / totalSamples)) truncated - 1].		frameIndex _ (frameIndex max: 0) min: (lastFrame - 3).		mpegFile videoSetFrame: frameIndex stream: 0.		self nextFrame].! !!MPEGDisplayMorph methodsFor: 'accessing' stamp: 'jm 6/3/2001 14:34'!repeat	"Answer the repeat flag."	repeat ifNil: [repeat _ false].	^ repeat! !!MPEGDisplayMorph methodsFor: 'accessing' stamp: 'jm 6/3/2001 14:33'!repeat: aBoolean	"Set the repeat flag. If true, the movie will loop back to the beginning when it gets to the end."	repeat _ aBoolean.! !!MPEGDisplayMorph methodsFor: 'accessing' stamp: 'jm 6/3/2001 14:35'!volume	"Answer the sound playback volume."	^ volume! !!MPEGDisplayMorph methodsFor: 'accessing' stamp: 'jm 6/13/2001 16:12'!volume: aNumber	"Set the sound playback volume to the given level, between 0.0 and 1.0."	volume _ aNumber asFloat.	volume < 0.0 ifTrue: [volume _ 0.0].	volume > 1.0 ifTrue: [volume _ 1.0].	soundTrack ifNotNil: [soundTrack volume: volume].! !!MPEGDisplayMorph methodsFor: 'file open/close' stamp: 'jm 6/13/2001 16:11'!openFileNamed: mpegFileName	"Try to open the MPEG file with the given name. Answer true if successful."	| e secs |	self closeFile.	(FileDirectory default fileExists: mpegFileName)		ifFalse: [self inform: 'File not found: ', mpegFileName. ^ false].	(MPEGFile isFileValidMPEG: mpegFileName)		ifFalse: [self inform: 'Not an MPEG file: ', mpegFileName. ^ false].	mpegFile _ MPEGFile openFile: mpegFileName.	mpegFile fileHandle ifNil: [^ false].	mpegFile hasVideo		ifTrue: [  "set screen size and display first frame"			desiredFrameRate _ mpegFile videoFrameRate: 0.			mpegFile hasAudio ifTrue: [  "compute frame rate from audio track"				secs _ (mpegFile audioSamples: 0) asFloat / (mpegFile audioSampleRate: 0).				desiredFrameRate _ (mpegFile videoFrames: 0) / secs].			e _ (mpegFile videoFrameWidth: 0)@(mpegFile videoFrameHeight: 0).			frameBuffer _ Form extent: e depth: (Display depth max: 16).			super extent: e.			self nextFrame]		ifFalse: [  "blank screen for audio-only files"			mpegFile hasAudio ifTrue: [				super extent: 250@0]].! !!MPEGDisplayMorph methodsFor: 'commands' stamp: 'jm 6/3/2001 17:22'!rewindMovie	"Rewind to the beginning of the movie."	"Details: Seeking by percent or frame number both seem to have problems, so just re-open the file."	| savedRate |	self mpegFileIsOpen ifFalse: [^ self].	self stopPlaying.	savedRate _ desiredFrameRate.  "hold onto rate, in case user set it"	self openFileNamed: mpegFile fileName.  "recomputes rate"	desiredFrameRate _ savedRate.  "restore user's rate"	soundTrack ifNotNil: [soundTrack pause].	soundTrack _ StreamingMP3Sound new initMPEGHandle: mpegFile streamIndex: 0.	soundTrack volume: volume.! !!MPEGDisplayMorph methodsFor: 'commands' stamp: 'jm 6/3/2001 18:36'!startPlaying	"Start playing the movie at the current position."	running _ false.	self mpegFileIsOpen ifFalse: [^ self].	"initialize newly-added instance variables"	allowFrameDropping ifNil: [allowFrameDropping _ true].	repeat ifNil: [repeat _ false].	soundTrack ifNotNil: [soundTrack pause].	SoundPlayer stopReverb.	soundTrack _ StreamingMP3Sound new initMPEGHandle: mpegFile streamIndex: 0.	soundTrack volume: volume.	soundTrack repeat: self repeat.	soundTrack resumePlaying.	running _ true.	startFrame _ mpegFile videoGetFrame: 0.	startMSecs _ Time millisecondClockValue.! !!MPEGDisplayMorph methodsFor: 'commands' stamp: 'jm 6/3/2001 14:30'!stopPlaying	"Stop playing the movie."	running _ false.	soundTrack ifNotNil: [soundTrack pause].! !!MPEGDisplayMorph methodsFor: 'stepping' stamp: 'jm 6/3/2001 18:38'!step	"If I'm running and the mpegFile is open and has video, advance to the next frame. Stop if we we hit the end of the video."	running ifFalse: [^ self].	mpegFile ifNil: [^ self].	(mpegFile hasVideo and:	 [(mpegFile videoGetFrame: 0) >= (mpegFile videoFrames: 0)])		ifTrue: [  "end of video"			self stopPlaying.			repeat ifTrue: [				self rewindMovie.				self startPlaying]]		ifFalse: [self advanceFrame].! !!MPEGDisplayMorph methodsFor: 'other' stamp: 'jm 6/3/2001 14:29'!measureMaxFrameRate	"For testing. Play through the movie as fast as possible, updating the world each time, and report the frame rate."	| oldFrameRate oldFrameDropping t |	self rewindMovie.	oldFrameRate _ desiredFrameRate.	oldFrameDropping _ allowFrameDropping.	desiredFrameRate _ 1000.0.	allowFrameDropping _ false.	self startPlaying.	t _ [[running] whileTrue: [World doOneCycleNow]] timeToRun.	desiredFrameRate _ oldFrameRate.	allowFrameDropping _ oldFrameDropping.	^ (mpegFile videoFrames: 0) / (t / 1000.0)! !!MPEGMoviePlayerMorph methodsFor: 'private' stamp: 'jm 6/3/2001 17:32'!addButtonRow	| r repeatSwitch |	r _ AlignmentMorph newRow vResizing: #shrinkWrap; color: color.	r addMorphBack: (self buttonName: 'Open' action: #openMPEGFile).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: 'Rewind' action: #rewindMovie).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: 'Play' action: #startPlaying).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: 'Stop' action: #stopPlaying).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: 'Rate' action: #setFrameRate).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	repeatSwitch _ SimpleSwitchMorph new		offColor: (Color gray: 0.8);		onColor: (Color r: 1.0 g: 0.6 b: 0.6);		borderWidth: 1;		borderColor: (Color r: 0.333 g: 0.667 b: 0.5);		label: 'Repeat';		actionSelector: #repeat:;		target: moviePlayer;		setSwitchState: moviePlayer repeat.	r addMorphBack: repeatSwitch.	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: '<' action: #previousFrame).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	r addMorphBack: (self buttonName: '>' action: #nextFrame).	r addMorphBack: (Morph new extent: 4@1; color: Color transparent).	self addMorphBack: r.! !!MPEGMoviePlayerMorph methodsFor: 'private' stamp: 'jm 6/3/2001 17:31'!buttonName: aString action: aSymbol	^ SimpleButtonMorph new		target: moviePlayer;		label: aString;		actionSelector: aSymbol;		color: (Color gray: 0.8);		borderColor: #raised.! !!StreamingMP3Sound methodsFor: 'initialization-release' stamp: 'jm 6/3/2001 18:01'!initFileName: fileName	"Open the MP3 or MPEG file with the given name."	| h |	(MPEGFile isFileValidMPEG: fileName) ifFalse: [^ nil].	h _ MPEGFile openFile: fileName.	self initMPEGHandle: h streamIndex: 0.  "assume sound track is in stream 0"! !!StreamingMP3Sound methodsFor: 'accessing' stamp: 'jm 6/3/2001 15:43'!repeat	"Answer the repeat flag."	repeat ifNil: [repeat _ false].	^ repeat! !!StreamingMP3Sound methodsFor: 'accessing' stamp: 'jm 6/3/2001 18:39'!repeat: aBoolean	"Set the repeat flag. If true, this sound will loop back to the beginning when it gets to the end."	repeat _ aBoolean.! !!StreamingMP3Sound methodsFor: 'playing' stamp: 'jm 6/3/2001 16:58'!playSampleCount: n into: aSoundBuffer startingAt: startIndex	"Mix the next n samples of this sound into the given buffer starting at the given index"	| current |	self repeat ifTrue: [  "loop if necessary"		current _ mpegHandle audioGetSample: mpegStreamIndex.		(totalSamples - current) < n ifTrue: [			mpegHandle audioSetSample: 0 stream: mpegStreamIndex]].	self loadBuffersForSampleCount: (n * mpegSamplingRate) // SoundPlayer samplingRate.	mixer playSampleCount: n into: aSoundBuffer startingAt: startIndex.! !!StreamingMP3Sound methodsFor: 'playing' stamp: 'jm 6/3/2001 18:00'!reset	super reset.	self createMixer.	mpegHandle audioSetSample: 0 stream: mpegStreamIndex.! !!StreamingMP3Sound methodsFor: 'playing' stamp: 'jm 6/3/2001 16:50'!samplesRemaining	| samplesPlayed |	mpegHandle ifNil: [^ 0].	self repeat ifTrue: [^ 1000000].	samplesPlayed _ mpegHandle audioGetSample: mpegStreamIndex.	samplesPlayed > totalSamples ifTrue: [^ 0].	^ totalSamples - samplesPlayed! !!StreamingMP3Sound methodsFor: 'private' stamp: 'jm 6/3/2001 18:00'!createMixer	"Create a mixed sound consisting of sampled sounds with one sound buffer's worth of samples. The sound has the same sampling rate and number of channels as the MPEG or MP3 file."	| channels pan snd |	mpegHandle ifNil: [^ self error: 'No MPEG or MP3 file'].	channels _ mpegHandle audioChannels: mpegStreamIndex.	mpegSamplingRate _ mpegHandle audioSampleRate: mpegStreamIndex.	mixer _ MixedSound new.	1 to: channels do: [:c |		channels = 1			ifTrue: [pan _ 0.5]			ifFalse: [pan _ (c - 1) asFloat / (channels - 1)].		snd _ SampledSound			samples: (SoundBuffer newMonoSampleCount: 2)  "buffer size will be adjusted dynamically"			samplingRate: mpegSamplingRate.		mixer add: snd pan: pan volume: volume].! !StreamingMP3Sound removeSelector: #ensureFileOpen!StreamingMP3Sound removeSelector: #samplePosition!StreamingMP3Sound removeSelector: #samplePosition:!StreamingMP3Sound removeSelector: #totalSamples!AbstractSound subclass: #StreamingMP3Sound	instanceVariableNames: 'mpegHandle mpegStreamIndex mpegSamplingRate volume repeat totalSamples mixer '	classVariableNames: ''	poolDictionaries: ''	category: 'MPEG-Player'!Morph subclass: #MPEGDisplayMorph	instanceVariableNames: 'frameBuffer mpegFile running desiredFrameRate allowFrameDropping repeat startMSecs startFrame soundTrack volume '	classVariableNames: ''	poolDictionaries: ''	category: 'MPEG-Player'!!MPEGDisplayMorph reorganize!('initialization' initialize)('accessing' moviePosition moviePosition: repeat repeat: volume volume:)('file open/close' closeFile mpegFileIsOpen openFileNamed: openMPEGFile)('drawing' areasRemainingToFill: drawOn: extent:)('commands' nextFrame previousFrame rewindMovie setFrameRate startPlaying stopPlaying)('stepping' step stepTime)('other' advanceFrame measureMaxFrameRate)!