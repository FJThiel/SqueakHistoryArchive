'From Squeak3.2alpha of 2 October 2001 [latest update: #4439] on 17 October 2001 at 10:08:08 am'!"Change Set:		tileNameOnDup-swDate:			17 October 2001Author:			Scott WallaceAfter a duplicate (green handle) or script-acquisition, the names initially seen on self tiles in the duplicated scripts were wrong; this fixes that."!!Morph methodsFor: 'copying' stamp: 'sw 10/17/2001 10:06'!duplicate	"Make and return a duplicate of the receiver"	| newMorph aName w aPlayer |	self okayToDuplicate ifFalse: [^ self].	aName _ (w _ self world) ifNotNil:		[w nameForCopyIfAlreadyNamed: self].	newMorph _ self veryDeepCopy.	aName ifNotNil: [newMorph setNameTo: aName].	newMorph arrangeToStartStepping.	newMorph privateOwner: nil. "no longer in world"	newMorph isPartsDonor: false. "no longer parts donor"	(aPlayer _ newMorph player) belongsToUniClass ifTrue:		[aPlayer class bringScriptsUpToDate].	^ newMorph! !!Morph methodsFor: 'scripting' stamp: 'sw 10/17/2001 09:46'!bringTileScriptingElementsUpToDate	"Send #bringUpToDate to every tile-scripting element of the receiver, including possibly the receiver itself"	(self allMorphs select: [:s | s isTileScriptingElement]) do:		[:el | el bringUpToDate]! !!Player class methodsFor: 'scripts' stamp: 'sw 10/17/2001 09:08'!bringScriptsUpToDate	"Bring all the receiver's scripts up to date, after, for example, a name change"	self scripts do:		[:aUniclassScript |			aUniclassScript bringUpToDate]! !!SketchMorph methodsFor: 'e-toy support' stamp: 'sw 10/17/2001 09:14'!acquirePlayerSimilarTo: aSketchMorphsPlayer	"Retrofit into the receiver a player derived from the existing scripted player of a different morph.  Works only between SketchMorphs. Maddeningly complicated by potential for transformations or native sketch-morph scaling in donor or receiver or both"	| myName myTop itsTop newTop newSketch |	myTop _ self topRendererOrSelf.	aSketchMorphsPlayer belongsToUniClass ifFalse: [^ self beep].	itsTop _ aSketchMorphsPlayer costume.	(itsTop renderedMorph isKindOf: SketchMorph)		ifFalse:	[^ self beep].	newTop _ itsTop veryDeepCopy.  "May be a sketch or a tranformation"	myName _ myTop externalName.  "Snag before the replacement is added to the world, because otherwise that could affect this"	newSketch _ newTop renderedMorph.	newSketch form: self form.	newSketch scalePoint: self scalePoint.	newSketch bounds: self bounds.	myTop owner addMorph: newTop after: myTop.	newTop heading ~= myTop heading ifTrue:		"avoids annoying round-off error in what follows"			[newTop player setHeading: myTop heading]. 	(newTop isFlexMorph and: [myTop == self])		ifTrue:			[newTop removeFlexShell].	newTop _ newSketch topRendererOrSelf.	newTop bounds: self bounds.	(newTop isFlexMorph and:[myTop isFlexMorph]) ifTrue:[		"Note: This completely dumps the above #bounds: information.		We need to recompute the bounds based on the transform."		newTop transform: myTop transform copy.		newTop computeBounds].	newTop setNameTo: myName.	newTop player class bringScriptsUpToDate.	myTop delete! !!UniclassScript methodsFor: 'script editor' stamp: 'sw 10/17/2001 09:46'!bringUpToDate	"Bring all versions of the receiver's tile-script source up to date"	currentScriptEditor ifNotNil:		[currentScriptEditor bringTileScriptingElementsUpToDate].	formerScriptingTiles isEmptyOrNil ifFalse:		[formerScriptingTiles do:			[:aPair | aPair second do:				[:aMorph | aMorph bringTileScriptingElementsUpToDate]]]! !