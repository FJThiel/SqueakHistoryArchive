'From Squeak2.9alpha of 16 June 2000 [latest update: #2440] on 30 June 2000 at 6:48:11 pm'!"Change Set:		natLang-tkDate:			30 June 2000Author:			Ted KaehlerAdds menu items on all ParagraphEditor shift menus:'definition of word'	  Lookup the definition of a word from an internet dictionary.'verify spelling of word'  From an internet dictionary.  Answer yes or no.'choose language'     Pick a primary language English uses the WordNet dictionary.  I have coded one alternative, Portuguese.  I invite you to add new subclasses of class WordNet to interface with dictionaries of other languages.Adds two new Preferences, #naturalLanguage and #languageTranslateFrom.Bug fix:  (<a Class> respondsTo: nil) was returning true.  Now it returns false.Preferences setPreference:toValue: now returns the new value.  New class comment in Preferences."!!Preferences commentStamp: 'tk 6/27/2000 11:35' prior: 0!A general mechanism to store preference choices.  The default setup treats any symbol as a potential boolean flag; flags unknown to the preference dictionary are always returned as false.  It is also possible to store non-boolean data in the preference table.  sw 8/91All messages are to the class.	Preferences logDebuggerStackToFileYou can make up a new preference any time.  Do not define a new message in Preferences class.  When Preferences does not understand a selector, it looks in the flags dictionary.  It calls:	Preferences valueOfFlag: #logDebuggerStackToFileTo set a preference,	Preferences setPreference: #logDebuggerStackToFile toValue: false.Or,	Preferences disable: #logDebuggerStackToFile.Or to turn it on,	Preferences enable: #logDebuggerStackToFile.!Object subclass: #WordNet	instanceVariableNames: 'form url args word replyHTML parts partStreams rwStream replyParsed '	classVariableNames: 'CanTranslateFrom Languages '	poolDictionaries: ''	category: 'Network-TelNet WordNet'!WordNet subclass: #PortugueseLexiconServer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Network-TelNet WordNet'!!PortugueseLexiconServer commentStamp: 'tk 6/30/2000 12:14' prior: 0!Provide a standard interface for the Portuguese language dictionary at http://www.priberam.pt/.PortugueseLexiconServer openScamperOn: 'palavra'.See WordNet.Not yet completed:** convert an input string from Apple character encoding to Netscape encoding.  'particípio' -> 'particÌpio'** Better parse the definition, so it can be used.!]style[(260 17 64)f1,f1cblack;,f1!!MethodDictionary methodsFor: 'accessing' stamp: 'tk 6/30/2000 00:14'!includesKey: aSymbol	"This override assumes that pointsTo is a fast primitive"	aSymbol ifNil: [^ false].	^ super pointsTo: aSymbol! !!ParagraphEditor methodsFor: 'menu messages' stamp: 'tk 6/30/2000 08:41'!languagePrefs	"Lets user set preference for primary natural language and languages to translate from and to.  Preferences naturalLanguage.  Preferences languageTranslateFrom."	self terminateAndInitializeAround: [		WordNet languagePrefs].! !!ParagraphEditor methodsFor: 'menu messages' stamp: 'tk 6/27/2000 12:27'!verifyWordSpelling	| aWord answer |	"Look up a single word and inform the user if it was found.  Use the WordNet server.  Requires internet access.  Default is English, but set it like this	Preferences setPreference: #naturalLanguage toValue: #Deutsch.	"	self lineSelectAndEmptyCheck: [^ self].	aWord _ self selection asString.	Cursor execute showWhile: [		answer _ WordNet lexiconServer verify: aWord].	self terminateAndInitializeAround: [		self inform: answer].! !!ParagraphEditor methodsFor: 'menu messages' stamp: 'tk 6/30/2000 06:25'!wordDefinition	| aWord |	"Look up a single word and open its definition in a separate window.  Use the WordNet server.  Requires internet access.  Default is English, but set it like this	Preferences setPreference: #naturalLanguage toValue: #Deutsch.	"	self lineSelectAndEmptyCheck: [^ self].	aWord _ self selection asString.	self terminateAndInitializeAround: [		WordNet lexiconServer openScamperOn: aWord]."This code for showing definition in a Workspace	Cursor execute showWhile: [		(aDefinition _ WordNet lexiconServer definitionsFor: aWord) ifNil: [			^ view flash]].	self terminateAndInitializeAround: [		(StringHolder new contents: aDefinition) openLabel: aWord		]."! !!ParagraphEditor class methodsFor: 'class initialization' stamp: 'tk 6/30/2000 08:26'!shiftedYellowButtonMenu	"Answer the menu to be presented when the yellow button is pressed while the shift key is down"	^ SelectionMenu fromArray: #(		('set font... (k)'					offerFontMenu)		('set style... (K)'					changeStyle)		('set alignment...'				chooseAlignment)		-		('explain'						explain)		('pretty print'					prettyPrint)		('pretty print with color'		prettyPrintWithColor)		('file it in'						fileItIn)		('recognizer (r)'					recognizeCharacters)		('spawn (o)'						spawn)		-		('definition of word'				wordDefinition)		('verify spelling of word'		verifyWordSpelling)"		('spell check it'					spellCheckIt)	""		('translate it'					translateIt)		"		('choose language'				languagePrefs)		-		('browse it (b)'					browseIt)		('senders of it (n)'				sendersOfIt)		('implementors of it (m)'		implementorsOfIt)		('references to it (N)'			referencesToIt)		('selectors containing it (W)'		methodNamesContainingIt)		('method strings with it (E)'		methodStringsContainingit)		('method source with it'			methodSourceContainingIt)		-		('save contents to file...'			saveContentsInFile)		('send contents to printer'		sendContentsToPrinter)		('printer setup'					printerSetup)		-		('special menu...'				presentSpecialMenu)		('more...'						yellowButtonActivity))! !!PluggableTextMorph methodsFor: 'menu commands' stamp: 'tk 6/30/2000 08:38'!languagePrefs	textMorph editor languagePrefs! !!PluggableTextMorph methodsFor: 'menu commands' stamp: 'tk 6/27/2000 12:31'!verifyWordSpelling	textMorph editor verifyWordSpelling! !!PluggableTextMorph methodsFor: 'menu commands' stamp: 'tk 6/27/2000 12:32'!wordDefinition	textMorph editor wordDefinition! !!Preferences class methodsFor: 'preferences dictionary' stamp: 'tk 6/30/2000 08:21'!setPreference: prefSymbol toValue: aBoolean	(FlagDictionary at: prefSymbol ifAbsent: [nil]) == aBoolean		ifFalse:			[FlagDictionary at: prefSymbol put: aBoolean.			self noteThatFlag: prefSymbol justChangedTo: aBoolean].	^ aBoolean! !!WordNet methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 11:36'!parts	"return the parts of speech this word can be.  Keep the streams for each"	parts _ OrderedCollection new.	partStreams _ OrderedCollection new.	rwStream ifNil: [self stream].	rwStream reset.	rwStream match: '<HR>'.	[rwStream atEnd] whileFalse: [		partStreams add: (ReadStream on: (rwStream upToAll: '<HR>'))].	partStreams do: [:pp |		parts add: (self partOfSpeechIn: pp)].	parts size = 0 ifTrue: [^ parts].	parts last = '' ifTrue: [parts removeLast.  partStreams removeLast].	^ parts ! !!PortugueseLexiconServer methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 18:32'!decodeAccents: appleTypeString	"change characters like í, to the form used in Portuguese"	| encodedStream rem |	encodedStream _ WriteStream on: (String new).		appleTypeString do: [ :c |		rem _ encodedStream position.		c == $í ifTrue: [encodedStream nextPut: (Character value: 237)].		c == $á ifTrue: [encodedStream nextPut: (Character value: 225)].		c == $é ifTrue: [encodedStream nextPut: (Character value: 233)].		c == $ç ifTrue: [encodedStream nextPut: (Character value: 231)].		c == $ã ifTrue: [encodedStream nextPut: (Character value: 227)].		c == $ó ifTrue: [encodedStream nextPut: (Character value: 243)].		c == $ê ifTrue: [encodedStream nextPut: (Character value: 234)].		"and more, such as e with a backwards accent"		rem = encodedStream position ifTrue: [			encodedStream nextPut: c].		].	^encodedStream contents. ! !!PortugueseLexiconServer methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 12:29'!definition: theWord	"look this word up in the basic way.  Return nil if there is trouble accessing the web site."	| doc |	word _ theWord.	doc _ HTTPSocket 		httpGetDocument: 'http://www.priberam.pt/scripts/dlpouniv.dll' 		args: 'search_value=', (self decodeAccents: word).	replyHTML _ (doc isKindOf: MIMEDocument)		ifTrue: [doc content]		ifFalse: [nil].	"self parseReply."	^ replyHTML! !!PortugueseLexiconServer methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 12:02'!parts	| divider |	"return the parts of speech this word can be.  Keep the streams for each"	parts _ OrderedCollection new.	partStreams _ OrderedCollection new.	rwStream ifNil: [self stream].	rwStream reset.	rwStream match: 'Palavra desconhecida pelo Dicion·rio.'.	rwStream atEnd ifFalse: [^ #()].	"not in dictionary"	rwStream reset.	rwStream match: (divider _ '<li>').	"stemming a complex word"	rwStream atEnd ifTrue: [rwStream reset.		rwStream match: (divider _ '<dd>')].	"base word in dict"	[rwStream atEnd] whileFalse: [		partStreams add: (ReadStream on: (rwStream upToAll: divider))].	partStreams do: [:pp |		parts add: (pp upToAll: '</b>')].	parts size = 0 ifTrue: [^ parts].	parts last = '' ifTrue: [parts removeLast.  partStreams removeLast].		"May want to remove all after </dl>"	^ parts ! !!WordNet class methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 08:24'!languagePrefs	| ch ll |	"Set preference of which natural language is primary. Look up definitions in it.Other language is for translating from to the primary one."	Languages ifNil: [Languages _ #(English Portuguese).		CanTranslateFrom _ #(French German Spanish)].	"see www.freetranslation.com/"	ch _ (PopUpMenu labelArray: Languages, {'other...'.			'Choose language to translate from...'})		startUpWithCaption: 'Choose the language used to lookup word definitions.  Translation will go into this language.'.	ch = 0 ifTrue: [^ Preferences valueOfFlag: #naturalLanguage].	(ch <= Languages size) ifTrue: [ll _ Languages at: ch].	ch = (Languages size + 1) ifTrue: [		ll _ FillInTheBlank request: 'Name of the primary language'].	ll ifNotNil: [^ Preferences setPreference: #naturalLanguage toValue: ll asSymbol].	ch = (Languages size + 2) ifTrue: ["Translate from"		ch _ (PopUpMenu labelArray: CanTranslateFrom, {'other...'})			startUpWithCaption: 'Choose the language to translate from.'.		ch = 0 ifTrue: [^ Preferences valueOfFlag: #languageTranslateFrom].		(ch <= CanTranslateFrom size) ifTrue: [ll _ CanTranslateFrom at: ch].		ch = (CanTranslateFrom size + 1) ifTrue: [			ll _ FillInTheBlank request: 'Name of the language to translate from.'].		ll ifNotNil: [^ Preferences setPreference: #languageTranslateFrom toValue: ll asSymbol].		].! !!WordNet class methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 08:48'!lexiconServer	| nl |	"Look in Preferences to see what language the user wants, and what class knows about it."	nl _ Preferences valueOfFlag: #naturalLanguage.	nl == false ifTrue: [^ self].			"English, WordNet server"	nl == #English ifTrue: [^ self].		"English, WordNet server"	nl == #Portuguese ifTrue: [^ PortugueseLexiconServer].	"www.priberam.pt""	nl == #Deutsch ifTrue: [^ DeutschServerClass]. "	"class that knows about a server"	^ self languagePrefs! !!WordNet class methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 06:45'!openScamperOn: aWord	| aUrl |	"Open a Scamper web browser on the WordNet entry for this word.  If Scamper is already pointing at WordNet, use the same browser."	aUrl _ 'http://www.cogsci.princeton.edu/cgi-bin/webwn/', 		'?stage=1&word=', aWord.	Smalltalk isMorphic ifTrue: [		World submorphsDo: [:m | 			((m isKindOf: SystemWindow) and: [m model isKindOf: Scamper]) ifTrue: [				(m model currentUrl asString beginsWith: 					'http://www.cogsci.princeton.edu/cgi-bin/webwn/') ifTrue: [						m model jumpToUrl: aUrl asUrl.						^ m activate]]]].	Scamper openOnUrl: aUrl.! !!WordNet class methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 11:40'!verify: aWord	"See if this spelling is in the WordNet lexicon.  Return a string of success, no-such-word, or can't reach the server."	| aDef nl |		aDef _ self new.	(aDef definition: aWord) ifNil:		[^ 'Sorry, cannot reach that web site.  Task abandoned.(Make sure you have an internet connection.)'].	nl _ Preferences valueOfFlag: #naturalLanguage.	nl == false ifTrue: [nl _ #English].	(aDef parts) size = 0 		ifTrue: [^ 'Sorry, ', aWord, ' not found. (', nl, ' lexicon)']		ifFalse: [^ aWord, ' is spelled correctly.'].! !!PortugueseLexiconServer class methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 14:34'!openScamperOn: aWord	| aUrl |	"Open a Scamper web browser on the web dictionary entry for this word.  If Scamper is already pointing at it, use the same browser.  Special code for this server."	aUrl _ 'http://www.priberam.pt/scripts/dlpouniv.dll', 		'?search_value=', (self new decodeAccents: aWord).	Smalltalk isMorphic ifTrue: [		World submorphsDo: [:m | 			((m isKindOf: SystemWindow) and: [m model isKindOf: Scamper]) ifTrue: [				(m model currentUrl asString beginsWith: 					'http://www.priberam.pt/') ifTrue: [						m model jumpToUrl: aUrl asUrl.						^ m activate]]]].	Scamper openOnUrl: aUrl.! !