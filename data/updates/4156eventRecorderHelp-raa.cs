'From Squeak3.1alpha of 5 February 2001 [latest update: #4155] on 14 June 2001 at 4:53:01 pm'!"Change Set:		eventRecorderHelpDate:			14 June 2001Author:			Bob ArningAdd some balloon help to the EventRecorderMorph - especially to remind user about ESC key."!!EventRecorderMorph methodsFor: 'initialization' stamp: 'RAA 6/14/2001 16:52'!addButtons	| r b |	caption ifNotNil: ["Special setup for play-only interface"		(r _ self makeARowForButtons)			addMorphBack: (SimpleButtonMorph new target: self;	 							label: caption; actionSelector: #play);			addMorphBack: self makeASpacer;			addMorphBack: self makeStatusLight;			addMorphBack: self makeASpacer.		^ self addMorphBack: r	].	(r _ self makeARowForButtons)		addMorphBack: (b _ self buttonFor: {#record. nil. 'Begin recording'});		addMorphBack: self makeASpacer;		addMorphBack: (self buttonFor: {#stop. b width. 'Stop recording - you can also use the ESC key to stop it'});		addMorphBack: self makeASpacer;		addMorphBack: (self buttonFor: {#play. b width. 'Play current recording'}).	self addMorphBack: r.	(r _ self makeARowForButtons)		addMorphBack: (b _ self buttonFor: {#writeTape. nil. 'Save current recording on disk'});		addMorphBack: self makeASpacer;		addMorphBack: (self buttonFor: {#readTape. b width. 'Get a new recording from disk'}).	self addMorphBack: r.	(r _ self makeARowForButtons)		addMorphBack: (b _ self buttonFor: {#shrink. nil. 'Make recording shorter by removing unneeded events'});		addMorphBack: self makeASpacer;		addMorphBack: self makeStatusLight;		addMorphBack: self makeASpacer;		addMorphBack: (self buttonFor: {#button. b width. 'Make a simple button to play this recording'}).	self addMorph: r.	self setStatusLight: #ready.! !!EventRecorderMorph methodsFor: 'initialization' stamp: 'RAA 6/14/2001 16:33'!buttonFor: data 	| b |	b _ SimpleButtonMorph new 		target: self;		label: data first asString;		actionSelector: data first.	data second ifNotNil: [b width: data second].	data third ifNotNil: [b setBalloonText: data third].	^b! !!EventRecorderMorph methodsFor: 'initialization' stamp: 'RAA 6/14/2001 16:19'!makeARowForButtons	^AlignmentMorph newRow		vResizing: #shrinkWrap;		wrapCentering: #center;		cellPositioning: #leftCenter;		minCellSize: 4;		color: Color blue! !!EventRecorderMorph methodsFor: 'initialization' stamp: 'RAA 6/14/2001 16:14'!makeASpacer	^AlignmentMorph newSpacer: Color transparent! !!EventRecorderMorph methodsFor: 'initialization' stamp: 'RAA 6/14/2001 16:13'!makeStatusLight	^statusLight _ EllipseMorph new 		extent: 11 @ 11;		color: Color green;		borderWidth: 0! !!EventRecorderMorph methodsFor: 'commands' stamp: 'RAA 6/14/2001 16:42'!play	self isInWorld ifFalse: [^ self].	self stop.	tape ifNil: [^ self].	tapeStream _ ReadStream on: tape.	self resumePlayIn: self world.	self setStatusLight: #nowPlaying.! !!EventRecorderMorph methodsFor: 'commands' stamp: 'RAA 6/14/2001 16:42'!record	self isInWorld ifFalse: [^ self].	self stop.	self writeCheck.	self addJournalFile.	tapeStream _ WriteStream on: (Array new: 10000).	self resumeRecordIn: self world.	self setStatusLight: #nowRecording.! !!EventRecorderMorph methodsFor: 'commands' stamp: 'RAA 6/14/2001 16:43'!setStatusLight: aSymbol	aSymbol == #ready ifTrue: [		statusLight color: Color green.		tape ifNil: [			statusLight setBalloonText: 'Ready to record'.		] ifNotNil: [			statusLight setBalloonText: 'Ready to record or play'.		].		^self	].	aSymbol == #nowRecording ifTrue: [		statusLight 			color: Color red;			setBalloonText: 'Recording is active'.		^self	].	aSymbol == #nowPlaying ifTrue: [		statusLight 			color: Color yellow;			setBalloonText: 'Now playing'.		^self	].! !!EventRecorderMorph methodsFor: 'commands' stamp: 'RAA 6/14/2001 16:43'!stop	state = #record ifTrue:		[tape _ tapeStream contents.		saved _ false].	journalFile ifNotNil:		[journalFile close].	self pauseIn: self world.	tapeStream _ nil.	state _ nil.	self setStatusLight: #ready.	recordMeter ifNotNil: [recordMeter width: 1].	self checkTape.! !!EventRecorderMorph methodsFor: 'pause/resume' stamp: 'RAA 6/14/2001 16:50'!pauseIn: aWorld	"Suspend playing or recording, either as part of a stop command,	or as part of a project switch, after which it will be resumed."	self setStatusLight: #ready.	state = #play ifTrue:		[state _ #suspendedPlay.		playHand delete.		aWorld removeHand: playHand.		playHand _ nil].	state = #record ifTrue:		[state _ #suspendedRecord.		recHand removeEventListener: self.		recHand _ nil].	voiceRecorder ifNotNil:		[voiceRecorder pause.		startSoundEvent ifNotNil:			[startSoundEvent argument: voiceRecorder recordedSound.			voiceRecorder clearRecordedSound.			startSoundEvent _ nil]].! !