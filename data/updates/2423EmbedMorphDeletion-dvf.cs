'From Squeak2.9alpha of 13 June 2000 [latest update: #2411] on 18 June 2000 at 6:34:42 pm'!"Change Set:		162EmbeddedMorphDeletion-dvfDate:			16 June 2000Author:			Daniel VainsencherMakes EmbeddedMorphs get off TextMorphs quickly.Makes significant difference (x10) in getting out of an HTML message in Celeste. Probably improves Scamper pages switches, too."!!Color class methodsFor: 'instance creation' stamp: 'dvf 6/16/2000 17:48'!fromString: aString	"for HTML color spec: #FFCCAA or white/black"	"Color fromString: '#FFCCAA'.	 Color fromString: 'white'.	 Color fromString: 'orange'"	| aColorHex red green blue |	aString isEmptyOrNil ifTrue: [^ Color white].	aString first = $#		ifTrue: [aColorHex _ aString copyFrom: 2 to: aString size]		ifFalse: [aColorHex _ aString].	[aColorHex size = 6		ifTrue:			[aColorHex _ aColorHex asUppercase.			red _ ('16r', (aColorHex copyFrom: 1 to: 2)) asNumber/255.			green _ ('16r', (aColorHex copyFrom: 3 to: 4)) asNumber/255.			blue _ ('16r', (aColorHex copyFrom: 5 to: 6)) asNumber/255.			^ self r: red g: green b: blue]]	ifError: [:err :rcvr | "not a hex color triplet" ].		"try to match aColorHex with known named colors"	aColorHex _ aColorHex asLowercase.	^self perform: (ColorNames detect: [:i | i asString asLowercase = aColorHex]		ifNone: [#white])! !!TextMorph methodsFor: 'accessing' stamp: 'dvf 6/16/2000 17:40'!newContents: stringOrText 	"Accept new text contents."	| newText embeddedMorphs |	newText _ stringOrText asText.	text = newText ifTrue: [^ self].	"No substantive change"	text ifNotNil: [(embeddedMorphs _ text embeddedMorphs)			ifNotNil: 				[self removeAllMorphsIn: embeddedMorphs.				embeddedMorphs do: [:m | m delete]]].	text _ newText.	"add all morphs off the visible region; they'll be moved into the right 	place when they become visible. (this can make the scrollable area too 	large, though)"	stringOrText asText embeddedMorphs do: 		[:m | 		self addMorph: m.		m position: -1000 @ 0].	self releaseParagraph.	"update the paragraph cache"	self paragraph.	"re-instantiate to set bounds"	self world ifNotNil: [self world startSteppingSubmorphsOf: self]! !