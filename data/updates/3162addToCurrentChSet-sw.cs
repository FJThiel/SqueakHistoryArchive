'From Squeak2.9alpha of 5 August 2000 [latest update: #3220] on 4 January 2001 at 3:09:04 pm'!"Change Set:		addToCurrentChSet-swDate:			4 January 2001Author:			Scott WallaceAdds a command to the shifted side of the message-list menu allowing the selected message to be added to the current change set.  Draws on an idea and code from Leandro Caniglia"!!ChangeSet methodsFor: 'method changes' stamp: 'sw 12/28/2000 18:08'!adoptSelector: aSelector forClass: aClass	"Adopt the given selector/class combination as a change in the receiver"	self noteNewMethod: (aClass methodDictionary at: aSelector)			forClass: aClass selector: aSelector priorMethod: nil! !!StringHolder methodsFor: 'message list menu' stamp: 'sw 12/28/2000 18:06'!browseFullProtocol	"Open up a protocol-category browser on the value of the receiver's current selection.    If in mvc, an old-style protocol browser is opened instead.  Someone who still uses mvc might wish to make the protocol-category-browser work there too, thanks.  The temporary circumlocution regarding the presence/absence of ProtocolCategoryBrowser is of course quite temporary."	| aClass |	(Smalltalk isMorphic and: [Smalltalk includesKey: #ProtocolCategoryBrowser]) ifFalse: [^ self spawnFullProtocol].	(aClass _ self selectedClassOrMetaClass) ifNotNil:		[(Smalltalk at: #ProtocolCategoryBrowser) new openWithCategoryPaneOn: aClass inWorld: self currentWorld showingSelector: self selectedMessageName]! !!StringHolder methodsFor: 'message list menu' stamp: 'sw 12/1/2000 13:09'!messageListKey: aChar from: view	"Respond to a Command key.  I am a model with a code pane, and I also	have a listView that has a list of methods.  The view knows how to get	the list and selection."	| sel class |	(class _ self selectedClassOrMetaClass) ifNil: [^ self arrowKey: aChar from: view].	sel _ self selectedMessageName.	aChar == $b ifTrue: [^ Browser fullOnClass: class selector: sel].	aChar == $N ifTrue: [^ self browseClassRefs].	aChar == $i ifTrue: [^ self methodHierarchy].	aChar == $h ifTrue: [^ self classHierarchy].	aChar == $p ifTrue: [^ self browseFullProtocol].	sel ifNotNil: 		[aChar == $m ifTrue: [^ Smalltalk browseAllImplementorsOf: sel].		aChar == $n ifTrue: [^ Smalltalk browseAllCallsOn: sel].		aChar == $v ifTrue: [^ self browseVersions].		aChar == $O ifTrue: [^ self openSingleMessageBrowser].		aChar == $x ifTrue: [^ self removeMessage]].	^ self arrowKey: aChar from: view! !!CodeHolder methodsFor: 'commands' stamp: 'sw 12/28/2000 18:09'!adoptMessageInCurrentChangeset	"Add the receiver's method to the current change set if not already there"	self setClassAndSelectorIn: [:cl :sel |		cl ifNotNil:			[Smalltalk changes adoptSelector: sel forClass: cl.			self changed: #annotation]]! !!CodeHolder methodsFor: 'commands' stamp: 'sw 12/28/2000 15:32'!setClassAndSelectorIn: csBlock	"Evaluate csBlock with my selected class and and selector as its arguments; provide nil arguments if I don't have a method currently selected"	| aName |	(aName _ self selectedMessageName)		ifNil:			[csBlock value: nil value: nil]		ifNotNil:			[csBlock value: self selectedClassOrMetaClass value: aName]! !!CodeHolder methodsFor: 'commands' stamp: 'sw 12/4/2000 12:07'!spawnFullProtocol	"Create and schedule a new protocol browser on the currently selected class or meta."	| aClassOrMetaclass |	(aClassOrMetaclass _ self selectedClassOrMetaClass) ifNotNil:       	[ProtocolBrowser openFullProtocolForClass: aClassOrMetaclass]! !!Browser methodsFor: 'message functions' stamp: 'sw 12/28/2000 17:50'!messageListMenu: aMenu shifted: shifted	"Answer the message-list menu"	shifted ifTrue: [^ self shiftedMessageListMenu: aMenu].	aMenu addList:#(			('browse full (b)' 						browseMethodFull)			('browse hierarchy (h)'					classHierarchy)			('browse method (O)'					openSingleMessageBrowser)			('browse protocol (p)'					browseFullProtocol)			-			('fileOut'								fileOutMessage)			('printOut'								printOutMessage)			-			('senders of... (n)'						browseSendersOfMessages)			('implementors of... (m)'					browseMessages)			('inheritance (i)'						methodHierarchy)			('tile scriptor'							openSyntaxView)			('versions (v)'							browseVersions)			-			('inst var refs...'						browseInstVarRefs)			('inst var defs...'						browseInstVarDefs)			('class var refs...'						browseClassVarRefs)			('class variables'						browseClassVariables)			('class refs (N)'							browseClassRefs)			-			('remove method (x)'					removeMessage)			-			('more...'								shiftedYellowButtonActivity)).	^ aMenu! !!Browser methodsFor: 'message functions' stamp: 'sw 1/3/2001 14:13'!shiftedMessageListMenu: aMenu	"Fill aMenu with the items appropriate when the shift key is held down"	aMenu addList: #(		('method pane' 							makeIsolatedCodePane)		"('make a scriptor'						makeScriptor)"		('toggle diffing'							toggleDiffing)		('implementors of sent messages'			browseAllMessages)		-		('spawn sub-protocol'					spawnProtocol)		('spawn full protocol'					spawnFullProtocol)		-		('sample instance'						makeSampleInstance)		('inspect instances'						inspectInstances)		('inspect subinstances'					inspectSubInstances)		-		('remove from this browser'				removeMessageFromBrowser)		('change category...'					changeCategory)		-		('change sets with this method'			findMethodInChangeSets)		('revert to previous version'				revertToPreviousVersion)		('remove from current change set'		removeFromCurrentChanges)		('revert & remove from changes'		revertAndForget)		('add to current change set'				adoptMessageInCurrentChangeset)		-		('fetch documentation'					fetchDocPane)		('more...' 								unshiftedYellowButtonActivity)).	^ aMenu! !