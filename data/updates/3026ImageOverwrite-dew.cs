'From Squeak2.9alpha of 13 June 2000 [latest update: #2915] on 11 November 2000 at 11:43:16 pm'!"Change Set:		219ImageOverwrite-dewDate:			3 November 2000Author:			Michael Hewner, Doug Way, Camp Smalltalk 3 @ OOPSLAFixes a problem where if you tried to do a 'save as...' over an existing image, an error notifier appeared.  This enhances things so that a confirmation pop-up appears asking if you're sure you want to overwrite, which you can accept or cancel.  (This ended up involving a fair amount of work, including adding a force-copy operation to FileDirectory, and some refactoring was done along with this.)"!!FileDirectory methodsFor: 'file stream creation' stamp: 'dew 10/26/2000 02:08'!forceNewFileNamed: localFileName	"Open the file with the given name in this directory for writing.  If it already exists, delete it first without asking."	^ FileStream concreteStream forceNewFileNamed: (self fullNameFor: localFileName)! !!FileDirectory methodsFor: 'file operations' stamp: 'MPH 10/15/2000 12:43'!copyFile: fileStream1 toFile: fileStream2	| buffer |	buffer _ String new: 50000.	[fileStream1 atEnd] whileFalse:		[fileStream2 nextPutAll: (fileStream1 nextInto: buffer)].! !!FileDirectory methodsFor: 'file operations' stamp: 'MPH 10/23/2000 13:31'!copyFileNamed: fileName1 toFileNamed: fileName2	"Copy the contents of the existing file with the first name into a new file with the second name. Both files are assumed to be in this directory."	"FileDirectory default copyFileNamed: 'todo.txt' toFileNamed: 'todocopy.txt'"	| file1 file2 |	file1 _ (self readOnlyFileNamed: fileName1) binary.	file2 _ (self newFileNamed: fileName2) binary.	self copyFile: file1 toFile: file2.	file1 close.	file2 close.! !!FileDirectory methodsFor: 'file operations' stamp: 'dew 10/26/2000 02:23'!copyFileWithoutOverwriteConfirmationNamed: fileName1 toFileNamed: fileName2	"Copy the contents of the existing file with the first name into a file with the second name (which may or may not exist). If the second file exists, force an overwrite without confirming.  Both files are assumed to be in this directory."	"FileDirectory default copyFileWithoutOverwriteConfirmationNamed: 'todo.txt' toFileNamed: 'todocopy.txt'"	| file1 file2 |	fileName1 = fileName2 ifTrue: [^ self].	file1 _ (self readOnlyFileNamed: fileName1) binary.	file2 _ (self forceNewFileNamed: fileName2) binary.	self copyFile: file1 toFile: file2.	file1 close.	file2 close.! !!FileDirectory methodsFor: 'file operations' stamp: 'MPH 10/23/2000 13:31'!putFile: file1 named: destinationFileName	"Copy the contents of the existing fileStream into the file destinationFileName in this directory.  fileStream can be anywhere in the fileSystem."	| file2 |	file1 binary.	(file2 _ self newFileNamed: destinationFileName) ifNil: [^ false].	file2 binary.	self copyFile: file1 toFile: file2.	file1 close.	file2 close.	^ true! !!SortedCollection methodsFor: 'adding' stamp: 'MPH 10/23/2000 13:31'!copyEmpty	"Answer a copy of the receiver without any of the receiver's elements."	^self species sortBlock: sortBlock! !!StandardFileStream class methodsFor: 'file creation' stamp: 'dew 10/26/2000 02:06'!forceNewFileNamed: fileName 	"Create a new file with the given name, and answer a stream opened for writing on that file. If the file already exists, delete it without asking before creating the new file."	| dir localName fullName |	fullName _ self fullName: fileName.	(self isAFileNamed: fullName)		ifFalse: [^ self new open: fullName forWrite: true].	dir _ FileDirectory forFileName: fullName.	localName _ FileDirectory localNameFor: fullName.	dir deleteFileNamed: localName		ifAbsent: [self error: 'Could not delete the old version of that file'].	^ self new open: fullName forWrite: true.! !!SystemDictionary methodsFor: 'image, changes name' stamp: 'MPH 10/23/2000 13:31'!changeImageNameTo: aString	self imageName: aString.	LastImageName _ self imageName! !!SystemDictionary methodsFor: 'image, changes name' stamp: 'MPH 10/23/2000 10:28'!fullNameForChangesNamed: aName	| newName |	newName _ FileDirectory baseNameFor: aName asFileName.	^newName , FileDirectory dot, FileDirectory changeSuffix.! !!SystemDictionary methodsFor: 'image, changes name' stamp: 'MPH 10/23/2000 10:28'!fullNameForImageNamed: aName	| newName |	newName _ FileDirectory baseNameFor: aName asFileName.	^newName , FileDirectory dot, FileDirectory imageSuffix.! !!SystemDictionary methodsFor: 'sources, change log' stamp: 'MPH 10/24/2000 14:31'!externalizeSources   	"Write the sources and changes streams onto external files." 	"Smalltalk externalizeSources"	| sourcesName changesName aFile |	sourcesName _ self sourcesName.	(FileDirectory default fileExists: sourcesName)		ifTrue: [^ self inform:'Sorry, you must first move or remove thefile named ', sourcesName].	changesName _ self changesName.	(FileDirectory default fileExists: changesName)		ifTrue: [^ self inform:'Sorry, you must first move or remove thefile named ', changesName].	aFile _  FileStream newFileNamed: sourcesName.	aFile nextPutAll: SourceFiles first originalContents.	aFile close.	self setMacFileInfoOn: sourcesName.	SourceFiles at: 1 put: (FileStream readOnlyFileNamed: sourcesName).	aFile _ FileStream newFileNamed: self changesName.	aFile nextPutAll: SourceFiles last contents.	aFile close.	"On Mac, set the file type and creator (noop on other platforms)"	FileDirectory default		setMacFileNamed: self changesName		type: 'STch'		creator: 'FAST'.	SourceFiles at: 2 put: (FileStream oldFileNamed: changesName).	self inform: 'Sources successfully externalized'.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'MPH 10/23/2000 13:21'!getFileNameFromUser	| newName |	newName _ FillInTheBlank		request: 'New File Name?'		initialAnswer: (FileDirectory localNameFor: self imageName).	newName = '' ifTrue: [^nil].	((FileDirectory default includesKey: (self fullNameForImageNamed: newName)) or:	 [FileDirectory default includesKey: (self fullNameForChangesNamed: newName)]) ifTrue: [		(self confirm: newName, ' already exists. Overwrite?') ifFalse: [^nil]].	^newName! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'MPH 10/24/2000 14:47'!saveAs	| newName |	newName _ self getFileNameFromUser.	newName isNil ifTrue:[^self].	self		saveChangesInFileNamed: (self fullNameForChangesNamed: newName);		saveImageInFileNamed: (self fullNameForImageNamed: newName);		logChange: '----SAVEAS ', newName, '----', Date dateAndTimeNow printString.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'MPH 10/24/2000 14:46'!saveChangesInFileNamed: aString	FileDirectory default 		copyFileWithoutOverwriteConfirmationNamed: self changesName 		toFileNamed: aString.	self	setMacFileInfoOn: aString.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'MPH 10/24/2000 14:46'!saveImageInFileNamed: aString	self 		changeImageNameTo: (FileDirectory default fullNameFor: aString);		closeSourceFiles; openSourceFiles;  "so SNAPSHOT appears in new changes file"		saveImageSegments;		snapshot: true andQuit: false.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'MPH 10/23/2000 10:39'!saveImageSegments	| haveSegs oldImageSegDir newImageSegDir |	haveSegs _ false.	Smalltalk at: #ImageSegment ifPresent: [:theClass | 		(haveSegs _ theClass instanceCount ~= 0) ifTrue: [			oldImageSegDir _ theClass segmentDirectory]].	haveSegs ifTrue: [		Smalltalk at: #ImageSegment ifPresent: [:theClass |			newImageSegDir _ theClass segmentDirectory.	"create the folder"			oldImageSegDir fileNames do: [:theName | "copy all segment files"				| imageSegmentName |				imageSegmentName _ oldImageSegDir pathName, FileDirectory slash, theName.				newImageSegDir 					copyFileWithoutOverwriteConfirmationNamed: imageSegmentName					toFileNamed: theName]]].! !!SystemDictionary methodsFor: 'housekeeping' stamp: 'MPH 10/24/2000 14:33'!condenseChanges		"Smalltalk condenseChanges"	"Move all the changes onto a compacted sources file."	| f oldChanges classCount |	f _ FileStream fileNamed: 'ST80.temp'.	f header; timeStamp.'Condensing Changes File...'	displayProgressAt: Sensor cursorPoint	from: 0 to: Smalltalk classNames size	during:		[:bar | classCount _ 0.		Smalltalk allClassesDo:			[:class | bar value: (classCount _ classCount + 1).			class moveChangesTo: f.			class class moveChangesTo: f]].	LastQuitLogPosition _ f position.	f trailer; close.	oldChanges _ SourceFiles at: 2.	oldChanges close.	FileDirectory default 		deleteFileNamed: oldChanges name , '.old';		rename: oldChanges name toBe: oldChanges name , '.old';		rename: f name toBe: oldChanges name.	self setMacFileInfoOn: oldChanges name.	SourceFiles at: 2			put: (StandardFileStream oldFileNamed: oldChanges name).! !!SystemDictionary methodsFor: 'housekeeping' stamp: 'MPH 10/24/2000 14:30'!condenseSources		"Smalltalk condenseSources"	"Move all the changes onto a compacted sources file."	| f classCount dir |	dir _ FileDirectory default.	"Write all sources with fileIndex 1"	f _ FileStream newFileNamed: self sourcesName , '.temp'.	f header; timeStamp.'Condensing Sources File...'	displayProgressAt: Sensor cursorPoint	from: 0 to: Smalltalk classNames size	during:		[:bar | classCount _ 0.		Smalltalk allClassesDo:			[:class | bar value: (classCount _ classCount + 1).			class fileOutOn: f moveSource: true toFile: 1]].	f trailer; close.	"Make a new empty changes file"	self closeSourceFiles.	dir rename: self changesName		toBe: self changesName , '.old'.	(FileStream newFileNamed: self changesName)		header; timeStamp; close.	LastQuitLogPosition _ 0.	dir rename: self sourcesName		toBe: self sourcesName , '.old'.	dir rename: self sourcesName , '.temp'		toBe: self sourcesName.	self setMacFileInfoOn: self changesName.	self setMacFileInfoOn: self sourcesName.	self openSourceFiles.	SelectionMenu notify: 'Source files have been rewritten!!Check that all is well,and then save/quit.'! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'MPH 10/24/2000 14:27'!setMacFileInfoOn: aString	"On Mac, set the file type and creator (noop on other platforms)"	FileDirectory default		setMacFileNamed: aString		type: 'STch'		creator: 'FAST'.! !