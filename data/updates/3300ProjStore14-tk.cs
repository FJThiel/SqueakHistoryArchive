'From Squeak2.9alpha of 16 June 2000 [latest update: #3363] on 1 February 2001 at 10:51:17 pm'!"Change Set:		ProjStore14-tkDate:			1 February 2001Author:			Ted KaehlerA pile of bug fixes:New tile scripts do hibernate and unhibernate.Parser reinitialized because the shared prototype VariableNode for 'self' might have gotten messed up.FileUrl copy now copies its path also.PhraseTileMorphs don't get syntax error when a noun tile is picked out of them.Still has bug: If leave a project and return, an open script editor looses its tiles.  Choose 'use universal tiles' from its menu or close and reopen it."!!FileUrl methodsFor: 'copying' stamp: 'tk 2/1/2001 22:30'!copy	"Be sure not to share the path with the copy"	^ (self clone) path: path copy! !!Morph methodsFor: 'naming' stamp: 'tk 1/31/2001 15:52'!renameTo: aName	"Set Player name in costume.  Update Viewers.  Fix all tiles (old style).  fix References.  New tiles: recompile, and recreate open scripts.  If coming in from disk, and have name conflict, References will already have new name."	| aPresenter putInViewer aPasteUp renderer oldKey assoc classes oldName ut |	oldName _ self knownName.	(renderer _ self topRendererOrSelf) setNameTo: aName.	putInViewer _ false.	((aPresenter _ self presenter) isNil or: [renderer player isNil]) ifFalse:		[putInViewer _ aPresenter currentlyViewing: renderer player.		putInViewer ifTrue:			[renderer player viewerFlapTab hibernate]].  "empty it temporarily"	(aPasteUp _ self topPasteUp) ifNotNil:		[aPasteUp allTileScriptingElements do: [:m | m bringUpToDate]].	"Fix References dictionary.  See restoreReferences to know why oldKey is 		already aName, but oldName is the old name."	oldKey _ References keyAtIdentityValue: renderer player ifAbsent: [nil].	oldKey ifNotNil:		[assoc _ References associationAt: oldKey.		oldKey = aName ifFalse: ["normal rename"			assoc key: aName asSymbol.			References rehash]].	putInViewer ifTrue: [aPresenter viewMorph: self].	"recreate my viewer"	oldKey ifNil: [^ aName].	"Force strings in tiles to be remade with new name.  New tiles only."	ut _ aPasteUp 		ifNil: [self player isUniversalTiles]		ifNotNil: [aPasteUp valueOfProperty: #universalTiles ifAbsent: [false]].	ut ifFalse: [^ aName].	classes _ (Smalltalk allCallsOn: assoc) collect: [:classAndMethod | 		(classAndMethod findTokens: Character separators) first asSymbol].	(classes asSet) do: [:clsName |		(Smalltalk at: clsName) replaceSilently: oldName to: aName].		"replace in text body of all methods.  Can be wrong!!"	"Redo the tiles that are showing.  This is also done in caller in unhibernate."	aPasteUp ifNotNil: [		aPasteUp allTileScriptingElements do: [:mm | "just ScriptEditorMorphs".			(mm isKindOf: ScriptEditorMorph) ifTrue:				[((mm playerScripted class compiledMethodAt: mm scriptName) hasLiteral: assoc)					ifTrue: [mm hibernate; unhibernate]]]].	^ aName! !!PasteUpMorph methodsFor: 'scripting' stamp: 'tk 1/31/2001 15:58'!allTileScriptingElements	"Answer a list of all the morphs that pertain to tile-scripting.  A sledge-hammer"	| all morphs |	morphs _ IdentitySet new: 400.	self allMorphsAndBookPagesInto: morphs.	all _ morphs select: [:s | s isTileScriptingElement]."	self closedViewerFlapTabs do:		[:aTab | all addAll: aTab referent allTileScriptingElements]."	^ all asOrderedCollection! !!PhraseTileMorph methodsFor: 'mouse' stamp: 'tk 2/1/2001 21:21'!mouseDown: evt 	"Pretend we picked up the tile and then put it down for a trial  	positioning."	"The essence of ScriptEditor mouseEnter:"	| ed ss guyToTake |	self isPartsDonor ifTrue:[^self duplicateMorph: evt].	submorphs isEmpty		ifTrue: [^ self].	guyToTake _ self.	owner class == TilePadMorph		ifTrue: ["picking me out of another phrase"			(ss _ submorphs first) class == TilePadMorph				ifTrue: [ss _ ss submorphs first].			guyToTake _  ss fullCopy].	(ed _ self enclosingEditor)		ifNotNil: [			evt hand grabMorph: guyToTake.			ed startStepping.			ed mouseEnterDragging: evt.			ed setProperty: #justPickedUpPhrase toValue: true.			]! !!ScriptEditorMorph methodsFor: 'other' stamp: 'tk 2/1/2001 22:37'!adaptToWorld: aWorld	self unhibernate	"for universal tiles"! !!ScriptEditorMorph methodsFor: 'other' stamp: 'tk 2/1/2001 22:02'!unhibernate	| ww |	"Recreate my tiles from my method.  If I have new universal tiles."	(ww _ self world) 		ifNil: [playerScripted ifNil: [^ self].			playerScripted isUniversalTiles ifFalse: [^ self]]		ifNotNil: [			(ww valueOfProperty: #universalTiles ifAbsent: [false]) ifFalse: [^ self]].	self showSourceInScriptor. ! !!ViewerFlapTab methodsFor: 'as yet unclassified' stamp: 'tk 1/31/2001 16:03'!allNonSubmorphMorphs	"Return a collection containing all morphs in this morph which are not currently in the submorph containment hierarchy.  Especially the non-showing pages in BookMorphs."	^ flapShowing 		ifTrue: [#()]		ifFalse: [Array with: referent]! !!PhraseTileMorph reorganize!('initialization' initialize setAssignmentRoot:type:rcvrType:argType: setOperator:type:rcvrType: setOperator:type:rcvrType:argType: setSlotRefOperator:type:)('mouse' acceptDroppingMorph:event: canAccept: catchDivideByZero:indent: enclosingEditor handlesDragOver: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: justDroppedInto:event: morphToDropInPasteUp: mouseDown: mouseEnter: mouseEnterDragging: mouseLeaveDragging: prepareToUndoDropOf: wantsDroppedMorph:event:)('code generation' codeString storeCodeOn:indent:)('miscellaneous' actualObject addAddHandMenuItemsForHalo:hand: associatedPlayer bePossessive booleanOperator brightenTiles bringUpToDate isCandidateForAutomaticViewing justGrabbedFromViewer justGrabbedFromViewer: justGrabbedFromViewerOrNil lastTile operatorTile resultType sproutNewScriptor tileRows topEditor try unbrightenTiles userScriptSelector userScriptSelector:)('queries' isBoolean isCommand isPossessive isTileScriptingElement)('tiles from method' tilesFrom:in:)('all' rowOfRightTypeFor:forActor:)('object fileIn' convertbosfcebbochvimolrbu0:bosfcebbochvimlprbu0:)!"Postscript:A version of the new tiles a few weeks ago had the potential to mess up one prototype VariableNode.  Initialize again just to be sure."ParseNode initialize. VariableNode initialize.!