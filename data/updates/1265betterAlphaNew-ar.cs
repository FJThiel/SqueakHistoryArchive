'From Squeak 2.4b of April 23, 1999 on 21 June 1999 at 6:48:18 pm'!"Change Set:		BetterAlphaNewMorph-arDate:			21 June 1999Author:			Andreas RaabExtends the alphabetical new morph menu to be dynamically split into 8 (roughly) equal groups."!!HandMorph methodsFor: 'world menu' stamp: 'ar 6/21/1999 18:25'!newMorph	| menu subMenu catDict shortCat class |	menu _ (MenuMorph entitled: 'Add a new morph') defaultTarget: self.	menu addStayUpItem.	menu add: 'from paste buffer' action: #pasteMorph.	menu add: 'from a file...' target: self action: #readMorphFromAFile.	"menu add: 'from alphabetical list...' action: #newMorphFromAlphabeticalList."	menu add: 'from alphabetical list' subMenu: self alphabeticalMorphMenu.	menu add: 'grab patch from screen' action: #grabDrawingFromScreen.	menu add: 'make new drawing' target: self action: #newDrawingFromMenu.	menu add: 'make link to project...' target: self action: #projectThumbnail.	menu addLine.	catDict _ Dictionary new.	SystemOrganization categories do:		[:cat |		((cat beginsWith: 'Morphic-')				and: [(#('Morphic-Menus' 'Morphic-Support') includes: cat) not])		ifTrue:			[shortCat _ cat copyFrom: 'Morphic-' size+1 to: cat size.			(SystemOrganization listAtCategoryNamed: cat) do:				[:cName | class _ Smalltalk at: cName.				((class inheritsFrom: Morph)					and: [class includeInNewMorphMenu])					ifTrue:					[(catDict includesKey: shortCat) 					ifTrue: [(catDict at: shortCat) addLast: class]					ifFalse: [catDict at: shortCat put: (OrderedCollection with: class)]]]]].	catDict keys asSortedCollection do:		[:categ |		subMenu _ MenuMorph new.		((catDict at: categ) asSortedCollection: [:c1 :c2 | c1 name < c2 name]) do:			[:cl | subMenu add: cl name					target: self					selector: #newMorphOfClass:event:					argument: cl].		menu add: categ subMenu: subMenu].	menu popUpAt: self position forHand: self.! !!HandMorph methodsFor: 'private' stamp: 'ar 6/21/1999 18:45'!alphabeticalMorphMenu	| list splitLists menu firstChar lastChar subMenu |	list _ Morph withAllSubclasses select:[:m | m includeInNewMorphMenu].	list _ list asArray sortBy:[:c1 :c2| c1 name < c2 name].	splitLists _ self splitNewMorphList: list depth: 3.	menu _ MenuMorph new defaultTarget: self.	1 to: splitLists size do:[:i|		i = 1 ifTrue:[firstChar _ $A]			ifFalse:[firstChar _ ((splitLists at: i-1) last name first asInteger + 1) asCharacter].		i = splitLists size			ifTrue:[lastChar _ $Z]			ifFalse:[lastChar _ (splitLists at: i) last name first].		subMenu _ MenuMorph new.		(splitLists at: i) do:[:cl|			subMenu add: cl name					target: self					selector: #newMorphOfClass:event:					argument: cl].		menu add: firstChar asString,' - ', lastChar asString subMenu: subMenu.	].	^menu! !!HandMorph methodsFor: 'private' stamp: 'ar 6/21/1999 18:39'!splitNewMorphList: list depth: d	| middle c prev next out |	d <= 0 ifTrue:[^Array with: list].	middle _ list size // 2 + 1.	c _ (list at: middle) name first.	prev _ middle - 1.	[prev > 0 and:[(list at: prev) name first = c]] 		whileTrue:[prev _ prev - 1].	next _ middle + 1.	[next <= list size and:[(list at: next) name first = c]]		whileTrue:[next _ next + 1].	"Choose the better cluster"	(middle - prev) < (next - middle)		ifTrue:[middle _ prev+1]		ifFalse:[middle _ next].	middle = 1 ifTrue:[middle _ next].	middle >= list size ifTrue:[middle _ prev+1].	(middle = 1 or:[middle >= list size]) ifTrue:[^Array with: list].	out _ WriteStream on: Array new.	out nextPutAll: (self splitNewMorphList: (list copyFrom: 1 to: middle-1) depth: d-1).	out nextPutAll: (self splitNewMorphList: (list copyFrom: middle to: list size) depth: d-1).	^out contents.! !