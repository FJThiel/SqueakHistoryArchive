'From Squeakland 3.8.5976 of 25 August 2004 [latest update: #286] on 1 September 2004 at 6:15:56 pm'!"Change Set:		FlapsAndThumbnailsFixAgain-nkDate:			1 September 2004Author:			Ned KonzMore work getting everything to display right at multiple resolutions, even in translucent flaps.Postscript regenerates the thumbnails."!!DescriptionForPartsBin methodsFor: 'initialization' stamp: 'nk 9/1/2004 16:52'!sampleImageForm	"If I have a sample image form override stored, answer it, else answer one obtained by launching an actual instance"	^ sampleImageForm ifNil:		[((Smalltalk at: globalReceiverSymbol) perform: nativitySelector) imageFormDepth: 32]! !!Morph methodsFor: 'drawing' stamp: 'nk 9/1/2004 15:08'!imageForm: depth backgroundColor: aColor forRectangle: rect	| canvas |	canvas _ Display defaultCanvasClass extent: rect extent depth: depth.	canvas translateBy: rect topLeft negated		during:[:tempCanvas| 			tempCanvas fillRectangle: rect color: aColor.			tempCanvas fullDrawMorph: self].	^ canvas form offset: rect topLeft! !!IconicButton methodsFor: 'initialization' stamp: 'nk 9/1/2004 17:14'!initializeToShow: aMorph withLabel: aLabel andSend: aSelector to: aReceiver 		"Initialize the receiver to show the current appearance of aMorph on its face, giving it the label supplied and arranging for it, when the button goes down on it, to obtain a new morph by sending the specified selector to the specified receiver"	| aThumbnail |	aThumbnail _ Thumbnail new.	aThumbnail makeThumbnailFromForm: (aMorph imageFormDepth: 32).	^ self initializeWithThumbnail: aThumbnail withLabel: aLabel andColor: self color andSend: aSelector to: aReceiver 	! !!IconicButton methodsFor: 'initialization' stamp: 'nk 9/1/2004 17:45'!initializeWithThumbnail: aThumbnail withLabel: aLabel andColor: aColor andSend: aSelector to: aReceiver 		"Initialize the receiver to show aThumbnail on its face, giving it the label supplied and arranging for it, when the button goes down on it, to obtain a new morph by sending the supplied selector to the supplied receiver"	| labeledItem  |	labeledItem _ AlignmentMorph newColumn.	labeledItem color: aColor.	labeledItem borderWidth: 0.	labeledItem		layoutInset: 4@0;		cellPositioning: #center.	labeledItem addMorph: aThumbnail.	labeledItem addMorphBack: (Morph new extent: (4@4)) beTransparent.	labeledItem addMorphBack: (TextMorph new		backgroundColor: aColor asNontranslucentColor;		contentsAsIs: aLabel;		beAllFont: Preferences standardEToysFont;		centered).	self		beTransparent;		labelGraphic: ((labeledItem imageForm: 32 backgroundColor: aColor forRectangle: labeledItem fullBounds) replaceColor: aColor withColor: Color transparent);		borderWidth: 0;		target: aReceiver;		actionSelector: #launchPartVia:label:;		arguments: {aSelector. aLabel};		actWhen: #buttonDown.	self stationarySetup.! !!PartsBin methodsFor: 'initialization' stamp: 'nk 9/1/2004 17:28'!listDirection: aListDirection quadList: quadList	"Initialize the receiver to run horizontally or vertically, obtaining its elements from the list of tuples of the form:		(<receiver> <selector> <label> <balloonHelp>)"	| aButton aClass |	self layoutPolicy: TableLayout new.	self listDirection: aListDirection.	self wrapCentering: #topLeft.	self layoutInset: 2.	self cellPositioning: #bottomCenter.	aListDirection == #leftToRight		ifTrue:			[self vResizing: #rigid.			self hResizing: #spaceFill.			self wrapDirection: #topToBottom]		ifFalse:			[self hResizing: #rigid.			self vResizing: #spaceFill.			self wrapDirection: #leftToRight].	quadList do:		[:tuple |			aClass _ Smalltalk at: tuple first.			aButton _ IconicButton new initializeWithThumbnail: (self class thumbnailForQuad: tuple color: self color) withLabel: tuple third andColor: self color andSend: tuple second to: aClass.			(tuple size > 3 and: [tuple fourth isEmptyOrNil not]) ifTrue:				[aButton setBalloonText: tuple fourth]. 			self addMorphBack: aButton]! !!PartsBin class methodsFor: 'thumbnail cache' stamp: 'nk 9/1/2004 17:38'!thumbnailForQuad: aQuint	"Answer a thumbnail for a morph obtaining as per the quintuplet provided, creating the thumbnail if necessary.  If it is created afresh, it will also be cached at this time"	^self thumbnailForQuad: aQuint color: Color transparent.! !!PartsBin class methodsFor: 'thumbnail cache' stamp: 'nk 9/1/2004 17:44'!thumbnailForQuad: aQuint color: aColor	"Answer a thumbnail for a morph obtaining as per the quintuplet provided, creating the thumbnail if necessary.  If it is created afresh, it will also be cached at this time"	| aThumbnail aSymbol formToThumbnail labeledItem |	aSymbol _ aQuint third.	Thumbnails at: aSymbol ifPresent: [ :thumb | ^thumb ].	formToThumbnail _ aQuint at: 5 ifAbsent: [].	formToThumbnail ifNil: [		labeledItem := (Smalltalk at: aQuint first) perform: aQuint second.		formToThumbnail := labeledItem imageForm: 32 backgroundColor: aColor forRectangle: labeledItem fullBounds.		formToThumbnail replaceColor: aColor withColor: Color transparent.	].	aThumbnail _ Thumbnail new makeThumbnailFromForm: formToThumbnail.	self cacheThumbnail: aThumbnail forSymbol: aSymbol.	^ aThumbnail"PartsBin initialize"! !!Thumbnail methodsFor: 'thumnail creation' stamp: 'nk 9/1/2004 18:10'!makeThumbnailFromForm: aForm	"Make a thumbnail from the form provided, obeying my min and max width and height preferences"	|  scaleX scaleY margin opaque |	scaleY _ minimumHeight / aForm height.  "keep height invariant"	scaleX _ ((aForm width * scaleY) <= maximumWidth)		ifTrue: [scaleY]  "the usual case; same scale factor, to preserve aspect ratio"		ifFalse: [scaleY _ maximumWidth / aForm width].	"self form: (aForm magnify: aForm boundingBox by: (scaleX @ scaleY) smoothing: 2)."	"Note: A problem with magnify:by: fails to reproduce borders properly.		The following code does a better job..."	margin _ 1.0 / (scaleX@scaleY) // 2 max: 0@0.  "Extra margin around border"	opaque _ (Form extent: aForm extent + margin depth: 32) "fillWhite".	aForm fixAlpha displayOn: opaque at: aForm offset negated rule: Form blendAlpha.  "Opaque form shrinks better"	opaque fixAlpha.	self form: (opaque magnify: opaque boundingBox by: (scaleX @ scaleY) smoothing: 2).	self extent: originalForm extent! !IconicButton removeSelector: #drawOn:!"Postscript:Re-do all the icons."Flaps disableGlobalFlaps: false.PartsBin clearThumbnailCache.PartsBin thumbnailForPartsDescription: StickyPadMorph descriptionForPartsBin. Flaps addAndEnableEToyFlaps.ActiveWorld enableGlobalFlaps.!