'From Squeak3.1alpha of 5 February 2001 [latest update: #3640] on 18 February 2001 at 10:35:11 am'!"Change Set:		fasterMatchingDate:			18 February 2001Author:			Bob Arninga little faster Symbol class>>selectorsContaining:a timing method in Symbol to try to diagnose slowdowns in implementors of things like xxx"!!Symbol class methodsFor: 'access' stamp: 'RAA 2/18/2001 08:46'!selectorsContaining: aString	"Answer a list of selectors that contain aString within them. Case-insensitive"	| size selectorList ascii |	selectorList _ OrderedCollection new.	(size _ aString size) = 0 ifTrue: [^selectorList].	aString size = 1 ifTrue:		[			ascii _ aString first asciiValue.			ascii < 128 ifTrue: [selectorList add: (SymbolTable like: aString)]		].	aString first isLetter ifFalse:		[			aString size == 2 ifTrue: 				[Symbol hasInterned: aString ifTrue:					[:s | selectorList add: s]].			^selectorList		].	selectorList _ selectorList copyFrom: 2 to: selectorList size.	SymbolTable do:		[:each |			each size >= size ifTrue:				[					(each findString: aString startingAt: 1 caseSensitive: false) > 0							ifTrue: [selectorList add: each]				]		].	^selectorList reject: [ :each | each first isUppercase]."Symbol selectorsContaining: 'scon'"! !!Symbol class methodsFor: 'class initialization' stamp: 'RAA 2/18/2001 10:33'!compareTiming"Symbol compareTiming"	| answer t selectorList implementorLists flattenedList md |	answer _ WriteStream on: String new.	Smalltalk timeStamp: answer.	answer cr; cr.	answer nextPutAll: MethodDictionary instanceCount printString,' method dictionaries'; cr; cr.	answer nextPutAll: (		MethodDictionary allInstances inject: 0 into: [ :sum :each | sum + each size]) printString,		' method dictionary entries'; cr; cr.	md _ MethodDictionary allInstances.	t _ [100 timesRepeat: [md do: [ :each | each includesKey: #majorShrink]]] timeToRun.	answer nextPutAll: t printString,		' ms to check all method dictionaries for #majorShrink 1000 times'; cr; cr.	selectorList _ Symbol selectorsContaining: 'help'.	t _ [		3 timesRepeat: [selectorList collect: [:each | Smalltalk allImplementorsOf: each]]	] timeToRun.	answer nextPutAll: t printString,' ms to do #allImplementorsOf: for ',		selectorList size printString,' selectors like *help* 3 times'; cr; cr.	t _ [		3 timesRepeat: [			selectorList do: [:eachSel | md do: [ :eachMd | eachMd includesKey: eachSel]]		]	] timeToRun.	answer nextPutAll: t printString,' ms to do #includesKey: for ',		md size printString,' methodDicts for ',		selectorList size printString,' selectors like *help* 3 times'; cr; cr.	#('help' 'majorShrink') do: [ :substr |		answer nextPutAll: (Symbol selectorsContaining: substr) size printString,				' selectors containing "',substr,'"'; cr.		t _ [			3 timesRepeat: [				selectorList _ Symbol selectorsContaining: substr.			].		] timeToRun.		answer nextPutAll: t printString,' ms to find Symbols containing *',substr,'* 3 times'; cr.		t _ [			3 timesRepeat: [				selectorList _ Symbol selectorsContaining: substr.				implementorLists _ selectorList collect: [:each | Smalltalk allImplementorsOf: each].				flattenedList _ SortedCollection new.				implementorLists do: [:each | flattenedList addAll: each].			].		] timeToRun.		answer nextPutAll: t printString,' ms to find implementors of *',substr,'* 3 times'; cr; cr.	].	StringHolder new contents: answer contents; openLabel: 'timing'.! !