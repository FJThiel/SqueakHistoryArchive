'From Squeak 2.4b of April 23, 1999 on 21 May 1999 at 6:58:00 pm'!"Change Set:		allCatFixDate:			21 May 1999Author:			Chris Norton and Carl GundelThis change set fixes some bugs that were introduced to the Browser when the '--  all  --' feature was added to Squeak.  The bugs were discovered by Ohshima Yoshiki, who thoughtfully included a fix for the problems.  While his fixes worked, they were really just patching the symptoms of the problem, so we have provided this, more comprehensive, solution.The following test cases were performed after the fix was added to a Squeak 2.4b base image (including updates up to and including 1192):Ohshima Yoshiki's bug cases:1. Select the ALL category for a class, type a new method definition which will cause a compile error and save.2. Select the ALL category, select an existing method, then insert a compile error and save.3. Select the ALL category, type a method definition which already exists, add a bug and save (this is really the same as test 1).Other general test cases we tried include:1. Select the ALL category, select an existing method, clear the method code, type in a new method, save it (should save the new method in the other method's category).2. Select the ALL category, select an existing method, change it & save it (should update the existing method, without changing its category)3. Select any category that is not ALL, select an existing method, type in a change and save it (should update the existing method)4. Select any category that is not ALL, add a new method and save.5. Select the ALL category, add a new method and save (should save the new method into the 'as yet unclassified' category)Another from Scott Wallace (thanks Scott!!):Select the ALL category on a class that has a lot of methods, but only a few methods in each category.  Edit an existing method and save it with a new selector name (this used to blow up if the selected method's index number in its original category was less than its index number in the '--  all  --' category list.  e.g. Boolean>>veryDeepCopyWith: is index number 17 under ALL, but only number index number 4 in the 'copying' category!!).Note:  All of the previous tests were run in a SystemBrowser under MVC and under Morphic.We're sorry to have cause this predicament!!"!!Browser methodsFor: 'accessing' stamp: 'ccn+ceg 5/13/1999 20:20'!contents: input notifying: aController 	"The retrieved information has changed and its source must now be	 updated. The information can be a variety of things, depending on	 the list selections (such as templates for class or message definition,	 methods) or the user menu commands (such as definition, comment,	 hierarchy).  Answer the result of updating the source."	| aString aText theClass |	aString _ input asString.	aText _ input asText.	editSelection == #editSystemCategories ifTrue: [^ self changeSystemCategories: aString].	editSelection == #editClass | (editSelection == #newClass) ifTrue: [^ self defineClass: aString notifying: aController].	editSelection == #editComment		ifTrue: 			[theClass _ self selectedClass.			theClass				ifNil: 					[PopUpMenu notify: 'You must select a classbefore giving it a comment.'.					^ false].			theClass comment: aText stamp: Utilities changeStamp.			^ true].	editSelection == #hierarchy ifTrue: [^ true].	editSelection == #editMessageCategories ifTrue: [^ self changeMessageCategories: aString].	editSelection == #editMessage | (editSelection == #newMessage)		ifTrue: [^self compileMessage: aText notifying: aController].	editSelection == #none		ifTrue: 			[PopUpMenu notify: 'This text cannot be acceptedin this part of the browser.'.			^ false].	self error: 'unacceptable accept'! !!Browser methodsFor: 'message category list' stamp: 'ccn+ceg 5/13/1999 19:54'!setOriginalCategoryIndexForCurrentMethod	"private - Set the message category index for the currently selected method. 	 	 Note:  This should only be called when somebody tries to save  	 a method that they are modifying while ALL is selected."	messageCategoryListIndex _ self messageCategoryList indexOf: self categoryOfCurrentMethod	! !!Browser methodsFor: 'code pane' stamp: 'ccn+ceg 5/21/1999 18:25'!compileMessage: aText notifying: aController	"Compile the code that was accepted by the user, placing the compiled method	into an approriate message category."	| fallBackCategoryIndex fallBackMethodIndex originalSelectorName result |	self selectedMessageCategoryName asSymbol = ClassOrganizer allCategory		ifTrue:			[ "User tried to save a method while the ALL category was selected"			fallBackCategoryIndex _ messageCategoryListIndex.			fallBackMethodIndex _ messageListIndex.			editSelection == #newMessage				ifTrue:					[ "Select the 'as yet unclassified' category"					messageCategoryListIndex _ 0.					(result _ self defineMessage: aText notifying: aController)						ifFalse:							[ "Compilation failure:  reselect the original category & method"							messageCategoryListIndex _ fallBackCategoryIndex.							messageListIndex _ fallBackMethodIndex]]				ifFalse:					[originalSelectorName _ self selectedMessageName.					self setOriginalCategoryIndexForCurrentMethod.					messageListIndex _ fallBackMethodIndex _ self messageList indexOf: originalSelectorName.								(result _ self defineMessage: aText notifying: aController)						ifTrue:							[self setClass: self selectedClassOrMetaClass selector: self selectedMessageName]						ifFalse:							[ "Compilation failure:  reselect the original category & method"							messageCategoryListIndex _ fallBackCategoryIndex.							messageListIndex _ fallBackMethodIndex.							^result]].			self changed: #messageCategoryList.			^result]		ifFalse:			[ "User tried to save a method while the ALL category was NOT selected"			^self defineMessage: aText notifying: aController]! !Browser removeSelector: #selectUnclassifiedCategory!