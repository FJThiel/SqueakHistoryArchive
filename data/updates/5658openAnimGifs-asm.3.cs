'From Squeak3.7alpha of ''11 September 2003'' [latest update: #5595] on 15 December 2003 at 8:01:42 pm'!"Change Set:		openAnimGifs-asmDate:			4 December 2003Author:			Alejandro Magistrelloadded a file service to open gifs as if they were animated."!!AnimatedImageMorph methodsFor: 'stepping and presenter' stamp: 'asm 12/11/2003 22:33'!step	| d |	images isEmpty		ifTrue: [^ self].	nextTime > Time millisecondClockValue		ifTrue: [^self].	imageIndex _ imageIndex \\ images size + 1.	self image: (images at: imageIndex).	self position: self position + (offsets at: imageIndex) - previousOffset.	previousOffset _ offsets at: imageIndex.	d _ (delays at: imageIndex) ifNil: [0].	nextTime := Time millisecondClockValue + d! !!AnimatedImageMorph methodsFor: 'stepping and presenter' stamp: 'asm 12/15/2003 19:44'!wantsSteps	^(images size > 1)! !!AnimatedImageMorph methodsFor: 'private' stamp: 'asm 12/15/2003 19:35'!fromStream: aStream	| reader |	reader _ AnimatedGIFReadWriter formsFromStream: aStream.	images _ reader forms.	offsets _ reader offsets.	delays _ reader delays.	self step! !!AnimatedImageMorph class methodsFor: 'instance creation' stamp: 'asm 12/4/2003 23:20'!fromStream: aStream	^self new fromStream: aStream! !!AnimatedImageMorph class methodsFor: 'instance creation' stamp: 'asm 12/11/2003 21:53'!openGIFInWindow: fileName	^(self new fromGIFFileNamed: fileName) openInWorld! !!AnimatedImageMorph class methodsFor: 'class initialization' stamp: 'asm 12/11/2003 21:05'!initialize	"register the receiver in the global registries"	self environment		at: #FileList		ifPresent: [:cl | cl registerFileReader: self]! !!AnimatedImageMorph class methodsFor: 'class initialization' stamp: 'asm 12/11/2003 21:01'!unload	"Unload the receiver from global registries"	self environment		at: #FileList		ifPresent: [:cl | cl unregisterFileReader: self]! !!AnimatedImageMorph class methodsFor: 'fileIn/Out' stamp: 'asm 12/11/2003 21:34'!fileReaderServicesForFile: fullName suffix: suffix	^((AnimatedGIFReadWriter allTypicalFileExtensions add: '*'; add: 'form'; yourself)		includes: suffix)		ifTrue: [ self services ]		ifFalse: [#()]! !!AnimatedImageMorph class methodsFor: 'fileIn/Out' stamp: 'asm 12/11/2003 21:16'!serviceOpenGIFInWindow	"Answer a service for opening a gif graphic in a window"	^ SimpleServiceEntry 		provider: self 		label: 'open graphic in a window'		selector: #openGIFInWindow:		description: 'open a gif graphic file in a window'		buttonLabel: 'open'! !!AnimatedImageMorph class methodsFor: 'fileIn/Out' stamp: 'asm 12/11/2003 21:54'!services		^ Array with: self serviceOpenGIFInWindow		with: Form serviceImageImports		with: Form serviceImageAsBackground ! !!GIFReadWriter class methodsFor: 'image reading/writing' stamp: 'asm 12/11/2003 21:29'!typicalFileExtensions	"Answer a collection of file extensions (lowercase) which files that I can 	read might commonly have"	self		allSubclasses detect: [:cls | cls wantsToHandleGIFs ]					 ifNone: ["if none of my subclasses wants , then i''ll have to do"							^ #('gif' )].	^ #( )! !!GIFReadWriter class methodsFor: 'image reading/writing' stamp: 'asm 12/11/2003 21:29'!wantsToHandleGIFs	^ false! !!AnimatedGIFReadWriter class methodsFor: 'image reading/writing' stamp: 'asm 12/11/2003 21:44'!allTypicalFileExtensions	"Answer a collection of file extensions (lowercase) which files that I can read might commonly have"	^ Set with: 'gif'! !!AnimatedGIFReadWriter class methodsFor: 'image reading/writing' stamp: 'asm 12/11/2003 21:50'!typicalFileExtensions	"this is called from one of my superclasses"	^ #( )! !!AnimatedGIFReadWriter class methodsFor: 'image reading/writing' stamp: 'asm 12/11/2003 21:29'!wantsToHandleGIFs	^true! !AnimatedImageMorph initialize!