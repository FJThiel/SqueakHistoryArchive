'From Squeak 2.2 of Sept 23, 1998 on 2 October 1998 at 3:38:46 pm'!"Change Set:		MorphicFixes3-diDate:			2 October 1998Author:			Dan IngallsMakes halo bounds work better inside flexes.Makes grow, scale and rotate work better inside flexes."!!HaloMorph methodsFor: 'stepping' stamp: 'di 10/2/1998 13:35'!step	| newBounds |	target ifNil: [^ self].	target isWorldMorph		ifTrue: [newBounds _ target bounds]		ifFalse: [newBounds _ target renderedMorph fullBoundsInWorld].	newBounds = self bounds ifTrue: [^ self].	growingOrRotating ifFalse: [  "adjust halo bounds if appropriate"		submorphs size > 1			ifTrue: [self addHandles].  "recreates full set with new bounds"		self bounds: newBounds].! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 15:28'!addHandles	| box s |	target isWorldMorph ifTrue: [^ self addHandlesForWorldHalos].	self removeAllMorphs.  "remove old handles, if any"	s _ self handleSize.	self bounds: target renderedMorph fullBoundsInWorld.  "update my size"	box _ (self bounds expandBy: s+1)			intersect: (self world bounds insetBy: 5@5).	self addHandleAt: box topLeft color: Color red		on: #mouseDown send: #doMenu:with: to: self.	self addHandleAt: (box leftCenter + (0 @ (s+2)) min: box leftCenter + box bottomLeft // 2)		color: Color lightBrown		on: #mouseDown send: #tearOffTile to: innerTarget.	self addHandleAt: (box topLeft + ((s+2)@0) min: box topLeft + box topCenter // 2)		color: Color transparent		on: #mouseDown send: #dismiss to: self.	self addHandleAt: (box leftCenter) color: Color cyan		on: #mouseDown send: #openViewerForArgument to: innerTarget.	self addHandleAt: box topCenter color: Color black		on: #mouseDown send: #doGrab:with: to: self.	(self addHandleAt: (box topCenter + ((s+2)@0) min: box topCenter + box topRight // 2)		color: Color brown		on: #mouseDown send: #startDrag:with: to: self)		on: #mouseStillDown send: #doDrag:with: to: self.	self addHandleAt: box topRight color: Color green		on: #mouseDown send: #doDup:with: to: self.	Preferences showDebugHaloHandle ifTrue:		[self addHandleAt: (box rightCenter + (0 @ ((s+2) negated)) min: box rightCenter + box bottomRight // 2)			color: Color blue veryMuchLighter			on: #mouseDown send: #doDebug:with: to: self].	target balloonText ifNotNil:		[(self addHandleAt: box bottomCenter color: Color lightBlue			on: #mouseDown send: #mouseDownOnHelpHandle: to: innerTarget)			on: #mouseUp send: #deleteBalloon to: innerTarget].	(self addHandleAt: box bottomLeft color: Color blue		on: #mouseDown send: #startRot:with: to: self)		on: #mouseStillDown send: #doRot:with: to: self.	target isFlexMorph		ifTrue: [(self addHandleAt: box bottomRight color: Color lightOrange				on: #mouseDown send: #startScale:with: to: self)				on: #mouseStillDown send: #doScale:with: to: self]		ifFalse: [(self addHandleAt: box bottomRight color: Color yellow				on: #mouseDown send: #startGrow:with: to: self)				on: #mouseStillDown send: #doGrow:with: to: self].	innerTarget addOptionalHandlesTo: self box: box.	self addNameBeneath: box string: target externalName.	growingOrRotating _ false.	self layoutChanged.	self changed.! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 13:58'!doGrow: evt with: growHandle	| newExtent |	newExtent _ (target pointFromWorld: (evt cursorPoint - positionOffset)) - target topLeft.	target extent: (newExtent max: minExtent).	growHandle position: evt cursorPoint - (growHandle extent // 2).	self layoutChanged.! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 13:47'!doRot: evt with: rotHandle	"Update the rotation of my target if it is rotatable."	| degrees |	degrees _ (evt cursorPoint - (target pointInWorld: target referencePosition)) degrees.	degrees _ degrees - angleOffset degrees.	(degrees abs < 1.0) ifTrue: [degrees _ 0.0].	degrees = 0.0		ifTrue: [rotHandle color: Color lightBlue]		ifFalse: [rotHandle color: Color blue].	target rotationDegrees: (degrees						detentBy: 10.0						atMultiplesOf: 90.0 snap: false).	rotHandle position: evt cursorPoint - (rotHandle extent // 2).	self layoutChanged.! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 15:24'!doScale: evt with: scaleHandle	"Update the scale of my target if it is scalable."	| newExtent newHandlePos |	newHandlePos _ evt cursorPoint - (scaleHandle extent // 2).	newExtent _ (target pointFromWorld: newHandlePos) - target center * 2.	target scaleToFit: ((newExtent max: minExtent) min: Display extent).	target scale = 1.0		ifTrue: [scaleHandle color: Color yellow]		ifFalse: [scaleHandle color: Color orange].	scaleHandle position: newHandlePos.	self layoutChanged.! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 14:01'!startGrow: evt with: growHandle	"Initialize resizing of my target."	growingOrRotating _ true.	self removeAllHandlesBut: growHandle.  "remove all other handles"	positionOffset _ evt cursorPoint - (target pointInWorld: target bottomRight).	target isAlignmentMorph		ifTrue: [minExtent _ target minWidth@target minHeight]		ifFalse: [minExtent _ 1@1].! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 14:03'!startRot: evt with: rotHandle	"Initialize rotation of my target if it is rotatable."	target isFlexMorph ifFalse: [target addFlexShell].	growingOrRotating _ true.	self removeAllHandlesBut: rotHandle.  "remove all other handles"	angleOffset _ evt cursorPoint - (target pointInWorld: target referencePosition).	angleOffset _ Point			r: angleOffset r			degrees: angleOffset degrees - target rotationDegrees.! !!HaloMorph methodsFor: 'private' stamp: 'di 10/2/1998 15:26'!startScale: evt with: scaleHandle	"Initialize scaling of my target."	target isFlexMorph ifFalse: [target addFlexShell].	growingOrRotating _ true.	self removeAllHandlesBut: scaleHandle.  "remove all other handles"	positionOffset _ 0@0.	target isAlignmentMorph		ifTrue: [minExtent _ target minWidth@target minHeight]		ifFalse: [minExtent _ 3@3].! !!TransformationMorph methodsFor: 'accessing' stamp: 'di 10/2/1998 15:11'!scaleToFit: anExtent	| scaleFactor |	scaleFactor _ anExtent r / submorphs first fullBounds extent r.	((scaleFactor - 1.0) abs < 0.05) ifTrue: [scaleFactor _ 1.0].	self scale: ((scaleFactor min: 8.0) max: 0.05).! !