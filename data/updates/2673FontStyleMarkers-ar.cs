'From Squeak2.9alpha of 12 June 2000 [latest update: #2665] on 21 September 2000 at 2:25:13 pm'!"Change Set:		FontSelectionMarkers-arDate:			21 September 2000Author:			Andreas RaabAdds menu markers for changing the font style, size, or emphasis."!!StrikeFont methodsFor: 'accessing' stamp: 'ar 9/21/2000 11:53'!fontNameWithPointSize	^self name withoutTrailingDigits, ' ', self pointSize printString! !!TextAttribute methodsFor: 'testing' stamp: 'ar 9/21/2000 14:16'!isKern	^false! !!TextKern methodsFor: 'testing' stamp: 'ar 9/21/2000 14:16'!isKern	^true! !!TextMorphEditor methodsFor: 'attributes' stamp: 'ar 9/21/2000 14:19'!changeEmphasisOrAlignment	| aList reply  code align menuList |	self flag: #arNote. "Move this up once we get rid of MVC"	aList _ #(plain bold italic narrow underlined struckOut leftFlush centered rightFlush justified).		align _ paragraph textStyle alignmentSymbol.	code _ paragraph text emphasisAt: startBlock stringIndex.	menuList _ WriteStream on: Array new.	menuList nextPut: (code = 0 ifTrue:['<on>plain'] ifFalse:['<off>plain']).	menuList nextPutAll: (#(bold italic underlined struckOut) collect:[:emph|		(code anyMask: (TextEmphasis perform: emph) emphasisCode)			ifTrue:['<on>', emph]			ifFalse:['<off>',emph]]).	((paragraph text attributesAt: startBlock stringIndex forStyle: paragraph textStyle)		anySatisfy:[:attr| attr isKern and:[attr kern < 0]]) 			ifTrue:[menuList nextPut:'<on>narrow']			ifFalse:[menuList nextPut:'<off>narrow'].	menuList nextPutAll: (#(leftFlush centered rightFlush justified) collect:[:type|		align == type			ifTrue:['<on>',type]			ifFalse:['<off>',type]]).	aList _ #(plain bold italic underlined struckOut narrow leftFlush centered rightFlush justified).	reply _ (SelectionMenu labelList: menuList contents lines: #(1 6) selections: aList) startUp.	reply ~~ nil ifTrue:		[(#(leftFlush centered rightFlush justified) includes: reply)			ifTrue:				[paragraph perform: reply.				self recomputeInterval]			ifFalse:				[self setEmphasis: reply.				paragraph composeAll.				self recomputeSelection.				self mvcRedisplay]].	^ true! !!TextMorphEditor methodsFor: 'attributes' stamp: 'ar 9/21/2000 14:14'!changeStyle	"Let user change styles for the current text pane."	| aList reply style theStyle menuList |	self flag: #arNote. "Move this up once we get rid of MVC"	aList _ StrikeFont familyNames remove: 'DefaultTextStyle' ifAbsent: []; asOrderedCollection.	theStyle _ paragraph textStyle.	menuList _ aList collect:[:styleName|		"Hack!! use defaultFont for comparison - we have no name that we could use for compare and the style changes with alignment so they're no longer equal."		(TextConstants at: styleName) defaultFont == theStyle defaultFont			ifTrue:['<on>', styleName]			ifFalse:['<off>',styleName]].	theStyle = TextStyle default		ifTrue:[menuList addFirst: '<on>DefaultTextStyle']		ifFalse:[menuList addFirst: '<off>DefaultTextStyle'].	aList addFirst: 'DefaultTextStyle'.	reply _ (SelectionMenu labelList: menuList lines: #(1) selections: aList) startUp.	reply ~~ nil ifTrue:		[(style _ TextStyle named: reply) ifNil: [self beep. ^ true].		paragraph textStyle: style copy.		paragraph composeAll.		self recomputeSelection.		self mvcRedisplay].	^ true! !!TextMorphEditor methodsFor: 'attributes' stamp: 'ar 9/21/2000 13:54'!offerFontMenu	"Present a menu of available fonts, and if one is chosen, apply it to the current selection.  	Use only names of Fonts of this paragraph  "	| aList reply curFont menuList |	self flag: #arNote. "Move this up once we get rid of MVC"	curFont _ (paragraph text fontAt: startBlock stringIndex withStyle: paragraph textStyle) fontNameWithPointSize.	aList _ paragraph textStyle fontNamesWithPointSizes.	menuList _ aList collect:[:fntName|		fntName = curFont ifTrue:['<on>',fntName] ifFalse:['<off>',fntName]].	reply _ (SelectionMenu labelList: menuList selections: aList) startUp.	reply ~~ nil ifTrue:		[self replaceSelectionWith:			(Text string: self selection asString 				attribute: (TextFontChange fontNumber: (aList indexOf: reply)))] ! !!TextStyle methodsFor: 'accessing' stamp: 'ar 9/21/2000 14:04'!alignmentSymbol	"Answer the symbol for the current setting of the alignment."	alignment = 0 ifTrue:[^#leftFlush].	alignment = 1 ifTrue:[^#centered].	alignment = 2 ifTrue:[^#rightFlush].	alignment = 3 ifTrue:[^#justified].	^#leftFlush! !!TextStyle methodsFor: 'accessing' stamp: 'ar 9/21/2000 11:53'!fontNamesWithPointSizes	^ fontArray collect:		[:x | x fontNameWithPointSize]  "TextStyle default fontNamesWithPointSizes"! !