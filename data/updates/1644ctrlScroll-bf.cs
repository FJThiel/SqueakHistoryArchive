'From Squeak2.7alpha of 1 November 1999 [latest update: #1592] on 4 November 1999 at 8:33:49 pm'!"Change Set:		ctrl-scroll-bfDate:			4 Nov 1999Author:			Bert FreudenbergMakes ctrl+up/down scrolling. For use with a scrollwheel mouse, but can be used with the keyboard as well. See ScrollController>>#scrollByKeyboard (MVC) and ScrollPane>>#scrollByKeyboard: (Morphic)"!!ScrollBar methodsFor: 'scrolling' stamp: 'bf 4/14/1999 12:03'!scrollDown: count	self setValue: (value + (scrollDelta * count) + 0.000001 min: 1.0)! !!ScrollBar methodsFor: 'scrolling' stamp: 'bf 4/14/1999 12:03'!scrollUp: count	self setValue: (value - (scrollDelta * count) - 0.000001 max: 0.0)! !!ScrollController methodsFor: 'control defaults' stamp: 'bf 4/14/1999 12:27'!controlActivity	self scrollByKeyboard ifTrue: [^self].	self scrollBarContainsCursor				ifTrue: [self scroll]				ifFalse: [super controlActivity]! !!ScrollController methodsFor: 'scrolling' stamp: 'bf 4/14/1999 12:56'!scrollByKeyboard	| keyEvent |	keyEvent _ sensor keyboardPeek.	keyEvent ifNil: [^false].	sensor controlKeyPressed ifFalse: [^false].	keyEvent asciiValue = 30 ifTrue:		[sensor keyboard.		self scrollViewDown ifTrue: [self moveMarker].		^true].	keyEvent asciiValue = 31 ifTrue:		[sensor keyboard.		self scrollViewUp ifTrue: [self moveMarker].		^true].	^ false! !!ListController methodsFor: 'control defaults' stamp: 'bf 4/14/1999 12:41'!controlActivity	self scrollByKeyboard ifTrue: [^self].	self processKeyboard.	super controlActivity.! !!ParagraphEditor methodsFor: 'controlling' stamp: 'bf 4/14/1999 12:41'!controlActivity	self scrollByKeyboard ifTrue: [^self].	self scrollBarContainsCursor		ifTrue: [self scroll]		ifFalse: [self processKeyboard.				self processMouseButtons]! !!PluggableListController methodsFor: 'all' stamp: 'bf 4/14/1999 12:41'!controlActivity	"Overridden to handle keystrokes."	self scrollByKeyboard ifTrue: [^self].	sensor keyboardPressed ifTrue: [view handleKeystroke: sensor keyboard].	super controlActivity.! !!ScrollPane methodsFor: 'pane events' stamp: 'bf 4/14/1999 12:39'!keyStroke: evt	"If pane is not full, pass the event to the last submorph,	assuming it is the most appropriate recipient (!!)"	(self scrollByKeyboard: evt) ifTrue: [^self].	scroller submorphs last keyStroke: evt! !!ScrollPane methodsFor: 'pane events' stamp: 'bf 4/14/1999 12:38'!scrollByKeyboard: event	"If event is ctrl+up/down then scroll and answer true"	event controlKeyPressed ifFalse: [^false].	event keyValue = 30 ifTrue: [scrollBar scrollUp: 3. ^true].	event keyValue = 31 ifTrue: [scrollBar scrollDown: 3. ^true].	^false! !!PluggableListMorph methodsFor: 'elvis' stamp: 'bf 11/4/1999 20:28'!keyStroke: event 	"Process keys 	specialKeys are things like up, down, etc. ALWAYS HANDLED 	modifierKeys are regular characters either 1) accompanied with ctrl, 	cmd or 2) any character if the list doesn't want to handle basic 	keys (handlesBasicKeys returns false) 	basicKeys are any characters"	| aChar aSpecialKey |	(self scrollByKeyboard: event) ifTrue: [^self].	aChar _ event keyCharacter.	aSpecialKey _ aChar asciiValue.	aSpecialKey < 32 ifTrue: [^ self specialKeyPressed: aSpecialKey].	(event anyModifierKeyPressed or: [self handlesBasicKeys not])		ifTrue: [^ self modifierKeyPressed: aChar].	^ self basicKeyPressed: aChar! !!TextMorphForEditView methodsFor: 'all' stamp: 'bf 4/14/1999 12:39'!keyStroke: evt	| view |	(editView scrollByKeyboard: evt) ifTrue: [^self].	self editor model: editView model.  "For evaluateSelection"	view _ editView.  "Copy into temp for case of a self-mutating doit"	(acceptOnCR and: [evt keyCharacter = Character cr])		ifTrue: [^ self editor accept].	super keyStroke: evt.	view scrollSelectionIntoView! !