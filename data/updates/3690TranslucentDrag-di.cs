'From Squeak3.1alpha of 5 February 2001 [latest update: #3693] on 23 February 2001 at 9:49:28 am'!"Change Set:		TranslucentDragDate:			21 February 2001Author:			Dan IngallsAdds a preference, tileTranslucentDrag, and the capability to make tiles translucent during drag.  The cursor offset scheme can be reinstated by disabling this preference (defaults to true)."!!ParagraphEditor methodsFor: 'menu messages' stamp: 'di 2/23/2001 09:26'!selectionAsTiles	"Try to make new universal tiles from the selected text"	| selection tiles |	selection _ self selection.	self terminateAndInitializeAround:		[self currentHand attachMorph: (tiles _ Player tilesFrom: selection).		Preferences tileTranslucentDrag			ifTrue: [tiles lookTranslucent]			ifFalse: [tiles align: tiles topLeft 			 			with: self currentHand position + tiles cursorBaseOffset]].! !!Player methodsFor: 'misc' stamp: 'di 2/23/2001 09:29'!tearOffTileForSelf	| tiles |	self currentHand attachMorph: (tiles _ self tileReferringToSelf).	(tiles isKindOf: SyntaxMorph) ifTrue:		[Preferences tileTranslucentDrag			ifTrue: [tiles lookTranslucent]			ifFalse: [tiles align: tiles topLeft 			 			with: self currentHand position + tiles cursorBaseOffset]]! !!SyntaxMorph methodsFor: 'event handling' stamp: 'di 2/23/2001 09:34'!mouseDown: evt 	| dup rootTile |	evt yellowButtonPressed ifTrue: [^ self showMenu: evt].	(rootTile _ self rootTile) isMethodNode ifTrue:		[self currentSelectionDo:			[:innerMorph :mouseDownLoc :outerMorph |			(outerMorph notNil and: [self == innerMorph])				ifTrue: ["Click on prior selection -- record click point."						self setSelection: {self. evt cursorPoint. outerMorph}]				ifFalse: ["A new selection sequence."						self setSelection: {self. evt cursorPoint. nil}]].		^ self].	"Out in the world -- treat as a unit"	rootTile isPartsDonor 		ifTrue: [dup _ rootTile duplicate.				dup setProperty: #beScript toValue: true]		ifFalse: [dup _ rootTile].	evt hand attachMorph: dup.	Preferences tileTranslucentDrag		ifTrue: [^ dup lookTranslucent]		ifFalse: [^ dup align: dup topLeft with: evt hand position + self cursorBaseOffset]! !!SyntaxMorph methodsFor: 'event handling' stamp: 'di 2/23/2001 09:35'!mouseMove: evt	| dup selection |	owner isSyntaxMorph ifFalse: [^ self].	self currentSelectionDo:		[:innerMorph :mouseDownLoc :outerMorph |		mouseDownLoc ifNotNil: [			(evt cursorPoint dist: mouseDownLoc) > 4 ifTrue:				["If drag 5 pixels, then tear off a copy of outer selection."				selection _ outerMorph ifNil: [self].				evt hand attachMorph: (dup _ selection duplicate).				Preferences tileTranslucentDrag					ifTrue: [dup lookTranslucent]					ifFalse: [dup align: dup topLeft								with: evt hand position + self cursorBaseOffset].				self setSelection: nil.	"Why doesn't this deselect?"				(self firstOwnerSuchThat: [:m | m isSyntaxMorph and: [m isBlockNode]])					ifNotNilDo: [:m | "Activate enclosing block."								m startStepping]]]].! !!SyntaxMorph methodsFor: 'dropping/grabbing' stamp: 'di 2/23/2001 09:32'!justDroppedInto: aMorph event: evt	aMorph isSyntaxMorph ifFalse:		[Preferences tileTranslucentDrag			ifTrue: [self lookOpaque]			ifFalse: [self align: self topLeft with: self topLeft - self cursorBaseOffset]].	self removeProperty: #beScript.	^ super justDroppedInto: aMorph event: evt! !!SyntaxMorph methodsFor: 'drawing' stamp: 'di 2/21/2001 22:52'!lookOpaque	self color: (self color alpha: 1.0)! !!SyntaxMorph methodsFor: 'drawing' stamp: 'di 2/21/2001 22:52'!lookTranslucent	self color: (self color alpha: 0.5)! !"Postscript:Install the preference."Preferences addPreference: #tileTranslucentDrag category: #scripting default: true balloonHelp: 'Scripting tiles will be translucent when being dragged.  If false, tiles will be opaque but offset from the cursor so the drop zone is visible.' !