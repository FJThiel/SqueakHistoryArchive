'From Squeak 2.1 of June 30, 1998 on 28 July 1998 at 2:25:56 am'!"Change Set:		CalendarDate:			28 July 1998Author:			Leandro CanigliaHere you will encounter two classes Month and Week that can be used to study the important class Date. Both Month and Week have been made subclasses of Date. Their protocols are very simple, still usefull.Once you have learned these three classes, you can see the Morphic versions of Month and Week. The representation of a MonthMorph is a simple calendar. You should complete this design creating, as an exercise, the classes Calendar and CalendarMorph.caniglia@sugarweb.com"!Date subclass: #Month	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Numeric-Magnitudes'!AlignmentMorph subclass: #MonthMorph	instanceVariableNames: 'month '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Dates'!Date subclass: #Week	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Numeric-Magnitudes'!AlignmentMorph subclass: #WeekMorph	instanceVariableNames: 'week month '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Dates'!!Date methodsFor: 'converting' stamp: 'LC 7/26/1998 13:59'!asDate	^ self! !!Date methodsFor: 'converting' stamp: 'LC 7/26/1998 02:23'!month	^ Month fromDate: self! !!Date methodsFor: 'converting' stamp: 'LC 7/26/1998 13:58'!week	^ Week fromDate: self! !!Month methodsFor: 'converting' stamp: 'LC 7/26/1998 12:49'!asDate	^ Date		newDay: 1		month: self name		year: self year! !!Month methodsFor: 'converting' stamp: 'LC 7/26/1998 12:53'!next	^ self class fromDate: (self addDays: self duration)! !!Month methodsFor: 'converting' stamp: 'LC 7/26/1998 02:43'!previous	^ self class fromDate: (self subtractDays: 1)! !!Month methodsFor: 'inquiries' stamp: 'LC 7/27/1998 04:38'!duration	^ self daysInMonth! !!Month methodsFor: 'inquiries' stamp: 'LC 7/26/1998 02:53'!firstDate	^ self asDate! !!Month methodsFor: 'inquiries' stamp: 'LC 7/26/1998 12:51'!index	^ self monthIndex! !!Month methodsFor: 'inquiries' stamp: 'LC 7/26/1998 12:52'!lastDate	^ self firstDate addDays: self duration - 1! !!Month methodsFor: 'inquiries' stamp: 'LC 7/26/1998 12:50'!name	^ self monthName! !!Month methodsFor: 'enumerationg' stamp: 'LC 7/27/1998 04:36'!eachWeekDo: aBlock	| week |	week _ self firstDate week.	[week firstDate <= self lastDate]		whileTrue:			[aBlock value: week.			week _ week next]! !!Month methodsFor: 'printing' stamp: 'LC 7/26/1998 02:24'!printOn: aStream	aStream nextPutAll: self monthName, ' ', self year printString! !!Month class methodsFor: 'instance creation' stamp: 'LC 7/26/1998 12:47'!fromDate: aDate	^ self		newDay: 1		month: aDate monthName		year: aDate year! !!Month class methodsFor: 'instance creation' stamp: 'LC 7/26/1998 12:48'!readFrom: aStream	| m y c |	m _ (ReadWriteStream with: '') reset.	[(c _ aStream next) isSeparator] whileFalse: [m nextPut: c].	[(c _ aStream next) isSeparator] whileTrue.	y _ (ReadWriteStream with: '') reset.		y nextPut: c.	[aStream atEnd] whileFalse: [y nextPut: aStream next].	^ self fromDate: (Date newDay: 1 month: m contents asSymbol year: y contents asNumber)	"	Month readFrom: (ReadWriteStream with: 'July 1998') reset	"! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 04:43'!initialize	super initialize.	self		inset: 1;		color: Color red;		orientation: #vertical;		vResizing: #shrinkWrap;		month: Date today month! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/28/1998 00:27'!initializeHeader	| title sep  frame button |	title _ (self findA: WeekMorph) title.	sep _ Morph new color: Color transparent; extent: title width @ 1.	self		addMorph: sep;		addMorph: title;		addMorph: sep copy.	button _ SimpleButtonMorph new				target: self;				actWhen: #whilePressed;				color: (Color r: 0.8 g: 0.8 b: 0.8).	frame _ AlignmentMorph new		color: Color transparent;		orientation: #horizontal;		inset: 0.	frame		addMorph:			(button				label: '>>';				actionSelector: #next;				width: 23);		addMorph:			((AlignmentMorph new				color: Color transparent;				orientation: #vertical;				centering: #center;				extent: (title fullBounds width - (button width * 2)) @ title height)				addMorph:					(StringMorph new						contents:							month name, ' ', month year printString));		addMorph:			(button copy				label: '<<';				actionSelector: #previous;				width: 23).	self addMorph: frame! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 23:10'!initializeWeeks	| weeks |	self removeAllMorphs.	weeks _ OrderedCollection new.	month eachWeekDo: [:each | weeks add: (WeekMorph new week: each month: month)].	weeks reverseDo: [:each | self addMorph: each].	self initializeHeader! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 04:19'!month: aMonth	month _ aMonth.	self initializeWeeks! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 04:52'!next	self month: month next! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 04:53'!previous	self month: month previous! !!MonthMorph methodsFor: 'all' stamp: 'LC 7/27/1998 23:08'!selectedDates	| answer |	answer _ SortedCollection new.	self submorphsDo:		[:each |		(each isKindOf: WeekMorph) ifTrue: [answer addAll: each selectedDates]].	^ answer ! !!Week commentStamp: 'LC 7/28/1998 02:25' prior: 0!Weeks begin in #Monday and end in #Sunday!!Week methodsFor: 'converting' stamp: 'LC 7/26/1998 23:13'!asDate	"Answer the first day of the week."	^ Date		newDay: self dayOfMonth		month: self monthName		year: self year! !!Week methodsFor: 'converting' stamp: 'LC 7/26/1998 23:14'!next	^ self class fromDate: (self firstDate addDays: 7)! !!Week methodsFor: 'converting' stamp: 'LC 7/26/1998 23:14'!previous	^ self class fromDate: (self firstDate subtractDays: 7)! !!Week methodsFor: 'inquiries' stamp: 'LC 7/26/1998 23:14'!duration	^ 7! !!Week methodsFor: 'inquiries' stamp: 'LC 7/26/1998 13:17'!firstDate	^ self asDate! !!Week methodsFor: 'inquiries' stamp: 'LC 7/26/1998 23:17'!index	^ self indexInMonth: self firstDate month! !!Week methodsFor: 'inquiries' stamp: 'LC 7/26/1998 23:16'!indexInMonth: aMonth	"1=first week, 2=second week, etc."	^ (Date dayOfWeek: aMonth weekday) + self dayOfMonth - 2  // 7 + 1! !!Week methodsFor: 'inquiries' stamp: 'LC 7/26/1998 23:17'!lastDate	^ self firstDate addDays: 6! !!Week methodsFor: 'enumerating' stamp: 'LC 7/27/1998 04:08'!do: aBlock	| date |	date _ self asDate.	7 timesRepeat:		[aBlock value: date.		date _ date addDays: 1]! !!Week methodsFor: 'printing' stamp: 'LC 7/28/1998 00:37'!printOn: aStream	aStream nextPutAll:		self month printString, ', ',		(#('1st week' '2nd week' '3rd week' '4th week' '5th week' '6th week') at: self index)! !!Week class methodsFor: 'instance creation' stamp: 'LC 7/26/1998 23:10'!fromDate: aDate	| monday |	monday _ aDate previous: #Monday.	^ self		newDay: monday dayOfMonth		month: monday monthName		year: monday year! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 23:01'!initialize	super initialize.	self		inset: 0;		color: Color transparent;		orientation: #horizontal;		openToDragNDrop: false;		height: 19;		week: Date today week month: Date today month! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 14:54'!initializeDays	| extent days |	self removeAllMorphs.	days _ OrderedCollection new: 7.	extent _ self tile extent.	week do:		[:each |		days add:			(each month = month				ifTrue:					[self tile						label: each dayOfMonth printString;						extent: extent;						setBalloonText: each printString]				ifFalse:					[Morph new						color: Color transparent;						extent: extent])].	days reverseDo: [:each | self addMorph: each]! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 23:39'!next	^ self class on: week next! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 23:43'!selectedDates	| answer |	answer _ SortedCollection new.	self submorphsDo:		[:each |		((each respondsTo: #onColor) and: [each color = each onColor])			ifTrue:				[answer add:					(Date						newDay: each label asNumber						month: week firstDate monthName						year: week firstDate year)]].	^ answer! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/25/1998 22:02'!tile	| onColor offColor |	offColor _ Color r: 0.4 g: 0.8 b: 0.6.	onColor _ offColor mixed: 1/2 with: Color white.	^ SimpleSwitchMorph new		offColor: offColor;		onColor: onColor;		borderWidth: 1;		useSquareCorners;		extent: 23 @ 19! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 04:12'!title	"Answer a title with the names of the days."	| title extent |	title _ AlignmentMorph new		inset: 0;		color: Color red;		orientation: #horizontal;		vResizing: #shrinkWarp;		height: 19.		extent _ self tile extent.	((7 to: 1 by: -1) collect: [:each | Date nameOfDay: each]) do:		[:each |		title addMorph:			(self tile 				label: (each copyFrom: 1 to: 2);				extent: extent;				setBalloonText: each printString)].	^ title	! !!WeekMorph methodsFor: 'all' stamp: 'LC 7/27/1998 22:59'!week: aWeek month: aMonth	week _ aWeek.	month _ aMonth.	self initializeDays! !!WeekMorph class methodsFor: 'instance creation' stamp: 'LC 7/28/1998 00:53'!includeInNewMorphMenu	"Return true for all classes that can be instantiated from the menu"	^ false! !!WeekMorph class methodsFor: 'instance creation' stamp: 'LC 7/27/1998 22:58'!on: aDate	^ self new		week: aDate week		month: aDate month! !WeekMorph removeSelector: #week:!WeekMorph removeSelector: #firstDate!WeekMorph removeSelector: #month:!