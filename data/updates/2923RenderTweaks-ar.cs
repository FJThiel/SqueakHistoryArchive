'From Squeak2.9alpha of 13 June 2000 [latest update: #2968] on 7 November 2000 at 5:31:35 pm'!"Change Set:		RenderTweaks-arDate:			7 November 2000Author:			Andreas RaabA little tweak for the renderer, rejecting vertex buffers completely outside the view before shading."!!B3DMatrix4x4 methodsFor: 'transforming' stamp: 'ar 11/7/2000 17:29'!localDirToGlobal: aVector	"Multiply direction vector with the receiver"	| x y z rx ry rz |	x := aVector x.	y := aVector y.	z := aVector z.	rx := (x * self a11) + (y * self a12) + (z * self a13).	ry := (x * self a21) + (y * self a22) + (z * self a23).	rz := (x * self a31) + (y * self a32) + (z * self a33).	^B3DVector3 x: rx y: ry z: rz! !!B3DRenderEngine methodsFor: 'private-rendering' stamp: 'ar 11/7/2000 17:27'!privateClipVB: vb	"OBSOLETE. Clip the objects in the vertex buffer."	^clipper processVertexBuffer: vb! !!B3DRenderEngine methodsFor: 'private-rendering' stamp: 'ar 11/7/2000 17:27'!privatePostClipVB: vb	"Clip the objects in the vertex buffer."	^clipper postProcessVertexBuffer: vb! !!B3DRenderEngine methodsFor: 'private-rendering' stamp: 'ar 11/7/2000 17:25'!privatePreClipVB: vb	"Clip the objects in the vertex buffer."	^clipper preProcessVertexBuffer: vb! !!B3DRenderEngine methodsFor: 'private-rendering' stamp: 'ar 11/7/2000 17:28'!renderPrimitive	"This is the main rendering loop for all operations"	| visible |	"Step 1: Check if the mesh is visible at all"	visible _ self privateVisibleVB: vertexBuffer.	visible == false ifTrue:[^nil].	"Step 2: Transform vertices, normals, texture coords of the mesh"	self privateTransformVB: vertexBuffer.	"Step 4a: Pre-clip the mesh if needed so that we can reject invisible meshes before shading"	(self privateNeedsClipVB: visible)		ifTrue:[visible _ self privatePreClipVB: vertexBuffer]		ifFalse:[visible _ true]. "don't bother clipping below"	visible == false ifTrue:[^nil].	"Step 3: Light the vertices of the mesh."	self privateNeedsShadingVB		ifTrue:[self privateShadeVB: vertexBuffer].	"Step 4: Clip the mesh if necessary"	(visible == nil)		ifTrue:[visible _ self privatePostClipVB: vertexBuffer].	"Step 5: Rasterize the mesh"	^self privateRasterizeVB: vertexBuffer.! !!B3DVertexClipper methodsFor: 'processing' stamp: 'ar 11/7/2000 17:24'!postProcessVertexBuffer: vb	"Clip individual items depending on the primitive type"	vb growForClip. "Make sure we have enough space during primitive operation"	^super processVertexBuffer: vb.! !!B3DVertexClipper methodsFor: 'processing' stamp: 'ar 11/7/2000 17:24'!preProcessVertexBuffer: vb	"Clip the elements in the vertex buffer. Return true if all vertices are inside.	Return false if all vertices are outside. If partial clipping occurs, return nil."	| fullMask |	fullMask _ self determineClipFlags: vb vertexArray count: vb vertexCount.	vb clipFlags: fullMask.	"Check if all vertices are inside, so no clipping is necessary"	(fullMask allMask: InAllMask) ifTrue:[^true].	"Check if all vertices are outside, so we can get rid of the entire buffer"	(fullMask anyMask: OutAllMask) ifTrue:[		"Reset the number of vertices in the vertex buffer to zero to indicate all outside"		vb reset.		^false].	^nil! !!B3DVertexClipper methodsFor: 'processing' stamp: 'ar 11/7/2000 17:25'!processVertexBuffer: vb	"Clip the elements in the vertex buffer. Return true if all vertices are inside.	Return false if all vertices are outside. If partial clipping occurs, return nil."	| result |	result _ self preProcessVertexBuffer: vb.	result == nil ifFalse:[^result].	^self postProcessVertexBuffer: vb! !