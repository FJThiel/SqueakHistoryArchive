'From Squeak2.9alpha of 12 June 2000 [latest update: #2940] on 3 November 2000 at 7:21:06 pm'!"Change Set:		TwoForHackersDate:			3 November 2000Author:			Dan IngallsExtends the 'show...' command in the changeSorter so that it offers the currently active changeSet as the first choice.Adds a feature in the emergency evaluator that makes it easy to revert the last method change you made.  More importantly, it tells you that this feature is available."!!Object methodsFor: 'private' stamp: 'di 11/3/2000 18:42'!primitiveError: aString 	"This method is called when the error handling results in a recursion in 	calling on error: or halt or halt:."	| context |	Sensor eventQueue: nil. "Or else we won't get keyboard and possibly run out of memory"	(String		streamContents: 			[:s |			s nextPutAll: '***System error handling failed***'.			s cr; nextPutAll: aString.			context _ thisContext sender sender.			20 timesRepeat: [context == nil ifFalse: [s cr; print: (context _ context sender)]].			s cr; nextPutAll: '-------------------------------'.			s cr; nextPutAll: 'Type CR to enter an emergency evaluator.'.			s cr; nextPutAll: 'Type any other character to restart.'])		displayAt: 0 @ 0.	[Sensor keyboardPressed] whileFalse.	Sensor keyboard = Character cr ifTrue: [Transcripter emergencyEvaluator].	Smalltalk isMorphic		ifTrue: [Display reinstallMorphicWorldAfterError]		ifFalse: [ScheduledControllers searchForActiveController]! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'di 11/3/2000 17:07'!chooseCngSet	"Present the user with an alphabetical list of change set names, and let her choose one"	| index changeSetsSortedAlphabetically |	self okToChange ifFalse: [^ self].	ChangeSet instanceCount > AllChangeSets size ifTrue: [self class gatherChangeSets].	changeSetsSortedAlphabetically _ AllChangeSets asSortedCollection:		[:a :b | a name asLowercase withoutLeadingDigits < b name asLowercase withoutLeadingDigits].	index _ (PopUpMenu labels: Smalltalk changes name , ' (active)' , Character cr asString ,				(changeSetsSortedAlphabetically collect: [:each | each name]) asStringWithCr)			startUp.	index = 0 ifTrue: [^ self].	index = 1 ifTrue: [^ self showChangeSet: Smalltalk changes].	self showChangeSet: (changeSetsSortedAlphabetically at: index-1).! !!Transcripter methodsFor: 'command line' stamp: 'di 11/3/2000 18:52'!readEvalPrint	| line okToRevert |	okToRevert _ true.	[#('quit' 'exit' 'done' ) includes: (line _ self request: '>')]		whileFalse:		[line = 'revert'		ifTrue: [okToRevert			ifTrue: [Utilities revertLastMethodSubmission.					self cr; show: 'reverted: ' , Utilities mostRecentlySubmittedMessage.					okToRevert _ false]			ifFalse: [self cr; show: 'Only one level of revert currently supported']]		ifFalse: [self cr; show: ([Compiler evaluate: line] ifError: [:err :ex | err])]]! !!Transcripter class methodsFor: 'utilities' stamp: 'di 11/3/2000 18:47'!emergencyEvaluator	(Transcripter newInFrame: (0@0 corner: 320@200))		show: 'Type ''revert'' to revert your last method change.Type ''exit'' to exit the emergency evaluator.';		readEvalPrint! !