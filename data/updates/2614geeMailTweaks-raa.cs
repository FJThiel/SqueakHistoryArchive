'From Squeak2.9alpha of 17 July 2000 [latest update: #2613] on 13 September 2000 at 10:50:02 pm'!"Change Set:		geeMailTweaksDate:			13 September 2000Author:			Bob Arning- corrected TileMorph>>mouseDown: so that it would work in scrolled playfields- corrected positioning of repainted morphs in scrolled playfields"!!SketchMorph methodsFor: 'menu' stamp: 'RAA 9/13/2000 22:48'!editDrawingIn: aPasteUpMorph forBackground: forBackground	| w oldRotation bnds sketchEditor pal aPaintTab aWorld aPaintBox tfx |	self world assureNotPaintingElse: [^ self].	w _ aPasteUpMorph world.	w stopRunningAll; abandonAllHalos.	w displayWorld.	oldRotation _ rotationDegrees.	forBackground		ifTrue:			[bnds _ aPasteUpMorph boundsInWorld]		ifFalse:			[bnds _ (self boundsInWorld expandBy: (60 @ 60)) intersect: self world bounds.			bnds _ (aPasteUpMorph paintingBoundsAround: bnds center) merge: bnds].	sketchEditor _ SketchEditorMorph new.	forBackground ifTrue: [sketchEditor setProperty: #background toValue: true].	w addMorphFront: sketchEditor.	sketchEditor initializeFor: self inBounds: bnds pasteUpMorph: aPasteUpMorph.		"self rotationDegrees: 0.  inside the init"	self rotationDegrees: oldRotation.  "restore old rotation so that cancel leaves it right"	sketchEditor		afterNewPicDo: [:aForm :aRect |			self form: aForm.			tfx _ aPasteUpMorph transformFrom: aPasteUpMorph world.			self topRendererOrSelf position: (tfx globalPointToLocal: aRect origin).			self rotationStyle: sketchEditor rotationStyle.			self setupAngle: sketchEditor forwardDirection.			self rotationDegrees: sketchEditor forwardDirection.			self presenter drawingJustCompleted: self.			forBackground ifTrue: [self goBehind]]  "shouldn't be necessary"		ifNoBits: ["If no bits drawn.  Must keep old pic.  Can't have no picture"			aWorld _ self currentWorld.				"sometimes by now I'm no longer in a world myself, but we still need				 to get ahold of the world so that we can deal with the palette"			((pal _ aPasteUpMorph standardPalette) notNil and: [pal isInWorld])				ifTrue:					[(aPaintBox _ aWorld paintBox) ifNotNil: [aPaintBox delete].					pal viewMorph: self]				ifFalse:					[(aPaintTab _ aWorld paintingFlapTab)						ifNotNil:							[aPaintTab hideFlap]						ifNil:							[(aPaintBox _ aWorld paintBox) ifNotNil: [aPaintBox delete]]]]! !!TileMorph methodsFor: 'mouse handling' stamp: 'RAA 9/13/2000 22:43'!mouseDown: evt	| aPoint |	"Note: evt is in local coordinates, so bounds is better than boundsInWorld"	aPoint _ evt cursorPoint.	nArrowTicks _ 0.	upArrow ifNotNil:		[(upArrow bounds containsPoint: aPoint) ifTrue: [^ self].		(downArrow bounds containsPoint: aPoint) ifTrue: [^ self]].	suffixArrow ifNotNil:		[(suffixArrow bounds containsPoint: aPoint)			 ifTrue: [self showSuffixChoices.  ^ self]].	retractArrow ifNotNil:		[(retractArrow bounds containsPoint: aPoint)			 ifTrue: [self deleteLastTwoTiles.  ^ self]].	^ super mouseDown: evt! !