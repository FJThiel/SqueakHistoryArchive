'From Squeak2.9alpha of 5 August 2000 [latest update: #3303] on 25 January 2001 at 4:26:48 pm'!"Change Set:		anonymousGoof-swDate:			25 January 2001Author:			Scott WallaceProvides some methods inadvertently omitted from update named 'expungeAnonymous'"!!Player methodsFor: 'scripts-kernel' stamp: 'sw 1/22/2001 14:26'!acceptScript: aScriptEditorMorph for: aSelector	"Accept the code in the script editor as the code for the given selector"	self class		compileUnlogged: aScriptEditorMorph methodString		classified: 'scripts'		notifying: nil.	self class atSelector: aSelector putScriptEditor: aScriptEditorMorph! !!Player class methodsFor: 'initialization' stamp: 'sw 1/25/2001 16:23'!copyStateFrom: anotherClass	"Copy state from the other class"	| dupScript |	scripts _ IdentityDictionary new.	anotherClass userScriptsDo:		[:aScript | 			dupScript _ aScript shallowCopy.			dupScript initializeForPlayer: self flagshipInstance afterShallowCopyFrom: aScript.			scripts at: aScript selector put: dupScript].	slotInfo _ anotherClass slotInfo deepCopy.	self copyAddedStateFrom: anotherClass.  "The player-ref jump table"! !!Player class methodsFor: 'scripts' stamp: 'sw 1/25/2001 16:24'!namedTileScriptSelectors	"Answer a list of all the selectors of named tile scripts"	scripts ifNil: [^ OrderedCollection new].	^ scripts select: [:aScript | aScript selector ~~ nil] 		thenCollect: [:aScript | aScript selector]! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 1/25/2001 16:25'!dismiss	"Dismiss the scriptor, usually nondestructively"	owner ifNil: [^ self].	scriptName ifNil: [^ self delete].  "ad hoc fixup for bkwrd compat"	(playerScripted isExpendableScript: scriptName) ifTrue: [playerScripted removeScript: scriptName  fromWorld: self world].	self delete! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 1/25/2001 16:25'!renameScript	"Invoked at user menu request, rename the script."	| reply aPosition oldSelector dflt oldStatus oldOwner newSelector aUserScript methodNode isNewTiles |	oldSelector _ self scriptName.	aUserScript _ playerScripted class userScriptForPlayer: self selector: oldSelector.	oldStatus _ self scriptInstantiation status.	dflt _ self scriptTitle.	reply _   FillInTheBlank request: 'Script Name' initialAnswer: dflt. 	reply size == 0 ifTrue: [^ self].	newSelector _ ScriptingSystem acceptableScriptNameFrom: reply		forScriptCurrentlyNamed: oldSelector		asScriptNameIn: self playerScripted		world: self world.	isNewTiles _ aUserScript isTextuallyCoded and: [					(submorphs atPin: 2) class = TwoWayScrollPane].	isNewTiles ifTrue: ["allow colons"		(reply copyWithout: $:) = newSelector 			ifTrue: [newSelector _ reply asSymbol]			ifFalse: [self inform: 'name will be modified']].		self titleMorph borderColor: Color black.	scriptName _ newSelector.	"aUserScript isTextuallyCoded ifFalse: ["		playerScripted class atSelector: newSelector putScriptEditor: self  "]"  .	self scriptInstantiation status: oldStatus.	playerScripted class removeScriptNamed: oldSelector.	playerScripted actorState instantiatedUserScriptsDictionary removeKey: oldSelector.	submorphs first delete.  "the button row"	self addMorphFront: self buttonRowForEditor.  "up to date"	isNewTiles ifTrue: [			methodNode _ submorphs second scroller "transform" submorphs first.			methodNode rename: newSelector; accept.			"self refresh"].	self install.	aPosition _ self position.	oldOwner _ self topRendererOrSelf owner.	self delete.	playerScripted costume viewAfreshIn: oldOwner		showingScript: scriptName at: aPosition.! !