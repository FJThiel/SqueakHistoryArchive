'From Squeak3.1alpha of 28 February 2001 [latest update: #4086] on 26 May 2001 at 11:22:14 pm'!"Change Set:		copyFix-swDate:			26 May 2001Author:			Scott WallaceFixes the bug that made 'foos copy' continuously reevalute in a Viewer. The postscript fixes up existing vocabularies.Also fix the bug that had blocked the viewer menu for #copy from showing its traditional 'give me a copy now' item"!!MethodInterface methodsFor: 'initialization' stamp: 'sw 5/26/2001 23:03'!initializeFromEToySlotSpec: tuple	"tuple holds an old etoy slot-item spec, of the form found in #additionsToViewerCategories methods.   Initialize the receiver to hold the same information"	| setter |	selector _ tuple seventh.	elementWording _ tuple second.	self documentation: tuple third.	receiverType _ #player.	resultSpecification _ ResultSpecification new.	resultSpecification resultType: tuple fourth.	(#(getNewClone  "etc.") includes: selector)		ifTrue:			[self setNotToRefresh]  "actually should already be nil"		ifFalse:			[self setToRefetch].	((tuple fifth == #readWrite) and: [((tuple size >= 9) and: [(setter _ tuple at: 9) ~~ #unused])]) ifTrue:		[resultSpecification companionSetterSelector: setter].		"An example of an old slot-item spec:(slot numericValue 'A number representing the current position of the knob.' number readWrite player getNumericValue player setNumericValue:)	1	#slot	2	wording	3	balloon help	4	type	5	#readOnly or #readWrite	6	#player (not used -- ignore)	7	getter selector	8	#player (not used -- ignore)	9	setter selector"	! !!MethodInterface methodsFor: 'initialization' stamp: 'sw 5/26/2001 22:59'!setNotToRefresh	"Set the receiver up not to do periodic refresh."	resultSpecification ifNotNil: [resultSpecification refetchFrequency: nil]! !!Player methodsFor: 'scripts-kernel' stamp: 'sw 5/26/2001 23:19'!slotInfoButtonHitFor: aGetterSymbol inViewer: aViewer	"The user made a gesture asking for slot menu for the given getter symbol in a viewer; put up the menu."	| aMenu slotSym aType |	slotSym _ Utilities inherentSelectorForGetter: aGetterSymbol.	aType _ self typeForSlotWithGetter: aGetterSymbol asSymbol.	aMenu _ MenuMorph new defaultTarget: self.	(#(colorSees copy newClone getNewClone) includes: slotSym) ifFalse:		[aMenu add: 'simple watcher' selector: #tearOffWatcherFor: argument: aGetterSymbol].	(#(copy getNewClone newClone) includes: slotSym) ifTrue:		[aMenu add: 'give me a copy now' action: #handTheUserACopy].	aType == #number "later others" ifTrue:		[aMenu add: 'detailed watcher' selector: #tearOffFancyWatcherFor: argument: aGetterSymbol].	(self slotInfo includesKey: slotSym)		ifTrue:  "User slot"			[aMenu add: 'change data type' selector: #chooseSlotTypeFor: argument: slotSym.			aType == #number ifTrue:				[aMenu add: 'decimal places...' selector: #setPrecisionFor: argument: slotSym].			aMenu add: 'remove "', aGetterSymbol, '"' selector: #removeSlotNamed: argument: slotSym.			aMenu add: 'rename  "', aGetterSymbol, '"' selector: #renameSlot: argument: slotSym].	aType == #player ifTrue:		[aMenu add: 'tiles to get...' selector: #offerGetterTiles: argument: slotSym].	aMenu items size == 0 ifTrue:		[aMenu add: 'ok' action: #yourself].	aMenu addTitle: (aGetterSymbol asString, ' (', aType, ')').	aMenu popUpForHand: aViewer primaryHand in: aViewer world! !"Postscript:"MethodInterface allInstancesDo:	[:int | (int selector == #getNewClone) ifTrue:		[int setNotToRefresh]].Vocabulary initialize.!