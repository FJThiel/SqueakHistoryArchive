'From Squeak2.8alpha of 12 January 2000 [latest update: #1900] on 8 March 2000 at 9:37:27 am'!"Change Set:		DictKeysSortedSafelyDate:			8 March 2000Author:			Dan IngallsFixes a recent bug in Dictionary printOn:.Defines Dictionary>>keysSortedSafely, which is called by both	DictionaryInspector>>calculateKeyArray and	Dctionary>>printOn:.Also allows final period in brace expressions."!!Dictionary methodsFor: 'accessing' stamp: 'di 3/8/2000 09:12'!keysSortedSafely	"Answer a SortedCollection containing the receiver's keys."	| sortedKeys |	sortedKeys _ SortedCollection new: self size.	sortedKeys sortBlock:		[ :x :y |  "Should really be use <obj, string, num> compareSafely..."		(((x isKindOf: String) & (y isKindOf: String))		or: [(x isKindOf: Number) & (y isKindOf: Number)])			ifTrue: [ x < y]			ifFalse: [ (x class = y class)				ifTrue: [ x printString < y printString]				ifFalse: [ x class name < y class name ] ] ].	self keysDo:		[ :aKey | sortedKeys add: aKey. ].	^ sortedKeys! !!Dictionary methodsFor: 'printing' stamp: 'di 3/8/2000 09:14'!printOn: aStream	aStream nextPutAll: self class name, ' ('.	self keysSortedSafely do:		[:key | aStream print: key; nextPutAll: '->'; print: (self at: key); space].	aStream nextPut: $)! !!DictionaryInspector methodsFor: 'selecting' stamp: 'di 3/8/2000 09:14'!calculateKeyArray	"Recalculate the KeyArray from the object being inspected"	keyArray _ object keysSortedSafely asArray.	selectionIndex _ 0.! !!Parser methodsFor: 'expression types' stamp: 'di 3/8/2000 09:36'!braceExpression	" { elements } => BraceNode."	| elements locations loc more |	elements _ OrderedCollection new.	locations _ OrderedCollection new.	self advance.	more _ hereType ~~ #rightBrace.	[more]		whileTrue: 			[loc _ hereMark + requestorOffset.			self expression				ifTrue: 					[elements addLast: parseNode.					locations addLast: loc]				ifFalse:					[^self expected: 'Variable or expression'].			(self match: #period)				ifTrue: [more _ hereType ~~ #rightBrace]				ifFalse: [more _ false]].	parseNode _ BraceNode new elements: elements sourceLocations: locations.	(self match: #rightBrace)		ifFalse: [^self expected: 'Period or right brace'].	^true! !