'From Squeak2.9alpha of 17 July 2000 [latest update: #3286] on 19 January 2001 at 3:11:42 pm'!"Change Set:		addToggleDate:			18 January 2001Author:			Bob ArningA small change to defeat the MVC compatibility code that made adding a stay-up item to a browser menu difficult."!!ChangeList methodsFor: 'menu actions' stamp: 'RAA 1/18/2001 18:23'!changeListMenu: aMenu	"Fill aMenu up so that it comprises the primary changelist-browser menu"	Smalltalk isMorphic ifTrue: [aMenu addStayUpItemSpecial].^ aMenu labels:'fileIn selectionsfileOut selections...compare to currenttoggle diffingselect conflicts with any changesetselect conflicts with current changesetselect conflicts with...select unchanged methodsselect methods for this classselect alldeselect allbrowse current versions of selectionsremove doItsremove older versionsremove selected itemsremove unselected items'	lines: #(2 4 6 9 11 12)	selections: #(fileInSelections fileOutSelectionscompareToCurrentVersion toggleDiffing selectAllConflicts  selectConflicts selectConflictsWith selectUnchangedMethods selectMethodsForThisClass  selectAll  deselectAll browseCurrentVersionsOfSelectionsremoveDoIts removeOlderMethodVersions removeSelections removeNonSelections)"select such that...   selectSuchThat"! !!MenuItemMorph methodsFor: 'accessing' stamp: 'RAA 1/18/2001 18:20'!allWordingsNotInSubMenu: verbotenSubmenuContents	"Answer a collection of the wordings of all items and subitems, but omit the stay-up item, and also any items in a submenu whose tag is given by verbotenSubmenuContents"	self isStayUpItem ifTrue:[^#()].	subMenu ifNotNil:[^subMenu allWordingsNotInSubMenu: verbotenSubmenuContents].	self contents asString = verbotenSubmenuContents ifTrue:[^#()].	^Array with: self contents asString! !!MenuItemMorph methodsFor: 'accessing' stamp: 'RAA 1/18/2001 18:24'!isStayUpItem	^selector == #toggleStayUp: or: [selector == #toggleStayUpIgnore:evt:]! !!MenuItemMorph methodsFor: 'events' stamp: 'RAA 1/18/2001 18:21'!invokeWithEvent: evt	"Perform the action associated with the given menu item."	| selArgCount w |	self isEnabled ifFalse: [^ self].	target class == HandMorph ifTrue: [(self notObsolete) ifFalse: [^ self]].	owner ifNotNil:[self isStayUpItem ifFalse:[		self flag: #workAround. "The tile system invokes menus straightforwardly so the menu might not be in the world."		(w _ self world) ifNotNil:[			owner deleteIfPopUp: evt.			"Repair damage before invoking the action for better feedback"			w displayWorldSafely]]].	selector ifNil:[^self].	Cursor normal showWhile: [  "show cursor in case item opens a new MVC window"		(selArgCount _ selector numArgs) = 0			ifTrue:				[target perform: selector]			ifFalse:				[selArgCount = arguments size					ifTrue: [target perform: selector withArguments: arguments]					ifFalse: [target perform: selector withArguments: (arguments copyWith: evt)]]].! !!MenuMorph methodsFor: 'construction' stamp: 'RAA 1/18/2001 18:27'!addStayUpItemSpecial	"Append a menu item that can be used to toggle this menu's persistent."	"This variant is resistant to the MVC compatibility in #setInvokingView:"	self add: 'keep this menu up'		target: self		selector: #toggleStayUpIgnore:evt:		argumentList: #(1).	self addLine! !!MenuMorph methodsFor: 'menu' stamp: 'RAA 1/18/2001 18:21'!toggleStayUp: evt	"Toggle my 'stayUp' flag and adjust the menu item to reflect its new state."	self items do: [:item |		item isStayUpItem ifTrue:			[self stayUp: stayUp not.				 stayUp				ifTrue: [item contents: 'dismiss this menu']				ifFalse: [item contents: 'keep this menu up']]].	evt hand releaseMouseFocus: self.	stayUp ifFalse: [self topRendererOrSelf delete].! !!MenuMorph methodsFor: 'menu' stamp: 'RAA 1/19/2001 15:10'!toggleStayUpIgnore: ignored evt: evt	"This variant is resistant to the MVC compatibility in #setInvokingView:"	self toggleStayUp: evt.! !