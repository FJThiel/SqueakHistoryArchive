'From Squeak 2.3 beta of Nov 25, 1998 on 16 December 1998 at 1:30:38 pm'!"Change Set:		morphicRecogDate:			16 December 1998Author:			Scott WallaceMakes Alan's character recognizer work in Morphic"!Object subclass: #CharRecog	instanceVariableNames: 'mp p sts pts bmin bmax op cPat in dirs ftrs prevFeatures textMorph '	classVariableNames: 'CharacterDictionary '	poolDictionaries: 'TextConstants '	category: 'System-Support'!!CharRecog commentStamp: 'sw 12/16/1998 13:29' prior: 0!Alan Kay's "one-page" character recognizer.  Currently hooked up to text panes and to text morphs, such that you can get it started by hitting cmd-r in such text area that currently has focus.  To reinitialize the recognition dictionary, evaluate	CharRecog reinitializeCharacterDictionary !!CharRecog reorganize!('recognizer' extractFeatures fourDirsFrom:to: recognizeAndDispatch:ifUnrecognized:until: recognizeAndDispatch:until: regionOf: stringForUnrecognizedFeatures:)('morphic dockup' textMorph:)('historical & disused' directionFrom:to: learnPrev recogPar recognize recognizeAndPutInTranscript)!!CharRecog methodsFor: 'recognizer' stamp: 'sw 12/16/1998 13:18'!stringForUnrecognizedFeatures: features	"Prompt the user for what string the current features represent, and return the result.  9/18/96 sw"	| result |	result _ FillInTheBlank request:('Not recognized. type char, or "tab", "cr" or "bs",or hit return to ignore ', features).	textMorph ifNotNil:		[textMorph world doOneCycle "take down the FillInTheBlank morph"].	^ (result = '~' | result = '')		ifTrue:			['']		ifFalse:			[CharacterDictionary at: features put: result. result]! !!CharRecog methodsFor: 'morphic dockup' stamp: 'sw 12/16/1998 13:17'!textMorph: aTextMorph	textMorph _ aTextMorph! !!ParagraphEditor methodsFor: 'typing support' stamp: 'sw 12/16/1998 13:14'!simulatedKeystroke: char	"Accept char as if it were struck on the keyboard.  This version does not yet deal with command keys, and achieves update in the receiver's typically inactive window via the sledge-hammer of uncache-bits."	self deselect.	self openTypeIn.	startBlock = stopBlock ifFalse: [UndoSelection _ self selection].	self zapSelectionWith:		(Text string: char asString emphasis: emphasisHere).	self userHasEdited.	startBlock _ stopBlock copy.	self selectAndScroll.	self updateMarker.	view ifNotNil:		[view topView uncacheBits		"in mvc, this makes sure the recognized character shows up in the pane right now; in morphic, a different mechanism is used for the same effect -- see TextMorphEditor method #recognizeCharactersWhileMouseIn:"]! !!TextMorph methodsFor: 'containment' stamp: 'sw 12/16/1998 09:09'!recognizerArena	"Answer the rectangular area, in world coordinates, that the character recognizer should regard as its tablet"	| outer |	^ (outer _ self ownerThatIsA: PluggableTextMorph)		ifNotNil:			[outer boundsInWorld]		ifNil:			[self boundsInWorld]! !!TextMorphEditor methodsFor: 'events' stamp: 'sw 12/16/1998 08:55'!recognizeCharacters	"Recognize hand-written characters and put them into the receiving pane.  Invokes Alan's character recognizer."	self recognizeCharactersWhileMouseIn: morph recognizerArena! !!TextMorphEditor methodsFor: 'events' stamp: 'sw 12/16/1998 13:18'!recognizeCharactersWhileMouseIn: box	"Recognize hand-written characters and put them into the receiving TextMorph.  Invokes Alan's character recognizer.  box is in world coordinates."	| aRecognizer |	Cursor marker showWhile:		[aRecognizer _ CharRecog new textMorph: morph.		aRecognizer recognizeAndDispatch:			[:char | morph handleInteraction:				[char == BS					ifTrue:						[self simulatedBackspace]					ifFalse:						[self simulatedKeystroke: char]] fromEvent: nil.			morph updateFromParagraph.			morph world doOneCycle]		until:			[(box containsPoint: Sensor cursorPoint) not]]! !