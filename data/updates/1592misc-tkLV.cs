'From Squeak2.6 of 11 October 1999 [latest update: #1581] on 31 October 1999 at 3:35:56 pm'!"Change Set:		misc-tkLVDate:			31 October 1999Author:			Ted Kaehler[ ] In findClass in the Browser, if you put a period after the name, it now finds just that name exactly.  When you search for 'morph', you get more than one menu full of names.  If you now search for 'morph.', you go right to class Morph.  [ ] Previously, if you edited text in the code pane, and you pressed the Instance/Class/Comment buttons, it would discard your changes without asking.  Now it asks.   The mechanism for this was there already (askBeforeChanging), but it was not hooked up.[ ] In the InterpreterSimulator, you could not read any file system directory in which the file path contained a single-quote.  A method in the simulator was de-String-ifying the path by simply removing the beginning and ending single-quotes.  This fixes it."!!Browser methodsFor: 'system category functions' stamp: 'tk 10/30/1999 08:22'!findClass	"Search for a class by name.  Modified so that if only 1 class matches the user-supplied string then the pop-up menu is bypassed"	| pattern foundClass classNames index |	self okToChange ifFalse: [^ self classNotFound].	pattern _ FillInTheBlank request: 'Class name or fragment?'.	pattern isEmpty ifTrue: [^ self classNotFound].	classNames _ pattern last = $. 		ifTrue: [Smalltalk classNames select: [:nm | 					nm asLowercase = pattern allButLast asLowercase]]		ifFalse: [Smalltalk classNames asArray select: 					[:n | n includesSubstring: pattern caseSensitive: false]].	classNames isEmpty ifTrue: [^ self classNotFound].	index _ classNames size = 1		ifTrue:	[1]		ifFalse:	[(PopUpMenu labelArray: classNames lines: #()) startUp].	index = 0 ifTrue: [^ self classNotFound].	foundClass _ Smalltalk at: (classNames at: index). 	self systemCategoryListIndex: (self systemCategoryList indexOf: foundClass category).	self classListIndex: (self classList indexOf: foundClass name). ! !!InterpreterSimulator methodsFor: 'file primitives' stamp: 'tk 10/30/1999 15:33'!primitiveDirectoryLookup	| index pathName array result |	index _ self stackIntegerValue: 0.	pathName _ (self stringOf: (self stackValue: 1)).		successFlag ifFalse: [		^self primitiveFail.	].	array _ FileDirectory default primLookupEntryIn: pathName index: index.	array == nil ifTrue: [		self pop: 3.		self push: nilObj.		^array.	].	array == #badDirectoryPath ifTrue: [		^self primitiveFail.	].	result _ self makeDirEntryName: (array at: 1) size: (array at: 1) size				createDate: (array at: 2) modDate: (array at: 3)				isDir: (array at: 4)  fileSize: (array at: 5).	self pop: 3.	self push: result.! !!PluggableButtonMorph methodsFor: 'private' stamp: 'tk 10/30/1999 08:31'!performAction	"Inform the model that this button has been pressed. Sent by the controller when this button is pressed."	askBeforeChanging ifTrue: [model okToChange ifFalse: [^ self]].	actionSelector ifNotNil: [model perform: actionSelector].! !