'From Squeak 2.5 of August 6, 1999 [latest update: #1534] on 12 October 1999 at 12:43:23 pm'!"Change Set:		sketchfix-bfDate:			11 October 1999Author:			Bert Freudenberg* Fixes a bug in SketchMorph>>generateRotatedForm that prevented sharing originalForm and rotatedForm (saves quite some memory). This also makes FatBitsPaint work again.* Uses FatBitsPaint in Form>>bitEdit to make it work in Morphic"!!Form methodsFor: 'editing' stamp: 'bf 10/11/1999 15:38'!bitEdit	"Create and schedule a view located in an area designated by the user 	that contains a view of the receiver magnified by 8@8 that can be 	modified using the Bit Editor. It also contains a view of the original 	form."	Smalltalk isMorphic		ifFalse: [BitEditor openOnForm: self]		ifTrue: [self currentHand attachMorph: (FatBitsPaint new			editForm: self;			magnification: 8;			brushColor: Color black;			penSize: 1;			yourself)].	"Note that using direct messages to BitEditor, fixed locations and scales can be created.	That is, also try:		BitEditor openOnForm: self at: <some point>		BitEditor openOnForm: self at: <some point> scale: <some point>"! !!SketchMorph methodsFor: 'drawing' stamp: 'bf 10/11/1999 15:06'!generateRotatedForm	"Compute my rotatedForm and offsetWhenRotated."	| adjustedAngle smoothPix pair |	(rotationStyle = #normal)		ifTrue: [adjustedAngle _ 0.0 - self setupAngle]			"let TransformationMorph do directional image turn, we subtract green arrow angle"		ifFalse: [adjustedAngle _ 0.0].	"leftRight, upDown, none"	((adjustedAngle = 0.0) and: [1.0@1.0 = scalePoint])		ifTrue: [			rotatedForm _ originalForm.			offsetWhenRotated _ 0@0]		ifFalse: ["do the actual rotation!!"			((scalePoint x < 1.0) or: [scalePoint y < 1.0])				ifTrue: [smoothPix _ 2]				ifFalse: [smoothPix _ 1].			pair _ WarpBlt				rotate: originalForm				degrees: adjustedAngle negated				center: rotationCenter				scaleBy: self scalePoint				smoothing: smoothPix.			rotatedForm _ pair first.			offsetWhenRotated _ pair last].	((rotationStyle = #leftRight) and: [rotationDegrees < 0.0]) ifTrue: [		"headed left; use flipped"		rotatedForm _ rotatedForm flipBy: #horizontal centerAt: 0@0.		offsetWhenRotated _ offsetWhenRotated + 			(((2 * (rotationCenter x - (originalForm width // 2)))@0) * scalePoint).		^ self].	((rotationStyle = #upDown) and: [(rotationDegrees > 90.0) or: 		[rotationDegrees < -90.0]]) ifTrue: [			"headed down; use flipped"			rotatedForm _ rotatedForm flipBy: #vertical centerAt: 0@0.			offsetWhenRotated _ offsetWhenRotated + 				((0@(2 * (rotationCenter y - (originalForm height // 2)))) * scalePoint).			^ self].! !