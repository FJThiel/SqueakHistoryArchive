'From Squeak2.8alpha of 12 January 2000 [latest update: #1862] on 17 February 2000 at 8:34:12 pm'!"Change Set:		FastSketchInit-diDate:			17 February 2000Author:			Dan IngallsDramatically speeds up the creation of SketchMorphs by eliding default intializaiton when the form to be used can be supplied upon creation.	Now 'SketchMorph withForm: zz' is MUCH faster	than 'SketchMorph new form: zz'."!!FileList methodsFor: 'file list menu' stamp: 'di 2/17/2000 20:28'!openImageInWindow	"Handle four file formats: GIF, JPG, Form stoteOn: (run coded), and BMP.	Fail if file format is not recognized."	| image |	image _ Form fromFileNamed: self fullName.	World		ifNil: [FormView open: image named: fileName]		ifNotNil: [World addMorph: (SketchMorph withForm: image)].! !!HTTPSocket class methodsFor: 'get the page' stamp: 'di 2/17/2000 20:29'!httpShowGif: url	"Display the picture retrieved from the given URL, which is assumed to be a GIF file. See examples in httpGif:."	| nameTokens image |	nameTokens _ url findTokens: '/'.	image _ self httpGif: url.	World ifNil: [FormView open: image named: nameTokens last]		ifNotNil: [World addMorph: (SketchMorph withForm: image)]! !!HTTPSocket class methodsFor: 'get the page' stamp: 'di 2/17/2000 20:29'!httpShowJpeg: url	"Display the picture retrieved from the given URL, which is assumed to be a JPEG file. See examples in httpGif:."	| nameTokens image |	nameTokens _ url findTokens: '/'.	image _ self httpJpeg: url.	World ifNil: [FormView open: image named: nameTokens last]		ifNotNil: [World addMorph: (SketchMorph withForm: image)].! !!Morph methodsFor: 'fileIn/out' stamp: 'di 2/17/2000 20:31'!updateFromResource	| pathName newMorph f |	(pathName _ self valueOfProperty: #resourceFilePath) ifNil: [^ self].	(pathName asLowercase endsWith: '.morph')		ifTrue:			[newMorph _ (FileStream oldFileNamed: pathName) fileInObjectAndCode.			(newMorph isKindOf: Morph) ifFalse: [^ self error: 'Resource not a single morph']]		ifFalse:			[f _ Form fromFileNamed: pathName.			f ifNil: [^ self error: 'unrecognized image file format'].			newMorph _ SketchMorph withForm: f].	newMorph setProperty: #resourceFilePath toValue: pathName.	self owner replaceSubmorph: self by: newMorph! !!BookMorph methodsFor: 'menu' stamp: 'di 2/17/2000 20:28'!loadImagesIntoBook	"PowerPoint stores GIF presentations as individual slides named Slide1, Slide2, etc.	Load these into the book.  mjg 9/99"	| directory filenumber form newpage |	directory _ ((StandardFileMenu oldFileFrom: FileDirectory default) ifNil: [^ nil]) directory.	directory isNil ifTrue: [^ nil].	"Start loading 'em up!!"	filenumber _ 1.	[directory fileExists: 'Slide',(filenumber asString)] whileTrue:		[form _ Form fromFileNamed: (directory fullNameFor: 'Slide', (filenumber asString)).		newpage _ PasteUpMorph new extent: (form extent).		newpage addMorph: (SketchMorph withForm: form).		self pages addLast: newpage.		filenumber _ filenumber + 1.].	"After adding all, delete the first page."	self goToPage: 1.	self deletePageBasic! !!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:29'!repaintEntry	"Let the user enter into painting mode to repaint the item and save it back."	| aWorld bnds sketchEditor aPaintBox formToEdit |		(aWorld _ self world) assureNotPaintingElse: [^ self].	aWorld stopRunningAll; abandonAllHalos.	aWorld displayWorld.	formToEdit _ formChoices at: currentIndex.	bnds _ (submorphs second boundsInWorld origin extent: formToEdit extent) intersect: aWorld bounds.	bnds _ (aWorld paintingBoundsAround: bnds center) merge: bnds.	sketchEditor _ SketchEditorMorph new.	aWorld addMorphFront: sketchEditor.	sketchEditor initializeFor: ((SketchMorph withForm: formToEdit) position: submorphs second positionInWorld)  inBounds: bnds pasteUpMorph: aWorld paintBoxPosition: bnds topRight.	sketchEditor		afterNewPicDo: [:aForm :aRect |			formChoices at: currentIndex put: aForm.			baseDictionary at: (entryNames at: currentIndex) put: aForm.			self updateThumbnail.			(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]] 		ifNoBits:			[(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]].	! !!IconicButton methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:30'!labelGraphic: aForm	| oldLabel graphicalMorph |	(oldLabel _ self findA: SketchMorph)		ifNotNil: [oldLabel delete].	graphicalMorph _ SketchMorph withForm: aForm.	self extent: graphicalMorph extent + (borderWidth + 6).	graphicalMorph position: self center - (graphicalMorph extent // 2).	self addMorph: graphicalMorph.	graphicalMorph lock! !!InterimSoundMorph methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:30'!addGraphic	graphic _ SketchMorph withForm: self speakerGraphic.	graphic position: bounds center - (graphic extent // 2).	self addMorph: graphic.! !!PasteUpMorph methodsFor: 'world state' stamp: 'di 2/17/2000 20:31'!installForm: aForm	"Accept a Form from the outside, create a SketchMorph, and put it on the Hand."	| f |	f _ SketchMorph withForm: aForm.	self firstHand attachMorph: f.! !!ReferenceMorph methodsFor: 'menu' stamp: 'di 2/17/2000 20:32'!graphicalMorphForTab	| formToUse |	formToUse _ self valueOfProperty: #priorGraphic ifAbsent: [ScriptingSystem formAtKey: 'squeakyMouse'].	^ SketchMorph withForm: formToUse! !!SketchEditorMorph methodsFor: 'start & finish' stamp: 'di 2/17/2000 20:32'!addRotationScaleHandles	"Rotation and scaling handles"	| fwdButton pt toggle |	rotationButton _ SketchMorph withForm: (palette rotationTabForm).	rotationButton position: bounds topCenter - (6@0).	rotationButton on: #mouseDown send: #rotateScalePrep to: self.	rotationButton on: #mouseStillDown send: #rotateBy: to: self.	rotationButton on: #mouseUp send: #rotateDone: to: self.	rotationButton on: #mouseEnter send: #mouseLeave: to: self.	"Put cursor back"	rotationButton on: #mouseLeave send: #mouseEnter: to: self.	self addMorph: rotationButton.	rotationButton setBalloonText: 'Drag me sideways to\rotate yourpicture.' withCRs.	scaleButton _ SketchMorph withForm: (palette scaleTabForm).	scaleButton position: bounds rightCenter - ((scaleButton width)@6).	scaleButton on: #mouseDown send: #rotateScalePrep to: self.	scaleButton on: #mouseStillDown send: #scaleBy: to: self.	scaleButton on: #mouseEnter send: #mouseLeave: to: self.	"Put cursor back"	scaleButton on: #mouseLeave send: #mouseEnter: to: self.	self addMorph: scaleButton.	scaleButton setBalloonText: 'Drag me up and down to change\the sizeof your picture.' withCRs.	fwdButton _ PolygonMorph new.	pt _ "rotationButton topRight" bounds topCenter.	fwdButton borderWidth: 2; makeOpen; makeBackArrow; borderColor:(Color r: 0 g: 0.8 b: 0).	fwdButton removeHandles; setVertices: (Array with: pt+(0@7) with:pt+(0@22)).	fwdButton on: #mouseStillDown send: #forward:direction: to: self.	fwdButton on: #mouseEnter send: #mouseLeave: to: self.	"Put cursorback"	fwdButton on: #mouseLeave send: #mouseEnter: to: self.	self setProperty: #fwdButton toValue: fwdButton.	self addMorph: fwdButton.	fwdButton setBalloonText: 'Drag me around to point\in the directionI go forward.' withCRs.	toggle _ EllipseMorph		newBounds: (Rectangle center: fwdButton vertices last +(-4@4) extent: 8@8)		color: Color gray.	toggle on: #mouseUp send: #toggleDirType:in: to: self.	toggle on: #mouseEnter send: #mouseLeave: to: self.	"Put cursorback"	toggle on: #mouseLeave send: #mouseEnter: to: self.	self setProperty: #fwdToggle toValue: toggle.	fwdButton addMorph: toggle.	toggle setBalloonText: 'When your object turns,\how should itspicture change?\It can rotate, face left or right,\face up or down, or notchange.' withCRs.	self setProperty: #rotationStyle toValue: hostView rotationStyle.	self forward: hostView setupAngle direction: fwdButton.	"Set to its current value"! !!SketchEditorMorph methodsFor: 'start & finish' stamp: 'di 2/17/2000 20:32'!dimTheWindow	"Do not call twice!! Installs a morph with an 'onion-skinned' copy of the pixels behind me."	| dim screen whiteWord |	"create an 'onion-skinned' version of the stuff on the screen"	owner outermostMorphThat: [:morph | morph resumeAfterDrawError. false].		"Clear flags that draw orange rect if was ever an error"	dim _ owner imageFormForRectangle: self bounds.	screen _ Color pixelScreenForDepth: dim depth.	dim depth > 1 ifTrue: [		whiteWord _ Color white pixelWordForDepth: dim depth.		screen _ screen collect: [:screenWord | screenWord bitAnd: whiteWord]].	dim fill: dim boundingBox		rule: (dim depth = 1 ifTrue: [Form and] ifFalse: [Form paint])		fillColor: screen.	dimForm _ SketchMorph withForm: dim.	dimForm position: self position.	owner		privateAddMorph: dimForm		atIndex: (owner submorphs indexOf: self) + 1.! !!SketchMorph methodsFor: 'initialization' stamp: 'di 2/17/2000 20:14'!initialize	^ self initializeWith: (ScriptingSystem formAtKey: 'Painting') deepCopy.! !!SketchMorph methodsFor: 'initialization' stamp: 'di 2/17/2000 20:13'!initializeWith: aForm	super initialize.	originalForm _ aForm.	rotationCenter _ 7@5.		"relative to the top-left corner of the Form"	rotationDegrees _ 0.0.		"clockwise angle of rotation"	rotationStyle _ #normal.		"styles: #normal, #leftRight, #upDown, or #none"	scalePoint _ 1.0@1.0.	framesToDwell _ 1.	rotatedForm _ originalForm.	"cached rotation of originalForm"	offsetWhenRotated _ 0@0.	"offset for rotated form"	self extent: originalForm extent.! !!SketchMorph class methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:21'!withForm: aForm	"Note: 'SketchMorph withForm: zz' is MUCH faster	than 'SketchMorph new form: zz'."	^ self basicNew initializeWith: aForm! !!SpeakerMorph methodsFor: 'initialization' stamp: 'di 2/17/2000 20:33'!addGraphic	| graphic |	graphic _ SketchMorph withForm: self speakerGraphic.	graphic position: bounds center - (graphic extent // 2).	self addMorph: graphic.! !!TabSorterMorph methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:33'!substituteForMorph: aMorph beingDroppedOn: aPage	| aTab token |	(aMorph isKindOf: PaintBoxMorph) ifTrue:		[aTab _ ReferenceMorph new morphToInstall: aMorph.		aTab removeAllMorphs.		aTab addMorph: (SketchMorph withForm: (ScriptingSystem formAtKey: 'PaintTab')).		aTab fitContents.		token _ SorterTokenMorph new forMorph: aTab.		^ token].	(aMorph isKindOf: SorterTokenMorph) ifTrue: [^ nil].  "Let it stand"	^ SorterTokenMorph new forMorph: (ReferenceMorph new morphToInstall: aMorph)! !!TabbedPalette methodsFor: 'palette menu' stamp: 'di 2/17/2000 20:33'!addMenuTab	| aMenu aTab aGraphic sk |	aMenu _ MenuMorph new defaultTarget: self.	aMenu stayUp: true.	aMenu add:  'clear' action: #showNoPalette.	aMenu add:  'sort tabs' action: #sortTabs:.	aMenu add:  'choose new colors for tabs' action: #recolorTabs.	aMenu setProperty: #paletteMenu toValue: true.	aMenu add:  'make me the Standard palette' action: #becomeStandardPalette.	aTab _ self addTabForBook: aMenu  withBalloonText: 'a menu of palette-related controls'.	aTab highlightColor: tabsMorph highlightColor; regularColor: tabsMorph regularColor.	tabsMorph laySubpartsOutInOneRow; layoutChanged.	aGraphic _ ScriptingSystem formAtKey: 'Menu'.	aGraphic ifNotNil:		[aTab removeAllMorphs.		aTab addMorph: (sk _ SketchMorph withForm: aGraphic).		sk position: aTab position.		sk lock.		aTab fitContents].	self layoutChanged! !!TabbedPalette class methodsFor: 'as yet unclassified' stamp: 'di 2/17/2000 20:33'!authoringPrototype	| aTabbedPalette aBook aTab |	aTabbedPalette _ self new markAsPartsDonor.	aTabbedPalette pageSize: 200 @ 300.	aTabbedPalette tabsMorph highlightColor: Color red regularColor: Color blue.	aTabbedPalette addMenuTab.	aBook _ BookMorph new setNameTo: 'one'; pageSize: aTabbedPalette pageSize.	aBook color: Color blue muchLighter.	aBook removeEverything; insertPage; showPageControls.	aBook currentPage addMorphBack: (SketchMorph withForm: ScriptingSystem squeakyMouseForm).	aTab _ aTabbedPalette addTabForBook: aBook.	aBook _ BookMorph new setNameTo: 'two'; pageSize: aTabbedPalette pageSize.	aBook color: Color red muchLighter.	aBook removeEverything; insertPage; showPageControls.	aBook currentPage addMorphBack: CurveMorph authoringPrototype.	aTabbedPalette addTabForBook: aBook.	aTabbedPalette selectTab: aTab.	aTabbedPalette beSticky.	^ aTabbedPalette! !