'From Squeak3.1alpha of 28 February 2001 [latest update: #4337] on 13 September 2001 at 10:11:17 pm'!"Change Set:		miscMinor-swDate:			13 September 2001Author:			Scott WallaceFixes problems that had crept into the 'world menu help' window concerning items in the windows & flaps menus.Fixes a very-long-standing bug (consequence of a hasty find-and-replace all, evidently) in WordNet class languagePrefs"!!TheWorldMenu methodsFor: 'commands' stamp: 'sw 9/5/2001 12:00'!worldMenuHelp	| aList aMenu cnts explanation |	"self currentWorld primaryHand worldMenuHelp"	aList _ OrderedCollection new.	#(helpMenu changesMenu openMenu debugMenu projectMenu scriptingMenu windowsMenu playfieldMenu appearanceMenu flapsMenu) 		with:	#('help' 'changes' 'open' 'debug' 'projects' 'authoring tools' 'windows' 'playfield options' 'appearance' 'flaps') do:		[:sel :title | aMenu _ self perform: sel.			aMenu items do:				[:it | (((cnts _ it contents) = 'keep this menu up') or: [cnts size = 0])					ifFalse: [aList add: (cnts, ' - ', title)]]].	aList _ aList asSortedCollection: [:a :b | a asLowercase < b asLowercase].	explanation _ String streamContents: [:aStream | aList do:		[:anItem | aStream nextPutAll: anItem; cr]].	(StringHolder new contents: explanation)		openLabel: 'Where in the world menu is...'! !!WordNet class methodsFor: 'miscellaneous' stamp: 'sw 9/5/2001 11:04'!languagePrefs	"Set preference of which natural language is primary. Look up definitions in it, and correct speaLanguageing in it.  Also, let user set languages to translate from and to."	| ch aLanguage |	self canTranslateFrom.		"sets defaults"	ch _ PopUpMenu withCaption: 'Choose the natural language to use for:'			chooseFrom: 'word definition and spelling verification (', 					(Preferences parameterAt: #myLanguage default: [#English]) asString ,')...\',				'language to translate FROM   (now ',					(Preferences parameterAt: #languageTranslateFrom default: [#English]) asString ,')...\',				'language to translate TO   (now ',					(Preferences parameterAt: #languageTranslateTo default: [#German]) asString ,')...\'.	ch = 1 ifTrue: [		aLanguage _ PopUpMenu withCaption: 'The language for word definitions and speaLanguageing verification:'			chooseFrom: Languages.		aLanguage > 0 ifTrue:			[^ Preferences setParameter: #myLanguage to: (Languages at: aLanguage) asSymbol]].	ch = 2 ifTrue:		[aLanguage _ PopUpMenu withCaption: 'The language to translate from:'			chooseFrom: CanTranslateFrom.		aLanguage > 0 ifTrue:			[^ Preferences setParameter: #languageTranslateFrom to: (CanTranslateFrom at: aLanguage) asSymbol]].	ch = 3 ifTrue:		[aLanguage _ PopUpMenu withCaption: 'The language to translate to'			chooseFrom: CanTranslateFrom.		aLanguage > 0 ifTrue:			[^ Preferences setParameter: #languageTranslateTo to: (CanTranslateFrom at: aLanguage) asSymbol]].	"Maybe let the user add another language if he knows the server can take it.""	ch _ (PopUpMenu labelArray: Languages, {'other...'.			'Choose language to translate from...'})		startUpWithCaption: 'Choose the language of dictionary for word definitions.'.	ch = 0 ifTrue: [^ Preferences setParameter: #myLanguage to: #English].	(ch <= Languages size) ifTrue: [aLanguage _ Languages at: ch].	ch = (Languages size + 1) ifTrue: [		aLanguage _ FillInTheBlank request: 'Name of the primary language'].	aLanguage ifNotNil: [^ Preferences setParameter: #myLanguage to: aLanguage asSymbol]."! !!WordNet class reorganize!('services' definitionsFor: verify:)('miscellaneous' canTranslateFrom languagePrefs lexiconServer openScamperOn:)!!TheWorldMenu reorganize!('commands' beIsolated changeBackgroundColor cleanUpWorld inspectWorldModel loadProject lookForSlips mvcProjectsAllowed newMorphOfClass:event: openChangeSorter1 openChangeSorter2 openEmail openFileList openIRC openMVCProject openMorphicProject openSelectorBrowser openTranscript openWorkspace printWorldOnFile projectForMyWorld propagateChanges quitSession readMorphFromAFile saveAndQuit saveSession saveWorldInFile setDisplayDepth splitNewMorphList:depth: startMessageTally startThenBrowseMessageTally worldMenuHelp)('mechanics' adaptToWorld: adaptedToWorld: menu: world:project:hand:)('construction' alphabeticalMorphMenu appearanceMenu buildWorldMenu changesMenu colorForDebugging: debugMenu fillIn:from: helpMenu myMenuColor newMorph openMenu playfieldMenu projectMenu remoteMenu scriptingMenu)('windows & flaps menu' flapsDo flapsMenu formulateFlapsMenu: globalFlapsEnabled newGlobalFlapString suppressFlapsString useGlobalFlapsString whichGlobalFlapsString windowsDo windowsMenu)('action' createStandardPartsBin doMenuItem:with: launchCustomPartsBin menuColorString openMessageNames projectThumbnail roundedCornersString setGradientColor soundEnablingString staggerPolicyString toggleFlapSuppressionInProject toggleWindowPolicy uniTilesClassicString)('popups' appearanceDo changesDo debugDo doPopUp: helpDo openWindow playfieldDo projectDo remoteDo scriptingDo standardFontDo)!