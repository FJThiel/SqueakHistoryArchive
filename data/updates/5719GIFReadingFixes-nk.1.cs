'From Squeak3.7alpha of 11 September 2003 [latest update: #5707] on 16 February 2004 at 12:02:54 pm'!"Change Set:		GIFReadingFixes-nkDate:			15 February 2004Author:			Ned KonzA few small fixes and enhancements for the GIF readers.* Add an 'offset' instVar to get rid of Undeclared refs.* Open  either an ImageMorph or AnimatedImageMorph as appropriate from a FileList.* Allow opening GIFs from remote servers in the FileList. "!!AnimatedImageMorph commentStamp: '<historical>' prior: 0!I am an ImageMorph that can hold more than one image. Each image has its own delay time.!ImageReadWriter subclass: #GIFReadWriter	instanceVariableNames: 'width height bitsPerPixel colorPalette rowByteSize xpos ypos pass interlace codeSize clearCode eoiCode freeCode maxCode prefixTable suffixTable remainBitCount bufByte bufStream transparentIndex mapOf32 localColorTable delay loopCount offset '	classVariableNames: 'Extension ImageSeparator Terminator '	poolDictionaries: ''	category: 'Graphics-Files'!!AnimatedImageMorph methodsFor: 'private' stamp: 'nk 2/15/2004 15:20'!fromGIFFileNamed: fileName	self fromReader: (AnimatedGIFReadWriter formsFromFileNamed: fileName)! !!AnimatedImageMorph methodsFor: 'private' stamp: 'nk 2/15/2004 15:20'!fromReader: reader	images _ reader forms.	offsets _ reader offsets.	delays _ reader delays.	self step! !!AnimatedImageMorph methodsFor: 'private' stamp: 'nk 2/15/2004 15:20'!fromStream: aStream	self fromReader: (AnimatedGIFReadWriter formsFromStream: aStream)! !!AnimatedImageMorph class methodsFor: 'instance creation' stamp: 'nk 2/15/2004 15:23'!fromGIFFileNamed: fileName	| reader |	reader _ AnimatedGIFReadWriter formsFromFileNamed: fileName.	^reader forms size = 1		ifTrue: [ ImageMorph new image: reader forms first ]		ifFalse: [ self new fromReader: reader ]! !!AnimatedImageMorph class methodsFor: 'instance creation' stamp: 'nk 2/15/2004 15:27'!fromStream: aStream	| reader |	reader _ AnimatedGIFReadWriter formsFromStream: aStream.	^reader forms size = 1		ifTrue: [ ImageMorph new image: reader forms first ]		ifFalse: [ self new fromReader: reader ]! !!AnimatedImageMorph class methodsFor: 'instance creation' stamp: 'nk 2/15/2004 16:57'!openGIFInWindow: aStream	^(self fromStream: aStream binary) openInWorld! !!AnimatedImageMorph class methodsFor: 'fileIn/Out' stamp: 'nk 2/15/2004 15:34'!serviceOpenGIFInWindow	"Answer a service for opening a gif graphic in a window"	^ (SimpleServiceEntry 		provider: self 		label: 'open graphic in a window'		selector: #openGIFInWindow:		description: 'open a GIF graphic file in a window'		buttonLabel: 'open')		argumentGetter: [ :fileList | fileList directory readOnlyFileNamed: fileList fileName ]! !ImageReadWriter subclass: #GIFReadWriter	instanceVariableNames: 'width height bitsPerPixel colorPalette rowByteSize xpos ypos pass interlace codeSize clearCode eoiCode freeCode maxCode prefixTable suffixTable remainBitCount bufByte bufStream transparentIndex mapOf32 localColorTable delay loopCount offset'	classVariableNames: 'Extension ImageSeparator Terminator'	poolDictionaries: ''	category: 'Graphics-Files'!