'From Squeak2.9alpha of 13 June 2000 [latest update: #2915] on 11 November 2000 at 11:39:58 pm'!"Change Set:		217ChangeSorterFix-smaDate:			11 November 2000Author:			Stefan Matthias AustWhen using fileIntoNewChangeSet from the file list while a change sorter is open, its selection is messed up. I think I fixed that with some refactorings."!!ChangeSorter methodsFor: 'access' stamp: 'sma 11/11/2000 23:28'!modelWakeUp	"A window with me as model is being entered.	Make sure I am up-to-date with the changeSets."	self canDiscardEdits ifTrue: [self update]! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sma 11/11/2000 23:32'!changeSetList	"Answer a list of ChangeSet names. If there're new	ChangeSet instances, create a new list of change sets."	ChangeSet instanceCount > AllChangeSets size		ifTrue: [self class gatherChangeSets].	^ AllChangeSets reversed collect: [:each | each name]! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sma 11/11/2000 23:37'!updateIfNecessary	"Recompute all of my panes."	| newList |	self okToChange ifFalse: [^ self].	myChangeSet isMoribund ifTrue: [^ self showChangeSet: Smalltalk changes].	newList _ self changeSetList.	(priorChangeSetList == nil or: [priorChangeSetList ~= newList])		ifTrue:			[priorChangeSetList _ newList.			self changed: #changeSetList].	self showChangeSet: myChangeSet! !!ChangeSorter class methodsFor: 'as yet unclassified' stamp: 'sma 11/11/2000 23:22'!newChangeSet	"Prompt the user for a name, and establish a new change set of	that name (if ok), making it the current changeset.  Return nil	of not ok, else return the actual changeset."	| newName newSet |	newName _ FillInTheBlank		request: 'Please name the new change set:'		initialAnswer: ChangeSet defaultName.	newName isEmpty ifTrue:		[self inform: 'nothing done'.		^ nil].	newSet _ self basicNewChangeSet: newName.	newSet ifNotNil:		[Smalltalk newChanges: newSet.		Transcript cr; show: newName, ' is now the current change set'].	^ newSet! !!ChangeSorter class methodsFor: 'as yet unclassified' stamp: 'sma 11/11/2000 23:23'!newChangeSet: aName	"Makes a new change set called aName, add author initials to try to	ensure a unique change set name."	| newName |	newName _ aName , FileDirectory dot , Utilities authorInitials.	^ self basicNewChangeSet: newName! !!ChangeSorter class methodsFor: 'as yet unclassified' stamp: 'sma 11/11/2000 23:24'!newChangesFromStream: aStream named: aName	"File in the code from the stream into a new change set whose	name is derived from aName. Leave the 'current change set'	unchanged. Return the new change set or nil on failure."	| oldChanges newName newSet |	oldChanges _ Smalltalk changes.	newName _ aName sansPeriodSuffix.	newSet _ self basicNewChangeSet: newName.	newSet ifNotNil:		[Smalltalk newChanges: newSet.		aStream fileInAnnouncing: 'Loading ', newName, '...'.		Transcript cr; show: 'File ', aName, ' successfully filed in to change set ', newName].	aStream close.	Smalltalk newChanges: oldChanges.	^ newSet! !!ChangeSorter class methodsFor: 'private' stamp: 'sma 11/11/2000 23:22'!basicNewChangeSet: newName	| newSet |	(self changeSetNamed: newName) ifNotNil:		[self inform: 'Sorry that name is already used'.		^ nil].	newSet _ ChangeSet new initialize name: newName.	AllChangeSets add: newSet.	^ newSet! !