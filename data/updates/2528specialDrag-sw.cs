'From Squeak2.9alpha of 26 July 2000 [latest update: #2527] on 28 August 2000 at 8:03:54 pm'!"Change Set:		specialDrag-swDate:			28 August 2000Author:			Scott WallaceChanges the behavior of cmd-drag so that in no circumstances is a mouseUp: issued to the draggee at the end of the drag.  This now generically circumvents a long-standing problem that various morphs have had to work around in various ad-hoc ways.  Those old workarounds are not however removed by this fileout, though someone should do that sometime."!!HandMorph methodsFor: 'event handling' stamp: 'sw 8/19/2000 10:25'!handleMouseUp: evt	"Dispatch a mouseUp event."	| oldFocus |	clickState ~~ #idle ifTrue: [self checkForDoubleClick: evt].	"drop morphs being carried, if any"	self hasSubmorphs ifTrue: [self dropMorphsEvent: evt].	mouseDownMorph = nil ifTrue: [^ self].	oldFocus := mouseDownMorph.	"make sure that focus becomes nil."	mouseDownMorph _ nil.  "mouse focus transaction ends when mouse goes up"	(oldFocus hasProperty: #specialDragging)		ifFalse:	[oldFocus mouseUp: (self transformEvent: evt)]		ifTrue:	[oldFocus removeProperty: #specialDragging].	dragOverMorphs copy do: [:m |		dragOverMorphs remove: m.		m mouseLeaveDragging: (evt transformedBy: (m transformFrom: self))].! !!HandMorph methodsFor: 'special gestures' stamp: 'sw 8/19/2000 09:55'!specialDrag: evt	"Special drag (cmd-mouse on the Macintosh) allows a morph to be dragged without grabbing it and thus without removing it from its owner or changing its z-order." 	| halo itsOwner |	self position ~= evt cursorPoint		ifTrue: [self position: evt cursorPoint].	mouseDownMorph		ifNil:    ["Waiting for more than 5 pixels move to start drag"				(self position dist: targetOffset) > 5					ifTrue: [(halo _ self world haloMorphOrNil) ifNil: [^ self].							mouseDownMorph _ halo target.							targetOffset _ targetOffset - mouseDownMorph positionInWorld.							halo removeAllHandlesBut: nil.							mouseDownMorph setProperty: #specialDragging toValue: true]]		ifNotNil: [mouseDownMorph isWorldMorph ifFalse:					[mouseDownMorph setConstrainedPositionFrom:						(mouseDownMorph pointFromWorld: self position - targetOffset)].	 mouseDownMorph ifNotNil:		[((itsOwner _ mouseDownMorph topRendererOrSelf owner) notNil and:			[itsOwner automaticViewing]) ifTrue:				[mouseDownMorph openViewerForArgument]]]! !