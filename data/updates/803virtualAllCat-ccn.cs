'From Squeak 2.3 of January 14, 1999 on 24 March 1999 at 11:14:57 am'!"Change Set:		virtualAllCat-ccnDate:			24 March 1999Author:			Chris NortonThis adds a virtual '--  all  --' message category to the System Browser.A new selection to the method category pane of browsers.  The selection is not an actual category, however.  If you click on '--  all  --', you will see the complete list of methods that are implemented for that class (either instance or class methods, depending on your current selection).Caveats:  If you modify a method while the '--  all  --' category is selected, the newly saved method will remain in its previous method category.  If while '--  all  --' is selected you edit an existing method into method with a different selector, the new method will go into the same category as the original method.If, while '-- all --' is selected but no method is selected, you add a new method, the new method will go into category 'as yet unclassified' (this was suggested by Dan Ingalls).NOTE:  This feature was inspired to some degree by ParcPlace/Digitalk's VisualSmalltalk Enterprise TM Package Browser.  We really like some of the behavior in that browser, so we borrowed some of their good ideas.  We just want to make sure we have given credit where credit is due!!!!  :-)NOTE:  This feature enhancement is based in part on an earlier attempt to create a virtual all category, made by Chris Norton and Carl Gundel on February, 24, 1999.  This enhancement does not require the other enhancement."!!Browser methodsFor: 'initialize-release' stamp: 'm3r 3/5/1999 22:58'!setClass: aBehavior selector: aSymbol	"Set the state of a new, uninitialized Browser."	| isMeta aClass systemCatIndex messageCatIndex |	aBehavior ifNil: [^ self].	(aBehavior isKindOf: Metaclass)		ifTrue: [isMeta _ true. aClass _ aBehavior soleInstance]		ifFalse: [isMeta _ false. aClass _ aBehavior].	systemCatIndex _ SystemOrganization categories indexOf: aClass category.	self systemCategoryListIndex: systemCatIndex.	self classListIndex:			((SystemOrganization listAtCategoryNumber: systemCatIndex)					indexOf: aClass name).	self metaClassIndicated: isMeta.	aSymbol ifNil: [^ self].	messageCatIndex _ aBehavior organization numberOfCategoryOfElement: aSymbol.	self messageCategoryListIndex: messageCatIndex + 1. "<- FIXED offset"	messageCatIndex = 0 ifTrue: [^ self].	self messageListIndex:			((aBehavior organization listAtCategoryNumber: messageCatIndex)					indexOf: aSymbol)! !!Browser methodsFor: 'accessing' stamp: 'ccn 3/22/1999 18:15'!contents: input notifying: aController 	"The retrieved information has changed and its source must now be	 updated. The information can be a variety of things, depending on	 the list selections (such as templates for class or message definition,	 methods) or the user menu commands (such as definition, comment,	 hierarchy).  Answer the result of updating the source."	| aString aText theClass result |	aString _ input asString.	aText _ input asText.	editSelection == #editSystemCategories ifTrue: [^ self changeSystemCategories: aString].	editSelection == #editClass | (editSelection == #newClass) ifTrue: [^ self defineClass: aString notifying: aController].	editSelection == #editComment		ifTrue: 			[theClass _ self selectedClass.			theClass				ifNil: 					[PopUpMenu notify: 'You must select a classbefore giving it a comment.'.					^ false].			theClass comment: aText stamp: Utilities changeStamp.			^ true].	editSelection == #hierarchy ifTrue: [^ true].	editSelection == #editMessageCategories ifTrue: [^ self changeMessageCategories: aString].	editSelection == #editMessage | (editSelection == #newMessage)		ifTrue: [self selectedMessageCategoryName asSymbol = ClassOrganizer allCategory				ifTrue: 					["User tried to save a new method while the ALL category 					         was selected"					editSelection == #newMessage						ifTrue: [self selectUnclassifiedCategory]						ifFalse: [self selectOriginalCategoryForCurrentMethod].					result _ self defineMessage: aText notifying: aController.					self changed: #messageCategoryList.					^ result]				ifFalse: [^ self defineMessage: aText notifying: aController]].	editSelection == #none		ifTrue: 			[PopUpMenu notify: 'This text cannot be acceptedin this part of the browser.'.			^ false].	self error: 'unacceptable accept'! !!Browser methodsFor: 'message category list' stamp: 'ccn 2/22/1999 18:45'!categoryOfCurrentMethod	"Determine the category that owns the current method.  Return    	the category name."	^ self selectedClassOrMetaClass whichCategoryIncludesSelector: self selectedMessageName! !!Browser methodsFor: 'message category list' stamp: 'ccn 3/22/1999 17:56'!messageCategoryList	"Answer the selected category of messages."	classListIndex = 0		ifTrue: [^ Array new]		ifFalse: [^ (Array with: ClassOrganizer allCategory), self classOrMetaClassOrganizer categories]! !!Browser methodsFor: 'message category list' stamp: 'ccn 3/24/1999 11:02'!messageCategoryListSelection	"Return the selected category name or nil."	^ ((self messageCategoryList size = 0 		or: [self messageCategoryListIndex = 0]) 		or: [self messageCategoryList size < self messageCategoryListIndex])			ifTrue: [nil]			ifFalse: [self messageCategoryList at: (self messageCategoryListIndex max: 1)]! !!Browser methodsFor: 'message category list' stamp: 'ccn+ceg 2/9/1999 20:25'!selectMessageCategoryNamed: aSymbol 	"Given aSymbol, select the category with that name.  Do nothing if 	aSymbol doesn't exist."	(self messageCategoryList includes: aSymbol)		ifFalse: [^ self].	self messageCategoryListIndex: (self messageCategoryList indexOf: aSymbol)! !!Browser methodsFor: 'message category list' stamp: 'ccn 3/22/1999 17:57'!selectOriginalCategoryForCurrentMethod	"private - Select the message category for the current method. 	 	 Note:  This should only be called when somebody tries to save  	 a method that they are modifying while ALL is selected. 	 	 Returns: true on success, false on failure."	| aSymbol |	aSymbol _ self categoryOfCurrentMethod.	(aSymbol notNil and: [aSymbol ~= ClassOrganizer allCategory])		ifTrue: 			[self selectMessageCategoryNamed: aSymbol.			^ true].	^ false! !!Browser methodsFor: 'message category list' stamp: 'ccn 3/22/1999 18:34'!selectUnclassifiedCategory	"Select the unclassified category."	self messageCategoryListIndex: 0! !!Browser methodsFor: 'message list' stamp: 'ccn 3/24/1999 10:48'!messageList	"Answer an Array of the message selectors of the currently selected message category, provided that the messageCategoryListIndex is in proper range.  Otherwise, answer an empty Array  If messageCategoryListIndex is found to be larger than the number of categories (it happens!!), it is reset to zero."	| sel |	(sel _ self messageCategoryListSelection) ifNil: [^ Array new].	^ sel = ClassOrganizer allCategory		ifTrue: 			[self classOrMetaClassOrganizer				ifNil:		[Array new]				ifNotNil:	[self classOrMetaClassOrganizer allMethodSelectors]]		ifFalse:			[(self classOrMetaClassOrganizer listAtCategoryNumber: messageCategoryListIndex - 1)				ifNil: [messageCategoryListIndex _ 0.  Array new]]! !!ClassOrganizer methodsFor: 'accessing' stamp: 'ccn+ceg 2/9/1999 18:42'!allMethodSelectors	"give a list of all method selectors."	| sortedList |     sortedList := SortedCollection new.	self categories do: [ :c | c notNil ifTrue: 		[sortedList addAll: (self listAtCategoryNamed: c)]].	^ sortedList asArray! !!ClassOrganizer class methodsFor: 'class initialization' stamp: 'ccn 3/22/1999 17:43'!allCategory	"Return a symbol that represents the virtual all methods category."	^ '-- all --' asSymbol! !"Postscript:If you discover any problems with the feature that is included in this change set, please contact me (Chris Norton) at chrisn@kronos.com. Thanks & we hope you enjoy our enhancement!!!!ccn and ceg"!