'From Squeak3.6beta of ''4 July 2003'' [latest update: #5387] on 3 September 2003 at 4:46:38 pm'!"Change Set:		doWhile-control-structures-jfDate:			3 September 2003Author:			Julian FitzellAdd #doWhileTrue: and #doWhileFalse: to BlockContext.They evaluate the receiver once, and then continue to do so every time the condition block passed in is true or false (respectively).  This is similar to the do...while control structure in many other languages.These methods are much more intention revealing than having to use #whileTrue or #whileFalse and combining your loop block and your condition block into one.  Also, this way you can get the return value of the last loop block iteration."!!BlockContext methodsFor: 'controlling' stamp: 'jf 9/3/2003 16:45'!doWhileFalse: conditionBlock	"Evaluate the receiver once, then again as long the value of conditionBlock is false." 	| result |	[result _ self value.	conditionBlock value] whileFalse.	^ result! !!BlockContext methodsFor: 'controlling' stamp: 'jf 9/3/2003 16:39'!doWhileTrue: conditionBlock	"Evaluate the receiver once, then again as long the value of conditionBlock is true." 	| result |	[result _ self value.	conditionBlock value] whileTrue.	^ result! !