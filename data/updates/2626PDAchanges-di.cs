'From Squeak2.9alpha of 12 June 2000 [latest update: #2602] on 18 September 2000 at 11:54:12 am'!"Change Set:		PDAchangesDate:			17 September 2000Author:			Dan IngallsA number of small changes relating to a forthcoming prototype."!AlignmentMorph subclass: #MonthMorph	instanceVariableNames: 'month showingToday tileRect model '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Demo'!!CustomMenu methodsFor: 'construction' stamp: 'dhhi 9/14/2000 22:39'!add: aString action: actionItem	"Add the given string as the next menu item. If it is selected, the given action (usually but not necessarily a symbol) will be returned to the client."	| s |	aString ifNil: [^ self addLine].	s _ String new: aString size + 2.	s at: 1 put: Character space.	s replaceFrom: 2 to: s size - 1 with: aString.	s at: s size put: Character space.	labels addLast: s.	selections addLast: actionItem.! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/18/2000 10:12'!checkForTodayShowing	| today thisMonth |	today _ Date today.	thisMonth _ today month.	(thisMonth = month or: [showingToday ifNil: [true]]) ifFalse: [^ self].	showingToday _ false.	self allMorphsDo:		[:m | (m isKindOf: SimpleSwitchMorph) ifTrue:				[(m arguments isEmpty not and: [m arguments first = today])					ifTrue: [(m borderWidth = 2 and: [m borderColor = Color yellow]) ifFalse:								[m borderWidth: 2; borderColor: Color yellow].							showingToday _ true]					ifFalse: [m borderWidth: 1;								setSwitchState: m color = m onColor]]].! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 18:23'!extent: newExtent	tileRect _ 0@0 extent: (newExtent-(4.0@25.0) / 7.0 max: 18.0@12.0).	self initializeWeeks.! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 16:54'!initializeHeader	| title sep  frame button monthName |	title _ (self findA: WeekMorph) title.	monthName _ month name.	self width < 160 ifTrue:		[(#(6 7 9) includes: month index)			ifTrue: [monthName _ monthName copyFrom: 1 to: 4]			ifFalse: [monthName _ monthName copyFrom: 1 to: 3]].	sep _ Morph new color: Color transparent; extent: title width @ 1.	self		addMorph: sep;		addMorph: title;		addMorph: sep copy.	button _ SimpleButtonMorph new				target: self;				actWhen: #whilePressed;				color: (Color r: 0.8 g: 0.8 b: 0.8).	frame _ AlignmentMorph new		color: Color transparent;		orientation: #horizontal;		inset: 0.	frame		addMorph:			(button				label: '>>';				actionSelector: #nextYear;				width: 15);		addMorph:			(button copy				label: '>';				actionSelector: #next;				width: 15);		addMorph:			((AlignmentMorph new				color: Color transparent;				orientation: #vertical;				"hResizing: #shrinkWrap;"				centering: #center;				extent: (title fullBounds width - (button width * 3)) @ title height)				addMorph:					(StringMorph new						contents:							monthName, ' ', month year printString));		addMorph:			(button copy				label: '<';				actionSelector: #previous;				width: 15);		addMorph:			(button copy				label: '<<';				actionSelector: #previousYear;				width: 15).	self addMorph: frame! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 14:14'!initializeWeeks	| weeks firstWeek lastWeek |	self removeAllMorphs.	weeks _ OrderedCollection new.	(firstWeek _ month firstDate week) asDate dayOfMonth = 1 ifTrue:		["If the entire first week is this month, then insert prior week"		weeks add: (WeekMorph newWeek: firstWeek previous month: month tileRect: tileRect model: model)].	month eachWeekDo:		[:each |		weeks add: (WeekMorph newWeek: (lastWeek _ each) month: month tileRect: tileRect model: model)].	weeks size < 6 ifTrue:		["If there's room at the bottom, add another week of next month."		weeks add: (WeekMorph newWeek: lastWeek next month: month tileRect: tileRect model: model)].	weeks reverseDo: [:each | self addMorph: each].	self initializeHeader.! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 14:19'!model: aModel	model _ aModel! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/18/2000 11:05'!month	^ month! !!MonthMorph methodsFor: 'all' stamp: 'dhhi 9/17/2000 20:49'!month: aMonth	month _ aMonth.	model ifNotNil: [model setDate: nil fromButton: nil down: false].	self initializeWeeks.	self checkForTodayShowing! !!Time methodsFor: 'printing' stamp: 'dhhi 9/16/2000 17:06'!printOn: aStream 	self seconds = 0		ifTrue: [self print24: false showSeconds: false on: aStream]		ifFalse: [self print24: false on: aStream]! !!WeekMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 14:16'!initialize	^ self initializeForWeek: Date today week		month: Date today month		tileRect: (0@0 extent: 23@19)		model: nil! !!WeekMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 20:42'!initializeDays: modelOrNil	| extent days tile |	self removeAllMorphs.	days _ OrderedCollection new: 7.	extent _ self tile extent.	week do:		[:each |		tile _ (self tileLabeled: each dayOfMonth printString) extent: extent.		each month = month ifFalse:			[tile color: Color gray; offColor: Color gray; onColor: Color veryLightGray].		modelOrNil ifNotNil:			[tile target: modelOrNil;				actionSelector: #setDate:fromButton:down:;				arguments: {each. tile}].		days add: tile].	days reverseDo: [:each | self addMorph: each]! !!WeekMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 13:58'!initializeForWeek: aWeek month: aMonth tileRect: rect model: aModel	super initialize.	tileRect _ rect.	self inset: 0;		color: Color transparent;		orientation: #horizontal;		hResizing: #shrinkWrap;		disableDragNDrop;		height: tileRect height.	self week: aWeek month: aMonth model: aModel! !!WeekMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 13:25'!title	"Answer a title with the names of the days."	| title extent days |	title _ AlignmentMorph new		inset: 0;		color: Color red;		orientation: #horizontal;		vResizing: #shrinkWarp;		height: tileRect height.		extent _ self tile extent.	days _ Week startMonday		ifTrue: [7 to: 1 by: -1]       "Original code, Mon-Sun."		ifFalse: [#(6 5 4 3 2 1 7)].   "Sun-Sat."	(days collect: [:each | Date nameOfDay: each]) do:		[:each |		title addMorph:			((self tileLabeled: (each copyFrom: 1 to: 2))				extent: extent)].	^ title	! !!WeekMorph methodsFor: 'all' stamp: 'dhhi 9/14/2000 13:58'!week: aWeek month: aMonth model: aModel	week _ aWeek.	month _ aMonth.	self initializeDays: aModel! !!WeekMorph class methodsFor: 'instance creation' stamp: 'dhhi 9/14/2000 14:10'!newWeek: aWeek month: aMonth tileRect: rect model: aModel	^ self basicNew initializeForWeek: aWeek month: aMonth tileRect: rect model: aModel! !!WeekMorph class methodsFor: 'instance creation' stamp: 'dhhi 9/14/2000 14:17'!on: aDate	^ self new		week: aDate week		month: aDate month		model: nil! !WeekMorph class removeSelector: #newWeek:month:!WeekMorph class removeSelector: #newWeek:month:tileRect:!WeekMorph removeSelector: #initializeDays!WeekMorph removeSelector: #initializeForWeek:month:tileRect:!WeekMorph removeSelector: #week:month:!"Postscript:Make all digits same width in base font." | f newForm |f _ TextStyle default fontAt: 1.(f widthOf: $1) = 4 ifTrue:	["Make the '1' 6 wide like all other digits"	f alter: $1 formBlock:  		[:oldForm | newForm _ Form extent: oldForm extent + (2@0).		oldForm displayOn: newForm at: 1@0.		newForm]]!