'From Squeak3.3alpha of 18 January 2002 [latest update: #4956] on 17 August 2002 at 9:59:31 pm'!"Change Set:		ccvbTweaks-swDate:			15 August 2002Author:			Scott WallacePublished as 4960ccvbTweaks-sw.cs to 3.3a.A few tweaks for Alejandro Magistrello's class-comment-versions browser:¥ Makes its remove-from-changes function work.¥ Now also launchable from a class-comment entry in a message list (formerly you had to be in a Browser.)¥ Suppress the 'pretty diffs' viewing option, which makes no sense for class comments."!!ChangeList methodsFor: 'initialization-release' stamp: 'sw 8/15/2002 22:34'!wantsPrettyDiffOption	"Answer whether pretty-diffs are meaningful for this tool"	^ true! !!ChangeList methodsFor: 'menu actions' stamp: 'sw 8/15/2002 22:35'!optionalButtonRow	"Answer a row of buttons to occur in a tool pane"	| aRow aButton |	aRow _ AlignmentMorph newRow.	aRow hResizing: #spaceFill.	aRow clipSubmorphs: true.	aRow layoutInset: 5@2; cellInset: 3.	aRow wrapCentering: #center; cellPositioning: #leftCenter.	self changeListButtonSpecs do:		[:triplet |			aButton _ PluggableButtonMorph				on: self				getState: nil				action: triplet second.			aButton				hResizing: #spaceFill;				vResizing: #spaceFill;				useRoundedCorners;				label: triplet first asString;				askBeforeChanging: true;				onColor: Color transparent offColor: Color transparent.			aRow addMorphBack: aButton.			aButton setBalloonText: triplet third].	aRow addMorphBack: self regularDiffButton.	self wantsPrettyDiffOption ifTrue:		[aRow addMorphBack: self prettyDiffButton].	^ aRow! !!ClassChangeRecord methodsFor: 'method changes' stamp: 'sw 8/14/2002 11:11'!removeSelector: selector	"Remove all memory of changes associated with the argument, selector, in this class."	selector == #Comment		ifTrue:			[changeTypes remove: #comment ifAbsent: []]		ifFalse:			[methodChanges removeKey: selector ifAbsent: []]! !!MessageSet methodsFor: 'metaclass' stamp: 'sw 8/15/2002 22:23'!classCommentIndicated	"Answer true iff we're viewing the class comment."	^ self selectedMessageName == #Comment! !!VersionsBrowser methodsFor: 'misc' stamp: 'sw 8/17/2002 21:57'!classCommentIndicated	"Answer whether the receiver is pointed at a class comment"	^ false! !!ClassCommentVersionsBrowser methodsFor: 'basic function' stamp: 'sw 8/14/2002 11:09'!scanVersionsOf: class 	"Scan for all past versions of the class comment of the given class"	| oldCommentRemoteStr sourceFilesCopy position prevPos stamp preamble tokens prevFileIndex |	classOfMethod _ class.	oldCommentRemoteStr _ class  organization commentRemoteStr.	currentCompiledMethod _ oldCommentRemoteStr.	selectorOfMethod _ #Comment.	changeList _ OrderedCollection new.	list _ OrderedCollection new.	listIndex _ 0.	oldCommentRemoteStr ifNil:[^ nil] ifNotNil: [oldCommentRemoteStr sourcePointer].	sourceFilesCopy _ SourceFiles collect:		[:x | x isNil ifTrue: [ nil ]				ifFalse: [x readOnlyCopy]].	position _ oldCommentRemoteStr position.	file _ sourceFilesCopy at: oldCommentRemoteStr sourceFileNumber.	[position notNil & file notNil]		whileTrue:		[file position: (0 max: position-150).  " Skip back to before the preamble"		[file position < (position-1)]  "then pick it up from the front"			whileTrue: [preamble _ file nextChunk].		prevPos _ nil.		stamp _ ''.		(preamble findString: 'commentStamp:' startingAt: 1) > 0			ifTrue: [tokens _ Scanner new scanTokens: preamble]			ifFalse: [tokens _ Array new].		(tokens at: tokens size-3) = #commentStamp:				ifTrue: ["New format gives change stamp and unified prior pointer"						stamp _ tokens at: tokens size-2.						prevPos _ tokens last.						prevFileIndex _ sourceFilesCopy fileIndexFromSourcePointer: prevPos.						prevPos _ sourceFilesCopy filePositionFromSourcePointer: prevPos]."				ifFalse: [Old format gives no stamp; prior pointer in two parts						prevPos _ tokens at: tokens size-2.						prevFileIndex _ tokens last].				(prevPos = 0 or: [prevFileIndex = 0]) ifTrue: [prevPos _ nil]]." 		self addItem:				(ChangeRecord new file: file position: position type: #classComment						class: class name category: nil meta: class stamp: stamp)			text: stamp , ' ' , class name , ' class comment'. 		position _ prevPos.		prevPos notNil & prevFileIndex > 0 					ifTrue:[file _ sourceFilesCopy at: prevFileIndex]					ifFalse:[file _ nil]].	sourceFilesCopy do: [:x | x notNil ifTrue: [x close]].	listSelections _ Array new: list size withAll: false! !!ClassCommentVersionsBrowser methodsFor: 'misc' stamp: 'sw 8/17/2002 21:57'!classCommentIndicated	"Answer whether the receiver is pointed at a class comment"	^ true! !!ClassCommentVersionsBrowser methodsFor: 'misc' stamp: 'sw 8/15/2002 22:38'!contentsSymbolQuints	"Answer a list of quintuplets representing information on the alternative views available in the code pane"	^ #((source			togglePlainSource 		showingPlainSourceString	'source'			'the textual source code as writen')(showDiffs		toggleRegularDiffing	showingRegularDiffsString	'showDiffs'		'the textual source diffed from its prior version'))! !!ClassCommentVersionsBrowser methodsFor: 'misc' stamp: 'sw 8/15/2002 22:35'!wantsPrettyDiffOption	"Answer whether pretty-diffs are meaningful for this tool"	^ false! !