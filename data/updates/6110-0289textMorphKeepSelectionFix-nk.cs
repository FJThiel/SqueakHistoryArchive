'From Squeakland 3.8.5976 of 25 August 2004 [latest update: #286] on 1 September 2004 at 2:56:07 pm'!"Change Set:		TextMorphKeepSelectionFix-nkDate:			1 September 2004Author:			Ned KonzTextMorphs would lose their selection when you popped up style or font menus (but not the emphasis menu). This changeset turns off the keyboard control of those menus so that the text selection is retained in those cases.Also, if there is no selection when you choose a new style for the selection (using the light green halo at the bottom left), it applies that style to the whole text. Previously, this did nothing at all."!!StrikeFont class methodsFor: 'instance creation' stamp: 'nk 9/1/2004 14:29'!fromUser: priorFont	^self fromUser: priorFont allowKeyboard: true! !!StrikeFont class methodsFor: 'instance creation' stamp: 'nk 9/1/2004 14:28'!fromUser: priorFont allowKeyboard: aBoolean	"rr 3/23/2004 10:02 : made the menu invoked modally, thus allowing	keyboard control" 	"StrikeFont fromUser"	"Present a menu of available fonts, and if one is chosen, return it.	Otherwise return nil."	| fontList fontMenu style active ptMenu label spec font |	fontList _ StrikeFont actualFamilyNames.	fontMenu _ MenuMorph new defaultTarget: self.	fontList do: [:fontName |		style _ TextStyle named: fontName.		active _ priorFont familyName sameAs: fontName.		ptMenu _ MenuMorph new defaultTarget: self.		style pointSizes do: [:pt |			(active and:[pt = priorFont pointSize]) 				ifTrue:[label _ '<on>'] 				ifFalse:[label _ '<off>'].			label _ label, pt printString, ' pt'.			ptMenu add: label 				target: fontMenu				selector: #modalSelection:				argument: {fontName. pt}].		style isTTCStyle ifTrue: [			ptMenu add: 'new size'				target: style selector: #addNewFontSizeDialog: argument: {fontName. fontMenu}.		].		active ifTrue:[label _ '<on>'] ifFalse:[label _ '<off>'].		label _ label, fontName.		fontMenu add: label subMenu: ptMenu].	spec _ fontMenu invokeModalAt: ActiveHand position in: ActiveWorld allowKeyboard: aBoolean.	spec ifNil: [^ nil].	style _ TextStyle named: spec first.	style ifNil: [^ self].	font _ style fonts detect: [:any | any pointSize = spec last] ifNone: [nil].	^ font! !!TextMorphEditor methodsFor: 'attributes' stamp: 'nk 9/1/2004 14:38'!changeStyle	"Let user change styles for the current text pane."	| aList reply style theStyle menuList startIndex stopIndex |	self flag: #arNote. "Move this up once we get rid of MVC"	startIndex _ self startIndex.	stopIndex := self stopIndex-1 min: paragraph text size.	aList _ StrikeFont actualFamilyNames.	theStyle _ paragraph textStyle.	menuList _ aList collect:[:styleName|		"Hack!! use defaultFont for comparison - we have no name that we could use for compare and the style changes with alignment so they're no longer equal."		(TextConstants at: styleName) defaultFont == theStyle defaultFont			ifTrue:['<on>', styleName]			ifFalse:['<off>',styleName]].	theStyle = TextStyle default		ifTrue:[menuList addFirst: '<on>DefaultTextStyle']		ifFalse:[menuList addFirst: '<off>DefaultTextStyle'].	aList addFirst: 'DefaultTextStyle'.	reply _ (SelectionMenu labelList: menuList lines: #(1) selections: aList) startUpWithCaption: nil at: ActiveHand position allowKeyboard: false.	reply ifNotNil:		[(style _ TextStyle named: reply) ifNil: [Beeper beep. ^ true].		paragraph textStyle: style copy.		paragraph composeAll.		self recomputeSelection.		self mvcRedisplay].	morph selectFrom: startIndex to: stopIndex.	^ true! !!TextMorphEditor methodsFor: 'attributes' stamp: 'nk 9/1/2004 14:55'!changeTextFont	"Present a menu of available fonts, and if one is chosen, apply it to the current selection.	If there is no selection, or the selection is empty, apply it to the whole morph."	| curFont newFont attr startIndex stopIndex |	startIndex _ self startIndex.	stopIndex := self stopIndex-1 min: paragraph text size.	curFont _ (paragraph text fontAt: startIndex withStyle: paragraph textStyle).	newFont _ StrikeFont fromUser: curFont allowKeyboard: false.	newFont ifNil:[^self].	attr _ TextFontReference toFont: newFont.	stopIndex >= startIndex		ifTrue: [ paragraph text addAttribute: attr from: startIndex to: stopIndex ]		ifFalse: [ paragraph text addAttribute: attr from: 1 to: paragraph text size. ].	paragraph composeAll.	self recomputeInterval.! !