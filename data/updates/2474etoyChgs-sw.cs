'From Squeak2.9alpha of 26 July 2000 [latest update: #2466] on 8 August 2000 at 6:42:31 pm'!"Change Set:		etoyChgs-swDate:			8 August 2000Author:			Scott WallaceVarious improvements to the etoy system, most of them in direct response to requests and suggestions made on 7 Aug by people involved in last year's use of Squeak at the Open School of LA.(1)  Scriptors now have both a tan 'o' control which nondestructively removes them from the screen, and a pink 'x' control that actually destroys the script.  When the latter is clicked, a warning confirmer if presented before the actual destruction takes place.(2)  To be uniform with the above change, the nondestructive dismissal controls on Viewers are now also tan 'o's.(3) A new preference, eToyFriendly, is added; when this preference is true, several things about the system will behave in a manner more suitable for etoy users.  Initially, it only affects the wording of pre-debug notifiers; subsequently, more etoy-specific configuration changes will be triggered by this preference.(4)  Phrase tiles, when being dragged, are always now attached to the cursor at the top-left corner of the tile.  This should greatly reduce the confusion about whether a phrase in dropped within a scriptor or just below it.  I can't remember whose suggestion this was, but it really seems to do the job. (5)  If you are carrying a phrase tile that invokes a user-written script, and you drop it onto the desktop, you now always get that script's scriptor opened around it.  If its scriptor already *was* open somewhere, that open scriptor is moved to the the location suggested by the drop.(6)  When a debug notifier is put up, its wording will now contain a more humane error message if the eToyFriendly preference is set to true.  Also, the dismiss box is removed from the morphic predebug notifier -- use the 'abandon' button to abandon the notifier"!!CategoryViewer methodsFor: 'header pane' stamp: 'sw 8/8/2000 13:12'!addHeaderMorph	| header aFont aButton wrpr |	header _ AlignmentMorph newRow color: self color; centering: #center.	aFont _ Preferences standardButtonFont.	header addMorph: (aButton _ SimpleButtonMorph new label: 'O' font: aFont).	aButton target: self;			color:  Color tan;			actionSelector: #delete;			setBalloonText: 'Delete this pane'.	header addTransparentSpacerOfSize: 5@5.	header addUpDownArrowsFor: self.	(wrpr _ header submorphs last) submorphs second setBalloonText: 'previous category'.		wrpr submorphs first  setBalloonText: 'next category'.	header beSticky.	self addMorph: header.	namePane _ RectangleMorph newSticky color: Color brown veryMuchLighter.	namePane borderWidth: 0.	aButton _ (StringButtonMorph contents: '-----' font: (StrikeFont familyName: #NewYork size: 12)) color: Color black.	aButton target: self; arguments: Array new; actionSelector: #chooseCategory.	aButton actWhen: #buttonDown.	namePane addMorph: aButton.	aButton position: namePane position.	namePane align: namePane topLeft with: (bounds topLeft + (50 @ 0)).	namePane setBalloonText: 'category (click here to choose a different one)'.	header addMorphBack: namePane.	(namePane isKindOf: RectangleMorph) ifTrue:		[namePane addDropShadow.		namePane owner color: Color gray].	self categoryChoice: 'basic'! !!Debugger methodsFor: 'initialize' stamp: 'sw 8/7/2000 17:36'!buildMorphicNotifierLabelled: label message: messageString	| notifyPane window contentTop extentV |	window _ (PreDebugWindow labelled: label) model: self.	contentTop _ 0.2.	extentV _ 156.	window addMorph: (self buttonRowForPreDebugWindow: window)				frame: (0@0 corner: 1 @ contentTop).		notifyPane _ PluggableTextMorph on: self text: nil accept: nil		readSelection: nil menu: #debugProceedMenu:.	notifyPane editString: (self preDebugNotifierContentsFrom: messageString);		askBeforeDiscardingEdits: false.	window addMorph: notifyPane frame: (0@contentTop corner: 1@1).	window deleteCloseBox.	^ window openInWorldExtent: 450 @ extentV! !!Debugger methodsFor: 'initialize' stamp: 'sw 8/8/2000 13:13'!preDebugNotifierContentsFrom: messageString	^ Preferences eToyFriendly		ifFalse:			[messageString]		ifTrue:			['An error has occurred; you should probably just hit ''abandon''.  Sorry!!'] ! !!HandMorph methodsFor: 'grabbing/dropping' stamp: 'sw 8/7/2000 13:56'!grabMorphInner: m	| myPos morphPos localPt trans morphToGrab newT |	formerOwner _ m owner.	formerPosition _ m position.	"Check if the morph will keep it's transform while grabbed"	myPos _ self position.	morphPos _ m position.	localPt _ (m keepsTransform "or: [formerOwner isNil]")		ifTrue:[myPos]		ifFalse:[((m world ifNil: [self worldUnderCursor]) 							globalPointToLocal: myPos) truncated].						"fix grabbing new morph in embedded world"	(formerOwner == nil		or: [m keepsTransform			or: [(trans _ formerOwner transformFromOutermostWorld) isPureTranslation]]) ifTrue: [		m position: myPos + (morphPos - localPt).		morphToGrab _ m.		addedFlexAtGrab _ false.	] ifFalse: ["Morph was in a flexed environment.  Flex it in the hand."		morphToGrab _ m addFlexShell transform: trans asMorphicTransform.		m position: morphPos.  "revert offset from addFlexShell"		newT _ trans withOffset: (trans offset + (trans localPointToGlobal: localPt) - myPos).		morphToGrab position: (morphToGrab localPointToGlobal: morphToGrab position).		morphToGrab transform: newT.		addedFlexAtGrab _ true.	].	(morphToGrab isKindOf: PhraseTileMorph) ifTrue:		[morphToGrab position: Sensor cursorPoint].	gridOn ifTrue: [morphToGrab position: (morphToGrab position grid: grid)].	self addMorphBack: morphToGrab.! !!PhraseTileMorph methodsFor: 'mouse' stamp: 'sw 8/8/2000 12:12'!morphToDropInPasteUp: aPasteUp	| actualObject itsSelector aScriptor anEditor adjustment handy |	self isCommand ifFalse: [^ self].	(actualObject _ self actualObject) ifNil: [^ self].	actualObject assureUniClass.	itsSelector _ self userScriptSelector.	aScriptor _ (itsSelector ~~ nil and: [itsSelector size > 0])		ifTrue:			[actualObject isFlagshipForClass				ifFalse: 					["We can set the status for our instantiation of this script, but cannot allow script editing"					anEditor _ actualObject scriptEvaluatorFor: itsSelector phrase: self.					adjustment _ 50 @ 40.					anEditor]				ifTrue:					[(actualObject class userScriptForPlayer: actualObject selector: itsSelector) 						isTextuallyCoded ifTrue:							[^ aPasteUp scriptorForTextualScript: itsSelector ofPlayer: actualObject].					adjustment _ 0@0.					aScriptor _ actualObject scriptEditorFor: itsSelector]]		ifFalse:			["It's a system-defined selector; construct an anonymous scriptor around it"			adjustment _ 60 @ 20.			actualObject permanentScriptEditorFor: self].	handy _ aPasteUp primaryHand.	aScriptor position: handy position - adjustment.	(aScriptor isMemberOf: ScriptEditorMorph) ifTrue:		[aScriptor playerScripted expungeEmptyUnRenamedScripts].	^ aScriptor! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 8/7/2000 17:40'!addDestroyButtonTo: aRowMorph	aRowMorph addMorphBack:		((SimpleButtonMorph new label: 'X' font: Preferences standardButtonFont)			target: self;			color:  Color lightRed;			actionSelector: #destroyScript;			setBalloonText: 'Destroy this script(CAUTION!!!!)').	^ aRowMorph! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 8/8/2000 13:35'!addDismissButtonTo: aRowMorph	aRowMorph addMorphBack:		((SimpleButtonMorph new label: 'O' font: Preferences standardButtonFont)			target: self;			color:  Color tan;			actionSelector: #dismiss;			setBalloonText: 'Remove this scriptfrom the screen(you can open itagain from a Viewer)').	^ aRowMorph! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 8/7/2000 17:43'!buttonRowForEditor	| r aString aButtonMorph buttonFont aStatusMorph aStatus |	buttonFont _ Preferences standardButtonFont.	r _ AlignmentMorph newRow color: Color transparent; inset: 0.	r addMorphFront:		(SimpleButtonMorph new			label: '!!' font: (StrikeFont familyName: #ComicBold size: 16);			target: self;			color: Color yellow;			borderWidth: 0;			actWhen: #whilePressed;			actionSelector: #tryMe;			balloonTextSelector: #tryMe).	r addTransparentSpacerOfSize: 6@10.	self addDismissButtonTo: r.	r addTransparentSpacerOfSize: 6@10.	aString _ playerScripted externalName, ' ', self scriptTitle.	r addMorphBack:		(aButtonMorph _ SimpleButtonMorph new useSquareCorners label: aString font: buttonFont; target: self; setNameTo: 'title').	aButtonMorph actWhen: #buttonDown; actionSelector: #offerScriptorMenu.	aButtonMorph borderColor: (Color fromRgbTriplet: #(0.065 0.258 1.0)).	aButtonMorph color: (self isAnonymous ifTrue: [Color blue muchLighter] ifFalse: [ScriptingSystem uniformTileInteriorColor]).	aButtonMorph balloonTextSelector: #offerScriptorMenu.	r addTransparentSpacerOfSize: 6@10.	aStatus _ self scriptInstantiation status.	r addMorphBack:			(aStatusMorph _ SimpleButtonMorph new useSquareCorners label: aStatus font: buttonFont;				setNameTo: 'trigger';				target: self;				actWhen: #buttonDown;				actionSelector: #chooseTrigger;				setBalloonText: (ScriptingSystem helpStringFor: #chooseTrigger) maxLineLength: 65;				balloonTextSelector: #chooseTrigger).	r addTransparentSpacerOfSize: 10@10.	r addMorphBack:		(IconicButton new borderWidth: 0;			labelGraphic: (ScriptingSystem formAtKey: 'AddTest'); color: Color transparent; 			actWhen: #buttonDown;			target: self;			actionSelector: #addYesNoToHand;			shedSelvedge;			balloonTextSelector: #addYesNoToHand).	r addTransparentSpacerOfSize: 12@10.	self addDestroyButtonTo: r.	self updateStatusMorph: aStatusMorph.	^ r! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 8/7/2000 17:50'!destroyScript	| aMenu reply |	(self confirm: 'Caution -- this destroys this scriptpermanently; are you sure you want to do this?') ifFalse: [^ self].	true ifTrue: [^ playerScripted removeScript: scriptName].	self flag: #deferred.  "revisit"	(playerScripted okayToDestroyScriptNamed: scriptName)		ifFalse:			[^ self inform: 'Sorry, this script is being calledfrom another script.'].	(self isAnonymous not and: [submorphs size > 1]) ifTrue:		[aMenu _ SelectionMenu selections: #('destroy it' 'oops, no, don''t destroy').		reply _ aMenu startUpWithCaption: 'Do you really want todestroy this script?'.		(reply = 'destroy it') ifFalse: [^ self]].	self actuallyDestroyScript! !!StandardViewer methodsFor: 'as yet unclassified' stamp: 'sw 8/7/2000 17:54'!addHeaderMorphWithBarHeight: anInteger includeDismissButton: aBoolean	| header aFont aButton aTextMorph nail wrpr costs headWrapper inner |	header _ AlignmentMorph newRow color: self color muchLighter; centering: #center.	aFont _ Preferences standardButtonFont.	aBoolean ifTrue:		[header addMorph: (aButton _ SimpleButtonMorph new label: 'O' font: aFont).		aButton target: self;				color:  Color tan;				actionSelector: #dismiss;				setBalloonText: 'Delete this entire Viewer'.		header addTransparentSpacerOfSize: 4@1].	aButton _ IconicButton new borderWidth: 0;			labelGraphic: (ScriptingSystem formAtKey: #AddCategoryViewer); color: Color transparent; 			actWhen: #buttonDown;			target: self;			actionSelector: #addCategoryViewer;			setBalloonText: 'click here to addanother category pane';			shedSelvedge.	header addMorphBack: aButton.	header addTransparentSpacerOfSize: 4@1.	costs _ scriptedPlayer costumes.	costs ifNotNil:	[(costs size > 1 or: [costs size = 1 and: [costs first ~~ scriptedPlayer costume]]) ifTrue:		[header addUpDownArrowsFor: self.		(wrpr _ header submorphs last) submorphs second setBalloonText: 'switch to previous costume'.			wrpr submorphs first  setBalloonText: 'switch to next costume']].		(self hasProperty: #noInteriorThumbnail)		ifFalse:			[nail _ ThumbnailMorph new objectToView: scriptedPlayer viewSelector: #costume]		ifTrue:			[inner _ ImageMorph new image: (ScriptingSystem formAtKey: 'Menu').			nail _ RectangleMorph new beTransparent extent: inner extent.			nail addMorph: inner lock].	nail on: #mouseDown send: #thumbnailMenuEvt:forMorph: to: scriptedPlayer.	header addMorphBack: nail.	nail setBalloonText: 'click here to get a menuthat will allow you toadd an instance variable,,tear off a tile, etc..'.	(self hasProperty: #noInteriorThumbnail)		ifFalse:			[nail borderWidth: 3; borderColor: #raised].	header addTransparentSpacerOfSize: 5@5."	aButton _ SimpleButtonMorph new target: self; actionSelector: #newEmptyScript; label: 'S' font: (aFont _ StrikeFont familyName: #ComicBold size: 16);  color: Color transparent; borderWidth: 0; actWhen: #buttonDown.	aButton setBalloonText: 'drag from here tocreate a new scriptfor this object'.		header addMorphBack: aButton.	header addTransparentSpacerOfSize: 8@5.	aButton _ SimpleButtonMorph new target: scriptedPlayer; actionSelector: #addInstanceVariable; label: 'I' font: aFont;  color: Color transparent; borderWidth: 0; actWhen: #buttonUp.	aButton setBalloonText: 'click here to addan instance variableto this object.'.	header addMorphBack: aButton.	header addTransparentSpacerOfSize: 5@5."	scriptedPlayer costume assureExternalName.	aTextMorph _ UpdatingStringMorph new		useStringFormat;		target:  scriptedPlayer;		getSelector: #getName;		putSelector: #setName:;		setNameTo: 'name';		font: ScriptingSystem fontForNameEditingInScriptor.	aTextMorph setProperty: #okToTextEdit toValue: true.	aTextMorph step.	header  addMorphBack: aTextMorph.	aTextMorph setBalloonText: 'Click here to edit the player''s name.'.		header beSticky.	anInteger > 0		ifTrue:			[headWrapper _ AlignmentMorph newColumn color: self color.			headWrapper addTransparentSpacerOfSize: (0 @ anInteger).			headWrapper addMorphBack: header.			self addMorph: headWrapper]		ifFalse:			[self addMorph: header]! !!SystemWindow methodsFor: 'menu' stamp: 'sw 8/7/2000 17:35'!deleteCloseBox	closeBox ifNotNil:		[closeBox delete.		closeBox _ nil]! !!SystemWindow methodsFor: 'menu' stamp: 'sw 8/7/2000 17:35'!makeUnclosable	mustNotClose _ true.	self deleteCloseBox! !"Postscript:"Preferences addPreference: #eToyFriendly category: #scripting default: false balloonHelp: 'If true, then the system is configured in ways suitable for etoy users'.!