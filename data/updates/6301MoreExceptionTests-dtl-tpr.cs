'From Squeak3.7beta of ''1 April 2004'' [latest update: #5923] on 1 June 2004 at 10:21:52 pm'!"Change Set:		MoreExceptionTests-dtl-tprDate:			1 June 2004Author:			David T. LewisThis change set includes Tim's proposed fix to ExceptionTester>>simpleOuterTest, plus the following new tests:ExceptionTester>>doubleOuterTestExceptionTester>>doubleOuterPassTestExceptionTester>>doublePassOuterTestExceptionTests>>testResumableOuterExceptionTests>>testNonResumableOuterExceptionTests>>testResumablePassExceptionTests>>testNonResumablePassThe existing exceptions framework passes all these tests. However, the tests require expert review to make sure they are correct. I am *not* confident in the correctness of the tests until they are reviewed."!!ExceptionTester methodsFor: 'accessing' stamp: 'dtl 6/1/2004 21:53'!basicANSISignaledExceptionTestSelectors	^#( simpleIsNestedTest simpleOuterTest doubleOuterTest doubleOuterPassTest doublePassOuterTest simplePassTest simpleResignalAsTest simpleResumeTest simpleRetryTest simpleRetryUsingTest simpleReturnTest)! !!ExceptionTester methodsFor: 'signaledException tests' stamp: 'dtl 6/1/2004 21:51'!doubleOuterPassTest	"uses #resume"	[[[self doSomething.	MyTestNotification signal.	self doSomethingExceptional]		on: MyTestNotification		do: [:ex | ex outer.			self doSomethingElse]]			on: MyTestNotification			do: [:ex | ex pass.				self doSomethingExceptional]]				on: MyTestNotification				do: [:ex | self doYetAnotherThing. ex resume]! !!ExceptionTester methodsFor: 'signaledException tests' stamp: 'dtl 6/1/2004 21:49'!doubleOuterTest	"uses #resume"	[[[self doSomething.	MyTestNotification signal.	self doSomethingExceptional]		on: MyTestNotification		do: [:ex | ex outer.			self doSomethingExceptional]]			on: MyTestNotification			do: [:ex | ex outer.				self doSomethingElse]]				on: MyTestNotification				do: [:ex | self doYetAnotherThing. ex resume]! !!ExceptionTester methodsFor: 'signaledException tests' stamp: 'dtl 6/1/2004 21:52'!doublePassOuterTest	"uses #resume"	[[[self doSomething.	MyTestNotification signal.	self doSomethingExceptional]		on: MyTestNotification		do: [:ex | ex pass.			self doSomethingExceptional]]			on: MyTestNotification			do: [:ex | ex outer.				self doSomethingElse]]				on: MyTestNotification				do: [:ex | self doYetAnotherThing. ex resume]! !!ExceptionTester methodsFor: 'signaledException tests' stamp: 'tpr 5/27/2004 21:50'!simpleOuterTest	"uses #resume"	[[self doSomething.	MyTestNotification signal.	"self doSomethingElse"	self doSomethingExceptional]		on: MyTestNotification		do: [:ex | ex outer. self doSomethingElse]]				on: MyTestNotification				do: [:ex | self doYetAnotherThing. ex resume]! !!ExceptionTester methodsFor: 'signaledException results' stamp: 'dtl 6/1/2004 21:56'!doubleOuterPassTestResults	^OrderedCollection new		add: self doSomethingString;		add: self doYetAnotherThingString;		add: self doSomethingElseString;		yourself! !!ExceptionTester methodsFor: 'signaledException results' stamp: 'dtl 6/1/2004 21:56'!doublePassOuterTestResults	^OrderedCollection new		add: self doSomethingString;		add: self doYetAnotherThingString;		add: self doSomethingElseString;		yourself! !!ExceptionTests methodsFor: 'testing-ExceptionTester' stamp: 'dtl 6/1/2004 21:54'!testDoubleOuterPass	self assertSuccess: (ExceptionTester new runTest: #doubleOuterPassTest ) ! !!ExceptionTests methodsFor: 'testing-ExceptionTester' stamp: 'dtl 6/1/2004 21:54'!testDoublePassOuter	self assertSuccess: (ExceptionTester new runTest: #doublePassOuterTest ) ! !!ExceptionTests methodsFor: 'testing-outer' stamp: 'dtl 6/1/2004 21:59'!testNonResumableOuter	self should: [		[Error signal. 4] 			on: Error 			do: [:ex | ex outer. ex return: 5]		] raise: Error! !!ExceptionTests methodsFor: 'testing-outer' stamp: 'dtl 6/1/2004 22:00'!testNonResumablePass	self should: [		[Error signal. 4] 			on: Error 			do: [:ex | ex pass. ex return: 5]		] raise: Error! !!ExceptionTests methodsFor: 'testing-outer' stamp: 'dtl 6/1/2004 22:00'!testResumableOuter	| result |	result _ [Notification signal. 4] 		on: Notification 		do: [:ex | ex outer. ex return: 5].	self assert: result == 5! !!ExceptionTests methodsFor: 'testing-outer' stamp: 'dtl 6/1/2004 22:00'!testResumablePass	| result |	result _ [Notification signal. 4] 		on: Notification 		do: [:ex | ex pass. ex return: 5].	self assert: result == 4! !!ExceptionTests reorganize!('private' assertSuccess:)('testing-ExceptionTester' testDoubleOuter testDoubleOuterPass testDoublePassOuter testDoubleResume testNonResumableFallOffTheEndHandler testResumableFallOffTheEndHandler testSignalFromHandlerActionTest testSimpleEnsure testSimpleEnsureTestWithError testSimpleEnsureTestWithNotification testSimpleEnsureTestWithUparrow testSimpleIsNested testSimpleOuter testSimplePass testSimpleResignalAs testSimpleResume testSimpleRetry testSimpleRetryUsing testSimpleReturn)('testing-outer' testNonResumableOuter testNonResumablePass testResumableOuter testResumablePass)!