'From Squeak2.6 of 11 October 1999 [latest update: #1571] on 26 October 1999 at 1:09:32 am'!"Change Set:		setWindowColor-swDate:			26 October 1999Author:			Scott WallaceAdds an item to the window menu for morphic windows allowing you to set the window color."!!HandMorph methodsFor: 'world menu commands' stamp: 'sw 10/26/1999 00:36'!setDisplayDepth	"Let the user choose a new depth for the display. "	| result oldDepth |	oldDepth _ Display depth.	(result _ (SelectionMenu selections: Display supportedDisplayDepths) startUpWithCaption: 'Choose a display depth(it is currently ' , oldDepth printString , ')') == nil ifFalse:		[Display newDepth: result].	(World isMorph and: [(Display depth < 4) ~= (oldDepth < 4)]) ifTrue:		["Repaint windows since they look better all white in depth < 4"		(SystemWindow windowsIn: World satisfying: [:w | true]) do:			[:w | oldDepth < 4				ifTrue:					[w restoreDefaultPaneColor]				ifFalse:					[w updatePaneColors]]]! !!PluggableButtonMorph methodsFor: 'accessing' stamp: 'sw 10/25/1999 14:36'!offColor	^ offColor! !!SystemWindow methodsFor: 'geometry' stamp: 'sw 10/25/1999 23:51'!extent: newExtent	| inner labelRect |	isCollapsed		ifTrue: [super extent: newExtent x @ (self labelHeight + 2)]		ifFalse: [super extent: newExtent].	inner _ self innerBounds.	labelRect _ self labelRect.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	self setStripeColorsFrom: self paneColorToUse.	closeBox ifNotNil:		[closeBox align: closeBox topLeft with: inner topLeft + (4@0)].	menuBox ifNotNil:		[menuBox align: menuBox topLeft with: (inner topLeft + (19@1))].	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label fitContents; setWidth: (label width min: bounds width - self labelWidgetAllowance).	label align: label bounds topCenter with: inner topCenter.	isCollapsed ifTrue: [		collapsedFrame _ self bounds	] ifFalse: [		self setBoundsOfPaneMorphs.		fullFrame _ self bounds	].! !!SystemWindow methodsFor: 'top window' stamp: 'sw 10/25/1999 23:50'!activate	"Bring me to the front and make me able to respond to mouse and keyboard"	| oldTop outerMorph sketchEditor pal |	outerMorph _ self topRendererOrSelf.	outerMorph owner ifNil: [^ self "avoid spurious activate when drop in trash"].	oldTop _ TopWindow.	TopWindow _ self.	oldTop ifNotNil: [oldTop passivate].	outerMorph owner firstSubmorph == outerMorph		ifFalse: ["Bring me (with any flex) to the top if not already"				outerMorph owner addMorphFront: outerMorph].	self submorphsDo: [:m | m unlock].	self setStripeColorsFrom: self paneColorToUse.	self isCollapsed ifFalse:		[model modelWakeUpIn: self.		self positionSubmorphs].	(sketchEditor _ self extantSketchEditor) ifNotNil:		[sketchEditor comeToFront.		(pal _ self world findA: PaintBoxMorph) ifNotNil:			[pal comeToFront]]! !!SystemWindow methodsFor: 'top window' stamp: 'sw 10/25/1999 23:51'!passivate	"Make me unable to respond to mouse and keyboard"	self setStripeColorsFrom: self paneColorToUse.	model modelSleep.	self submorphsDo:		[:m | (m == closeBox or: [m == collapseBox])				ifTrue: ["Control boxes remain active, except in novice mode"						Preferences noviceMode ifTrue: [m lock]]				ifFalse: [m lock]].	self world ifNotNil:  "clean damage now, so dont merge this rect with new top window"		[self world == World ifTrue: [self world displayWorld]]! !!SystemWindow methodsFor: 'panes' stamp: 'sw 10/26/1999 00:23'!existingPaneColor	| aColor |	"Answer the existing pane color for the window, obtaining it from the first paneMorph if any, and fall back on using the second stripe color if necessary."	paneMorphs isEmptyOrNil		ifFalse:			[((aColor _ paneMorphs first color) isKindOf: Color)				ifTrue:					[^ aColor]].	^ stripes second color! !!SystemWindow methodsFor: 'panes' stamp: 'sw 10/26/1999 00:26'!paneColorToUse	^ Display depth <= 2		ifTrue:			[Color white]		ifFalse:			[self existingPaneColor ifNil: [self paneColor]]! !!SystemWindow methodsFor: 'panes' stamp: 'sw 10/26/1999 00:36'!restoreDefaultPaneColor	"Useful when changing from monochrome to color display"	self setStripeColorsFrom: self paneColor.	paneMorphs do: [:p | p color: self paneColor].! !!SystemWindow methodsFor: 'panes' stamp: 'sw 10/25/1999 23:52'!updatePaneColors	"Useful when changing from monochrome to color display"	self setStripeColorsFrom: self paneColorToUse.	paneMorphs do: [:p | p color: self paneColorToUse].! !!SystemWindow methodsFor: 'menu' stamp: 'sw 10/26/1999 00:49'!offerWindowMenu	| aMenu |	aMenu _ MenuMorph new defaultTarget: self.	aMenu add: 'change title...' action: #relabel.	aMenu addLine.	aMenu add: 'send to back' action: #sendToBack.	aMenu add: 'make next-to-topmost' action: #makeSecondTopmost.	aMenu addLine.	self mustNotClose		ifFalse:			[aMenu add: 'make unclosable' action: #makeUnclosable]		ifTrue:			[aMenu add: 'make closable' action: #makeClosable].	aMenu add: 'full screen' action: #fullScreen.	self isCollapsed ifFalse: [aMenu add: 'window color...' action: #setWindowColor].	model ifNotNil:		[model addModelItemsToWindowMenu: aMenu].	aMenu popUpAt: self cursorPoint event: self currentEvent! !!SystemWindow methodsFor: 'menu' stamp: 'sw 10/26/1999 00:00'!setWindowColor	ColorPickerMorph new		sourceHand: self activeHand;		target: self;		selector: #setWindowColor:;		originalColor: self paneColorToUse;		addToWorld: self world			near: self fullBounds! !!SystemWindow methodsFor: 'menu' stamp: 'sw 10/26/1999 00:04'!setWindowColor: aColor	| existingColor |	aColor ifNil: [^ self].  "it happens"	existingColor _ self paneColorToUse.	existingColor ifNil: [^ self beep].	self allMorphsDo:		[:aMorph |			((aMorph isKindOf: PluggableButtonMorph) and: [aMorph offColor = existingColor])				ifTrue:					[aMorph onColor: aColor darker offColor: aColor].			aMorph color = existingColor				ifTrue:					[aMorph color: aColor]].	self setStripeColorsFrom: aColor		! !