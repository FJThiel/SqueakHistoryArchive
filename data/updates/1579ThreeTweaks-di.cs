'From Squeak2.6 of 11 October 1999 [latest update: #1575] on 27 October 1999 at 9:55:14 am'!"Change Set:		ThreeTweaksDate:			27 October 1999Author:			Dan IngallsFixes a bug in FileList shiftedYellowButtonMenu and cleans up a few obsolete methods.Changes the tests in ParagraphEditor dispatchOnCharacter so as to avoid ctrl-key combinations being masked by some non-shifted command keys (like pageDown).Externally (re)sets the preference Preferences fastDragWindowForMorphic to true."!!Celeste methodsFor: 'other' stamp: 'di 10/27/1999 08:48'!perform: selector orSendTo: otherTarget	"Celeste handles all menu commands."	selector = #format ifTrue: [^ self perform: selector].	((#(yellowButtonActivity shiftedYellowButtonActivity) includes: selector) or:		[(ParagraphEditor yellowButtonMessages includes: selector) or:		[ParagraphEditor shiftedYellowButtonMenu selections includes: selector]])			ifTrue: [otherTarget perform: selector]			ifFalse: [self perform: selector].! !!FileList methodsFor: 'file list menu' stamp: 'di 10/27/1999 08:43'!fileContentsMenu: aMenu shifted: shifted| shiftMenu |^ shifted 	ifFalse: [aMenu 		labels: 'file it inget entire fileview as hexbrowse changesfind...(f)find again (g)set search string (h)do again (j)undo (z)copy (c)cut (x)paste (v)do it (d)print it (p)inspect it (i)accept (s)cancel (l)more...' 		lines: #(4 7 9 12 15 17)		selections: #(fileItIn get getHex browseChanges find findAgain setSearchString again undo copySelection cut paste doIt printIt inspectIt accept cancel shiftedYellowButtonActivity)]	ifTrue: [shiftMenu _ ParagraphEditor shiftedYellowButtonMenu.		aMenu 			labels: shiftMenu labelString 			lines: shiftMenu lineArray			selections: shiftMenu selections]! !!MouseMenuController methodsFor: 'menu setup' stamp: 'di 10/27/1999 09:52'!shiftedYellowButtonMenu	"Serves as a default backstop; every situation where a shifted menu is anticipated should reimplement this"	^ nil"	^ SelectionMenu labels: 'zort' lines: #() selections: #(doZort)"! !!MouseMenuController methodsFor: 'menu messages' stamp: 'di 10/27/1999 09:50'!shiftedYellowButtonActivity	"Present the alternate (shifted) menu and take action accordingly."	| shiftMenu sel |	(shiftMenu _ self shiftedYellowButtonMenu) == nil ifTrue:		[^ super controlActivity].	(sel _ shiftMenu startUp) ifNotNil:		[self menuMessageReceiver performMenuMessage: sel]! !!MouseMenuController methodsFor: 'menu messages' stamp: 'di 10/27/1999 08:51'!yellowButtonActivity	"Determine which item in the yellow button pop-up menu is selected. If 	one is selected, then send the corresponding message to the object 	designated as the menu message receiver."	^ self unshiftedYellowButtonActivity! !!ParagraphEditor methodsFor: 'typing support' stamp: 'di 10/27/1999 09:39'!dispatchOnCharacter: char with: typeAheadStream	"Carry out the action associated with this character, if any.	Type-ahead is passed so some routines can flush or use it."	| honorCommandKeys |	((honorCommandKeys _ Preferences cmdKeysInText) and: [char = Character enter])		ifTrue: [^ self dispatchOnEnterWith: typeAheadStream].	((honorCommandKeys and: [sensor commandKeyPressed])		or: ["backspace, escape and a few others act as command keys"			(self class specialShiftCmdKeys includes: char asciiValue)				and: ["... but don't let them interfere with ctrl-key actions"					sensor controlKeyPressed not]])		ifTrue:		[^ sensor leftShiftDown			ifTrue:				[self perform: (ShiftCmdActions at: char asciiValue + 1) with: typeAheadStream]			ifFalse:				[self perform: (CmdActions at: char asciiValue + 1) with: typeAheadStream]].	"the control key can be used to invoke shift-cmd shortcuts"	(honorCommandKeys and: [sensor controlKeyPressed])		ifTrue:			[^ self perform: (ShiftCmdActions at: char asciiValue + 1) with: typeAheadStream].	^ self perform: #normalCharacter: with: typeAheadStream! !MouseMenuController removeSelector: #shiftedYellowButtonActivity:!ParagraphEditor removeSelector: #shiftedYellowButtonMenu!ParagraphEditor class removeSelector: #shiftedYellowButtonMessages!"Postscript:As it says..."Preferences enable: #fastDragWindowForMorphic!