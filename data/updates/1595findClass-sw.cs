'From Squeak2.6 of 11 October 1999 [latest update: #1593] on 8 November 1999 at 2:12:46 pm'!"Change Set:		findClass-swDate:			8 November 1999Author:			Scott WallaceIntegrates enhancements to Browser.findClass submitted recently by Chris Norton, Ted Kaehler, Stephan Rudlof, and Scott Wallace.The result is that when you request 'find class' in any browser offering it, and you type something in to the ensuing request pane...* In the event of an *exact* match, the exactly-matched item is put at the head of the proffered list (Chris).* If the user puts a trailing '.' and if the user's input minus that trailing dot is indeed the name of an existing class, then no list is presented -- instead, the requested class is directly gone to (Ted).* It now works properly in Hierarchy Browsers. (Stephan).* The list offered in response to a Find-class request now only includes classes that are potentially available in the tool at hand.  (Scott)Related fixups:* System-category-list browsers no longer offer menu items in the system-category-singleton pane which are not appropriate for this kind of browser. (Scott)* Stephan's nicer implementation of Browser.selectClass: is included."!!Browser methodsFor: 'initialize-release' stamp: 'sw 11/8/1999 13:51'!openAsMorphSysCatEditing: editString	"Create a pluggable version of all the views for a Browser, including views and controllers."	| window switches codePane |	window _ (SystemWindow labelled: 'later') model: self.	window addMorph: (PluggableListMorph on: self list: #systemCategorySingleton			selected: #indexIsOne changeSelected: #indexIsOne:			menu: #systemCatSingletonMenu: keystroke: #systemCatSingletonKey:from:)		frame: (0@0 extent: 1.0@0.06).	window addMorph: (PluggableListMorph on: self list: #classList			selected: #classListIndex changeSelected: #classListIndex:			menu: #classListMenu: keystroke: #classListKey:from:)		frame: (0@0.06 extent: 0.3333@0.24).	switches _ self buildMorphicSwitches.	window addMorph: switches frame: (0@0.3 extent: 0.3333@0.06).	switches borderWidth: 0.	window addMorph: (PluggableMessageCategoryListMorph on: self list: #messageCategoryList			selected: #messageCategoryListIndex changeSelected: #messageCategoryListIndex:			menu: #messageCategoryMenu: keystroke: #arrowKey:from:	 getRawListSelector: #rawMessageCategoryList)		frame: (0.3333@0.06 extent: 0.3333@0.30).	window addMorph: (PluggableListMorph on: self list: #messageList			selected: #messageListIndex changeSelected: #messageListIndex:			menu: #messageListMenu:shifted:			keystroke: #messageListKey:from:)		frame: (0.6666@0.06 extent: 0.3333@0.30).	codePane _ PluggableTextMorph on: self text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	editString ifNotNil: [codePane editString: editString.					codePane hasUnacceptedEdits: true].	window addMorph: codePane		frame: (0@0.36 corner: 1@1).	window setUpdatablePanesFrom: #( classList messageCategoryList messageList).	^ window! !!Browser methodsFor: 'initialize-release' stamp: 'sw 11/8/1999 13:51'!openSystemCatEditString: aString	"Create a pluggable version of all the views for a Browser, including views and controllers.  The top list view is of the currently selected system class category--a single item list."	| systemCategoryListView classListView messageCategoryListView messageListView browserCodeView topView switchView |	World ifNotNil: [^ self openAsMorphSysCatEditing: aString].	topView _ (StandardSystemView new) model: self.	topView borderWidth: 1.		"label and minSize taken care of by caller"	systemCategoryListView _ PluggableListView on: self		list: #systemCategorySingleton		selected: #indexIsOne 		changeSelected: #indexIsOne:		menu: #systemCatSingletonMenu:		keystroke: #systemCatSingletonKey:from:.	systemCategoryListView window: (0 @ 0 extent: 200 @ 12).	topView addSubView: systemCategoryListView.	classListView _ PluggableListView on: self		list: #classList		selected: #classListIndex		changeSelected: #classListIndex:		menu: #classListMenu:		keystroke: #classListKey:from:.	classListView window: (0 @ 0 extent: 67 @ 62).	topView addSubView: classListView below: systemCategoryListView.	messageCategoryListView _ PluggableListView on: self		list: #messageCategoryList		selected: #messageCategoryListIndex		changeSelected: #messageCategoryListIndex:		menu: #messageCategoryMenu:.	messageCategoryListView window: (0 @ 0 extent: 66 @ 70).	topView addSubView: messageCategoryListView toRightOf: classListView.	switchView _ self buildInstanceClassSwitchView.	switchView 		window: switchView window 		viewport: (classListView viewport bottomLeft 					corner: messageCategoryListView viewport bottomLeft).	switchView borderWidth: 1.	topView addSubView: switchView below: classListView.	messageListView _ PluggableListView on: self		list: #messageList		selected: #messageListIndex		changeSelected: #messageListIndex:		menu: #messageListMenu:shifted:		keystroke: #messageListKey:from:.	messageListView menuTitleSelector: #messageListSelectorTitle.	messageListView window: (0 @ 0 extent: 67 @ 70).	topView addSubView: messageListView toRightOf: messageCategoryListView.	browserCodeView _ PluggableTextView on: self 			text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	browserCodeView window: (0@0 extent: 200@(110-12)).	topView addSubView: browserCodeView below: switchView.	aString ifNotNil: [browserCodeView editString: aString.			browserCodeView hasUnacceptedEdits: true].	topView setUpdatablePanesFrom: #(classList messageCategoryList messageList).	^ topView! !!Browser methodsFor: 'initialize-release' stamp: 'sw 11/8/1999 13:36'!systemCatSingletonKey: aChar from: aView	^ self messageListKey: aChar from: aView! !!Browser methodsFor: 'system category functions' stamp: 'sw 11/8/1999 09:40'!findClass	"Search for a class by name."	| pattern foundClass classNames index toMatch exactMatch potentialClassNames |	self okToChange ifFalse: [^ self classNotFound].	pattern _ FillInTheBlank request: 'Class name or fragment?'.	pattern isEmpty ifTrue: [^ self classNotFound].	toMatch _ (pattern copyWithout: $.) asLowercase.	potentialClassNames _ self potentialClassNames asOrderedCollection.	classNames _ pattern last = $. 		ifTrue: [potentialClassNames select:					[:nm |  nm asLowercase = toMatch]]		ifFalse: [potentialClassNames select: 					[:n | n includesSubstring: toMatch caseSensitive: false]].	classNames isEmpty ifTrue: [^ self classNotFound].	exactMatch _ classNames detect: [:each | each asLowercase = toMatch] ifNone: [nil].	index _ classNames size = 1		ifTrue:	[1]		ifFalse:	[exactMatch			ifNil: [(PopUpMenu labelArray: classNames lines: #()) startUp]			ifNotNil: [classNames addFirst: exactMatch.				(PopUpMenu labelArray: classNames lines: #(1)) startUp]].	index = 0 ifTrue: [^ self classNotFound].	foundClass _ Smalltalk at: (classNames at: index) asSymbol. 	self systemCategoryListIndex: (self systemCategoryList indexOf: foundClass category).	self selectClass: foundClass! !!Browser methodsFor: 'system category functions' stamp: 'sw 11/8/1999 10:04'!potentialClassNames	"Answer the names of all the classes that could be viewed in this browser.  This hook is provided so that HierarchyBrowsers can indicate their restricted subset.  For generic Browsers, the entire list of classes known to Smalltalk is provided, though of course that really only is accurate in the case of full system browsers."	^ Smalltalk classNames! !!Browser methodsFor: 'system category functions' stamp: 'sw 11/8/1999 14:07'!systemCatSingletonMenu: aMenu	^ aMenu labels:'browse allbrowseprintOutfileOutupdaterename...remove' 	lines: #(2 4)	selections:		#(browseAllClasses buildSystemCategoryBrowser		printOutSystemCategory fileOutSystemCategory updateSystemCategories		renameSystemCategory removeSystemCategory)! !!Browser methodsFor: 'class list' stamp: 'sr 10/29/1999 20:28'!selectClass: classNotMeta	self classListIndex: (self classList indexOf: classNotMeta name)! !!HierarchyBrowser methodsFor: 'initialization' stamp: 'sw 11/8/1999 09:38'!potentialClassNames	"Answer the names of all the classes that could be viewed in this browser"	^ self classList collect:		[:aName | aName copyWithout: $ ]! !!HierarchyBrowser methodsFor: 'menu messages' stamp: 'sw 11/8/1999 13:35'!systemCatSingletonKey: aChar from: aView	^ self systemCatListKey: aChar from: aView! !!HierarchyBrowser methodsFor: 'menu messages' stamp: 'sw 11/8/1999 14:08'!systemCatSingletonMenu: aMenu	^ aMenu labels:'find class... (f)browseprintOutfileOutupdaterename...remove' 	lines: #(1 4)	selections:		#(findClass buildSystemCategoryBrowser		printOutSystemCategory fileOutSystemCategory updateSystemCategories		 renameSystemCategory removeSystemCategory )! !"Postscript:"Utilities replaceBrowserInToolsFlap.ScriptingSystem resetStandardPartsBin.!