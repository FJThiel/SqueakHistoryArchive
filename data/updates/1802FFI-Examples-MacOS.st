ExternalStructure subclass: #MacPixPatPtr	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-MacOS'!!MacPixPatPtr methodsFor: 'initialize-release' stamp: 'ar 1/25/2000 11:50'!dispose	handle == nil ifFalse:[		self apiDisposePixPat: self.		handle _ nil.	].! !!MacPixPatPtr methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:59'!makeRGBPattern: aColor	^self apiMakeRGBPat: self with: (MacRGBColor fromColor: aColor)! !!MacPixPatPtr methodsFor: 'api calls' stamp: 'ar 1/25/2000 11:50'!apiDisposePixPat: aPixPat	<apicall: void 'DisposePixPat' (MacPixPatPtr*) module:'InterfaceLib'>	^self externalCallFailed! !!MacPixPatPtr methodsFor: 'api calls' stamp: 'ar 1/25/2000 12:05'!apiMakeRGBPat: aPixPat with: aRGBColor	<apicall: void 'MakeRGBPat' (MacPixPatPtr* MacRGBColor*) module: 'InterfaceLib'>	^self externalCallFailed! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MacPixPatPtr class	instanceVariableNames: ''!!MacPixPatPtr class methodsFor: 'field definition' stamp: 'ar 1/27/2000 01:08'!fields	"MacPixPatPtr defineFields"	"The following really means		typedef void* MacPixPatPtr;	"	^#(nil 'void*') "For now this is just an opaque handle"! !!MacPixPatPtr class methodsFor: 'instance creation' stamp: 'ar 1/27/2000 01:04'!newPixPat	<apicall: MacPixPatPtr* 'NewPixPat' (void) module:'InterfaceLib'>	^self externalCallFailed! !ExternalStructure subclass: #MacPoint	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-MacOS'!!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:34'!getMousePoint	^self apiGetMousePoint: self! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:38'!h	"This method was automatically generated"	^handle signedShortAt: 3! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:38'!h: anObject	"This method was automatically generated"	handle signedShortAt: 3 put: anObject! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:38'!v	"This method was automatically generated"	^handle signedShortAt: 1! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:38'!v: anObject	"This method was automatically generated"	handle signedShortAt: 1 put: anObject! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:39'!x	^self h! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:39'!x: anObject	^self h: anObject! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:39'!y	^self v! !!MacPoint methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:39'!y: anObject	^self v: anObject! !!MacPoint methodsFor: 'api calls' stamp: 'ar 1/25/2000 00:34'!apiGetMousePoint: aMacPoint	<apicall: void 'GetMouse' (MacPoint*) module:'InterfaceLib'>	^self externalCallFailed! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MacPoint class	instanceVariableNames: ''!!MacPoint class methodsFor: 'field definition' stamp: 'ar 1/25/2000 12:15'!fields	"MacPoint defineFields"	^#(		(v	'short')		(h	'short')	)! !!MacPoint class methodsFor: 'examples' stamp: 'ar 1/25/2000 16:57'!lineTo: aPoint	"MacPoint moveTo: 0@0; lineTo: 100@100"	^self apiLineTo: aPoint x with: aPoint y! !!MacPoint class methodsFor: 'examples' stamp: 'ar 1/28/2000 17:50'!macDraw	"MacPoint macDraw"	| pt |	pt _ self new.	pt getMousePoint.	self moveTo: pt.	[Sensor anyButtonPressed] whileFalse:[		pt getMousePoint.		self lineTo: pt.	].	Display forceToScreen.! !!MacPoint class methodsFor: 'examples' stamp: 'ar 1/25/2000 16:56'!moveTo: aPoint	"MacPoint moveTo: 0@0; lineTo: 100@100"	^self apiMoveTo: aPoint x with: aPoint y! !!MacPoint class methodsFor: 'api calls' stamp: 'ar 1/25/2000 00:33'!apiLineTo: x with: y	<apicall: void 'LineTo' (short short) module:'InterfaceLib'>	^self externalCallFailed! !!MacPoint class methodsFor: 'api calls' stamp: 'ar 1/25/2000 00:33'!apiMoveTo: x with: y	<apicall: void 'MoveTo' (short short) module:'InterfaceLib'>	^self externalCallFailed! !ExternalStructure subclass: #MacRGBColor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-MacOS'!!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!blue	"This method was automatically generated"	^handle unsignedShortAt: 5! !!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!blue: anObject	"This method was automatically generated"	handle unsignedShortAt: 5 put: anObject! !!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!green	"This method was automatically generated"	^handle unsignedShortAt: 3! !!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!green: anObject	"This method was automatically generated"	handle unsignedShortAt: 3 put: anObject! !!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!red	"This method was automatically generated"	^handle unsignedShortAt: 1! !!MacRGBColor methodsFor: 'accessing' stamp: 'ar 1/25/2000 00:59'!red: anObject	"This method was automatically generated"	handle unsignedShortAt: 1 put: anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MacRGBColor class	instanceVariableNames: ''!!MacRGBColor class methodsFor: 'field definition' stamp: 'ar 1/25/2000 00:59'!fields	"MacRGBColor defineFields"	^#(		(red 'ushort')		(green 'ushort')		(blue 'ushort')	)! !!MacRGBColor class methodsFor: 'instance creation' stamp: 'ar 1/25/2000 12:12'!fromColor: aColor	^(self new)		red: (aColor red * 16rFFFF) rounded;		green: (aColor green * 16rFFFF) rounded;		blue: (aColor blue * 16rFFFF) rounded;		yourself! !ExternalStructure subclass: #MacRect	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Examples-MacOS'!!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!bottom	"This method was automatically generated"	^handle signedShortAt: 5! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!bottom: anObject	"This method was automatically generated"	handle signedShortAt: 5 put: anObject! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!left	"This method was automatically generated"	^handle signedShortAt: 3! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!left: anObject	"This method was automatically generated"	handle signedShortAt: 3 put: anObject! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!right	"This method was automatically generated"	^handle signedShortAt: 7! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!right: anObject	"This method was automatically generated"	handle signedShortAt: 7 put: anObject! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!top	"This method was automatically generated"	^handle signedShortAt: 1! !!MacRect methodsFor: 'accessing' stamp: 'ar 1/25/2000 11:57'!top: anObject	"This method was automatically generated"	handle signedShortAt: 1 put: anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MacRect class	instanceVariableNames: ''!!MacRect class methodsFor: 'field definition' stamp: 'ar 1/25/2000 11:57'!fields	"MacRect defineFields"	^#(		(top 'short')		(left 'short')		(bottom 'short')		(right 'short')	)! !!MacRect class methodsFor: 'examples' stamp: 'ar 1/28/2000 17:50'!coloredEllipses "MacRect coloredEllipses"	| rnd w h colors n r pat v0 v1 |	colors _ Color colorNames collect:[:cName| (Color perform: cName)].	"convert to PixPats"	colors _ colors collect:[:c| MacPixPatPtr newPixPat makeRGBPattern: c].	rnd _ Random new.	w _ Display width.	h _ Display height.	n _ 0.	r _ MacRect new.	[Sensor anyButtonPressed] whileFalse:[		pat _ colors atRandom.		v0 _ (rnd next * w) asInteger.		v1 _ (rnd next * w) asInteger.		v0 < v1 ifTrue:[r left: v0; right: v1] ifFalse:[r left: v1; right: v0].		v0 _ (rnd next * h) asInteger.		v1 _ (rnd next * h) asInteger.		v0 < v1 ifTrue:[r top: v0; bottom: v1] ifFalse:[r top: v1; bottom: v0].		self apiFillCOval: r with: pat.		self apiFrameOval: r.		n _ n + 1.		(n \\ 10) = 0 ifTrue:[n printString displayAt: 0@0].	].	colors do:[:c| c dispose].	Display forceToScreen.! !!MacRect class methodsFor: 'examples' stamp: 'ar 1/28/2000 17:50'!coloredRectangles "MacRect coloredRectangles"	| rnd w h colors n r pat v0 v1 nPixels time |	colors _ Color colorNames collect:[:cName| (Color perform: cName)].	"convert to PixPats"	colors _ colors collect:[:c| MacPixPatPtr newPixPat makeRGBPattern: c].	rnd _ Random new.	w _ Display width.	h _ Display height.	n _ 0.	r _ MacRect new.	nPixels _ 0.	time _ Time millisecondClockValue.	[Sensor anyButtonPressed] whileFalse:[		pat _ colors atRandom.		v0 _ (rnd next * w) asInteger.		v1 _ (rnd next * w) asInteger.		v0 < v1 ifTrue:[r left: v0; right: v1] ifFalse:[r left: v1; right: v0].		v0 _ (rnd next * h) asInteger.		v1 _ (rnd next * h) asInteger.		v0 < v1 ifTrue:[r top: v0; bottom: v1] ifFalse:[r top: v1; bottom: v0].		self apiFillCRect: r with: pat.		self apiFrameRect: r.		n _ n + 1.		nPixels _ nPixels + ((r right - r left) * (r bottom - r top)).		(n \\ 100) = 0 ifTrue:[			'Pixel fillRate: ', (nPixels * 1000 // (Time millisecondClockValue - time))				asStringWithCommas displayAt: 0@0].	].	colors do:[:c| c dispose].	Display forceToScreen.! !!MacRect class methodsFor: 'examples' stamp: 'ar 1/28/2000 19:42'!macDraw	"MacRect macDraw"	^MacPoint macDraw! !!MacRect class methodsFor: 'api calls' stamp: 'ar 1/25/2000 12:06'!apiFillCOval: r with: pat	<apicall: void 'FillCOval' (MacRect* MacPixPatPtr*) module:'InterfaceLib'>	^self externalCallFailed! !!MacRect class methodsFor: 'api calls' stamp: 'ar 1/25/2000 12:04'!apiFillCRect: r with: pat	<apicall: void 'FillCRect' (MacRect* MacPixPatPtr*) module:'InterfaceLib'>	^self externalCallFailed! !!MacRect class methodsFor: 'api calls' stamp: 'ar 1/25/2000 12:08'!apiFrameOval: r	<apicall: void 'FrameOval' (MacRect*) module:'InterfaceLib'>	^self externalCallFailed! !!MacRect class methodsFor: 'api calls' stamp: 'ar 1/25/2000 12:16'!apiFrameRect: r	<apicall: void 'FrameRect' (MacRect*) module:'InterfaceLib'>	^self externalCallFailed! !MacPixPatPtr compileFields!MacPoint compileFields!MacRGBColor compileFields!MacRect compileFields!