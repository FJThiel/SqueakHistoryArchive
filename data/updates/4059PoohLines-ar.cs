'From Squeak3.1alpha of 28 February 2001 [latest update: #4054] on 22 May 2001 at 8:38:08 pm'!"Change Set:		PoohLines-arDate:			22 May 2001Author:			Andreas RaabThe CS fixes Pooh outlines when using accelerated rendering w/o direct frame buffer access."!!B3DRenderEngine methodsFor: 'indexed primitives' stamp: 'ar 5/22/2001 20:10'!drawLines: vertexArray normals: normalArray colors: colorArray texCoords: texCoordArray	vertexBuffer reset.	vertexBuffer primitive: 2.	vertexBuffer 		loadIndexed: #()		vertices: vertexArray 		normals: normalArray 		colors: colorArray 		texCoords: texCoordArray.	^self renderPrimitive.! !!B3DRenderEngine methodsFor: 'indexed primitives' stamp: 'ar 5/22/2001 20:10'!drawPoints: vertexArray normals: normalArray colors: colorArray texCoords: texCoordArray	vertexBuffer reset.	vertexBuffer primitive: 1.	vertexBuffer 		loadIndexed: #()		vertices: vertexArray 		normals: normalArray 		colors: colorArray 		texCoords: texCoordArray.	^self renderPrimitive.! !!B3DRenderEngine methodsFor: 'testing' stamp: 'ar 5/22/2001 20:04'!hasFrameBufferAccess	^true! !!B3DHardwareEngine methodsFor: 'testing' stamp: 'ar 5/22/2001 20:03'!hasFrameBufferAccess	"Return true if we can access the receiver's frame buffer directly"	^target notNil! !!WonderlandCameraMorph methodsFor: 'drawing' stamp: 'ar 5/22/2001 20:11'!drawAcceleratedOn: aCanvas	| myRect |	myRect _ (self bounds: bounds in: nil) intersect: (0@0 extent: DisplayScreen actualScreenSize).	(myRenderer notNil and:[myRenderer isAccelerated]) ifFalse:[		myRenderer ifNotNil:[myRenderer destroy].		myRenderer _ nil.	].	myRenderer ifNotNil:[		myRenderer _ myRenderer bufferRect: myRect.	].	myRenderer ifNil:[		myRenderer _ B3DHardwareEngine newIn: myRect.		myRenderer ifNil:[^self drawSimulatedOn: aCanvas].	] ifNotNil:[		myRenderer reset.	].	myRenderer viewportOffset: aCanvas origin.	myRenderer clipRect: aCanvas clipRect.	myCamera drawSceneBackground ifFalse:[		myRenderer restoreMorphicBackground: myRect under: self.	].	self renderOn: myRenderer.	self outline ifNotNil:[		self drawAcceleratedOutlineOn: myRenderer.	].	myRenderer restoreMorphicForeground: myRect above: self.	Display addExtraRegion: myRect for: self.! !!WonderlandCameraMorph methodsFor: 'drawing' stamp: 'ar 5/22/2001 20:35'!drawAcceleratedOutlineOn: aRenderer	"Draw a pooh outline on an accelerated renderer."	| vtxList scale out pt vtx offset z |	"NOTE: The test below captures two distinct cases.		#1: The software renderer (which does not support lines)		#2: The D3D renderer (which does not support line attributes)."	myRenderer hasFrameBufferAccess ifTrue:[		myRenderer provideOverlayCanvasDuring:[:cc| self sketchOn: cc].	].	z _ 0.5.	vtxList _ self outline vertices.	vtxList size < 2 ifTrue:[^self].	out _ WriteStream on: (B3DVector3Array new: vtxList size * 2).	out nextPut: vtxList first @ z.	2 to: vtxList size-1 do:[:i|		pt _ vtxList at: i.		vtx _ B3DVector3 x: pt x y: pt y z: z.		out nextPut: vtx; nextPut: vtx].	out nextPut: vtxList last @ z.	out _ out contents.	offset _ bounds origin + bounds corner * 0.5 @ 0.	scale _ (2.0 / bounds extent x) @ (-2.0 / bounds extent y) @ 1.	myRenderer reset. "get rid of everything"	myRenderer material: (B3DMaterial new emission: Color red).	myRenderer scaleBy: scale.	myRenderer translateBy: offset negated.	myRenderer lineWidth: 5.	myRenderer drawLines: out normals: nil colors: nil texCoords: nil.! !