'From Squeak2.9alpha of 12 June 2000 [latest update: #2440] on 29 June 2000 at 6:56:17 am'!"Change Set:		B3DPrimBounds-arDate:			29 June 2000Author:			Andreas RaabSupport for 2D bounding boxes in the 3D accelerated version."!!B3DAcceleratorPlugin methodsFor: 'primitives-rasterizer' stamp: 'ar 6/29/2000 06:55'!primitiveProcessVertexBuffer	| idxCount vtxCount vtxArray idxArray texHandle primType result box array |	self export: true.	self var: #idxArray type: 'int *'.	self var: #vtxArray type: 'float *'.	self var: #box declareC:'int box[4] = { 0, 0, 0, 0 }'.	interpreterProxy methodArgumentCount = 6		ifFalse:[^interpreterProxy primitiveFail].	idxCount _ interpreterProxy stackIntegerValue: 0.	vtxCount _ interpreterProxy stackIntegerValue: 2.	texHandle _ interpreterProxy stackIntegerValue: 4.	primType _ interpreterProxy stackIntegerValue: 5.	interpreterProxy failed ifTrue:[^nil].	vtxArray _ self stackPrimitiveVertexArray: 3 ofSize: vtxCount.	idxArray _ self stackPrimitiveIndexArray: 1 ofSize: idxCount validate: true forVertexSize: vtxCount.	(vtxArray == nil or:[idxArray == nil 		or:[primType < 1 or:[primType > PrimTypeMax 			or:[interpreterProxy failed]]]])				ifTrue:[^interpreterProxy primitiveFail].	result _ self cCode:'b3dxRasterizeVertexBuffer(primType, texHandle, vtxArray, vtxCount, idxArray, idxCount, box)' inSmalltalk:[false].	result ifFalse:[^interpreterProxy primitiveFail].	array _ interpreterProxy instantiateClass: interpreterProxy classArray indexableSize: 4.	interpreterProxy storeInteger: 0 ofObject: array withValue: (box at: 0).	interpreterProxy storeInteger: 1 ofObject: array withValue: (box at: 1).	interpreterProxy storeInteger: 2 ofObject: array withValue: (box at: 2).	interpreterProxy storeInteger: 3 ofObject: array withValue: (box at: 3).	interpreterProxy failed ifTrue:[^nil].	interpreterProxy pop: 7. "pop args + rcvr"	interpreterProxy push: array.! !!B3DAcceleratorPlugin class methodsFor: 'translation' stamp: 'ar 6/29/2000 06:53'!headerFile^'/* Header file for 3D accelerator plugin *//* module initialization support */int b3dxInitialize(void); /* return true on success, false on error */int b3dxShutdown(void); /* return true on success, false on error *//* Display support primitives */int b3dxCreateDisplaySurface(int w, int h, int d); /* return handle or -1 on error */int b3dxDestroyDisplaySurface(int handle); /* return true on success, false on error */int b3dxDisplayColorMasks(int handle, int masks[4]); /* return true on success, false on error */int b3dxSupportsDisplayDepth(int depth); /* return true or false */int b3dxFlushDisplaySurface(int handle); /* return true on success, false on error */int b3dxFinishDisplaySurface(int handle); /* return true on success, false on error *//* optional accelerated blt primitives */int b3dxFillDisplaySurface(int handle, int pv, int x, int y, int w, int h); /* return true on success, false on error */int b3dxBltToDisplay(int displayHandle, int formHandle, int dstX, int dstY, int srcX, int srcY, int w, int h); /* return true on success, false on error */int b3dxBltFromDisplay(int displayHandle, int formHandle, int dstX, int dstY, int srcX, int srcY, int w, int h); /* return true on success, false on error *//* Texture support primitives */int b3dxAllocateTexture(int w, int h, int d); /* return handle or -1 on error */int b3dxDestroyTexture(int handle); /* return true on success, false on error */int b3dxActualTextureDepth(int handle); /* return depth or <0 on error */int b3dxActualTextureWidth(int handle); /* return width or <0 on error */int b3dxActualTextureHeight(int handle); /* return height or <0 on error */int b3dxTextureColorMasks(int handle, int masks[4]);  /* return true on success, false on error *//* Form support primitives */int b3dxAllocateForm(int w, int h, int d); /* return handle or -1 on error */int b3dxDestroyForm(int handle); /* return true on success, false on error */int b3dxFormColorMasks(int handle, int masks[4]);  /* return true on success, false on error *//* Rasterizer support primitives */int b3dxSetViewport(int x, int y, int w, int h); /* return true on success, false on error */int b3dxClearDepthBuffer(void); /* return true on success, false on error */int b3dxRasterizeVertexBuffer(int primType, int texHandle, float *vtxArray, int vtxSize, int *idxArray, int idxSize, int *bounds); /* return true on success, false on error */'.! !!B3DHardwareRasterizer methodsFor: 'processing' stamp: 'ar 6/29/2000 06:48'!processVertexBuffer: vb	| box |	box _ self primProcessVB: vb primitive 			texture: (target textureHandleOf: texture) 			vertices: vb vertexArray 			vertexCount: vb vertexCount 			faces: vb indexArray 			faceCount: vb indexCount.	^(box at: 1) @ (box at: 2) corner: (box at: 3) @ (box at: 4)! !