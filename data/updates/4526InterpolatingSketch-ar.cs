'From Squeak3.2alpha of 2 October 2001 [latest update: #4525] on 19 November 2001 at 10:40:55 pm'!!SketchMorph methodsFor: 'accessing' stamp: 'ar 11/19/2001 21:58'!useInterpolation	^self valueOfProperty: #useInterpolation ifAbsent:[false].! !!SketchMorph methodsFor: 'accessing' stamp: 'ar 11/19/2001 21:58'!useInterpolation: aBool	aBool == true		ifTrue:[self setProperty: #useInterpolation toValue: aBool]		ifFalse:[self removeProperty: #useInterpolation].	self layoutChanged. "to regenerate the form"! !!SketchMorph methodsFor: 'drawing' stamp: 'ar 11/19/2001 22:36'!drawInterpolatedImage: aForm on: aCanvas	"Draw the given form onto the canvas using the Balloon 3D engine"	| engine |	engine _ (B3DRenderEngine defaultForPlatformOn: aCanvas form).	engine == nil ifTrue:[		self useInterpolation: false.		^self generateRotatedForm].	"Setup the engine"	engine viewport: aCanvas form boundingBox.	"Install the material to be used (using a plain white emission color)"	engine material: (B3DMaterial new emission: Color white).	"Install the texture"	engine texture: aForm.	"Draw the mesh"	engine render: (B3DIndexedQuadMesh new plainTextureRect).	"and finish"	engine finish.! !!SketchMorph methodsFor: 'drawing' stamp: 'ar 11/19/2001 22:36'!generateInterpolatedForm	"Draw the given form onto the canvas using the Balloon 3D engine"	| aCanvas |	rotatedForm _ Form extent: bounds extent asIntegerPoint depth: originalForm depth.	aCanvas _ rotatedForm getCanvas.	^self drawInterpolatedImage: originalForm on: aCanvas! !!SketchMorph methodsFor: 'drawing' stamp: 'ar 11/19/2001 22:34'!generateRotatedForm	"Compute my rotatedForm and offsetWhenRotated."	| scalePt smoothPix pair |	scalePoint ifNil:[scalePoint _ 1@1].	scalePt _ scalePoint x abs @ scalePoint y abs.	rotationStyle == #none ifTrue:[scalePt _ 1@1].	((scalePt x < 1.0) or: [scalePt y < 1.0])		ifTrue: [smoothPix _ 2]		ifFalse: [smoothPix _ 1].	rotationStyle = #leftRight ifTrue:[		self heading asSmallAngleDegrees < 0.0 			ifTrue:[scalePt _ scalePt x negated @ scalePt y]].	rotationStyle = #upDown ifTrue:[		self heading asSmallAngleDegrees abs > 90.0			ifTrue:[scalePt _ scalePt x @ scalePt y negated]].	scalePt = (1@1) ifTrue:[		rotatedForm _ originalForm.	] ifFalse:[		"ar 11/19/2001: I am uncertain what happens in the case of rotationStyle ~~ normal"		(rotationStyle == #normal and:[self useInterpolation]) ifTrue:[			^self generateInterpolatedForm		].		pair _ WarpBlt current			rotate: originalForm			degrees: 0			center: originalForm boundingBox center			scaleBy: scalePt			smoothing: smoothPix.		rotatedForm _ pair first.	].! !!SketchMorph methodsFor: 'menu' stamp: 'ar 11/19/2001 22:38'!addCustomMenuItems: aCustomMenu hand: aHandMorph	super addCustomMenuItems: aCustomMenu hand: aHandMorph.	aCustomMenu add: 'choose new graphic...' target: self action: #chooseNewGraphic.	aCustomMenu add: 'set as background' target: rotatedForm action: #setAsBackground.	aCustomMenu addUpdating: #roundedCornersString target: self action: #toggleCornerRounding.	aCustomMenu addUpdating: #useInterpolationString target: self action: #toggleInterpolation.	self addPaintingItemsTo: aCustomMenu hand: aHandMorph! !!SketchMorph methodsFor: 'menu' stamp: 'ar 11/19/2001 22:38'!toggleInterpolation	^self useInterpolation: self useInterpolation not! !!SketchMorph methodsFor: 'menu' stamp: 'ar 11/19/2001 22:39'!useInterpolationString	^ (self useInterpolation ifTrue:['<yes>'] ifFalse:['<no>']),'smooth image'! !