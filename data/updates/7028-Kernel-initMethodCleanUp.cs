'From Squeak3.9alpha of 4 July 2005 [latest update: #7020] on 4 April 2006 at 10:12:48 pm'!!Set methodsFor: 'private' stamp: 'nice 4/4/2006 22:09'!initialize: n	"Initialize array to an array size of n"	array _ Array new: n.	tally _ 0! !!KeyedSet methodsFor: 'private' stamp: 'nice 4/4/2006 22:09'!initialize: n
	super initialize: n.
	keyBlock _ [:element | element key].
! !!Set class methodsFor: 'instance creation' stamp: 'nice 4/4/2006 22:10'!new: nElements	"Create a Set large enough to hold nElements without growing"	^ super basicNew initialize: (self sizeFor: nElements)! !!MethodDictionary class methodsFor: 'instance creation' stamp: 'nice 4/4/2006 22:09'!new: nElements	"Create a Dictionary large enough to hold nElements without growing.	Note that the basic size must be a power of 2.	It is VITAL (see grow) that size gets doubled if nElements is a power of 2"	| size |	size _ 1 bitShift: nElements highBit.	^ (self basicNew: size) initialize: size! !!SharedQueue methodsFor: 'private' stamp: 'nice 4/4/2006 22:09'!initialize: size	contentsArray _ Array new: size.	readPosition _ 1.	writePosition _ 1.	accessProtect _ Semaphore forMutualExclusion.	readSynch _ Semaphore new! !!SharedQueue class methodsFor: 'instance creation' stamp: 'nice 4/4/2006 22:10'!new: anInteger 	^super new initialize: anInteger! !!WeakSet methodsFor: 'private' stamp: 'nice 4/4/2006 22:09'!initialize: n	"Initialize array to an array size of n"	flag _ Object new.	array _ WeakArray new: n.	array atAllPut: flag.	tally _ 0! !WeakSet removeSelector: #init:!SharedQueue removeSelector: #init:!KeyedSet removeSelector: #init:!Set removeSelector: #init:!