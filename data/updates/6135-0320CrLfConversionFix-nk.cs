'From Squeakland 3.8.5976 of 25 August 2004 [latest update: #308] on 5 September 2004 at 1:01:40 pm'!"Change Set:		CrLfConversionFix-nkDate:			5 September 2004Author:			Ned KonzWhen CrLfFileStream (or MultiByteFileStream) was being used to create files with wantsLineEndConversion set to true, the line end conversion was not being set right.This caused (for instance) VMMaker to write out its source files with CR line endings on a Unix system that should have been using LF."!!CrLfFileStream methodsFor: 'access' stamp: 'nk 9/5/2004 12:58'!lineEndConvention	^lineEndConvention! !!MultiByteFileStream methodsFor: 'access' stamp: 'nk 9/5/2004 12:57'!lineEndConvention	^lineEndConvention! !!MultiByteFileStream methodsFor: 'crlf private' stamp: 'nk 9/5/2004 12:50'!detectLineEndConvention	"Detect the line end convention used in this stream. The result may be either #cr, #lf or #crlf."	| char numRead state |	self isBinary ifTrue: [^ self error: 'Line end conventions are not used on binary streams'].	self wantsLineEndConversion ifFalse: [^ lineEndConvention _ nil.].	self closed ifTrue: [^ lineEndConvention _ LineEndDefault.].	"Default if nothing else found"	numRead _ 0.	state _ converter saveStateOf: self.	lineEndConvention _ nil.	[super atEnd not and: [numRead < LookAheadCount]]		whileTrue: 			[char _ self next.			char = Lf				ifTrue: 					[converter restoreStateOf: self with: state.					^ lineEndConvention _ #lf].			char = Cr				ifTrue: 					[self peek = Lf						ifTrue: [lineEndConvention _ #crlf]						ifFalse: [lineEndConvention _ #cr].					converter restoreStateOf: self with: state.					^ lineEndConvention].			numRead _ numRead + 1].	converter restoreStateOf: self with: state.	^ lineEndConvention _ LineEndDefault.! !!MultiByteFileStream methodsFor: 'crlf private' stamp: 'nk 9/5/2004 12:51'!doConversion	^self wantsLineEndConversion and: [ lineEndConvention notNil ]! !