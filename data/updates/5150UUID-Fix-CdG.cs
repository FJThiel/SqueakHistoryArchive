'From Squeak3.4alpha of ''11 November 2002'' [latest update: #5109] on 19 November 2002 at 9:57:55 pm'!"Change Set:		UUID-Fix-CdGDate:			19 November 2002Author:			Cees de GrootThis patch tries to make it less likely that the same UUID is generated twice:- On startup, the default generator is flushed;- The system tries harder to get a quality random seed, first from /dev/urandom  (on lots of Unix systems), then from the sound input. If they both fail, it  generates one based on the millisecond clock and the current date/time"!!UUIDGenerator methodsFor: 'instance creation' stamp: 'CdG 11/19/2002 21:30'!setupRandom	randomCounter _ 0.	randomGenerator _ Random seed: self makeSeed.! !!UUIDGenerator methodsFor: 'random seed' stamp: 'CdG 11/19/2002 21:54'!makeSeed	"Try various methods of getting good seeds"	| seed |	seed := self makeUnixSeed.	seed ifNotNil: [^seed].	seed := self makeSeedFromSound.	seed ifNotNil: [^seed].		"default"	[seed := (Time millisecondClockValue bitAnd: 16r3FFFFFFF) bitXor: self hash.	seed := seed bitXor: (TimeStamp current asSeconds bitAnd: 16r3FFFFFFF).	seed = 0] whileTrue: ["Try again if ever get a seed = 0"].	^seed! !!UUIDGenerator methodsFor: 'random seed' stamp: 'CdG 11/19/2002 21:52'!makeSeedFromSound	| answer |	[answer := DigitalSignatureAlgorithm new randomBitsFromSoundInput: 32	] ifCurtailed: [answer := nil].	^answer! !!UUIDGenerator methodsFor: 'random seed' stamp: 'CdG 11/19/2002 21:46'!makeUnixSeed	| strm answer |	[strm := (FileStream readOnlyFileNamed: '/dev/urandom') binary.	answer := Integer		byte1: strm next		byte2: strm next		byte3: strm next		byte4: strm next.	strm close.	] ifCurtailed: [answer := nil].	^answer! !!UUIDGenerator class methodsFor: 'class initialization' stamp: 'CdG 11/19/2002 21:06'!initialize	Smalltalk addToStartUpList: self after: nil.! !!UUIDGenerator class methodsFor: 'class initialization' stamp: 'CdG 11/19/2002 21:07'!startUp	Default := nil! !UUIDGenerator initialize!