'From Squeak3.2alpha of 3 October 2001 [latest update: #4461] on 29 October 2001 at 6:17:47 pm'!"Change Set:		showHomeCategory-swDate:			29 October 2001Author:			Scott WallaceAdds (to the shifted-selector-list menu) a command to show a method in its home category.  This is useful if you have found the method alphabetically from the 'all' category and now want to see it in the company of its category confreres, or if you are using a tool capable of having a method be in more than one category, such as a Lexicon.  Where the command is relevant, it can also be invoked by cmd-shift-C.  Note that this feature has long been available in the Lexicon and InstanceBrowser tools, where it can also be directly invoked by clicking on the 'cat'"!!CodeHolder methodsFor: 'message list menu' stamp: 'sw 10/8/2001 14:32'!messageListKey: aChar from: view	"Respond to a Command key.  I am a model with a code pane, and I also	have a listView that has a list of methods.  The view knows how to get	the list and selection."	| sel class |	aChar == $D ifTrue: [^ self toggleDiffing].	sel _ self selectedMessageName.	aChar == $m ifTrue:  "These next two put up a type in if no message selected"		[^ self useSelector: sel orGetSelectorAndSendQuery: #browseAllImplementorsOf: to: Smalltalk].	aChar == $n ifTrue: 		[^ self useSelector: sel orGetSelectorAndSendQuery: #browseAllCallsOn: to: Smalltalk].	"The following require a class selection"	(class _ self selectedClassOrMetaClass) ifNil: [^ self arrowKey: aChar from: view].	aChar == $b ifTrue: [^ Browser fullOnClass: class selector: sel].	aChar == $N ifTrue: [^ self browseClassRefs].	aChar == $i ifTrue: [^ self methodHierarchy].	aChar == $h ifTrue: [^ self classHierarchy].	aChar == $p ifTrue: [^ self browseFullProtocol].	"The following require a method selection"	sel ifNotNil: 		[aChar == $o ifTrue: [^ self fileOutMessage].		aChar == $v ifTrue: [^ self browseVersions].		aChar == $O ifTrue: [^ self openSingleMessageBrowser].		aChar == $x ifTrue: [^ self removeMessage].		(aChar == $C and: [self canShowMultipleMessageCategories])			ifTrue: [^ self showHomeCategory]].	^ self arrowKey: aChar from: view! !!CodeHolder methodsFor: 'message category functions' stamp: 'sw 10/8/2001 14:19'!canShowMultipleMessageCategories	"Answer whether the receiver is capable of showing multiple message categories"	^ false! !!Browser methodsFor: 'message category functions' stamp: 'sw 10/8/2001 14:10'!canShowMultipleMessageCategories	"Answer whether the receiver is capable of showing multiple message categories"	^ true! !!Browser methodsFor: 'message category functions' stamp: 'sw 10/8/2001 15:08'!showHomeCategory	"Show the home category of the selected method.  This is only really useful if one is in a tool that supports the showing of categories.  Thus, it's good in browsers and hierarchy browsers but not in message-list browsers"	| aSelector |	self okToChange ifTrue:		[(aSelector _ self selectedMessageName) ifNotNil:			[self selectOriginalCategoryForCurrentMethod.			self selectedMessageName: aSelector]]! !!Browser methodsFor: 'message functions' stamp: 'sw 10/8/2001 14:32'!shiftedMessageListMenu: aMenu	"Fill aMenu with the items appropriate when the shift key is held down"	aMenu addList: #(		('method pane' 							makeIsolatedCodePane)		('tile scriptor'							openSyntaxView)		"('make a scriptor'						makeScriptor)"		('toggle diffing (D)'						toggleDiffing)		('implementors of sent messages'			browseAllMessages)		-		('local senders of...'						browseLocalSendersOfMessages)		('local implementors of...'				browseLocalImplementors)		-		('spawn sub-protocol'					spawnProtocol)		('spawn full protocol'					spawnFullProtocol)		-		('sample instance'						makeSampleInstance)		('inspect instances'						inspectInstances)		('inspect subinstances'					inspectSubInstances)).	self addExtraShiftedItemsTo: aMenu.	aMenu addList: #(		-		('change category...'					changeCategory)).	self canShowMultipleMessageCategories ifTrue: [aMenu addList:		 #(('show category (C)'						showHomeCategory))].	aMenu addList: #(		-		('change sets with this method'			findMethodInChangeSets)		('revert to previous version'				revertToPreviousVersion)		('remove from current change set'		removeFromCurrentChanges)		('revert & remove from changes'		revertAndForget)		('add to current change set'				adoptMessageInCurrentChangeset)		('copy up or copy down...'				copyUpOrCopyDown)		-		('fetch documentation'					fetchDocPane)		('more...' 								unshiftedYellowButtonActivity)).	^ aMenu! !!Browser methodsFor: 'message list' stamp: 'sw 10/8/2001 13:37'!selectedMessageName: aSelector	"Make the given selector be the selected message name"	| anIndex |	anIndex _ self messageList indexOf: aSelector.	anIndex > 0 ifTrue:		[self messageListIndex: anIndex]! !!MessageSet methodsFor: 'message category functions' stamp: 'sw 10/8/2001 14:10'!canShowMultipleMessageCategories	"Answer whether the receiver is capable of showing multiple message categories"	^ false! !!Lexicon methodsFor: 'control buttons' stamp: 'sw 10/8/2001 14:33'!homeCategoryButton	"Answer a button that brings up a menu.  Useful when adding new features, but at present is between uses"	^ IconicButton new target: self;		borderWidth: 0;		labelGraphic: (ScriptingSystem formAtKey: #Cat);		color: Color transparent; 		actWhen: #buttonUp;		actionSelector: #showHomeCategory;		setBalloonText: 'show this method''s home category';		yourself! !!Lexicon methodsFor: 'menu commands' stamp: 'sw 10/18/2001 08:10'!showCategory	"A revectoring blamable on history.  Not sent in the image, but grandfathered buttons may still send this."	^ self showHomeCategory! !!Lexicon methodsFor: 'menu commands' stamp: 'sw 10/8/2001 14:33'!showHomeCategory	"Continue to show the current selector, but show it within the context of its primary category"	| aSelector |	(aSelector _ self selectedMessageName) ifNotNil:		[self preserveSelectorIfPossibleSurrounding:			[self setToShowSelector: aSelector]]! !!Lexicon methodsFor: 'menu commands' stamp: 'sw 10/8/2001 14:34'!showMainCategory	"Continue to show the current selector, but show it within the context of its primary category.  Preserved for backward compatibility with pre-existing buttons."	^ self showHomeCategory! !!Lexicon methodsFor: 'message category functions' stamp: 'sw 10/8/2001 14:25'!canShowMultipleMessageCategories	"Answer whether the receiver is capable of showing multiple message categories"	^ true! !