'From Squeak3.7alpha of ''11 September 2003'' [latest update: #5595] on 12 December 2003 at 5:05:01 pm'!"Change Set:		deprecatedExplanationFix-mdDate:			12 December 2003Author:			Marcus DenkerThis changes all sender of deprecatedExplanation: (which is deprecated)to use deprecated: instead"!!Object methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:02'!beep	"If sound system is present use it, otherwise do whatever we can."		| classOrNil |	self deprecated: 'Use Beeper>>beep or Beeper>>beepPrimitive instead of 1 beep.'.	classOrNil := self class environment at: #SampledSound ifAbsent: [nil].	classOrNil ifNil: [self primitiveBeep] ifNotNil: [classOrNil beep]			! !!Object methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:02'!beep: soundName	"Make the given sound, unless the making of sound is disabled in Preferences."	self deprecated: 'Use SampledSound>>playSoundNamed: instead.'.	Preferences soundsEnabled		ifTrue: [self playSoundNamed: soundName]! !!Object methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:02'!beepPrimitive	"Beep in the absence of sound support"		self deprecated: 'Use Beeper>>beep or Beeper>>beepPrimitive instead of 1 beep.'.	Beeper beepPrimitive! !!Object methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:02'!playSoundNamed: soundName	"Play the sound with the given name. Do nothing if this image lacks sound playing facilities."	self deprecated: 'Use SampledSound>>playSoundNamed: instead.'.	Smalltalk at: #SampledSound ifPresent: [:sampledSound |		sampledSound playSoundNamed: soundName asString].! !!ArrayedCollection methodsFor: 'objects from disk' stamp: 'md 12/12/2003 17:01'!swapBytesFrom: start to: stop	"Perform a bigEndian/littleEndian byte reversal of my words.	We only intend this for non-pointer arrays.  Do nothing if I contain pointers."	| hack blt |	self deprecated: 'Use BitMap class>>swapBytesIn:from:to:'.	self class isPointers | self class isWords not ifTrue: [^ self].	"The implementation is a hack, but fast for large ranges"	hack _ Form new hackBits: self.	blt _ (BitBlt toForm: hack) sourceForm: hack.	blt combinationRule: Form reverse.  "XOR"	blt sourceY: start-1; destY: start-1; height: stop-start+1; width: 1.	blt sourceX: 0; destX: 3; copyBits.  "Exchange bytes 0 and 3"	blt sourceX: 3; destX: 0; copyBits.	blt sourceX: 0; destX: 3; copyBits.	blt sourceX: 1; destX: 2; copyBits.  "Exchange bytes 1 and 2"	blt sourceX: 2; destX: 1; copyBits.	blt sourceX: 1; destX: 2; copyBits.! !!Morph methodsFor: 'change reporting' stamp: 'md 12/12/2003 17:01'!addedOrRemovedSubmorph: aMorph	self deprecated:'Use #privateInvalidateMorph: instead'.	^self privateInvalidateMorph: aMorph "which is the equvivalent here"! !!Morph methodsFor: 'private' stamp: 'md 12/12/2003 17:02'!privateRemoveMorph: aMorph	self deprecated: 'Use #removeMorph: instead.'.	^self removeMorph: aMorph! !!SystemDictionary methodsFor: 'image, changes name' stamp: 'md 12/12/2003 17:03'!sourcesName	"Answer the full path to the version-stable source code"	self deprecated: 'Use SmalltalkImage current sourcesName'.	^ self vmPath , SourceFileVersionString , FileDirectory dot , 'sources'! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!extraVMMemory	"Answer the current setting of the 'extraVMMemory' VM parameter. See the comment in extraVMMemory: for details."	self deprecated: 'Use SmalltalkImage current extraVMMemory'.	^ Smalltalk vmParameterAt: 23! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!extraVMMemory: extraBytesToReserve	"Request that the given amount of extra memory be reserved for use by the virtual machine to leave extra C heap space available for things like plugins, network and file buffers, and so on. This request is stored when the image is saved and honored when the image is next started up. Answer the previous value of this parameter."	self deprecated: 'Use SmalltalkImage current extraVMMemory:'.	extraBytesToReserve < 0		ifTrue: [self error: 'VM memory reservation must be non-negative'].	^ Smalltalk vmParameterAt: 23 put: extraBytesToReserve! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!listBuiltinModules	"Smalltalk listBuiltinModules"	"Return a list of all builtin modules (e.g., plugins). Builtin plugins are those that are compiled with the VM directly, as opposed to plugins residing in an external shared library. The list will include all builtin plugins regardless of whether they are currently loaded or not. Note that the list returned is not sorted!!"	| modules index name |	self deprecated: 'Use SmalltalkImage current listBuiltinModules'.	modules _ WriteStream on: Array new.	index _ 1.	[true] whileTrue:[		name _ self listBuiltinModule: index.		name ifNil:[^modules contents].		modules nextPut: name.		index _ index + 1.	].! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!listLoadedModules	"Smalltalk listLoadedModules"	"Return a list of all currently loaded modules (e.g., plugins). Loaded modules are those that currently in use (e.g., active). The list returned will contain all currently active modules regardless of whether they're builtin (that is compiled with the VM) or external (e.g., residing in some external shared library). Note that the returned list is not sorted!!"	| modules index name |	self deprecated: 'Use SmalltalkImage current listBuiltinModules'.	modules _ WriteStream on: Array new.	index _ 1.	[true] whileTrue:[		name _ self listLoadedModule: index.		name ifNil:[^modules contents].		modules nextPut: name.		index _ index + 1.	].! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!osVersion	"Return the version number string of the platform we're running on"	self deprecated: 'Use SmalltalkImage current osVersion'.	^(self getSystemAttribute: 1002) asString! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!platformName	"Return the name of the platform we're running on"	self deprecated: 'Use SmalltalkImage current platformName'.	^self getSystemAttribute: 1001! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:02'!platformSubtype	"Return the subType of the platform we're running on"	self deprecated: 'Use SmalltalkImage current platformSubtype'.	^self getSystemAttribute: 1003! !!SystemDictionary methodsFor: 'miscellaneous' stamp: 'md 12/12/2003 17:03'!vmVersion	"Smalltalk vmVersion nil"	"Return a string identifying the interpreter version"	self deprecated: 'Use SmalltalkImage current vmVersion'.	^self getSystemAttribute: 1004! !!SystemDictionary methodsFor: 'profiling' stamp: 'md 12/12/2003 17:03'!profile: aBlock	"Make a virtual machine profile of the given block."	"Note: Profiling support is provided so that VM implementors	 can better understand and improve the efficiency of the virtual	 machine. To use it, you must be running a version of the	 virtual machine compiled with profiling enabled (which	 makes it much slower than normal even when not profiling).	 You will also need the CodeWarrior profile reader application."	self deprecated: 'Use SmalltalkImage current profile: aBlock'.	self stopProfiling.	self clearProfile.	self startProfiling.	aBlock value.	self stopProfiling.	self dumpProfile.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'md 12/12/2003 17:03'!setPlatformPreferences	"Set some platform specific preferences on system startup"	self deprecated: 'Use SmalltalkImage current setPlatformPreferences'. 	! !!SystemDictionary methodsFor: 'sources, change log' stamp: 'md 12/12/2003 17:02'!isBigEndian	self deprecated: 'Use SmalltalkImage current isBigEndian'.	^self endianness == #big! !!SystemDictionary methodsFor: 'sources, change log' stamp: 'md 12/12/2003 17:02'!isLittleEndian	self deprecated: 'Use SmalltalkImage current isLittleEndian'.	^self endianness == #little! !!SystemDictionary methodsFor: 'sources, change log' stamp: 'md 12/12/2003 17:03'!version	"Answer the version of this release."	self deprecated: 'Use SystemVersion current version'.	^SystemVersion current version! !!SystemDictionary methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:03'!removeClassFromSystem: aClass logged: aBool	"Delete the class, aClass, from the system, but log the removal neither to the current change set nor to the changes log"	self deprecated: 'This method has been renamed because using it directly was usually insufficient (and a bug). You probably want to use aClass removeFromSystem, and that is what happens if you proceed. If you''re sure you want to remove the class from various registries but not do other finalization, call the method SystemDictionary>>forgetClass:logged:.'.	^aClass removeFromSystem.! !!SystemDictionary methodsFor: 'deprecated' stamp: 'md 12/12/2003 17:03'!swapBytesIn: aNonPointerThing from: start to: stop	"Perform a bigEndian/littleEndian byte reversal of my words.	We only intend this for non-pointer arrays.  Do nothing if I contain pointers."	| hack blt |	self deprecated: 'Use Bitmap class>>swapBytesIn: aNonPointerThing from: start to: stop instead'.	"The implementation is a hack, but fast for large ranges"	hack _ Form new hackBits: aNonPointerThing.	blt _ (BitBlt toForm: hack) sourceForm: hack.	blt combinationRule: Form reverse.  "XOR"	blt sourceY: start-1; destY: start-1; height: stop-start+1; width: 1.	blt sourceX: 0; destX: 3; copyBits.  "Exchange bytes 0 and 3"	blt sourceX: 3; destX: 0; copyBits.	blt sourceX: 0; destX: 3; copyBits.	blt sourceX: 1; destX: 2; copyBits.  "Exchange bytes 1 and 2"	blt sourceX: 2; destX: 1; copyBits.	blt sourceX: 1; destX: 2; copyBits.! !!Text methodsFor: 'accessing' stamp: 'md 12/12/2003 17:03'!rangeOf: attribute startingAt: index forStyle: aTextStyle"aTextStyle is not really needed, it is kept for compatibility with an earlier method version "	self deprecated: 'Use Text>>rangeOf:startingAt: instead.'.	^self rangeOf: attribute startingAt: index! !!Utilities class methodsFor: 'flaps' stamp: 'md 12/12/2003 17:03'!globalFlapTabOrDummy: aName	"Find a global flap tab by name.  May be either 'flap: Tools' or 'Tools'.  Retained in Utilities for possible benefit of existing image segments"	self deprecated: 'Use Flaps globalFlapTabOrDummy: aName'.	^ Flaps globalFlapTabOrDummy: aName! !!Utilities class methodsFor: 'graphical support' stamp: 'md 12/12/2003 17:03'!grabScreenAndSaveOnDisk  "Utilities grabScreenAndSaveOnDisk"	| form fileName |	self deprecated: 'Use GIFReaderWriter grabScreenAndSaveOnDisk'.	form _ Form fromUser.	form bits size = 0 ifTrue: [^ Beeper beep].	fileName _ FileDirectory default nextNameFor: 'Squeak' extension: 'gif'.	Utilities informUser: 'Writing ' , fileName		during: [GIFReadWriter putForm: form onFileNamed: fileName].! !!Utilities class methodsFor: 'vm statistics' stamp: 'md 12/12/2003 17:03'!vmStatisticsReportString	"StringHolderView open: (StringHolder new contents:		Utilities vmStatisticsReportString) label: 'VM Statistics'"	| params oldSpaceEnd youngSpaceEnd memoryEnd fullGCs fullGCTime incrGCs incrGCTime tenureCount mcMisses mcHits icHits upTime sendCount tms tmSize upTime2 fullGCs2 fullGCTime2 incrGCs2 incrGCTime2 tenureCount2 str |	self deprecated: 'Use SmalltalkImage current  vmStatisticsReportString'.	params _ Smalltalk getVMParameters.	oldSpaceEnd			_ params at: 1.	youngSpaceEnd		_ params at: 2.	memoryEnd			_ params at: 3.	fullGCs				_ params at: 7.	fullGCTime			_ params at: 8.	incrGCs				_ params at: 9.	incrGCTime			_ params at: 10.	tenureCount			_ params at: 11.	mcMisses			_ params at: 15.	mcHits				_ params at: 16.	icHits				_ params at: 17.	upTime _ Time millisecondClockValue.	sendCount _ mcMisses + mcHits + icHits.	tms _ TranslatedMethod allSubInstances.	tmSize _ tms inject: 0 into: [:sum :tm | sum + (tm size * 4)].	str _ WriteStream on: (String new: 1000).	str	nextPutAll: 'uptime			';		print: (upTime / 1000 / 60 // 60); nextPut: $h;		print: (upTime / 1000 / 60 \\ 60) asInteger; nextPut: $m;		print: (upTime / 1000 \\ 60) asInteger; nextPut: $s; cr.	str	nextPutAll: 'memory			';		nextPutAll: memoryEnd asStringWithCommas; nextPutAll: ' bytes'; cr.	str	nextPutAll:	'	old			';		nextPutAll: oldSpaceEnd asStringWithCommas; nextPutAll: ' bytes (';		print: ((oldSpaceEnd / memoryEnd * 100) roundTo: 0.1); nextPutAll: '%)'; cr.	str	nextPutAll: '	young		';		nextPutAll: (youngSpaceEnd - oldSpaceEnd) asStringWithCommas; nextPutAll: ' bytes (';		print: ((youngSpaceEnd - oldSpaceEnd / memoryEnd * 100) roundTo: 0.1); nextPutAll: '%)'; cr.	str	nextPutAll: '	used		';		nextPutAll: youngSpaceEnd asStringWithCommas; nextPutAll: ' bytes (';		print: ((youngSpaceEnd / memoryEnd * 100) roundTo: 0.1); nextPutAll: '%)'; cr.	str	nextPutAll: '	free		';		nextPutAll: (memoryEnd - youngSpaceEnd) asStringWithCommas; nextPutAll: ' bytes (';		print: ((memoryEnd - youngSpaceEnd / memoryEnd * 100) roundTo: 0.1); nextPutAll: '%)'; cr.	str	nextPutAll: 'GCs				';		nextPutAll: (fullGCs + incrGCs) asStringWithCommas.	fullGCs + incrGCs > 0 ifTrue: [		str			nextPutAll: ' ('; 			print: ((upTime / (fullGCs + incrGCs)) roundTo: 1); 			nextPutAll: 'ms between GCs)'	].	str cr.	str	nextPutAll: '	full			';		print: fullGCs; nextPutAll: ' totalling '; nextPutAll: fullGCTime asStringWithCommas; nextPutAll: 'ms (';		print: ((fullGCTime / upTime * 100) roundTo: 1.0);		nextPutAll: '% uptime)'.	fullGCs = 0 ifFalse:		[str	nextPutAll: ', avg '; print: ((fullGCTime / fullGCs) roundTo: 1.0); nextPutAll: 'ms'].	str	cr.	str	nextPutAll: '	incr		';		print: incrGCs; nextPutAll: ' totalling '; nextPutAll: incrGCTime asStringWithCommas; nextPutAll: 'ms (';		print: ((incrGCTime / upTime * 100) roundTo: 1.0);		nextPutAll: '% uptime), avg '; print: ((incrGCTime / incrGCs) roundTo: 1.0); nextPutAll: 'ms'; cr.	str	nextPutAll: '	tenures		';		nextPutAll: tenureCount asStringWithCommas.	tenureCount = 0 ifFalse:		[str nextPutAll: ' (avg '; print: (incrGCs / tenureCount) asInteger; nextPutAll: ' GCs/tenure)'].	str	cr.LastStats ifNil: [LastStats _ Array new: 6]ifNotNil: [	upTime2 _ upTime - (LastStats at: 1).	fullGCs2 _ fullGCs - (LastStats at: 2).	fullGCTime2 _ fullGCTime - (LastStats at: 3).	incrGCs2 _ incrGCs - (LastStats at: 4).	incrGCTime2 _ incrGCTime - (LastStats at: 5).	tenureCount2 _ tenureCount - (LastStats at: 6).	str	nextPutAll: 'Since last view	';		nextPutAll: (fullGCs2 + incrGCs2) asStringWithCommas.	fullGCs2 + incrGCs2 > 0 ifTrue: [		str			nextPutAll: ' ('; 			print: ((upTime2 / (fullGCs2 + incrGCs2)) roundTo: 1); 			nextPutAll: 'ms between GCs)'.	].	str cr.	str	nextPutAll: '	uptime		'; print: ((upTime2 / 1000.0) roundTo: 0.1); nextPutAll: 's'; cr.	str	nextPutAll: '	full			';		print: fullGCs2; nextPutAll: ' totalling '; nextPutAll: fullGCTime2 asStringWithCommas; nextPutAll: 'ms (';		print: ((fullGCTime2 / upTime2 * 100) roundTo: 1.0);		nextPutAll: '% uptime)'.	fullGCs2 = 0 ifFalse:		[str	nextPutAll: ', avg '; print: ((fullGCTime2 / fullGCs2) roundTo: 1.0); nextPutAll: 'ms'].	str	cr.	str	nextPutAll: '	incr		';		print: incrGCs2; nextPutAll: ' totalling '; nextPutAll: incrGCTime2 asStringWithCommas; nextPutAll: 'ms (';		print: ((incrGCTime2 / upTime2 * 100) roundTo: 1.0);		nextPutAll: '% uptime), avg '.	incrGCs2 > 0 ifTrue: [		 str print: ((incrGCTime2 / incrGCs2) roundTo: 1.0); nextPutAll: 'ms'	].	str cr.	str	nextPutAll: '	tenures		';		nextPutAll: tenureCount2 asStringWithCommas.	tenureCount2 = 0 ifFalse:		[str nextPutAll: ' (avg '; print: (incrGCs2 / tenureCount2) asInteger; nextPutAll: ' GCs/tenure)'].	str	cr.].	LastStats at: 1 put: upTime.	LastStats at: 2 put: fullGCs.	LastStats at: 3 put: fullGCTime.	LastStats at: 4 put: incrGCs.	LastStats at: 5 put: incrGCTime.	LastStats at: 6 put: tenureCount.	sendCount > 0 ifTrue: [		str	nextPutAll: 'sends			';			nextPutAll: sendCount asStringWithCommas; cr.		str	nextPutAll: '	full			';			nextPutAll: mcMisses asStringWithCommas;			nextPutAll: ' ('; print: ((mcMisses / sendCount * 100) roundTo: 0.1); nextPutAll: '%)'; cr.		str	nextPutAll: '	m-cache	';			nextPutAll: mcHits asStringWithCommas;			nextPutAll: ' ('; print: ((mcHits / sendCount * 100) roundTo: 0.1); nextPutAll: '%)'; cr.		str	nextPutAll: '	i-cache		';			nextPutAll: icHits asStringWithCommas;			nextPutAll: ' ('; print: ((icHits / sendCount * 100) roundTo: 0.1); nextPutAll: '%)'; cr].	icHits > 0 ifTrue: [		str	nextPutAll: 'methods			';			nextPutAll: tms size asStringWithCommas; nextPutAll: ' translated'; cr.		str	nextPutAll: '	size			';			nextPutAll: tmSize asStringWithCommas; nextPutAll: ' bytes, avg ';			print: ((tmSize / tms size) roundTo: 0.1); nextPutAll: ' bytes/method'; cr.		str	nextPutAll: '	memory		';			print: ((tmSize / youngSpaceEnd * 100) roundTo: 0.1); nextPutAll: '% of used, ';			print: ((tmSize / memoryEnd * 100) roundTo: 0.1); nextPutAll: '% of available'; cr].	^ str contents! !!Utilities class methodsFor: 'vm statistics' stamp: 'md 12/12/2003 17:03'!vmStatisticsShortString	"Convenience item for access to recent statistics only"	"StringHolderView open: (StringHolder new contents: Utilities vmStatisticsShortString)		label: 'VM Recent Statistics'"	self deprecated: 'Use SmalltalkImage current  vmStatisticsShortString'.	^ (ReadStream on: self vmStatisticsReportString) upToAll: 'Since'; upTo: Character cr; upToEnd! !