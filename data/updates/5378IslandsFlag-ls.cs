'From Squeak3.6beta of ''4 July 2003'' [latest update: #5371] on 25 July 2003 at 3:16:16 pm'!"Change Set:		IslandFlag3.6VMMDate:			25 July 2003Author:			Lex SpoonModified for 3.6 release by tpr.Changes a bit in the header of CompiledMethods so that it is a flag instead of part of the primitive index that a method will execute.  Such a flag is extremely useful for Islands, and the bit is unneeded for its original purpose due to named primitives. Non-VM components only in this version."!!CompiledMethod commentStamp: 'ls 7/5/2003 13:48' prior: 0!My instances are methods suitable for interpretation by the virtual machine.  This is the only class in the system whose instances intermix both indexable pointer fields and indexable integer fields.	The current format of a CompiledMethod is as follows:	header (4 bytes)	literals (4 bytes each)	bytecodes  (variable)	trailer (variable)The header is a 30-bit integer with the following format:(index 0)	9 bits:	main part of primitive number   (#primitive)(index 9)	8 bits:	number of literals (#numLiterals)(index 17)	1 bit:	whether a large frame size is needed (#frameSize)(index 18)	6 bits:	number of temporary variables (#numTemps)(index 24)	4 bits:	number of arguments to the method (#numArgs)(index 28)	1 bit:	high-bit of primitive number (#primitive)(index 29)	1 bit:	flag bit, ignored by the VM  (#flag)The trailer has two variant formats.  In the first variant, the last byte is at least 252 and the last four bytes represent a source pointer into one of the sources files (see #sourcePointer).  In the second variant, the last byte is less than 252, and the last several bytes are a compressed version of the names of the method's temporary variables.  The number of bytes used for this purpose is the value of the last byte in the method.!!CompiledMethod methodsFor: 'accessing' stamp: 'ls 7/5/2003 13:50'!flag	"Answer the user-level flag bit"	^( (self header bitShift: -29) bitAnd: 1) = 1		ifTrue: [ true ]		ifFalse: [ false ]! !!CompiledMethod methodsFor: 'accessing' stamp: 'ls 6/22/2000 14:35'!primitive	"Answer the primitive index associated with the receiver.	Zero indicates that this is not a primitive method.	We currently allow 10 bits of primitive index, but they are in two places	for  backward compatibility.  The time to unpack is negligible,	since the reconstituted full index is stored in the method cache."	| primBits |	primBits _ self header bitAnd: 16r100001FF.		^ (primBits bitAnd: 16r1FF) + (primBits bitShift: -19)! !!CompiledMethod class methodsFor: 'instance creation' stamp: 'ls 7/5/2003 13:49'!newBytes: numberOfBytes trailerBytes: trailer nArgs: nArgs nTemps: nTemps nStack: stackSize nLits: nLits primitive: primitiveIndex flag: flag	"Answer an instance of me. The header is specified by the message 	arguments. The remaining parts are not as yet determined."	| largeBit primBits method flagBit |	nTemps > 64 ifTrue:		[^ self error: 'Cannot compile -- too many temporary variables'].		largeBit _ (nTemps + stackSize) > SmallFrame ifTrue: [1] ifFalse: [0].	"For now the high bit of the primitive no. is in a high bit of the header"	primBits _ (primitiveIndex bitAnd: 16r1FF) + ((primitiveIndex bitAnd: 16r200) bitShift: 19).	flagBit := flag ifTrue: [ 1 ] ifFalse: [ 0 ].	method _ self newMethod: numberOfBytes + trailer size		header: (nArgs bitShift: 24) +				(nTemps bitShift: 18) +				(largeBit bitShift: 17) +				(nLits bitShift: 9) +				primBits +				(flagBit bitShift: 29).	"Copy the source code trailer to the end"	1 to: trailer size do:		[:i | method at: method size - trailer size + i put: (trailer at: i)].	^ method! !