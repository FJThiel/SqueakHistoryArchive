'From Squeak 2.3 of January 14, 1999 on 9 April 1999 at 4:30:13 pm'!"Change Set:		wnld-cam-jspDate:			9 April 1999Author:			Jeff PierceChanges to cameras and the camera controls"!ImageMorph subclass: #WonderlandCameraControls	instanceVariableNames: 'myCamera myScheduler myUndoStack moveAction '	classVariableNames: ''	poolDictionaries: 'WonderlandConstants '	category: 'Wonderland-Morphs'!!Wonderland methodsFor: 'accessing' stamp: 'jsp 4/9/1999 15:34'!getCameraList	^ cameraList.! !!Wonderland methodsFor: 'creating' stamp: 'jsp 4/9/1999 16:08'!makeCamera	"Add a new camera to the Wonderland"	| newCamera name |	newCamera _ WonderlandCamera createFor: self.	name _ self uniqueNameFrom: 'camera'.	newCamera setName: name.	myNamespace at: name put: newCamera.	cameraList addLast: newCamera.	scriptEditor updateActorBrowser.	"Add an undo action to remove this camera"	myUndoStack push: (UndoAction new: [  cameraList remove: newCamera.											newCamera removeFromScene.											myNamespace removeKey: name ifAbsent: [].											newCamera release.											scriptEditor updateActorBrowser ]).	^ newCamera.! !!WonderlandCamera reorganize!('initialize-release' initializeFor: release)('rendering' render:)('get property' getAspectRatio getFarClippingPlane getFieldOfView getNearClippingPlane)('set property' setAspectRatio: setFarClippingPlane: setFieldOfView: setNearClippingPlane:)('accessing' getMorph resetPointOfView turnBackgroundOff turnBackgroundOn)('primitive behaviors' destroy:)('transforming' transformScreenPointToScenePoint: transformScreenPointToScenePoint:atDepthOf: transformScreenPointToScenePoint:using:)('private' getFrustum getPerspectiveMatrix)!!WonderlandCamera methodsFor: 'primitive behaviors' stamp: 'jsp 4/9/1999 15:48'!destroy: aDuration	"Implements the animated destroy of a camera.  Unlike destroy for WonderlandActors, this method merely removes the camera from the scene and removes it render window from the world."	| cameraList childList undoActions |	undoActions _ OrderedCollection new.	childList _ self getAllChildren.	childList do: [:child | 			(child isFirstClass) ifTrue: [				"Make the non-part children point to this actor's parent"				undoActions addLast: (UndoParentChange newFor: child from: (child getParent)).				child reparentTo: (self getParent).								  		].				].	self removeFromScene.	myMorph delete.	cameraList _ myWonderland getCameraList.	cameraList remove: self.	undoActions addLast: (UndoAction new: [ myMorph openInWorld.									(myWonderland getScene) addChild: self.									cameraList addLast: self ]).	(myWonderland getUndoStack) push: (UndoChangeList new setChangeList: undoActions).				! !!WonderlandCamera class reorganize!('change logging' acceptsLoggingOfCompilation wantsChangeSetLogging)!!WonderlandCamera class methodsFor: 'change logging'!acceptsLoggingOfCompilation       ^ self == WonderlandCamera.! !!WonderlandCamera class methodsFor: 'change logging' stamp: 'jsp 4/9/1999 16:02'!wantsChangeSetLogging	^ self == WonderlandCamera.! !!WonderlandCameraControls methodsFor: 'initialization' stamp: 'jsp 4/9/1999 16:24'!initializeWith: aCamera	"Initialize this instance"	| b |	myCamera _ aCamera.	myScheduler _ (aCamera getWonderland) getScheduler.	myUndoStack _ (aCamera getWonderland) getUndoStack.	image _ camControlsBMP.	self extent: 59@60.	b _ (aCamera getMorph) bounds.	self position: ((b center x) - 30) @ (b bottom).	self openInWorld.! !!WonderlandCameraControls methodsFor: 'camera control' stamp: 'jsp 4/9/1999 16:21'!moveCamera	"Move the camera an amount and direction determined by the current position of the mouse and which modifier keys are held down."	| offset dt |	dt _ myScheduler getElapsedTime.	offset _ (self center) - (0@8) - (Sensor mousePoint).	(Sensor shiftPressed)		ifTrue: [ (Sensor controlKeyPressed)					ifTrue: [						myCamera turnRightNow: up numberOfTurns: (dt * (offset y) * 0.01)										undoable: false.							]					ifFalse: [						myCamera moveRightNow: up distance: (dt * (offset y) * 0.1)										undoable: false.						myCamera moveRightNow: left distance: (dt * (offset x) * 0.1)										undoable: false.							].				]		ifFalse: [ (Sensor controlKeyPressed)					ifTrue: [						myCamera turnRightNow: left numberOfTurns: (dt * (offset x) * 0.01)										undoable: false.							]					ifFalse: [						myCamera moveRightNow: forward distance: (dt * (offset y) * 0.1)										undoable: false.						myCamera turnRightNow: left numberOfTurns: (dt * (offset x) * 0.01)										undoable: false.							].				].! !WonderlandCamera class removeSelector: #wantsChangesetLogging!