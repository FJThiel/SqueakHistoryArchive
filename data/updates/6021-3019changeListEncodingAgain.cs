'From Squeak3.7-m17n of 30 June 2004 [latest update: #6] on 23 July 2004 at 3:54:45 pm'!"Change Set:		changeListEncodingDate:			23 July 2004Author:			Yoshiki Ohshima<your descriptive text goes here>"!!ChangeList methodsFor: 'scanning' stamp: 'sw 10/19/1999 15:13'!scanFile: aFile from: startPosition to: stopPosition	| itemPosition item prevChar |	file _ aFile.	changeList _ OrderedCollection new.	list _ OrderedCollection new.	listIndex _ 0.	file position: startPosition.'Scanning ', aFile localName, '...'	displayProgressAt: Sensor cursorPoint	from: startPosition to: stopPosition	during: [:bar |	[file position < stopPosition]		whileTrue:		[bar value: file position.		[file atEnd not and: [file peek isSeparator]]				whileTrue: [prevChar _ file next].		(file peekFor: $!!)		ifTrue:			[(prevChar = Character cr or: [prevChar = Character lf])				ifTrue: [self scanCategory]]		ifFalse:			[itemPosition _ file position.			item _ file nextChunk.			file skipStyleChunk.			item size > 0 ifTrue:				[self addItem: (ChangeRecord new file: file position: itemPosition type: #doIt)					text: 'do it: ' , (item contractTo: 50)]]]].	listSelections _ Array new: list size withAll: false! !!ChangeList class methodsFor: 'public access' stamp: 'yo 7/23/2004 15:23'!browseRecent: charCount on: origChangesFile 	"Opens a changeList on the end of the specified changes log file"	| changeList end changesFile current |	changesFile _ origChangesFile readOnlyCopy.	current _ changesFile position.	changesFile position: 0.	((changesFile next: 9) = '"<utf-8>"') ifTrue: [changesFile converter: UTF8TextConverter new].	changesFile position: current.	end _ changesFile size.	Cursor read		showWhile: [changeList _ self new						scanFile: changesFile						from: (0 max: end - charCount)						to: end].	changesFile close.	self		open: changeList		name: 'Recent changes'		multiSelect: true! !!ChangeList class methodsFor: 'public access' stamp: 'yo 7/23/2004 15:22'!browseRecentLogOn: origChangesFile startingFrom: initialPos 	"Prompt with a menu of how far back to go when browsing a changes file."	| end banners positions pos chunk i changesFile |	changesFile _ origChangesFile readOnlyCopy.	banners _ OrderedCollection new.	positions _ OrderedCollection new.	end _ changesFile size.	changesFile position: 0.	((changesFile next: 9) = '"<utf-8>"') ifTrue: [changesFile converter: UTF8TextConverter new].	pos _ initialPos.	[pos = 0		or: [banners size > 20]]		whileFalse: [changesFile position: pos.			chunk _ changesFile nextChunk.			i _ chunk indexOfSubCollection: 'priorSource: ' startingAt: 1.			i > 0				ifTrue: [positions addLast: pos.					banners						addLast: (chunk copyFrom: 5 to: i - 2).					pos _ Number								readFrom: (chunk copyFrom: i + 13 to: chunk size)]				ifFalse: [pos _ 0]].	changesFile close.	banners size == 0 ifTrue: [^ self inform: 'this image has never been savedsince changes were compressed'].	pos _ (SelectionMenu labelList: banners selections: positions)				startUpWithCaption: 'Browse as far back as...'.	pos == nil		ifTrue: [^ self].	self browseRecent: end - pos on: origChangesFile! !!ChangeList class methodsFor: 'public access' stamp: 'yo 7/23/2004 15:53'!browseStream: changesFile	"Opens a changeList on a fileStream"	| changeList charCount current |	changesFile readOnly.	changesFile converter: MacRomanTextConverter new.	current _ changesFile position.	changesFile position: 0.	((changesFile next: 9) = '"<utf-8>"') ifTrue: [changesFile converter: UTF8TextConverter new].	changesFile position: current.	charCount _ changesFile size.	charCount > 1000000 ifTrue:		[(self confirm: 'The file ', changesFile name , 'is really long (' , charCount printString , ' characters).Would you prefer to view only the last million characters?')			ifTrue: [charCount _ 1000000]].	"changesFile setEncoderForSourceCodeNamed: changesFile name."	Cursor read showWhile:		[changeList _ self new			scanFile: changesFile from: changesFile size-charCount to: changesFile size].	changesFile close.	self open: changeList name: changesFile localName , ' log' multiSelect: true! !!FileContentsBrowser class methodsFor: 'instance creation' stamp: 'yo 7/23/2004 15:53'!browseStream: aStream named: aString	| package organizer packageDict browser current |	Cursor wait showWhile: [		packageDict _ Dictionary new.		organizer _ SystemOrganizer defaultList: Array new.		(aStream respondsTo: #converter:) ifTrue: [			aStream converter: MacRomanTextConverter new.			current _ aStream position.			aStream position: 0.			((aStream next: 9) = '"<utf-8>"') ifTrue: [aStream converter: UTF8TextConverter new].			aStream position: current.		].		package _ (FilePackage new fullName: aString; fileInFrom: aStream).		packageDict 			at: package packageName 			put: package.		organizer 			classifyAll: package classes keys 			under: package packageName.		(browser := self new)			systemOrganizer: organizer;			packages: packageDict].	self		openBrowserView: browser createViews		label: 'File Contents Browser'.! !