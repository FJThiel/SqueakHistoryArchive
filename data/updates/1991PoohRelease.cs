'From Squeak2.8alpha of 6 February 2000 [latest update: #1974] on 6 April 2000 at 7:37:00 pm'!"Change Set:		PoohDate:			20 March 2000Author:			Alexander LazarevicPooh - Squeak's version of Teddy. See 	WonderlandCameraMorph openPoohAboutWindow"!Object subclass: #POEdgeList	instanceVariableNames: 'vertices halfedges faces '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!Object subclass: #POHalfedge	instanceVariableNames: 'opposite next prev origin face tags '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!Object subclass: #POObject	instanceVariableNames: 'triangulation polygon skeleton '	classVariableNames: 'Subdivisions '	poolDictionaries: ''	category: 'Pooh-Geometry'!Object subclass: #POSimplePolygon	instanceVariableNames: 'vertices assorts '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!Object subclass: #POTriangle	instanceVariableNames: 'edges subTriangles type '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!POEdgeList subclass: #POTriangulation	instanceVariableNames: 'points toptriangle '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!Point subclass: #POVertex	instanceVariableNames: 'halfedge tags faces z '	classVariableNames: ''	poolDictionaries: ''	category: 'Pooh-Geometry'!WonderlandMorph subclass: #WonderlandCameraMorph	instanceVariableNames: 'myCamera myControls eventFocus lastCursorPoint mouseUpButton firstPersonControls mode outline currentActor currentPosition currentCanvas currentColor currentNib lastPosition paintMode palette restore backup '	classVariableNames: ''	poolDictionaries: 'WonderlandConstants '	category: 'Balloon3D-Wonderland Morphs'!!Float methodsFor: 'mathematical functions' stamp: 'laza 12/21/1999 12:15'!safeArcCos	"Answer the angle in radians."	(self between: -1.0 and: 1.0)		ifTrue: [^ self arcCos]		ifFalse: [^ self sign arcCos]! !!FloatArray methodsFor: 'accessing' stamp: 'laza 3/24/2000 13:08'!length	"Return the length of the receiver"	^self squaredLength sqrt! !!FloatArray methodsFor: 'accessing' stamp: 'laza 3/24/2000 13:08'!squaredLength	"Return the squared length of the receiver"	^self dot: self! !!FloatArray methodsFor: 'arithmetic' stamp: 'laza 3/24/2000 13:07'!dot: aFloatVector	"Primitive. Return the dot product of the receiver and the argument.	Fail if the argument is not of the same size as the receiver."	| result |	"<primitive:'primitiveFloatArrayDotProduct'>"	self size = aFloatVector size ifFalse:[^self error:'Must be equal size'].	result _ 0.0.	1 to: self size do:[:i|		result _ result + ((self at: i) * (aFloatVector at: i)).	].	^result! !!B3DVector3 methodsFor: 'testing' stamp: 'laza 3/16/2000 16:30'!isZero	^self = B3DVector3 zero! !!FloatArrayPlugin methodsFor: 'arithmetic primitives' stamp: 'laza 3/24/2000 13:06'!primitiveFloatArrayDotProduct	"Primitive. Compute the dot product of the receiver and the argument.	The dot product is defined as the sum of the products of the individual elements."	| rcvr arg rcvrPtr argPtr length result |	self export: true.	self var: #rcvrPtr declareC:'float *rcvrPtr'.	self var: #argPtr declareC:'float *argPtr'.	self var: #result declareC:'double result'.	arg _ interpreterProxy stackObjectValue: 0.	rcvr _ interpreterProxy stackObjectValue: 1.	interpreterProxy failed ifTrue:[^nil].	interpreterProxy success: (interpreterProxy isWords: arg).	interpreterProxy success: (interpreterProxy isWords: rcvr).	interpreterProxy failed ifTrue:[^nil].	length _ interpreterProxy stSizeOf: arg.	interpreterProxy success: (length = (interpreterProxy stSizeOf: rcvr)).	interpreterProxy failed ifTrue:[^nil].	rcvrPtr _ self cCoerce: (interpreterProxy firstIndexableField: rcvr) to: 'float *'.	argPtr _ self cCoerce: (interpreterProxy firstIndexableField: arg) to: 'float *'.	result _ 0.0.	0 to: length-1 do:[:i|		result _ result + ((rcvrPtr at: i) * (argPtr at: i)).	].	interpreterProxy pop: 2. "Pop args + rcvr"	interpreterProxy pushFloat: result. "Return result"! !!HaloMorph methodsFor: 'handles' stamp: 'laza 3/24/2000 13:52'!addPoohHandle: handleSpec	(innerTarget isKindOf: WonderlandCameraMorph) ifTrue:		[self addHandle: handleSpec on: #mouseDown send: #strokeMode to: innerTarget]! !!POEdgeList commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POEdgeList methodsFor: 'accessing' stamp: 'ar 4/6/2000 18:56'!edgeFrom: start to: end 	| startVertex endVertex halfedge twinedge oldedge |	start asPoint = end asPoint ifTrue: [self error: 'start = end'].	startVertex _ self vertexAt: start.	endVertex _ self vertexAt: end.	halfedge _ POHalfedge new origin: startVertex.	twinedge _ POHalfedge new origin: endVertex.	halfedge opposite: twinedge;	 next: twinedge;	 prev: twinedge.	twinedge opposite: halfedge;	 next: halfedge;	 prev: halfedge.	oldedge _ self halfedges at: halfedge ifAbsent:			[startVertex halfedge ifNil: [startVertex halfedge: halfedge]				ifNotNil: [self attachHalfedge: halfedge].			endVertex halfedge ifNil: [endVertex halfedge: twinedge]				ifNotNil: [self attachHalfedge: twinedge].			self halfedges at: twinedge put: twinedge.			self halfedges at: halfedge put: halfedge.].	^ oldedge! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 1/17/2000 12:07'!faces	^ faces! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 1/17/2000 12:07'!halfedges	^ halfedges! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:00'!length	| total |	total _ 0.	self halfedges do: [:edge | total _ total + edge length].	^ total / 2! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 1/25/2000 16:27'!removeTriangle: triangle 	self faces removeKey: triangle ifAbsent: [^ self].	triangle vertices do: [:vertex | vertex faces remove: triangle]! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 3/24/2000 13:48'!triangle: first to: second to: third 	| e1 e2 e3 triangle oldtriangle area p1 p2 p3 |	p1 _ first.	p2 _ second.	p3 _ third.	area _ p2 y + p1 y * (p2 x - p1 x) + (p3 y + p2 y * (p3 x - p2 x)) + (p1 y + p3 y * (p1 x - p3 x)).	area positive		ifTrue: 			[p1 _ second.			p2 _ first].	e1 _ self edgeFrom: p1 to: p2.	e2 _ self edgeFrom: p2 to: p3.	e3 _ self edgeFrom: p3 to: p1.	triangle _ POTriangle				with: e1				with: e2				with: e3.	oldtriangle _ self faces at: triangle ifAbsent: [self faces at: triangle put: triangle].	triangle vertices do: [:vertex | vertex faces add: triangle].	^ oldtriangle! !!POEdgeList methodsFor: 'accessing' stamp: 'ar 4/6/2000 18:55'!vertexAt: aPoint 	| oldVertex |	oldVertex _ self vertices at: aPoint asPoint ifAbsentPut: [POVertex at: aPoint].	^ oldVertex! !!POEdgeList methodsFor: 'accessing' stamp: 'laza 1/17/2000 12:07'!vertices	^ vertices! !!POEdgeList methodsFor: 'edges' stamp: 'laza 1/13/2000 17:00'!incidentEdgesAt: aVertex 	^ self halfedges select: [:edge | edge origin = aVertex]! !!POEdgeList methodsFor: 'edges' stamp: 'ar 4/6/2000 18:35'!removeEdge: anEdge 	anEdge origin isDeadEnd		ifTrue: [self vertices removeKey: (anEdge origin halfedge: nil) asPoint				ifAbsent: []]		ifFalse: [self cutHalfedge: anEdge].	anEdge opposite origin isDeadEnd		ifTrue: [self vertices removeKey: (anEdge destination halfedge: nil) asPoint				ifAbsent: []]		ifFalse: [self cutHalfedge: anEdge opposite].	self halfedges removeKey: anEdge ifAbsent: [].	self halfedges removeKey: anEdge opposite ifAbsent: [].! !!POEdgeList methodsFor: 'initializing' stamp: 'laza 1/14/2000 14:20'!initialize	vertices _ Dictionary new.	halfedges _ Dictionary new.	faces _ Dictionary new! !!POEdgeList methodsFor: 'private' stamp: 'laza 1/13/2000 17:00'!attachHalfedge: aHalfedge 	| left right |	left _ self closestEdgeTo: aHalfedge.	right _ left prev.	aHalfedge prev: right.	right next: aHalfedge.	aHalfedge opposite next: left.	left prev: aHalfedge opposite! !!POEdgeList methodsFor: 'private' stamp: 'laza 3/23/2000 12:13'!closestEdgeTo: aHalfedge	| minAngle angle minEdge |	minAngle _ 2 * Float pi.	(self incidentEdgesAt: aHalfedge origin)		do: 			[:edge | 			angle _ edge angleTo: aHalfedge.			angle < minAngle				ifTrue: 					[minAngle _ angle.					minEdge _ edge]].	^ minEdge! !!POEdgeList methodsFor: 'private' stamp: 'laza 1/13/2000 17:00'!cutHalfedge: anEdge	anEdge prev next: anEdge opposite next.	anEdge opposite next prev: anEdge prev.	anEdge origin halfedge: anEdge opposite next. ! !!POEdgeList methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:00'!clearAllEdgeTags	self halfedges do: [:edge | edge clearAllTags]! !!POEdgeList methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:00'!clearAllTags	self clearAllEdgeTags.	self clearAllVertexTags! !!POEdgeList methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:00'!clearAllVertexTags	self vertices do: [:vertex | vertex clearAllTags]! !!POEdgeList class methodsFor: 'instance creation' stamp: 'laza 3/23/2000 15:56'!new	| el |	el _ super new initialize.	"(TDEdgeListDebuggerMorph on: el) openInWorld."	^ el! !!POHalfedge commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POHalfedge reorganize!('accessing' destination destination: face face: midpoint next next: opposite opposite: origin origin: otherEnd: prev prev: sharesVertexWith: tags tags:)('comparing' = hash)('measure' angleTo: length vector)('printing' printOn:)('tagging' clearAllTags clearTag: getTag: setTag: setTag:to: setTagAll: setTagEdge: setTagEnds: testTag:)('testing' hasAllInsideCircle: oneEndIs: sideOf:)('converting' asB3DVector3)!!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!destination	^ self opposite origin! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!destination: aVertex	self opposite origin: aVertex! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!face	^ face! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!face: anObject	face _ anObject! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!midpoint	^ self origin + self destination /2! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!next	^next! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!next: aHalfedge	next _ aHalfedge! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!opposite	^ opposite! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!opposite: aHalfedge	opposite _ aHalfedge! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!origin	^ origin! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!origin: aVertex 	origin _ aVertex! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/24/2000 04:02'!otherEnd: aVertex	self origin = aVertex ifTrue: [^ self destination]ifFalse: [^ self origin]! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!prev	^ prev! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!prev: aHalfedge 	prev _ aHalfedge! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/24/2000 11:34'!sharesVertexWith: aHalfedge 	(self origin = aHalfedge origin or: [self origin = aHalfedge destination])		ifTrue: [^ self origin].	(self destination = aHalfedge origin or: [self destination = aHalfedge destination])		ifTrue: [^ self destination].	^ nil! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!tags	tags ifNil: [tags _ Dictionary new].	^ tags! !!POHalfedge methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:01'!tags: aDictionary 	tags _ aDictionary! !!POHalfedge methodsFor: 'comparing' stamp: 'laza 1/13/2000 17:01'!= aHalfedge	^ (self origin = aHalfedge origin) and: [self opposite origin = aHalfedge opposite origin]! !!POHalfedge methodsFor: 'comparing' stamp: 'laza 1/13/2000 17:01'!hash	^ self origin hash! !!POHalfedge methodsFor: 'measure' stamp: 'laza 3/23/2000 12:17'!angleTo: anHalfedge 	"Returns the angle in radians between self and anHalfedge as if they	had the same origin. The angle is measured counter clockwise."	| angle |	angle _ ((self vector dotProduct: anHalfedge vector)				/ (self length * anHalfedge length)) safeArcCos.	(self sideOf: anHalfedge destination)		= #right ifTrue: [angle _ 2 * Float pi - angle].	^ angle!]style[(19 2 134 216)f1b,f1,f1cblack;,f1! !!POHalfedge methodsFor: 'measure' stamp: 'laza 1/13/2000 17:01'!length	^ self vector r! !!POHalfedge methodsFor: 'measure' stamp: 'laza 1/13/2000 17:01'!vector	^ self destination - self origin! !!POHalfedge methodsFor: 'printing' stamp: 'laza 1/13/2000 17:01'!printOn: aStream 	self origin printOn: aStream.	aStream nextPutAll: '->'.	self opposite origin printOn: aStream.	! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:01'!clearAllTags	self tags: Dictionary new! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/29/2000 20:46'!clearTag: aSymbol 	self tags removeKey: aSymbol ifAbsent: []!]style[(10 7 3 4 17 7 13)f1b,f1cmagenta;ib,f1,f1cblue;b,f1,f1cmagenta;b,f1! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:01'!getTag: aSymbol 	^ self tags at: aSymbol ifAbsent: [nil]! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:01'!setTag: aSymbol 	self tags at: aSymbol put: true! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:01'!setTag: aSymbol to: anObject	self tags at: aSymbol put: anObject! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/25/2000 16:36'!setTagAll: aSymbol 	self setTagEdge: aSymbol.	self setTagEnds: aSymbol! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/25/2000 16:35'!setTagEdge: aSymbol 	self setTag: aSymbol.	self opposite setTag: aSymbol! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/25/2000 16:34'!setTagEnds: aSymbol	self origin setTag: aSymbol.	self destination setTag: aSymbol.! !!POHalfedge methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:01'!testTag: aSymbol 	^ self tags includesKey: aSymbol! !!POHalfedge methodsFor: 'testing' stamp: 'laza 1/13/2000 17:01'!hasAllInsideCircle: aCollection 	"Tests if all Points in aCollection are inside the circle which has this  	edge as a diameter"	aCollection do: [:aPoint | (self origin - aPoint dotProduct: self destination - aPoint)			> 0 ifTrue: [^ false]].	^ true! !!POHalfedge methodsFor: 'testing' stamp: 'ar 4/6/2000 18:56'!oneEndIs: aVertex	^(self origin asPoint = aVertex asPoint or: [self destination asPoint = aVertex asPoint])! !!POHalfedge methodsFor: 'testing' stamp: 'laza 1/13/2000 17:01'!sideOf: aPoint 	| result |	result _ self destination - self origin crossProduct: aPoint - self origin.	result > 0 ifTrue: [^ #left].	result < 0 ifTrue: [^ #right].	^ #center! !!POHalfedge methodsFor: 'converting' stamp: 'laza 1/26/2000 17:09'!asB3DVector3	^ self destination asB3DVector3 - self origin asB3DVector3! !!POObject commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POObject reorganize!('accessing' polygon polygon: skeleton skeleton: triangulation triangulation:)('converting' asB3DSimpleMesh)('skeleton' classify elevateSpine prune tailor)('private' addOtherHemisphereTo: b3dVertexAt:normal:in: eyeletsFor:in: tie:with:to:)!!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:19'!polygon	^polygon! !!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:16'!polygon: anObject	polygon _ anObject! !!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:57'!skeleton	^skeleton! !!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 12:00'!skeleton: anObject	skeleton _ anObject! !!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:18'!triangulation	^triangulation! !!POObject methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:16'!triangulation: anObject	triangulation _ anObject! !!POObject methodsFor: 'converting' stamp: 'laza 3/29/2000 03:29'!asB3DSimpleMesh	| facets rightEyelets leftEyelets bounds triangle rightLeg end |	bounds _ self polygon bounds.	self elevateSpine.	facets _ OrderedCollection new.	end _ triangle _ self triangulation faces keys anyOne.	leftEyelets _ self eyeletsFor: triangle leftLeg in: bounds extent.	[		rightLeg _ triangle rightLeg.		rightEyelets _ self eyeletsFor: rightLeg in: bounds extent.		self tie: leftEyelets with: rightEyelets to: facets.				leftEyelets _ rightEyelets.		triangle _ rightLeg opposite face.		triangle = end] whileFalse.	self addOtherHemisphereTo: facets.	^ (B3DSimpleMesh withAll: facets) asIndexedMesh! !!POObject methodsFor: 'skeleton' stamp: 'laza 1/17/2000 11:38'!classify	| count |	self triangulation faces do: [:triangle |		count _ triangle borderEdges size.		count = 0 ifTrue: [triangle type: #junction].		count = 1 ifTrue: [triangle type: #sleeve].		count = 2 ifTrue: [triangle type: #terminal]]		! !!POObject methodsFor: 'skeleton' stamp: 'laza 1/31/2000 06:40'!elevateSpine	| spineVertices triangle edge spineEdges height |	spineVertices _ self triangulation vertices				select: [:vertex | (vertex testTag: #spine)						and: [(self polygon vertices includes: vertex asPoint) not]].	spineVertices size = 0		ifTrue: 			[triangle _ self triangulation faces keys someElement.			edge _ triangle borderEdges first.			spineVertices _ Array with: (triangle oppositeVertexOf: edge)].	spineVertices do: [:vertex | vertex z: ((self triangulation incidentEdgesAt: vertex)				collect: [:each | each length]) average].	spineVertices do: 		[:vertex | 		spineEdges _ (self triangulation incidentEdgesAt: vertex)					select: [:halfedge | halfedge testTag: #spine].		spineEdges size > 0			ifTrue: 				[height _ (spineEdges collect: [:halfedge | halfedge destination z]) average.				vertex z: height]]! !!POObject methodsFor: 'skeleton' stamp: 'laza 1/31/2000 05:35'!prune	| terminals triangle edge corner fanEnds outer fanCenter further edgePrev postProcess untouched junctions sleeves bottom mid1 mid2 index left right newedge inner |	postProcess _ Set new.	terminals _ (self triangulation faces select: [:each | each type = #terminal]) keys.	terminals do: 		[:terminal | 		triangle _ terminal.		edgePrev _ nil.		edge _ triangle innerEdges first.		corner _ triangle oppositeVertexOf: edge.		fanEnds _ OrderedCollection with: corner.		[triangle type ~= #junction and: [edge hasAllInsideCircle: fanEnds]]			whileTrue: 				[self triangulation removeTriangle: triangle;				 removeEdge: edge.				triangle _ edge opposite face.				edgePrev _ edge.				edge _ (triangle innerEdges copyWithout: edge opposite) first.				corner _ triangle oppositeVertexOf: edge.				fanEnds add: corner].		triangle type = #sleeve			ifTrue: 				[self triangulation removeTriangle: triangle.				outer _ edge next.				fanCenter _ edge midpoint.				"self triangulation removeEdge: edge."				[outer origin = edge origin]					whileFalse: 						[further _ outer next.						self triangulation							triangle: fanCenter							to: outer origin							to: outer destination.						outer _ further]].		triangle type = #junction			ifTrue: 				[postProcess add: triangle.				self triangulation removeTriangle: triangle.				outer _ edgePrev next.				fanCenter _ triangle center.				self triangulation removeEdge: edgePrev.				[outer origin = edgePrev origin]					whileFalse: 						[further _ outer next.						self triangulation							triangle: fanCenter							to: outer origin							to: outer destination.						outer _ further]]].	junctions _ (self triangulation faces select: [:each | each type = #junction]) keys.	postProcess addAll: junctions.	postProcess do: 		[:face | 		self triangulation removeTriangle: face.		untouched _ face edges select: [:halfedge | self triangulation halfedges includes: halfedge].		untouched do: 			[:halfedge | 			"self triangulation removeEdge: halfedge."			triangle _ self triangulation						triangle: face center						to: halfedge origin						to: halfedge destination.			triangle type: #inner.			edge _ self triangulation edgeFrom: face center to: halfedge origin.			edge setTag: #border.			edge opposite setTag: #border.			edge _ self triangulation edgeFrom: face center to: halfedge destination.			edge setTag: #border.			edge opposite setTag: #border]].	sleeves _ (self triangulation faces select: [:each | each type = #sleeve]) keys.	sleeves do: 		[:face | 		self triangulation removeTriangle: face.		bottom _ face borderEdges first.		index _ face edges indexOf: bottom.		left _ face edges atWrap: index + 1.		right _ face edges atWrap: index + 2.		mid1 _ left midpoint.		mid2 _ right midpoint.		self triangulation removeEdge: left;		 removeEdge: right.		(bottom origin			isInsideCircle: bottom destination			with: mid1			with: mid2)			ifTrue: [corner _ bottom origin]			ifFalse: [corner _ bottom destination].		self triangulation			triangle: mid1			to: mid2			to: corner;					triangle: bottom origin			to: bottom destination			to: (face oppositeEdgeOf: corner) midpoint;					triangle: mid2			to: mid1			to: (face oppositeVertexOf: bottom).		edge _ self triangulation edgeFrom: mid1 to: mid2.		edge setTagAll: #spine].	terminals _ (self triangulation faces				select: [:each | each type = #terminal or: [each type = #inner]]) keys.	terminals do: 		[:face | 		self triangulation removeTriangle: face.		edge _ face innerEdges first.		corner _ face oppositeVertexOf: edge.		(self triangulation			triangle: corner			to: edge origin			to: edge midpoint)			type: face type.		(self triangulation			triangle: corner			to: edge destination			to: edge midpoint)			type: face type.		newedge _ self triangulation edgeFrom: corner to: edge midpoint.		newedge setTagAll: #spine].	inner _ (self triangulation faces select: [:each | each type = #inner]) keys.	inner do: [:face | face edges do: 			[:halfedge | 			halfedge clearTag: #border.			halfedge opposite clearTag: #border]]! !!POObject methodsFor: 'skeleton' stamp: 'laza 1/17/2000 12:04'!tailor	| edge |	self polygon circulation = #left ifTrue: [self polygon reverseCirculation].	self polygon do: 		[:point | 		edge _ self triangulation edgeFrom: point to: (self polygon after: point).		edge opposite setTag: #border.		edge face			ifNotNil: 				[self triangulation removeTriangle: edge face.				edge face: nil]]! !!POObject methodsFor: 'private' stamp: 'laza 4/5/2000 09:53'!addOtherHemisphereTo: facets	| oppositeFacets oppositeVertices vertex |	oppositeFacets _ OrderedCollection new.	facets do:		[:tri|			oppositeVertices _ Array new: 3.			1 to: tri size do:				[:idx|					vertex _ tri at: idx.					"vertex position z = 0						ifFalse: ["							vertex _ vertex deepCopy.							vertex position z: (vertex position z negated).							vertex texCoord ifNotNil: [vertex texCoord u: (1.0 - (vertex texCoord u))].							vertex normal ifNotNil: [vertex normal z: (vertex normal z negated)].					self flag: #TODO. "Orientation?"					oppositeVertices at: idx put: vertex]. 			oppositeFacets add: (B3DSimpleMeshFace withAll: oppositeVertices)].	facets addAll: oppositeFacets					! !!POObject methodsFor: 'private' stamp: 'laza 4/4/2000 09:52'!b3dVertexAt: aB3DVector normal: norm in: extent	| vertex tpos center uc vc |	vertex _ B3DSimpleMeshVertex new position: aB3DVector.	center _ extent * 0.5.	uc _ ((center x + aB3DVector x / extent x * 0.5) min: 0.5) max: 0.0.	vc _ ((center y + aB3DVector y / extent y) min: 1.0) max: 0.0.	tpos _ B3DVector2 u: uc v: vc.	vertex texCoord: tpos.	vertex normal: norm.	^ vertex! !!POObject methodsFor: 'private' stamp: 'laza 3/28/2000 18:40'!eyeletsFor: aHalfedge in: extent	| eyelets start end axis center rotation nib scale abscissa ordinate omega pos |	eyelets _ OrderedCollection new: Subdivisions + 1.	aHalfedge origin z = 0		ifTrue: [start _ aHalfedge origin. end _ aHalfedge destination]		ifFalse: [start _ aHalfedge destination. end _ aHalfedge origin].	start _ start asB3DVector3.	end _ end asB3DVector3.	axis _ end - start cross: 0 @ 0 @ 1.	center _ end copy z: 0.	abscissa _ (center - start) length.	ordinate _ end z.	omega _ 90.0 / Subdivisions.	scale _ (end - center) length.	nib _ end - center / scale.	rotation _ (B3DRotation angle: omega axis: axis) asMatrix4x4.	1 to: Subdivisions do: 		[:segment |		pos _ nib * scale + center.		eyelets add: (self b3dVertexAt: pos normal: nib in: extent).		nib _ rotation localPointToGlobal: nib.		scale _ (((omega * segment) degreeCos * ordinate) squared + ((omega * segment) degreeSin * abscissa) squared) sqrt].	pos _ start.	eyelets add: (self b3dVertexAt: pos normal: nib in: extent).	^ eyelets! !!POObject methodsFor: 'private' stamp: 'laza 3/28/2000 12:20'!tie: left with: right to: facets	| offset |	left first position = right first position		ifTrue: [			facets add:				(B3DSimpleMeshFace					with: left first					with: right second					with: left second).				offset _ 1]		ifFalse: [			facets add:				(B3DSimpleMeshFace					with: right last					with: (left at: Subdivisions)					with: (right at: Subdivisions)).				offset _ 0].	1 + offset to: Subdivisions - 1 + offset do:		[:idx|			facets add:					(B3DSimpleMeshFace						with: (left at: idx)						with: (right at: idx)						with: (left at: idx + 1));				add:					(B3DSimpleMeshFace						with: (right at: idx)						with: (right at: idx + 1)						with: (left at: idx + 1))]! !!POObject class methodsFor: 'instance creation' stamp: 'laza 3/24/2000 13:48'!createOn: aSimplePolygon	| tdo  |	tdo _ self new.	tdo polygon: aSimplePolygon.	tdo triangulation: (POTriangulation on: aSimplePolygon vertices).	tdo tailor; classify; prune.	^ tdo! !!POObject class methodsFor: 'initialize-release' stamp: 'laza 1/29/2000 19:09'!initialize	"TDObject initialize"	Subdivisions _ 6! !!POObject class methodsFor: 'tests' stamp: 'laza 3/24/2000 13:49'!test1	"POObject test1"	| to v1 v2 h t |	to _ self new.	v1 _ POVertex at: 0 @ 20.	v2 _ (POVertex at: 20 @ 0)				z: 10.	h _ POHalfedge new origin: v1.	t _ POHalfedge new origin: v2.	h opposite: t.	t opposite: h.	(to eyeletsFor: h) inspect! !!POSimplePolygon commentStamp: '<historical>' prior: 0!I represent a polygon that is defined by a sequence of vertices. Every vertex is connected to two other vertices.!!POSimplePolygon reorganize!('accessing' after: before: boundingBox bounds end nextButOne: size start vertices vertices:)('adding' add: add:after: add:before: addAll: addLast:)('converting' asEdgeList asSortedCollection normalizedWithin:)('enumerating' do:)('geometry' center length reverseCirculation)('point reduction' normalizeTo: reduceTo:)('private' assorts)('removing' remove:)('testing' circulation includes: is:connectedWith: isSimple)!!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/5/2000 17:08'!after: aVertex 	| index |	index _ self vertices indexOf: aVertex.	^ self vertices atWrap: index + 1! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/5/2000 17:08'!before: aVertex 	| index |	index _ self vertices indexOf: aVertex.	^ self vertices atWrap: index - 1! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 3/21/2000 14:52'!boundingBox	^ vertices inject: (vertices first extent: 0@0) into: [:rec :pts| 		rec encompass: pts].! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 2/11/2000 11:21'!bounds	| origin corner |	origin _ self vertices first.	corner _ self vertices last.	self vertices do: 		[:vertex | 		origin _ origin min: vertex.		corner _ corner max: vertex].	^ origin corner: corner! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/4/2000 17:21'!end	self vertices end! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/5/2000 17:10'!nextButOne: aVertex 	| index |	index _ self vertices indexOf: aVertex.	^ self vertices atWrap: index + 2! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/5/2000 11:28'!size	^ self vertices size! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/4/2000 17:20'!start	self vertices first! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/4/2000 16:41'!vertices	vertices ifNil: [vertices _ OrderedCollection new].	^ vertices! !!POSimplePolygon methodsFor: 'accessing' stamp: 'laza 1/4/2000 16:41'!vertices: anOrderedCollection	vertices _ anOrderedCollection	! !!POSimplePolygon methodsFor: 'adding' stamp: 'laza 1/4/2000 22:37'!add: aVertex 	^ self addLast: aVertex! !!POSimplePolygon methodsFor: 'adding' stamp: 'laza 1/4/2000 22:38'!add: newVertex after: oldVertex 	^ self vertices add: newVertex after: oldVertex! !!POSimplePolygon methodsFor: 'adding' stamp: 'laza 1/4/2000 22:38'!add: newVertex before: oldVertex 	^ self vertices add: newVertex before: oldVertex! !!POSimplePolygon methodsFor: 'adding' stamp: 'laza 1/17/2000 11:01'!addAll: aCollection ^self vertices addAll: aCollection! !!POSimplePolygon methodsFor: 'adding' stamp: 'laza 1/4/2000 22:38'!addLast: aVertex 	^ self vertices addLast: aVertex! !!POSimplePolygon methodsFor: 'converting' stamp: 'laza 1/6/2000 11:10'!asEdgeList	| edgeList |	edgeList _ POEdgeList new.	self vertices do: [:vertex | edgeList edgeFrom: vertex to: (self after: vertex)]! !!POSimplePolygon methodsFor: 'converting' stamp: 'laza 1/5/2000 12:00'!asSortedCollection	"Returns a SortedCollection of my vertices. The sort order is      	lexicographically.    	This can be used as an eventqueue for sweepline algorithms."	^ self assorts copy! !!POSimplePolygon methodsFor: 'converting' stamp: 'laza 4/4/2000 10:00'!normalizedWithin: bounds	| center sp box scale |	scale _ bounds extent y * 0.5.	scale _ scale @ scale negated.	box _ self boundingBox.	center _ box origin + box corner * 0.5.	sp _ POSimplePolygon new.	vertices do: [:each|		sp add: each - center / scale].	^ sp! !!POSimplePolygon methodsFor: 'enumerating' stamp: 'laza 1/17/2000 11:09'!do: aBlock	self vertices do: aBlock! !!POSimplePolygon methodsFor: 'geometry' stamp: 'laza 1/4/2000 18:17'!center	^ self vertices average! !!POSimplePolygon methodsFor: 'geometry' stamp: 'laza 3/20/2000 17:09'!length	| length |	length _ 0.	self vertices do: [:vertex | length _ length + (vertex dist: (self after: vertex))].	^ length! !!POSimplePolygon methodsFor: 'geometry' stamp: 'laza 1/17/2000 11:21'!reverseCirculation	self vertices: self vertices reversed!]style[(18 2 4 33)f1b,f1,f1cblue;b,f1! !!POSimplePolygon methodsFor: 'point reduction' stamp: 'laza 3/20/2000 17:24'!normalizeTo: normLength	| num unitLength normalized cumulativeLength proportion edgeLength start end |	num _ self length // normLength.	num _ num max: 8.	unitLength _ self length / num.	normalized _ OrderedCollection new: num.	normalized add: self vertices first.	cumulativeLength _ 0.	1 to: self vertices size do: [:idx|		start _ self vertices at: idx.		end _ self vertices atWrap: idx+1.		edgeLength _ start dist: end.		cumulativeLength _ cumulativeLength + edgeLength.		[cumulativeLength >= unitLength]			whileTrue: 				[cumulativeLength _ cumulativeLength - unitLength.				proportion _ cumulativeLength / edgeLength.				normalized add: (end interpolateTo: start at: proportion)]].	self vertices: normalized! !!POSimplePolygon methodsFor: 'point reduction' stamp: 'laza 1/6/2000 10:58'!reduceTo: reduceLength 	| stream start end ahead cumulativeAngle cumulativeLength reduced aheadVector endVector angle found |	stream _ ReadStream on: self vertices.	start _ stream next.	end _ stream next.	reduced _ OrderedCollection with: start.	[stream atEnd]		whileFalse: 			[cumulativeAngle _ 0.			cumulativeLength _ 0.			endVector _ start - end.			found _ false.			[found or: [stream atEnd]]				whileFalse: 					[ahead _ stream next.					aheadVector _ end - ahead.					angle _ endVector theta - aheadVector theta.					cumulativeAngle _ cumulativeAngle + angle.					cumulativeLength _ cumulativeLength + endVector r.					(cumulativeAngle abs > 0.2 or: [cumulativeLength > reduceLength])						ifTrue: 							[reduced add: end.							found _ true].					found						ifFalse: 							[end _ ahead.							endVector _ aheadVector]].			start _ end.			end _ ahead].	self vertices: reduced! !!POSimplePolygon methodsFor: 'private' stamp: 'laza 1/5/2000 12:00'!assorts	"Builds a SortedCollection of my vertices. The sort order is       	lexicographically.     	This can be used as an eventqueue for sweepline algorithms."	assorts		ifNil: 			[assorts _ SortedCollection						sortBlock: [:a :b | a x < b x								or: [a x = b x and: [a y < b y]]].			assorts addAll: self vertices].	^ assorts! !!POSimplePolygon methodsFor: 'removing' stamp: 'laza 1/4/2000 22:41'!remove: aVertex 	^ self vertices remove: aVertex! !!POSimplePolygon methodsFor: 'testing' stamp: 'laza 1/6/2000 10:25'!circulation"The circulation of a simple polygon can be #left (counterclockwise) or #right (clockwise)"	| mostLeft |	self isSimple		ifTrue: 			[mostLeft _ self asSortedCollection first.			^ (self before: mostLeft)				to: mostLeft sideOf: (self after: mostLeft)].	self error: 'Polygon is not simple!!'! !!POSimplePolygon methodsFor: 'testing' stamp: 'laza 1/4/2000 18:13'!includes: aVertex	^ self vertices includes: aVertex! !!POSimplePolygon methodsFor: 'testing' stamp: 'laza 1/4/2000 18:24'!is: first connectedWith: second 	^ (self after: first)		= second or: [self before: first = second]! !!POSimplePolygon methodsFor: 'testing' stamp: 'laza 1/17/2000 12:16'!isSimple	"	| queue edges event prev next sleeve1 sleeve2 |queue _ self asSortedCollection removeLast; yourself. 	edges _ OrderedCollection new. 	[queue isEmpty] 	whileFalse:  	[event _ queue removeFirst. 	prev _ self before: event. 	next _ self after: event. 	sleeve1 _ prev x <= event x. 	sleeve2 _ next x <= event x. 	sleeve1 ifTrue: [edges remove: prev]. 	sleeve2 ifTrue: [edges remove: event]. 	sleeve1 ifFalse: [edges do: [:origin | ((origin 	to: (self after: origin) 	intersects: prev 	to: event) 	and: [prev ~= (self after: origin)]) 	ifTrue: [^ false]]]. 	sleeve2 ifFalse: [edges do: [:origin | ((origin 	to: (self after: origin) 	intersects: event 	to: next) 	and: [next ~= origin]) 	ifTrue: [^ false]]]. 	sleeve1 ifFalse: [edges add: prev]. 	sleeve2 ifFalse: [edges add: event]]."	^ true! !!POSimplePolygon class methodsFor: 'examples' stamp: 'laza 1/6/2000 10:26'!testCircle	"SimplePolygon testCircle"	| sp |	sp _ self new vertices: (OrderedCollection new add: 0 @ 50;				 add: 100 @ 10;				 add: 200 @ 100;				 add: 120 @ 300;				 yourself).	"add: 150 @ 320;"	"add: 140 @ 20;"	self inform: sp circulation asString! !!POSimplePolygon class methodsFor: 'examples' stamp: 'laza 1/6/2000 10:44'!testFly	"SimplePolygon testFly"	| sp |	sp _ self new vertices: (OrderedCollection new add: 0 @ 10;				 add: 10 @ 0;				 add: 19 @ 10;				 add: 30 @ 20;				 add: 40 @ 10;				 add: 30 @ 0;				 add: 21 @ 10;				 add: 10 @ 20;				 yourself).	self inform: sp isSimple asString! !!POSimplePolygon class methodsFor: 'examples' stamp: 'laza 1/6/2000 10:27'!testTriangle	"SimplePolygon testTriangle"	| sp |	sp _ self new vertices: (OrderedCollection new add: 0 @ 0;				 add: 10 @ 10;				 add: 20 @ 0;				 yourself).	self inform: sp circulation asString! !!POTriangle commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POTriangle reorganize!('accessing' center edges edges: edgesWithAnyTag edgesWithTag: edgesWithoutAnyTag edgesWithoutTag: oppositeEdgeOf: oppositeVertexOf: sharesCornerWith: subTriangles subTriangles: type type: vertices)('comparing' = hash)('converting' asB3DSimpleMeshFace)('point location' whereIs:)('printing' printOn:)('skeleton' borderEdges innerEdges leftLeg rightLeg)('subtriangles' addSubTriangle: contains: depth leafs removeSubTriangle: size)!!POTriangle methodsFor: 'accessing' stamp: 'laza 1/17/2000 12:01'!center	^ (self edges collect: [:each| each origin]) average! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:59'!edges	^ edges! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/24/2000 16:27'!edges: anArray	edges _ anArray.	edges do: [:edge | edge face: self]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/26/2000 12:33'!edgesWithAnyTag	^ self edges select: [:edge | edge tags isEmptyOrNil not]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:33'!edgesWithTag: aSymbol	^ self edges select: [:edge| edge testTag: aSymbol]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/26/2000 09:28'!edgesWithoutAnyTag	^ self edges select: [:edge | edge tags isEmptyOrNil]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/17/2000 11:35'!edgesWithoutTag: aSymbol 	^ self edges reject: [:edge | edge testTag: aSymbol]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/24/2000 16:35'!oppositeEdgeOf: aVertex 	^ (self edges		detect: [:edge | (edge oneEndIs: aVertex) not]).! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/24/2000 16:37'!oppositeVertexOf: anEdge 	^ self vertices detect: [:vertex| (anEdge oneEndIs: vertex) not]! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/14/2000 15:45'!sharesCornerWith: aTriangle 	^ self vertices includesAnyOf: aTriangle vertices! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:59'!subTriangles	^ subTriangles! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:59'!subTriangles: anObject	subTriangles _ anObject! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:59'!type	^ type! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:59'!type: aSymbol	type _ aSymbol! !!POTriangle methodsFor: 'accessing' stamp: 'laza 1/14/2000 12:17'!vertices	^ self edges collect: [:edge| edge origin]! !!POTriangle methodsFor: 'comparing' stamp: 'laza 1/25/2000 14:16'!= aTDTriangle 	^ self edges asSet = aTDTriangle edges asSet! !!POTriangle methodsFor: 'comparing' stamp: 'laza 1/14/2000 10:59'!hash	^ self edges hash! !!POTriangle methodsFor: 'converting' stamp: 'laza 1/25/2000 15:30'!asB3DSimpleMeshFace	| vectors |	vectors _ self vertices collect: [:vertex | B3DSimpleMeshVertex new position: vertex asB3DVector3].	^ B3DSimpleMeshFace withAll: vectors! !!POTriangle methodsFor: 'point location' stamp: 'laza 1/13/2000 16:59'!whereIs: aPoint 	| location side |	location _ #inside.	self edges do: 		[:edge | 		side _ edge sideOf: aPoint.		side = #right ifTrue: [^ #outside].		side = #center ifTrue: [location _ #edge]].	^ location! !!POTriangle methodsFor: 'printing' stamp: 'laza 1/13/2000 16:59'!printOn: aStream self type ifNotNil: [self type first asString printOn: aStream].			self edges do: 		[:edge | 		edge origin printOn: aStream]! !!POTriangle methodsFor: 'skeleton' stamp: 'laza 1/26/2000 09:47'!borderEdges	^ self edgesWithTag: #border! !!POTriangle methodsFor: 'skeleton' stamp: 'laza 1/26/2000 09:47'!innerEdges	^ self edgesWithoutTag: #border! !!POTriangle methodsFor: 'skeleton' stamp: 'laza 1/31/2000 04:54'!leftLeg	"If one edge of the triangle is tagged as #border or #spine then return   	 the edge that is before the border edge or after the spine edge."	| bidx sidx |	bidx _ sidx _ 0.	1 to: self edges size do: 		[:idx | 		((self edges at: idx)			testTag: #border)			ifTrue: [bidx _ idx].		((self edges at: idx)			testTag: #spine)			ifTrue: [sidx _ idx]].	bidx > 0 ifTrue: [^ self edges atWrap: bidx + 1].	^ self edges atWrap: sidx - 1! !!POTriangle methodsFor: 'skeleton' stamp: 'laza 1/31/2000 04:55'!rightLeg	"If one edge of the triangle is tagged as #border or #spine then return   	the edge that is before the border edge or after the spine edge."	| bidx sidx |	bidx _ sidx _ 0.	1 to: self edges size do: 		[:idx | 		((self edges at: idx)			testTag: #border)			ifTrue: [bidx _ idx].		((self edges at: idx)			testTag: #spine)			ifTrue: [sidx _ idx]].	bidx > 0 ifTrue: [^ self edges atWrap: bidx - 1].	^ self edges atWrap: sidx + 1! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!addSubTriangle: aTriangle	self subTriangles ifNil: [		self subTriangles: (OrderedCollection new: 3)].	self subTriangles add: aTriangle! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!contains: aPoint 	| triangle |	(self whereIs: aPoint)		= #outside		ifTrue: [^ nil]		ifFalse: [self subTriangles isEmptyOrNil ifTrue: [^ self]		ifFalse: [self subTriangles do: [:subTriangle | 			triangle _ subTriangle contains: aPoint.			triangle ifNotNil: [^triangle]]]]! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!depth	| depth |	self subTriangles ifNil: [^ 0]		ifNotNil: 			[depth _ 0.			self subTriangles do: [:subTriangle | depth _ depth max: subTriangle depth].			^ depth + 1]! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!leafs	| size |	self type = #done ifTrue: [^ 0].	self type: #done.	self subTriangles ifNil: [^ 1]		ifNotNil: 			[size _ 0.			self subTriangles do: [:subTriangle | size _ size + subTriangle leafs].			^ size]! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!removeSubTriangle: aTriangle 	self subTriangles remove: aTriangle ifAbsent: []! !!POTriangle methodsFor: 'subtriangles' stamp: 'laza 1/13/2000 16:59'!size	| size |	(self type = #done)		ifTrue: [^ 0].	self type: #done.	self subTriangles ifNil: [^ 1]		ifNotNil: 			[size _ 0.			self subTriangles do: [:subTriangle | size _ size + subTriangle size].			^ size + 1]! !!POTriangle class methodsFor: 'instance creation' stamp: 'laza 1/24/2000 16:26'!with: pointArray	^ self new edges: pointArray! !!POTriangle class methodsFor: 'instance creation' stamp: 'laza 1/24/2000 16:26'!with: a with: b with: c 	^ self with: (Array			with: a			with: b			with: c)! !!POTriangulation commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POTriangulation reorganize!('accessing' points points: toptriangle)('private' addBoundingTriangle legalize:with: splitTriangle:at:)('triangulation' triangulate)!!POTriangulation methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:47'!points	^points! !!POTriangulation methodsFor: 'accessing' stamp: 'laza 1/13/2000 16:47'!points: anObject	points _ anObject! !!POTriangulation methodsFor: 'accessing' stamp: 'laza 1/14/2000 15:51'!toptriangle	^ toptriangle! !!POTriangulation methodsFor: 'private' stamp: 'laza 1/14/2000 12:51'!addBoundingTriangle	| radius p1 p2 p3 center |	radius _ 0.	center _ 0 @ 0.	self points do: [:point | center _ center + point].	center _ center / self points size.	self points do: [:point | radius _ ((point x - center x) abs max: (point y - center y) abs)					max: radius].	radius _ 3 * radius.	p1 _ radius @ 0 + center.	p2 _ 0 @ radius + center.	p3 _ radius negated @ radius negated + center.	toptriangle _ self triangle: p1 to: p2 to: p3! !!POTriangulation methodsFor: 'private' stamp: 'laza 1/17/2000 15:45'!legalize: anEdge with: aPoint 	| triangle incidentTriangle otherPoint left right |	triangle _ anEdge face.	incidentTriangle _ anEdge opposite face.	incidentTriangle isNil ifTrue: [^ self].	otherPoint _ incidentTriangle oppositeVertexOf: anEdge opposite.	(otherPoint		isInsideCircle: anEdge origin		with: anEdge destination		with: aPoint)		ifTrue: 			[self removeEdge: anEdge.			left _ self						triangle: aPoint						to: otherPoint						to: anEdge origin.			right _ self						triangle: aPoint						to: otherPoint						to: anEdge destination.			triangle addSubTriangle: left;			 addSubTriangle: right.			incidentTriangle addSubTriangle: left;			 addSubTriangle: right.			self removeTriangle: triangle;			 removeTriangle: incidentTriangle.			self legalize: (left oppositeEdgeOf: aPoint)				with: aPoint.			self legalize: (right oppositeEdgeOf: aPoint)				with: aPoint]! !!POTriangulation methodsFor: 'private' stamp: 'laza 1/14/2000 12:03'!splitTriangle: boundingTriangle at: point 	| triangle |	boundingTriangle edges do: 		[:edge | 		triangle _ self					triangle: edge origin					to: edge destination					to: point.		boundingTriangle addSubTriangle: triangle].	self removeTriangle: boundingTriangle! !!POTriangulation methodsFor: 'triangulation' stamp: 'laza 1/28/2000 16:25'!triangulate	| triangle |	self addBoundingTriangle.	self points do: 		[:point | 		triangle _ toptriangle contains: point.		self splitTriangle: triangle at: point.		triangle edges do: [:edge | self legalize: edge with: point]].	"Remove bounding triangle and incident triangles"	self faces copy do: [:face | (face sharesCornerWith: toptriangle)			ifTrue: [self removeTriangle: face]].	! !!POTriangulation class methodsFor: 'instance creation' stamp: 'laza 3/23/2000 15:16'!on: points 	^ self new points: points;	 triangulate! !!PaintBoxMorph methodsFor: 'actions' stamp: 'laza 3/24/2000 17:58'!action	^ action	! !!Point reorganize!('accessing' x y)('arithmetic' * + - / // \\ abs)('comparing' < <= = > >= hash hashMappedBy: max: min: min:max:)('converting' @ adaptToCollection:andSend: adaptToNumber:andSend: adaptToString:andSend: asFloatPoint asIntegerPoint asPoint corner: extent: isPoint rect:)('copying' copy deepCopy shallowCopy veryDeepCopyWith:)('geometry' isInsideCircle:with:with: sideOf: to:intersects:to: to:sideOf: triangleArea:with:)('interpolating' interpolateTo:at:)('point functions' bearingToPoint: crossProduct: dist: dotProduct: eightNeighbors flipBy:centerAt: fourNeighbors grid: nearestPointAlongLineFrom:to: nearestPointOnLineFrom:to: normal normalized octantOf: onLineFrom:to: onLineFrom:to:within: quadrantOf: rotateBy:centerAt: sortsBefore: transposed)('polar coordinates' degrees r theta)('printing' basicType encodePostscriptOn: printOn: storeOn:)('private' bitShiftPoint: setR:degrees: setX:setY:)('transforming' adhereTo: negated rotateBy:about: scaleBy: scaleFrom:to: translateBy:)('truncation and round off' rounded truncateTo: truncated)!!Point methodsFor: 'geometry' stamp: 'laza 1/24/2000 03:44'!isInsideCircle: a with: b with: c 	"Returns TRUE if self is inside the circle defined by the     	points a, b, c. See Guibas and Stolfi (1985) p.107"	^ (a dotProduct: a)		* (b triangleArea: c with: self) - ((b dotProduct: b)			* (a triangleArea: c with: self)) + ((c dotProduct: c)			* (a triangleArea: b with: self)) - ((self dotProduct: self)			* (a triangleArea: b with: c)) > 0.0! !!Point methodsFor: 'geometry' stamp: 'laza 1/6/2000 10:30'!sideOf: otherPoint 	"Returns #left, #right or #center if the otherPoint lies to the left, right 	or on the line given by the vector from 0@0 to self"	| side |	side _ (self crossProduct: otherPoint) sign.	^ {#right. #center. #left} at: side + 2! !!Point methodsFor: 'geometry' stamp: 'ar 4/6/2000 18:37'!to: end1 intersects: start2 to: end2 	"Returns true if the linesegment from start1 (=self) to end1 intersects      	    with the segment from start2 to end2, otherwise false."	| start1 sideStart sideEnd |	start1 _ self.	(((start1 = start2 or: [end1 = end2])		or: [start1 = end2])		or: [start2 = end1])		ifTrue: [^ true].	sideStart _ start1 to: end1 sideOf: start2.	sideEnd _ start1 to: end1 sideOf: end2.	sideStart = sideEnd ifTrue: [^ false].	sideStart _ start2 to: end2 sideOf: start1.	sideEnd _ start2 to: end2 sideOf: end1.	sideStart = sideEnd ifTrue: [^ false].	^ true! !!Point methodsFor: 'geometry' stamp: 'laza 1/5/2000 11:50'!to: end sideOf: otherPoint 	"Returns #left, #right, #center if the otherPoint lies to the left, right or on the line given by the vector from self to end"	^ end - self sideOf: otherPoint - self! !!Point methodsFor: 'geometry' stamp: 'laza 1/17/2000 15:47'!triangleArea: b with: c	"Returns twice the area of the oriented triangle (a, b, c), i.e., the   	area is positive if the triangle is oriented counterclockwise"	^ b x - self x * (c y - self y) - (b y - self y * (c x - self x))! !!Point methodsFor: 'point functions' stamp: 'laza 12/13/1999 11:43'!octantOf: otherPoint 	"Return 1..8 indicating relative direction to otherPoint.  	1=ESE, 2=SSE, ... etc. clockwise to 8=ENE"	"[Sensor anyButtonPressed] whileFalse: [(Display boundingBox center 	octantOf: Sensor cursorPoint) printString displayAt: 0@0]"	| quad moreHoriz |	(x = otherPoint x and: [y > otherPoint y])		ifTrue: [^ 6].	"special case"	(y = otherPoint y and: [x < otherPoint x])		ifTrue: [^ 8].	quad _ self quadrantOf: otherPoint.	moreHoriz _ (x - otherPoint x) abs >= (y - otherPoint y) abs.	(quad even eqv: moreHoriz)		ifTrue: [^ quad * 2]		ifFalse: [^ quad * 2 - 1]! !!POVertex commentStamp: '<historical>' prior: 0!Main comment stating the purpose of this class and relevant relationship to other classes.Possible useful expressions for doIt or printIt.Structure: instVar1		type -- comment about the purpose of instVar1 instVar2		type -- comment about the purpose of instVar2Any further useful comments about the general approach of this implementation.!!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!degree	| edge count start |	start _ self halfedge.	start ifNil: [^ 0].	edge _ start opposite.	count _ 1.	[edge next = start]		whileFalse: 			[edge _ edge next opposite.			count _ count + 1].	^ count! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!faces	faces ifNil: [faces _ Set new].	^ faces! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!faces: aSet	faces _ aSet! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!halfedge	^ halfedge! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!halfedge: aHalfedge	halfedge _ aHalfedge! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!incidentEdges	| edge start edges |	edges _ OrderedCollection new.	start _ self halfedge.	start ifNil: [^ nil].	edge _ start.	edges add: edge.	[edge opposite next = start]		whileFalse: 			[edge _ edge opposite next.			edges add: edge].	^ edges! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!tags	tags ifNil: [tags _ Dictionary new].	^ tags! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/13/2000 17:02'!tags: aDictionary	tags _ aDictionary! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/25/2000 16:44'!z	^ z! !!POVertex methodsFor: 'accessing' stamp: 'laza 1/25/2000 16:44'!z: aNumber	z _ aNumber! !!POVertex methodsFor: 'converting' stamp: 'laza 1/31/2000 05:21'!asB3DVector3	^ B3DVector3		x: self x 		y: self y 		z: self z ! !!POVertex methodsFor: 'converting' stamp: 'laza 1/31/2000 05:21'!asPoint	^ Point x: self x y: self y ! !!POVertex methodsFor: 'printing' stamp: 'laza 1/28/2000 16:06'!printOn: aStream 	aStream nextPut: $<.	super printOn: aStream.	self z = 0 ifFalse: [aStream nextPut: $@. self z printOn: aStream].	aStream nextPut: $>! !!POVertex methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:02'!clearAllTags	self tags: Dictionary new! !!POVertex methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:02'!clearTag: aSymbol 	self tags remove: aSymbol ifAbsent: []! !!POVertex methodsFor: 'tagging' stamp: 'laza 1/13/2000 17:02'!setTag: aSymbol 	self tags at: aSymbol put: true! !!POVertex methodsFor: 'tagging' stamp: 'laza 1/25/2000 17:06'!testTag: aSymbol 	^ self tags includesKey: aSymbol!]style[(9 7 5 4 19 7)f1b,f1cmagenta;ib,f1,f1cblue;b,f1,f1cmagenta;b! !!POVertex methodsFor: 'testing' stamp: 'laza 1/13/2000 17:02'!isConnected	^ self halfedge isNil not! !!POVertex methodsFor: 'testing' stamp: 'laza 1/13/2000 17:02'!isDeadEnd	^ self isConnected and: [self halfedge opposite next = self halfedge]! !!POVertex class methodsFor: 'instance creation' stamp: 'laza 1/25/2000 16:46'!at: aPoint 	^ (self x: aPoint x y: aPoint y) z: 0! !!Preferences class methodsFor: 'halos' stamp: 'laza 3/24/2000 13:52'!classicHaloSpecs	"Non-iconic halos with traditional placements"	"Preferences installClassicHaloSpecs"	"Preferences resetHaloSpecifications"  "  <-  will result in the standard default halos being reinstalled"	"NB: listed below in clockwise order"		^ #(	"  	selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------"	(addMenuHandle:		left			top				(red)							none)	(addDismissHandle:		leftCenter	top				(red		muchLighter)			'Halo-Dismiss')	(addGrabHandle:			center		top				(black)							none)	(addDragHandle:			rightCenter	top				(brown)							none)	(addDupHandle:			right		top				(green)							none)		(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		none)	(addPoohHandle:			right		center			(white)							none)	(addPaintBgdHandle:		right		center			(lightGray)						none)	(addRepaintHandle:		right		center			(lightGray)						none)	(addGrowHandle:		right		bottom			(yellow)						none)	(addScaleHandle:		right		bottom			(lightOrange)					none)	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				none)	(addFontStyleHandle:		center		bottom			(lightRed)						none)	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						none)	(addRotateHandle:		left			bottom			(blue)							none))! !!Preferences class methodsFor: 'halos' stamp: 'laza 3/24/2000 16:05'!customHaloSpecs	"Intended for you to modify to suit your personal preference.  What is implemented in the default here is just a skeleton; in comment at the bottom of this method are some useful lines you may wish to paste in to the main body here, possibly modifying positions, colors, etc..	Note that in this example, we include:			Dismiss handle, at top-left			Menu handle, at top-right			Resize handle, at bottom-right			Rotate handle, at bottom-left			Drag handle, at top-center			Recolor handle, at left-center.  (this one is NOT part of the standard formulary --											it is included here to illustrate how to 											add non-standard halos)			Note that the optional handles for specialized morphs, such as Sketch, Text, PasteUp, are also included"	^ #(	(addDismissHandle:		left			top				(red		muchLighter)			'Halo-Dismiss')	(addMenuHandle:		right		top				(red)							'Halo-Menu')	(addDragHandle:			center	top					(brown)							'Halo-Drag')	(addGrowHandle:		right		bottom			(yellow)						'Halo-Scale')	(addScaleHandle:		right		bottom			(lightOrange)					'Halo-Scale')	(addRecolorHandle:		left			center			(green muchLighter lighter)		'Halo-Recolor')	(addPaintBgdHandle:		right		center			(lightGray)						'Halo-Paint')	(addRepaintHandle:		right		center			(lightGray)						'Halo-Paint')	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						'Halo-FontSize')	(addFontStyleHandle:		center		bottom			(lightRed)						'Halo-FontStyle')	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				'Halo-FontEmph')	(addRotateHandle:		left			bottom			(blue)							'Halo-Rot')	(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		'Halo-Debug')	(addPoohHandle:			right		center			(white)							'Halo-Pooh')			)	"  Other useful handles...  		selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------	(addTileHandle:			left			bottomCenter	(lightBrown)					'Halo-Tile')	(addViewHandle:			left			center			(cyan)							'Halo-View')	(addGrabHandle:			center		top				(black)							'Halo-Grab')	(addDragHandle:			rightCenter	top				(brown)							'Halo-Drag')	(addDupHandle:			right		top				(green)							'Halo-Dup')		(addHelpHandle:			center		bottom			(lightBlue)						'Halo-Help')	(addFewerHandlesHandle:	left		topCenter		(paleBuff)						'Halo-FewerHandles')	(addPaintBgdHandle:		right		center			(lightGray)						'Halo-Paint')	(addRepaintHandle:		right		center			(lightGray)						'Halo-Paint')	"! !!Preferences class methodsFor: 'halos' stamp: 'laza 3/24/2000 16:04'!iconicHaloSpecifications	"Preferences resetHaloSpecifications"	^ #(	"  	selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------"	(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		'Halo-Debug')	(addPoohHandle:			right		center			(white)							'Halo-Pooh')	(addDismissHandle:		left			top				(red		muchLighter)			'Halo-Dismiss')	(addRotateHandle:		left			bottom			(blue)							'Halo-Rot')	(addMenuHandle:		leftCenter	top				(red)							'Halo-Menu')	(addTileHandle:			left			bottomCenter	(lightBrown)					'Halo-Tile')	(addViewHandle:			left			center			(cyan)							'Halo-View')	(addGrabHandle:			center		top				(black)							'Halo-Grab')	(addDragHandle:			rightCenter	top				(brown)							'Halo-Drag')	(addDupHandle:			right		top				(green)							'Halo-Dup')		(addHelpHandle:			center		bottom			(lightBlue)						'Halo-Help')	(addGrowHandle:		right		bottom			(yellow)						'Halo-Scale')	(addScaleHandle:		right		bottom			(lightOrange)					'Halo-Scale')	(addScriptHandle:		right		bottomCenter	(green muchLighter)			'Halo-Script')	(addPaintBgdHandle:		right		center			(lightGray)						'Halo-Paint')	(addRepaintHandle:		right		center			(lightGray)						'Halo-Paint')	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						'Halo-FontSize')	(addFontStyleHandle:		center		bottom			(lightRed)						'Halo-FontStyle')	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				'Halo-FontEmph')		) ! !!Preferences class methodsFor: 'halos' stamp: 'laza 3/24/2000 16:05'!simpleFullHaloSpecifications	"This method gives the specs for the 'full' handles variant when simple halos are in effect"	"Preferences resetHaloSpecifications"	^ #(	"  	selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------"	(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		'Halo-Debug')	(addPoohHandle:			right		center			(white)							'Halo-Pooh')	(addDismissHandle:		left			top				(red		muchLighter)			'Halo-Dismiss')	(addRotateHandle:		left			bottom			(blue)							'Halo-Rot')	(addMenuHandle:		leftCenter	top				(red)							'Halo-Menu')	(addTileHandle:			left			bottomCenter	(lightBrown)					'Halo-Tile')	(addViewHandle:			left			center			(cyan)							'Halo-View')	(addGrabHandle:			center		top				(black)							'Halo-Grab')	(addDragHandle:			rightCenter	top				(brown)							'Halo-Drag')	(addDupHandle:			right		top				(green)							'Halo-Dup')		(addHelpHandle:			center		bottom			(lightBlue)						'Halo-Help')	(addGrowHandle:		right		bottom			(yellow)						'Halo-Scale')	(addScaleHandle:		right		bottom			(lightOrange)					'Halo-Scale')	(addFewerHandlesHandle:	left		topCenter		(paleBuff)						'Halo-FewerHandles')	(addScriptHandle:		right		bottomCenter	(green muchLighter)			'Halo-Script')	(addPaintBgdHandle:		right		center			(lightGray)						'Halo-Paint')	(addRepaintHandle:		right		center			(lightGray)						'Halo-Paint')	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						'Halo-FontSize')	(addFontStyleHandle:		center		bottom			(lightRed)						'Halo-FontStyle')	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				'Halo-FontEmph')		) ! !!WonderlandActor methodsFor: 'testing' stamp: 'laza 3/21/2000 15:59'!isHandmade	^(self getProperty: #handmade) == true! !!WonderlandCameraMorph reorganize!('accessing' getCamera mode mode: outline outline:)('change reporting' layoutChanged)('controls' getCameraControls hideCameraControls showCameraControls)('debug' debugDraw)('drag and drop' acceptDroppingMorph:event: wantsDroppedMorph:event:)('drawing' areasRemainingToFill: drawOn: renderOn: sketchOn:)('event handling' convertEvent: doFirstPersonControl: firstPersonKeystroke: getEventFocus handlesMouseDown: handlesMouseOver: keyStroke: mouseDown: mouseEnter: mouseLeave: mouseMove: mouseUp: setEventFocus:)('geometry' containsPoint:)('halos and balloon help' balloonHelpTextForHandle:)('initialization' initialize initializeWithCamera: okayToEnterProject)('menu' addCustomMenuItems:hand: getDragAndDropState openToDragAndDrop toggleDragAndDropState)('picking points' pickPointInBounds: pickPointOnBounds:)('pooh' clearStroke createPoohActor drawOnTextureOf:from:to: paintMode paintModeFor: recordStroke: strokeMode)('pooh-actions' clear: ellipse: erase: fill: line: mouseDownEllipse: mouseDownLine: mouseDownRect: mouseMoveEllipse: mouseMoveLine: mouseMoveRect: mouseUpEllipse: mouseUpLine: mouseUpRect: paint: polygon: prepareAction: rect: restoreTexture restoreTextureFrom: stamp: star: storeTexture)('pooh-palette' cancel cancelPainting: clear clearPainting: paletteAttached: paletteDetached: save savePainting: undo undoPainting:)('primitive behaviors')('stepping' step stepTime wantsSteps)('wrappers' addHalo: addHalo:from: removeAllWrappers)('object fileIn' convertbosfcemmmelmf0:bosfcemmmelmfmoccccclpprb0:)!!WonderlandCameraMorph methodsFor: 'accessing' stamp: 'laza 2/2/2000 16:10'!mode	^ mode! !!WonderlandCameraMorph methodsFor: 'accessing' stamp: 'laza 2/2/2000 16:10'!mode: aSymbol	mode _ aSymbol! !!WonderlandCameraMorph methodsFor: 'accessing' stamp: 'ar 4/6/2000 18:33'!outline	^ outline ifNil:[outline _ POSimplePolygon new].! !!WonderlandCameraMorph methodsFor: 'accessing' stamp: 'laza 3/20/2000 16:27'!outline: aSimplePolygon	outline _ aSimplePolygon! !!WonderlandCameraMorph methodsFor: 'drawing' stamp: 'laza 3/20/2000 16:08'!drawOn: aCanvas 	aCanvas asBalloonCanvas render: self.	self outline ifNotNil: [self sketchOn: aCanvas].! !!WonderlandCameraMorph methodsFor: 'drawing' stamp: 'laza 3/20/2000 16:53'!sketchOn: aCanvas	| vtx prev next |	vtx _ ReadStream on: self outline vertices.	prev _ vtx next.	[vtx atEnd] whileFalse: [		next _ vtx next.		aCanvas line: prev to: next width: 5 color: Color red.		prev _ next]! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'ar 11/7/1999 23:27'!keyStroke: evt	"Handle a keyboard event"	| newEvent reactions |	firstPersonControls == true "For existing camera morphs"		ifTrue:[^self firstPersonKeystroke: evt].	newEvent _ self convertEvent: evt.	newEvent ifNil:[^self].	"Check for active textures"	newEvent getActor hasActiveTexture 		ifTrue:[^newEvent getActor morphicKeyPress: newEvent].	"Route to actor"	reactions _ newEvent getActor getReactionsTo: keyPress.	reactions ifNotNil:[ 		reactions do: [:aReaction | aReaction reactTo: newEvent ]].! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'laza 3/27/2000 16:33'!mouseDown: evt 	"When the user clicks in a camera window, determine which actor the    	         user clicked on and have that actor respond to the event"	| newEvent reactions |	newEvent _ self convertEvent: evt.	newEvent		ifNotNil: 			[((mode = #paint and: [newEvent getVertex ~= nil]) and: [evt commandKeyPressed not])				ifTrue:					[self prepareAction: newEvent.					^self perform: palette action with: newEvent]				ifFalse:					[newEvent getActor hasActiveTexture						ifTrue: [^ newEvent getActor morphicMouseDown: newEvent].					evt redButtonPressed						ifTrue: 							[reactions _ newEvent getActor getReactionsTo: leftMouseDown.							mouseUpButton _ leftMouseUp]						ifFalse: [evt yellowButtonPressed								ifTrue: 									[reactions _ newEvent getActor getReactionsTo: rightMouseDown.									mouseUpButton _ rightMouseUp]								ifFalse: [reactions _ nil]].					reactions ifNotNil: [reactions do: [:aReaction | aReaction reactTo: newEvent]]]]! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'laza 3/24/2000 17:23'!mouseEnter: evt	"When the mouse enters our window give it the keyboard focus"	evt hand newKeyboardFocus: self.	mode = #paint ifTrue: [evt hand showTemporaryCursor: palette actionCursor].! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'laza 3/24/2000 17:24'!mouseLeave: evt	"When the mouse leaves our window release the keyboard focus"	evt hand newKeyboardFocus: nil.	mode = #paint ifTrue: [evt hand showTemporaryCursor: nil]! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'laza 3/30/2000 11:38'!mouseMove: evt 	"When the user clicks in a camera window, determine which actor the    	    user clicked on and have that actor respond to the event"	| newEvent reactions |	newEvent _ self convertEvent: evt.	mode = #stroke		ifTrue: [self recordStroke: evt cursorPoint]		ifFalse: [newEvent				ifNotNil: 					[((mode = #paint and: [newEvent getVertex ~= nil]) and: [evt commandKeyPressed not])						ifTrue:							[newEvent getActor = currentActor								ifTrue: [									self prepareAction: newEvent.									^self perform: palette action with: newEvent]]						ifFalse: [							newEvent getActor hasActiveTexture								ifTrue: [^ newEvent getActor morphicMouseMove: newEvent].								reactions _ newEvent getActor getReactionsTo: mouseMove.								reactions ifNotNil: [reactions do: [:aReaction | aReaction reactTo: newEvent]]]]]! !!WonderlandCameraMorph methodsFor: 'event handling' stamp: 'laza 3/27/2000 17:10'!mouseUp: evt 	"When the user clicks in a camera window, determine which actor the    	user clicked on and have that actor respond to the event"	| newEvent reactions |	self mode = #stroke ifTrue: [self createPoohActor. ^ self mode: nil].	newEvent _ self convertEvent: evt.	newEvent ifNil: [^ self].	(self mode = #paint and: [newEvent getVertex ~= nil])		ifTrue:			[self prepareAction: newEvent.			^ self perform: palette action with: newEvent].	newEvent getActor hasActiveTexture ifTrue: [^ newEvent getActor morphicMouseUp: newEvent].	reactions _ newEvent getActor getReactionsTo: mouseUpButton.	reactions ifNotNil: [reactions do: [:aReaction | aReaction reactTo: newEvent]]! !!WonderlandCameraMorph methodsFor: 'halos and balloon help' stamp: 'laza 3/24/2000 13:56'!balloonHelpTextForHandle: aHandle	|  itsSelector |	itsSelector _ aHandle eventHandler firstMouseSelector.	itsSelector == #strokeMode ifTrue: [^'Create Pooh Object'].	^ super balloonHelpTextForHandle: aHandle! !!WonderlandCameraMorph methodsFor: 'initialization' stamp: 'laza 4/4/2000 10:00'!initialize	super initialize.	lastCursorPoint _ 0 @ 0.	Project current addGuard: self.	"Teddy"	self mode: #view.	self outline: POSimplePolygon new! !!WonderlandCameraMorph methodsFor: 'menu' stamp: 'laza 2/14/2000 17:46'!addCustomMenuItems: aCustomMenu hand: aHandMorph 	super addCustomMenuItems: aCustomMenu hand: aHandMorph.	aCustomMenu addUpdating: #getDragAndDropState action: #toggleDragAndDropState.! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/20/2000 16:20'!clearStroke	self outline vertices: OrderedCollection new.! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'ar 4/6/2000 18:58'!createPoohActor	| tdo actor |	outline normalizeTo: 20.	"outline reduceTo: 80."	outline _ outline normalizedWithin: self bounds.	tdo _ POObject createOn: self outline.	actor _ self getWonderland makeActorNamed: 'pooh'.	actor setProperty: #handmade toValue: true;	 setMesh: tdo asB3DSimpleMesh;	 setColor: brown;	 setTexturePointer: ((Form extent: 256@128 depth: Display depth) fillColor: Color white) asTexture.	"actor scaleByMatrix: (B3DMatrix4x4 identity setScale: 0.01@0.01@0.01)."	actor setComposite: (myCamera getMatrixFromRoot composedWithLocal: (B3DMatrix4x4 withOffset: 0@0@2)).	self clearStroke.	Cursor normal beCursor! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/24/2000 15:31'!drawOnTextureOf: anActor from: texStart to: texEnd	"texStart and texEnd are Coordinates on a Texture"	| texture range start end |	texture _ anActor getTexturePointer.	range _ texture extent.	start _ range * texStart.	end _ range * texEnd.	texture drawLine: (Form dotOfSize: 3) from: start to: end clippingBox: (1@1 extent: range) rule: Form over fillColor: nil ! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/29/2000 10:44'!paintMode	| temp clickedActor |	self mode: #paint.	temp _ myCamera pickObjectAndVertexAt: Sensor cursorPoint.	clickedActor _ temp key.	backup _ clickedActor getTexturePointer deepCopy.	palette _ World paintBox.	palette position: self position + (self extent x @ 0); focusMorph: self.! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/24/2000 19:09'!paintModeFor: anActor	self mode: #paint.	(World paintBox) position: self position + (self extent x @ 0); focusMorph: self.! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/20/2000 16:11'!recordStroke: p	self outline add: p! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'laza 3/20/2000 16:55'!strokeMode	self clearStroke.	self mode: #stroke.	Cursor crossHair beCursor.	self removeHalo.! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 15:50'!clear: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 14:18'!ellipse: newEvent	| type |	type _ newEvent getMorphicEvent type.	self perform: (type, 'Ellipse:') asSymbol with: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 15:42'!erase: newEvent	currentCanvas fillRectangle: (currentPosition extent: currentNib extent) color: Color white! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 15:51'!fill: newEvent	currentCanvas form shapeFill: currentColor interiorPoint: currentPosition! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 13:42'!line: newEvent	| type |	type _ newEvent getMorphicEvent type.	self perform: (type, 'Line:') asSymbol with: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 14:18'!mouseDownEllipse: newEvent	self mouseDownLine: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 16:00'!mouseDownLine: newEvent	self storeTexture.	lastPosition _ currentPosition	! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 16:40'!mouseDownRect: newEvent	self mouseDownLine: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 16:06'!mouseMoveEllipse: newEvent	| rect |	self restoreTexture.	rect _ Rectangle encompassing: { lastPosition. currentPosition }.	currentCanvas fillOval: rect color: currentColor borderWidth: currentNib extent x borderColor: Color black! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 15:59'!mouseMoveLine: newEvent	self restoreTexture.	currentCanvas line: lastPosition to: currentPosition width: currentNib extent x color: currentColor! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 16:02'!mouseMoveRect: newEvent	| rect |	self restoreTexture.	rect _ Rectangle encompassing: { lastPosition. currentPosition }.	currentCanvas frameAndFillRectangle: rect fillColor: currentColor borderWidth: currentNib extent x borderColor: Color black! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 16:06'!mouseUpEllipse: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 14:20'!mouseUpLine: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 16:43'!mouseUpRect: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 15:41'!paint: newEvent	currentCanvas stencil: currentNib at: currentPosition color: currentColor! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 15:50'!polygon: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 4/1/2000 20:58'!prepareAction: newEvent	|  range  |	currentColor _ palette getColor.	currentNib _ palette getNib.	currentActor _ newEvent getActor.	currentCanvas _ (FormCanvas on: currentActor getTexturePointer).	range _ currentCanvas extent.	currentPosition _ newEvent getVertex texCoords * range - (currentNib extent // 2).! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 16:41'!rect: newEvent	| type |	type _ newEvent getMorphicEvent type.	self perform: (type, 'Rect:') asSymbol with: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/30/2000 10:02'!restoreTexture	self restoreTextureFrom: restore! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/30/2000 10:02'!restoreTextureFrom: aForm	| texture |	texture _ aForm deepCopy.	currentActor setTexturePointer: texture.	currentCanvas setForm: texture.! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/27/2000 15:50'!stamp: newEvent! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 09:27'!star: newEvent	"verts _ (0 to: 350 by: 36) collect: [:angle |		(Point r: (oldR _ oldR = ext ifTrue: [ext*5//12] ifFalse: [ext]) degrees: angle + pt degrees)			+ strokeOrigin].		poly _ PolygonMorph new addHandles.	poly color: currentColor; borderWidth: currentNib extent x; borderColor: Color black.	poly privateOwner: self.	poly bounds: (strokeOrigin extent: ext).	poly setVertices: verts.	poly drawOn: formCanvas."! !!WonderlandCameraMorph methodsFor: 'pooh-actions' stamp: 'laza 3/29/2000 16:00'!storeTexture	restore _ currentCanvas form deepCopy.! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/30/2000 10:04'!cancel	mode _ nil.	self restoreTextureFrom: backup.	palette delete! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/24/2000 16:38'!cancelPainting: aPaintBoxMorph	^self cancel! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 4/5/2000 09:55'!clear	currentActor ifNotNil: [		currentActor setTexturePointer: ((Form extent: 256@128 depth: Display depth) fillColor: Color white) asTexture]! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/24/2000 16:32'!clearPainting: aPaintBoxMorph	"Clear the image after user issued #clear in aPaintBoxMorph"	^self clear! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/24/2000 16:32'!paletteAttached: aPaintBoxMorph	"A new palette has been attached to the receiver.	Don't know what to do here..."! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/30/2000 11:08'!paletteDetached: aPaintBoxMorph	self cancel	! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/30/2000 11:03'!save	(self getWonderland getUndoStack) push: (UndoTextureChange for: currentActor from: backup).	palette delete.	mode _ nil! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/24/2000 16:33'!savePainting: aPaintBoxMorph	"Save the image after user issued #keep in aPaintBoxMorph"	^self save! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/30/2000 10:03'!undo	self restoreTextureFrom: backup! !!WonderlandCameraMorph methodsFor: 'pooh-palette' stamp: 'laza 3/24/2000 16:39'!undoPainting: aPaintBoxMorph	^self undo! !!WonderlandCameraMorph methodsFor: 'object fileIn' stamp: 'ar 4/6/2000 18:25'!convertbosfcemmmelmf0: varDict bosfcemmmelmfmoccccclpprb0: smartRefStrm	"These variables are automatically stored into the new instance ('myCamera' 'myControls' 'eventFocus' 'lastCursorPoint' 'mouseUpButton' 'firstPersonControls' ).	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."	"New variables: ('mode' 'outline' 'currentActor' 'currentPosition' 'currentCanvas' 'currentColor' 'currentNib' 'lastPosition' 'paintMode' 'palette' 'restore' 'backup' )  If a non-nil value is needed, please assign it."! !!WonderlandCameraMorph class methodsFor: 'initialize-release' stamp: 'laza 3/24/2000 14:23'!initialize	"WonderlandCameraMorph initialize"	self installPoohIcon! !!WonderlandCameraMorph class methodsFor: 'pooh stuff' stamp: 'laza 4/4/2000 14:14'!installPoohIcon	ScriptingSystem saveForm:			((ColorForm			extent: 16 @ 16			depth: 1			fromArray: #(0 0 0 473432064 536346624 229638144 267386880 106954752							62914560 132120576 267386880 536346624 511180800 0 0 0 )			offset: 0 @ 0)			colorsFromArray: #((1.0 1.0 1.0 ) (0.0 0.0 0.004 ) ))		atKey: 'Halo-Pooh'! !!WonderlandCameraMorph class methodsFor: 'pooh stuff' stamp: 'laza 4/5/2000 10:19'!openPoohAboutWindow	"WonderlandCameraMorph openPoohAboutWindow"	| window image text button extent |	extent _ Display extent // 3 * (1.5@1.5).	window _ SystemWindow labelled: 'About Pooh'.	image _ (ImageMorph new image: self poohAboutImage).	text _ TextMorph new contentsWrapped: self poohAboutText; occlusionsOnOff.	button _ SimpleButtonMorph new label: 'Ok'; target: window; actionSelector: #delete.	window addMorph: text frame: (0.01@0.01 corner: 0.99@0.84).	window addMorph: image frame: (0.01@0.01 corner: 0.99@0.84).	window addMorph: button frame: (0.45@0.85 corner: 0.55@0.99).	window setWindowColor: Color white;		color: Color white.	window openInWorldExtent: extent.! !!WonderlandCameraMorph class methodsFor: 'pooh stuff' stamp: 'laza 4/4/2000 16:02'!poohAboutImage ^  (ColorForm	extent: 105@109	depth: 4	fromArray: #( 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 273 0 0 0 0 0 0 0 0 0 0 0 0 0 4369 286261248 0 0 0 0 0 0 0 0 0 0 0 0 1118481 286330880 0 0 0 0 0 0 0 0 0 0 0 0 17895698 554766336 0 0 0 0 0 0 0 0 0 0 0 1 286331426 571543552 0 0 0 0 0 0 0 0 0 0 0 17 286401058 572592145 268435456 1118480 0 0 0 0 0 0 0 0 0 273 287449634 572592401 285212672 1118481 285212672 0 0 0 0 0 0 0 0 4369 287449634 572592401 286326784 286331153 286261248 0 0 0 0 0 0 0 17895697 286331153 287449634 571543825 286331137 286331409 286330880 0 0 0 0 0 0 69632 286331153 286335505 287449634 571543842 554766609 286335522 286330880 0 0 0 0 0 0 69905 286331153 286335249 287449634 571543842 572592401 286335522 286330880 0 0 0 0 0 0 285217041 286331426 572662033 287449634 571543842 572662305 286401058 554766592 0 0 0 0 0 1 286265617 286335522 572596497 287449634 554766882 572662305 287449634 554766592 0 0 0 0 0 1 286331153 303112738 554770705 287449634 554766882 572662306 287449634 571543552 0 0 0 0 0 1 286331426 572662306 286335505 287449634 286335522 572662306 287449634 554766336 0 0 0 0 0 17 286331426 572662305 286401057 287449634 554836514 572662306 555885090 286330880 0 0 0 0 0 4369 286401058 572662305 287449634 287449634 572662306 572662306 572662306 286330880 0 0 0 0 0 1118481 287449634 572662289 304226850 572662306 572662306 572662306 571544098 286326784 0 0 0 0 0 1118481 287449634 572662289 304226850 572662306 572662306 572662306 571544097 286261248 0 0 0 0 0 1118481 304226850 572662289 304226850 572662306 572662306 572662306 572592657 286261248 0 0 0 0 0 17895698 572662306 572662289 572662306 572662306 572662306 572662306 572592401 268435456 0 0 0 0 0 286331426 572662306 572662289 572662306 572662306 572662306 572662306 571543825 0 0 0 0 0 1 286331426 572662306 572662289 572662306 572662306 572662306 572662306 571543825 0 0 0 0 0 17 287449634 572662306 572662290 554770978 572662306 572662306 572662306 571543552 0 0 0 0 0 273 304226850 572662306 572662289 286335522 572662306 572662306 572662306 571543552 0 0 0 0 0 273 304226850 572662306 572662289 286401058 572662306 572662306 572662306 571543552 0 0 0 0 0 69905 572662306 572662306 572662289 287449634 572662306 572662306 572662306 571543552 0 0 0 0 0 69905 572662306 572662306 572662289 304226850 572662306 572662306 572662306 571543552 0 0 0 0 0 1118482 572662306 572662306 572662289 287449634 572662306 572662306 572662306 554766336 0 0 0 0 0 286331170 572662305 286331154 572662033 303112738 572662306 572662306 572662306 286326784 0 0 0 0 0 286331170 572662305 286331153 572662033 303112738 572662306 572662306 572662306 286326784 0 0 0 0 17 286331426 572662306 286331153 572657937 286335522 572662306 572662306 572662306 286261248 0 0 0 0 273 286335522 572662306 572592401 572657937 554836514 572662306 572662306 572662305 286261248 0 0 0 0 273 286401058 572662306 572657953 304222481 555885090 572662306 572662306 572662305 286261248 0 0 0 0 273 286401058 572662306 572662033 304222482 555885090 572662306 572662306 572662289 285212672 0 0 0 0 273 286401058 572662306 572662033 287445266 287449634 572662306 572662306 572662289 285212672 0 0 0 0 273 287449634 572662306 572662033 304222482 304226850 572662306 572662306 572662033 285212672 0 0 0 0 4369 287449634 572662306 572662289 287449362 304226850 572662306 572662306 572662033 285212672 0 0 0 0 1118481 304226850 572662306 572662305 287449362 287449634 572662306 572662306 572657937 268435456 0 0 0 0 1118481 572662306 572662306 572662305 286400785 287449634 572662306 572662306 572657937 0 0 0 0 0 1118481 572662306 572662306 572662306 286335249 287449634 572662306 572662306 572592400 0 0 0 0 0 4370 572662306 554770978 572662306 286331153 554836514 572662306 572592401 286331136 0 0 0 0 0 69906 572662306 554770978 572662306 286331409 286335522 571613457 286331153 286331152 0 0 0 0 0 1118482 571548194 554770978 572662306 286331153 286335522 554766609 286331153 286331153 0 0 0 0 0 17895970 554832146 554770978 572662306 571543825 554766609 286331153 286470963 858993425 268435456 0 0 0 0 286331170 286396690 554770978 572662306 554766609 286331153 286331187 858993457 286339857 285212672 0 0 0 0 286331426 286400785 286335522 572662306 554766609 286396689 286339891 286331153 286331153 286261248 0 0 0 1 286343441 304226833 286335522 572662306 572657937 286331153 286331153 286331153 288559377 286330880 0 0 0 1 286331153 304226834 286331426 572662306 572657937 286331153 288428305 286331153 286331153 286330880 0 0 0 1 286331169 572662289 286331170 572662306 572662033 286331155 286331153 286331155 856895763 304156928 0 0 0 0 286331426 572657938 286331154 572662306 572662306 554766609 286331699 856756497 286331153 287379728 0 0 0 0 286335522 572657953 287445265 572662306 572662306 554770705 286331153 286331155 858984721 304222480 0 0 0 1 286335522 572662289 304222481 287449634 572662306 572596770 554766609 858993459 858984721 572657936 0 0 0 0 286331154 572662306 554766609 286401058 572662306 572662306 572662033 286331153 288559378 572662033 0 0 0 0 286331170 572662306 554770961 286401058 572662306 572662306 572662289 286331699 858984738 572662033 0 0 0 0 286331426 572662306 572657953 286401058 572662306 572662306 572662305 319886097 286331170 572662033 0 0 0 1 286335522 572662306 572657937 286331426 572662306 572662306 572662306 286331699 856756770 572657936 0 0 0 1 286335522 572662306 572657937 554766609 572662306 572662306 572662306 288428305 286331170 572657936 0 0 0 1 286335522 572662306 572662306 554766609 286401058 572662306 572662306 286331153 286331170 572657936 0 0 0 17 286335522 572662306 572657937 572662033 286331153 286401058 572662306 286331153 286331154 572592384 0 0 0 17 286335522 572662306 572662306 571543825 286331153 286335521 304222498 286331155 858853649 571543552 0 0 0 17 286335522 572662306 572657937 286331153 286331665 286331170 287445537 286331699 858984721 286330880 0 0 0 17 286331426 572662306 572657937 304226850 286331153 286331153 286331153 286470417 286331153 286330880 0 0 0 17 286331426 572662306 572662306 572662305 286331155 288428305 286331153 286462227 286331697 286330880 17825792 0 0 273 286331426 572662306 572662306 572662289 286331153 858992913 286331153 286331153 322122547 858853377 286326784 0 0 273 286335522 572662306 572662306 572662306 286331153 286331153 288559411 823202065 286462227 858853393 286331136 0 0 273 286335522 572662306 572662306 572662306 554836497 286331155 856756531 286331697 286462227 858853649 571543808 0 0 273 286335522 572662306 572662306 572662306 572662289 286339891 286331187 858993459 858993459 856756497 572592400 0 0 273 286335522 572662306 572657937 286335522 571543825 286331153 286331153 286331153 286331153 286331170 287379729 0 0 273 286335522 572662306 304222481 286331425 286331153 286331153 288568081 286331153 322122547 856756514 287445265 0 0 17 286335522 572662305 287379729 286331153 287449617 286331155 858992913 554775347 858993459 856756513 287445265 0 0 17 286335522 572662033 287449634 572662289 287445265 286470961 286331170 571543857 286331153 286331169 572662033 0 0 17 303112482 572657937 287449634 572662289 286331153 286462225 321982754 571543825 286462771 856756513 287383825 0 0 17 303108386 572592401 287449634 572662306 286400785 286331153 286331170 571543859 858993459 858853666 304156945 0 0 1 286331169 572592401 572662306 572662306 286331153 286462225 286331426 571543825 286331153 286331170 287379728 0 0 1 286331169 572596497 572662306 572662306 287379730 554766609 823202338 571609361 858993459 856756498 304156944 0 0 1 286396705 572592402 572662306 572662306 572592418 286331153 286331426 572657939 858984721 286331154 304156944 0 0 0 286331409 304156962 572662306 572662306 572662033 286339857 286335522 571609361 286462771 856756753 304222480 0 0 0 286331153 287379746 572662306 572662306 572662289 286331155 286331425 303178001 858993459 823202081 572657936 0 0 0 17895697 286331170 572662306 572662306 572662305 286331155 286331425 572662035 856756497 286335266 572657936 0 0 0 69905 571543842 572662306 572662306 572662306 572592401 554770977 287383825 322122547 856760609 572657920 0 0 0 69905 572592402 572662306 572662306 572662306 571740434 554836497 304161043 858984721 286331153 304156928 0 0 0 69905 304156945 572662306 572662306 572662306 572596770 554836497 572596499 823202065 319885585 572592384 0 0 0 4369 286396690 286331154 572662306 572592674 571548193 336732433 572592401 322122545 288428306 572592384 0 0 0 273 286331153 554766609 304161314 572592674 554836513 287449361 572592403 858853649 288493858 304156928 0 0 0 273 286331153 287445265 286331425 572592674 304226849 287449362 572592401 286331153 823202338 304156928 0 0 0 0 286331153 286331153 286331153 287445282 304226849 304226578 572592435 825299219 286331425 571543808 0 0 0 0 286331153 286331154 287445266 287445282 286401057 304222482 572592401 286470963 287449633 571543552 0 0 0 0 268505361 286331153 286331153 286331426 554836513 304222497 554766611 858993459 824320273 286326784 0 0 0 0 273 286331153 286331153 286331153 286335249 287379985 571543825 286331153 286396689 286261248 0 0 0 0 0 17895697 286331153 286331153 286335250 287449361 554766609 286331153 286331153 268435456 0 0 0 0 0 4353 286331153 286396689 286335506 287449362 286331153 286331153 286330880 0 0 0 0 0 0 0 0 286331153 286331153 286331154 286331153 0 0 0 0 0 0 0 0 0 0 4369 286331153 286331153 286261248 0 0 0 0 0 0 0 0 0 0 17 286331153 286331169 286261248 0 0 0 0 0 0 0 0 0 0 0 1118481 286331153 268435456 0 0 0 0 0 0 0 0 0 0 0 4369 286331153 0 0 0 0 0 0 0 0 0 0 0 0 0 1118481 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)	offset: 0@0)	colorsFromArray: #(#( ) #(0.0 0.0 0.0) #(1.0 1.0 0.333) #(0.501 0.0 0.0) #(0.753 0.862 0.753) #( ) #( ) #( ) #( ) #( ) #( ) #( ) #( ) #( ) #( ) #( )  )! !!WonderlandCameraMorph class methodsFor: 'pooh stuff' stamp: 'laza 4/4/2000 16:44'!poohAboutText	| about url font pattern start end |	about _ '     PoohThis software is based on the work of Takeo Igarashi, Satoshi Matsuoka and Hidehiko Tanaka, which is described in "Teddy: A Sketching Interface for 3D Freeform Design".To play around with Pooh just open a Wonderland and bring up the halos on the CameraMorph. Click on the Pooh halo and start drawing an outline. After that you can bring up the halos on the generated object and click on the Paint halo to draw on the surface. (Or have a look at this tape)' asText.	font _ TextFontChange new fontNumber: 3.	pattern _ 'Pooh'.	start _ about string findString: pattern.	end _ start + pattern size.	about addAttribute: font from: start to: end.	about makeBoldFrom: start to: end.	pattern _ 'Takeo Igarashi'.	start _ about string findString: pattern.	end _ start + pattern size.	url _ TextURL new url: 'http://www.mtl.t.u-tokyo.ac.jp/~takeo/teddy/teddy.htm'.	about addAttribute: url from: start to: end.	pattern _ 'open a Wonderland'.	start _ about string findString: pattern.	end _ start + pattern size.	url _ TextDoIt new evalString: 'Wonderland new'.	about addAttribute: url from: start to: end.	pattern _ 'tape'.	start _ about string findString: pattern.	end _ start + pattern size.	url _ TextDoIt new evalString: 'WonderlandCameraMorph poohPlayTape'.	about addAttribute: url from: start to: end.	^ about! !!WonderlandCameraMorph class methodsFor: 'pooh stuff' stamp: 'laza 4/5/2000 10:13'!poohPlayTape	"| tape source | 	tape _ FileStream fileNamed: 'pooh.tape'.	source _ 'poohTape	^''', tape contentsOfEntireFile, ''''.	(WonderlandCameraMorph class methodsFor: 'pooh stuff') scanFrom: (ReadStream on: source)"	"WonderlandCameraMorph poohPlayTape"	| stream player |	stream _ ReadStream on: self poohTape.	player _ EventRecorderMorph readFrom: stream.	player openInWorld.	Wonderland new.	player play.	player delete.! !!WonderlandCameraMorph class methodsFor: 'pooh stuff'!poohTape	^'36 mouseMove 59 236 0 0589 mouseMove 60 233 0 034 mouseMove 60 232 0 073 mouseMove 60 231 0 035 mouseMove 61 231 0 028 mouseMove 62 230 0 035 mouseMove 62 228 0 062 mouseMove 63 226 0 039 mouseMove 65 224 0 035 mouseMove 66 222 0 037 mouseMove 67 220 0 028 mouseMove 69 217 0 035 mouseMove 70 215 0 028 mouseMove 70 214 0 036 mouseMove 71 213 0 082 mouseMove 72 212 0 029 mouseMove 72 210 0 034 mouseMove 73 209 0 028 mouseMove 73 208 0 036 mouseMove 74 206 0 030 mouseMove 74 204 0 041 mouseMove 74 202 0 036 mouseMove 75 200 0 028 mouseMove 75 198 0 035 mouseMove 75 197 0 063 mouseMove 76 195 0 038 mouseMove 77 191 0 036 mouseMove 79 186 0 035 mouseMove 81 182 0 035 mouseMove 82 179 0 028 mouseMove 83 177 0 037 mouseMove 84 173 0 028 mouseMove 85 171 0 043 mouseMove 87 164 0 035 mouseMove 88 160 0 029 mouseMove 89 156 0 036 mouseMove 90 149 0 028 mouseMove 91 144 0 037 mouseMove 91 139 0 028 mouseMove 91 138 0 051 mouseMove 92 132 0 029 mouseMove 92 129 0 035 mouseMove 92 124 0 028 mouseMove 92 120 0 036 mouseMove 92 115 0 028 mouseMove 92 111 0 054 mouseMove 92 107 0 036 mouseMove 92 105 0 028 mouseMove 92 103 0 036 mouseMove 92 99 0 028 mouseMove 92 96 0 036 mouseMove 92 92 0 028 mouseMove 92 89 0 048 mouseMove 92 85 0 027 mouseMove 92 83 0 035 mouseMove 92 81 0 028 mouseMove 92 79 0 035 mouseMove 92 76 0 036 mouseMove 92 74 0 032 mouseMove 92 72 0 045 mouseMove 92 69 0 029 mouseMove 92 66 0 035 mouseMove 92 64 0 03339 mouseDown 92 64 1 0138 mouseMove 92 64 1 059 mouseUp 92 64 0 034 mouseMove 92 64 0 0753 mouseMove 95 65 0 029 mouseMove 101 68 0 038 mouseMove 114 76 0 029 mouseMove 116 77 0 067 mouseMove 117 78 0 028 mouseMove 118 78 0 051 mouseMove 119 79 0 028 mouseMove 120 80 0 038 mouseMove 122 81 0 029 mouseMove 124 82 0 035 mouseMove 125 82 0 077 mouseMove 128 84 0 036 mouseMove 130 84 0 028 mouseMove 131 85 0 037 mouseMove 134 86 0 030 mouseMove 137 87 0 037 mouseMove 143 88 0 035 mouseMove 145 88 0 046 mouseMove 148 89 0 037 mouseMove 151 90 0 028 mouseMove 153 90 0 036 mouseMove 156 90 0 030 mouseMove 159 91 0 036 mouseMove 163 91 0 040 mouseMove 168 92 0 036 mouseMove 171 92 0 029 mouseMove 173 92 0 034 mouseMove 176 93 0 037 mouseMove 179 94 0 029 mouseMove 179 95 0 037 mouseMove 180 95 0 045 mouseMove 181 96 0 01953 mouseDown 181 96 4 0118 mouseUp 181 96 0 028 mouseMove 181 96 0 0584 mouseMove 178 93 0 039 mouseMove 175 91 0 034 mouseMove 174 90 0 064 mouseMove 170 89 0 028 mouseMove 168 87 0 034 mouseMove 162 85 0 046 mouseMove 157 83 0 029 mouseMove 156 82 0 035 mouseMove 154 81 0 028 mouseMove 152 79 0 035 mouseMove 151 78 0 028 mouseMove 150 77 0 050 mouseMove 148 75 0 028 mouseMove 145 74 0 036 mouseMove 141 72 0 030 mouseMove 138 70 0 035 mouseMove 136 69 0 028 mouseMove 134 67 0 035 mouseMove 130 65 0 046 mouseMove 126 64 0 028 mouseMove 125 63 0 036 mouseMove 122 62 0 028 mouseMove 120 62 0 035 mouseMove 118 61 0 028 mouseMove 116 61 0 053 mouseMove 113 60 0 027 mouseMove 112 59 0 062 mouseMove 111 59 0 035 mouseMove 109 58 0 060 mouseMove 106 57 0 035 mouseMove 105 57 0 039 mouseMove 104 56 0 0183 mouseDown 104 56 4 083 mouseMove 103 56 4 045 mouseMove 101 56 4 050 mouseMove 98 55 4 045 mouseMove 96 55 4 062 mouseMove 92 55 4 047 mouseMove 89 55 4 045 mouseMove 87 55 4 046 mouseMove 83 55 4 053 mouseMove 80 55 4 073 mouseMove 77 55 4 048 mouseMove 74 55 4 046 mouseMove 71 56 4 047 mouseMove 68 58 4 065 mouseMove 64 61 4 047 mouseMove 62 63 4 047 mouseMove 60 65 4 047 mouseMove 58 66 4 065 mouseMove 54 70 4 054 mouseMove 51 73 4 047 mouseMove 49 76 4 049 mouseMove 47 80 4 056 mouseMove 46 83 4 047 mouseMove 46 86 4 051 mouseMove 46 90 4 047 mouseMove 46 92 4 047 mouseMove 46 96 4 063 mouseMove 46 100 4 056 mouseMove 46 106 4 049 mouseMove 48 112 4 052 mouseMove 50 116 4 062 mouseMove 54 121 4 048 mouseMove 56 123 4 052 mouseMove 59 126 4 048 mouseMove 61 128 4 059 mouseMove 64 130 4 049 mouseMove 68 133 4 056 mouseMove 73 136 4 048 mouseMove 77 137 4 059 mouseMove 84 138 4 049 mouseMove 88 139 4 058 mouseMove 96 140 4 050 mouseMove 101 140 4 048 mouseMove 106 140 4 052 mouseMove 108 140 4 052 mouseMove 112 140 4 051 mouseMove 116 139 4 048 mouseMove 120 137 4 049 mouseMove 124 135 4 067 mouseMove 131 131 4 049 mouseMove 134 127 4 051 mouseMove 138 124 4 049 mouseMove 140 121 4 060 mouseMove 143 116 4 055 mouseMove 145 110 4 049 mouseMove 147 106 4 056 mouseMove 148 100 4 059 mouseMove 148 95 4 057 mouseMove 148 89 4 050 mouseMove 148 85 4 048 mouseMove 148 82 4 070 mouseMove 148 79 4 055 mouseMove 148 77 4 049 mouseMove 148 74 4 048 mouseMove 148 72 4 050 mouseMove 147 69 4 067 mouseMove 145 65 4 050 mouseMove 143 62 4 056 mouseMove 141 60 4 058 mouseMove 140 59 4 0102 mouseMove 139 59 4 048 mouseMove 139 58 4 0110 mouseUp 139 58 0 01457 mouseMove 139 58 0 03329 mouseMove 140 59 0 084 mouseMove 141 60 0 057 mouseMove 142 60 0 063 mouseMove 145 60 0 064 mouseMove 152 61 0 071 mouseMove 161 62 0 065 mouseMove 169 63 0 062 mouseMove 179 64 0 076 mouseMove 225 72 0 060 mouseMove 240 75 0 068 mouseMove 243 76 0 071 mouseMove 248 78 0 0121 mouseMove 248 81 0 061 mouseMove 248 87 0 080 mouseMove 248 91 0 066 mouseMove 248 94 0 059 mouseMove 248 98 0 080 mouseMove 248 107 0 061 mouseMove 247 111 0 064 mouseMove 246 115 0 069 mouseMove 244 121 0 065 mouseMove 243 124 0 0268 mouseDown 243 124 4 0198 mouseUp 243 124 0 056 mouseMove 243 124 0 01710 mouseDown 243 124 2 0100 mouseMove 243 124 2 085 mouseUp 243 124 0 071 mouseMove 243 124 0 0634 mouseMove 250 125 0 083 mouseMove 253 125 0 058 mouseMove 254 127 0 083 mouseMove 254 133 0 078 mouseMove 254 135 0 058 mouseMove 254 136 0 084 mouseMove 254 137 0 0454 mouseDown 254 137 4 084 mouseUp 254 137 0 076 mouseMove 254 137 0 04817 mouseMove 249 137 0 058 mouseMove 245 137 0 066 mouseMove 240 136 0 076 mouseMove 236 133 0 060 mouseMove 230 130 0 066 mouseMove 221 125 0 071 mouseMove 215 122 0 073 mouseMove 208 118 0 067 mouseMove 203 116 0 061 mouseMove 195 113 0 077 mouseMove 186 110 0 060 mouseMove 178 107 0 066 mouseMove 170 104 0 070 mouseMove 164 102 0 068 mouseMove 154 99 0 067 mouseMove 147 98 0 060 mouseMove 141 96 0 071 mouseMove 132 93 0 061 mouseMove 122 91 0 066 mouseMove 116 90 0 072 mouseMove 110 89 0 066 mouseMove 103 88 0 074 mouseMove 100 88 0 070 mouseMove 96 87 0 0371 mouseDown 96 87 1 0199 mouseUp 96 87 0 085 mouseMove 96 87 0 0504 mouseMove 95 88 0 069 mouseMove 93 90 0 062 mouseMove 93 91 0 077 mouseMove 92 93 0 068 mouseMove 92 94 0 01548 mouseDown 92 94 4 0104 mouseUp 92 94 0 0287 mouseMove 92 94 0 0492 mouseMove 93 95 0 074 mouseMove 98 95 0 084 mouseMove 114 95 0 074 mouseMove 132 92 0 069 mouseMove 142 91 0 082 mouseMove 153 90 0 073 mouseMove 163 90 0 070 mouseMove 178 90 0 083 mouseMove 182 90 0 069 mouseMove 191 90 0 072 mouseMove 195 93 0 082 mouseMove 200 98 0 069 mouseMove 203 104 0 066 mouseMove 205 110 0 088 mouseMove 206 117 0 071 mouseMove 207 123 0 073 mouseMove 207 128 0 084 mouseMove 207 132 0 063 mouseMove 209 135 0 069 mouseMove 211 140 0 0156 mouseMove 221 141 0 063 mouseMove 223 141 0 0144 mouseMove 229 141 0 069 mouseMove 239 138 0 086 mouseMove 241 136 0 0776 mouseMove 235 136 0 071 mouseMove 227 136 0 087 mouseMove 217 136 0 068 mouseMove 211 125 0 064 mouseMove 203 101 0 086 mouseMove 202 98 0 0279 mouseMove 192 95 0 069 mouseMove 187 93 0 070 mouseMove 149 81 0 082 mouseMove 124 72 0 066 mouseMove 101 64 0 066 mouseMove 98 63 0 080 mouseMove 90 63 0 069 mouseMove 88 63 0 079 mouseMove 81 64 0 095 mouseMove 72 65 0 069 mouseMove 62 65 0 069 mouseMove 58 65 0 0433 mouseDown 58 65 4 0143 mouseUp 58 65 0 081 mouseMove 58 65 0 0343 mouseMove 64 66 0 062 mouseMove 78 66 0 063 mouseMove 81 66 0 0140 mouseMove 77 66 0 064 mouseMove 75 66 0 061 mouseMove 69 66 0 076 mouseMove 59 66 0 065 mouseMove 57 66 0 058 mouseMove 56 66 0 084 mouseMove 54 66 0 059 mouseMove 53 66 0 0528 mouseMove 54 66 0 0210 mouseMove 55 66 0 0259 mouseDown 55 66 4 0126 mouseMove 55 66 4 0187 mouseMove 57 67 4 082 mouseMove 58 68 4 080 mouseMove 59 68 4 094 mouseMove 60 68 4 089 mouseMove 61 68 4 0103 mouseMove 62 68 4 081 mouseMove 63 68 4 0369 mouseMove 63 67 4 081 mouseMove 63 66 4 093 mouseMove 62 65 4 0103 mouseMove 60 64 4 0195 mouseMove 59 64 4 082 mouseMove 58 64 4 0189 mouseUp 63 64 0 086 mouseMove 78 64 0 077 mouseMove 94 64 0 061 mouseMove 101 64 0 064 mouseMove 106 64 0 0131 mouseMove 111 64 0 066 mouseMove 127 66 0 059 mouseMove 129 66 0 073 mouseMove 130 66 0 060 mouseMove 132 66 0 0210 mouseMove 132 64 0 065 mouseMove 131 63 0 0201 mouseDown 131 63 4 0126 mouseMove 128 63 4 083 mouseMove 125 63 4 081 mouseMove 124 63 4 095 mouseMove 123 63 4 0184 mouseMove 122 64 4 093 mouseMove 122 67 4 092 mouseMove 122 68 4 084 mouseMove 123 69 4 086 mouseMove 126 70 4 0100 mouseMove 127 70 4 082 mouseMove 128 70 4 0105 mouseMove 129 70 4 081 mouseMove 130 70 4 083 mouseMove 131 69 4 0106 mouseMove 131 67 4 081 mouseMove 132 66 4 083 mouseMove 132 64 4 0112 mouseMove 131 63 4 083 mouseMove 130 62 4 0104 mouseMove 128 62 4 085 mouseMove 127 62 4 081 mouseMove 126 62 4 094 mouseMove 124 64 4 085 mouseMove 124 65 4 0173 mouseMove 124 66 4 087 mouseMove 124 67 4 0103 mouseMove 125 67 4 087 mouseMove 126 67 4 0178 mouseUp 126 67 0 080 mouseMove 126 67 0 0527 mouseMove 126 68 0 060 mouseMove 142 71 0 065 mouseMove 160 76 0 079 mouseMove 166 86 0 069 mouseMove 178 101 0 066 mouseMove 186 112 0 088 mouseMove 192 121 0 061 mouseMove 193 127 0 065 mouseMove 198 144 0 065 mouseMove 200 149 0 071 mouseMove 200 153 0 063 mouseMove 200 154 0 060 mouseMove 200 159 0 075 mouseMove 200 169 0 062 mouseMove 200 177 0 0140 mouseMove 200 196 0 080 mouseMove 200 201 0 060 mouseMove 200 204 0 070 mouseMove 200 210 0 076 mouseMove 196 218 0 061 mouseMove 189 221 0 066 mouseMove 162 228 0 072 mouseMove 134 235 0 067 mouseMove 126 236 0 063 mouseMove 117 236 0 081 mouseMove 111 235 0 066 mouseMove 105 234 0 060 mouseMove 101 233 0 075 mouseMove 97 233 0 060 mouseMove 92 233 0 0205 mouseMove 91 234 0 070 mouseMove 91 236 0 059 mouseMove 91 237 0 0202 mouseDown 91 237 4 0328 mouseMove 91 237 4 0206 mouseUp 91 237 0 0191 mouseMove 91 237 0 071 mouseMove 91 239 0 060 mouseMove 90 242 0 064 mouseMove 90 245 0 080 mouseMove 90 247 0 0194 mouseMove 91 247 0 067 mouseMove 111 242 0 061 mouseMove 160 240 0 066 mouseMove 170 240 0 078 mouseMove 181 239 0 061 mouseMove 186 239 0 066 mouseMove 191 237 0 078 mouseMove 216 233 0 067 mouseMove 247 228 0 0164 mouseMove 248 226 0 0119 mouseMove 248 225 0 0599 mouseDown 248 225 4 069 mouseMove 248 225 4 0139 mouseUp 248 225 0 091 mouseMove 248 225 0 067 mouseMove 244 200 0 068 mouseMove 232 163 0 060 mouseMove 230 153 0 081 mouseMove 225 141 0 065 mouseMove 222 137 0 060 mouseMove 221 136 0 0121 mouseDown 221 136 4 070 mouseMove 221 136 4 065 mouseUp 221 136 0 0101 mouseMove 221 136 0 0190 mouseMove 219 136 0 065 mouseMove 135 122 0 067 mouseMove 91 106 0 061 mouseMove 89 104 0 081 mouseMove 82 101 0 065 mouseMove 80 97 0 058 mouseMove 79 95 0 077 mouseMove 78 93 0 060 mouseMove 76 90 0 065 mouseMove 75 87 0 069 mouseMove 74 85 0 064 mouseMove 73 83 0 063 mouseMove 73 82 0 060 mouseMove 71 78 0 077 mouseMove 68 74 0 068 mouseMove 67 73 0 064 mouseMove 66 72 0 068 mouseMove 65 70 0 0720 mouseDown 66 70 4 0114 mouseMove 66 70 4 0117 mouseMove 68 72 4 0103 mouseMove 70 74 4 0115 mouseMove 72 76 4 099 mouseMove 73 78 4 0101 mouseMove 74 81 4 093 mouseMove 75 82 4 0119 mouseMove 77 85 4 092 mouseMove 80 89 4 093 mouseMove 82 91 4 0100 mouseMove 84 93 4 098 mouseMove 91 98 4 0115 mouseMove 98 103 4 093 mouseMove 103 106 4 0113 mouseMove 106 108 4 098 mouseMove 108 108 4 0100 mouseMove 109 108 4 0300 mouseMove 113 110 4 0101 mouseMove 116 111 4 0100 mouseMove 119 113 4 0102 mouseMove 120 113 4 0708 mouseUp 120 113 0 0114 mouseMove 120 113 0 0452 mouseMove 123 113 0 060 mouseMove 128 113 0 0152 mouseMove 131 113 0 061 mouseMove 138 113 0 066 mouseMove 145 113 0 070 mouseMove 149 114 0 066 mouseMove 154 114 0 061 mouseMove 159 115 0 064 mouseMove 165 115 0 083 mouseMove 169 116 0 069 mouseMove 173 116 0 072 mouseMove 184 119 0 0102 mouseMove 211 126 0 061 mouseMove 216 128 0 079 mouseMove 222 133 0 066 mouseMove 229 146 0 060 mouseMove 236 166 0 078 mouseMove 240 175 0 059 mouseMove 241 176 0 064 mouseMove 241 178 0 0194 mouseMove 241 181 0 0142 mouseMove 241 182 0 066 mouseMove 241 184 0 0323 mouseMove 242 184 0 0739 mouseDown 242 184 4 065 mouseMove 242 184 4 0655 mouseUp 242 184 0 077 mouseMove 242 184 0 0470 mouseMove 242 186 0 081 mouseMove 237 212 0 060 mouseMove 234 222 0 066 mouseMove 232 226 0 064 mouseMove 227 232 0 069 mouseMove 219 238 0 0167 mouseMove 216 244 0 067 mouseMove 216 246 0 0525 mouseMove 215 246 0 0205 mouseDown 215 246 4 0328 mouseMove 215 246 4 0193 mouseUp 215 246 0 0215 mouseMove 215 246 0 0134 mouseMove 215 243 0 067 mouseMove 220 233 0 072 mouseMove 230 224 0 0141 mouseMove 224 161 0 076 mouseMove 154 123 0 064 mouseMove 144 121 0 060 mouseMove 140 122 0 066 mouseMove 124 123 0 072 mouseMove 110 122 0 068 mouseMove 85 114 0 068 mouseMove 74 111 0 076 mouseMove 66 109 0 064 mouseMove 63 107 0 062 mouseMove 57 104 0 065 mouseMove 53 102 0 080 mouseMove 52 101 0 066 mouseMove 50 99 0 066 mouseMove 48 98 0 0397 mouseMove 47 97 0 0213 mouseMove 47 96 0 0844 mouseMove 45 96 0 066 mouseMove 44 96 0 071 mouseMove 42 95 0 077 mouseMove 39 94 0 0123 mouseDown 39 94 4 0142 mouseMove 40 99 4 0115 mouseMove 43 103 4 096 mouseMove 45 108 4 091 mouseMove 47 111 4 0111 mouseMove 50 116 4 093 mouseMove 52 119 4 0110 mouseMove 57 122 4 098 mouseMove 58 125 4 0103 mouseMove 66 130 4 0102 mouseMove 70 131 4 0201 mouseMove 73 132 4 0407 mouseUp 73 132 0 087 mouseMove 73 132 0 0153 mouseDown 73 132 4 0131 mouseMove 83 133 4 0108 mouseMove 94 133 4 096 mouseMove 100 133 4 0103 mouseMove 104 133 4 0100 mouseMove 107 133 4 0100 mouseMove 112 132 4 0206 mouseMove 113 132 4 0511 mouseUp 113 132 0 091 mouseMove 113 132 0 0272 mouseDown 113 132 4 0126 mouseMove 122 127 4 0125 mouseMove 130 120 4 099 mouseMove 133 118 4 0101 mouseMove 139 113 4 0101 mouseMove 142 109 4 0106 mouseMove 143 106 4 095 mouseMove 146 100 4 0100 mouseMove 147 94 4 0200 mouseMove 147 93 4 0610 mouseUp 147 93 0 0112 mouseMove 147 93 0 02788 mouseMove 168 93 0 069 mouseMove 191 95 0 0226 mouseMove 191 96 0 072 mouseMove 195 104 0 061 mouseMove 195 110 0 067 mouseMove 195 124 0 077 mouseMove 193 153 0 061 mouseMove 193 205 0 0162 mouseMove 193 239 0 067 mouseMove 194 251 0 069 mouseMove 200 275 0 078 mouseMove 206 315 0 0144 mouseMove 202 352 0 071 mouseMove 202 370 0 067 mouseMove 202 383 0 061 mouseMove 202 391 0 067 mouseMove 202 399 0 073 mouseMove 202 404 0 060 mouseMove 205 409 0 063 mouseMove 205 410 0 069 mouseMove 207 411 0 0669 mouseMove 208 411 0 01192 mouseDown 208 411 4 072 mouseMove 208 411 4 079 mouseUp 208 411 0 0158 mouseMove 208 411 0 0474 mouseMove 208 410 0 079 mouseMove 208 408 0 066 mouseMove 211 396 0 069 mouseMove 223 381 0 065 mouseMove 232 368 0 066 mouseMove 247 340 0 060 mouseMove 258 306 0 081 mouseMove 264 290 0 060 mouseMove 268 282 0 066 mouseMove 271 271 0 085 mouseMove 273 250 0 060 mouseMove 274 236 0 066 mouseMove 271 217 0 061 mouseMove 271 205 0 083 mouseMove 269 189 0 068 mouseMove 265 178 0 060 mouseMove 265 167 0 077 mouseMove 265 154 0 061 mouseMove 265 143 0 065 mouseMove 265 139 0 068 mouseMove 265 138 0 065 mouseMove 265 135 0 067 mouseMove 265 127 0 058 mouseMove 265 125 0 079 mouseMove 265 124 0 0530 mouseDown 265 124 2 0106 mouseMove 265 124 2 075 mouseUp 265 124 0 074 mouseMove 265 124 0 0493 mouseMove 267 125 0 098 mouseMove 268 128 0 077 mouseMove 268 131 0 076 mouseMove 268 132 0 058 mouseMove 268 133 0 077 mouseMove 269 134 0 063 mouseMove 270 135 0 0202 mouseDown 270 135 4 0109 mouseUp 270 135 0 085 mouseMove 270 135 0 02924 mouseMove 270 136 0 02716 mouseMove 278 133 0 084 mouseMove 281 130 0 060 mouseMove 283 128 0 066 mouseMove 291 124 0 061 mouseMove 299 119 0 070 mouseMove 311 110 0 070 mouseMove 315 105 0 061 mouseMove 324 101 0 080 mouseMove 333 97 0 060 mouseMove 337 94 0 067 mouseMove 343 91 0 0113 mouseMove 354 88 0 059 mouseMove 357 86 0 064 mouseMove 359 85 0 01280 keystroke 359 85 0 112194 mouseMove 359 85 0 064 keystroke 359 85 0 111100 mouseMove 359 85 0 0149 keystroke 359 85 0 111110 mouseMove 359 85 0 0183 keystroke 359 85 0 104125 mouseMove 359 85 0 0263 keystroke 359 85 0 32109 mouseMove 359 85 0 0474 keystroke 359 85 0 11698 mouseMove 359 85 0 0268 keystroke 359 85 0 117117 mouseMove 359 85 0 0122 keystroke 359 85 0 114115 mouseMove 359 85 0 064 keystroke 359 85 0 110127 mouseMove 359 85 0 0403 mouseMove 359 85 8 01 keystroke 359 85 8 5898 mouseMove 359 85 8 0204 mouseMove 359 85 0 01 keystroke 359 85 0 32116 mouseMove 359 85 0 0185 keystroke 359 85 0 108113 mouseMove 359 85 0 059 keystroke 359 85 0 101118 mouseMove 359 85 0 063 keystroke 359 85 0 10299 mouseMove 359 85 0 078 keystroke 359 85 0 11694 mouseMove 359 85 0 0865 keystroke 359 85 0 32117 mouseMove 359 85 0 0465 keystroke 359 85 0 11699 mouseMove 359 85 0 0262 keystroke 359 85 0 117131 mouseMove 359 85 0 060 keystroke 359 85 0 114103 mouseMove 359 85 0 0193 keystroke 359 85 0 110124 mouseMove 359 85 0 065 keystroke 359 85 0 115120 mouseMove 359 85 0 01172 mouseMove 359 85 8 01 keystroke 359 85 8 5897 mouseMove 359 85 8 0336 mouseMove 359 85 0 01 keystroke 359 85 0 32108 mouseMove 359 85 0 0346 keystroke 359 85 0 4998 mouseMove 359 85 0 0252 keystroke 359 85 0 48126 mouseMove 359 85 0 063 keystroke 359 85 0 48107 mouseMove 359 85 0 0726 keystroke 359 85 0 32100 mouseMove 359 85 0 0411 keystroke 359 85 0 100107 mouseMove 359 85 0 064 keystroke 359 85 0 117105 mouseMove 359 85 0 0142 keystroke 359 85 0 114119 mouseMove 359 85 0 00 keystroke 359 85 0 97100 mouseMove 359 85 0 063 keystroke 359 85 0 116119 mouseMove 359 85 0 0212 keystroke 359 85 0 105101 mouseMove 359 85 0 060 keystroke 359 85 0 11197 mouseMove 359 85 0 0252 keystroke 359 85 0 110119 mouseMove 359 85 0 01399 mouseMove 359 85 8 01 keystroke 359 85 8 58100 mouseMove 359 85 8 0203 mouseMove 359 85 0 01 keystroke 359 85 0 32114 mouseMove 359 85 0 0263 keystroke 359 85 0 53100 mouseMove 359 85 0 0287 keystroke 359 85 0 4897 mouseMove 359 85 0 0143 keystroke 359 85 0 4898 mouseMove 359 85 0 0266 keystroke 359 85 0 32111 mouseMove 359 85 0 0121 keystroke 359 85 0 115119 mouseMove 359 85 0 01 keystroke 359 85 0 11699 mouseMove 359 85 0 0143 keystroke 359 85 0 121115 mouseMove 359 85 0 0255 keystroke 359 85 0 10899 mouseMove 359 85 0 01 keystroke 359 85 0 101119 mouseMove 359 85 0 0866 mouseMove 359 85 8 01 keystroke 359 85 8 58102 mouseMove 359 85 8 0128 mouseMove 359 85 0 01 keystroke 359 85 0 32107 mouseMove 359 85 0 063 keystroke 359 85 0 97111 mouseMove 359 85 0 060 keystroke 359 85 0 98100 mouseMove 359 85 0 0913 keystroke 359 85 0 114106 mouseMove 359 85 0 0590 keystroke 359 85 0 117118 mouseMove 359 85 0 0199 keystroke 359 85 0 112120 mouseMove 359 85 0 0262 keystroke 359 85 0 116101 mouseMove 359 85 0 0263 keystroke 359 85 0 108128 mouseMove 359 85 0 0323 keystroke 359 85 0 121126 mouseMove 359 85 0 01912 mouseMove 359 85 64 01 keystroke 359 85 64 100219 mouseMove 359 85 64 03744 mouseMove 307 85 64 084 mouseMove 202 85 64 060 mouseMove 190 85 64 054 mouseMove 178 85 64 061 mouseMove 135 83 64 065 mouseMove 126 83 64 059 mouseMove 120 83 64 062 mouseMove 113 82 64 072 mouseMove 112 82 64 062 mouseMove 107 82 64 053 mouseMove 106 82 64 058 mouseMove 104 82 64 087 mouseMove 102 82 64 054 mouseMove 101 82 64 0184 mouseMove 99 82 64 060 mouseMove 97 82 64 0128 mouseMove 96 82 64 065 mouseMove 94 82 64 0370 mouseMove 94 81 64 083 mouseDown 94 81 1 0221 mouseUp 94 81 0 0105 mouseMove 94 81 0 0544 mouseMove 86 91 0 0325 mouseMove 94 91 0 0111 mouseMove 97 90 0 0227 mouseDown 97 90 4 0104 mouseUp 97 90 0 0294 mouseMove 97 90 0 0595 mouseMove 100 90 0 0112 mouseMove 117 97 0 0116 mouseMove 133 96 0 0107 mouseMove 142 96 0 0110 mouseMove 158 97 0 0105 mouseMove 168 101 0 0118 mouseMove 180 108 0 0111 mouseMove 188 117 0 0116 mouseMove 191 128 0 0102 mouseMove 194 138 0 0114 mouseMove 194 144 0 0106 mouseMove 194 156 0 0121 mouseMove 194 158 0 0228 mouseDown 194 158 4 0100 mouseUp 194 158 0 0105 mouseMove 194 158 0 0853 mouseMove 215 185 0 0139 mouseMove 220 203 0 062 mouseMove 220 205 0 0119 mouseMove 219 205 0 060 mouseMove 211 209 0 067 mouseMove 209 210 0 0160 mouseMove 210 212 0 067 mouseMove 211 213 0 0296 mouseDown 211 213 4 0303 mouseUp 211 213 0 0223 mouseMove 211 221 0 070 mouseMove 211 228 0 062 mouseMove 211 235 0 063 mouseMove 211 236 0 083 mouseMove 211 239 0 0123 mouseMove 211 241 0 058 mouseMove 211 249 0 062 mouseMove 211 253 0 0175 mouseDown 211 253 4 0335 mouseUp 211 253 0 0209 mouseMove 211 253 0 0226 mouseMove 211 252 0 060 mouseMove 211 242 0 060 mouseMove 211 237 0 0120 mouseMove 211 236 0 0180 mouseMove 205 224 0 057 mouseMove 187 192 0 057 mouseMove 187 190 0 0133 mouseMove 184 182 0 063 mouseMove 180 171 0 063 mouseMove 166 150 0 0149 mouseMove 151 136 0 058 mouseMove 134 117 0 073 mouseMove 110 103 0 056 mouseMove 106 101 0 060 mouseMove 84 88 0 063 mouseMove 79 87 0 079 mouseMove 77 86 0 065 mouseMove 74 85 0 066 mouseMove 73 84 0 078 mouseMove 72 84 0 0129 mouseMove 72 83 0 0512 mouseDown 72 83 4 0113 mouseMove 72 83 4 07709 mouseUp 72 83 0 078 mouseMove 72 83 0 0425 mouseMove 76 83 0 054 mouseMove 78 83 0 0128 mouseMove 80 83 0 057 mouseMove 94 87 0 072 mouseMove 110 93 0 064 mouseMove 122 101 0 057 mouseMove 133 109 0 063 mouseMove 138 113 0 076 mouseMove 144 117 0 058 mouseMove 149 121 0 062 mouseMove 154 125 0 067 mouseMove 160 131 0 065 mouseMove 164 137 0 069 mouseMove 166 142 0 062 mouseMove 171 151 0 078 mouseMove 175 162 0 075 mouseMove 176 167 0 064 mouseMove 181 175 0 066 mouseMove 184 179 0 0141 mouseMove 192 190 0 078 mouseMove 197 199 0 060 mouseMove 198 204 0 067 mouseMove 201 212 0 087 mouseMove 201 218 0 055 mouseMove 201 222 0 058 mouseMove 200 227 0 062 mouseMove 198 233 0 074 mouseMove 197 235 0 0176 mouseMove 191 235 0 059 mouseMove 188 234 0 055 mouseMove 187 231 0 056 mouseMove 186 229 0 075 mouseMove 184 226 0 054 mouseMove 179 225 0 060 mouseMove 174 225 0 069 mouseMove 168 226 0 063 mouseMove 160 227 0 062 mouseMove 153 227 0 063 mouseMove 139 225 0 071 mouseMove 131 221 0 066 mouseMove 127 219 0 067 mouseMove 120 218 0 071 mouseMove 110 218 0 062 mouseMove 107 219 0 0198 mouseMove 111 219 0 058 mouseMove 112 219 0 0135 mouseDown 112 219 4 0317 mouseMove 112 219 4 0413 mouseUp 112 219 0 0205 mouseMove 112 219 0 0353 mouseMove 116 222 0 069 mouseMove 116 224 0 060 mouseMove 117 226 0 060 mouseMove 117 229 0 071 mouseMove 118 229 0 056 mouseMove 118 230 0 060 mouseMove 118 232 0 055 mouseMove 118 233 0 060 mouseMove 118 235 0 060 mouseMove 119 235 0 056 mouseDown 119 235 4 0340 mouseMove 119 235 4 0406 mouseUp 119 235 0 0194 mouseMove 119 235 0 0197 mouseMove 119 219 0 057 mouseMove 116 200 0 075 mouseMove 115 187 0 062 mouseMove 114 178 0 057 mouseMove 112 169 0 0151 mouseMove 111 151 0 061 mouseMove 110 144 0 073 mouseMove 110 137 0 054 mouseMove 109 133 0 060 mouseMove 108 128 0 053 mouseMove 107 123 0 071 mouseMove 105 117 0 059 mouseMove 103 112 0 053 mouseMove 103 111 0 061 mouseMove 102 108 0 072 mouseMove 101 104 0 058 mouseMove 100 99 0 061 mouseMove 100 96 0 064 mouseMove 99 93 0 063 mouseMove 99 92 0 063 mouseMove 99 91 0 0197 mouseMove 99 90 0 0523 mouseMove 98 93 0 075 mouseMove 98 95 0 060 mouseMove 98 96 0 062 mouseMove 98 99 0 054 mouseMove 98 100 0 080 mouseMove 98 101 0 054 mouseMove 98 102 0 0189 mouseDown 98 102 4 0103 mouseMove 98 102 4 05163 mouseUp 98 102 0 083 mouseMove 98 102 0 0237 mouseMove 105 103 0 059 mouseMove 113 103 0 0131 mouseMove 119 103 0 060 mouseMove 127 104 0 066 mouseMove 138 106 0 061 mouseMove 143 106 0 057 mouseMove 149 107 0 063 mouseMove 154 107 0 072 mouseMove 160 107 0 056 mouseMove 167 107 0 070 mouseMove 179 107 0 082 mouseMove 180 107 0 076 mouseMove 186 107 0 055 mouseMove 190 107 0 060 mouseMove 192 108 0 067 mouseMove 210 122 0 063 mouseMove 214 132 0 066 mouseMove 216 141 0 059 mouseMove 217 142 0 085 mouseMove 220 154 0 067 mouseMove 224 169 0 055 mouseMove 224 173 0 073 mouseMove 226 187 0 061 mouseMove 229 200 0 063 mouseMove 239 228 0 087 mouseMove 242 251 0 061 mouseMove 242 284 0 064 mouseMove 242 304 0 062 mouseMove 242 341 0 067 mouseMove 242 353 0 061 mouseMove 239 368 0 057 mouseMove 237 376 0 076 mouseMove 234 382 0 060 mouseMove 231 388 0 054 mouseMove 223 400 0 061 mouseMove 219 405 0 063 mouseMove 215 410 0 053 mouseMove 213 413 0 0548 mouseMove 212 413 0 0197 mouseDown 212 413 4 084 mouseMove 212 413 4 063 mouseUp 212 413 0 0149 mouseMove 212 413 0 0267 mouseMove 304 305 0 057 mouseMove 460 181 0 0109 mouseMove 461 138 0 062 mouseMove 452 133 0 061 mouseMove 448 132 0 055 mouseMove 442 131 0 072 mouseMove 440 132 0 0348 mouseDown 440 132 4 086 mouseUp 440 132 0 066 mouseMove 440 132 0 0945 keystroke 440 132 0 13129 mouseMove 440 132 0 0307 keystroke 440 132 0 112131 mouseMove 440 132 0 0120 keystroke 440 132 0 111116 mouseMove 440 132 0 01 keystroke 440 132 0 111109 mouseMove 440 132 0 0410 keystroke 440 132 0 104119 mouseMove 440 132 0 0137 keystroke 440 132 0 32124 mouseMove 440 132 0 0236 keystroke 440 132 0 115106 mouseMove 440 132 0 01 keystroke 440 132 0 116112 mouseMove 440 132 0 0177 keystroke 440 132 0 111114 mouseMove 440 132 0 065 keystroke 440 132 0 112117 mouseMove 440 132 0 01081 mouseMove 440 132 64 00 keystroke 440 132 64 100223 mouseMove 440 132 64 01271 mouseMove 408 132 64 055 mouseMove 372 132 64 082 mouseMove 367 131 64 062 mouseMove 347 131 64 059 mouseMove 306 129 64 073 mouseMove 273 129 64 072 mouseMove 245 127 64 055 mouseMove 234 127 64 061 mouseMove 220 127 64 066 mouseMove 209 127 64 063 mouseMove 197 127 64 055 mouseMove 189 127 64 061 mouseMove 173 131 64 073 mouseMove 154 139 64 055 mouseMove 134 154 64 062 mouseMove 122 161 64 072 mouseMove 114 167 64 060 mouseMove 110 171 64 055 mouseMove 105 174 64 069 mouseMove 99 179 64 065 mouseMove 94 187 64 061 mouseMove 89 195 64 064 mouseMove 86 203 64 074 mouseMove 85 208 64 061 mouseMove 84 211 64 055 mouseMove 84 216 64 062 mouseMove 84 219 64 074 mouseMove 84 222 64 060 mouseMove 84 226 64 053 mouseMove 84 228 64 071 mouseMove 84 229 64 053 mouseDown 84 229 4 061 mouseMove 84 229 4 0132 mouseUp 84 229 0 0'! !!WonderlandWrapperMorph methodsFor: 'handles' stamp: 'laza 3/24/2000 16:57'!addHandlesTo: aHaloMorph box: box	| dismissHandle s |	s _ aHaloMorph handleSize.	myActor getTexturePointer == nil ifFalse:[		aHaloMorph addHandleAt: box rightCenter color: Color lightGray on: #mouseDown send: #extractTexture: to: aHaloMorph target].	aHaloMorph addHandleAt: box topLeft color: Color red icon: 'Halo-Menu'		on: #mouseDown send: #doMenu:with: to: aHaloMorph.	aHaloMorph addHandleAt: (box leftCenter + (0 @ (s+2)) min: box leftCenter + box bottomLeft // 2)		color: Color lightBrown icon: 'Halo-Tile'		on: #mouseDown send: #yourself "#tearOffTile" to: self.	dismissHandle _ aHaloMorph addHandleAt: (box topLeft + ((s+2)@0) min: box topLeft + box topCenter // 2)		color: Color red muchLighter icon: 'Halo-Dismiss'		on: #mouseDown send: #mouseDownInDimissHandle:with: to: aHaloMorph.	dismissHandle on: #mouseUp send: #maybeDismiss:with: to: aHaloMorph.	dismissHandle on: #mouseStillDown send: #setDismissColor:with: to: aHaloMorph.	aHaloMorph addHandleAt: box leftCenter color: Color cyan icon: 'Halo-View'		on: #mouseDown send: #yourself "#openViewerForArgument" to: self.	aHaloMorph addHandleAt: box topCenter color: Color black icon: 'Halo-Grab'		on: #mouseDown send: #grabFromHalo:with: to: self.	(aHaloMorph addHandleAt: (box topCenter + ((s+2)@0) min: box topCenter + box topRight // 2)		color: Color brown icon: 'Halo-Drag'		on: #mouseDown send: #dragStartFromHalo:with: to: self)		on: #mouseStillDown send: #dragMoveFromHalo:with: to: self;		on: #mouseUp send: #dragEndFromHalo:with: to: self.	(aHaloMorph addHandleAt: box topRight color: Color green icon: 'Halo-Dup'		on: #mouseDown send: #dupStartFromHalo:with: to: self)		on: #mouseStillDown send: #dupMoveFromHalo:with: to: self;		on: #mouseUp send: #dupEndFromHalo:with: to: self.	Preferences showDebugHaloHandle ifTrue:		[aHaloMorph addHandleAt: ((box topRight + box rightCenter) // 2)			color: Color blue veryMuchLighter icon: 'Halo-Debug'			on: #mouseDown send: #doDebug:with: to: aHaloMorph].	(aHaloMorph addHandleAt: box bottomLeft color: Color blue icon: 'Halo-Rotate'		on: #mouseDown send: #rotateStartFromHalo:with: to: self)		on: #mouseStillDown send: #rotateMoveFromHalo:with: to: self;		on: #mouseUp send: #rotateEndFromHalo:with: to: self.	(aHaloMorph addHandleAt: box bottomRight color: Color yellow icon: 'Halo-Scale'		on: #mouseDown send: #growStartFromHalo:with: to: self)		on: #mouseStillDown send: #growMoveFromHalo:with: to: self;		on: #mouseUp send: #growEndFromHalo:with: to: self.	myActor isHandmade		ifTrue: [			(aHaloMorph addHandleAt: box center color: Color white icon: 'Halo-Paint'				on: #mouseUp send: #paintMode to: self getCameraMorph)]! !!WonderlandWrapperMorph methodsFor: 'handles' stamp: 'laza 3/24/2000 16:15'!balloonHelpTextForHandle: aHandle	|  itsSelector |	itsSelector _ aHandle eventHandler firstMouseSelector.	#(	(rotateStartFromHalo:with:				'Rotate')		(growStartFromHalo:with:				'Change size') 		(dupStartFromHalo:with:					'Duplicate')		(grabFromHalo:with:						'Pick up')		(dragStartFromHalo:with:				'Move')		(extractTexture:							'Extract texture')		(paintMode								'Paint on surface')	) do:		[:pair | itsSelector == pair first ifTrue: [^ pair last]].	^super balloonHelpTextForHandle: aHandle! !B3DRotation removeSelector: #dot:!B3DVector3 removeSelector: #dot:!B3DVector3 removeSelector: #squaredLength!B3DVector3 removeSelector: #length!POObject initialize!WonderlandCameraMorph initialize!"Postscript:"Preferences resetHaloSpecifications; installIconicHaloSpecs.!