'From Squeak3.8beta of ''2 November 2004'' [latest update: #6351] on 5 November 2004 at 1:15:31 pm'!"Change Set:		38b6351-AcornfileDirFixDate:			5 November 2004Author:			tim@sumeru.stanford.eduAn Acorn specific change for the 3.8b6351 image - a missed change relating to the m17n work.Add #isNullPath to FilePath to test for an empty path string, which is the magic code for root directory in the directory listing prim"!!AcornFileDirectory methodsFor: 'file name utilities' stamp: 'tpr 11/5/2004 13:08'!fullPathFor: path	"if the arg is an empty string, just return my path name converted via the language stuff. If the arg seems to be a  rooted path, return it raw, assuming it is already ok.Otherwise cons up a path"	path isEmpty ifTrue:[^pathName asSqueakPathName].	((path includes: $$ ) or:[path includes: $:]) ifTrue:[^path].	^pathName asSqueakPathName, self slash, path! !!AcornFileDirectory methodsFor: 'private' stamp: 'tpr 11/5/2004 13:08'!directoryContentsFor: fullPath 	"Return a collection of directory entries for the files and directories in 	the directory with the given path. See primLookupEntryIn:index: for 	further details."	"FileDirectory default directoryContentsFor: ''"	| entries extraPath |	entries _ super directoryContentsFor: fullPath.	fullPath isNullPath		ifTrue: [			"For Acorn we also make sure that at least the parent of the current dir 			is added - sometimes this is in a filing system that has not been (or 			cannot be) polled for disc root names"			extraPath _ self class default containingDirectory.			"Only add the extra path if we haven't already got the root of the current dir in the list"			entries detect: [:ent | extraPath fullName beginsWith: ent name] 				ifNone: [entries _ entries								copyWith: (DirectoryEntry										name: extraPath fullName										creationTime: 0										modificationTime: 0										isDirectory: true										fileSize: 0)]].	^ entries! !!FilePath methodsFor: 'testing' stamp: 'tpr 11/5/2004 11:39'!isNullPath	"an empty path is used to represent the root path(s) when calling the primitive to list directory entries. Some users need to check for this and this is cleaner than grabbing the pathname and assuming it is a plain String"	^self pathName isEmpty! !!FilePath reorganize!('conversion' asSqueakPathName asSystemPathName coverter: pathName pathName:isEncoded: printOn:)('testing' isNullPath)!