'From Squeak 2.3 beta of Nov 25, 1998 on 5 January 1999 at 1:38:46 pm'!"Change Set:		ColorPickerTweakDate:			5 January 1999Author:			Dan IngallsConverts the top area of the color picker into a translucency slider when the Display is in RGB mode."!!ColorPickerMorph methodsFor: 'initialization' stamp: 'di 1/5/1999 13:33'!initialize	| chartForm transText |	super initialize.	chartForm _ ColorChart deepCopy.	Display depth >= 16 ifTrue:		[chartForm fillBlack: (10@0 extent: 1@10).		chartForm fillBlack: ((chartForm width - FeedbackBox width - 10)@0 extent: 1@10).		transText _ (Form extent: 63@9 depth: 1   "Where there's a will there's a way..."					fromArray: #( 0 0 4194306 1024 4194306 1024 15628058 2476592640									4887714 2485462016 1883804850 2486772764 4756618									2485462016 4748474 1939416064 0 0)					offset: 0@0).		transText displayOn: chartForm at: 58@0].	self form: chartForm.	selectedColor _ Color white.	sourceHand _ nil.	deleteOnMouseUp _ true.	updateContinuously _ true.	selector _ nil.	target _ nil.! !!ColorPickerMorph methodsFor: 'private' stamp: 'di 1/5/1999 12:33'!pickColorAt: aPoint	| worldBox globalP c alpha |	(FeedbackBox containsPoint: aPoint - self topLeft) ifTrue: [^ self].  "do nothing"	"pick up color, either inside or outside this world"	worldBox _ self world viewBox.	globalP _ aPoint + worldBox topLeft.  "get point in screen coordinates"	(worldBox containsPoint: globalP)		ifTrue: [c _ self world colorAt: aPoint belowMorph: Morph new]		ifFalse: [c _ Display colorAt: globalP].	"check for transparent color and update using appropriate feedback color"	(TransparentBox containsPoint: aPoint - self topLeft)		ifTrue: [Display depth >= 16				ifTrue: [alpha _ (aPoint x - bounds left - 10) asFloat								/ (TransparentBox width - FeedbackBox width - 20)									min: 1.0 max: 0.0.						c _ selectedColor ifNil: [Color gray].						self updateColor: (c alpha: alpha) feedbackColor: (c alpha: alpha)]				ifFalse: [self updateColor: Color transparent feedbackColor: Color white]]		ifFalse: [self updateColor: c feedbackColor: c]! !!ColorPickerMorph methodsFor: 'private' stamp: 'di 1/5/1999 11:51'!updateTargetColor	| oldColor alphaColor |	target == nil ifTrue: [^ self].	(target respondsTo: #color)		ifTrue: [oldColor _ target color]		ifFalse: [oldColor _ color white].	selectedColor isTranslucentColor		ifTrue: [alphaColor _ oldColor alpha: selectedColor alpha]		ifFalse: [oldColor isTranslucentColor					ifTrue: [alphaColor _ selectedColor alpha: oldColor alpha]					ifFalse: [alphaColor _ selectedColor]].	selector ~~ nil ifTrue:		[selector numArgs = 2			ifTrue: [target perform: selector with: alphaColor with: sourceHand]			ifFalse: [target perform: selector with: alphaColor]].! !