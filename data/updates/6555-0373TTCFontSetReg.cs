'From Squeakland 3.8.5976 of 25 August 2004 [latest update: #370] on 2 December 2004 at 1:11:55 pm'!"Change Set:		TTCFontSetRegDate:			2 December 2004Author:			Yoshiki OhshimaInstead of using #allInstances in #familyName:pointSize: it now sets up a registry and search fonts from there.  Also fixes some loose ends."!AbstractFont subclass: #TTCFontSet	instanceVariableNames: 'name fontArray foregroundColor '	classVariableNames: 'Registry '	poolDictionaries: ''	category: 'Multilingual-Display'!!HostFont class methodsFor: 'system defaults' stamp: 'yo 12/2/2004 12:50'!unloadAsianTT"	self unloadAsianTT"	TTCFontSet removeStyleName: 'MultiSimHei'.	TTCFontSet removeStyleName: 'MultiMSGothic'.	TTCFontSet removeStyleName: 'MultiGulim'.! !!TTCFontDescription class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 13:02'!removeDescriptionNamed: descriptionName	| tt |	TTCDescriptions ifNil: [^ self].	[(tt _ TTCDescriptions detect: [:f | ('Multi', f first name) = descriptionName] ifNone: [nil]) notNil] whileTrue:[		 TTCDescriptions remove: tt	].! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 13:10'!familyName: n pointSize: s	"(self familyName: 'MultiMSGothic' pointSize: 14) pointSize"	| t ret index |	t _ self registry at: n asSymbol ifAbsent: [#()].	t isEmpty ifTrue: [t _ (TextConstants at: #DefaultTextStyle) fontArray].	ret _ t first.	ret pointSize >= s ifTrue: [^ ret].	index _ 2.	[index <= t size and: [(t at: index) pointSize <= s]] whileTrue: [		ret _ t at: index.		index _ index + 1.	].			^ ret! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 13:04'!newTextStyleFromTT: descriptionArray	| array f textStyle styleName arrayOfArray |	arrayOfArray _ self pointSizes collect: [:pt |		descriptionArray collect: [:ttc |			ttc ifNil: [nil] ifNotNil: [				f _ (ttc size > 256)					ifTrue: [MultiTTCFont new initialize]					ifFalse: [TTCFont new initialize].				f ttcDescription: ttc.				f pointSize: pt.			].		].	].	array _ arrayOfArray collect: [:fonts |		self newFontArray: fonts.	].	styleName _ (array at: 1) familyName asSymbol.	textStyle _ TextStyle fontArray: array.	TextConstants at: styleName put: textStyle.	self register: array at: styleName.	^ TextConstants at: styleName.! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 12:58'!newTextStyleFromTTFile: fileName"	TTCFontReader encodingTag: JapaneseEnvironment leadingChar.	self newTextStyleFromTTFile: 'C:\WINDOWS\Fonts\msmincho.TTC'	TTCFontReader encodingTag: 0.	self newTextStyleFromTTFile: 'C:\WINDOWS\Fonts\symbol.ttf'"	| description |	description _ TTCFontDescription addFromTTFile: fileName.	^ self newTextStyleFromTT: description.! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 12:50'!register: anObject at: symbolName	self registry at: symbolName put: anObject.! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 13:07'!registry	^ Registry isNil		ifTrue: [Registry := IdentityDictionary new]		ifFalse: [Registry].! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 12:49'!removeStyleName: aString	| style symName |	symName _ aString asSymbol.	style _ TextConstants removeKey: symName ifAbsent: [].	style ifNotNil: [self unregister: symName].	TTCFontDescription removeDescriptionNamed: aString asString.! !!TTCFontSet class methodsFor: 'as yet unclassified' stamp: 'yo 12/2/2004 12:49'!unregister: symbolName	self registry removeKey: symbolName ifAbsent: [].! !TTCFontSet class removeSelector: #register:!AbstractFont subclass: #TTCFontSet	instanceVariableNames: 'name fontArray foregroundColor'	classVariableNames: 'Registry'	poolDictionaries: ''	category: 'Multilingual-Display'!