'From Squeak3.3alpha of 18 January 2002 [latest update: #4854] on 2 May 2002 at 11:05:15 am'!"Change Set:		browseThemes-swDate:			2 May 2002Author:			Scott WallaceAdds an item to the themes menu allowing the existing set of theme-defining methods to be browsed.Makes a couple of adjustments to out-of-box 3.2 preferences.Adds a #westwood theme, which attempts to approximate the settings found in a current-vintage plug-in image as used by kids in LA schools this school year"!!Preferences class methodsFor: 'misc' stamp: 'sw 4/30/2002 00:07'!browseThemes	"Open up a message-category browser on the theme-defining methods"	| aBrowser |	aBrowser _ Browser new setClass: Preferences class selector: #outOfTheBox..	aBrowser messageCategoryListIndex: ((Preferences class organization categories indexOf: 'themes' ifAbsent: [^ self inform: 'no themes found']) + 1).	Browser openBrowserView: (aBrowser openMessageCatEditString: nil)		label: 'Preference themes'	"Preferences browseThemes"! !!Preferences class methodsFor: 'misc' stamp: 'sw 4/30/2002 02:33'!defaultValueTableForCurrentRelease	"Answer a table defining default values for all the preferences in the release.  Returns a list of (pref-symbol, boolean-symbol) pairs"	^  #(		(abbreviatedBrowserButtons false)		(allowCelesteTell true)		(alternativeBrowseIt false)		(alternativeScrollbarLook true)		(alternativeWindowLook true)		(annotationPanes false)		(areaFillsAreTolerant false)		(areaFillsAreVeryTolerant false)		(autoAccessors false)		(automaticFlapLayout true)		(automaticKeyGeneration false)		(automaticPlatformSettings true)		(automaticViewerPlacement true)		(balloonHelpEnabled true)		(balloonHelpInMessageLists false)		(batchPenTrails false)		(browseWithDragNDrop false)		(browseWithPrettyPrint false)		(browserShowsPackagePane false)		(canRecordWhilePlaying false)		(capitalizedReferences true)		(caseSensitiveFinds false)		(cautionBeforeClosing false)		(celesteHasStatusPane false)		(celesteShowsAttachmentsFlag false)		(changeSetVersionNumbers true)		(checkForSlips true)		(checkForUnsavedProjects true)		(classicNavigatorEnabled false)		(classicNewMorphMenu false)		(clickOnLabelToEdit false)		(cmdDotEnabled true)		(collapseWindowsInPlace false)		(colorWhenPrettyPrinting false)		(compactViewerFlaps false)		(compressFlashImages false)		(confirmFirstUseOfStyle true)		(conversionMethodsAtFileOut false)		(cpuWatcherEnabled false)		(debugHaloHandle true)		(debugPrintSpaceLog false)		(debugShowDamage false)		(decorateBrowserButtons true)		(diffsInChangeList true)		(diffsWithPrettyPrint false)		(dismissAllOnOptionClose false)		(dragNDropWithAnimation false)		(eToyFriendly false)		(eToyLoginEnabled false)		(enableLocalSave true)		(extractFlashInHighQuality true)		(extractFlashInHighestQuality false)		(fastDragWindowForMorphic true)		(fenceEnabled true)		(fullScreenLeavesDeskMargins true)		(haloTransitions false)		(hiddenScrollBars false)		(higherPerformance false)		(honorDesktopCmdKeys true)		(ignoreStyleIfOnlyBold true)		(inboardScrollbars true)		(includeSoundControlInNavigator false)		(infiniteUndo false)		(logDebuggerStackToFile true)		(magicHalos false)		(menuButtonInToolPane false)		(menuColorFromWorld false)		(menuKeyboardControl false)  		(modalColorPickers true)		(mouseOverForKeyboardFocus false)		(mouseOverHalos false)		(mvcProjectsAllowed true)		(navigatorOnLeftEdge true)		(noviceMode false)		(okToReinitializeFlaps true)		(optionalButtons true)		(passwordsOnPublish false)		(personalizedWorldMenu true)		(postscriptStoredAsEPS false)		(preserveTrash true)		(printAlternateSyntax false)		(projectViewsInWindows true)		(projectZoom true)		(projectsSentToDisk false)		(promptForUpdateServer true)		(propertySheetFromHalo false)		(readDocumentAtStartup true)		(restartAlsoProceeds false)		(reverseWindowStagger true)		(roundedMenuCorners true)		(roundedWindowCorners true)		(scrollBarsNarrow false)		(scrollBarsOnRight true)		(scrollBarsWithoutMenuButton false)		(securityChecksEnabled false)		(selectiveHalos false)		(showBoundsInHalo false)		(showDirectionForSketches false)		(showDirectionHandles false)		(showFlapsWhenPublishing false)		(showProjectNavigator false)		(showSecurityStatus true)		(showSharedFlaps true)		(signProjectFiles true)		(simpleMenus false)		(slideDismissalsToTrash true)		(smartUpdating true)		(soundQuickStart false)		(soundStopWhenDone false)		(soundsEnabled true)		(startInUntrustedDirectory false)		(systemWindowEmbedOK false)		(thoroughSenders true)		(tileTranslucentDrag true)		(timeStampsInMenuTitles true)		(turnOffPowerManager false)		(twentyFourHourFileStamps true)		(twoSidedPoohTextures true)		(typeCheckingInTileScripting true)		(uniTilesClassic true)		(uniqueNamesInHalos false)		(universalTiles false)		(unlimitedPaintArea false)		(updateSavesFile false)		(useButtonProprtiesToFire false)		(useUndo true)		(viewersInFlaps true)		(warnAboutInsecureContent true)		(warnIfNoChangesFile true)		(warnIfNoSourcesFile true))"Preferences defaultValueTableForCurrentRelease do:	[:pair | (Preferences preferenceAt: pair first ifAbsent: [nil]) ifNotNilDo:			[:pref | pref defaultValue: (pair last == #true)]].Preferences chooseInitialSettings."! !!Preferences class methodsFor: 'misc' stamp: 'sw 5/2/2002 10:48'!giveHelpWithPreferences	"Open up a workspace with explanatory info in it about Prefernces"	| aString |	aString _ 'Many aspects of the system are governed by the settings of various "Preferences".  Click on any of brown tabs at the top of the panel to see all the preferences in that category.  Or type in to the box above the Search button, then hit Search, and all Preferences matching whatever you typed in will appear in the "search results" category.  A preference is considered to match your search if either its name matches the characters *or* if anything in the balloon help provided for the preferences matches the search text.To find out more about any particular Preference, hold the mouse over it for a moment and balloon help will appear.Preferences whose names are in bold are designated as being allowed to vary from project to project; those whose name are not in bold are "global", which is to say, they apply equally whatever project you are in.Click on the name of any preference to get a menu which allows you to *change* whether the preference should vary from project to project or should be global, and also allows you to browse all the senders of the preference, also to discover all the categories unde which the preference has been classified.If you like all your current Preferences settings, you may wish to hit the "Save Current Settings as my Personal Preferences" button.  Once you have done that, you can at any point in the future hit "Restore my Personal Preferences" and all your saved settings will get restored immediately.Also, you can use "themes" to set multiple preferences all at once; click on the "change theme..." button in the Squeak flap or in the Preferences panel, or seek out the themes item in the Appearance menu.'.	(Workspace new contents: aString) openLabel: 'About Preferences'! !!Preferences class methodsFor: 'misc' stamp: 'sw 4/30/2002 01:02'!offerThemesMenu	"Put up a menu offering the user a choice of themes.  Each theme is represented by a method in category #themes in Preferences class.  The comment at the front of each method is used as the balloon help for the theme"	"Preferences offerThemesMenu"	| selectors aMenu |	selectors _ self class allMethodsInCategory: #themes.	selectors _ selectors select: [:sel | sel numArgs = 0].	aMenu _ MenuMorph new defaultTarget: self.	aMenu addTitle: 'Choose a theme to install'.	selectors do:		[:sel |			aMenu add: sel target: self selector: #installTheme: argument: sel.			aMenu balloonTextForLastItem: (self class firstCommentAt: sel)].	aMenu addLine.	aMenu add: 'browse themes' target: self action: #browseThemes.	aMenu balloonTextForLastItem: 'Puts up a tool that will allow you to view and edit the code underlying all of the available themes'.	aMenu popUpInWorld.	"(Workspace new contents: 'here is an example of a new window with your new theme installed') openLabel: 'Testing one two three'"! !!Preferences class methodsFor: 'themes' stamp: 'sw 4/30/2002 00:12'!paloAlto	"Similar to the brightSqueak theme, but with a number of idiosyncratic personal settings favored in Palo Alto, California -- note thatmouseOverForKeyboardFocus &caseSensitiveFinds are both set to true"	self setPreferencesFrom:	#(		(alternativeScrollbarLook false)		(alternativeWindowLook false)		(annotationPanes true)		(autoAccessors false)		(balloonHelpEnabled true)		(balloonHelpInMessageLists false)		(browseWithDragNDrop false)		(browseWithPrettyPrint false)		(browserShowsPackagePane false)		(capitalizedReferences true)		(caseSensitiveFinds true)		(changeSetVersionNumbers true)		(checkForSlips true)		(classicNavigatorEnabled false)		(classicNewMorphMenu false)		(clickOnLabelToEdit false)		(cmdDotEnabled true)		(colorWhenPrettyPrinting false)		(compactViewerFlaps false)		(confirmFirstUseOfStyle true)		(conversionMethodsAtFileOut true)		(debugHaloHandle true)		(debugPrintSpaceLog true)		(debugShowDamage false)		(decorateBrowserButtons true)		(diffsInChangeList true)		(diffsWithPrettyPrint false)		(dismissAllOnOptionClose true)		(dragNDropWithAnimation false)		(eToyFriendly false)		(enableLocalSave true)		(fastDragWindowForMorphic true)		(fullScreenLeavesDeskMargins true)		(haloTransitions false)		(hiddenScrollBars false)		(honorDesktopCmdKeys true)		(ignoreStyleIfOnlyBold true)		(inboardScrollbars false)		(includeSoundControlInNavigator true)		(infiniteUndo false)		(logDebuggerStackToFile true)		(magicHalos false)		(menuButtonInToolPane false)		(menuColorFromWorld false)		(menuKeyboardControl true)  		(modalColorPickers true)		(mouseOverForKeyboardFocus true)		(mouseOverHalos false)		(mvcProjectsAllowed true)		(navigatorOnLeftEdge true)		(noviceMode false)		(okToReinitializeFlaps true)		(optionalButtons true)		(personalizedWorldMenu true)		(preserveTrash true)		(printAlternateSyntax false)		(propertySheetFromHalo false)		(restartAlsoProceeds false)		(reverseWindowStagger true)		(roundedMenuCorners true)		(roundedWindowCorners true)		(scrollBarsNarrow false)		(scrollBarsOnRight false)		(scrollBarsWithoutMenuButton false)		(selectiveHalos false)		(showBoundsInHalo false)		(showDirectionForSketches true)		(showDirectionHandles false)		(showProjectNavigator false)		(showSharedFlaps true)		(simpleMenus false)		(slideDismissalsToTrash true)		(smartUpdating true)		(systemWindowEmbedOK false)		(thoroughSenders true)		(timeStampsInMenuTitles true)		(universalTiles false)		(unlimitedPaintArea false)		(useButtonProprtiesToFire false)		(useUndo true)		(viewersInFlaps true)		(warnIfNoChangesFile true)		(warnIfNoSourcesFile true)).	self installBrightWindowColors! !!Preferences class methodsFor: 'themes' stamp: 'sw 5/2/2002 10:45'!personal	"Settings saved (by sometime earlier having hit the 'Save Current Settings as my Personal Preferences' in a Preferences panel) as my personal preferences"	self restorePersonalPreferences! !!Preferences class methodsFor: 'themes' stamp: 'sw 5/2/2002 11:03'!westwood	"Settings generally similar to those found in a standard browser-plug-in-based Squeak image"	self setPreferencesFrom: #(		(alternativeScrollbarLook true)		(alternativeWindowLook true)		(classicNavigatorEnabled true)		(eToyFriendly true)		(haloTransitions true)		(honorDesktopCmdKeys false)		(magicHalos true)		(menuKeyboardControl false)		(preserveTrash true)		(propertySheetFromHalo true)		(unlimitedPaintArea true))! !