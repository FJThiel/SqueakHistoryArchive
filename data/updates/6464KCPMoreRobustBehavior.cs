'From Squeak3.8beta of ''2 November 2004'' [latest update: #6374] on 19 November 2004 at 5:04:43 pm'!"Change Set:		BehaviorMoreRobustDate:			19 November 2004Author:			Stephane DucasseClean Behavior, Make the creation of Behavior instance more robustBehavior new new does not crash the image anymore. With this changeset, having instance behavior specific method is possible by inserting Behavior instance between instance and its class under the assumption that the anonymous class has the same format than its superclass."!!Behavior methodsFor: 'initialize-release' stamp: 'sd 11/19/2004 15:18'!emptyMethodDictionary	^ MethodDictionary new! !!Behavior methodsFor: 'initialize-release' stamp: 'sd 11/19/2004 15:19'!obsolete	"Invalidate and recycle local messages,	e.g., zap the method dictionary if can be done safely."	self canZapMethodDictionary		ifTrue:[ methodDict _ self emptyMethodDictionary ].! !!Behavior methodsFor: 'accessing method dictionary' stamp: 'sd 11/19/2004 15:18'!zapAllMethods	"Remove all methods in this class which is assumed to be obsolete"	methodDict _ self emptyMethodDictionary.	self class isMeta ifTrue: [self class zapAllMethods]! !!Behavior methodsFor: 'private' stamp: 'sd 11/19/2004 15:13'!setFormat: aFormatInstanceDescription	"only use this method with extreme care since it modifies the format of the class      ie a description of the number of instance variables and whether the class is     compact, variable sized"	format := aFormatInstanceDescription! !!Behavior class methodsFor: 'instance creation' stamp: 'sd 11/19/2004 15:27'!new		| classInstance |	classInstance := self basicNew.	classInstance methodDictionary: classInstance emptyMethodDictionary.	classInstance superclass: Object.	classInstance setFormat: Object format.	^ classInstance! !!Behavior class methodsFor: 'instance creation' stamp: 'sd 11/19/2004 15:16'!superclass: aClass methodDictionary: mDict format: fmt	^ self new superclass: aClass methodDictionary: mDict format: fmt ; yourself! !!BehaviorTest methodsFor: 'tests' stamp: 'sd 11/19/2004 15:38'!testBehaviornewnewShouldNotCrash	Behavior new new.	"still not working correctly but at least does not crash the image"	! !!BehaviorTest methodsFor: 'tests' stamp: 'sd 11/19/2004 15:54'!testChange	"self debug: #testChange"	| behavior browser |	behavior := Behavior new.	behavior superclass: Browser.	behavior setFormat: Browser format.	browser := Browser new.	browser primitiveChangeClassTo: behavior new.	behavior compile: 'thisIsATest  ^ 2'.	self assert: browser thisIsATest = 2.	self should: [Browser new thisIsATest] raise: MessageNotUnderstood.! !