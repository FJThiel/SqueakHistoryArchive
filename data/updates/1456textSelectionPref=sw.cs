'From Squeak 2.5 of August 6, 1999 on 16 September 1999 at 10:33:33 pm'!"Change Set:		textSelectionPref-swDate:			16 September 1999Author:			Scott Wallace & John DouganDrawing on an idea and code from John Dougan, allows the user to specify colors to be used for the text selection and the insertion point, via the Appearance menu.  This applies only to Morphic text-editing."!!HandMorph methodsFor: 'world menu' stamp: 'sw 9/7/1999 12:59'!appearanceMenu	"Build the appearance menu for the world."	| menu screenCtrl |	screenCtrl _ ScreenController new.	menu _ (MenuMorph entitled: 'appearance...') defaultTarget: self.	menu addStayUpItem.	menu add: 'window colors...' target: Preferences action: #windowSpecificationPanel.	menu balloonTextForLastItem: 'lets you specify colors for standard system windows.'.	menu add: 'text highlight color...' target: Preferences action: #chooseTextHighlightColor.	menu balloonTextForLastItem: 'Lets you choose which color should be used for text highlighting in Morphic.'.	menu add: 'insertion point color...' target: Preferences action: #chooseInsertionPointColor.	menu balloonTextForLastItem: 'Lets you choose which color to use for the text insertion point in Morphic.'.	menu addLine.	menu addUpdating: #menuColorString target: Preferences action: #toggleMenuColorPolicy.	menu balloonTextForLastItem: 'Governs whether menu colors should be derived from the desktop color.'.	menu addUpdating: #roundedCornersString target: Preferences action: #toggleRoundedCorners.	menu balloonTextForLastItem: 'Governs whether morphic windows and menus should have rounded corners.'.	menu addLine.	menu add: 'full screen on' target: screenCtrl action: #fullScreenOn.	menu balloonTextForLastItem: 'puts you in full-screen mode, if not already there.'.	menu add: 'full screen off' target: screenCtrl action: #fullScreenOff.	menu balloonTextForLastItem: 'if in full-screen mode, takes you out of it.'.	menu addLine.	menu add: 'set display depth...' action: #setDisplayDepth.	menu balloonTextForLastItem: 'choose how many bits per pixel.'.	menu add: 'set desktop color...' action: #changeBackgroundColor.	menu balloonTextForLastItem: 'choose a uniform color to use as desktop background.'.	menu add: 'use texture background' target: self world action: #setStandardTexture.	menu balloonTextForLastItem: 'apply a graph-paper-like texture background to the desktop.'.	^ menu! !!NewParagraph methodsFor: 'display' stamp: 'sw 9/7/1999 13:05'!displaySelectionInLine: line on: aCanvas	| leftX rightX w caretColor |	selectionStart ifNil: [^ self].  "No selection"	selectionStart = selectionStop		ifTrue: ["Only show caret on line where clicked"				selectionStart textLine ~= line ifTrue: [^ self]]		ifFalse: ["Test entire selection before or after here"				(selectionStop stringIndex < line first					or: [selectionStart stringIndex > (line last+1)])					ifTrue: [^ self].  "No selection on this line"				(selectionStop stringIndex = line first					and: [selectionStop textLine ~= line])					ifTrue: [^ self].  "Selection ends on line above"				(selectionStart stringIndex = (line last+1)					and: [selectionStop textLine ~= line])					ifTrue: [^ self]].  "Selection begins on line below"	selectionStart stringIndex < line first		ifTrue: [leftX _ line left]		ifFalse: [leftX _ selectionStart left].	(selectionStop stringIndex > (line last+1)			or: [selectionStop stringIndex = (line last+1)					and: [selectionStop textLine ~= line]])		ifTrue: [rightX _ line right]		ifFalse: [rightX _ selectionStop left].	selectionStart = selectionStop		ifTrue:		[rightX _ rightX + 1.		w _ self caretWidth.		caretColor _ self insertionPointColor.		1 to: w do:			[:i |  "Draw caret triangles at top and bottom"			aCanvas fillRectangle: ((leftX-w+i-1)@(line top+i-1) extent: (w-i*2+3)@1)				color: caretColor.			aCanvas fillRectangle: ((leftX-w+i-1)@(line bottom-i) extent: (w-i*2+3)@1)				color: caretColor].		aCanvas fillRectangle: (leftX@line top corner: rightX@line bottom)				color: caretColor]	ifFalse:		[aCanvas fillRectangle: (leftX@line top corner: rightX@line bottom)				color: self selectionColor]! !!NewParagraph methodsFor: 'display' stamp: 'sw 9/7/1999 13:04'!insertionPointColor	^ Display depth <= 2		ifTrue: [Color black]		ifFalse: [Preferences insertionPointColor]! !!NewParagraph methodsFor: 'display' stamp: 'sw 9/7/1999 13:03'!selectionColor	Display depth = 1 ifTrue: [^ Color veryLightGray].	Display depth = 2 ifTrue: [^ Color gray].	^ Preferences textHighlightColor! !!Preferences class methodsFor: 'parameters' stamp: 'sw 9/7/1999 12:45'!initializeParameters	"Preferences initializeParameters"	Parameters _ IdentityDictionary new.	self restoreDefaultMenuParameters.	Parameters at: #maxBalloonHelpLineLength put: 28.	self initializeTextHighlightingParameters! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 13:00'!chooseInsertionPointColor	ColorPickerMorph new		sourceHand: self currentHand;		target: self;		selector: #insertionPointColor:;		originalColor: self insertionPointColor;		addToWorld: self currentWorld			near: self currentHand cursorBounds! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 12:57'!chooseTextHighlightColor	ColorPickerMorph new		sourceHand: self currentHand;		target: self;		selector: #textHighlightColor:;		originalColor: self textHighlightColor;		addToWorld: self currentWorld			near: self currentHand cursorBounds! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 13:07'!initializeTextHighlightingParameters	"Preferences initializeTextHighlightingParameters"	Parameters at: #insertionPointColor put: (Color r: 0.4 g: 1.0 b: 0).	Parameters at: #textHighlightColor put: (Color r: 0.4 g: 1.0 b: 0).! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 12:53'!insertionPointColor	^ Parameters at: #insertionPointColor! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 12:54'!insertionPointColor: aColor	Parameters at: #insertionPointColor put: aColor! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 12:53'!textHighlightColor	^ Parameters at: #textHighlightColor! !!Preferences class methodsFor: 'text highlighting' stamp: 'sw 9/7/1999 12:54'!textHighlightColor: aColor	Parameters at: #textHighlightColor put: aColor! !"Postscript:"Preferences initializeTextHighlightingParameters.!