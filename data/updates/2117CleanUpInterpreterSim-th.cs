'From Squeak2.8alpha of 4 February 2000 [latest update: #2052] on 30 April 2000 at 4:17:51 pm'!"Change Set:		027CleanUpInterpreterSim-thDate:			24 April 2000Author:			Torge HusfeldtWarning: As usual I haven't fully confirmed that the interpreter simulator is still working --smaOccasionally people complain about InterpreterSimulator not working...just to find out they are on a littleEndian box.This changeset cleans this up and decides upon Smalltalk>>endianness, which version to use."!InterpreterSimulator subclass: #InterpreterSimulatorMSB	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'VMConstruction-Interpreter'!!InterpreterSimulator methodsFor: 'initialization' stamp: 'th 4/15/2000 17:19'!nextLongFrom: aStream	"Read a 32-bit quantity from the given (binary) stream."	^self subclassResponsibility! !!InterpreterSimulator methodsFor: 'debug support' stamp: 'th 4/15/2000 17:22'!charsOfLong: long	^self subclassResponsibility! !!InterpreterSimulator methodsFor: 'memory access' stamp: 'th 4/15/2000 17:21'!byteAt: byteAddress	^self subclassResponsibility! !!InterpreterSimulator methodsFor: 'memory access' stamp: 'th 4/15/2000 17:21'!byteAt: byteAddress put: byte	^self subclassResponsibility! !!InterpreterSimulator methodsFor: 'memory access' stamp: 'th 4/15/2000 17:22'!halfWordAt: byteAddress    "Return the half-word at byteAddress which must be even."	^self subclassResponsibility! !!InterpreterSimulator methodsFor: 'memory access' stamp: 'th 4/15/2000 17:22'!halfWordAt: byteAddress put: halfWord	^self subclassResponsibility! !!InterpreterSimulator class methodsFor: 'instance creation' stamp: 'th 4/15/2000 17:14'!new	^ self == InterpreterSimulator		ifTrue: [Smalltalk endianness == #big				ifTrue: [InterpreterSimulatorMSB new]				ifFalse: [InterpreterSimulatorLSB new]]		ifFalse: [super new]! !!InterpreterSimulatorLSB class methodsFor: 'instance creation' stamp: 'th 4/15/2000 17:16'!new	^self basicNew! !!InterpreterSimulatorMSB methodsFor: 'initialization' stamp: 'th 4/15/2000 15:43'!nextLongFrom: aStream 	"Read a 32-bit quantity from the given (binary) stream."	| bytes |	bytes _ aStream nextInto: (ByteArray new: 4).	^ Integer		byte1: (bytes at: 4)		byte2: (bytes at: 3)		byte3: (bytes at: 2)		byte4: (bytes at: 1)! !!InterpreterSimulatorMSB methodsFor: 'memory access' stamp: 'th 4/15/2000 16:03'!byteAt: byteAddress	| lowBits |	lowBits _ byteAddress bitAnd: 3.	^((self longAt: byteAddress - lowBits)		bitShift: (lowBits - 3) * 8)		bitAnd: 16rFF! !!InterpreterSimulatorMSB methodsFor: 'memory access' stamp: 'th 4/15/2000 16:03'!byteAt: byteAddress put: byte	| longWord shift lowBits |	lowBits _ byteAddress bitAnd: 3.	longWord _ self longAt: byteAddress - lowBits.	shift _ (3 - lowBits) * 8.	longWord _ longWord - (longWord bitAnd: (16rFF bitShift: shift)) + (byte bitShift: shift).	self longAt: byteAddress put: longWord! !!InterpreterSimulatorMSB methodsFor: 'memory access' stamp: 'th 4/15/2000 16:05'!halfWordAt: byteAddress    "Return the half-word at byteAddress which must be even."	| lowBits |	lowBits _ byteAddress bitAnd: 2.	^((self longAt: byteAddress - lowBits)		bitShift: (lowBits - 2) * 8)		bitAnd: 16rFFFF! !!InterpreterSimulatorMSB methodsFor: 'memory access' stamp: 'th 4/15/2000 16:05'!halfWordAt: byteAddress put: halfWord	| longWord shift lowBits |	lowBits _ byteAddress bitAnd: 2.	longWord _ self longAt: byteAddress - lowBits.	shift _ lowBits * 8.	longWord _ longWord - (longWord bitAnd: (16rFFFF bitShift: shift)) +(halfWord bitShift: shift).	self longAt: byteAddress - lowBits put: longWord! !!InterpreterSimulatorMSB methodsFor: 'debug support' stamp: 'th 4/15/2000 16:05'!charsOfLong: long	^ (4 to: 1 by: -1) collect:		[:i | ((long digitAt: i) between: 14 and: 126)					ifTrue: [(long digitAt: i) asCharacter]					ifFalse: [$?]]! !!InterpreterSimulatorMSB class methodsFor: 'instance creation' stamp: 'th 4/15/2000 17:16'!new	^self basicNew! !