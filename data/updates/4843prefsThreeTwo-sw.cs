'From Squeak3.2gamma of 5 February 2002 [latest update: #4839] on 21 April 2002 at 7:50:40 am'!"Change Set:		prefsThreeTwo-swDate:			21 April 2002Author:			Scott WallacePreferences adjustments for 3.2"!!Preference methodsFor: 'value' stamp: 'sw 4/18/2002 12:15'!defaultValue: aValue	"Set the receiver's defaultValue"	defaultValue _ aValue.! !!Preferences class methodsFor: 'misc' stamp: 'sw 4/21/2002 05:48'!defaultValueTableForCurrentRelease	"Answer a table defining default values for all the preferences in the release.  Returns a list of (pref-symbol, boolean-symbol) pairs"	^  #(		(abbreviatedBrowserButtons false)		(allowCelesteTell true)		(alternativeBrowseIt false)		(alternativeScrollbarLook true)		(alternativeWindowLook true)		(annotationPanes false)		(areaFillsAreTolerant false)		(areaFillsAreVeryTolerant false)		(autoAccessors false)		(automaticFlapLayout true)		(automaticKeyGeneration false)		(automaticPlatformSettings true)		(automaticViewerPlacement true)		(balloonHelpEnabled true)		(balloonHelpInMessageLists false)		(batchPenTrails false)		(browseWithDragNDrop false)		(browseWithPrettyPrint false)		(browserShowsPackagePane false)		(canRecordWhilePlaying false)		(capitalizedReferences true)		(caseSensitiveFinds false)		(cautionBeforeClosing false)		(celesteHasStatusPane false)		(celesteShowsAttachmentsFlag false)		(changeSetVersionNumbers true)		(checkForSlips true)		(checkForUnsavedProjects true)		(classicNavigatorEnabled false)		(classicNewMorphMenu false)		(clickOnLabelToEdit false)		(cmdDotEnabled true)		(collapseWindowsInPlace false)		(colorWhenPrettyPrinting false)		(compactViewerFlaps false)		(compressFlashImages false)		(confirmFirstUseOfStyle true)		(conversionMethodsAtFileOut false)		(cpuWatcherEnabled false)		(debugHaloHandle true)		(debugPrintSpaceLog false)		(debugShowDamage false)		(decorateBrowserButtons true)		(diffsInChangeList true)		(diffsWithPrettyPrint false)		(dismissAllOnOptionClose false)		(dragNDropWithAnimation false)		(eToyFriendly false)		(eToyLoginEnabled false)		(enableLocalSave true)		(extractFlashInHighQuality true)		(extractFlashInHighestQuality false)		(fastDragWindowForMorphic true)		(fenceEnabled true)		(fullScreenLeavesDeskMargins true)		(haloTransitions false)		(hiddenScrollBars false)		(higherPerformance false)		(honorDesktopCmdKeys true)		(ignoreStyleIfOnlyBold true)		(inboardScrollbars true)		(includeSoundControlInNavigator false)		(infiniteUndo false)		(logDebuggerStackToFile true)		(magicHalos false)		(menuButtonInToolPane false)		(menuColorFromWorld false)		(menuKeyboardControl true)  		(modalColorPickers true)		(mouseOverForKeyboardFocus false)		(mouseOverHalos false)		(mvcProjectsAllowed true)		(navigatorOnLeftEdge true)		(noviceMode false)		(okToReinitializeFlaps true)		(optionalButtons true)		(passwordsOnPublish false)		(personalizedWorldMenu true)		(postscriptStoredAsEPS false)		(preserveTrash true)		(printAlternateSyntax false)		(projectViewsInWindows true)		(projectZoom true)		(projectsSentToDisk false)		(promptForUpdateServer true)		(propertySheetFromHalo false)		(readDocumentAtStartup true)		(restartAlsoProceeds false)		(reverseWindowStagger true)		(roundedMenuCorners true)		(roundedWindowCorners true)		(scrollBarsNarrow false)		(scrollBarsOnRight true)		(scrollBarsWithoutMenuButton false)		(securityChecksEnabled false)		(selectiveHalos false)		(showBoundsInHalo false)		(showDirectionForSketches false)		(showDirectionHandles false)		(showFlapsWhenPublishing false)		(showProjectNavigator false)		(showSecurityStatus true)		(showSharedFlaps true)		(signProjectFiles true)		(simpleMenus false)		(smartUpdating true)		(soundQuickStart false)		(soundStopWhenDone false)		(soundsEnabled true)		(startInUntrustedDirectory false)		(systemWindowEmbedOK false)		(thoroughSenders true)		(tileTranslucentDrag true)		(timeStampsInMenuTitles true)		(turnOffPowerManager false)		(twentyFourHourFileStamps true)		(twoSidedPoohTextures true)		(typeCheckingInTileScripting true)		(uniTilesClassic true)		(uniqueNamesInHalos false)		(universalTiles false)		(unlimitedPaintArea false)		(updateSavesFile false)		(useButtonProprtiesToFire false)		(useUndo true)		(viewersInFlaps true)		(warnAboutInsecureContent true)		(warnIfNoChangesFile true)		(warnIfNoSourcesFile true))"Preferences defaultValueTableForCurrentRelease do:	[:pair | (Preferences preferenceAt: pair first ifAbsent: [nil]) ifNotNilDo:			[:pref | pref defaultValue: (pair last == #true)]].Preferences chooseInitialSettings."! !!Preferences class methodsFor: 'misc' stamp: 'sw 4/21/2002 07:50'!makeAdjustmentsForThreeTwo	"Make some manual adjustments to preferences for the 3.2 Squeak release"	"Preferences makeAdjustmentsForThreeTwo"	(self preferenceAt: #optionalButtons) ifNotNilDo:		[:pref | pref categoryList: #(browsing)].	(self preferenceAt: #menuKeyboardControl) ifNotNilDo:		[:pref | pref categoryList: #(menus)].	(self preferenceAt: #readDocumentAtStartup) ifNotNilDo:		[:pref | pref categoryList: #(general)].	self expungePreferenceNamed: #emptyDragStartsASelection.	self defaultValueTableForCurrentRelease do:		[:pair | (self preferenceAt: pair first) ifNotNilDo:				[:pref | pref defaultValue: (pair last == #true)]].	(SystemVersion current version = 'Squeak3.2gamma') "we will spare the 3.3a user"		ifTrue:			[self savePersonalPreferences.	 		self chooseInitialSettings]! !!Preferences class methodsFor: 'personalization' stamp: 'sw 4/18/2002 18:02'!restorePersonalPreferences	"Restore all the user's saved personal preference settings"	| savedPrefs |	savedPrefs _ self parameterAt: #PersonalDictionaryOfPreferences ifAbsent: [^ self inform: 'There are no personal preferences saved in this image yet'].	savedPrefs associationsDo:		[:assoc | (self preferenceAt: assoc key ifAbsent: [nil]) ifNotNilDo:			[:pref | pref preferenceValue: assoc value preferenceValue]]! !!Preferences class methodsFor: 'window colors' stamp: 'sw 4/21/2002 02:55'!windowColorHelp	"Provide help for the window-color panel"	| helpString |	helpString _ 'The "Window Colors" panel lets you select colors for many kinds of standard Squeak windows.You can change your color preference for any particular tool by clicking on the color swatch and then selecting the desired color from the resulting color-picker.The three buttons entitled "Bright", "Pastel", and "White" let you revert to any of three different standard color schemes.  The choices you make in the Window Colors panel only affect the colors of new windows that you open.You can make other tools have their colors governed by this panel by simply implementing #windowColorSpecification on the class side of the model -- consult implementors of that method to see examples of how to do this.'.	 (StringHolder new contents: helpString)		openLabel: 'About Window Colors'	"Preferences windowColorHelp"! !!WindowColorSpec methodsFor: 'access' stamp: 'sw 4/21/2002 07:42'!printOn: aStream	"Print the receiver on a stream"	super printOn: aStream.	classSymbol printOn: aStream. 	aStream nextPutAll: ' bright: ', brightColor printString, ' pastel: ', pastelColor printString! !Preferences class removeSelector: #emptyDragStartsASelection!Preferences class removeSelector: #importMyPreferences!"Postscript:"Preferences makeAdjustmentsForThreeTwo.!