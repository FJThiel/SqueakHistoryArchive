'From Squeak3.8alpha of ''17 July 2004'' [latest update: #5976] on 19 July 2004 at 5:32:13 pm'!!CodeHolder methodsFor: 'annotation' stamp: 'sw 2/22/2001 10:02'!annotationSeparator	"Answer the separator to be used between annotations"	^ ' ¥ '! !!CodeHolder methodsFor: 'contents' stamp: 'sw 12/11/2000 10:42'!commentContents	"documentation for the selected method"	| poss aClass aSelector |	^ (poss _ (aClass _ self selectedClassOrMetaClass)						ifNil:							['----']						ifNotNil:							[(aSelector _ self selectedMessageName)								ifNil:									['---']								ifNotNil:									[(aClass precodeCommentOrInheritedCommentFor: aSelector)", String cr, String cr, self timeStamp""which however misses comments that are between the temps  declaration and the body of the method; those are picked up by ¥aClass commentOrInheritedCommentFor: aSelector¥ but that method will get false positives from comments *anywhere* in the method source"]])		isEmptyOrNil			ifTrue:				[aSelector					ifNotNil:						[((aClass methodHeaderFor: aSelector), 'Has no comment') asText makeSelectorBoldIn: aClass]					ifNil:						['Hamna']]			ifFalse:	[aSelector				ifNotNil: [((aClass methodHeaderFor: aSelector), '', poss) asText makeSelectorBoldIn: aClass]				ifNil: [poss]]! !!DataStream methodsFor: 'write and read'!beginReference: anObject    "WeÕre starting to read anObject. Remember it and its reference     position (if we care; ReferenceStream cares). Answer the     reference position."    ^ 0! !!DataStream methodsFor: 'write and read'!noteCurrentReference: typeID    "PRIVATE -- If we support references for type typeID, remember     the current byteStream position so we can add the next object to     the ÔobjectsÕ dictionary, and return true. Else return false.     This method is here to be overridden by ReferenceStream"    ^ false! !!DataStream methodsFor: 'write and read'!readFloatString	"PRIVATE -- Read the contents of a Float string.	 This is the slow way to read a Float--via its string repÕn.	 It's here for compatibility with old data files."	^ Float readFrom: (byteStream next: (byteStream nextNumber: 4))! !!DataStream methodsFor: 'write and read'!tryToPutReference: anObject typeID: typeID    "PRIVATE -- If we support references for type typeID, and if       anObject already appears in my output stream, then put a       reference to the place where anObject already appears. If we       support references for typeID but didnÕt already put anObject,       then associate the current stream position with anObject in       case one wants to nextPut: it again.     Return true after putting a reference; false if the object still       needs to be put.     For DataStream this is trivial. ReferenceStream overrides this."    ^ false! !!DataStream methodsFor: 'write and read'!writeFloatString: aFloat    "PRIVATE -- Write the contents of a Float string.     This is the slow way to write a Float--via its string repÕn."    self writeByteArray: (aFloat printString)! !!DataStream methodsFor: 'other'!errorWriteReference: anInteger    "PRIVATE -- Raise an error because this case of nextPut:Õs perform:     shouldn't be called. -- 11/15/92 jhm"    self error: 'This should never be called'! !!Debugger methodsFor: 'private' stamp: 'jm 5/1/1998 16:20'!lowSpaceChoices	"Return a notifier message string to be presented when space is running low."	^ 'Warning!! Squeak is almost out of memory!!Low space detection is now disabled. It will be restored when you close or proceed from this error notifier. Don''t panic, but do proceed with caution.Here are some suggestions:Ä If you suspect an infinite recursion (the same methods calling each other again and again), then close this debugger, and fix the problem.Ä If you want this computation to finish, then make more space available (read on) and choose "proceed" in this debugger. Here are some ways to make more space available...   > Close any windows that are not needed.   > Get rid of some large objects (e.g., images).   > Leave this window on the screen, choose "save as..." from the screen menu, quit, restart the Squeak VM with a larger memory allocation, then restart the image you just saved, and choose "proceed" in this window.Ä If you want to investigate further, choose "debug" in this window.  Do not use the debugger "fullStack" command unless you are certain that the stack is not very deep. (Trying to show the full stack will definitely use up all remaining memory if the low-space problem is caused by an infinite recursion!!).'! !!MethodFinder methodsFor: 'initialize' stamp: 'tk 4/27/1999 17:24'!test2: anArray	"look for bad association"	anArray do: [:sub |		sub class == Association ifTrue: [			(#('true' '$a' '2' 'false') includes: sub value printString) ifFalse: [				self error: 'bad assn'].			(#('3' '5.6' 'x' '''abcd''') includes: sub key printString) ifFalse: [				self error: 'bad assn'].	"			sub value class == Association ifTrue: [					self error: 'bad assn'].				(sub value isKindOf: Class) ifTrue: [					self error: 'class in assn'].				sub value class == Symbol ifTrue: [sub value asciiValue = 204 '$Ì' ifTrue: [					self error: 'Write into char']].				sub value == $Ì ifTrue: [					self error: 'Write into char']	"].		sub class == Array ifTrue: [			sub do: [:element | 				element class == String ifTrue: [element first asciiValue < 32 ifTrue: [						self error: 'store into string in data']].				element class == Association ifTrue: [					element value class == Association ifTrue: [						self error: 'bad assn']]]].		sub class == Date ifTrue: [sub year isInteger ifFalse: [				self error: 'stored into input date!!!!']].		sub class == Dictionary ifTrue: [				sub size > 0 ifTrue: [					self error: 'store into dictionary']].		sub class == OrderedCollection ifTrue: [				sub size > 4 ifTrue: [					self error: 'store into OC']].		].! !!Morph methodsFor: 'naming' stamp: 'dgd 2/22/2003 14:35'!setNameTo: aName 	| nameToUse nameString |	nameToUse := aName ifNotNil: 					[(nameString := aName asString) notEmpty ifTrue: [nameString] ifFalse: ['É']].	self setNamePropertyTo: nameToUse	"no Texts here!!"! !!AllScriptsTool methodsFor: 'toggles' stamp: 'dgd 9/19/2003 14:37'!openUpButton	"Answer a button whose action would be to open up the receiver or snap it back closed"	| aButton |	aButton _ SimpleButtonMorph new.	aButton		target: self topRendererOrSelf;		color: (Color r: 0.452 g: 0.839 b: 0.935);		label: '¼' font: Preferences standardButtonFont;		actionSelector: #toggleWhetherShowingOnlyTopControls;		setBalloonText: 'open or close the lower portion that shows individual scripts' translated.	^ aButton! !!BooklikeMorph methodsFor: 'page controls' stamp: 'dgd 9/19/2003 11:34'!fullControlSpecs	^ {		#spacer.		#variableSpacer.		{'-'.		#deletePage.				'Delete this page'}.		#spacer.		{'Ç'.		#firstPage.				'First page'}.		#spacer.		{'<'. 		#previousPage.			'Previous page'}.		#spacer.		{'¥'.		#invokeBookMenu. 		'Click here to get a menu of options for this book.'}.		#spacer.		{'>'.		#nextPage.				'Next page'}.		#spacer.		{ 'È'.		#lastPage.				'Final page'}.		#spacer.		{'+'.		#insertPage.				'Add a new page after this one'}.		#variableSpacer.		{'×'.		#fewerPageControls.	'Fewer controls'}}! !!BooklikeMorph methodsFor: 'page controls' stamp: 'dgd 9/19/2003 11:35'!shortControlSpecs^ {		#spacer.		#variableSpacer.		{'<'. 		#previousPage.			'Previous page' translated}.		#spacer.		{'¥'.		#invokeBookMenu. 		'Click here to get a menu of options for this book.' translated}.		#spacer.		{'>'.		#nextPage.				'Next page' translated}.		#spacer.		#variableSpacer.		{'×'.		#showMoreControls.		'More controls' translated}}! !!MoviePlayerMorph methodsFor: 'page controls' stamp: 'di 10/16/2000 13:20'!fullControlSpecs	^ #(				( '¥'		invokeBookMenu 'Invoke menu')			( '<--'		firstPage		'Go to first page')			( '<<'		playReverse		'Play backward')			( '<-' 		previousPage	'Back one frame')			( '| |' 		stopPlay		'Stop playback')			( '->'		nextPage		'Forward one frame')			( '>>'		playForward	'Play forward')			( '-->'		lastPage			'Go to final page')			( '<->'		scanBySlider	'Scan by slider'  'menu')		"Note extra spec 'menu' causes mousedown activation -- see makePageControlsFrom:"	)! !!PartsWindow methodsFor: 'initialization' stamp: 'dgd 2/14/2003 20:46'!initialize	"initialize the state of the receiver"	| aFont aForm |	super initialize.	""		openForEditing _ false.	aFont _ Preferences standardButtonFont.	self addMorph: (prevButton _ SimpleButtonMorph new borderWidth: 0;					 label: '<' font: aFont;					 color: Color transparent;					 setBalloonText: 'previous page';					 actionSelector: #previousPage;					 target: self;					 extent: 16 @ 16).	self addMorph: (nextButton _ SimpleButtonMorph new borderWidth: 0;					 label: '>' font: aFont;					 color: Color transparent;					 setBalloonText: 'next page';					 actionSelector: #nextPage;					 target: self;					 extent: 16 @ 16).	menuButton _ ThreePhaseButtonMorph new onImage: (aForm _ ScriptingSystem formAtKey: 'OfferToUnlock');								offImage: (ScriptingSystem formAtKey: 'OfferToLock');								pressedImage: (ScriptingSystem formAtKey: 'OfferToLock');				 extent: aForm extent;				 state: #on.	menuButton target: self;		 actionSelector: #toggleStatus;		 actWhen: #buttonUp.	menuButton setBalloonText: 'open for editing'.	self addMorph: menuButton.	" 	self addMorph: (menuButton _ SimpleButtonMorph new  	borderWidth: 0;  	label: '¥' font: aFont; color: Color transparent;  	actWhen: #buttonDown;  	actionSelector: #invokePartsWindowMenu; target: self; extent:  	16@16)."	self adjustBookControls! !!Player methodsFor: 'slot getters/setters' stamp: 'sw 2/17/2003 18:09'!getCharacterAtCursor	"Answer the value of the text cursor"	| aLoc aTextMorph aString |	aLoc _ (aTextMorph _ self costume renderedMorph) cursor.	aString _ aTextMorph text string.	^ (aString at: aLoc ifAbsent: ['¥']) asString! !!Player methodsFor: 'slot getters/setters' stamp: 'sw 2/17/2003 17:35'!setCharacterAtCursor: aCharOrString	"Insert the given character at my cursor position"	| aLoc aTextMorph aString charToUse |	aLoc _ (aTextMorph _ self costume renderedMorph) cursor.	charToUse _ (aString _ aCharOrString asString) size > 0		ifTrue:			[aString first]		ifFalse:			['¥'].	aTextMorph paragraph replaceFrom: aLoc to: aLoc with: charToUse asString asText displaying: true.	aTextMorph updateFromParagraph  ! !!PortugueseLexiconServer methodsFor: 'as yet unclassified' stamp: 'tk 6/30/2000 12:02'!parts	| divider |	"return the parts of speech this word can be.  Keep the streams for each"	parts _ OrderedCollection new.	partStreams _ OrderedCollection new.	rwStream ifNil: [self stream].	rwStream reset.	rwStream match: 'Palavra desconhecida pelo Dicionário.'.	rwStream atEnd ifFalse: [^ #()].	"not in dictionary"	rwStream reset.	rwStream match: (divider _ '<li>').	"stemming a complex word"	rwStream atEnd ifTrue: [rwStream reset.		rwStream match: (divider _ '<dd>')].	"base word in dict"	[rwStream atEnd] whileFalse: [		partStreams add: (ReadStream on: (rwStream upToAll: divider))].	partStreams do: [:pp |		parts add: (pp upToAll: '</b>')].	parts size = 0 ifTrue: [^ parts].	parts last = '' ifTrue: [parts removeLast.  partStreams removeLast].		"May want to remove all after </dl>"	^ parts ! !!StackMorph methodsFor: 'page controls' stamp: 'tk 11/5/2001 08:21'!fullControlSpecs	"Answer specifications for the long form of iconic stack/book controls"	^ #(		spacer		variableSpacer		('-'			deleteCard					'Delete this card')		spacer		( 'Ç'		goToFirstCardOfStack			'First card')		spacer		( '<' 		goToPreviousCardInStack		'Previous card')		spacer		('¥'			invokeBookMenu 			'Click here to get a menu of options for this stack.')		"spacer	('¦'			reshapeBackground  		'Reshape')	"		spacer		('¤'			showDesignationsOfObjects 	'Show designations')		spacer		('>'			goToNextCardInStack			'Next card')		spacer		( 'È'		goToLastCardOfStack			'Final card')		spacer		('+'			insertCard					'Add a new card after this one')		variableSpacer		('×'			fewerPageControls			'Fewer controls(if shift key pressed,deletes controls)'))! !!StackMorph methodsFor: 'page controls' stamp: 'sw 10/30/2000 10:09'!shortControlSpecs	"Answer specficiations for the shorter form of stack controls"	^ #(		spacer		variableSpacer		( '<'		goToPreviousCardInStack		'Previous card')		spacer		('¥'		invokeBookMenu 			'Click here to get a menu for this stack.')		spacer		('>'		goToNextCardInStack			'Next card')		variableSpacer		('×'	showMoreControls				'More controls(if shift key pressed,deletes controls)'))! !!String methodsFor: 'converting' stamp: 'sw 9/1/2000 10:39'!asCharacter	"Answer the receiver's first character, or '¥' if none.  Idiosyncratic, provisional."	^ self size > 0 ifTrue: [self first] ifFalse: [$¥]! !!String methodsFor: 'converting' stamp: 'tk 4/13/2002 09:13'!asUnHtml	"Strip out all Html stuff (commands in angle brackets <>) and convertthe characters &<> back to their real value.  Leave actual cr and tab asthey were in text."	| in out char rest did |	in _ ReadStream on: self.	out _ WriteStream on: (String new: self size).	[in atEnd] whileFalse:		[in peek = $<			ifTrue: [in unCommand] 	"Absorb <...><...>"			ifFalse: [(char _ in next) = $&						ifTrue: [rest _ in upTo: $;.								did _ out position.								rest = 'lt' ifTrue: [out nextPut: $<].								rest = 'gt' ifTrue: [out nextPut: $>].								rest = 'amp' ifTrue: [out nextPut: $&].								rest = 'deg' ifTrue: [out nextPut: $¡].								rest = 'quot' ifTrue: [out nextPut: $"].								did = out position ifTrue: [									self error: 'unknown encoded HTML char'.									"Please add it to this method"]]						ifFalse: [out nextPut: char]].		].	^ out contents! !!SyntaxError methodsFor: 'initialization' stamp: 'tk 5/6/1999 13:28'!setClass: aClass code: aString debugger: aDebugger doitFlag: flag	| types printables badChar |	class _ aClass.	debugger _ aDebugger.	selector _ aClass parserClass new parseSelector: aString.	types _ Scanner classPool at: #TypeTable.	"dictionary"	printables _ '!!@#$%&*-_=+<>{}?/\,¥£¢¤¦»¼ÐÑÒÔÓÕÉò¾òøùÀÇÈ`~`' asSet.	badChar _ aString detect: [:aChar | (types at: aChar asciiValue) == #xBinary and: [			(printables includes: aChar) not]] ifNone: [nil].	contents _ badChar 		ifNil: [aString]		ifNotNil: ['<<<This string contains a character (ascii value ', 			badChar asciiValue printString,			') that is not normally used in code>>> ', aString].	category ifNil: [category _ aClass organization categoryOfElement: selector].	category ifNil: [category _ ClassOrganizer default].	doitFlag _ flag! !!SyntaxMorph methodsFor: 'node to morph' stamp: 'RAA 2/26/2001 14:22'!alanBinaryPostRcvr: aNode key: key args: args	| nodeWithNilReceiver row |"==Repeat for collection [ collect ( from foo. blah blah foo blah) ]Repeat for 1 to 50Ê [ doÊ ( from i. blah blab i blahÊ )Ê ]=="	nodeWithNilReceiver _ aNode copy receiver: nil.	(row _ self addRow: #keyword2 on: nodeWithNilReceiver)		borderWidth: 1;		parseNode: (nodeWithNilReceiver as: MessageNode);		borderColor: row stdBorderColor.	row addToken: key asString		type: #binary		on: (SelectorNode new key: key asString code: nil "fill this in?").	args first asMorphicSyntaxIn: row.! !!SyntaxUpdatingStringMorph methodsFor: 'drawing' stamp: 'tk 1/31/2002 09:53'!drawOn: aCanvas	| tempForm strm where chars wid spaceWidth putLigature topOfLigature sizeOfLigature colorOfLigature dots charZero canvas f |	tempForm _ Form extent: self extent depth: aCanvas depth.	canvas _ tempForm getCanvas.	f _ self fontToUse.	spaceWidth _ f widthOf: Character space.	strm _ ReadStream on: contents.	charZero _ Character value: 0.	"a marker for center dot ¥"	where _ 0@0.	topOfLigature _ self height // 2 - 1.	sizeOfLigature _ (spaceWidth-2)@(spaceWidth-2).	colorOfLigature _ Color black alpha: 0.45	"veryLightGray".	dots _ OrderedCollection new.	putLigature _ [		dots add: ((where x + 1) @ topOfLigature extent: sizeOfLigature).		where _ where + (spaceWidth@0)].	strm peek = charZero ifTrue: [		strm next.		putLigature value].	[strm peek = charZero] whileTrue: [strm next].	[strm atEnd] whileFalse: [		chars _ strm upTo: charZero.		wid _ f widthOfString: chars.		canvas drawString: chars at: where.		where _ where + (wid@0).		strm atEnd ifFalse: [putLigature value.			[strm peek = charZero] whileTrue: [strm next]].	].	aCanvas paintImage: tempForm at: self topLeft.	dots do: [ :each |		aCanvas 			fillRectangle: (each translateBy: self topLeft) 			fillStyle: colorOfLigature.	].! !!SystemNavigation methodsFor: 'browse' stamp: 'sd 4/15/2003 22:46'!browseMethodsWhoseNamesContain: aString	"Launch a tool which shows all methods whose names contain the given string; case-insensitive.¥	1/16/1996 sw, at the dawn of Squeak: this was the classic implementation that provided the underpinning for the 'method names containing it' (cmd-shift-W) feature that has always been in Squeak -- the feature that later inspired the MethodFinder (aka SelectorBrowser).¥	sw 7/27/2001:	Switched to showing a MessageNames tool rather than a message-list browser, if in Morphic."	| aList |	Smalltalk isMorphic		ifFalse:			[aList _ Symbol selectorsContaining: aString.			aList size > 0 ifTrue:				[self browseAllImplementorsOfList: aList asSortedCollection title: 'Methods whose names contain ''', aString, '''']]		ifTrue:			[(MessageNames methodBrowserSearchingFor: aString) openInWorld]	! !!TextDiffBuilder methodsFor: 'creating patches' stamp: 'RAA 5/2/2001 23:35'!buildPatchSequence	"@@ TODO: Das funktioniert noch nicht fr n-m matches"	matches := TwoLevelDictionary new.	self buildReferenceMap.	runs := self processDiagonals.	self validateRuns: runs.	"There may be things which have just been moved around. Find those."	shifted := self detectShiftedRuns.	self processShiftedRuns.	"Now generate a patch sequence"	patchSequence := self generatePatchSequence.	^patchSequence! !!TextMorph methodsFor: 'accessing' stamp: 'dgd 2/21/2003 22:27'!getFirstCharacter	"obtain the first character from the receiver if it is empty, return a  	black dot"	| aString |	^ (aString _ text string) isEmpty		ifTrue: ['¥']		ifFalse: [aString first] ! !!TextMorph methodsFor: 'scripting access' stamp: 'sw 9/15/2000 06:14'!getAllButFirstCharacter	"Obtain all but the first character from the receiver; if that would be empty, return a black dot"	| aString |	^ (aString _ text string) size > 1 ifTrue: [aString copyFrom: 2 to: aString size] ifFalse: ['¥']! !!TextMorph methodsFor: 'scripting access' stamp: 'dgd 2/21/2003 22:31'!setAllButFirstCharacter: source 	"Set all but the first char of the receiver to the source"	| aChar chars |	aChar _ source asCharacter.	(chars _ self getCharacters) isEmpty		ifTrue: [self newContents: '¥' , source asString]		ifFalse: [chars first = aChar				ifFalse: [""					self						newContents: (String								streamContents: [:aStream | 									aStream nextPut: chars first.									aStream nextPutAll: source])]] ! !!EToyVocabulary methodsFor: 'language translations' stamp: 'sw 4/15/2003 23:45'!addGermanVocabulary	"Add a German etoy vocabulary"	self translateMethodInterfaceWordings: #((append:					'hnge an'				'Fgt ein Objekt in diesen Behlter ein')(prepend:					'hnge davor'				'Fgt ein Objekt in diesen Behlter ein')(beep:						'mache Gerusch'  				'Macht das angegebene Gerusch')(bounce:					'pralle ab'					'L§t das Objekt vom Rand seines Behlters abprallen und spielt das angegebene Gerusch, wenn es au§erhalb ist')(cameraPoint 				'Kamerapunkt'				'Der Kamerapunkt des Objektes') (clear 						'lsche Graph'						'Lscht den momentanen Graphen')(clearOwnersPenTrails		'lsche Stiftspuren im Eigner'	'Lscht alle Stiftspuren im Eigner')(clearTurtleTrails 			'lsche Stiftspuren' 		'Lscht all Stiftspuren im Objekt')(color:sees: 					'Farbe sieht'			'berprft, ob die angebene Farbe des Objektes die Testfarbe sehen kann')(deleteCard 					'lsche Karte'				'Lscht diese Karte aus dem Stapel')(doMenuItem: 				'fhre Menpunkt aus'	'Fhrt den angebenen Menpunkt aus')(emptyScript 				'leeres Skript'				'Ein leeres Skript')(fire						'feuer'						'Fhrt alle zugehrigen Aktionen dieses Schalters aus')(firstPage 					'gehe zur ersten Seite'		'Geht zur ersten Seite')(followPath					'folge Pfad'					'Folge dem definierten Pfad')(forward: 					'gehe vorwrts um'		'Bewegt das Objekt vorwrts in seiner momentanen Richtung')(goToFirstCardInBackground	'gehe zur ersten Karte im Hintergund'	'Geht zur ersten Karte im momentanen Hintergrund')(goToFirstCardOfStack		'gehe zur ersten Karte im Stapel'	'Geht zur ersten Karte im Stapel')(goToLastCardInBackground	'gehe zur letzten Karte im Hintergund'	'Geht zur letzten Karte im momentanen Hintergrund')(goToLastCardOfStack		'gehe zur letzten Karte im Stapel'		'Geht zur letzten Karte im Stapel')(goToNextCardInStack		'gehe zur nchsten Karte im Stapel'		'Geht zur nchsten Karte im momentanen Hintergrund')(goToPreviousCardInStack	'gehe zur vorherigen Karte im Stapel'	'Geht zur vorherigen Karte im momentanen Hintergrund')(goToRightOf:				'plaziere rechts von'		'Setzt das Objekt rechts neben ein anderes')(goto:						'gehe zur Seite'		'Geht zur angegebenen Seite')(hide					'verstecke Dich'					'Versteckt das Objekt')(initiatePainting			'beginne neue Zeichnung'		'Beginnt eine neue Zeichnung')(insertCard				'erzeuge Karte'				'Erzeugt eine neue Karte und fgt sie ein.')(lastPage				'gehe zur letzten Seite'			'Geht zur letzten Seite')(liftAllPens				'nimm alle Stifte hoch'			'Nimmt alle Stifte hoch, die sich im Inneren befinden')(loadSineWave			'lade Sinuswelle'			'Ldt eine Sinuswelle als momentanen Graph')(loadSound:				'lade Gerusch'					'Ldt das angegebene Gerusch als momentanen Graph')(lowerAllPens			'setze alle Stifte ab'			'Setzt alle Stifte ab, die sich im Inneren befinden')(makeNewDrawingIn:	'beginne neue Zeichnung in'	'Beginnt eine neue Zeichnung im angegebenen Objekt')(moveToward:			'gehe in Richtung '				'Bewegt das Objekt in Richtung eines anderen Objektes')(nextPage				'gehe zur nchsten Seite'		'Geht zur nchsten Seite')(pauseScript:			'stoppe Skript'					'Hlt ein Skript an')(play					'spiele Gerausch ab'				'Spielt den momentanen Graphen als Gerusch ab')(previousPage			'gehe zur vorherigen Seite'	'Geht zur vorherigen Seite')(removeAll				'entferne alles'				'Entfernt und lscht alle Elemente')(reverse				'umdrehen'						'Dreht den Inhalt des Graphen um')(roundUpStrays			'hole zurck'					'Holt alle Objekte zurck, falls sie sich irgendwo verstecken')(seesColor:				'sieht die Farbe'					'berprft, ob das Objekt die angegebene Farbe sieht')(show					'zeige Dich'						'Zeigt das Objekt')(shuffleContents			'mische Inhalt'					'Mischt alle Objekte zufllig')(stampAndErase			'stanze und lsche Dich'		'Fgt das Abbild des Objektes den Stiftspurent hinzu und lscht es anschlie§end.')(startScript:				'starte Skript'					'Beginnt die wiederholte Ausfhrung eines Skriptes')(stopScript:				'stoppe Script'				'Beendet die wiederholte Ausfhrung eines Skriptes')(tellAllSiblings:			'sage den Geschwistern'		'Sendet eine Nachricht zu allen Geschwistern des Objektes')(touchesA:				'berhrt'					'berprft, ob ein Objekt des angegebenen Typs berhrt wird')(turn:					'drehe Dich um'				'ndert die Richtung des Objektes um den angegebenen Winkel')(unhideHiddenObjects	'zeige versteckte Objekte' 		'Zeigt alle versteckten Objekte an')(wearCostumeOf: 		'trage Kostm von'				'Trgt das Kostm eines anderen Objektes')(wrap					'wickel Dich rum'				'Wickelt das Objekt um den Rand seines Behlters')(getActWhen 			'Ausfhrungsstatus'	'Bestimmt, wann das Skript ausgefhrt wird')(getAllButFirstCharacter	'Alle Buchstaben au§er dem Ersten' 'Enthlt alle Buchstaben au§er dem Ersten')(getAmount				'Betrag'					'Der Betrag der Abweichung vom Zentrum')(getAngle				'Winkel'					'Der Winkel der Abweichung vom Zentrum')(getBorderColor			'Randfarbe'		'Die Farbe des Randes')(getBorderWidth			'Randbreite'		'Die Breite des Randes')(getBottom 				'untere Kante'					'Die untere Kante des Objektes')(getBrightnessUnder		'Helligkeit darunter'			'Die Helligkeit unter dem Zentrum des Objektes')(getCharacters			'Buchstaben'					'Die Buchstaben des Inhalts')(getColor				'Farbe' 					'Die Farbe des Objektes')(getColorUnder 			'Farbe darunter'			'Die Farbe unter dem Zentrum des Objektes')(getConePosition			'Membranposition'			'Die Position der Membran des Lautsprechers')(getCursor				'Zeiger'					'Der momentane Zeigerindex')(getDescending			'Absteigend'				'Bestimmt, ob der kleinste Wert zuerst gezeigt werden soll')(getDistance				'Distanz'				'Die Distanz zum Ursprung des Behlters')(getFirstCharacter		'Erster Buchstabe'		'Der erste Buchstabe des Inhalts')(getFirstElement			'Erstes Element'			'Das erste Element des Inhalts')(getFogColor				'Nebelfarbe'				'Die Farbe des Nebels')(getFogDensity			'Nebeldichte'			'Die Dichte des Nebels')(getFogRangeEnd		'Nebelanfang'			'Die Anfangsdistanz des Nebels')(getFogRangeStart		'Nebelende'				'Die Enddistanz des Nebels')(getFogType				'Nebeltyp'				'Der Typ des Nebels')(getGraphic				'Bild'					'Das Bild des Objektes')(getGraphicAtCursor		'Bild am Zeiger'			'Das Bild des Objektes am Zeiger')(getHeading				'Richtung'				'Die Richtung in die das Objekt weist')(getHeight				'Hhe'					'Die Hhe des Objektes')(getHolder				'Behlter'				'Der Behlter dieses Objekt')(getIndexInOwner		'Eignerindex' 			'Der Index des Objektes in seinem Eigner')"@@@: Folgendes sollte vermutlich die Hand und nicht die Maus referenzieren :@@@"(getIsUnderMouse		'ist Maus darber'		'berprft, ob die Maus ber dem Objekt ist')"@@@: Sollte vielleicht 'Griff' heissen, aber ich mag Knubbel :-) :@@@"(getKnobColor			'Knubbelfarbe'			'Die Farbe des Knubbels')(getLabel				'Beschriftung'			'Die Beschriftung des Objektes')(getLastValue			'letzter Wert'			'Der letzte Eingabewert')(getLeft					'linke Kante'			'Die linke Kante des Objektes')(getLeftRight			'links-rechts'			'Die horizontale Abweichung vom Zentrum')(getLuminanceUnder	'Leuchtkraft darunter'	'Die Leuchtkraft unter dem Objekt')(getMaxVal				'Maximalwert'			'Der maximale Wert des Reglers')(getMinVal				'Minimalwert'			'Der minimale Wert des Reglers')(getMouseX				'Maus X-Position'		'Die X Koordinate der Mausposition')(getMouseY				'Maus Y-Position'		'Die Y Koordinate der Mausposition')(getNewClone			'kopiere Dich'			'Erzeugt eine Kopie des Objektes')(getNumberAtCursor		'Zahl am Zeiger'			'Die Zahl am Zeiger')(getNumericValue		'Reglerwert'				'Der momentane Wert des Reglers')(getObtrudes				'ragt hinaus'			'berprft, ob das Objekt aus seinem Eigner herausragt')(getPenColor				'Stiftfarbe'				'Die Farbe des Stiftes')(getPenDown			'Stift unten'				'Der Status des Stiftes')(getPenSize				'Stiftgr§e'			'Der Durchmesser des Stiftes')(getRight				'rechte Kante'			'Die rechte Kante des Objektes')(getRoundedCorners		'runde Ecken'			'Bestimmt, ob Ecken abgerundet werden')(getSampleAtCursor		'Stichprobe'				'Eine Stichprobe des Wertes an der momentanen Zeigerposition')(getSaturationUnder		'Sttigung darunter'	'Die Sttigung der Farbe unter dem Objekt')(getScaleFactor			'Skalierungsfaktor'		'Der Skalierungsfaktor des Objektes')(getTheta				'Theta'					'Der ''Zentrums-Ursprungs-Rechts'' Winkel (huh?)')(getTop					'obere Kante'			'Die obere Kante des Objekts')(getTruncate			'Abrunden'				'Bestimmt, ob nur ganze Zahlen benutzt werden')(getUpDown				'hoch-runter'			'Die vertikale Abweichung vom Zentrum')(getValueAtCursor		'Objekt am Zeiger'		'Das Objekt an der momentanen Zeigerposition')(getViewingByIcon 		'Symboldarstellung'		'Bestimmt, ob Objekte symbolisch oder normal dargestellt werden')(getX					'x'						'Die X Koordinate des Objektes')(getY					'y'						'Die Y Koordinate des Objektes')(getWidth				'Breite'					'Die Breite des Objektes')) language: #Deutsch.	self translateCategories: #((basic					Einfach					'Standardsicht')(#'book navigation'		#'Buchnavigation'		'Navigation in Bchern')(button					Schalter					'Das Objekt als Schalter')(collections				Behlter				'Das Objekt als Behlter')(fog					Nebel					'3D Nebel Eigenschaften')(geometry				Geometrie				'Zur Geometrie des Objektes')(#'color & border'		#'Farbe & Rand'			'Zum Thema Farben und Rnder')(graphics				Graphik					'Graphische Eigenschaften')(variables				Variablen				'Variablen des Objektes')(joystick				Joystick					'Das Objekt als Joystick')(miscellaneous			Verschiedenes			'Alles was woanders nicht hinpa§t')(motion					Bewegung				'Bewegungseigenschaften')(paintbox				Malpalette				'Die Zeichenpalette')(#'pen trails'			Stiftspuren				'Alles zum Thema Spuren hinterlassen')(#'pen use'				Stifte					'Verwendung von Stiften')(playfield				Spielfeld				'ja ich wei§ auch nicht...')(sampling				Messen					'Messungen von Werten')(scripts					Skripte					'Alle Deine Skripte')(slider					Regler					'Das Objekt als Regler')(speaker				Lautsprecher			'Das Objekt als Lautsprecher')(#'stack navigation'		Stapelnavigation		'Navigation in Stapeln')(storyboard				Storyboard				'Spter mal...')(tests					Tests					'Verschiedene Tests')(text					Text						'Das Objekt als Text')(viewing				Betrachtung				'Wie man''s so sieht')(vector					Vektor					'Das Objekt als Vektor') ) language: #Deutsch! !!EToyVocabulary methodsFor: 'language translations' stamp: 'ls 3/20/2004 14:37'!addNorwegianVocabulary	"Add a Norwegian vocabulary. "	self translateMethodInterfaceWordings: #((append: 'legg til' 'Legg til objektet i mitt innehold')(beep: 'spill lyd' 'Spill denne lyden')(bounce: 'sprett' 'sprett bort fra kanten om den treffes')(cameraPoint 'kameraposisjon' 'kamerans posisjon')(clear 'rens' 'Rens bort bildet')(clearOwnersPenTrails 'rens alla pennestr¿k' 'Rens bort alle pennestr¿k i pennens lekeplass')(clearTurtleTrails 'rens skilpaddestr¿k' 'Rens bort alle skilpaddestr¿k p innsiden')(color:sees: 'farge syns' 'Om valgte farge ser angitt farge')(deleteCard 'Ta bort kort' 'Ta bort dette kortet')(doMenuItem: 'utf¿r menyvalg' 'utf¿r menyvalget')(doScript: 'kj¿r' 'kj¿r skriptet en gang, ved nesta tick')(emptyScript 'tomt skript' 'et tomt skript')(fire 'starta' 'starter alle knapphendelser for dette objektet')(firstPage 'f¿rsta siden' 'g till f¿rsta siden')(followPath 'f¿lg vei' 'f¿lg denne veien')(forward: 'framover med' 'Flytter objektet framover i objektets nv¾rende rettning')(getActWhen 'kj¿r nr' 'Nr skriptet skal kj¿res')(getAllButFirstCharacter 'alle uten om f¿rsta' 'Alle mine tegn uten om det f¿rste')(getAmount 'st¿rrelse' 'Forflyttningens st¿rrelse')(getAngle 'vinkel' 'Vinkelforflyttningens st¿rrelse')(getBorderColor 'kantfarge' 'Fargen p objektets kant')(getBorderWidth 'kantbredde' 'Bredden p objektets kant')(getBottom 'bunn' 'Den nederste kanten')(getBrightnessUnder 'kontrast' 'Kontrasten under objektets mittpunkt')(getCharacters 'tegn' 'Tegnet i mitt innehold')(getColor 'farge' 'Objektets farge')(getColorUnder 'farge under' 'Fargen under objektets mittpunkt')(getConePosition 'h¿ytalerposition' 'h¿ytalerens position')(getCursor 'mark¿r' 'Mark¿rens nv¾rende position, ombytt til f¿rste om det er mulig')(getDescending 'fallende' 'Sier om den minste verdien er ¿verst / til venstre (fallende = false) eller nederst / til h¿yre (fallande = true)')(getDistance 'avstand' 'Lengden p vektoren mellom utgangspunktet og objektets posisjon')(getFirstCharacter 'f¿rste tegnet' 'Det f¿rste tegnet i mitt innehold')(getFirstElement 'f¿rsta elementet' 'Det f¿rsta objektet i mitt innehold')(getFogColor 'tkens farge' 'Fargen p tken som benyttes')(getFogDensity 'tkens tetthet' 'Tettheten p tken som benyttes')(getFogRangeEnd 'tkens intervalslutt' 'Intervalets slutt p tken som benyttes')(getFogRangeStart 'tkens intervalstart' 'Intervalets start p tken som benyttes')(getFogType 'tkens typ' 'Typen av tke som benyttes')(getGraphic 'bilde' 'Bildet som b¾res av objektet')(getGraphicAtCursor 'bilde ved mark¿r' 'Bildet som b¾res av objektet ved mark¿ren')(getHeading 'rettning' 'I vilken rettning objektet peker. 0 er rett opp')(getHeight 'h¿yde' 'H¿yden')(getHolder 'beholder' 'objektets beholder')(getIndexInOwner 'elementnummer' 'mitt indeksnummer i min beholdere')(getIsUnderMouse 'er under muspekeren' 'om objektet befinner seg under muspekeren')(getKnobColor 'hndtakets farge' 'Hndtakets farge')(getLabel 'etikett' 'Teksten p knappen')(getLastValue 'seneste verdi' 'Seneste beregnede verdi')(getLeft 'venstre' 'Den venstre kanten')(getLeftRight 'venstre/h¿yre' 'Horisontel forflyttning')(getLuminanceUnder 'lysstyrke under' 'Lysstyrken under objektets mittpunkt')(getMaxVal 'maxverdi' 'Tallet som representerer nr hndtaket er lengst til h¿yre eller lengst ned, den st¿rste verdien som hndtaket gir.')(getMinVal 'minverdi' 'Tallet som representerer nr hndtaket er lengst til venstre eller h¿yest opp, den minste verdien som hndtaket gir.')(getMouseX 'mus x' 'Muspekerens x-koordinat')(getMouseY 'mus y' 'Muspekerens y-koordinat')(getNewClone 'kopia' 'returnerer en kopi av det her objektet')(getNumberAtCursor 'tall ved mark¿r' 'tallet ved mark¿ren')(getNumericValue 'numeriskt verdi' 'Et tall som representerer den aktuelle posisjonen av hndtaket.')(getObtrudes 'stikker ut' 'om objektet stikker ut over beholderens kant')(getPenColor 'pennefarge' 'fargen p blekket i pennen')(getPenDown 'pen nedtrykt' 'om pennen er nedtrykt n')(getPenSize 'pennens bredde' 'pennens bredde')(getRight 'h¿yre' 'Den h¿yre kanten')(getRoundedCorners 'rundede hj¿rner' 'om hj¿rnene skal v¾re runde')(getSampleAtCursor 'verdi ved mark¿r' 'Nv¾rende verdi ved mark¿rens posisjon')(getSaturationUnder 'mettning under' 'Fargemettning under objektets mittpunkt')(getScaleFactor 'skala' 'Objektets skala')(getTheta 'theta' 'Vinkelen mellom den positive x-axelen og vektoren mellom utgangspunktet og objektets posisjon')(getTop 'toppen' 'Den ¿verste kanten')(getTruncate 'heltall' 'Om bare heltall anvendes som verdi, om brktal ikke er tillatt.')(getUpDown 'opp/ner' 'Vertikal forflyttning')(getValueAtCursor 'spiller ved mark¿r' 'objektet ved mark¿ren')(getViewingByIcon 'normalt synssett' 'Synsettet p inneholdet er normal')(getWidth 'bredd' 'Bredden')(getX 'x' 'X-koordinaten')(getY 'y' 'Y-koordinaten')(goToFirstCardInBackground 'g til f¿rste i bakgrunnen' 'G til det f¿rste kortet i den nv¾rende bakgrunnen')(goToFirstCardOfStack 'g til f¿rste kortet i stacken' 'G til f¿rste korten i hele stacken')(goToLastCardInBackground 'g til siste kortet i bakgrunnen' 'G til det siste kortet i den nv¾rende bakgrunnen')(goToLastCardOfStack 'g til siste kortet i stacken' 'G til det siste kortet i hele stacken')(goToNextCardInStack 'g till neste kort' 'G til neste kort i stacken')(goToPreviousCardInStack 'g til forrige kort' 'G til det forrige kortet i stacken')(goToRightOf: 'plassere etter' 'plassere dette objekt til h¿yre om et annet')(goto: 'g til' 'g til angitt side')(hide 'gjem' 'gj¿r objektet usynligt')(initiatePainting 'begynn malning' 'Begynn malning av et nytt objekt i den vanlige lekeplatsen.')(insertCard 'legg inn kort' 'Skap et nytt kort')(lastPage 'siste siden' 'g til siste siden')(liftAllPens 'l¿ft alle penner' 'L¿ft pennene p mitt inneholds alle objekt.')(loadSineWave 'pne sinusb¿lge' 'pne en sinusb¿lge som nv¾rende graf')(loadSound: 'pne lyd' 'pne angivet lyd som nv¾rende lyd')(lowerAllPens 'senk alle penner' 'Senk pennene p mitt inneholds alle objekt.')(makeNewDrawingIn: 'bgynn malning i' 'lag en ny malning i angiven lekeplats')(moveToward: 'flytte mot' 'flytte mot angivet objekt')(nextPage 'nesta side' 'g til neste side')(pauseAll: 'pause alle' 'pause skriptet i objektet och alle dets slekninger')(pauseScript: 'pause skript' 'pause skriptet')(play 'spela' 'Spill nv¾rende graf som en lyd')(previousPage 'foregende side' 'g til foregende side')(removeAll 'ta bort alle' 'Ta bort alle element fra lekeplatsen')(reverse 'reversere' 'Reversere grafen')(roundUpStrays 'samle inn bortsprungne' 'Samle inn alle deler utenfor beholderen s at de blir synlige igen.')(seesColor: 'er over farge' 'om noen del av objektet er over den angitte fargen')(show 'vise' 'gj¿r objektet synlig')(shuffleContents 'blande innehold' 'Blande lekeplatsens innehold')(stampAndErase 'stemple og forsvinn' 'legg til mitt bilde som tegnestrek och forsvinn')(startAll: 'start alle' 'start skriptet tickende i objektet och alla dets slekninger.')(startScript: 'start skript' 'start skriptet tickende')(stopAll: 'stopp alle' 'gj¿r skriptet "normalt" i objektet och alla dets slektninger')(stopScript: 'stopp skript' 'gj¿r skriptet "normalt" i objektet')(tellAllSiblings: 'si til slekninger' 'send et meddelende til alla slekninger')(touchesA: 'rrer' 'Om jeg rrer noe som ser ut som...')(turn: 'sving med' 'Endre objektets retning med angitt mengde')(unhideHiddenObjects 'vise alle gjemte objekt' 'Gj¿r alle gjemte objekt synlige.')(wearCostumeOf: 'se ut som' 'b¾r samme drakt som...')(wrap 'fold over kant' 'fold over kanten om det er passende')) language: #Norsk.	self translateCategories: #((basic					'element¾re'				'et antall viktige saker')(#'book navigation'		'boknavigering'			'saker som har med b¿ker och stackar  gj¿re')(button					'knapp'					'objektet betraktet som en knapp man kan trykke p')(collections				'samlinger'				'objektet betraktet som en samling av andre objekt')(fog					'tke'					'3-dimensionell tke')(geometry				'geometri' 				'verdier og koordinater')(#'color & border'		'farger & kanter'		'saker som har med farger og kanter p objekt  gj¿re')(graphics				'grafikk'					'objektet betraktat som et bilde')(variables				'instansvariabler'		'instansvariabler tilh¿rende dette objektet')(joystick				'joystick	'				'objektet som en joystick')(miscellaneous			'diverse' 				'diverse kommander')(motion					'r¿relse' 				'saker som har med forflyttning och vridning  gj¿re')(paintbox				'maleskrin'				'malepaletten')(#'pen trails'			'pennestr¿k'				'saker som har med str¿k som pennen tegner  gj¿re')(#'pen use'				'pen bruk' 		'bruk av et objekts pen')(playfield				'lekeplats'					'objektet som beholdere for andre synlige objekt')(sampling				'pr¿vetagning'			'pr¿vetagning')(scripts					'skript'					'metoder lagt til dette objektet')(slider					'hndtak'			'nyttige funksjoner for hndtak')(speaker				'h¿ytaler'				'objektet sett som en h¿ytaler')(#'stack navigation'		'stacknavigering'		'navigering innen en stack')(storyboard				'storyboard'				'storyboard')(tests					'tester'					'for  lage ja/nei tester i script')(text					'tekst'					'Objektet som tekst')(viewing				'seer'					'Saker som har med olika seeren  gj¿re')(vector					'vektor'					'Objektet som en vektor') ) language: #Norsk.	self addToTranslationTableFrom: #((:						'_'						'gi verdi')(Incr:					'¿ke med'			'¿ka verdi med')(Decr:					'minske med'			'minske verdi med')(Mult:					'multiplicera med'			'multiplisere verdi med')) language: #Norsk! !!EToyVocabulary methodsFor: 'language translations' stamp: 'sw 4/15/2003 23:46'!addSpanishVocabulary   "'Espaol' translation by Diego Gmez Deck and Germn Morales"   "        "   self translateMethodInterfaceWordings: #((append:                   'agregar al final'                    'Agregar el objeto a mi contenido, ponindolo despus de todos los otros objetos actualmente contenidos por mi')(beep:                     'sonar'                               'Reproducir el sonido especificado')(bounce:                   'rebotar'                             'Rebotar si toca el borde')(cameraPoint               'punto de la cmara'                  'El punto de la cmara')(clear                     'limpiar'                             'Limpia el grfico del contenido actual')(clearOwnersPenTrails      'limpiar todos los rastros del lpiz'       'Limpiar todos los rastros del lpiz en mi contenedor')(clearTurtleTrails         'limpiar los rastros del lpiz'       'Limpiar los rastros del lpiz en el interior')(color:sees:               'color ve'                            'Si el color dado ve el otro color')(deleteCard                'borrar tarjeta'                      'Borrar la tarjeta actual')(doMenuItem:               'realizar la opcin del men'         'Realizar la opcin del men')(doScript:                 'realizar'                            'Realizar el guin dado una vez, en el prximo instante')(emptyScript               'guin vaco'                         'Un guin vaco')(fire                      'activar'                             'Activar todas y cada una de las acciones del botn de este objeto')(firstPage                 'primera pgina'                      'Ir a la primera pgina')(followPath                'seguir el camino'                    'Seguir el camino')(forward:                  'avanzar'                             'Mover el objeto hacia adelante en la direccin del objeto')(getActWhen                'activar cuando'                      'Cuando se debe activar el guin')(getAllButFirstCharacter   'todos excepto el primero'            'Todos mis caracteres excepto el primero')(getAmount                 'desplazamiento'                      'La cantidad de desplazamiento')(getAngle                  'ngulo'                              'El desplazamiento angular')(getBorderColor            'color del borde'                     'El color del borde del objeto')(getBorderWidth            'ancho del borde'                     'El ancho del borde del objeto')(getBottom                 'abajo'                               'El borde de abajo')(getBrightnessUnder        'brillo debajo'                       'El brillo debajo del centro del objeto')(getCharacters             'caracteres'                          'Los caracteres en mi contenido')(getColor                  'color'                               'El color del objeto')(getColorUnder             'color debajo'                        'El color debajo del centro del objeto')(getConePosition           'posicin del cono'                   'La posicin del cono del altavoz')(getCursor                 'cursor'                              'La posicin actual del cursor, trasladado al principio si es apropiado')(getDescending             'descendiente'                        'Verdadero si el menor valor est arriba o a la izquierda, falso si est abajo o a la derecha')(getDistance               'distancia'                           'El largo del vector que conecta el origen a la posicin del objeto')(getFirstCharacter         'primer caracter'                     'El primer caracter de mi contenido')(getFirstElement           'primer elemento'                     'El primer objeto de mi contenido')(getFogColor               'color de la niebla'                  'El color de la niebla que se est aplicando')(getFogDensity             'intensidad de la niebla'             'La intensidad de la niebla que se est aplicando')(getFogRangeEnd            'niebla hasta'                        'Hasta donde se aplica la niebla')(getFogRangeStart          'niebla desde'                        'Desde donde se aplica la niebla')(getFogType                'tipo de niebla'                      'El tipo de la niebla que se est aplicando')(getGraphic                'grfico'                             'El grfico usado actualmente')(getGraphicAtCursor        'grfico en el cursor'                'El grfico usado por el objeto en el cursor')(getHeading                'direccin'                           'En que direccin est mirando el objeto. Cero significa hacia arriba')(getHeight                 'altura'                              'La altura del objeto')(getHolder                 'contenedor'                          'El contenedor del objeto')(getIndexInOwner           'nmero de elemento'                     'Mi nmero dentro de mi contenedor')(getIsUnderMouse           'debajo del ratn'                    'Si el objeto est debajo de la posicin actual del ratn')(getKnobColor              'color de la perilla'                 'El color del deslizador')(getLabel                  'etiqueta'                            'La etiqueta del botn')(getLastValue              'ltimo valor'                        'El ltimo valor obtenido')(getLeft                   'izquierda'                           'El borde de la izquierda')(getLeftRight              'desplazamiento izquierda - derecha'  'El desplazamiento horizontal')(getLuminanceUnder         'luminiscencia debajo'                'La luminiscencia debajo del centro del objeto')(getMaxVal                 'mximo valor'                        'El nmero representado cuando la perilla est a la derecha o abajo del deslizador. Este es el mximo valor devuelto por el deslizador')(getMinVal                 'mnimo valor'                        'El nmero representado cuando la perilla est a la izquierda o arriba  del deslizador. Este es el mnimo valor devuelto por el deslizador')(getMouseX                 'x del ratn'                         'La coordenada X del puntero del ratn')(getMouseY                 'y del ratn'                         'La coordenada Y del puntero del ratn')(getNewClone               'copiar'                              'Devuelve una copia de este objeto')(getNumberAtCursor         'nmero en el cursor'                 'El nmero en el cursor')(getNumericValue           'valor numrico'                      'Un nmero representando la posicin actual de la perilla')(getObtrudes               'sobresale'                         'Si el objeto sobresale de los bordes de su contenedor')(getPenColor               'color del lpiz'                     'El color del lpiz')(getPenDown                'lpiz bajo'                          'Si el lpiz est bajo')(getPenSize                'tamao del lpiz'                    'El ancho del lpiz')(getRight                  'derecha'                             'El borde derecho')(getRoundedCorners         'esquinas redondeadas'                'Si las esquinas deberan ser redondeadas')(getSampleAtCursor         'muestra en el cursor'                'El valor de la muestra en la posicin actual del cursor')(getSaturationUnder        'saturacin debajo'                   'La saturacin debajo del centro del objeto')(getScaleFactor            'factor de escala'                    'El factor de escala por el cual el objeto es magnificado')(getTheta                  'theta'                               'El ngulo entre el eje X positivo y el vector que conecta el origen a la posicin del objeto')(getTop                    'arriba'                              'El borde de arriba')(getTruncate               'truncado'                            'Si es verdadero, solo nmeros son usados como valores; si es falso, valores fraccionarios son permitidos')(getUpDown                 'desplazamiento arriba - abajo'       'El desplazamiento vertical')(getValueAtCursor          'objeto en el cursor'                 'El objeto actualmente en el cursor')(getViewingByIcon          'vista normal'                        'Si los contenidos son vistos normalmente')(getWidth                  'ancho'                               'El ancho')(getX                      'x'                                   'La coordenada X')(getY                      'y'                                   'La coordenada Y')(goToFirstCardInBackground 'ir a la primera tarjeta del fondo'   'Ir a la primera tarjeta del fondo actual')(goToFirstCardOfStack      'ir a la primera tarjeta de la pila'  'Ir a la primera tarjeta de la pila completa')(goToLastCardInBackground  'ir a la ltima tarjeta del fondo'    'Ir a la ltima tarjeta del fondo actual')(goToLastCardOfStack       'ir a la ltima tarjeta de la pila'   'Ir a la ltima tarjeta de la pila completa')(goToNextCardInStack       'ir a la prxima tarjeta de la pila'  'Ir a la prxima tarjeta')(goToPreviousCardInStack   'ir a la anterior tarjeta de la pila' 'Ir a la anterior tarjeta')(goToRightOf:              'alinear despus de'                     'Ubicar este objeto a la derecha de otro')(goto:                     'ir a'                                'Ir a la pgina dada')(hide                      'ocultar'                             'Hacer invisible al objeto')(include:                  'incluir'                             'Agregar el objeto a mi contenido')(initiatePainting          'iniciar pintado'                     'Iniciar el pintado de nuevos objetos en el campo de juegos estandar')(insertCard                'insertar nueva tarjeta'              'Insertar una nueva tarjeta')(lastPage                  'ltima pgina'                       'Ir a la ltima pgina')(liftAllPens               'levantar todos los lpices'          'Levantar los lpices de todos los objetos en mi interior')(loadSineWave              'cargar forma de onda senoidal'       'Cargar una forma de onda senoidal como el grfico actual')(loadSound:                'cargar sonido'                       'Cargar el sonido especificado dentro del grfico actual')(lowerAllPens              'bajar todos los lpices'             'Bajar los lpices de todos los objetos en mi interior')(makeNewDrawingIn:         'empezar pintado en'                  'Crear un nuevo dibujo en el campo de juegos especificado')(moveToward:               'mover hacia'                         'Mover hacia el objeto dado')(nextPage                  'prxima pgina'                      'Ir a la prxima pgina')(pauseAll:                 'pausar todo'                         'Hacer que todos los guiones se pausen en el objeto y en todos sus hermanos')(pauseScript:              'pausar guin'                        'Hacer que se pause el guin dado')(play                      'reproducir'                          'Reproducir el grfico actual como un sonido')(prepend:                  'agregar adelante'                    'Agregar el objeto a mi contenido, ponindolo antes que todos los otros objetos actualmente contenidos por mi')(previousPage              'pgina anterior'                     'Ir a la pgina anterior')(removeAll                 'remover todo'                        'Remover todos los elementos del campo de juegos')(reverse                   'invertir'                            'Invertir el grfico')(roundUpStrays             'reunir perdidos'                       'Traer todas las partes fuera del contenedor nuevamente a la vista')(seesColor:                'sobre color'                         'Si alguna parte del objeto esta sobre el color dado')(show                      'mostrar'                             'Hacer visible el objeto')(shuffleContents           'mezclar el contenido'                'Mezclar el contenido del campo de juegos')(stampAndErase             'estampar y borrar'                   'Estampar mi imagen al rastro del lpiz y salir')(startAll:                 'comenzar todo'                       'Comenzar el latido del guin en el objeto y en todos sus hermanos')(startScript:              'comenzar guin'                      'Comenzar el latido del guin dado')(stopAll:                  'parar todos'                         'Hacer que el estado del guin dado sea "normal" en el objeto y en todos sus hermanos')(stopScript:               'detener guin'                         'Hacer que el estado del guin dado sea "normal"')(tellAllSiblings:          'decir a todos los hermanos'          'Enviar un mensaje a todos los hermanos')(touchesA:                 'toca un'                             'Si toco algo que parece como...')(turn:                     'girar'                               'Cambiar la direccin del objeto en la cantidad especificada')(unhideHiddenObjects       'mostrar objetos ocultos'             'Mostrar todos los objetos ocultos')(wearCostumeOf:            'lucir como'                          'Usar el traje de...')(wrap                      'ajusta'                                'traslada al otro borde si es apropiado')(penArrowheads             'puntas de flecha en el lpiz'        'Si muestra puntas de flecha al final de cada trazo del lpiz')(dropShadow                'sombra'                              'Si muestra la sombra')(shadowColor               'color de la sombra'                  'Color de la sombra')(clipSubmorphs             'cortar submorphs'                    'Si cortar o no mis submorphs')) language: #'Espaol'.   self translateCategories: #((basic                 'bsico'                 'Unas pocas cosas importantes')(#'book navigation'    'navegacion del libro'   'Relativo a libros, pilas, etc.')(button                'botn'                  'Para pensar este objeto como un botn')(collections           'colecciones'            'Para pensar este objeto como una coleccin')(fog                   'niebla'                 'Niebla 3D')(geometry              'geometra'              'Medidas y coordenadas')(#'color & border'     'color y borde'          'Asuntos relacionados con colores y bordes de objetos')(graphics              'grficos'               'Para pensar este objeto como una imagen')(variables			 'variables de instancia' 'Variables de instancia agregadas por este objeto')(joystick              'joystick'               'El objeto como un Joystick')(miscellaneous         'miscelneo'             'Comandos varios')(scripting             'guiones'                'Comandos para  comenzar y parar guiones, etc.')(motion                'movimiento'             'Asuntos relacionados con el movimiento y el giro')(paintbox              'paleta de pintor'       'La paleta del pintor')(#'pen trails'         'rastros del lpiz'      'Relacionados a los rastros dejados por los lpices')(#'pen use'            'uso del lpiz'          'Uso del lpiz del objeto')(playfield             'campo de juegos'        'El objeto como un contenedor para otros objetos visibles')(sampling              'muestreo'               'Muestreo')(scripts               'guiones'                'Guiones agregados por este objeto')(slider                'deslizador'             'Funciones tiles para deslizadores')(speaker               'altavoz'                'El objeto como un altavoz de audio')(#'stack navigation'   'navegacin de pila'     'Navegacin dentro de una pila')(storyboard            'pizarra de historia'    'Pizarra de historia')(tests                 'pruebas'                'Pruebas por verdadero/falso, para usar en cuadros de "Prueba" de guiones')(text                  'texto'                  'El objeto como texto')(viewing               'visualizacin'          'Asuntos relacionados a visualizacin')(vector                'vector'                 'El objeto como un vector')(layout                'disposicin'            'Disposicin de los objetos contenidos')(#'drag & drop'        'arrastrar y soltar'     'Arrastrar y soltar')(observation           'observacin'            'Observacin') ) language: #'Espaol'.        self addToTranslationTableFrom: #((:                                                '_'                                                'asignar el valor')(Incr: 'incrementar por' 'incrementar el valor por')(Decr: 'reducir por' 'reducir el valor por')(Mult: 'multiplicar por' 'multiplicar el valor por')) language: #'Espaol'! !!EToyVocabulary methodsFor: 'language translations' stamp: 'sw 4/15/2003 23:46'!addSwedishVocabulary	"Add a Swedish vocabulary. Well, ok, perhaps better translations could be made...	I might have simplified a few word choices to be better suited for kids like 'sudda' instead of 'rensa' (two words for 'clear'). Hmm, this was hard... :-)"	self translateMethodInterfaceWordings: #((append: 'lgg till' 'Lgg till objektet i mitt innehll')(beep: 'spela ljud' 'Spela upp angivet ljud')(bounce: 'studsa' 'studsa bort frn kanten ifall den trffas')(cameraPoint 'kameraposition' 'kamerans position')(clear 'sudda' 'Sudda bildens innehll')(clearOwnersPenTrails 'sudda alla pennstreck' 'Sudda alla pennstreck i pennans lekplats')(clearTurtleTrails 'sudda pennstreck' 'Sudda alla pennstreck p insidan')(color:sees: 'frg syns' 'ifall vald frg ser angiven frg')(deleteCard 'Ta bort kort' 'Ta bort det nuvarande kortet')(doMenuItem: 'utfr menyval' 'utfr menyvalet')(doScript: 'kr' 'kr skriptet en gng, vid nsta tick')(emptyScript 'tomt skript' 'ett tomt skript')(fire 'starta' 'startar alla knapphndelser fr detta objekt')(firstPage 'frsta sidan' 'g till frsta sidan')(followPath 'flj vg' 'flj den utsatta vgen')(forward: 'framt med' 'Flyttar objektet framt i objektets nuvarande riktning')(getActWhen 'kr nr' 'Nr skriptet skall kras')(getAllButFirstCharacter 'alla utom frsta' 'Alla mina tecken utom det frsta')(getAmount 'storlek' 'Frflyttningens storlek')(getAngle 'vinkel' 'Vinkelfrflyttningens storlek')(getBorderColor 'kantfrg' 'Frgen p objektets kant')(getBorderWidth 'kantbredd' 'Bredden p objektets kant')(getBottom 'botten' 'Den nedersta kanten')(getBrightnessUnder 'kontrast' 'Kontrasten under objektets mittpunkt')(getCharacters 'tecken' 'Tecknen i mitt innehll')(getColor 'frg' 'Objektets frg')(getColorUnder 'frg under' 'Frgen under objektets mittpunkt')(getConePosition 'hgtalarposition' 'hgtalarens position')(getCursor 'markr' 'Markrens nuvarande position, omvxlad till brjan ifall det r lmpligt')(getDescending 'fallande' 'Sger ifall det minsta vrdet r verst/till vnster (fallande = false) eller nederst/till hger (fallande = true)')(getDistance 'avstnd' 'Lngden p vektorn mellan ursprungspunkten och objektets position')(getFirstCharacter 'frsta tecknet' 'Det frsta tecknet i mitt innehll')(getFirstElement 'frsta elementet' 'Det frsta objektet i mitt innehll')(getFogColor 'dimmans frg' 'Frgen p dimman som appliceras')(getFogDensity 'dimmans densitet' 'Densiteten p dimman som appliceras')(getFogRangeEnd 'dimmans intervallslut' 'Intervallets slut p dimman som appliceras')(getFogRangeStart 'dimmans intervallstart' 'Intervallets start p dimman som appliceras')(getFogType 'dimmans typ' 'Typen av dimma som appliceras')(getGraphic 'bild' 'Bilden som brs av objektet')(getGraphicAtCursor 'bild vid markr' 'Bilden som brs av objektet vid markren')(getHeading 'riktning' 't vilket hll objektet pekar. 0 r rakt upp')(getHeight 'hjd' 'Hjden')(getHolder 'behllare' 'objektets behllare')(getIndexInOwner 'elementnummer' 'mitt index i min behllare')(getIsUnderMouse 'r under muspekaren' 'ifall objektet befinner sig under muspekaren')(getKnobColor 'draghandtagets frg' 'Draghandtagets frg')(getLabel 'etikett' 'Texten p knappen')(getLastValue 'senaste vrde' 'Senast berknade vrde')(getLeft 'vnster' 'Den vnstra kanten')(getLeftRight 'vnster/hger' 'Horisontell frflyttning')(getLuminanceUnder 'ljusstyrka under' 'Ljusstyrkan under objektets mittpunkt')(getMaxVal 'maxvrde' 'Talet som representerar nr draghandtaget r lngst till hger eller lngst ner, det strsta vrdet som draghandtaget ger.')(getMinVal 'minvrde' 'Talet som representerar nr draghandtaget r lngst till vnster eller hgst upp, det minsta vrdet som draghandtaget ger.')(getMouseX 'mus x' 'Muspekarens x-koordinat')(getMouseY 'mus y' 'Muspekarens y-koordinat')(getNewClone 'kopia' 'returnerar en kopia det hr objektet')(getNumberAtCursor 'tal vid markr' 'talet vid markren')(getNumericValue 'numeriskt vrde' 'Ett tal som representerar den aktuella positionen av draghandtaget.')(getObtrudes 'sticker ut' 'ifall objektet sticker ut ver behllarens kant')(getPenColor 'pennfrg' 'frgen p blcket i pennan')(getPenDown 'penna nedtryckt' 'ifall pennan r nedtryckt just nu')(getPenSize 'pennans bredd' 'pennans bredd')(getRight 'hger' 'Den hgra kanten')(getRoundedCorners 'rundade hrn' 'Ifall hrnen skall vara runda')(getSampleAtCursor 'vrde vid markr' 'Nuvarande vrde vid markrens position')(getSaturationUnder 'mttnad under' 'Mttnaden under objektets mittpunkt')(getScaleFactor 'skalfaktor' 'Objektets frstoringsfaktor')(getTheta 'theta' 'Vinkeln mellan den positiva x-axeln och vektorn mellan ursprungspunkten och objektets position')(getTop 'toppen' 'Den versta kanten')(getTruncate 'trunkera' 'Ifall endast heltal anvnds som vrden, om inte r brktal ocks tilltna.')(getUpDown 'upp/ner' 'Vertikal frflyttning')(getValueAtCursor 'spelare vid markr' 'objektet vid markren')(getViewingByIcon 'normalvy' 'vyn p innehllet r normal')(getWidth 'bredd' 'Bredden')(getX 'x' 'X-koordinaten')(getY 'y' 'Y-koordinaten')(goToFirstCardInBackground 'g till frsta i bakgrunden' 'G till det frsta kortet i den nuvarande bakgrunden')(goToFirstCardOfStack 'g till frsta kortet i stacken' 'G till frsta korten i hela stacken')(goToLastCardInBackground 'g till sista kortet i bakgrunden' 'G till det sista kortet i den nuvarande bakgrunden')(goToLastCardOfStack 'g till sista kortet i stacken' 'G till det sista kortet i hela stacken')(goToNextCardInStack 'g till nsta kort' 'G till nsta kort i stacken')(goToPreviousCardInStack 'g till frra kortet' 'G till det fregende kortet i stacken')(goToRightOf: 'align after' 'placera detta objekt till hger om ett annat')(goto: 'g till' 'g till angiven sida')(hide 'gm' 'gr objektet osynligt')(initiatePainting 'brja mlning' 'Pbrja mlning av ett nytt objekt i den vanliga lekplatsen.')(insertCard 'stoppa in kort' 'Skapa ett nytt kort')(lastPage 'sista sidan' 'g till sista sidan')(liftAllPens 'lyft alla pennor' 'Lyft pennorna p mitt innehlls alla objekt.')(loadSineWave 'ladda sinusvg' 'Ladda en sinusvg som nuvarande graf')(loadSound: 'ladda ljud' 'Ladda angivet ljud som nuvarnde graf')(lowerAllPens 'snk alla pennor' 'Snk pennorna p mitt innehlls alla objekt.')(makeNewDrawingIn: 'pbrja mlning i' 'gr en ny mlning i angiven lekplats')(moveToward: 'flytta mot' 'flytta mot angivet objekt')(nextPage 'nsta sida' 'g till nsta sida')(pauseAll: 'pausa alla' 'pausa skriptet i objektet och alla dess kusiner')(pauseScript: 'pausa skript' 'pausa skriptet')(play 'spela' 'Spela nuvarande graf som ett ljud')(previousPage 'fregende sida' 'g till fregende sida')(removeAll 'ta bort alla' 'Ta bort alla element frn lekplatsen')(reverse 'reversera' 'Reversera grafen')(roundUpStrays 'samla in bortsprungna' 'Samla in alla delar utanfr behllaren s att de blir synliga igen.')(seesColor: 'r ver frg' 'ifall ngon del av objektet r ver den givna frgen')(show 'visa' 'gr objektet synligt')(shuffleContents 'blanda innehll' 'Blanda lekplatsens innehll')(stampAndErase 'stmpla och frsvinn' 'lgg till min bild som ritstreck och frsvinn')(startAll: 'starta alla' 'starta skriptet tickande i objektet och alla dess kusiner.')(startScript: 'starta skript' 'starta skriptet tickande')(stopAll: 'stoppa alla' 'gr skriptet "normalt" i objektet och alla dess kusiner')(stopScript: 'stoppa skript' 'gr skriptet "normalt" i objektet')(tellAllSiblings: 'sg till kusiner' 'skicka ett meddelande till alla kusiner')(touchesA: 'vidrr' 'Ifall jag vidrr ngot som ser ut som...')(turn: 'svng med' 'ndra objektets riktning med angiven mngd')(unhideHiddenObjects 'visa alla gmda objekt' 'Gr alla gmda objekt synliga.')(wearCostumeOf: 'se ut som' 'br samma drkt som...')(wrap 'vxla ver kant' 'vxla ver kanten ifall det r lmpligt')) language: #Svenska.	self translateCategories: #((basic					'grunder'				'ett antal viktiga saker')(#'book navigation'		'boknavigering'			'saker som har att gra med bcker och stackar med mera')(button					'knapp'					'objektet betraktat som en knapp man kan trycka p')(collections				'samlingar'				'objektet betraktat som en samling av andra objekt')(fog					'dimma'					'3-dimensionell dimma')(geometry				'geometri' 				'mtvrden och koordinater')(#'color & border'		'frger & kanter'		'saker som har att gra med frger och kanter p objekt')(graphics				'grafik'					'objektet betraktat som en bild')(variables				'instansvariabler'		'instansvariabler tillagda i detta objekt')(joystick				'joystick	'				'objektet som en joystick')(miscellaneous			'diverse' 				'diverse kommandon')(motion					'rrelse' 				'saker som har att gra med frflyttning och vridning')(paintbox				'mlarlda'				'mlarpaletten')(#'pen trails'			'pennstreck'				'saker som har att gra med streck som pennan ritar')(#'pen use'				'pennanvndning' 		'anvndning av ett objekts penna')(playfield				'lekplats'					'objektet som behllare fr andra synliga objekt')(sampling				'provtagning'			'provtagning')(scripts					'skript'					'metoder tillagda i detta objekt')(slider					'draghandtag'			'anvndbara funktioner fr draghandtag')(speaker				'hgtalare'				'objektet betraktat som en hgtalare')(#'stack navigation'		'stacknavigering'		'navigering inom en stack')(storyboard				'storyboard'				'storyboard')(tests					'tester'					'ja/nej tester, fr anvndning skriptens testytor')(text					'text'					'Objektet som text')(viewing				'vyer'					'Saker som har att gra med olika vyer')(vector					'vektor'					'Objektet som en vektor') ) language: #Svenska.	self addToTranslationTableFrom: #((:						'_'						'tilldela vrde')(Incr:					'ka med'			'ka vrde med')(Decr:					'minska med'			'minska vrde med')(Mult:					'multiplicera med'			'multiplicera vrde med')) language: #Svenska! !