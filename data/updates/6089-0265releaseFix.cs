'From Squeakland 3.8.5976 of 19 August 2004 [latest update: #243] on 25 August 2004 at 12:04:08 pm'!!ExternalDropHandler class methodsFor: 'accessing' stamp: 'mir 8/24/2004 17:15'!lookupServiceBasedHandler: dropStream	"the file was just droped, let's do our job"	| fileName services theOne |	fileName := dropStream name.	services := (FileList itemsForFile: fileName)		reject: [:svc | self unwantedSelectors includes: svc selector].	"no service, default behavior"	services isEmpty		ifTrue: [^nil].	theOne := self chooseServiceFrom: services.	^theOne		ifNotNil: [ExternalDropHandler type: nil extension: nil action: [:stream | theOne performServiceFor: stream]]! !!MultiByteFileStream methodsFor: 'private' stamp: 'mir 8/24/2004 17:58'!setConverterForCode	| current |	self fullName = (SourceFiles at: 2) fullName ifTrue: [^ self].	current _ self converter saveStateOf: self.	self position: 0.	self binary.	((self next: 3) = (ByteArray with: 16rEF with: 16rBB with: 16rBF)) ifTrue: [		self converter: UTF8TextConverter new	] ifFalse: [		self converter: MacRomanTextConverter new.	].	converter restoreStateOf: self with: current.	self text.! !!SystemDictionary methodsFor: 'squeakland' stamp: 'mir 8/24/2004 12:31'!makeSqueaklandReleasePhaseFinalSettings	"Smalltalk makeSqueaklandReleasePhaseFinalSettings"	| serverName serverURL serverDir updateServer highestUpdate newVersion |	ProjectLauncher splashMorph: (FileDirectory default readOnlyFileNamed: 'scripts\SqueaklandSplash.morph') fileInObjectAndCode.	"Dump all morphs so we don't hold onto anything"	World submorphsDo:[:m| m delete].	#(		(honorDesktopCmdKeys false)		(warnIfNoChangesFile false)		(warnIfNoSourcesFile false)		(showDirectionForSketches true)		(menuColorFromWorld false)		(unlimitedPaintArea true)		(useGlobalFlaps false)		(mvcProjectsAllowed false)		(projectViewsInWindows false)		(automaticKeyGeneration true)		(securityChecksEnabled true)		(showSecurityStatus false)		(startInUntrustedDirectory true)		(warnAboutInsecureContent false)		(promptForUpdateServer false)		(fastDragWindowForMorphic false)		(externalServerDefsOnly true)		(expandedFormat false)		(allowCelesteTell false)		(eToyFriendly true)		(eToyLoginEnabled true)		(magicHalos true)		(mouseOverHalos true)		(biggerHandles false)		(includeSoundControlInNavigator true)		(readDocumentAtStartup true)		(preserveTrash true)	) do:[:spec|		Preferences setPreference: spec first toValue: spec last].	"Workaround for bug"	Preferences enable: #readDocumentAtStartup.	World color: (Color r: 0.9 g: 0.9 b: 1.0).	"Clear all server entries"	ServerDirectory serverNames do: [:each | ServerDirectory removeServerNamed: each].	SystemVersion current resetHighestUpdate.	"Add the squeakalpha update stream"	serverName _ 'Squeakalpha'.	serverURL _ 'squeakalpha.org'.	serverDir _ serverURL , '/'.	updateServer _ ServerDirectory new.	updateServer		server: serverURL;		directory: 'updates/';		altUrl: serverDir;		user: 'sqland';		password: nil.	Utilities updateUrlLists addFirst: {serverName. {serverDir. }.}.	"Add the squeakland update stream"	serverName _ 'Squeakland'.	serverURL _ 'squeakland.org'.	serverDir _ serverURL , '/'.	updateServer _ ServerDirectory new.	updateServer		server: serverURL;		directory: 'public_html/updates/';		altUrl: serverDir.	Utilities updateUrlLists addFirst: {serverName. {serverDir. }.}.	highestUpdate _ SystemVersion current highestUpdate.	SystemVersion current highestUpdate: 0.	newVersion _ FillInTheBlank request: 'New version designation:' initialAnswer: 'Squeakland 3.8.' , highestUpdate printString. 	SystemVersion newVersion: newVersion.	(self confirm: self version , 'Is this the correct version designation?If not, choose no, and fix it.') ifFalse: [^ self].! !