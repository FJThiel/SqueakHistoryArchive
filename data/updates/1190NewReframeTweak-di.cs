'From Squeak 2.4b of April 23, 1999 on 4 May 1999 at 3:47:37 pm'!"Change Set:		NewReframeTweakDate:			4 May 1999Author:			Dan IngallsYet another take on fast reframing using non-morphic display.Also eliminated multiple resize handles for both fast and normal reframing.Finally cures the interference of fast reframe with dragging internal objects."!!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/4/1999 15:25'!spawnPaneFrameHandle: event	| resizer localPt side growingPane newBounds |	(self world firstSubmorph isKindOf: NewHandleMorph) ifTrue:		[ ^ self  "Prevent multiple handles"].	((self innerBounds withHeight: self labelHeight+4) containsPoint: event cursorPoint)		ifTrue: [^ self "in label or top of top pane"].	growingPane _ self paneWithLongestSide: [:s | side _ s] near: event cursorPoint.	growingPane ifNil: [^ self].	resizer _ NewHandleMorph new		followHand: event hand		forEachPointDo:			[:p | localPt _ self pointFromWorld: p.			newBounds _ growingPane bounds withSideOrCorner: side setToPoint: localPt.			Preferences fastDragWindowForMorphic			ifTrue:				["For fast display, only higlight the rectangle during loop"				newBounds _ growingPane bounds newRectFrom:					[:f | growingPane bounds withSideOrCorner: side							setToPoint: (self pointFromWorld: Sensor cursorPoint)].					self reframePanesAdjoining: growingPane along: side to: newBounds]			ifFalse:				[self reframePanesAdjoining: growingPane along: side to: newBounds]]		lastPointDo: [:p | ].	event hand world addMorph: resizer.	resizer startStepping! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/4/1999 15:34'!spawnReframeHandle: event	"The mouse has crossed a pane border.  Spawn a reframe handle."	| resizer localPt pt ptName newBounds |	owner ifNil: [^ self  "Spurious mouseLeave due to delete"].	(self isActive not or: [self isCollapsed]) ifTrue:  [^ self].	(self world firstSubmorph isKindOf: NewHandleMorph) ifTrue:		[^ self  "Prevent multiple handles"].	paneMorphs do: [:p | ((p fullBounds insetBy: 1) containsPoint: event cursorPoint)			ifTrue: [^ self  "Don't activate resizer if in a scrollbar"]].	pt _ event cursorPoint.	self bounds forPoint: pt closestSideDistLen:		[:side :dist :len |  "Check for window side adjust"		dist <= 2  ifTrue: [ptName _ side]].	ptName ifNil:		["Check for pane border adjust"		^ self spawnPaneFrameHandle: event].	#(topLeft bottomRight bottomLeft topRight) do:		[:corner |  "Check for window corner adjust"		(pt dist: (self bounds perform: corner)) < 20 ifTrue: [ptName _ corner]].	resizer _ NewHandleMorph new		followHand: event hand		forEachPointDo:			[:p | localPt _ self pointFromWorld: p.			newBounds _ self bounds withSideOrCorner: ptName setToPoint: localPt.			Preferences fastDragWindowForMorphic			ifTrue:				["For fast display, only higlight the rectangle during loop"				newBounds _ self bounds newRectFrom:					[:f | f extent > (100@80)						ifTrue: [f withSideOrCorner: ptName									setToPoint: (self pointFromWorld: Sensor cursorPoint)]						ifFalse: [f]].				self bounds: newBounds]			ifFalse:				[newBounds extent > (100@80) ifTrue: [self bounds: newBounds]]]		lastPointDo:			[:p | ].	event hand world addMorph: resizer.	resizer startStepping! !!SystemWindow methodsFor: 'events' stamp: 'di 5/4/1999 15:45'!handlesMouseDown: evt	"If I am not the topWindow, then I will only respond to dragging by the title bar.	Any other click will only bring me to the top"	(Preferences fastDragWindowForMorphic 		and: [self labelRect containsPoint: evt cursorPoint])		ifTrue: [^ true].	^ self activeOnlyOnTop and: [self ~~ TopWindow]! !