'From Squeak 2.2beta of Sept 11, 1998 on 22 September 1998 at 9:44:23 am'!"Change Set:		jhmListViewFontsDate:			20 September 1998Author:			John MaloneyAdds the ability to set the font used by pluggable and non-pluggable ListViewsin both MVC and Morphic. Changes the font used for Celeste's list views to usea fixed-pitch font (Courier) if available."!View subclass: #ListView	instanceVariableNames: 'list selection topDelimiter bottomDelimiter isEmpty textStyle '	classVariableNames: ''	poolDictionaries: ''	category: 'Interface-Support'!ScrollPane subclass: #PluggableListMorph	instanceVariableNames: 'list selectedMorph selection getListSelector getIndexSelector setIndexSelector keystrokeActionSelector autoDeselect font '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Windows'!!ListParagraph class methodsFor: 'instance creation' stamp: 'jm 9/20/1998 17:10'!withArray: anArray style: aTextStyleOrNil	"Convert an array of strings into a ListParagraph using the given TextStyle."	aTextStyleOrNil		ifNil: [^ (super withText: Text new style: ListStyle) withArray: anArray]		ifNotNil: [^ (super withText: Text new style: aTextStyleOrNil) withArray: anArray].! !!ListView reorganize!('initialize-release' initialize)('font access' font font:)('list access' list list: reset resetAndDisplayView selection:)('delimiters' bottomDelimiter bottomDelimiter: noBottomDelimiter noTopDelimiter topDelimiter topDelimiter:)('displaying' deEmphasizeSelectionBox display displaySelectionBox displayView scrollBy: scrollSelectionIntoView)('deEmphasizing' deEmphasizeView emphasizeView)('controller access' defaultControllerClass)('display box access' boundingBox)('clipping box access' clippingBox)('selecting' deselect findSelection: isSelectionBoxClipped maximumSelection minimumSelection moveSelectionBox: numSelectionsInView selection selectionBox selectionBoxOffset)('updating' update:)('private' firstShown lastShown positionList wrappingBox)('lock access' lock)!!ListView methodsFor: 'font access' stamp: 'jm 9/20/1998 18:59'!font	| style |	textStyle		ifNil: [style _ TextStyle default]		ifNotNil: [style _ textStyle].	^ style fontNamed: style fontNames first! !!ListView methodsFor: 'font access' stamp: 'jm 9/20/1998 19:44'!font: aFontOrNil	aFontOrNil		ifNil: [textStyle _ nil]		ifNotNil: [			textStyle _ TextStyle fontArray: (Array with: aFontOrNil).			textStyle gridForFont: 1 withLead: 1].	self changed: #list.  "update display"! !!ListView methodsFor: 'list access' stamp: 'jm 9/20/1998 17:10'!list: anArray 	"Set the list of items the receiver displays to be anArray."	| arrayCopy i |	isEmpty _ anArray isEmpty.	arrayCopy _ Array new: (anArray size + 2).	arrayCopy at: 1 put: topDelimiter.	arrayCopy at: arrayCopy size put: bottomDelimiter.	i _ 2.	anArray do: [:el | arrayCopy at: i put: el. i _ i+1].	arrayCopy _ arrayCopy copyWithout: nil.	list _ ListParagraph withArray: arrayCopy style: textStyle.	selection _ 0.	self positionList.! !!PluggableListMorph methodsFor: 'initialization' stamp: 'jm 9/20/1998 17:28'!font	^ font! !!PluggableListMorph methodsFor: 'initialization' stamp: 'jm 9/20/1998 19:48'!font: aFontOrNil	font _ aFontOrNil.	self list: self getList.  "update display"! !!PluggableListMorph methodsFor: 'initialization' stamp: 'jm 9/20/1998 17:30'!list: listOfStrings	| morphList handler h loc index |	scroller removeAllMorphs.	list _ listOfStrings ifNil: [Array new].	list isEmpty ifTrue: [^ self selectedMorph: nil].	"NOTE: we will want a quick StringMorph init message, possibly even		combined with event install and positioning"	morphList _ list collect: [:item | StringMorph contents: item font: font].	"Sensitize first morph and copy handler to all the rest"	morphList first on: #mouseDown send: #mouseDown:onItem: to: self.	handler _ morphList first eventHandler.	morphList do: [:m | m eventHandler: handler].	"Lay items out vertically and install them in the scroller"	h _ morphList first height "self listItemHeight".	loc _ 0@0.	morphList do: [:m | m bounds: (loc extent: 9999@h).  loc _ loc + (0@h)].	scroller addAllMorphs: morphList.	index _ self getCurrentSelectionIndex.	self selectedMorph: (index = 0 ifTrue: [nil] ifFalse: [morphList at: index]).	self setScrollDeltas.	scrollBar setValue: 0.0.! !!PluggableListView methodsFor: 'initialization' stamp: 'jm 9/20/1998 19:48'!font: aFontOrNil	super font: aFontOrNil.	self list: self getList.  "update display"! !!PluggableListView methodsFor: 'initialization' stamp: 'jm 9/20/1998 17:12'!list: arrayOfStrings	"Set the receivers items to be the given list of strings."	"Note: the instance variable 'items' holds the original list.	 The instance variable 'list' is a paragraph constructed from	 this list."	isEmpty _ arrayOfStrings isEmpty.	"add top and bottom delimiters"	list _ ListParagraph		withArray:			(Array streamContents: [:s |				s nextPut: topDelimiter.				arrayOfStrings do: [:item | item == nil ifFalse: [s nextPut: item]].				s nextPut: bottomDelimiter])		 style: textStyle.	selection _ self getCurrentSelectionIndex.	self positionList.! !!PluggableListViewByItem methodsFor: 'all' stamp: 'jm 9/20/1998 17:13'!list: arrayOfStrings	"Set the receivers items to be the given list of strings."	"Note: the instance variable 'items' holds the original list.	 The instance variable 'list' is a paragraph constructed from	 this list."	itemList _ arrayOfStrings.	isEmpty _ arrayOfStrings isEmpty.	"add top and bottom delimiters"	list _ ListParagraph		withArray:			(Array streamContents: [:s |				s nextPut: topDelimiter.				arrayOfStrings do: [:item | item == nil ifFalse: [s nextPut: item]].				s nextPut: bottomDelimiter])		 style: textStyle.	selection _ self getCurrentSelectionIndex.	self positionList.! !ListParagraph class removeSelector: #withArray:!