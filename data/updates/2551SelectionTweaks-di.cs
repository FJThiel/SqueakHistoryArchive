'From Squeak2.9alpha of 12 June 2000 [latest update: #2550] on 31 August 2000 at 11:25:45 pm'!"Change Set:		SelectionTweaksDate:			31 August 2000Author:			Dan IngallsFixes a bug that caused shift-drag of polygon vertices to grow the vertex handles.Limits group selection to the submorphs of the pasteup in which the selection was begun.Allows a group selection to be augmented or depleted by secondary selections.Elides close curve options for lines with only two vertices."!BorderedMorph subclass: #SelectionMorph	instanceVariableNames: 'selectedItems slippage dupLoc dupDelta itemsAlreadySelected otherSelection '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Support'!!HandMorph methodsFor: 'world menu commands' stamp: 'di 8/31/2000 20:46'!buildMorphMenuFor: argMorph	"Build the morph menu. This menu has two sections. The first section contains commands that are handled by the hand; the second contains commands handled by the argument morph."	| menu |	argument _ argMorph.	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'grab' action: #grabMorph.	(argument isKindOf: PasteUpMorph) ifTrue:		[menu add: 'make a selection' action: #makeSelection].	menu add: 'copy to paste buffer' action: #copyToPasteBuffer.	argMorph maybeAddCollapseItemTo: menu.	menu add: 'delete' action: #dismissMorph.	menu addLine.	menu add: 'copy Postscript' target: argMorph action: #clipPostscript.	menu add: 'print PS to file...' target: argMorph action: #printPSToFile.	menu addLine.	menu add: 'go behind' action: #goBehind.	menu add: 'add halo' action: #addHalo.	menu add: 'duplicate' action: #maybeDuplicateMorph.	self potentialEmbeddingTargets size > 1 ifTrue:		[menu add: 'embed...' action: #placeArgumentIn].	menu add: 'resize' action: #resizeMorph.	"Give the argument control over what should be done about fill styles"	argMorph addFillStyleMenuItems: menu hand: self.	(argMorph morphsAt: targetOffset) size > 1 ifTrue:		[menu add: 'submorphs...'			target: self			selector: #selectSubmorphToOperateOn:sending:event:			argumentList: (Array with: argMorph with: #operateOnSubmorph:event:)].	menu addLine.	Smalltalk isMorphic		ifTrue: [menu add: 'inspect' action: #inspectMorph]		ifFalse: [menu add: 'inspect (in MVC)' action: #inspectMorph.				menu add: 'inspect' action: #inspectMorphInMorphic].	menu add: 'explore' target: argument action: #explore.	menu add: 'browse hierarchy' target: argument action: #browseHierarchy.	menu add: 'make own subclass' action: #subclassMorph.	menu addLine.	menu add: 'set variable name...' action: #nameMorph.	(argMorph isKindOf: MorphicModel) ifTrue:		[menu add: 'save morph as prototype' action: #saveAsPrototype.		(argMorph ~~ self world modelOrNil) ifTrue:			 [menu add: 'become this world''s model' action: #beThisWorldsModel]].	menu add: 'save morph in file' action: #saveOnFile.	(argMorph hasProperty: #resourceFilePath)		ifTrue: [((argMorph valueOfProperty: #resourceFilePath) endsWith: '.morph')				ifTrue: [menu add: 'save as resource' target: argMorph action: #saveAsResource].				menu add: 'update from resource' target: argMorph action: #updateFromResource]		ifFalse: [menu add: 'attach to resource' target: argMorph action: #attachToResource].	menu add: 'show actions' action: #showActions.	menu addLine.	menu defaultTarget: argMorph.	argMorph addCustomMenuItems: menu hand: self.	^ menu! !!PolygonMorph methodsFor: 'editing' stamp: 'di 8/31/2000 17:58'!mouseDown: evt	^ evt shiftPressed		ifTrue: [((owner isKindOf: PolygonMorph) and: [owner includesHandle: self])					ifTrue: ["Prevent insertion handles from getting edited"							^ super mouseDown: evt].				self toggleHandles.				handles ifNil: [^ self].				vertices withIndexDo:  "Check for click-to-drag at handle site"					[:vertPt :vertIndex |					((handles at: vertIndex*2-1) containsPoint: evt cursorPoint) ifTrue:						["If clicked near a vertex, jump into drag-vertex action"						evt hand newMouseFocus: (handles at: vertIndex*2-1)]]]		ifFalse: [super mouseDown: evt]! !!PolygonMorph methodsFor: 'menu' stamp: 'di 8/31/2000 18:12'!addCustomMenuItems: aMenu hand: aHandMorph	| lineName |	super addCustomMenuItems: aMenu hand: aHandMorph.	aMenu addUpdating: #handlesShowingPhrase target: self action: #showOrHideHandles.	vertices size > 2 ifTrue:		[aMenu addUpdating: #openOrClosePhrase target: self action: #makeOpenOrClosed.		lineName _ closed ifTrue: ['outline'] ifFalse: ['line'].		(self isKindOf: CurveMorph)			ifTrue: [aMenu add: 'make segmented ', lineName action: #toggleSmoothing]			ifFalse: [aMenu add: 'make smooth ', lineName action: #toggleSmoothing]. 		aMenu addUpdating: #fillPhrase enablementSelector: #isClosed				target: self selector: #toggleFill argumentList: {quickFill not}].	aMenu addLine.	aMenu addWithLabel: '---' enablement: #enableRemoveArrows action:  #makeNoArrows.	aMenu addWithLabel: '-->' enablement: #enableForwardArrow action:  #makeForwardArrow.	aMenu addWithLabel: '<--' enablement: #enableBackArrow action:  #makeBackArrow.	aMenu addWithLabel: '<->' enablement: #enableBothArrows action:  #makeBothArrows.! !!PolygonMorph methodsFor: 'private' stamp: 'di 8/31/2000 13:46'!includesHandle: aMorph	handles ifNil: [^ false].	^ handles includes: aMorph! !!SelectionMorph methodsFor: 'initialization' stamp: 'di 8/31/2000 21:40'!extendByHand: aHand	"Assumes selection has just been created and added to some pasteUp or world"	| startPoint handle |	startPoint _ self position.	handle _ NewHandleMorph new followHand: aHand		forEachPointDo: [:newPoint | self bounds: (startPoint rect: newPoint)]		lastPointDo: [:newPoint | selectedItems isEmpty ifTrue: [self delete]												ifFalse: [self doneExtending]].	aHand attachMorph: handle.	handle startStepping.! !!SelectionMorph methodsFor: 'initialization' stamp: 'di 8/31/2000 19:56'!initialize	super initialize.	color _ Color transparent.	borderWidth _ 1.	borderColor _ Color blue.	selectedItems _ OrderedCollection new.	itemsAlreadySelected _ OrderedCollection new.	slippage _ 0@0.! !!SelectionMorph methodsFor: 'geometry' stamp: 'di 8/31/2000 18:39'!extent: newExtent	super extent: newExtent.	self selectSubmorphsOf: self pasteUpMorph! !!SelectionMorph methodsFor: 'drawing' stamp: 'di 8/31/2000 21:58'!drawOn: aCanvas	| canvas form1 form2 box |	super drawOn: aCanvas.	box _ self bounds.	selectedItems do: [:m | box _ box merge: m fullBounds].	box _ box expandBy: 1.	canvas _ Display defaultCanvasClass extent: box extent depth: 8.	canvas translateBy: box topLeft negated		during: [:tempCanvas | selectedItems do: [:m | m fullDrawOn: tempCanvas]].	form1 _ (Form extent: box extent) copyBits: (0@0 extent: box extent) from: canvas form at: 0@0 colorMap: (Color maskingMap: 8).	form2 _ Form extent: box extent.	(0@0) fourNeighbors do: [:d | form1 displayOn: form2 at: d rule: Form under].	form1 displayOn: form2 at: 0@0 rule: Form erase.	aCanvas stencil: form2		at: box topLeft		sourceRect: form2 boundingBox		color: self borderColor! !!SelectionMorph methodsFor: 'drag and drop' stamp: 'di 8/31/2000 20:58'!justDroppedInto: newOwner event: evt	selectedItems isEmpty ifTrue:		["Hand just clicked down to draw out a new selection"		^ self extendByHand: evt hand].	dupLoc ifNotNil: [dupDelta _ self position - dupLoc].	selectedItems reverseDo: [:m | newOwner addMorphFront: m].	^ super justDroppedInto: newOwner event: evt! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 21:13'!addAddHandMenuItemsForHalo: aMenu hand: aHandMorph	aMenu addLine.	aMenu add: 'add or remove items' target: self selector: #addOrRemoveItems: argument: aHandMorph.	^ super addAddHandMenuItemsForHalo: aMenu hand: aHandMorph! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 22:29'!addHandlesTo: aHaloMorph box: box	| onlyThese |	aHaloMorph haloBox: box.	onlyThese _ #(addDismissHandle: addMenuHandle: addGrabHandle: addDragHandle: addDupHandle: addHelpHandle: addGrowHandle: addFontSizeHandle: addFontStyleHandle: addFontEmphHandle: addRecolorHandle:).	Preferences haloSpecifications do:		[:aSpec | (onlyThese includes: aSpec addHandleSelector) ifTrue:				[aHaloMorph perform: aSpec addHandleSelector with: aSpec]].	aHaloMorph innerTarget addOptionalHandlesTo: aHaloMorph box: box! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 22:59'!addOptionalHandlesTo: aHalo box: box	aHalo addHandleAt: box leftCenter color: Color blue icon: nil		on: #mouseUp send: #addOrRemoveItems: to: self.! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 22:43'!addOrRemoveItems: handOrEvent	"Make a new selection extending the current one."	| oldOwner hand |	hand _ (handOrEvent isKindOf: HandMorph)			ifTrue: [handOrEvent]			ifFalse: [handOrEvent hand].	hand attachMorph: ((SelectionMorph newBounds: (0@0 extent: 16@16))							setOtherSelection: self).	oldOwner _ owner.	self world abandonAllHalos.  "Will delete me"	oldOwner addMorph: self.! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 22:59'!balloonHelpTextForHandle: aHandle	aHandle eventHandler firstMouseSelector == #addOrRemoveItems:		ifTrue: [^'Add items to, or remove them from, this selection.'].	^ super balloonHelpTextForHandle: aHandle! !!SelectionMorph methodsFor: 'halo commands' stamp: 'di 8/31/2000 20:50'!maybeAddCollapseItemTo: aMenu	"... don't "! !!SelectionMorph methodsFor: 'private' stamp: 'di 8/31/2000 21:53'!doneExtending	otherSelection ifNotNil:		[selectedItems _ otherSelection selectedItems , selectedItems.		otherSelection delete.		self setOtherSelection: nil].	super privateBounds:		((Rectangle merging: (selectedItems collect: [:m | m bounds]))			expandBy: 8).	self addHalo.! !!SelectionMorph methodsFor: 'private' stamp: 'di 8/31/2000 22:12'!selectSubmorphsOf: aMorph	| newItems removals |	newItems _ aMorph submorphs select:		[:m | (bounds containsRect: m fullBounds) 					and: [m~~self					and: [(m isKindOf: HaloMorph) not]]].	otherSelection ifNil: [^ selectedItems _ newItems].	removals _ newItems intersection: itemsAlreadySelected.	otherSelection setSelectedItems: (itemsAlreadySelected copyWithoutAll: removals).	selectedItems _ (newItems copyWithoutAll: removals).! !!SelectionMorph methodsFor: 'private' stamp: 'di 8/31/2000 21:36'!selectedItems	^ selectedItems! !!SelectionMorph methodsFor: 'private' stamp: 'di 8/31/2000 22:02'!setOtherSelection: otherOrNil	otherSelection _ otherOrNil.	otherOrNil == nil		ifTrue: [super borderColor: Color blue]		ifFalse: [itemsAlreadySelected _ otherSelection selectedItems.				super borderColor: Color green]! !!SelectionMorph methodsFor: 'private' stamp: 'di 8/31/2000 21:45'!setSelectedItems: items	selectedItems _ items.	self changed! !SelectionMorph removeSelector: #addCustomMenuItems:hand:!SelectionMorph removeSelector: #addOrRemoveItems!SelectionMorph removeSelector: #adjustBounds!SelectionMorph removeSelector: #fullBounds!SelectionMorph removeSelector: #setItemsAlreadySelected:!