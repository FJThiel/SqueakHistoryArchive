'From Squeak2.9alpha of 12 June 2000 [latest update: #2940] on 4 November 2000 at 12:35:40 pm'!"Change Set:		MessageTallyValueDate:			4 November 2000Author:			Dan IngallsAllows messageTally expressions,	MessageTally spyOn: []and	TimeProfileBrowser onBlock: []to return the value of their block in case it is desired for completing a computation.  Note that this capability is only usable in Morphic, since MVC will kill the process when it opens the window."!!MessageNode methodsFor: 'tiles' stamp: 'di 11/2/2000 10:40'!morphFromKeywords: key arguments: args on: parent indent: ignored	| keywords arg thisKey column row selType explanation receiverString getMenuBlock |	getMenuBlock _ [ :aClass | self buildMenuForClass: aClass andSelector: key].	receiver ifNotNil: [	"i.e. not a cascade"		receiver asMorphicSyntaxIn: parent.	].	parent getMenuBlock: getMenuBlock.	keywords _ key keywords.	selType _ precedence asPrecedenceName.	receiverString _ receiver ifNil: [		''	] ifNotNil: [		' sent to ',receiver explanation	].	args size = 0 ifTrue: [		row _ parent 			addTextRow: key getMenuBlock: getMenuBlock explanation: nil.		parent explanation: selType,' message #',keywords first,receiverString.		^ row parseNode: selector.	].	args size = 1 ifTrue: [		row _ parent 			addTextRow: keywords first  			getMenuBlock: getMenuBlock			explanation: selType,' selector'.		row parseNode: selector.		args first asMorphicSyntaxIn: parent.		parent explanation: selType,' message #', keywords first, ' with an argument ',					args first explanation, receiverString.		"(args first asMorphicSyntaxIn: parent)			explanation: selType,' message #',keywords first,' with an argument ',					args first explanation,receiverString."		^self	].		explanation _ 'A keyword message #',key,				' with ',keywords size printString,' arguments'.	column _ parent addColumn: #keyword1 on: self.	column explanation: explanation;  getMenuBlock: getMenuBlock.	1 to: keywords size do: [:part |		arg _ args at: part.		thisKey _ keywords at: part.		(row _ column addRow: #keyword2 on: self)			borderWidth: 1;			parseNode: (self as: MessagePartNode);			borderColor: row stdBorderColor.		(row addTextRow: thisKey) parseNode: (KeyWordNode new).		arg asMorphicSyntaxIn: row.	].	explanation _ explanation,receiverString.	parent explanation: explanation.! !!MessageTally class methodsFor: 'spying' stamp: 'di 11/4/2000 12:11'!spyOn: aBlock    "MessageTally spyOn: [100 timesRepeat: [3.14159 printString]]"	| node result |	node _ self new.	result _ node spyEvery: 16 on: aBlock.	(StringHolder new contents: (String streamContents: [:s | node report: s; close]))		openLabel: 'Spy Results'.	^ result! !!TimeProfileBrowser methodsFor: 'private' stamp: 'di 11/4/2000 12:12'!runBlock	| stream list result |	tally := MessageTally new.	result _ tally spyEvery: 16 on: block.	stream := ReadWriteStream with: (String streamContents: [:s | tally report: s; close]).	stream reset.	list := OrderedCollection new.	[stream atEnd] whileFalse: [list add: stream nextLine].	self initializeMessageList: list.	self changed: #messageList.	self changed: #messageListIndex.	^ result! !!TimeProfileBrowser class methodsFor: 'instance creation' stamp: 'di 11/4/2000 12:12'!onBlock: block	"Open a profile browser on the given block, thereby running the block and 	 collecting the message tally."	"TimeProfileBrowser onBlock: [20 timesRepeat: 			[Transcript show: 100 factorial printString]]"	| inst result |	inst := self new.	inst block: block.	result _ inst runBlock.	self open: inst name: 'Time Profile'.	^ result! !