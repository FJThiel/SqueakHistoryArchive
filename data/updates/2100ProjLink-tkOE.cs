'From Squeak2.8alpha of 13 January 2000 [latest update: #2099] on 11 May 2000 at 4:21:36 pm'!!FileList methodsFor: 'file list menu' stamp: 'tk 5/11/2000 16:15'!itemsForFileEnding: suffix	| labels lines selectors |	labels _ OrderedCollection new.	lines _ OrderedCollection new.	selectors _ OrderedCollection new.	(suffix = 'bmp') | (suffix = 'gif') | (suffix = 'jpg') | (suffix ='form') | (suffix = '*') | (suffix = 'png') ifTrue:		[labels addAll: #('open image in a window' 'read image into ImageImports' 'open image as background').		selectors addAll: #(openImageInWindow importImage openAsBackground)].	(suffix = 'morph') | (suffix = 'morphs') | (suffix = 'sp') |(suffix = '*') ifTrue:		[labels add: 'load as morph'.		selectors add: #openMorphFromFile.		labels add: 'load as project'.		selectors add: #openProjectFromFile].	(suffix = 'extseg') | (suffix = 'project') | (suffix = 'pr') ifTrue:		[labels add: 'load as project'.		selectors add: #openProjectFromFile].	(suffix = 'bo') | (suffix = '*') ifTrue:[		labels add: 'load as book'.		selectors add: #openBookFromFile].	(suffix = 'mid') | (suffix = '*') ifTrue:		[labels add: 'play midi file'.		selectors add: #playMidiFile].	(suffix = 'movie') | (suffix = '*') ifTrue:		[labels add: 'open as movie'.		selectors add: #openAsMovie].	(suffix = 'st') | (suffix = 'cs') | (suffix = '*') ifTrue:		[suffix = '*' ifTrue: [lines add: labels size].		labels addAll: #('fileIn' 'file into new change set''browse changes' 'browse code' 'remove line feeds' 'broadcast as update').		lines add: labels size - 1.		selectors addAll: #(fileInSelection fileIntoNewChangeSetbrowseChanges browseFile removeLinefeeds putUpdate)].	(suffix = 'swf') | (suffix = '*') ifTrue:[		labels add:'open as Flash'.		selectors add: #openAsFlash].	(suffix = 'ttf') | (suffix = '*') ifTrue:[		labels add: 'open true type font'.		selectors add: #openAsTTF].	(suffix = 'gz') | (suffix = '*') ifTrue:[		labels addAll: #('view decompressed' 'decompress to file').		selectors addAll: #(viewGZipContents saveGZipContents)].	(suffix = '3ds') | (suffix = '*') ifTrue:[		labels add: 'Open 3DS file'.		selectors add: #open3DSFile].	(suffix = 'tape') | (suffix = '*') ifTrue:		[labels add: 'open for playback'.		selectors add: #openTapeFromFile].	(suffix = 'wrl') | (suffix = '*') ifTrue:		[labels add: 'open in Wonderland'.		selectors add: #openVRMLFile].	(suffix = '*') ifTrue:		[labels addAll: #('generate HTML').		lines add: labels size - 1.		selectors addAll: #(renderFile)].	^ Array with: labels with: lines with: selectors! !!Project methodsFor: 'file in/out' stamp: 'tk 5/11/2000 16:21'!installRemoteFrom: strm named: otherProjectName	| projViewer is proj |	"Find the current ProjectViewMorph, fetch the project, install in ProjectViewMorph without changing size, and jump into new project."	projViewer _ self findProjectView: otherProjectName.	projViewer 		ifNotNil: [is _ strm asUnZippedStream fileInObjectAndCode.			(is isKindOf: ImageSegment) ifTrue: [				proj _ is arrayOfRoots detect: [:mm | mm class == Project] 							ifNone: [nil].				proj ifNotNil: [proj versionFrom: strm.					(projViewer project isKindOf: DiskProxy) ifFalse: [						projViewer project changeSet name: ChangeSet defaultName].					proj changeSet name: otherProjectName.					proj setParent: Project current.					(projViewer owner isKindOf: SystemWindow) ifTrue: [						projViewer owner model: proj].					projViewer project: proj.					^ proj enter]]]		ifNil: [(SelectionMenu confirm: 'No old thumbnail found. Debug?') 					ifTrue: [self halt]].	"replace with a new one"	ProjectViewMorph openFromFile: strm.		"Later check rest of servers if fails.  Still have list here"! !!Project methodsFor: 'file in/out' stamp: 'tk 5/11/2000 15:30'!storeOnServer	| servers pair newVersion resp newName local folder |	"Save to disk as an Export Segment.  Then put that file on the server I came from, as a new version.  Version is literal piece of file name.  Mime encoded and http encoded."	self == CurrentProject ifTrue: ["exit, then do the command"		^ self armsLengthCommand: #storeOnServer].	"write locally"	self exportSegment.	(FileStream oldFileNamed: self name, '.pr') compressFile.	"Find out what version"	(servers _ self serverList) isEmpty 		ifTrue: [folder _ PluggableFileList getFolderDialog openLabel:					 'Select a folder on a server:'.			folder ifNil: [^ self].			servers _ Array with: folder.			urlList _ Array with: folder realUrl, '/'.			pair _ Array with: nil with: -1]		ifFalse: [pair _ self class mostRecent: self name onServer: servers first].	(newVersion _ self newVersion: pair) ifNil: [^ self].	newName _ self name, '|', newVersion, '.pr'.	local _ FileStream oldFileNamed: self name, '.pr.gz'.	resp _ servers first putFile: local named: newName retry: false.	resp ifFalse: [self inform: 'the primary server of this project seems to be down'.  ^ self].	version _ newVersion.	"committed"	"Later, store with same name on secondary servers.  Still can be race conditions.  All machines will go through the server list in the same order."	"2 to: servers size do: [:aServer | aServer putFile: local named: newName]."	"Rename disk file to be the final name"	local reset.	local localName = newName 		ifFalse: [FileDirectory default rename: local localName toBe: newName]		ifTrue: [local close].! !!Project methodsFor: 'file in/out' stamp: 'tk 5/11/2000 15:34'!url	| vv serv |	"compose my url on the server"	vv _ version.	version ifNil: [vv _ 'AA'].	urlList ifNotNil: [urlList size > 0 ifTrue: [		serv _ urlList first last == $/ ifTrue: [urlList first] ifFalse: [urlList first, '/'].		^ serv, self name,'|',vv,'.pr']].	^ ''! !!Project methodsFor: 'file in/out' stamp: 'tk 5/11/2000 15:27'!versionFrom: aServerFile	| theName uu serverUrl |	"Store the version of the file I actually came from.  My stored version was recorded before I knew the latest version number on the server!!"	(aServerFile class == String) 		ifTrue: [uu _ aServerFile asUrl.				theName _ uu path last.				serverUrl _ (uu toText copyUpToLast: $/), '/']		ifFalse: [serverUrl _ aServerFile directoryUrl.				theName _ aServerFile localName].	version _ (theName findTokens: '|.') second.	(serverUrl beginsWith: 'ftp:') ifTrue: ["update our server location"		urlList ifNil: [urlList _ Array new: 1].		urlList size = 0 ifTrue: [urlList _ Array new: 1].		urlList at: 1 put: serverUrl].! !!Project class methodsFor: 'squeaklet on server' stamp: 'tk 5/11/2000 14:28'!fromUrl: urlString	| serverFile pair pvm projName proj projViewer strm num triple |	"Load the project, and make a thumbnail to it in the current project.  Replace the old one if necessary.Project fromUrl: 'http://www.squeak.org/Squeak2.0/2.7segments/Squeak_Easy.pr.gz'."	Smalltalk verifyMorphicAvailability ifFalse: [^ self].	World ifNil: [^ self inform: 			'Later, allow jumping from MVC to Morphic Projects.'].	serverFile _ ServerFile new fullPath: urlString.	(proj _ Project named: (projName _ (serverFile fileName unescapePercents findTokens: '|.') first))		ifNotNil: ["it appeared" ^ proj enter].	serverFile type == #http		ifTrue: [num _ (triple _ serverFile fileName findTokens: '|.') size >= 3 				ifTrue: [Base64MimeConverter decodeInteger: triple second unescapePercents]				ifFalse: [0].			pair _ Array with: serverFile fileName with: num]		ifFalse: [pair _ self mostRecent: serverFile localName onServer: serverFile].	"Pair first is name exactly as it is on the server"	pair first ifNil: ["If none, open a blank project"		pvm _ ProjectViewMorph newMorphicProjectOn: nil.		pvm _ pvm findA: ProjectViewMorph.		(proj _ pvm project) changeSet name: projName.		projViewer _ Project current findProjectView: projName.		proj setParent: Project current.		(projViewer owner isKindOf: SystemWindow) ifTrue: [				projViewer owner model: proj].		^ projViewer project: proj].	"Find parent project, go there, zap old thumbnail"	strm _ serverFile oldFileNamed: pair first.	Project current installRemoteFrom: strm named: projName.! !