'From Squeak 2.3 beta of Nov 25, 1998 on 4 January 1999 at 8:22:45 pm'!"Change Set:		SundryDate:			4 January 1999Author:			Dan IngallsMakes BouncingAtoms opaque so it doesn't slow down when on top of other things.Makes it so SystemWindows that are not on top will respond to:	close, collapse, or attempt to drag by the title bar.	Any other click will only bring them to the top.Makes it so cmd-drag and halo drag of Text with DropShadow	works whether you select the text or the dropShadow."!!Morph methodsFor: 'geometry' stamp: 'di 1/4/1999 20:07'!setConstrainedPositionFrom: aPoint	"Change the position of this morph and and all of its submorphs to aPoint, but don't let me go outside my owner's bounds."	| trialRect delta boundingMorph |	trialRect _ aPoint extent: self bounds extent.	boundingMorph _ self nearestOwnerThat:		[:o | (o isKindOf: DropShadowMorph) not].		" -- would be nice to just use topRendererOrSelf, but making			DropShadows respond to isRenderer makes them hard to select."	delta _ boundingMorph			ifNil:    [aPoint]			ifNotNil: [trialRect amountToTranslateWithin: boundingMorph bounds].	self position: aPoint + delta.	self layoutChanged  "So that, eg, surrounding text will readjust"! !!BouncingAtomsMorph methodsFor: 'other' stamp: 'di 1/4/1999 20:22'!areasRemainingToFill: aRectangle	color isTranslucent		ifTrue: [^ Array with: aRectangle]		ifFalse: [^ aRectangle areasOutside: self bounds]! !!DropShadowMorph methodsFor: 'private' stamp: 'di 1/4/1999 19:53'!computeBounds	submorphs isEmpty ifTrue:		[self extent: 50@40.		fullBounds _ nil.		^ self].	self changed.	bounds _ (submorphs first bounds) copy.	fullBounds _ nil.	bounds _ (self fullBounds translateBy: shadowOffset) merge: self fullBounds.	self changed! !!HandMorph methodsFor: 'special gestures' stamp: 'di 9/30/1998 12:06'!specialDrag: evt	"Special drag (cmd-mouse on the Macintosh) allows a morph to be dragged without grabbing it and thus without removing it from its owner or changing its z-order." 	| halo |	self position ~= evt cursorPoint		ifTrue: [self position: evt cursorPoint].	mouseDownMorph		ifNil:    ["Waiting for more than 5 pixels move to start drag"				(self position dist: targetOffset) > 5					ifTrue: [(halo _ self world haloMorphOrNil) ifNil: [^ self].							mouseDownMorph _ halo target.							targetOffset _ targetOffset - mouseDownMorph positionInWorld.							halo removeAllHandlesBut: nil]]		ifNotNil: [mouseDownMorph setConstrainedPositionFrom:					(mouseDownMorph pointFromWorld: self position - targetOffset)].! !!SystemWindow methodsFor: 'top window' stamp: 'di 1/4/1999 16:15'!passivate	"Make me unable to respond to mouse and keyboard"	self setStripeColorsFrom: self paneColor.	self submorphsDo: [:m | (m == closeBox or: [m == collapseBox]) ifFalse: [m lock]].	self world displayWorld "clean damage now, so dont merge this rect with new top"! !!SystemWindow methodsFor: 'events' stamp: 'di 1/4/1999 16:28'!handlesMouseDown: evt	"If I am not the topWindow, then I will only respond to:		close, collapse, or attempt to drag by the title bar	Any other click will only bring me to the top"	(collapseBox containsPoint: evt cursorPoint) ifTrue: [^ true].	(closeBox containsPoint: evt cursorPoint) ifTrue: [^ true].	Preferences fastDragWindowForMorphic ifTrue: [^ true].	^ self activeOnlyOnTop and: [self ~~ TopWindow]! !!TransitionMorph methodsFor: 'drawing' stamp: 'di 1/4/1999 16:03'!areasRemainingToFill: aRectangle	"May be overridden by any subclasses with opaque regions"	^ Array with: (aRectangle areasOutside: self bounds)! !