'From Squeak 2.0 BETA of May 8, 1998 on 16 May 1998 at 5:43:59 pm'!MorphicModel subclass: #SystemWindow	instanceVariableNames: 'labelString stripes label closeBox collapseBox activeOnlyOnTop paneMorphs paneRects collapsedFrame fullFrame isCollapsed '	classVariableNames: 'TopWindow '	poolDictionaries: ''	category: 'Morphic-Windows'!!Browser methodsFor: 'initialize-release' stamp: 'di 5/16/1998 15:04'!buildMorphicSwitches	| instanceSwitch commentSwitch classSwitch row |	instanceSwitch _ PluggableButtonMorph		on: self		getState: #instanceMessagesIndicated		action: #indicateInstanceMessages.	instanceSwitch		label: 'instance';		askBeforeChanging: true.	commentSwitch _ PluggableButtonMorph		on: self		getState: #classCommentIndicated		action: #editComment.	commentSwitch		label: '?' asText allBold asParagraph;		askBeforeChanging: true.	classSwitch _ PluggableButtonMorph		on: self		getState: #classMessagesIndicated		action: #indicateClassMessages.	classSwitch		label: 'class';		askBeforeChanging: true.	row _ AlignmentMorph newRow		hResizing: #spaceFill;		vResizing: #spaceFill;		inset: 0;		borderColor: Color transparent;		addMorphBack: instanceSwitch;		addMorphBack: commentSwitch;		addMorphBack: classSwitch.	^ row! !!Browser methodsFor: 'initialize-release' stamp: 'di 5/16/1998 17:21'!openAsMorphClassEditing: editString	"Create a pluggable version a Browser on just a single class."	| window codePane |	window _ (SystemWindow labelled: 'later') model: self.	window addMorph: (PluggableListMorph on: self list: #classListSingleton			selected: #indexIsOne changeSelected: #indexIsOne:			menu: #classListMenu:)		frame: (0@0 extent: 0.5@0.06).	window addMorph: self buildMorphicSwitches		frame: (0.5@0 extent: 0.5@0.06).	window addMorph: (PluggableListMorph on: self list: #messageCategoryList			selected: #messageCategoryListIndex changeSelected: #messageCategoryListIndex:			menu: #messageCategoryMenu:)		frame: (0@0.06 extent: 0.5@0.30).	window addMorph: (PluggableListMorph on: self list: #messageList			selected: #messageListIndex changeSelected: #messageListIndex:			menu: #messageListMenu:shifted:)		frame: (0.5@0.06 extent: 0.5@0.30).	codePane _ PluggableTextMorph on: self text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	editString ifNotNil: [codePane editString: editString.					codePane hasUnacceptedEdits: true].	window addMorph: codePane		frame: (0@0.36 corner: 1@1).	^ window! !!Browser methodsFor: 'initialize-release' stamp: 'di 5/16/1998 16:08'!openAsMorphEditing: editString	"Create a pluggable version of all the views for a Browser, including views and controllers."	| window codePane |	window _ (SystemWindow labelled: 'later') model: self.	window addMorph: (PluggableListMorph on: self list: #systemCategoryList			selected: #systemCategoryListIndex changeSelected: #systemCategoryListIndex:			menu: #systemCategoryMenu:)		frame: (0@0 extent: 0.25@0.4).	window addMorph: (PluggableListMorph on: self list: #classList			selected: #classListIndex changeSelected: #classListIndex:			menu: #classListMenu:)		frame: (0.25@0 extent: 0.25@0.3).	window addMorph: self buildMorphicSwitches		frame: (0.25@0.3 extent: 0.25@0.1).	window addMorph: (PluggableListMorph on: self list: #messageCategoryList			selected: #messageCategoryListIndex changeSelected: #messageCategoryListIndex:			menu: #messageCategoryMenu:)		frame: (0.5@0 extent: 0.25@0.4).	window addMorph: (PluggableListMorph on: self list: #messageList			selected: #messageListIndex changeSelected: #messageListIndex:			menu: #messageListMenu:shifted:)		frame: (0.75@0 extent: 0.25@0.4).	codePane _ PluggableTextMorph on: self text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	editString ifNotNil: [codePane editString: editString.					codePane hasUnacceptedEdits: true].	window addMorph: codePane		frame: (0@0.4 corner: 1@1).	^ window! !!Browser methodsFor: 'initialize-release' stamp: 'di 5/16/1998 17:19'!openAsMorphSysCatEditing: editString	"Create a pluggable version of all the views for a Browser, including views and controllers."	| window codePane |	window _ (SystemWindow labelled: 'later') model: self.	window addMorph: (PluggableListMorph on: self list: #systemCategorySingleton			selected: #indexIsOne changeSelected: #indexIsOne:			menu: #systemCategoryMenu:)		frame: (0@0 extent: 1.0@0.06).	window addMorph: (PluggableListMorph on: self list: #classList			selected: #classListIndex changeSelected: #classListIndex:			menu: #classListMenu:)		frame: (0@0.06 extent: 0.3333@0.24).	window addMorph: self buildMorphicSwitches		frame: (0@0.3 extent: 0.3333@0.06).	window addMorph: (PluggableListMorph on: self list: #messageCategoryList			selected: #messageCategoryListIndex changeSelected: #messageCategoryListIndex:			menu: #messageCategoryMenu:)		frame: (0.3333@0.06 extent: 0.3333@0.30).	window addMorph: (PluggableListMorph on: self list: #messageList			selected: #messageListIndex changeSelected: #messageListIndex:			menu: #messageListMenu:shifted:)		frame: (0.6666@0.06 extent: 0.3333@0.30).	codePane _ PluggableTextMorph on: self text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	editString ifNotNil: [codePane editString: editString.					codePane hasUnacceptedEdits: true].	window addMorph: codePane		frame: (0@0.36 corner: 1@1).	^ window! !!Browser methodsFor: 'initialize-release' stamp: 'di 5/16/1998 17:07'!openEditString: aString	"Create a pluggable version of all the views for a Browser, including views and controllers."	| systemCategoryListView classListView 	messageCategoryListView messageListView browserCodeView topView switchView |	World ifNotNil: [^ self openAsMorphEditing: aString].	Sensor leftShiftDown ifTrue: [^ self openAsMorphEditing: aString "testing"].	topView _ (StandardSystemView new) model: self.	topView borderWidth: 1.		"label and minSize taken care of by caller"	systemCategoryListView _ PluggableListView on: self		list: #systemCategoryList		selected: #systemCategoryListIndex		changeSelected: #systemCategoryListIndex:		menu: #systemCategoryMenu:.	systemCategoryListView window: (0 @ 0 extent: 50 @ 70).	topView addSubView: systemCategoryListView.	classListView _ PluggableListView on: self		list: #classList		selected: #classListIndex		changeSelected: #classListIndex:		menu: #classListMenu:.	classListView window: (0 @ 0 extent: 50 @ 62).	topView addSubView: classListView toRightOf: systemCategoryListView.	switchView _ self buildInstanceClassSwitchView.	switchView borderWidth: 1.	topView addSubView: switchView below: classListView.	messageCategoryListView _ PluggableListView on: self		list: #messageCategoryList		selected: #messageCategoryListIndex		changeSelected: #messageCategoryListIndex:		menu: #messageCategoryMenu:.	messageCategoryListView window: (0 @ 0 extent: 50 @ 70).	topView addSubView: messageCategoryListView toRightOf: classListView.	messageListView _ PluggableListView on: self		list: #messageList		selected: #messageListIndex		changeSelected: #messageListIndex:		menu: #messageListMenu:shifted:		keystroke: #messageListKey:from:.	messageListView window: (0 @ 0 extent: 50 @ 70).	topView addSubView: messageListView toRightOf: messageCategoryListView.	browserCodeView _ PluggableTextView on: self 			text: #contents accept: #contents:notifying:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	browserCodeView window: (0@0 extent: 200@110).	topView addSubView: browserCodeView below: systemCategoryListView.	aString ifNotNil: [browserCodeView editString: aString.			browserCodeView hasUnacceptedEdits: true].	^ topView! !!MorphicModel methodsFor: 'initialization' stamp: 'di 5/16/1998 17:08'!delete	(model isKindOf: MorphicModel) ifFalse: [^ super delete].	(PopUpMenu confirm:'Shall I remove the slot ', slotName, 'along with all associated methods?') ifTrue: [		(model class selectors select: [:s | s beginsWith: slotName])			do: [:s | model class removeSelector: s].		(model class instVarNames includes: slotName)			ifTrue: [model class removeInstVarName: slotName].	] ifFalse: [		(PopUpMenu confirm:'...but should I at least dismiss this morph?[choose no to leave everything unchanged]')			ifFalse: [^ self]].	super delete.! !!ComponentLikeModel methodsFor: 'components' stamp: 'di 5/16/1998 16:36'!delete	(model isKindOf: Component) ifTrue: [^ self deleteComponent].	(model isKindOf: MorphicModel) ifFalse: [^ super delete].	(PopUpMenu confirm:'Shall I remove the slot ', slotName, 'along with all associated methods?') ifTrue: [		(model class selectors select: [:s | s beginsWith: slotName])			do: [:s | model class removeSelector: s].		(model class instVarNames includes: slotName)			ifTrue: [model class removeInstVarName: slotName].	] ifFalse: [		(PopUpMenu confirm:'...but should I at least dismiss this morph?[choose no to leave everything unchanged]')			ifFalse: [^ self]].	super delete.! !!SystemWindow reorganize!('initialization' initialize updateIfOld)('label' label labelHeight setLabel:)('open/close' collapseOrExpand delete openInMVC openInMVCExtent: openInWorld openInWorldExtent:)('top window' activate activeOnlyOnTop activeOnlyOnTop: handlesMouseDown: isActive mouseDown: passivate)('geometry' extent: justDroppedInto:event:)('panes' addMorph:frame: panelRect)('stepping' step stepTime wantsSteps)!!SystemWindow methodsFor: 'initialization' stamp: 'di 5/16/1998 14:33'!initialize	| aFont |	super initialize.	isCollapsed _ false.	paneMorphs _ Array new.	paneRects _ Array new.	borderColor _ #raised.	borderWidth _ 1.	color _ Color black.	aFont _ Preferences fontForScriptorButtons.	stripes _ Array with: (RectangleMorph newBounds: bounds)  "see extent:"				with: (RectangleMorph newBounds: bounds).	self addMorph: (stripes first borderWidth: 1).	self addMorph: (stripes second borderWidth: 2).	self addMorph: (label _ StringMorph new contents: labelString;			font: ((TextStyle default fontAt: 2) emphasized: 1)).	self addMorph: (closeBox _ SimpleButtonMorph new borderWidth: 0;			label: 'X' font: aFont; color: Color transparent;			actionSelector: #delete; target: self; extent: 16@16).	self addMorph: (collapseBox _ SimpleButtonMorph new borderWidth: 0;			label: 'O' font: aFont; color: Color transparent;			actionSelector: #collapseOrExpand; target: self; extent: 16@16).	self extent: 300@200! !!SystemWindow methodsFor: 'initialization' stamp: 'di 5/16/1998 14:32'!updateIfOld  "SystemWindow allInstancesDo: [:w | w updateIfOld]"	| panelRect |	stripes ifNil:		[stripes _ Array with: (RectangleMorph newBounds: bounds)				with: (RectangleMorph newBounds: bounds).		submorphs _ submorphs , stripes reversed].	paneMorphs _ submorphs copyFrom: 1 to: submorphs size-5.	panelRect _ self panelRect.	paneRects _ paneMorphs collect:		[:m | (m bounds translateBy: panelRect topLeft negated)				scaleBy: (1.0/panelRect width)@(1.0/panelRect height)].	collapseBox actionSelector: #collapseOrExpand.	fullFrame _ self bounds.	isCollapsed _ false.	self extent: self extent.  "Cause layout of stripes etc."! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/16/1998 17:03'!collapseOrExpand	isCollapsed	ifTrue:		["Expand -- restore panes to morphics structure"		isCollapsed _ false.		paneMorphs reverseDo: [:m | self addMorph: m].		super bounds: fullFrame]	ifFalse:		["Collapse -- remove panes from morphics structure"		isCollapsed _ true.		paneMorphs do: [:m | m delete; releaseCachedState].		collapsedFrame			ifNil:	[self extent: (label width + 50) @ (self labelHeight + 2).					self world primaryHand attachMorph: self]			ifNotNil: [super bounds: collapsedFrame]]! !!SystemWindow methodsFor: 'geometry' stamp: 'di 5/16/1998 17:02'!extent: newExtent	| inner panelRect labelRect paneColor |	super extent: newExtent.	inner _ self innerBounds.	labelRect _ inner withHeight: self labelHeight.	panelRect _ self panelRect.	paneColor _ Color perform: model defaultBackgroundColor.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	stripes second color: paneColor;			borderColor: stripes second color darker.	stripes first color: stripes second borderColor darker;			borderColor: stripes first color darker.	closeBox align: closeBox topLeft with: inner topLeft + (4@0).	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label align: label bounds topCenter with: inner topCenter.	paneMorphs with: paneRects do:		[:m :frame |  m color: paneColor.		m bounds: (((frame scaleBy: panelRect extent) translateBy: panelRect topLeft))].	isCollapsed		ifTrue: [collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds].! !!SystemWindow methodsFor: 'geometry' stamp: 'di 5/16/1998 16:26'!justDroppedInto: aMorph event: anEvent	isCollapsed		ifTrue: [self position: ((self position max: 0@0) grid: 8@8).				collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds]! !!SystemWindow methodsFor: 'panes' stamp: 'di 5/16/1998 14:01'!addMorph: aMorph frame: relFrame	| panelRect |	self addMorph: aMorph.	paneMorphs _ paneMorphs copyReplaceFrom: 1 to: 0 with: (Array with: aMorph).	paneRects _ paneRects copyReplaceFrom: 1 to: 0 with: (Array with: relFrame).	panelRect _ self panelRect.	aMorph borderWidth: 1;		color: (Color perform: model defaultBackgroundColor);		bounds: ((relFrame scaleBy: panelRect extent) translateBy: panelRect topLeft)! !MorphicModel removeSelector: #beNotZero:!SystemWindow removeSelector: #paneColor:!SystemWindow removeSelector: #paneMorphs!SystemWindow allInstancesDo: [:w | w updateIfOld]!