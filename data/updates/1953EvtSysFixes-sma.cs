'From Squeak2.8alpha of 4 February 2000 [latest update: #1919] on 11 March 2000 at 9:01:42 pm'!"Change Set:		01EvtSysFixes-smaDate:			11 March 2000Author:			Stefan Matthias AustFixes a stupid bug, adds EventModel class and some class comments."!Object subclass: #EventModel	instanceVariableNames: 'myEvents '	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Objects'!!EventModel commentStamp: 'sma 3/11/2000 10:42' prior: 0!This is an abstract superclass for models which want to use the #when:send:to: event system in an efficient way. Instances of this class keep their own list of event symbols and registered events instead of using the global class variable EventsFields in class Object.Structure: myEvents		Dictionary -- set of event symbols and registered listeners!!EventModel methodsFor: 'events' stamp: 'sma 3/11/2000 10:37'!myEvents	^ myEvents! !!EventModel methodsFor: 'events' stamp: 'sma 3/11/2000 10:37'!myEvents: aDictionaryOrNil	myEvents _ aDictionaryOrNil! !!MessageSend commentStamp: 'sma 3/11/2000 10:48' prior: 0!Instances of MessageSend encapsulate message sends to objects. Arguments can be either predefined or supplied when the message send is performed. MessageSends are used to implement the #when:send:to: event system.Use #value to perform a message send with its predefined arguments and #valueWithArguments: if additonal arguments have to supplied.Structure: receiver		Object -- object receiving the message send selector		Symbol -- message selector arguments		Array -- bound arguments!!MessageSend methodsFor: 'comparing' stamp: 'sma 3/11/2000 10:35'!hash	^ receiver hash bitXor: selector hash! !