'From Squeak 2.3 beta of Nov 25, 1998 on 7 January 1999 at 8:51:19 am'!"Change Set:		UncacheCurvesDate:			7 January 1999Author:			Your NameCauses Curves to release their Float coefficients and to recompute them only as needed.  This saves space in filing as well as for any inactive curves in an image."!!CurveMorph methodsFor: 'private' stamp: 'di 1/6/1999 21:59'!coefficients	"Compute an array for the coefficients.  This is copied from Flegal's old	code in the Spline class."	| length extras verts |	coefficients ifNotNil: [^ coefficients].	verts _ closed ifTrue: [vertices copyWith: vertices first]				ifFalse: [vertices].	length _ verts size.	extras _ 0.	coefficients _ Array new: 8.	1 to: 8 do: [:i | coefficients at: i put: (Array new: length + extras)].	1 to: 5 by: 4 do: 		[:k | 		1 to: length do:			[:i | (coefficients at: k)					at: i put: (k = 1						ifTrue: [(verts at: i) x asFloat]						ifFalse: [(verts at: i) y asFloat])].			1 to: extras do: [:i | (coefficients at: k)					at: length + i put: ((coefficients at: k)						at: i + 1)].			self derivs: (coefficients at: k)				first: (coefficients at: k + 1)				second: (coefficients at: k + 2)				third: (coefficients at: k + 3)].	extras > 0 		ifTrue: [1 to: 8 do: 					[:i | 					coefficients at: i put: ((coefficients at: i)											copyFrom: 2 to: length + 1)]].	^ coefficients! !!CurveMorph methodsFor: 'private' stamp: 'di 1/6/1999 22:03'!curveBounds	"Compute the bounds from actual curve traversal, with leeway for borderWidth.	Also note the next-to-first and next-to-last points for arrow directions."	| curveBounds |	curveBounds _ vertices first corner: vertices last.	coefficients _ nil.  "Force recomputation"	ntfPoint _ nil.	self lineSegmentsDo:		[:p1 :p2 | ntfPoint == nil ifTrue: [ntfPoint _ p2 asIntegerPoint].		curveBounds _ curveBounds encompass: p2 asIntegerPoint.		ntlPoint _ p1 asIntegerPoint].	^ curveBounds expandBy: borderWidth+1//2! !!CurveMorph methodsFor: 'private' stamp: 'di 1/6/1999 22:01'!lineSegmentsDo: endPointsBlock	"Emit a sequence of line segments into endPointsBlock to approximate this spline."	| n t x y x1 x2 x3 y1 y2 y3 beginPoint endPoint coeffs |	vertices size < 1 ifTrue: [^ self].	coeffs _ self coefficients.	beginPoint _ (x _ (coeffs at: 1) at: 1) @ (y _ (coeffs at: 5) at: 1).	1 to: (coeffs at: 1) size - 1 do: 		[:i |  "taylor series coeffs"		x1 _ (coeffs at: 2) at: i.		y1 _ (coeffs at: 6) at: i.		x2 _ ((coeffs at: 3) at: i) / 2.0.		y2 _ ((coeffs at: 7) at: i) / 2.0.		x3 _ ((coeffs at: 4) at: i) / 6.0.		y3 _ ((coeffs at: 8) at: i) / 6.0.		"guess n"		n _ 5 max: (x2 abs + y2 abs * 2.0 + ((coeffs at: 3) at: i+1) abs									+ ((coeffs at: 7) at: i+1) abs / 100.0) rounded.		1 to: n - 1 do: 			[:j | 			t _ j asFloat / n.			endPoint _ (x3 * t + x2 * t + x1 * t + x) @ (y3 * t + y2 * t + y1 * t + y).			endPointsBlock value: beginPoint							value: endPoint.			beginPoint _ endPoint].		endPoint _ (x _ (coeffs at: 1) at: i+1) @ (y _ (coeffs at: 5) at: i+1).		endPointsBlock value: beginPoint						value: endPoint.		beginPoint _ endPoint]! !!CurveMorph methodsFor: 'private' stamp: 'di 1/6/1999 22:04'!privateMoveBy: delta	super privateMoveBy: delta.	coefficients _ nil.  "Force recomputation"! !!CurveMorph methodsFor: 'private' stamp: 'di 1/6/1999 22:07'!releaseCachedState	super releaseCachedState.	coefficients _ nil.! !