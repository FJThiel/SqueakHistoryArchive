'From Squeak 2.4b of April 23, 1999 on 10 May 1999 at 5:41:30 pm'!"Change Set:		TwoFixesDate:			10 May 1999Author:			TwoMarksHerewith Mark Guzdial's fix for FTPSocket readAheadand Mark Schwenk's fix for TextFontReference ="!!FTPSocket methodsFor: 'as yet unclassified' stamp: 'mjg 5/7/1999 13:54'!responseOK	"Get the response from the server.  If 1xx, in progress.  If 2xx,success.  If 3xx, intermediate point successful.  4xx, transient error.5xx, true error.  If 4 or 5, put up dialog and kill the socket.  Returntrue if OK, the error string if not."	| resp what all |	readAhead isNil ifTrue: [readAhead _ ''].	readAhead size > 0		ifTrue: [resp _ readAhead removeFirst]	"response alreadycame in"		ifFalse: [			all _ self getResponseUpTo: CrLf.			resp _ all at: 1.	"150 Opening binary modedata conn"			readAhead _ (all at: 3) findBetweenSubStrs: (Arraywith: CrLf)].	"Transcript show: resp; cr."	resp size > 0		ifTrue: [((resp at: 1) == $5) | ((resp at: 1) == $4)ifFalse: [^ true]]  "All is well"		ifFalse: [resp _ '[timeout]'].	what _ (PopUpMenu labels: 'OK\ debug ' withCRs)		startUpWithCaption: 'Server reported this error:\' withCRs,resp.	what = 2 ifTrue: [self halt].	self destroy.	^ resp! !!ServerDirectory methodsFor: 'updates' stamp: 'mjg 5/7/1999 14:08'!checkServers	"Check that all servers are up and have the latest Updates.list.Warn user when can't write to a server that can still be read."	| final fileSize this serverList theUpdates decided myUpdates abortstrm res |	serverList _ group			ifNil: [Array with: self]			ifNotNil: [group value].	final _ OrderedCollection new.	fileSize _ 0.  theUpdates _ ''.	"list of updates"	abort _ false.	serverList do: [:aServer |		decided _ false.		this _ aServer getFileNamed: 'updates.list'.		(this = #error:) ifTrue: [^'' "Not found"].		(this class == String) &			((aServer altUrl isNil ifTrue: [''] ifFalse:[aServer altUrl]) size > 0) ifTrue: ["no ftp"			strm _ HTTPSocket httpGet: aServer altUrl,'updates/updates.list'						accept:'application/octet-stream'.			strm class == String				ifTrue: [res _ (PopUpMenu						labels: 'Install eventhough not visible\Cancel entire update' withCRs)						startUpWithCaption: 'Server', aServer moniker,						' is a weird state.\Youcannot store, but users can get updates.\If you store on other servers, thefile will not be visible.\Strongly advise that you Cancel.' withCRs]				ifFalse: [					res _ (PopUpMenu labels: 'Installon others\Cancel entire update' withCRs)							startUpWithCaption:'Server ', aServer moniker,							' is unavailable\'withCRs, this].			abort _ res ~= 1.			decided _ true].		decided not & (this size > fileSize) ifTrue: ["new has alonger update.list"			fileSize _ this size.			final do: [:each | abort _ self outOfDate: each].			(final _ OrderedCollection new) add: aServer.			theUpdates _ this contentsOfEntireFile.			decided _ true].		decided not & (this size < fileSize) ifTrue: [abort _ selfoutOfDate: aServer.  decided _ true].		decided not ifTrue: [myUpdates _ this contentsOfEntireFile.			myUpdates = theUpdates				ifTrue: [final add: aServer]				ifFalse: [abort _ self outOfDate: this]].		abort ifTrue: [^ Array new].		].	^ final! !!TextFontReference methodsFor: 'comparing' stamp: 'mas 5/7/1999 06:20'!= other 	^ (other class == self class) 		and: [other font == font]! !