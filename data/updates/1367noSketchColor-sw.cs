'From Squeak 2.4c of May 10, 1999 on 2 August 1999 at 6:02:46 pm'!"Change Set:		noSketchColor-swDate:			2 August 1999Author:			Scott WallaceIf an object does not have any Bordered costume, do not offer 'borderColor' and 'borderWidth' in its Viewers.Additionally, if an object has only Sketch costumes, do not offer 'color'."!!Player methodsFor: 'costume' stamp: 'sw 8/2/1999 17:53'!hasAnyBorderedCostumes	"Answer true if any costumes of the receiver are BorderedMorph descendents"	self costumesDo:		[:cost | (cost isKindOf: BorderedMorph) ifTrue: [^ true]].	^ false! !!Player methodsFor: 'costume' stamp: 'sw 8/2/1999 17:46'!hasOnlySketchCostumes	"Answer true if the only costumes assocaited with this Player are SketchMorph costumes"	(costume renderedMorph isKindOf: SketchMorph) ifFalse: [^ false].	costumes ifNotNil: [costumes do:		[:cost | (cost isKindOf: SketchMorph) ifFalse: [^ false]]].	^ true! !!Player methodsFor: 'slots-kernel' stamp: 'sw 8/2/1999 17:43'!tilePhrasesSpecsForCategory: aCategory	"Return an array of slot and script names and info for use in a viewer on the receiver.  These can be of two flavors - script and slot.		(slot		heading		number				readWrite	getHeading		setHeading:)		(script		command 	wearCostumeOf: 	player)"	| aList nameString categoryString |	categoryString _ aCategory asString.	(categoryString = 'instance variables') ifTrue:		[^ self slotNames collect: [:aName |		nameString _ aName asString capitalized.		Array			with:	#slot			with: 	aName 								"name"			with: 	(self typeForSlot: aName asSymbol)	"type"			with:	#readWrite							"r/w"			with:	('get', nameString) asSymbol		"get selector"			with:	('set', nameString, ':') asSymbol]].	"set selector"	(categoryString = 'scripts') ifTrue:		[^ self tileScriptCommands].	self hasCostumeThatIsAWorld ifTrue: [^ self worldTilePhrasesSpecsForCategory: aCategory].	aList _ ScriptingSystem categoryElementsFor: categoryString.	aList ifNil: [self error: 'oops, missing category info for ', categoryString].	aList _ self usablePhraseSpecsIn: aList.	^ aList collect: [:aPair | self phraseSpecFor: aPair]! !!Player methodsFor: 'slots-kernel' stamp: 'sw 8/2/1999 17:57'!usablePhraseSpecsIn: aListOfPairs	"Filter the list given by aListOfPairs if appropriate"	self hasAnyBorderedCostumes ifTrue: [^ aListOfPairs].	^ self hasOnlySketchCostumes		ifTrue:			[aListOfPairs select: [:pr | (#(color borderColor borderWidth) includes: pr second) not]]		ifFalse:			[aListOfPairs select: [:pr | (#(borderColor borderWidth) includes: pr second) not]]! !