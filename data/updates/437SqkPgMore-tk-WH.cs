'From Squeak 2.2 of Sept 23, 1998 on 24 November 1998 at 10:44:59 pm'!!BookMorph methodsFor: 'menu' stamp: 'tk 11/24/1998 22:35'!getStemUrl	"Try to find the old place where this book was stored.  Confirm with the user.  Else ask for new place."| initial pg url ll |initial _ ''.(pg _ currentPage valueOfProperty: #SqueakPage) ifNotNil: [	pg contentsMorph == currentPage ifTrue: [		initial _ pg url]].	"If this page has a url"pages doWithIndex: [:aPage :ind |	initial size = 0 ifTrue: [		aPage isInMemory ifTrue: [			(pg _ aPage valueOfProperty: #SqueakPage) ifNotNil: [				initial _ pg url]]]].	"any page with a url"initial size = 0 ifTrue: [initial _ 'ftp://server/books/myBook/page1.sp'].url _ FillInTheBlank 		request: 'url of the place to store a typical page in this book.Must begin with file:// or ftp://' 		initialAnswer: initial.ll _ url findLast: [:char | char == $.].ll = 0 ifFalse: [url _ url copyFrom: 1 to: ll-1].	"remove .sp"^ (url stemAndNumericSuffix) at: 1		"remove trailing number"! !!FileUrl methodsFor: 'access' stamp: 'tk 11/24/1998 14:59'!pathDirString	"Path to directory as url, using slash as delimiter"	^ String streamContents: [ :s |		1 to: self path size - 1 do: [ :ii |			s nextPutAll: (path at: ii); nextPut: $/			 ] ]! !!RemoteFileStream methodsFor: 'as yet unclassified' stamp: 'tk 11/24/1998 22:43'!padToEndWith: aChar	"On the Mac, files do not truncate, so pad it with a harmless character.  But Remote FTP files always replace, so no need to pad."	self atEnd ifFalse: [self inform: 'Why is this stream not at its end?'].! !!ServerDirectory methodsFor: 'accessing' stamp: 'tk 11/24/1998 15:00'!directory	"String of part of url that is the directory. Has slashes as separators"	urlObject ifNotNil: [^ urlObject pathDirString].	^ directory! !!ServerDirectory methodsFor: 'accessing' stamp: 'tk 11/24/1998 22:20'!fullPath: serverAndDirectory	"Parse and save a full path.  Convention:  if ftp://user@server/dir, then dir is relative to user's directory.  dir has no slash at beginning.  If ftp://server/dir, then dir is absolute to top of machine, give dir a slash at the beginning."	| start bare sz userAndServer both slash score match best sd |	bare _ serverAndDirectory.	sz _ serverAndDirectory size.	bare size > 0 ifTrue: [ 		start _ (bare copyFrom: 1 to: (8 min: sz)) asLowercase.		(start beginsWith: 'ftp:') 			ifTrue: [type _ #ftp.				bare _ bare copyFrom: (7 min: sz) to: bare size].		(start beginsWith: 'http:') 			ifTrue: [type _ #http.				bare _ bare copyFrom: (8 min: sz) to: serverAndDirectory size].		((start beginsWith: 'file:') or: [type == #file])			ifTrue: [type _ #file.				urlObject _ FileUrl absoluteFromText: serverAndDirectory.				^ self]].	userAndServer _ bare copyUpTo: self pathNameDelimiter.	both _ userAndServer findTokens: '@'.	slash _ both size.	"absolute = 1, relative = 2"	server _ both last.	both size > 1 ifTrue: [user _ both at: 1].	bare size > (userAndServer size + 1) 		ifTrue: [directory _ bare copyFrom: userAndServer size + slash to: bare size]		ifFalse: [directory _ ''].	"If this server is already known, copy in its userName and password"	type == #ftp ifFalse: [^ self].	score _ -1.	ServerDirectory serverNames do: [:name |		sd _ ServerDirectory serverNamed: name.		server = sd server ifTrue: [			match _ directory asLowercase charactersExactlyMatching: sd directory asLowercase.			match > score ifTrue: [score _ match.  best _ sd]]].	best ifNotNil: [		user _ best user.  self password: best password].! !!ServerDirectory methodsFor: 'accessing' stamp: 'tk 11/24/1998 18:18'!server	^ server! !!ServerDirectory methodsFor: 'accessing' stamp: 'tk 11/24/1998 22:16'!user	^ user! !!ServerFile methodsFor: 'as yet unclassified' stamp: 'tk 11/24/1998 15:01'!fileName	"should this be local or as in a url?"	urlObject ifNotNil: [^ urlObject path last].	"path last encodeForHTTP ?"	^ fileName! !!ServerFile methodsFor: 'as yet unclassified' stamp: 'tk 11/24/1998 14:45'!fileName: aStringurlObject ~~ nil  "type == #file" 	ifTrue: [urlObject path at: urlObject path size put: aString]	ifFalse: [fileName _ aString]! !!SqueakPageCache class methodsFor: 'class initialization' stamp: 'tk 11/24/1998 14:53'!initialize	"SqueakPageCache initialize"	GlobalPolicy _ #neverWrite.	PageCache _ Dictionary new: 100.		"forgets urls of pages, but ObjectOuts still remember them"! !!SqueakPageCache class methodsFor: 'cache access' stamp: 'tk 11/24/1998 14:52'!generateURL	"Generate an unused URL for an in-memory page."	"SqueakPageCache generateURL"	| sd |	sd _ ServerFile new on: 'file:./'.	sd fileName: 'page1.sp'.	^ SqueakPage new urlNoOverwrite: sd pathForFile! !Object subclass: #SqueakPageCache	instanceVariableNames: ''	classVariableNames: 'GlobalPolicy PageCache '	poolDictionaries: ''	category: 'Morphic-WebBooks'!SqueakPageCache initialize!