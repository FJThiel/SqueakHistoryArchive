'From Squeak2.9alpha of 12 June 2000 [latest update: #3390] on 2 February 2001 at 3:50:41 pm'!"Change Set:		PDAFixesDate:			2 February 2001Author:			Dan IngallsFixes a problem with recurrence symbols for recurring events."!!PDA methodsFor: 'schedule' stamp: 'di 2/1/2001 09:23'!addEvent	| newEvent |	newEvent _ PDAEvent new key: self categorySelected; date: date;						time: (Time readFromString: '7 am');						description: 'new event'.	allEvents _ allEvents copyWith: newEvent.	self currentItem: newEvent.	self updateScheduleList! !!PDA methodsFor: 'schedule' stamp: 'di 2/1/2001 10:00'!addRecurringEvent	| newEvent |	newEvent _ PDARecurringEvent new key: self categorySelected;						firstDate: date; recurrence: PDARecurringEvent chooseRecurrence;						description: 'recurring event'.	newEvent key = 'recurring' ifTrue: [newEvent key: 'all'].	newEvent recurrence == #eachDay ifTrue: [newEvent lastDate: (date addDays: 1)].	recurringEvents _ recurringEvents copyWith: newEvent.	self currentItem: newEvent.	self updateScheduleList! !!PDA methodsFor: 'schedule' stamp: 'di 2/1/2001 09:28'!scheduleMenu: aMenu	date ifNil: [^ aMenu add: 'select a date' target: self selector: #yourself.].	self categorySelected ~= 'recurring' ifTrue:		[aMenu add: 'add new event' target: self selector: #addEvent].	aMenu add: 'add recurring event' target: self selector: #addRecurringEvent.	scheduleListIndex > 0 ifTrue:		[(currentItem isKindOf: PDARecurringEvent) ifTrue:			[aMenu add: 'declare last date' target: self selector: #declareLastDate].		aMenu add: 'remove event' target: self selector: #removeEvent].	^ aMenu! !!PDARecurringEvent methodsFor: 'as yet unclassified' stamp: 'di 2/1/2001 09:09'!readField: fieldName fromString: aString fields: sharedFields base: instVarBase	"Overridden to check for valid recurrence symbol"	fieldName = 'recurrence' ifTrue: [^ self recurrence: aString withBlanksTrimmed asSymbol].	^ super readField: fieldName fromString: aString fields: sharedFields base: instVarBase! !!PDARecurringEvent methodsFor: 'as yet unclassified' stamp: 'di 2/1/2001 09:53'!recurrence	"Return the value of recurrence"	^ recurrence! !!PDARecurringEvent methodsFor: 'as yet unclassified' stamp: 'di 2/1/2001 09:33'!recurrence: rSymbol	(self validRecurrenceSymbols includes: rSymbol)		ifFalse: [^ self error: 'unrecognized recurrence symbol: , rSymbol'].	recurrence _ rSymbol! !!PDARecurringEvent methodsFor: 'as yet unclassified' stamp: 'di 2/1/2001 09:32'!validRecurrenceSymbols	^ #(eachDay dayOfWeek dayOfMonth dateOfYear nthWeekdayOfMonth nthWeekdayOfMonthEachYear)! !!PDARecurringEvent class methodsFor: 'as yet unclassified' stamp: 'di 2/1/2001 09:44'!chooseRecurrence	^ (CustomMenu selections: self basicNew validRecurrenceSymbols) startUp		ifNil: [#dateOfYear]! !PDARecurringEvent removeSelector: #startDate:!PDA class removeSelector: #zork!