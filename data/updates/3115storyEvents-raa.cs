'From Squeak2.9alpha of 17 July 2000 [latest update: #3172] on 13 December 2000 at 4:25:39 pm'!"Change Set:		storyEventsDate:			13 December 2000Author:			Bob Arningadditional piano roll features:- an EventRecorderMorph may now be dropped into a piano roll and will trigger at the appropriate time- a 'pause' marker is available in the ScorePlayerMorph menu (the <> button). Dropping one of these into a piano roll will pause the player at that point and place a 'continue' button in the world for the user to resume when ready."!!EventRecorderMorph methodsFor: 'accessing' stamp: 'RAA 12/13/2000 12:51'!recTime	self flag: #bob.		"not sent and no longer working"	"| ms |	ms _ 0.	tape do:		[:cell | ms _ ms + cell key].	^ String streamContents:		[:stream | (Time fromSeconds: ms // 1000) print24: true on: stream]"! !!EventRecorderMorph methodsFor: 'piano rolls' stamp: 'RAA 12/13/2000 13:07'!addMorphsTo: morphList pianoRoll: pianoRoll eventTime: t betweenTime: leftTime and: rightTime	| startX myDurationInTicks endX |	startX _ pianoRoll xForTime: t.	myDurationInTicks _ pianoRoll scorePlayer ticksForMSecs: self myDurationInMS.	t > rightTime ifTrue: [^ self].  	(t + myDurationInTicks) < leftTime ifTrue: [^ self].	endX _ pianoRoll xForTime: t + myDurationInTicks.	morphList add: 		(self hResizing: #spaceFill; left: startX; width: endX - startX).! !!EventRecorderMorph methodsFor: 'piano rolls' stamp: 'RAA 12/13/2000 12:40'!encounteredAtTime: ticks inScorePlayer: scorePlayer atIndex: index inEventTrack: track secsPerTick: secsPerTick	self play.! !!EventRecorderMorph methodsFor: 'piano rolls' stamp: 'RAA 12/13/2000 13:07'!justDroppedIntoPianoRoll: newOwner event: evt		| startX lengthInTicks endX startTimeInScore endTimeInScore |	super justDroppedIntoPianoRoll: newOwner event: evt.	startTimeInScore _ newOwner timeForX: self left.	lengthInTicks _ newOwner scorePlayer ticksForMSecs: self myDurationInMS.	endTimeInScore _ startTimeInScore + lengthInTicks.	endTimeInScore > newOwner scorePlayer durationInTicks ifTrue:		[newOwner scorePlayer updateDuration].	startX _ newOwner xForTime: startTimeInScore.	endX _ newOwner xForTime: endTimeInScore.	self width: endX - startX.! !!EventRecorderMorph methodsFor: 'piano rolls' stamp: 'RAA 12/13/2000 13:07'!myDurationInMS	^tape isEmptyOrNil ifTrue: [		10	] ifFalse: [		tape last timeStamp - tape first timeStamp	]! !!ScorePlayerMorph methodsFor: 'layout' stamp: 'RAA 12/13/2000 16:15'!showResumeButtonInTheWorld	| w |	WorldState addDeferredUIMessage: [		w _ self world ifNil: [^self].		w addMorphFront: (self standaloneResumeButton position: (w right - 100) @ (w top + 10)).		scorePlayer pause.	]! !!ScorePlayerMorph methodsFor: 'layout' stamp: 'RAA 12/13/2000 15:35'!standaloneResumeButton	| r |	r _ AlignmentMorph newRow.	r color: Color red; borderWidth: 0; layoutInset: 6; useRoundedCorners.	r hResizing: #shrinkWrap; vResizing: #shrinkWrap; extent: 5@5.	r addMorphBack: (		SimpleButtonMorph new			target: [				scorePlayer resumePlaying.				r delete			];			borderColor: #raised;			borderWidth: 2;			color: Color green;			label: 'Continue';			actionSelector: #value	).	r setBalloonText: 'Continue playing a paused presentation'.	^r! !!ScorePlayerMorph methodsFor: 'menu' stamp: 'RAA 12/13/2000 16:24'!invokeMenu	"Invoke a menu of additonal functions for this WaveEditor."	| aMenu |	aMenu _ MenuMorph new defaultTarget: self.	aMenu add: 'reload instruments' target: AbstractSound selector: #updateScorePlayers.	aMenu add: 'open a MIDI file' action: #openMIDIFile.	scorePlayer midiPort		ifNil: [			aMenu add: 'play via MIDI' action: #openMIDIPort]		ifNotNil: [			aMenu add: 'play via built in synth' action: #closeMIDIPort.			aMenu add: 'new MIDI controller' action: #makeMIDIController:].	aMenu addLine.	aMenu add: 'make a pause marker' action: #makeAPauseEvent:.	aMenu popUpInWorld: self world.! !!ScorePlayerMorph methodsFor: 'menu' stamp: 'RAA 12/13/2000 15:01'!makeAPauseEvent: evt	| newWidget |	newWidget _ AlignmentMorph newRow.	newWidget 		color: Color orange; 		borderWidth: 0; 		layoutInset: 0;		hResizing: #shrinkWrap; 		vResizing: #shrinkWrap; 		extent: 5@5;		addMorph: (StringMorph contents: '[pause]') lock;		addMouseUpActionWith: (			MessageSend receiver: self selector: #showResumeButtonInTheWorld		).	evt hand attachMorph: newWidget.! !ScorePlayerMorph removeSelector: #makeResumeOnlyControls!