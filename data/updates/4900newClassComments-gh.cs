'From Squeak3.3alpha of 30 January 2002 [latest update: #4843] on 2 May 2002 at 8:40:40 pm'!"Change Set:		NewClassCommentsDate:			2 May 2002Author:			Gšran HultgrenAs a crusader for more class comments this changeset has comments for Month, AssertionFailure and AttemptToWriteReadOnlyGlobal. Hey, I take the harder ones later... :-). One trivial class method also added in Month for instance creation."!!AssertionFailure commentStamp: 'gh 5/2/2002 20:29' prior: 0!AsssertionFailure is the exception signaled from Object>>assert: when the assertion block evaluates to false.!!AttemptToWriteReadOnlyGlobal commentStamp: 'gh 5/2/2002 20:26' prior: 0!This is a resumable error you get if you try to assign a readonly variable a value.Name definitions in the module system can be read only and are then created using instances of ReadOnlyVariableBinding instead of Association.See also LookupKey>>beReadWriteBinding and LookupKey>>beReadOnlyBinding.!!Month commentStamp: 'gh 5/2/2002 20:09' prior: 0!An instance of Month represents one particular month in time, for example "October 1991".Currently the class Month is a subclass of Date and the julianDayNumber is always the first day of the month it represents.You can easily create a Month from a Date using #fromDate: as in:	Month fromDate: Date todayA specific month can also be created using variants like these, do a print-it on each line:	Month month: 'oct' year: 1991	Month month: 'OctOber' year: 1991	Month month: 10 year: 1991	Month readFrom: (ReadStream on: 'October 1991'If you have an instance of Month you can get the next and previous Month using #next and #previous.Note: Month inherits Date quite naturally implementationwise but it it does not really reflect an "IS A" relationship. This design might change in the future, also be careful with the inherited methods - for example, what do you have if you add a day to a Month using #addDays: ?.!!Month class methodsFor: 'instance creation' stamp: 'gh 5/2/2002 20:39'!month: month year: year	"Create a Month for the given <year> and <month>.	<month> may be a number or a String with the	name of the month. <year> should be with 4 digits."	^self		newDay: 1		month: month		year: year! !