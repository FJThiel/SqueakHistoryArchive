'From Squeak3.1alpha of 28 February 2001 [latest update: #4119] on 2 June 2001 at 5:04:07 pm'!"Change Set:		PaintFeedback-arDate:			2 June 2001Author:			Andreas RaabMake viewers hide and scripts stop when we go into any kind of painting mode. Refactors these actions into PasteUp>>prepareToPaint."!!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'ar 6/2/2001 16:54'!repaintEntry	"Let the user enter into painting mode to repaint the item and save it back."	| aWorld bnds sketchEditor aPaintBox formToEdit |		(aWorld _ self world) assureNotPaintingElse: [^ self].	aWorld prepareToPaint.	aWorld displayWorld.	formToEdit _ formChoices at: currentIndex.	bnds _ (submorphs second boundsInWorld origin extent: formToEdit extent) intersect: aWorld bounds.	bnds _ (aWorld paintingBoundsAround: bnds center) merge: bnds.	sketchEditor _ SketchEditorMorph new.	aWorld addMorphFront: sketchEditor.	sketchEditor initializeFor: ((SketchMorph withForm: formToEdit) position: submorphs second positionInWorld)  inBounds: bnds pasteUpMorph: aWorld paintBoxPosition: bnds topRight.	sketchEditor		afterNewPicDo: [:aForm :aRect |			formChoices at: currentIndex put: aForm.			baseDictionary at: (entryNames at: currentIndex) put: aForm.			self updateThumbnail.			(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]] 		ifNoBits:			[(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]].	! !!PasteUpMorph methodsFor: 'painting' stamp: 'ar 6/2/2001 16:55'!paintBackground	| pic rect |	self world prepareToPaint.	pic _ self backgroundSketch.	pic ifNotNil: [pic editDrawingIn: self forBackground: true]		"need to resubmit it? (tck comment)"		ifNil: [rect _ self bounds.			pic _ self world drawingClass new form: 				(Form extent: rect extent depth: Display depth).			pic bounds: rect.			"self world addMorphBack: pic.  done below"			pic _ self backgroundSketch: pic.	"returns a different guy"			pic ifNotNil: [pic editDrawingIn: self forBackground: true]]! !!PasteUpMorph methodsFor: 'painting' stamp: 'ar 6/2/2001 16:54'!prepareToPaint	"We're about to start painting. Do a few preparations that make the system more responsive."	self hideViewerFlaps. "make room"	self stopRunningAll. "stop scripts"	self abandonAllHalos. "no more halos"! !!PasteUpMorph methodsFor: 'world menu' stamp: 'ar 6/2/2001 16:55'!makeNewDrawing: evt at: aPoint	| w newSketch newPlayer sketchEditor aPaintBox aPalette tfx whereToPresent rect ownerBeforeHack aPaintTab aWorld |	w _ self world.	w assureNotPaintingElse: [^ self].	rect _ self paintingBoundsAround: aPoint.	aPalette _ self standardPalette.	aPalette ifNotNil: [aPalette showNoPalette; layoutChanged].	w prepareToPaint.	newSketch _ self drawingClass new player: (newPlayer _ UnscriptedPlayer newUserInstance).	newPlayer costume: newSketch.	newSketch form: (Form extent: rect extent depth: w assuredCanvas depth).	newSketch bounds: rect.	sketchEditor _ SketchEditorMorph new.	w addMorphFront: sketchEditor.	sketchEditor initializeFor: newSketch inBounds: rect pasteUpMorph: self.	sketchEditor		afterNewPicDo: [:aForm :aRect |			whereToPresent _ self presenter.			newSketch form: aForm.			tfx _ self transformFrom: w.			newSketch position: (tfx globalPointToLocal: aRect origin).			newSketch rotationStyle: sketchEditor rotationStyle.			newSketch forwardDirection: sketchEditor forwardDirection.			ownerBeforeHack _ newSketch owner.	"about to break the invariant!!!!"			newSketch privateOwner: self. "temp for halo access"			newPlayer setHeading: sketchEditor forwardDirection.			(aPaintTab _ (aWorld _ self world) paintingFlapTab)				ifNotNil:[aPaintTab hideFlap]				ifNil:[(aPaintBox _ aWorld paintBox) ifNotNil:[aPaintBox delete]].			"Includes  newSketch rotationDegrees: sketchEditor forwardDirection."			newSketch privateOwner: ownerBeforeHack. "probably nil, but let's be certain"			self addMorphFront: newPlayer costume.			w startSteppingSubmorphsOf: newSketch.			whereToPresent drawingJustCompleted: newSketch]		 ifNoBits:[			(aPaintTab _ (aWorld _ self world) paintingFlapTab)				ifNotNil:[aPaintTab hideFlap]				ifNil:[(aPaintBox _ aWorld paintBox) ifNotNil:[aPaintBox delete]].			aPalette ifNotNil: [aPalette showNoPalette].]! !!SketchEditorMorph methodsFor: 'initialization' stamp: 'ar 6/2/2001 16:54'!initializeFor: aSketchMorph inBounds: boundsToUse pasteUpMorph: aPasteUpMorph	| aPaintBox newPaintBoxBounds worldBounds requiredWidth newOrigin aPosition aPal aTab paintBoxFullBounds |	(aTab _ self world paintingFlapTab) ifNotNil:		[aTab showFlap.		^ self initializeFor: aSketchMorph inBounds: boundsToUse pasteUpMorph: aPasteUpMorph paintBoxPosition: nil].	aPaintBox _ self world paintBox.	worldBounds _ self world bounds.	requiredWidth _ aPaintBox width.	aPosition _ (aPal _ aPasteUpMorph standardPalette)		ifNotNil:			[aPal showNoPalette.			aPal topRight + (aPaintBox width negated @ 0 "aPal tabsMorph height")]		ifNil:			[boundsToUse topRight].	newOrigin _ ((aPosition x  + requiredWidth <= worldBounds right) or: [Preferences unlimitedPaintArea])			ifTrue:  "will fit to right of aPasteUpMorph"				[aPosition]			ifFalse:  "won't fit to right, try left"				[boundsToUse topLeft - (requiredWidth @ 0)].	paintBoxFullBounds _ aPaintBox maxBounds.	paintBoxFullBounds _ (newOrigin - aPaintBox offsetFromMaxBounds) extent: 					paintBoxFullBounds extent.	newPaintBoxBounds _ paintBoxFullBounds translatedToBeWithin: worldBounds.		self initializeFor: aSketchMorph inBounds: boundsToUse 		pasteUpMorph: aPasteUpMorph 		paintBoxPosition: newPaintBoxBounds origin + aPaintBox offsetFromMaxBounds.! !!SketchMorph methodsFor: 'menu' stamp: 'ar 6/2/2001 16:55'!editDrawingIn: aPasteUpMorph forBackground: forBackground	| w bnds sketchEditor pal aPaintTab aWorld aPaintBox tfx |	self world assureNotPaintingElse: [^ self].	w _ aPasteUpMorph world.	w prepareToPaint.	w displayWorld.	self visible: false.	forBackground		ifTrue:			[bnds _ aPasteUpMorph boundsInWorld]		ifFalse:			[bnds _ (self boundsInWorld expandBy: (60 @ 60)).			bnds _ (aPasteUpMorph paintingBoundsAround: bnds center) merge: bnds].	sketchEditor _ SketchEditorMorph new.	forBackground ifTrue: [sketchEditor setProperty: #background toValue: true].	w addMorphFront: sketchEditor.	sketchEditor initializeFor: self inBounds: bnds pasteUpMorph: aPasteUpMorph.	sketchEditor		afterNewPicDo: [:aForm :aRect |			self visible: true.			self form: aForm.			tfx _ aPasteUpMorph transformFrom: aPasteUpMorph world.			self topRendererOrSelf position: (tfx globalPointToLocal: aRect origin).			self rotationStyle: sketchEditor rotationStyle.			self forwardDirection: sketchEditor forwardDirection.			(aPaintTab _ (aWorld _ self world) paintingFlapTab)				ifNotNil:[aPaintTab hideFlap]				ifNil:[(aPaintBox _ aWorld paintBox) ifNotNil:[aPaintBox delete]].			self presenter drawingJustCompleted: self.			forBackground ifTrue: [self goBehind]]  "shouldn't be necessary"		ifNoBits: ["If no bits drawn.  Must keep old pic.  Can't have no picture"			self visible: true.			aWorld _ self currentWorld.				"sometimes by now I'm no longer in a world myself, but we still need				 to get ahold of the world so that we can deal with the palette"			((pal _ aPasteUpMorph standardPalette) notNil and: [pal isInWorld])				ifTrue:					[(aPaintBox _ aWorld paintBox) ifNotNil: [aPaintBox delete].					pal viewMorph: self]				ifFalse:[					(aPaintTab _ (aWorld _ self world) paintingFlapTab)						ifNotNil:[aPaintTab hideFlap]						ifNil:[(aPaintBox _ aWorld paintBox) ifNotNil:[aPaintBox delete]]]]! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'ar 6/2/2001 16:59'!paintActor: anActor	self world prepareToPaint.	self mode: #paint.	backup _ anActor getTexturePointer deepCopy.	palette _ self world paintBox.	palette position: self position + ((self extent x + 100) @ 0); focusMorph: self.! !!WonderlandCameraMorph methodsFor: 'pooh' stamp: 'ar 6/2/2001 16:56'!strokeMode	self world prepareToPaint.	self clearStroke.	self mode: #stroke.	Cursor crossHair beCursor.	self removeHalo.! !