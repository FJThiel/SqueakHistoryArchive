'From Squeak 2.3 of January 14, 1999 on 16 February 1999 at 2:11:56 pm'!"Change Set:		browseConflicts-swDate:			16 February 1999Author:			Scott WallaceAdds a command to the change sorter allowing you to identify all methods in a given change set which also have a presence in any other change set.  Used in concert with the annotation pane (for which improvements are coming soon) and the versions facility, you can readily identify not only which methods have conflicts but where and what those conflicts are.Also supplies a method for inspecting a change set that was inadvertently omitted from the earlier chgSorterMenus update, and fixes a bug in the back-out-of-request to find-change-set, as per bug report and fix submitted by Bert Freudenberg, and a similar bug lingering in the same method arising when no matching class is found. "!!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 2/16/1999 13:15'!browseMethodConflicts	"Check to see if any other change set also holds changes to any methods in the selected change set; if so, open a browser on all such."	| aList aClass aSelector |	aList _ myChangeSet changedMessageListAugmented select:		[:aChange |			MessageSet parse: aChange toClassAndSelector: [:cls :sel | aClass _ cls.  aSelector _ sel].			(ChangeSorter allChangeSetsWithClass: aClass selector: aSelector) size > 1].	aList size == 0 ifTrue: [^ self inform: 'No other change set has changesfor any method in this change set.'].		MessageSet openMessageList: aList name: 'Methods in "', myChangeSet name, '" that are also in other change sets (', aList size printString, ')'	! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 2/16/1999 13:30'!findCngSet 	"Search for a changeSet by name.  Pop up a menu of all changeSets whose name contains the string entered by the user.  If only one matches, then the pop-up menu is bypassed"	| index pattern candidates |	self okToChange ifFalse: [^ self].	ChangeSet instanceCount > AllChangeSets size ifTrue: [self class gatherChangeSets].	pattern _ FillInTheBlank request: 'ChangeSet name or fragment?'.	pattern isEmpty ifTrue: [^ self].	candidates _ AllChangeSets select:			[:c | c name includesSubstring: pattern caseSensitive: false].	candidates size = 0 ifTrue: [^ self beep].	candidates size = 1 ifTrue:		[^ self showChangeSet: candidates first].	index _ (PopUpMenu labels: 		(candidates collect: [:each | each name]) asStringWithCr) startUp.	index = 0 ifFalse: [self showChangeSet: (candidates at: index)].! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 1/10/1999 01:01'!inspectChangeSet	"Open a message list browser on the new and changed methods in the current change set"	myChangeSet inspectWithLabel: 'Change set: ', myChangeSet name! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 2/16/1999 12:34'!shiftedChangeSetMenu: aMenu	^ aMenu labels: 'file into new...updateinspect change setrename change setbrowse method conflictsgo to change set''s projectclearmore...'		lines: #(7)		selections: #( fileIntoNewChangeSet update  inspectChangeSet rename browseMethodConflicts goToChangeSetsProject clearChangeSet unshiftedYellowButtonActivity)! !