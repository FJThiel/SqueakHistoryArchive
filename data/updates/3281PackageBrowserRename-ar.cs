'From Squeak2.9alpha of 13 June 2000 [latest update: #3346] on 31 January 2001 at 5:08:47 pm'!"Change Set:		PackageBrowserRename-arDate:			31 January 2001Author:			Andreas RaabRename former PackageBrowser to PackagePaneBrowser. I need the name 'PackageBrowser' for consistency in the work done for image splicing."!Smalltalk renameClassNamed: #PackageBrowser as: #PackagePaneBrowser!!Preferences class methodsFor: 'hard-coded prefs' stamp: 'ar 1/31/2001 17:06'!browseToolClass	^ Preferences browserShowsPackagePane		ifTrue:			[PackagePaneBrowser]		ifFalse:			[Browser]! !!Presenter methodsFor: 'palette & parts bin' stamp: 'ar 1/31/2001 17:06'!customPagesForPartsBin	| aPage aWindow  pu pageList aClass |	pageList _ OrderedCollection new.	pageList add: (aPage _ self newPageForStandardPartsBin).	aPage addMorphBack: (PasteUpMorph authoringPrototype color: (Color r: 0.96 g: 0.96 b: 0.96)).	aPage addMorphBack: TabbedPalette authoringPrototype.	aPage addMorphBack: BookMorph authoringPrototype.	aPage addMorphBack: ScriptingSystem prototypicalHolder.	aPage addMorphBack: Morph new previousPageButton markAsPartsDonor.	aPage addMorphBack: Morph new nextPageButton markAsPartsDonor.	#(DatumMorph) do:		[:aName | (aClass _ Smalltalk at: aName ifAbsent: [nil]) ifNotNil:			[aPage addMorphBack: aClass authoringPrototype]].	pageList add: (aPage _ self newPageForStandardPartsBin).	aWindow _ Browser new openAsMorphEditing: nil.	aWindow setLabel: 'System Browser'.	aPage addMorphBack: aWindow applyModelExtent.	aWindow _ PackagePaneBrowser new openAsMorphEditing: nil.	aWindow setLabel: 'Package Browser'.	aPage addMorphBack: aWindow applyModelExtent.	aWindow _ Workspace new embeddedInMorphicWindowLabeled: 'Workspace'.	aPage addMorphBack: aWindow applyModelExtent.	aPage addMorphBack: FileList openAsMorph applyModelExtent.	aPage addMorphBack: DualChangeSorter new morphicWindow applyModelExtent.	aPage addMorphBack: ChangeSorter new morphicWindow applyModelExtent.	aWindow _ SelectorBrowser new morphicWindow.	aWindow setLabel: 'Selector Browser'.	aPage addMorphBack: aWindow.	pageList add: (aPage _ self newPageForStandardPartsBin).	aPage addMorphBack: ScriptingSystem newScriptingSpace.	aPage addMorphBack: ScriptingSystem scriptControlButtons.	aPage addMorphBack: TrashCanMorph new.	aPage addMorphBack: PasteUpMorph authoringPrototype.	aPage addMorphBack: ((pu _ PasteUpMorph newSticky) embeddedInMorphicWindowLabeled: 'assembly').	pu color: (Color r: 0.839 g: 1.0 b: 0.935).	pageList do:[:page | page  replaceTallSubmorphsByThumbnails].	^ pageList! !!ScreenController methodsFor: 'menu messages' stamp: 'ar 1/31/2001 17:06'!openPackageBrowser 	"Create and schedule a Browser view for browsing code."	PackagePaneBrowser openBrowser! !!TheWorldMenu methodsFor: 'construction' stamp: 'ar 1/31/2001 17:06'!openMenu        "Build the open window menu for the world."        | menu |        menu _ self menu: 'open...'.        self fillIn: menu from: {                {'browser' . { Browser . #openBrowser} }.                {'package browser' . { PackagePaneBrowser . #openBrowser} }.                {'method finder' . { self . #openSelectorBrowser} }.                {'workspace' . {self . #openWorkspace} }.                {'file list' . {self . #openFileList} }.                {'file...' . { FileList . #openFileDirectly} }.                {'transcript' . {self . #openTranscript} }.                {'inner world' . { WorldWindow . #test1} }.                nil.                {'simple change sorter' . {self . #openChangeSorter1} }.                {'dual change sorter' . {self . #openChangeSorter2} }.                nil.                {'email reader' . {self . #openEmail} }.                {'web browser' . { Scamper . #openAsMorph} }.                {'IRC chat' . {self . #openIRC} }.                nil.        }.        self mvcProjectsAllowed ifTrue: [                self fillIn: menu from: { {'mvc project' . {self. #openMVCProject} } }        ].        ^self fillIn: menu from: {                 {'morphic project' . {self. #openMorphicProject} }.        }.! !!Utilities class methodsFor: 'miscellaneous' stamp: 'ar 1/31/2001 17:06'!addSampleWindowsTo: aPage	"Add windows representing a browser, a workspace, etc., to aPage"	|  aWindow pu |	aWindow _ Browser new openAsMorphEditing: nil.	aWindow setLabel: 'System Browser'.	aPage addMorphBack: aWindow applyModelExtent.	aWindow _ PackagePaneBrowser new openAsMorphEditing: nil.	aWindow setLabel: 'Package Browser'.	aPage addMorphBack: aWindow applyModelExtent.	aWindow _ Workspace new embeddedInMorphicWindowLabeled: 'Workspace'.	aPage addMorphBack: aWindow applyModelExtent.	aPage addMorphBack: FileList openAsMorph applyModelExtent.	aPage addMorphBack: DualChangeSorter new morphicWindow applyModelExtent.	aPage addMorphBack: ChangeSorter new morphicWindow applyModelExtent.	aWindow _ SelectorBrowser new morphicWindow.	aWindow setLabel: 'Selector Browser'.	aPage addMorphBack: aWindow.	aPage addMorphBack: ((pu _ PasteUpMorph newSticky borderInset) embeddedInMorphicWindowLabeled: 'assembly').	pu color: (Color r: 0.839 g: 1.0 b: 0.935)! !!Utilities class methodsFor: 'flaps' stamp: 'ar 1/31/2001 17:06'!replaceBrowserInToolsFlap	self replacePartSatisfying: [:el |  (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isMemberOf: Browser]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  ((Browser new openAsMorphEditing: nil) applyModelExtent setLabel: 'System Browser').	self replacePartSatisfying: [:el |  (el isKindOf: MorphThumbnail) and: [(el morphRepresented isKindOf: SystemWindow) and: [el morphRepresented model isMemberOf: PackagePaneBrowser]]]inGlobalFlapSatisfying: [:f1 | f1 wording = 'Tools'] with:  ((PackagePaneBrowser new openAsMorphEditing: nil) applyModelExtent setLabel: 'Package Browser')! !