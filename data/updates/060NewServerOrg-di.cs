'From Squeak 2.0 of May 22, 1998 on 24 May 1998 at 4:03:56 pm'!Object subclass: #ServerDirectory	instanceVariableNames: 'server directory type user passwordHolder group moniker url '	classVariableNames: 'Servers '	poolDictionaries: ''	category: 'System-Network'!!FileList methodsFor: 'volume list and pattern' stamp: 'di 5/24/1998 14:04'!openServer	"make me show a directory on some remote FTP server.  directory will be a ServerDirectory, file will be a ServerFile.  stream will be a RWBinaryOrTextStream"	| choice names |	names _ ServerDirectory serverNames asSortedArray.	choice _ (SelectionMenu labelList: names selections: names) startUp.	choice == nil ifTrue: [^ self].	self directory: (ServerDirectory serverNamed: choice)! !!FileList methodsFor: 'file list menu' stamp: 'di 5/24/1998 14:09'!putUpdate	"Put this file out as an Update on the servers."	| names choice |	self canDiscardEdits ifFalse: [^ self changed: #flash].	names _ ServerDirectory groupNames asSortedArray.	choice _ (SelectionMenu labelList: names selections: names) startUp.	choice == nil ifTrue: [^ self].	(ServerDirectory groupNamed: choice) putUpdate: 				(directory oldFileNamed: self fullName).! !!ServerDirectory methodsFor: 'server groups' stamp: 'di 5/24/1998 15:50'!group	"NOTE: This is an association whose key is the anme of the group, and	whose value is an array of serverDirectories, the first of which is	deemed to be the group directory."	^ group! !!ServerDirectory methodsFor: 'server groups' stamp: 'di 5/24/1998 15:50'!group: anObject	group _ anObject! !!ServerDirectory methodsFor: 'server groups' stamp: 'di 5/24/1998 15:54'!removeFromGroup	"Allowable if not in a group presently"	group ifNotNil:		["Group is an association shared by all members.		Therefore all will feel this removal"		group value: (group value copyWithout: self).		group _ nil  "...and I'm outa here"]! !!ServerDirectory class reorganize!('available servers' addGroup:named: addServer:named: groupNamed: groupNames installNewAccessProtocol removeServerNamed: serverNamed: serverNames)!!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 16:01'!addGroup: serverArray named: nameString	| groupAssn |	serverArray do: [:server | server removeFromGroup].	groupAssn _ nameString -> serverArray asArray copy.	serverArray do: [:server | server group: groupAssn].! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 15:24'!addServer: server named: nameString	Servers at: nameString put: server! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 15:15'!groupNamed: nameString	"Return the first server in the group of this name."	| grp server |	Servers associationsDo: [:assn |		server _ assn value.		grp _ server group.  "Note: this is an association"		(grp == nil or: [server == grp value first])			ifTrue: [nameString = server groupName						ifTrue: [^ server]]].	^ self error: 'Server name not found'! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 15:03'!groupNames	"Return the names of all registered groups of servers, including individual servers not in any group.  Note: A serverDirectory that is a member of a group will return an array of the servers in its group.  The first server in that array represents the group, and its name is the name of the goup."	| grp names server |	names _ OrderedCollection new.	Servers associationsDo: [:assn |		server _ assn value.		grp _ server group.  "Note: this is an association"		(grp == nil or: [server == grp value first])			ifTrue: [names add: server groupName]].	^ names asSortedArray! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 16:03'!installNewAccessProtocol    "ServerDirectory installNewAccessProtocol"	"Move registered servers out of the Smalltalk dictionary into class vars.	Execute this once only at installation time, and then remove the method."	| serverNames |	Servers _ Dictionary new.	serverNames _ Smalltalk keys select: [:k | (Smalltalk at: k) isKindOf: self].	serverNames do: [:k |		Servers at: k asString put: (Smalltalk at: k).		Smalltalk removeKey: k]! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 14:29'!removeServerNamed: nameString	Servers removeKey: nameString! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 15:16'!serverNamed: nameString	^ Servers at: nameString		ifAbsent: [self error: 'Server name not found']! !!ServerDirectory class methodsFor: 'available servers' stamp: 'di 5/24/1998 13:30'!serverNames	^ Servers keys asSortedArray! !ServerDirectory class removeSelector: #servers!ServerDirectory class removeSelector: #serverGroups!"Postscript:Now move all gloabel into ServerDirectory and clean up..."ServerDirectory installNewAccessProtocol.ServerDirectory class removeSelector: #installNewAccessProtocol!