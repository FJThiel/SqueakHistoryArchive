'From Squeak3.1alpha of 5 February 2001 [latest update: #3707] on 24 February 2001 at 1:25:03 pm'!"Change Set:		loopingThreadsDate:			24 February 2001Author:			Bob ArningAllow InternalThreadNavigationMorph to have multiple instances of a project and go to the right one in sequence."!ThreadNavigationMorph subclass: #InternalThreadNavigationMorph	instanceVariableNames: 'threadName preferredIndex '	classVariableNames: 'KnownThreads '	poolDictionaries: ''	category: 'Morphic-Navigators'!!BookMorph methodsFor: 'menu' stamp: 'RAA 2/24/2001 13:16'!buildThreadOfProjects	| thisPVM projectNames threadName |	projectNames _ pages collect: [ :each |		(thisPVM _ each findA: ProjectViewMorph) ifNil: [			nil		] ifNotNil: [			{thisPVM project name}.		].	].	projectNames _ projectNames reject: [ :each | each isNil].	threadName _ FillInTheBlank 		request: 'Please name this thread.' 		initialAnswer: (			self valueOfProperty: #nameOfThreadOfProjects ifAbsent: ['Projects on Parade']		).	threadName isEmptyOrNil ifTrue: [^self].	InternalThreadNavigationMorph 		know: projectNames as: threadName;		openThreadNamed: threadName atIndex: nil.! !!InternalThreadNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:14'!currentIndex	| currentName |	currentName _ CurrentProjectRefactoring currentProjectName.	listOfPages withIndexDo: [ :each :index |		(each first = currentName and: [preferredIndex = index]) ifTrue: [^currentIndex _ index]	].	listOfPages withIndexDo: [ :each :index |		each first = currentName ifTrue: [^currentIndex _ index]	].	^currentIndex ifNil: [1]! !!InternalThreadNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:12'!loadPageWithProgress	| projectInfo projectName |	projectInfo _ listOfPages at: currentIndex.	projectName _ projectInfo at: 1.	loadedProject _ Project named: projectName.	self class know: listOfPages as: threadName.	WorldState addDeferredUIMessage: [		InternalThreadNavigationMorph openThreadNamed: threadName atIndex: self currentIndex	].	loadedProject ifNil: [		ComplexProgressIndicator new 			targetMorph: self;			historyCategory: 'project loading';			withProgressDo: [				[					loadedProject _ CurrentProjectRefactoring 							currentFromMyServerLoad: projectName				] 					on: ProjectViewOpenNotification					do: [ :ex | ex resume: false]								"we probably don't want a project view morph in this case"			].	].	loadedProject ifNil: [		^self inform: 'I cannot find that project'	].	self delete.	loadedProject enter.! !!InternalThreadNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:15'!threadName: aString index: anInteger	threadName _ aString.	preferredIndex _ anInteger.	self currentIndex.! !!InternalThreadNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:15'!threadOfAllProjects	| nameList nav |	nameList _ Project allMorphicProjects collect: [ :each | {each name}].	nav _ self class basicNew.	nav		listOfPages: nameList;		threadName: '' index: nil;		initialize.	nav editThisThread.! !!InternalThreadNavigationMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:15'!threadOfNoProjects	| nameList nav |	nameList _ { {CurrentProjectRefactoring currentProjectName} }.	nav _ self class basicNew.	nav		listOfPages: nameList;		threadName: '' index: nil;		initialize.	nav editThisThread.! !!InternalThreadNavigationMorph class methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:10'!openThreadNamed: nameOfThread atIndex: anInteger	| coll nav |	coll _ self knownThreads at: nameOfThread ifAbsent: [^self].	nav _ World 		submorphThat: [ :each | (each isKindOf: self) and: [each threadName = nameOfThread]]		ifNone: [			nav _ self basicNew.			nav				listOfPages: coll;				threadName: nameOfThread index: anInteger;				initialize;				openInWorld;				positionAppropriately.			^self		].	nav		listOfPages: coll;		threadName: nameOfThread index: anInteger;		removeAllMorphs;		addButtons.! !!ProjectSorterMorph methodsFor: 'as yet unclassified' stamp: 'RAA 2/24/2001 13:20'!clickFromSorterEvent: evt morph: aMorph	(aMorph bounds containsPoint: evt cursorPoint) ifFalse: [^self].	evt isMouseUp ifFalse: [		evt shiftPressed ifFalse: [^evt hand grabMorph: aMorph].		^self	].	evt shiftPressed ifTrue: [		WorldState addDeferredUIMessage: [			InternalThreadNavigationMorph 				openThreadNamed: book threadName				atIndex: (aMorph owner submorphs indexOf: aMorph ifAbsent: [nil])		].		(Project named: (aMorph valueOfProperty: #nameOfThisProject)) enter.	].! !InternalThreadNavigationMorph class removeSelector: #openThreadNamed:!InternalThreadNavigationMorph removeSelector: #threadName:!