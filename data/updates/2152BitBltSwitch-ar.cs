'From Squeak2.8alpha of 16 February 2000 [latest update: #2151] on 16 May 2000 at 8:14:59 pm'!"Change Set:		BitBltSwitch-arDate:			16 May 2000Author:			Andreas RaabInstallation of a switch that allows using a different BitBlt plugin for Balloon (2D and 3D)." !InterpreterPlugin subclass: #B3DEnginePlugin	instanceVariableNames: 'loadBBFn copyBitsFn bbPluginName '	classVariableNames: ''	poolDictionaries: 'B3DEngineConstants '	category: 'VMConstruction-Plugins'!InterpreterPlugin subclass: #BalloonEngineBase	instanceVariableNames: 'workBuffer objBuffer getBuffer aetBuffer spanBuffer engine formArray engineStopped geProfileTime dispatchedValue dispatchReturnValue objUsed doProfileStats copyBitsFn loadBBFn bbPluginName '	classVariableNames: 'EdgeInitTable EdgeStepTable FillTable WideLineFillTable WideLineWidthTable '	poolDictionaries: 'BalloonEngineConstants '	category: 'VMConstruction-Plugins'!!B3DEnginePlugin methodsFor: 'initialize-release' stamp: 'ar 5/16/2000 20:05'!initialiseModule	self export: true.	loadBBFn _ interpreterProxy ioLoadFunction: 'loadBitBltFrom' From: bbPluginName.	copyBitsFn _ interpreterProxy ioLoadFunction: 'copyBitsFromtoat' From: bbPluginName.	^(loadBBFn ~= 0 and:[copyBitsFn ~= 0])! !!B3DEnginePlugin methodsFor: 'initialize-release' stamp: 'ar 5/16/2000 20:05'!moduleUnloaded: aModuleName	"The module with the given name was just unloaded.	Make sure we have no dangling references."	self export: true.	self var: #aModuleName type: 'char *'.	(aModuleName strcmp: bbPluginName) = 0 ifTrue:[		"BitBlt just shut down. How nasty."		loadBBFn _ 0.		copyBitsFn _ 0.	].! !!B3DEnginePlugin class methodsFor: 'translation' stamp: 'ar 5/16/2000 20:05'!declareCVarsIn: cg	cg var: 'bbPluginName' declareC:'char bbPluginName[256] = "BitBltPlugin"'.! !!B3DPrimitiveRasterizer class methodsFor: 'private' stamp: 'ar 5/16/2000 20:09'!primitiveSetBitBltPlugin: pluginName	<primitive: 'primitiveSetBitBltPlugin' module: 'Squeak3D'>	^self primitiveFailed! !!B3DRasterizerPlugin methodsFor: 'primitives' stamp: 'ar 5/16/2000 20:06'!primitiveSetBitBltPlugin	"Primitive. Set the BitBlt plugin to use."	| pluginName length ptr needReload |	self export: true.	self var: #ptr declareC:'char *ptr'.	pluginName _ interpreterProxy stackValue: 0.	"Must be string to work"	(interpreterProxy isBytes: pluginName) 		ifFalse:[^interpreterProxy primitiveFail].	length _ interpreterProxy byteSizeOf: pluginName.	length >= 256 		ifTrue:[^interpreterProxy primitiveFail].	ptr _ interpreterProxy firstIndexableField: pluginName.	needReload _ false.	0 to: length-1 do:[:i|		"Compare and store the plugin to be used"		(bbPluginName at: i) = (ptr at: i) ifFalse:[			bbPluginName at: i put: (ptr at: i).			needReload _ true]].	(bbPluginName at: length) = 0 ifFalse:[		bbPluginName at: length put: 0.		needReload _ true].	needReload ifTrue:[		self initialiseModule 			ifFalse:[^interpreterProxy primitiveFail]].	interpreterProxy pop: 1. "Return receiver"! !!BalloonEngine class methodsFor: 'private' stamp: 'ar 5/16/2000 20:10'!primitiveSetBitBltPlugin: pluginName	<primitive: 'primitiveSetBitBltPlugin' module: 'B2DPlugin'>	^self primitiveFailed! !!BalloonEngineBase methodsFor: 'primitives-access' stamp: 'ar 5/16/2000 20:03'!primitiveSetBitBltPlugin	"Primitive. Set the BitBlt plugin to use."	| pluginName length ptr needReload |	self export: true.	self var: #ptr declareC:'char *ptr'.	pluginName _ interpreterProxy stackValue: 0.	"Must be string to work"	(interpreterProxy isBytes: pluginName) 		ifFalse:[^interpreterProxy primitiveFail].	length _ interpreterProxy byteSizeOf: pluginName.	length >= 256 		ifTrue:[^interpreterProxy primitiveFail].	ptr _ interpreterProxy firstIndexableField: pluginName.	needReload _ false.	0 to: length-1 do:[:i|		"Compare and store the plugin to be used"		(bbPluginName at: i) = (ptr at: i) ifFalse:[			bbPluginName at: i put: (ptr at: i).			needReload _ true]].	(bbPluginName at: length) = 0 ifFalse:[		bbPluginName at: length put: 0.		needReload _ true].	needReload ifTrue:[		self initialiseModule 			ifFalse:[^interpreterProxy primitiveFail]].	interpreterProxy pop: 1. "Return receiver"! !!BalloonEngineBase methodsFor: 'initialize-release' stamp: 'ar 5/16/2000 19:56'!initialiseModule	self export: true.	loadBBFn _ interpreterProxy ioLoadFunction: 'loadBitBltFrom' From: bbPluginName.	copyBitsFn _ interpreterProxy ioLoadFunction: 'copyBitsFromtoat' From: bbPluginName.	^(loadBBFn ~= 0 and:[copyBitsFn ~= 0])! !!BalloonEngineBase methodsFor: 'initialize-release' stamp: 'ar 5/16/2000 19:57'!moduleUnloaded: aModuleName	"The module with the given name was just unloaded.	Make sure we have no dangling references."	self export: true.	self var: #aModuleName type: 'char *'.	(aModuleName strcmp: bbPluginName) = 0 ifTrue:[		"BitBlt just shut down. How nasty."		loadBBFn _ 0.		copyBitsFn _ 0.	].! !!BalloonEngineBase class methodsFor: 'class initialization' stamp: 'ar 5/16/2000 20:03'!declareCVarsIn: cg	"Buffers"	cg var: #workBuffer type: #'int*'.	cg var: #objBuffer type: #'int*'.	cg var: #getBuffer type: #'int*'.	cg var: #aetBuffer type: #'int*'.	cg var: #spanBuffer type: #'unsigned int*'.	cg var: #edgeTransform declareC: 'float edgeTransform[6]'.	cg var: #doProfileStats declareC: 'int doProfileStats = 0'.	cg var: 'bbPluginName' declareC:'char bbPluginName[256] = "BitBltPlugin"'.! !