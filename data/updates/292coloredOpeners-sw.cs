'From Squeak 2.2beta of Sept 11, 1998 on 21 September 1998 at 5:58:04 pm'!"Change Set:		coloredOpeners-swDate:			21 September 1998Author:			Scott WallaceMakes the button colors in the durable open menu match the colors of the windows they will spawn, as per a suggestion by Andreas Raab.  Caution: the correspondence must be manually maintained, which is to say, if you change the open menu, you'll need to change the durableOpenMenu method to keep the colors in synch.Also arranges for the durable menus to be dismissable without an annoying confirmation prompt.Also, gives a unique color to the SelectorBrowser"!Object subclass: #WorldViewModel	instanceVariableNames: 'initialExtent '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Support'!WorldViewModel subclass: #CautiousModel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Support'!!MorphWorldView class methodsFor: 'instance creation' stamp: 'sw 9/21/1998 17:54'!openOn: aWorldMorph label: aString cautionOnClose: aBoolean	"Open a view with the given label on the given WorldMorph."	| aModel |	aModel _ aBoolean		ifTrue:		[CautiousModel new]		ifFalse:		[WorldViewModel new].	^ self openOn: aWorldMorph label: aString model: (aModel initialExtent: aWorldMorph initialExtent)! !!SelectorBrowser methodsFor: 'all' stamp: 'sw 9/21/1998 17:35'!defaultBackgroundColor	^ #lightCyan! !!Utilities class methodsFor: 'durable menus' stamp: 'sw 9/21/1998 17:32'!durableOpenMenu	"Utilities durableOpenMenu"	self windowFromMenu: ScheduledControllers screenController openMenu target: ScheduledControllers screenController title: 'Openers' colorPattern:		#(blue lightGreen lightYellow lightMagenta  lightOrange lightCyan lightBlue lightBlue  lightOrange lightOrange lightOrange white white )! !!Utilities class methodsFor: 'durable menus' stamp: 'sw 9/21/1998 17:47'!windowFromMenu: aMenu target: aTarget title: aTitle colorPattern: aColorPattern	| n labelList colorPattern targetList |	n _ aMenu selections size.	(aMenu selections last includesSubString: 'urable') ifTrue: [n _ n - 1].	labelList _ (1 to: n) asArray  collect:		[:ind | aMenu labelString lineNumber: ind].	colorPattern _ aColorPattern ifNil:		[#(lightRed lightGreen lightBlue lightYellow lightGray lightCyan lightMagenta lightOrange)].	targetList _  (1 to: n) asArray  collect: [:ind | aTarget].	self windowMenuWithLabels: labelList colorPattern: colorPattern targets: targetList selections: aMenu selections title: aTitle! !!Utilities class methodsFor: 'durable menus' stamp: 'sw 9/21/1998 17:55'!windowMenuWithLabels: labelList colorPattern: colorPattern  targets: targetList selections: selectionList title: aTitle	| aWorld n   colorList  pos delta aButton  rightmost widthToUse |	Smalltalk verifyMorphicAvailability ifFalse: [^ self].	aWorld _ WorldMorph new.	n _ labelList size.	colorList _  (1 to: n) asArray  collect:		[:ind | Color perform: (colorPattern at: (ind \\ colorPattern size + 1))].				pos _ 4 @ 6.	delta _ 0 @ 30.	rightmost _ 0.	1 to: labelList size do:		[:index |			aButton _ SimpleButtonMorph new.			aButton label: (labelList at: index); 				color: (colorList at: index); 				target: (targetList at: index);				actionSelector: (selectionList at: index);				position: pos.			rightmost _ rightmost max: aButton right.			pos _ pos + delta.			aWorld addMorphBack: aButton].	widthToUse _ rightmost + 10.	aWorld submorphs do:		[:m | m position: (((widthToUse - m width) // 2) @ m position y)].	aWorld setProperty: #initialExtent toValue: (widthToUse @ (aButton bottom + 10)).	aWorld openWithTitle: aTitle cautionOnClose: false! !!WorldMorph methodsFor: 'initialization' stamp: 'sw 9/21/1998 17:55'!openWithTitle: aString cautionOnClose: aBoolean	"Open a view on this WorldMorph with the given title."	MorphWorldView openOn: self label: aString cautionOnClose: aBoolean! !!WorldViewModel commentStamp: 'sw 9/21/1998 17:50' prior: 0!Serves as a model for a WorldView -- a morphic world viewed within an mvc project.!!WorldViewModel reorganize!('all' fullScreenSize initialExtent initialExtent:)!!WorldViewModel methodsFor: 'all' stamp: 'sw 9/21/1998 17:50'!fullScreenSize	"Answer the size to which a window displaying the receiver should be set"	^ (0@0 extent: DisplayScreen actualScreenSize) copy! !!WorldViewModel methodsFor: 'all' stamp: 'sw 9/21/1998 17:51'!initialExtent	initialExtent ifNotNil: [^ initialExtent].	^ super initialExtent! !!WorldViewModel methodsFor: 'all' stamp: 'sw 9/21/1998 17:51'!initialExtent: anExtent	initialExtent _ anExtent! !!CautiousModel commentStamp: 'sw 9/21/1998 17:52' prior: 0!A model for a morphic world view which will ask for confirmation before being closed, unless the corresponding preference is set to false. !CautiousModel removeSelector: #initialExtent!CautiousModel removeSelector: #fullScreenSize!CautiousModel removeSelector: #initialExtent:!