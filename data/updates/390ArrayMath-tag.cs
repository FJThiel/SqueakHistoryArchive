'From Squeak 2.2 of Sept 23, 1998 on 6 November 1998 at 4:08:22 pm'!!Collection methodsFor: 'accessing' stamp: 'TAG 11/6/1998 16:06'!anyOne	"Return a representative sample of an element, can be very helpful 	when needing to preinfer the nature of the contents of 	semi-homogeneous collections"	self do: [:each | ^ each].	^ self errorEmptyCollection! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:51'!abs	"Absolute value of all elements in the collection"	^ self collect: [:a | a abs]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:57'!average	^ self sum / self size! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:51'!ceiling	^ self collect: [:a | a ceiling]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:51'!floor	^ self collect: [:a | a floor]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:52'!log	^ self collect: [:each | each log]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:58'!max	^ self inject: self anyOne into: [:max :each | max max: each]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 16:00'!median	^ self asSortedCollection median! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 16:00'!min	^ self inject: self anyOne into: [:min :each | min min: each]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:52'!negated	"Negated value of all elements in the collection"	^ self collect: [:a | a negated]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 16:00'!range	^ self max - self min! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:53'!reciprocal	"Return the reciever full of reciprocated elements"	^ self collect: [:a | a reciprocal]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:53'!rounded	^ self collect: [:a | a rounded]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:53'!sqrt	^ self collect: [:each | each sqrt]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:53'!squared	^ self collect: [:each | each * each]! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 16:02'!sum	"This is implemented using a variant of the normal inject:into: pattern. 	The reason for this is that it is not known whether we're in the normal 	number line, i.e. whether 0 is a good initial value for the sum. 	Consider a collection of measurement objects, 0 would be the unitless 	value and would not be appropriate to add with the unit-ed objects."	| sum sample |	sample _ self anyOne.	sum _ self inject: sample into: [:accum :each | accum + each].	^ sum - sample! !!Collection methodsFor: 'math functions' stamp: 'TAG 11/6/1998 15:54'!truncated	^ self collect: [:a | a truncated]! !!SequenceableCollection methodsFor: 'accessing' stamp: 'TAG 11/6/1998 16:06'!anyOne	^ self at: 1! !!SequenceableCollection methodsFor: 'converting' stamp: 'TAG 11/6/1998 15:55'!@ aCollection 	^ self with: aCollection collect: [:a :b | a @ b]! !Collection removeSelector: #raisedToInteger:!