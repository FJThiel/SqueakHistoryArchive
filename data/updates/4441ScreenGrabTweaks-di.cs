'From Squeak3.2alpha of 2 October 2001 [latest update: #4438] on 18 October 2001 at 4:43:07 am'!"Change Set:		ScreenGrabTweaksDate:			18 October 2001Author:			Dan IngallsLimits area of flooded selections to 1/2 total screen.Factors the code for selection by outline (polygon or freehand).Fixes a twitch due to hand not seeing events during direct Sensor access."!!PasteUpMorph methodsFor: 'world menu' stamp: 'di 10/18/2001 03:28'!extractScreenRegion: poly andPutSketchInHand: hand	"The user has specified a polygonal area of the Display.	Now capture the pixels from that region, and put in the hand as a Sketch."	| screenForm outline topLeft innerForm exterior |	outline _ poly shadowForm.	topLeft _ outline offset.	exterior _ (outline offset: 0@0) anyShapeFill reverse.	screenForm _ Form fromDisplay: (topLeft extent: outline extent).	screenForm eraseShape: exterior.	innerForm _ screenForm trimBordersOfColor: Color transparent.	innerForm isAllWhite ifFalse:		[hand attachMorph: (SketchMorph withForm: innerForm)]! !!PasteUpMorph methodsFor: 'world menu' stamp: 'di 10/18/2001 03:33'!grabDrawingFromScreen: evt	"Allow the user to specify a rectangular area of the Display, capture the pixels from that area, and use them to create a new drawing morph. Attach the result to the hand."	| m |	m _ self drawingClass new form: Form fromUser.	evt hand position: Sensor cursorPoint.  "update hand pos after Sensor loop in fromUser"	evt hand attachMorph: m.! !!PasteUpMorph methodsFor: 'world menu' stamp: 'di 10/18/2001 02:25'!grabFloodFromScreen: evt	"Allow the user to plant a flood seed on the Display, and create a new drawing morph from the resulting region. Attach the result to the hand."	| screenForm exterior p1 box |	Cursor crossHair showWhile: [p1 _ Sensor waitButton].	box _ Display floodFill: Color transparent at: p1.	exterior _ ((Display copy: box) makeBWForm: Color transparent) reverse.	self world invalidRect: box; displayWorldSafely.	(box area > (Display boundingBox area // 2))		ifTrue: [^ PopUpMenu notify: 'Sorry, the region was too big'].	(exterior deepCopy reverse anyShapeFill reverse)  "save interior bits"		displayOn: exterior at: 0@0 rule: Form and.	screenForm _ Form fromDisplay: box.	screenForm eraseShape: exterior.	screenForm isAllWhite ifFalse:		[evt hand attachMorph: (SketchMorph withForm: screenForm)]! !!PasteUpMorph methodsFor: 'world menu' stamp: 'di 10/18/2001 02:58'!grabLassoFromScreen: evt	"Allow the user to specify a polygonal area of the Display, capture the pixels from that area, and use them to create a new drawing morph. Attach the result to the hand."	self extractScreenRegion: (PolygonMorph fromHandFreehand: evt hand)		andPutSketchInHand: evt hand! !!PasteUpMorph methodsFor: 'world menu' stamp: 'di 10/18/2001 01:13'!grabRubberBandFromScreen: evt	"Allow the user to specify a polygonal area of the Display, capture the pixels from that area, and use them to create a new drawing morph. Attach the result to the hand."	self extractScreenRegion: (PolygonMorph fromHand: evt hand)		andPutSketchInHand: evt hand! !!PolygonMorph class methodsFor: 'instance creation' stamp: 'di 10/18/2001 03:56'!fromHand: hand	"Let the user draw a polygon, clicking at each vertex, and ending		by clicking within 5 of the first point..."	| p1 poly oldVerts pN opposite |	Cursor crossHair showWhile:		[[Sensor anyButtonPressed] whileFalse:			[self currentWorld displayWorldSafely; runStepMethods].		p1 _ Sensor cursorPoint].	opposite _ (Display colorAt: p1) negated.	opposite = Color transparent ifTrue: [opposite _ Color red].	(poly _ LineMorph from: p1 to: p1 color: opposite width: 2) openInWorld.	oldVerts _ {p1}.	self currentWorld displayWorldSafely; runStepMethods.	[true] whileTrue:		[[Sensor anyButtonPressed] whileTrue:			[pN _ Sensor cursorPoint.			poly setVertices: (oldVerts copyWith: pN).			self currentWorld displayWorldSafely; runStepMethods].		(oldVerts size > 1 and: [(pN dist: p1) < 5]) ifTrue:			[hand position: Sensor cursorPoint.  "Done -- update hand pos"			^ (poly setVertices: (poly vertices copyWith: p1)) delete].		oldVerts _ poly vertices.		[Sensor anyButtonPressed] whileFalse:			[pN _ Sensor cursorPoint.			poly setVertices: (oldVerts copyWith: pN).			self currentWorld displayWorldSafely; runStepMethods]].! !!PolygonMorph class methodsFor: 'instance creation' stamp: 'di 10/18/2001 04:42'!fromHandFreehand: hand	"Let the user draw a polygon, holding the mouse down, and ending		by clicking within 5 of the first point..."	| p1 poly pN opposite |	Cursor crossHair showWhile:		[[Sensor anyButtonPressed] whileFalse:			[self currentWorld displayWorldSafely; runStepMethods].		p1 _ Sensor cursorPoint].	opposite _ (Display colorAt: p1) negated.	opposite = Color transparent ifTrue: [opposite _ Color red].	(poly _ LineMorph from: p1 to: p1 color: opposite width: 2) openInWorld.	self currentWorld displayWorldSafely; runStepMethods.	[Sensor anyButtonPressed] whileTrue:			[pN _ Sensor cursorPoint.			(pN dist: poly vertices last) > 3 ifTrue:				[poly setVertices: (poly vertices copyWith: pN).				self currentWorld displayWorldSafely; runStepMethods]].	hand position: Sensor cursorPoint.  "Done -- update hand pos"	^ (poly setVertices: (poly vertices copyWith: p1)) delete! !