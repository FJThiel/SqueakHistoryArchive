'From Squeak 2.0 of May 22, 1998 on 2 June 1998 at 2:34:14 pm'!"Change Set:		jhmRepaintFixTwoDate:			2 June 1998Author:			John MaloneyThis filein really fixes the problems with painting a rotatedmorph. Really!! No, I mean it!! This time for sure!!Also fixes the world halo being too big when objects are offthe screen."!!HaloMorph methodsFor: 'stepping' stamp: 'jm 6/2/1998 13:51'!step	| newBounds |	target ifNil: [^ self].	target isWorldMorph		ifTrue: [newBounds _ target bounds]		ifFalse: [newBounds _ target fullBoundsInWorld].	newBounds = self bounds ifTrue: [^ self].	growingOrRotating ifFalse: [  "adjust halo bounds if appropriate"		submorphs size > 1			ifTrue: [self addHandles].  "recreates full set with new bounds"		self bounds: newBounds].! !!HandMorph methodsFor: 'from EToyHand' stamp: 'jm 6/2/1998 14:28'!makeNewDrawingInBounds: rect pasteUpMorph: aPasteUpMorph	| w newSketch newPlayer sketchEditor p |	w _ aPasteUpMorph world.	w stopRunningAll; abandonAllHalos.	newSketch _ self drawingClass new costumee: (newPlayer _ Player newUserInstance).	newPlayer costume: newSketch.	newSketch form: (Form extent: rect extent depth: w assuredCanvas depth).	newSketch bounds: rect.	sketchEditor _ SketchEditorMorph new.	w addMorphFront: sketchEditor.	sketchEditor initializeFor: newSketch inBounds: rect ofWorld: w.	sketchEditor		afterNewPicDo: [:aForm :aRect |			newSketch form: aForm.			newSketch position: aRect origin.			newSketch forwardDirection: sketchEditor forwardDirection.			newSketch rotationDegrees: sketchEditor forwardDirection.			newSketch rotationStyle: sketchEditor rotationStyle.			aPasteUpMorph addMorphFront: newSketch.			w startSteppingSubmorphsOf: newSketch.			self presenter drawingJustCompleted: newSketch]		 ifNoBits: [			p _ aPasteUpMorph standardPalette.			p ifNotNil: [p showNoPalette]].! !!SketchEditorMorph methodsFor: 'initialization' stamp: 'jm 6/2/1998 13:07'!initializeFor: aSketchMorph inBounds: boundsToUse ofWorld: w	hostView _ aSketchMorph.  "may be ownerless"	self bounds: boundsToUse.	canvasRectangle _ bounds translateBy: w viewBox origin.	palette _ w paintBox.	w addMorphFront: palette.  "bring to front"	paintingForm _ Form extent: bounds extent depth: w assuredCanvas depth.	self dimTheWindow.	aSketchMorph ifNotNil: [		aSketchMorph form			displayOn: paintingForm			at: (hostView boundsInWorld origin - bounds origin)			clippingBox: (0@0 extent: paintingForm extent)			rule: Form over			fillColor: nil.  "assume they are the same depth"		rotationCenter _ aSketchMorph rotationCenter].! !!SketchMorph methodsFor: 'menu' stamp: 'jm 6/2/1998 14:28'!editDrawingIn: aPasteUpMorph forBackground: forBackground	| w oldRotation oldFwdDir bnds sketchEditor |	w _ aPasteUpMorph world.	w stopRunningAll; abandonAllHalos.	w displayWorld.	oldRotation _ rotationDegrees.	oldFwdDir _ self forwardDirection.	self rotationDegrees: 0.	forBackground		ifTrue: [bnds _ aPasteUpMorph boundsInWorld]		ifFalse: [			bnds _ self boundsInWorld.			bnds _ (aPasteUpMorph paintingBoundsAround: bnds center) merge: bnds].	sketchEditor _ SketchEditorMorph new.	forBackground ifTrue: [sketchEditor setProperty: #background toValue: true].	w addMorphFront: sketchEditor.	sketchEditor initializeFor: self inBounds: bnds ofWorld: aPasteUpMorph world.	self rotationDegrees: oldRotation.  "restore old rotation so that cancel leaves it right"	sketchEditor		afterNewPicDo: [:aForm :aRect |			self form: aForm.			self topRendererOrSelf position: aRect origin.			self forwardDirection: sketchEditor forwardDirection.			self rotationDegrees: oldRotation + (sketchEditor forwardDirection - oldFwdDir).			self rotationStyle: sketchEditor rotationStyle.			aPasteUpMorph playfield ifNotNil: "Show the right viewer"				[self presenter drawingJustCompleted: self].			forBackground ifTrue: [self goBehind]]  "shouldn't be necessary"		ifNoBits: ["If no bits drawn.  Must keep old pic.  Can't have no picture"			aPasteUpMorph standardPalette ifNotNil:				[aPasteUpMorph standardPalette viewMorph: self]].! !!WorldMorph methodsFor: 'etoy support' stamp: 'jm 6/2/1998 13:14'!makeGraphPaper	| smallGrid backColor lineColor |	smallGrid _ Compiler evaluate: (FillInTheBlank request: 'Enter grid size' initialAnswer: '16').	Utilities informUser: 'Choose a background color' during: [backColor _ Color fromUser].	Utilities informUser: 'Choose a line color' during: [lineColor _ Color fromUser].	self makeGraphPaperGrid: smallGrid background: backColor line: lineColor.! !!WorldMorph methodsFor: 'etoy support' stamp: 'jm 6/2/1998 13:13'!makeGraphPaperGrid: smallGrid background: backColor line: lineColor	| bigGrid gridForm |	bigGrid _ 40 roundTo: smallGrid.	gridForm _ Form extent: bigGrid asPoint depth: Display depth.	gridForm fillWithColor: backColor.	0 to: bigGrid by: smallGrid do: [:i |		gridForm fill: (i@0 extent: 1@bigGrid) fillColor: lineColor.		gridForm fill: (0@i extent: bigGrid@1) fillColor: lineColor].	color _ InfiniteForm with: gridForm.	self fullRepaintNeeded.	self changed: #newColor.  "propagate to view"! !!WorldMorph methodsFor: 'etoy support' stamp: 'jm 6/2/1998 13:13'!setStandardTexture	| parms |	parms _ self textureParameters.	self makeGraphPaperGrid: parms first		background: parms second		line: parms third.! !PaintBoxMorph removeSelector: #rememberColorsFrom:!SketchEditorMorph removeSelector: #backgroundFromUser!SketchEditorMorph removeSelector: #resumePainting!SketchEditorMorph removeSelector: #getRepaintedBackgroundStartingWith:!SketchEditorMorph removeSelector: #getPaintingStartingWith:at:!SketchEditorMorph removeSelector: #singleImageFromUser!SketchEditorMorph removeSelector: #resume!SketchEditorMorph removeSelector: #initMorph!WorldMorph removeSelector: #makeGraphPaperDefault!