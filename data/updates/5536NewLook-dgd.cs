'From Squeak3.7alpha of ''11 September 2003'' [latest update: #5526] on 8 November 2003 at 4:04:09 pm'!"Change Set:		NewLook-dgdDate:			23 June 2003Author:			Diego Gomez Deck <DiegoGomezDeck@ConsultAr.com>SystemWindow Changes- a couple of small enhancements to system windows-- boxes sizes based on title font-- title area color more '3d'-- alternative boxes lookMenus Changes- change the menu color to a gradient one-- see MenuMorph>>updateColor and senders-- new Preference's option called gradientMenu- change the menu item selected fillstyle-- see MenuItemMorph>>selectionFillStyle and senders- menui tems can have an icon-- see MenitItemMorph>>icon, MenitItemMorph>>icon:, MenitItemMorph>>hasIcon and MenitItemMorph>>drawOn:-- MenitItemMorph>>minWidth and MenitItemMorph>>minHeight consider the icon (if it's present)- add a set of icons to the world menu.-- new Preference's option named menuWithIcons (in menus category)-- see class MenuIcons-- a set of icons with an appropiate license is needed- new Preference's option named #menuAppearance3d. this new option uncouple the 3d appareance behaviour from menuColorFromWorld option. now each option handle an aspect-- it's possible to have a flat menu with the color from the world, a 3d menu with a color different from the world, etc.- new preference parameter named #menuLineColor.-- remove of unsed preferences (#menuLineLowerColor and #menuLineUpperColor)ScroolBar Changes- the size of the scrollbars is base on the default font height- new gradient option for the scrollbar's buttons- new set of icons for the scrollbar's buttons- the slider get 'pressed' when it's dragged- an cache is included to speed-up the time to get the images-- see LRUCache and references to it- two new Preferences options-- gradientScrollBars: use a gradient look-- alternativeButtonsInScrollBars: use an alternative set of arrowsFillInTheBlank Changes- FillInTheBlankMorph uses the menu look preferences- defaultAnswerExtent proportional to menu font- red/green for [accept] and [cancel] buttons"Preferences enable: #scrollBarsNarrow.Preferences	addPreference: #alternativeWindowBoxesLook	category: #windows	default: true	balloonHelp: 'If true, use an alternative look for Window''s boxes.'.Preferences	addPreference: #menuWithIcons	category: #menus	default: true	balloonHelp: 'If true, the menus will include some icons.'.Preferences	addPreference: #gradientMenu	category: #menus	default: true	balloonHelp: 'If true, the menus will have a gradient look.'.Preferences	addPreference: #menuAppearance3d	category: #menus	default: true	balloonHelp: 'If true, the menus will be painted with a appearance 3d.'.Preferences	addPreference: #gradientScrollBars	categories: #(#scrolling)	default: true	balloonHelp: 'If true, the scrollbars will use a gradient look.'	projectLocal: false	changeInformee: ScrollBar	changeSelector: #changesInPreferences.Preferences	addPreference: #alternativeButtonsInScrollBars	categories: #(#scrolling)	default: false	balloonHelp: 'If true, the buttons of scrollbars will use an alternative set of icons.'	projectLocal: false	changeInformee: ScrollBar	changeSelector: #changesInPreferences.!Object subclass: #LRUCache	instanceVariableNames: 'size factory calls hits values '	classVariableNames: ''	poolDictionaries: ''	category: 'Utilities'!!LRUCache commentStamp: '<historical>' prior: 0!I'm a cache of values, given a key I return a Value from the cache or from the factory!Object subclass: #MenuIcons	instanceVariableNames: ''	classVariableNames: 'Icons '	poolDictionaries: ''	category: 'Morphic-Menus'!StringMorph subclass: #MenuItemMorph	instanceVariableNames: 'isEnabled subMenu isSelected target selector arguments icon '	classVariableNames: 'SubMenuMarker '	poolDictionaries: ''	category: 'Morphic-Menus'!Slider subclass: #ScrollBar	instanceVariableNames: 'menuButton upButton downButton pagingArea scrollDelta pageDelta interval menuSelector timeOfMouseDown timeOfLastScroll nextPageDirection currentScrollDelay '	classVariableNames: 'ArrowImagesCache BoxesImagesCache CachedImages ImagesCache UpArrow UpArrow8Bit '	poolDictionaries: ''	category: 'Morphic-Windows'!!FillInTheBlankMorph methodsFor: 'geometry' stamp: 'sd 11/8/2003 15:56'!extent: aPoint 	"change the receiver's extent"	super extent: aPoint .	self updateColor! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'nk 6/25/2003 09:05'!createAcceptButton	"create the [accept] button"	| result frame |	result := SimpleButtonMorph new target: self;				 color: Color lightGreen.	result		borderColor: (Preferences menuAppearance3d				ifTrue: [#raised]				ifFalse: [result color twiceDarker]).	result label: 'Accept(s)';		 actionSelector: #accept.	result setNameTo: 'accept'.	frame := LayoutFrame new.	frame rightFraction: 0.5;		 rightOffset: -10;		 bottomFraction: 1.0;		 bottomOffset: -2.	result layoutFrame: frame.	self addMorph: result.	self		updateColor: result		color: result color		intensity: 2.	^ result! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'nk 6/25/2003 09:05'!createCancelButton	"create the [cancel] button"	| result frame |	result := SimpleButtonMorph new target: self;				 color: Color lightRed.	result		borderColor: (Preferences menuAppearance3d				ifTrue: [#raised]				ifFalse: [result color twiceDarker]).	result label: 'Cancel(l)';		 actionSelector: #cancel.	result setNameTo: 'cancel'.	frame := LayoutFrame new.	frame leftFraction: 0.5;		 leftOffset: 10;		 bottomFraction: 1.0;		 bottomOffset: -2.	result layoutFrame: frame.	self addMorph: result.	self		updateColor: result		color: result color		intensity: 2.	^ result! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'dgd 4/28/2003 21:07'!createQueryTextMorph: queryString 	"create the queryTextMorph"	| result frame |	result := TextMorph new contents: queryString.	result setNameTo: 'query'.	result lock.	frame := LayoutFrame new.	frame topFraction: 0.0;		 topOffset: 2.	frame leftFraction: 0.5;		 leftOffset: (result width // 2) negated.	result layoutFrame: frame.	self addMorph: result.	^ result! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:56'!createTextPaneExtent: answerExtent acceptBoolean: acceptBoolean topOffset: topOffset buttonAreaHeight: buttonAreaHeight 	"create the textPane"	| result frame |	result := PluggableTextMorph				on: self				text: #response				accept: #response:				readSelection: #selectionInterval				menu: #codePaneMenu:shifted:.	result extent: answerExtent.	result hResizing: #spaceFill;		 vResizing: #spaceFill.	result borderWidth: 1.	result hasUnacceptedEdits: true.	result acceptOnCR: acceptBoolean.	result setNameTo: 'textPane'.	frame := LayoutFrame new.	frame leftFraction: 0.0;		 rightFraction: 1.0;		 topFraction: 0.0;		 topOffset: topOffset;		 bottomFraction: 1.0;		 bottomOffset: buttonAreaHeight negated.	result layoutFrame: frame.	self addMorph: result.	^ result! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:57'!initialize	super initialize.	self setDefaultParameters.	self extent: 400 @ 150.	responseUponCancel := ''.	Preferences roundedMenuCorners		ifTrue: [self useRoundedCorners].	! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:57'!setDefaultParameters	"change the receiver's appareance parameters"	| colorFromMenu worldColor menuColor menuBorderColor |	colorFromMenu := Preferences menuColorFromWorld				and: [Display depth > 4]				and: [(worldColor := self currentWorld color) isColor].	menuColor := colorFromMenu				ifTrue: [worldColor luminance > 0.7						ifTrue: [worldColor mixed: 0.85 with: Color black]						ifFalse: [worldColor mixed: 0.4 with: Color white]]				ifFalse: [Preferences menuColor].	menuBorderColor := Preferences menuAppearance3d				ifTrue: [#raised]				ifFalse: [colorFromMenu						ifTrue: [worldColor muchDarker]						ifFalse: [Preferences menuBorderColor]].	self		setColor: menuColor		borderWidth: Preferences menuBorderWidth		borderColor: menuBorderColor.	self layoutInset: 3! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:58'!setQuery: queryString initialAnswer: initialAnswer answerExtent: answerExtent acceptOnCR: acceptBoolean 	| query topOffset accept cancel buttonAreaHeight |	response := initialAnswer.	done := false.	self removeAllMorphs.	self layoutPolicy: ProportionalLayout new.	query := self createQueryTextMorph: queryString.	topOffset := query height + 4.	accept := self createAcceptButton.	cancel := self createCancelButton.	buttonAreaHeight := (accept height max: cancel height)				+ 4.	textPane := self				createTextPaneExtent: answerExtent				acceptBoolean: acceptBoolean				topOffset: topOffset				buttonAreaHeight: buttonAreaHeight.	self extent: (query extent x max: answerExtent x)			+ 4 @ (topOffset + answerExtent y + 4 + buttonAreaHeight).	! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:58'!updateColor	"update the recevier's fillStyle"	| textPaneBorderColor |	self		updateColor: self		color: self color		intensity: 1.	textPane isNil		ifTrue: [^ self].	textPaneBorderColor := self borderColor == #raised				ifTrue: [#inset]				ifFalse: [self borderColor].	textPane borderColor: textPaneBorderColor! !!FillInTheBlankMorph methodsFor: 'initialization' stamp: 'sd 11/8/2003 15:58'!updateColor: aMorph color: aColor intensity: anInteger 	"update the apareance of aMorph"	| fill fromColor toColor |	Preferences gradientMenu		ifFalse: [^ self].	fromColor := aColor.	toColor := aColor.	anInteger		timesRepeat: [			fromColor := fromColor lighter.			toColor := toColor darker].	fill := GradientFillStyle ramp: {0.0 -> fromColor. 1 -> toColor}.	fill origin: aMorph topLeft.	fill direction: aMorph width @ 0.	fill radial: true.	aMorph fillStyle: fill! !!FillInTheBlankMorph class methodsFor: 'default constants' stamp: 'dgd 4/27/2003 17:10'!defaultAnswerExtent	^  (200@60 * (Preferences standardMenuFont height / 12)) rounded! !!FillInTheBlankMorphWithDictMenu class methodsFor: 'default constants' stamp: 'dgd 4/27/2003 17:11'!defaultAnswerExtent	^  (220 @ 120 * (Preferences standardMenuFont height / 12)) rounded! !!LRUCache methodsFor: 'accessing' stamp: 'dgd 2/6/2002 21:43'!at: aKey 	"answer the object for aKey, if not present in the cache creates it"	| element keyHash |	calls _ calls + 1.	keyHash _ aKey hash.	1		to: size		do: [:index | 			element _ values at: index.			(keyHash						= (element at: 2)					and: [aKey							= (element at: 1)])				ifTrue: ["Found!!"					hits _ hits + 1.					values						replaceFrom: 2						to: index						with: (values first: index - 1).					values at: 1 put: element.					^ element at: 3]].	"Not found!!"	element _ {aKey. keyHash. factory value: aKey}.	values		replaceFrom: 2		to: size		with: values allButLast.	values at: 1 put: element.	^ element at: 3! !!LRUCache methodsFor: 'initialization' stamp: 'dgd 3/28/2003 19:42'!initializeSize: aNumber factory: aBlock 	"initialize the receiver's size and factory"	size := aNumber.	values := Array new: aNumber withAll: {nil. nil. nil}.	factory := aBlock.	calls := 0.	hits := 0! !!LRUCache methodsFor: 'printing' stamp: 'dgd 3/28/2003 19:41'!printOn: aStream 	"Append to the argument, aStream, a sequence of characters  	that identifies the receiver."	aStream nextPutAll: self class name;		 nextPutAll: ' size:';		 nextPutAll: size asString;		 nextPutAll: ', calls:';		 nextPutAll: calls asString;		 nextPutAll: ', hits:';		 nextPutAll: hits asString;		 nextPutAll: ', ratio:';nextPutAll: 	(hits / calls) asFloat asString! !!LRUCache class methodsFor: 'instance creation' stamp: 'dgd 3/26/2003 22:29'!size: aNumber factory: aBlock 	"answer an instance of the receiver"	^ self new initializeSize: aNumber factory: aBlock! !!LRUCache class methodsFor: 'testing' stamp: 'dgd 3/26/2003 22:22'!test	" 	LRUCache test 	"	| c |	c := LRUCache				size: 5				factory: [:key | key * 2].	c at: 1.	c at: 2.	c at: 3.	c at: 4.	c at: 1.	c at: 5.	c at: 6.	c at: 7.	c at: 8.	c at: 1.	^ c! !!LRUCache class methodsFor: 'testing' stamp: 'dgd 3/26/2003 22:22'!test2	" 	LRUCache test2.  	Time millisecondsToRun:[LRUCache test2]. 	MessageTally spyOn:[LRUCache test2].  	"	| c |	c := LRUCache				size: 600				factory: [:key | key * 2].	1		to: 6000		do: [:each | c at: each].	^ c! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:16'!appearanceIcon	"answer a form to be used as icon"	^ Icons		at: #appearance		ifAbsentPut: [ (Form	extent: 16@14	depth: 32	fromArray: #( 0 0 0 4289169776 4289229125 4290082107 4289822288 4291467620 4292060268 4291137109 4289884214 4286929978 4287789670 0 0 0 0 0 4289230930 4290607675 4293577121 4290039534 4291094270 4290240510 4293655806 4294900984 4294829532 4294365358 4289951807 4286405700 0 0 0 4289229124 4292781405 4294901478 4294901495 4282427646 4281185790 4280328446 4290693582 4294877034 4294885266 4294878589 4294897880 4292320092 4285748543 0 0 4291461941 4289033536 4286797872 4291728209 4287549648 4283748081 4283416547 4293450161 4294869536 4294873638 4294472469 4294760617 4294897341 4290869554 0 4290475827 4291728455 4286275662 4288907635 4286270506 4294891655 4294436006 4294892951 4294892950 4294887798 4294493045 4294424929 4294823310 4294896331 4294887044 4286269986 4292321612 4294303367 4289687854 4289226794 4291201593 4294825339 4294890359 4294889072 4294888045 4294887791 4294886764 4294884959 4294884651 4294896469 4294886190 4289025555 4292580149 4294899597 4294894454 4294890086 4294890084 4294887001 4294885202 4294884172 4294883143 4294882115 4294880831 4294879034 4294884370 4294897203 4294820113 4290404369 4286732340 4292645166 4294886481 4294889819 4294886221 4294883393 4294881594 4294880049 4294878506 4294877220 4294875422 4294874137 4294285348 4293959983 4294872847 4290205704 0 4286801746 4286271530 4291394337 4294883392 4294882363 4294879535 4294877992 4294876444 4294807313 4294872077 4291332110 4290302101 4291222190 4292643344 4288824841 0 0 0 4286275917 4289749270 4294880046 4294877992 4294875677 4294744619 4293962089 4294875444 4286484227 4280542776 4280610882 4285238276 4286857244 0 0 0 0 4286341967 4291653651 4294877984 4294741525 4291723672 4292396798 4292056799 4290345992 4283095577 4282835744 4287392000 0 0 0 0 0 0 4286336294 4294807570 4294873615 4289944488 4289625598 4288567285 4293813261 4294869250 4294342916 4285872146 0 0 0 0 0 0 0 4287777553 4293950213 4294015780 4293237122 4293293883 4294866944 4293945344 4286790669 0 0 0 0 0 0 0 0 0 4285680687 4286858001 4287907080 4288563720 4287119627 4285023274 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 18:52'!backIcon	"answer a form to be used as icon"	^ Icons		at: #back		ifAbsentPut: [ (Form	extent: 16@16	depth: 32	fromArray: #( 0 0 0 0 0 0 4283067445 4278803462 4286939742 0 0 0 0 0 0 0 0 0 0 0 0 4283723068 4278549253 4278619142 4286414681 0 0 0 0 0 0 0 0 0 0 0 4284247873 4279203086 4287488397 4280850982 4286677083 0 0 0 0 0 0 0 0 0 0 4284379459 4278808072 4288864162 4294508280 4280915751 4286545754 0 0 0 0 0 0 0 0 0 4284970313 4279069963 4288011157 4294901502 4293852910 4280063772 4281229857 4282411566 4282346028 4282346028 4282346028 4282346028 4282215467 4283724604 0 4286545754 4279134731 4287158152 4294901502 4294770428 4293983472 4286960773 4285185130 4285316460 4285316716 4285316716 4285316716 4285447790 4284792676 4279203855 4286808157 4280052246 4284598881 4291163845 4290571964 4290375097 4290637501 4291819215 4291688909 4291426505 4291426505 4291426505 4291426505 4291754446 4290443706 4280453408 4279656464 4279938586 4283028553 4281321007 4280599332 4280599332 4281255470 4283617618 4285914485 4286899076 4286767746 4286701953 4286701953 4286898820 4286112632 4279796502 4279656720 4278232064 4278237696 4278235648 4278235904 4278235904 4278235648 4278235648 4279089933 4280731430 4281912889 4282175293 4282175293 4282241086 4281848376 4279075084 4286808157 4279527694 4278235136 4278239488 4278237952 4278237952 4278237952 4278238720 4278239232 4278239488 4278371586 4278633990 4278634246 4278634246 4278569733 4278551044 0 4286545754 4278807302 4278237440 4278241280 4278240000 4278240512 4278237184 4278232576 4278232320 4278232320 4278232320 4278232320 4278232320 4278233344 4278219264 0 0 4284970569 4278481156 4278632454 4278832905 4278767112 4278556932 4281231137 4282412078 4282346540 4282346540 4282346540 4282346540 4282215467 4283723836 0 0 0 4284379715 4278743815 4279748631 4280080412 4279342864 4286545754 0 0 0 0 0 0 0 0 0 0 0 4284248129 4279073037 4281127724 4280131612 4286677083 0 0 0 0 0 0 0 0 0 0 0 0 4283723324 4279600405 4280458018 4286414937 0 0 0 0 0 0 0 0 0 0 0 0 0 4283067445 4279197453 4286939742 0 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:41'!cancelIcon	"answer a form to be used as icon"	^ Icons		at: #cancel		ifAbsentPut: [ (Form	extent: 16@13	depth: 32	fromArray: #( 4281204736 4291297280 4292297539 4292569963 4292436064 4291297280 0 0 0 4278386688 4291690496 4292569963 4292569963 4291297280 4290248704 0 0 4288086016 4291432207 4292172378 4293036939 4293354596 4285988864 0 0 4291297280 4293563026 4292638583 4291570732 4292214784 4279631872 0 0 0 4291297280 4291297280 4290838528 4291834418 4293743957 4278387716 4283903791 4292957011 4291237655 4291297280 4291690496 4284350464 0 0 0 0 4279435264 4292214784 4291297280 4291624960 4292764258 4291797152 4294224811 4291834418 4291231744 4292214784 4289855488 0 0 0 0 0 0 4284153856 4292214784 4291690496 4291759887 4292228148 4291568676 4291231744 4292214784 4292673536 4278517760 0 0 0 0 0 0 0 4289003520 4292214784 4291624960 4291624960 4291624960 4292149248 4292673536 4280418304 0 0 0 0 0 0 0 0 4291428352 4291690496 4292149248 4292608000 4292608000 4292608000 4292673536 4282318848 0 0 0 0 0 0 0 4285071360 4292884279 4291759887 4292214784 4293198595 4292673536 4292608000 4292554543 4293198595 4278714368 0 0 0 0 0 4279566336 4292683559 4292228148 4290838528 4292673536 4288937984 4293198595 4292214784 4292087567 4292887620 4291297280 0 0 0 0 0 4292153360 4292297539 4290838528 4292214784 4292214784 0 4283695104 4292673536 4291690496 4292683559 4292884279 4284809216 0 0 0 4287102976 4290710283 4291690496 4291297280 4292673536 4281794560 0 0 4292214784 4291690496 4292214784 4291759887 4292214784 4279304192 0 4280483840 4293198595 4292214784 4292214784 4292673536 4288806912 0 0 0 4281073664 4292214784 4292214784 4292214784 4292214784 4292214784 0 4279631872 4279369728 4279369728 4279369728 4279762944 0 0 0 0 0 4279697408 4279369728 4279369728 4279369728 4279828480 4278386688)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:07'!copyIcon	"answer a form to be used as icon"	^ Icons		at: #copy		ifAbsentPut: [ (Form	extent: 15@16	depth: 32	fromArray: #( 4288270844 4291226876 4291226876 4291161084 4291161084 4291161084 4291095548 4291029756 4290964219 4289250782 4288777855 0 0 0 0 4290764540 4294967295 4294901503 4294835966 4294835710 4294770174 4294704381 4294573053 4294507517 4293915896 4287476696 0 0 0 0 4290764540 4294901503 4294835966 4294573051 4294375416 4294309623 4294243831 4294178038 4293981174 4293324018 4288988907 0 0 0 0 4290764028 4294835966 4294770174 4290698232 4290501627 4290764540 4290764540 4290764540 4290764028 4290698492 4290698492 4290632700 4290501627 4288261829 0 4290698492 4294770174 4294704382 4290697975 4294441980 4294967295 4294901503 4294835967 4294835710 4294770174 4294704381 4294573309 4294507517 4293521654 4286881466 4290632956 4294704381 4294573309 4290632183 4294441468 4294901503 4294835966 4294835710 4294770174 4294704381 4294573053 4294507517 4294375932 4293718775 4289187056 4290632699 4294573053 4294507517 4290435319 4294375932 4294835966 4294770174 4294770174 4294704381 4294573053 4294507004 4294375932 4293915896 4293390070 4288989934 4290501627 4294507004 4294375932 4290369782 4294375932 4294770174 4294704382 4294704381 4294573053 4294441468 4294375676 4294113019 4293390069 4293192948 4288792301 4290435835 4294375676 4294178555 4289909235 4294310139 4294704382 4294573309 4294507517 4294441468 4294310140 4294112761 4293390069 4293127156 4292930035 4288529643 4290304249 4293915897 4293324277 4289580784 4294244347 4294573053 4294507517 4294441468 4294310140 4293981689 4293324277 4293127156 4292863986 4292601328 4288332265 4289975799 4293324277 4293127156 4289383663 4294178555 4294507516 4294375932 4294310139 4293784568 4293258485 4293061363 4292863986 4292535792 4292338414 4288069350 4289055728 4293061364 4292863986 4289186542 4294113017 4294375676 4294178555 4293586934 4293192948 4292995827 4292798194 4292535536 4292272878 4292009965 4287806180 4286231533 4288660972 4288463851 4286165225 4293916153 4294113017 4293390069 4293192948 4292995571 4292667122 4292469999 4292207086 4291944172 4291681259 4287477731 0 0 0 4287008151 4293653239 4293390069 4293127156 4292930035 4292666864 4292404207 4292207086 4291878636 4291615467 4291287017 4287214816 0 0 0 4286942614 4292667122 4293061620 4292863986 4292601328 4292403951 4292141293 4291812588 4291549674 4291221481 4290958566 4286951902 0 0 0 4286942357 4291681516 4292010222 4291813100 4291615723 4291418602 4291155689 4290893030 4290695397 4290367203 4290104290 4286491610)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:11'!cutIcon	"answer a form to be used as icon"	^ Icons		at: #cut		ifAbsentPut: [ (Form	extent: 14@16	depth: 32	fromArray: #( 4288270844 4291226876 4291226876 4291226876 4291161340 4291161084 4291161084 4291095548 4291095548 4291029756 4291029755 4289846011 4287272869 0 4290764540 4294967295 4294967295 4294901503 4294901503 4294835966 4294770174 4294770174 4294704382 4294573309 4294573053 4294507005 4290303731 4286484644 4290764540 4294901759 4294901503 4294835967 4294835966 4294770174 4294770174 4294704381 4294573309 4294507517 4294441468 4294244347 4293718775 4287740902 4290764540 4294901503 4294835967 4294808989 4294770174 4294770174 4294704381 4294573053 4294507517 4294441468 4294480796 4293850104 4293586934 4289121263 4290764028 4294835966 4294733434 4294457931 4294664815 4294704381 4294573053 4294507517 4294441468 4294533486 4294457931 4294142069 4293324277 4288924142 4290698492 4294835710 4294756301 4294522439 4294459216 4294664814 4294507517 4294441468 4294533486 4294459216 4294456646 4293573573 4293127156 4288792301 4290698492 4294770174 4294704382 4294690508 4294522439 4294459216 4294533486 4294467950 4294459216 4294456646 4293507781 4293061620 4292930035 4288529643 4290632956 4294704381 4294573053 4294507517 4294493644 4294458187 4294461784 4294461784 4294392394 4293507781 4293061363 4292863986 4292667120 4288398058 4290632699 4294573053 4294507517 4294441468 4294375676 4294399587 4294531942 4294531942 4294071137 4292995827 4292863986 4292601328 4292469743 4288200935 4290501627 4294507517 4294441468 4294375676 4294207346 4294466918 4294264916 4294264916 4294466918 4293681775 4292601328 4292404207 4292207086 4288003814 4290435835 4294441468 4294375676 4294076530 4294468201 4294200407 4293179844 4293114051 4294134870 4294468201 4293288302 4292141294 4291878636 4287806180 4290370041 4294310140 4293947515 4294468202 4294200407 4293114308 4292930035 4292667122 4292785602 4294134871 4294468202 4292961908 4291681259 4287543523 4290238712 4293915897 4293376965 4293869131 4293114308 4292863986 4292666864 4292469999 4292272878 4292325824 4293737546 4291931325 4291418345 4287346145 4289975799 4293324277 4293192948 4292995827 4292863986 4292601328 4292404207 4292272622 4292009965 4291812588 4291615467 4291287273 4291089895 4287149024 4289252594 4293127156 4292995571 4292798450 4292535792 4292404207 4292207086 4291944429 4291747051 4291549674 4291287017 4291089895 4290826725 4286886366 4288924143 4292930035 4292798194 4292535536 4292338415 4292141293 4291878636 4291681259 4291484138 4291221481 4291024102 4290761189 4290498276 4286688732)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:54'!deleteIcon	"answer a form to be used as icon"	^ Icons		at: #delete		ifAbsentPut: [ Form	extent: 14@16	depth: 32	fromArray: #( 4288270844 4291226876 4291226876 4291226876 4291161340 4291161084 4291161084 4291095548 4291095548 4291029756 4291029755 4289846011 4287272869 0 4290764540 4294967295 4294967295 4294901503 4294901503 4294835966 4294770174 4294770174 4294704382 4294573309 4294573053 4294507005 4290303731 4286484644 4290764540 4294901759 4294901503 4294835967 4294835966 4294770174 4294770174 4294704381 4294573309 4294507517 4294441468 4294244347 4293718775 4287740902 4290764540 4294901503 4294835967 4294808989 4294770174 4294770174 4294704381 4294573053 4294507517 4294441468 4294480796 4293850104 4293586934 4289121263 4290764028 4294835966 4294733434 4294457931 4294664815 4294704381 4294573053 4294507517 4294441468 4294533486 4294457931 4294142069 4293324277 4288924142 4290698492 4294835710 4294756301 4294522439 4294459216 4294664814 4294507517 4294441468 4294533486 4294459216 4294456646 4293573573 4293127156 4288792301 4290698492 4294770174 4294704382 4294690508 4294522439 4294459216 4294533486 4294467950 4294459216 4294456646 4293507781 4293061620 4292930035 4288529643 4290632956 4294704381 4294573053 4294507517 4294493644 4294458187 4294461784 4294461784 4294392394 4293507781 4293061363 4292863986 4292667120 4288398058 4290632699 4294573053 4294507517 4294441468 4294375676 4294399587 4294531942 4294531942 4294071137 4292995827 4292863986 4292601328 4292469743 4288200935 4290501627 4294507517 4294441468 4294375676 4294207346 4294466918 4294264916 4294264916 4294466918 4293681775 4292601328 4292404207 4292207086 4288003814 4290435835 4294441468 4294375676 4294076530 4294468201 4294200407 4293179844 4293114051 4294134870 4294468201 4293288302 4292141294 4291878636 4287806180 4290370041 4294310140 4293947515 4294468202 4294200407 4293114308 4292930035 4292667122 4292785602 4294134871 4294468202 4292961908 4291681259 4287543523 4290238712 4293915897 4293376965 4293869131 4293114308 4292863986 4292666864 4292469999 4292272878 4292325824 4293737546 4291931325 4291418345 4287346145 4289975799 4293324277 4293192948 4292995827 4292863986 4292601328 4292404207 4292272622 4292009965 4291812588 4291615467 4291287273 4291089895 4287149024 4289252594 4293127156 4292995571 4292798450 4292535792 4292404207 4292207086 4291944429 4291747051 4291549674 4291287017 4291089895 4290826725 4286886366 4288924143 4292930035 4292798194 4292535536 4292338415 4292141293 4291878636 4291681259 4291484138 4291221481 4291024102 4290761189 4290498276 4286688732)	offset: 0@0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:44'!doItIcon	"answer a form to be used as icon"	^ Icons		at: #doIt		ifAbsentPut: [ (Form	extent: 14@16	depth: 32	fromArray: #( 0 0 0 0 0 0 0 0 4279768832 4292334872 4287006269 4280492824 0 0 0 0 0 0 0 0 4278453249 4289634304 4294967173 4294966710 4294964609 4294962201 4294961408 4288385024 0 0 0 0 0 4284306944 4294966869 4294966675 4294961992 4294699031 4294962201 4294172424 4286411776 4279110912 0 0 0 4282399744 4294964542 4294967204 4294964093 4294961459 4294699031 4294699031 4288385024 4279571200 0 0 0 4281215488 4294502162 4294966675 4294964878 4294962004 4294895656 4294501398 4289042441 4280755456 0 0 0 0 4293318145 4294967041 4294964769 4294896425 4294896425 4294830632 4294830632 4294896188 4289109288 4280097809 0 0 0 0 4278453248 4282794240 4290160896 4294962450 4294966557 4294896425 4294962480 4294896196 4294964609 4294965638 4294961408 4288978230 4281479462 0 0 0 0 0 4280360704 4290818326 4294962480 4294896425 4294895651 4294699031 4294962450 4293318145 4285490944 0 0 0 0 0 4286608912 4294965067 4294895656 4294896425 4294962201 4291542272 4283320320 4278453248 0 0 0 0 4281610240 4294966065 4294967194 4294963035 4294896425 4288450064 4280886784 0 0 0 0 0 0 4292528640 4294967054 4294962480 4294896425 4294830632 4294896188 4294963035 4287070262 4283979064 0 0 0 0 0 4278518784 4284307200 4291476494 4294502162 4294895656 4294896425 4294895656 4294896425 4294965248 4293910016 4286280192 0 0 0 0 0 4278387456 4294041617 4294962480 4294896425 4294699031 4291739648 4285096448 4279637248 0 0 0 0 0 4281873408 4294967054 4294964769 4292594432 4286872832 4280426240 4278255616 0 0 0 0 0 0 4289239808 4294965248 4289832192 4281873408 4278453248 0 0 0 0 0 0 0 0 4285293312 4283386368 4278453248 0 0 0 0 0 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:17'!findIcon	"answer a form to be used as icon"	^ Icons		at: #find		ifAbsentPut: [ (Form	extent: 12@12	depth: 32	fromArray: #( 0 0 4278190081 4278190081 0 0 0 0 0 0 0 0 0 4278190081 4292272882 4289053924 4278190081 0 0 0 0 0 0 0 0 4278190081 4289053924 4286292698 4278190081 0 0 4278190081 4278190081 0 0 0 0 4289243304 4278190081 4278190081 0 0 4278190081 4292272882 4289447398 4278190081 0 0 0 0 0 0 0 0 4278190081 4289053924 4286292698 4278190081 0 0 0 4278190081 4278190081 4278190081 4278190081 0 0 4278190081 4278190081 0 0 0 4278190081 4291747311 4290696170 4289842151 4289053924 4278190081 0 0 0 0 0 0 4278190081 4290696170 4289842151 4289053924 4288265441 4287345885 4278190081 0 0 4278190081 4278190081 0 4278190081 4289842151 4289053924 4288265441 4287345885 4286426073 4278190081 0 4278190081 4292272882 4289053924 4278190081 4278190081 4289053924 4288265441 4287345885 4286426073 4285506261 4278190081 0 4278190081 4289053924 4286292698 4278190081 4278190081 4288265441 4287345885 4286426073 4285506261 4284520913 4278190081 0 0 4281088591 4278190081 0 0 4278190081 4278190081 4278190081 4278190081 4278190081 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 18:54'!forwardIcon	"answer a form to be used as icon"	^ Icons		at: #forward		ifAbsentPut: [ (Form	extent: 16@16	depth: 32	fromArray: #( 0 0 0 0 0 0 0 4286939742 4278803462 4283067445 0 0 0 0 0 0 0 0 0 0 0 0 0 4286414681 4278619142 4278549253 4283723068 0 0 0 0 0 0 0 0 0 0 0 0 4286677083 4280850982 4287488397 4279203086 4284247873 0 0 0 0 0 0 0 0 0 0 0 4286545754 4280915751 4294508280 4288864162 4278808072 4284379459 0 0 0 4283725116 4282215467 4282346028 4282346028 4282346028 4282346028 4282411566 4281229857 4280063772 4293852910 4294901502 4288011157 4279069963 4284970313 0 0 4279203855 4284792932 4285447790 4285316716 4285316716 4285316716 4285316460 4285185130 4286960773 4293983472 4294770428 4294901502 4287158152 4279134731 4286545754 0 4280453408 4290443706 4291754446 4291426505 4291426505 4291426505 4291426505 4291688909 4291819215 4290637501 4290375097 4290571964 4291163845 4284598881 4280052246 4286808157 4279796502 4286112632 4286898820 4286701953 4286701953 4286767746 4286899076 4285914485 4283617618 4281255470 4280599332 4280599332 4281321007 4283028553 4279938586 4279656464 4279075084 4281848376 4282241086 4282175293 4282175293 4281912889 4280731430 4279089933 4278235648 4278235648 4278235904 4278235904 4278235648 4278237696 4278232064 4279656720 4278551044 4278569733 4278634246 4278634246 4278633990 4278371586 4278239488 4278239232 4278238720 4278237952 4278237952 4278237952 4278239488 4278235136 4279527694 4286808157 4278219264 4278233344 4278232320 4278232320 4278232320 4278232320 4278232320 4278232576 4278237184 4278240512 4278240000 4278241280 4278237440 4278807302 4286545754 0 4283723836 4282215467 4282346540 4282346540 4282346540 4282346540 4282412078 4281231137 4278556932 4278767112 4278832905 4278632454 4278481156 4284970569 0 0 0 0 0 0 0 0 0 4286545754 4279342864 4280080412 4279748631 4278743815 4284379715 0 0 0 0 0 0 0 0 0 0 4286677083 4280131612 4281127724 4279073037 4284248129 0 0 0 0 0 0 0 0 0 0 0 4286414937 4280458018 4279600405 4283723324 0 0 0 0 0 0 0 0 0 0 0 0 4286939742 4279197453 4283067445 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:14'!helpIcon	"answer a form to be used as icon"	^ Icons		at: #help		ifAbsentPut: [ Form	extent: 16@16	depth: 32	fromArray: #( 0 0 0 0 0 4289539622 4289923849 4289988102 4289857030 4289268745 4288818726 0 0 0 0 0 0 0 0 4289670694 4290838785 4292359220 4293682790 4293620595 4293554545 4293420903 4291705403 4289398278 4288228902 0 0 0 0 0 4289798171 4291824909 4294345346 4294818233 4294231236 4294434012 4294434269 4294899960 4294891736 4294217358 4290584865 4287766555 0 0 0 4289670951 4291693066 4294737277 4294615971 4294031287 4294634218 4294901502 4294901502 4294901502 4294833396 4294887881 4294743188 4290255900 4287704871 0 0 4290707456 4294267474 4294870919 4293888136 4294901502 4294900474 4294880171 4294875031 4294824401 4294835966 4294894563 4294872975 4294009442 4288283652 0 4289604901 4292284689 4294860639 4294859868 4293959840 4294901502 4294881456 4294858840 4294790477 4293685617 4294638844 4294901502 4294723913 4294718516 4290512904 4287376677 4289858313 4293596694 4294853957 4294851131 4294728796 4294874774 4294857555 4294849587 4293078574 4293638328 4294901502 4294619312 4293853698 4293853184 4292345856 4287040265 4289855488 4293988882 4294844962 4294844191 4294843934 4294843934 4294843420 4293865263 4293969606 4294835966 4294830826 4293926430 4293656576 4293853184 4292935680 4286775296 4289658880 4294182149 4294838537 4294838537 4294838537 4294838280 4294181892 4293632160 4294901502 4294756809 4293925916 4293656576 4293656576 4293853184 4293066752 4286644224 4289268489 4293525504 4294836224 4294836224 4294770688 4294770688 4292938764 4294437610 4294900988 4294386724 4294180864 4294246400 4294246400 4294443008 4292673536 4286515977 4288818469 4291887104 4294836224 4294836224 4294770688 4294770688 4294246914 4294878886 4294876830 4294770688 4294770688 4294770688 4294770688 4294836224 4290314240 4286655781 0 4289593344 4294247428 4294837509 4294837252 4294837252 4294180864 4292627018 4293613656 4294837252 4294837252 4294837252 4294837509 4293919748 4287037440 0 0 4288229159 4290642948 4294775057 4294840593 4294839051 4293276466 4294308080 4294834424 4294853186 4294838794 4294840593 4294775057 4289135620 4286394151 0 0 0 4287701019 4290447368 4294253596 4294844705 4294717231 4294884283 4294885054 4294850360 4294844705 4293991452 4289136648 4285866011 0 0 0 0 0 4287704614 4288283652 4290843154 4293402656 4293997620 4293932084 4293205791 4290253330 4287038468 4286459430 0 0 0 0 0 0 0 0 4287376934 4287040779 4286841346 4286710274 4286516491 4286721574 0 0 0 0 0)	offset: 0@0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:02'!inspectIcon	"answer a form to be used as icon"	^ Icons		at: #inspect		ifAbsentPut: [Form		extent: 15 @ 15		depth: 32		fromArray: #(0 0 0 4278190081 4278190081 4278190081 4278190081 4278190081 0 0 0 0 0 0 0 0 0 4278190081 4291283919 4293324531 4292405234 4291615719 4289444808 4278190081 0 0 0 0 0 0 0 4278190081 4293324531 4293456119 4292405234 4291945200 4290959852 4289514727 4289054950 4278190081 0 0 0 0 0 4278190081 4291283919 4293456119 4292667891 4291748335 4290171625 4289514727 4289514727 4289514727 4288263886 4278190081 0 0 0 0 4278190081 4293257966 4292405234 4291748335 4289514727 4289054950 4289054950 4288923620 4288923620 4288923620 4278190081 0 0 0 0 4278190081 4291945200 4291485422 4289514727 4289054950 4288463845 4288463845 4288463845 4288463845 4288923620 4278190081 0 0 0 0 4278190081 4291090405 4290171625 4289054950 4288463845 4288463845 4288463845 4288135398 4288135398 4288135398 4278190081 0 0 0 0 4278190081 4288656582 4288923620 4288463845 4288463845 4288135398 4287806948 4288135398 4287806948 4287213006 4278190081 0 0 0 0 0 4278190081 4288463070 4288463845 4288135398 4287806948 4287544294 4287544294 4287280095 4278190081 0 0 0 0 0 0 0 4278190081 4287213006 4287806948 4287544294 4287280865 4286622160 4278190081 4278190081 4278190081 4278190081 0 0 0 0 0 0 4278190081 4278190081 4278190081 4278190081 4278190081 0 4278190081 4287518507 4287456581 4278190081 0 0 0 0 0 0 0 0 0 0 0 4278190081 4287585846 4294029435 4287329891 4278190081 0 0 0 0 0 0 0 0 0 0 0 4278190081 4287390788 4293634933 4286342996 4278190081 0 0 0 0 0 0 0 0 0 0 0 4278190081 4286339131 4284764738 4278190081 0 0 0 0 0 0 0 0 0 0 0 0 4278190081 4278190081 4294901760 )		offset: 0 @ 0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 18:02'!morphsIcon	"answer a form to be used as icon"	^ Icons		at: #morphs		ifAbsentPut: [ Form	extent: 16@16	depth: 32	fromArray: #( 0 0 4279900693 4286348346 4286019384 4278255873 0 0 0 0 0 4281944942 4279441698 0 0 0 0 4289372704 4294962505 4294965433 4294966462 4294964520 4283320832 0 0 0 4280693842 4287213015 4287605985 4279837496 0 0 4279900435 4294897927 4294831202 4294831961 4294831961 4294964074 4294966791 0 0 4280562771 4287147998 4286160590 4287213015 4287871204 4280694355 0 4286611514 4294964520 4294833203 4294767410 4294831401 4294962993 4294966303 4282136320 4281811540 4287345393 4287871204 4288923879 4289516010 4289252844 4288793086 4280825941 4285821228 4294965025 4294833203 4294833466 4294767410 4294962999 4294966303 4282071040 4279834136 4287413759 4290833151 4291556606 4291556606 4291622399 4289188607 4278256388 4278650628 4294966791 4294965304 4294899259 4294962999 4294897194 4294967056 0 0 4279637531 4287675384 4291622399 4293722111 4291622399 4278716686 0 0 4281280512 4294967065 4294967065 4294966303 4294967056 4281610496 0 0 0 4280095000 4288399355 4291489535 4278914837 0 0 0 0 0 4282596608 4282531328 0 0 0 0 0 0 4278913806 4279049515 0 0 0 0 0 0 4279900709 4278519567 0 0 0 0 0 4280752409 4279373072 4279439122 4280097053 0 0 0 0 0 4285237697 4281816715 0 0 0 0 4281073664 4293288802 4294558400 4294359221 4291297280 4280951072 0 0 0 4281347626 4284845517 4285240530 4279768858 0 0 0 4292280320 4293288802 4292299081 4292299081 4291840329 4289789952 0 0 0 4286620118 4288134376 4287871204 4282606746 0 0 4285726720 4293726481 4292610827 4292673536 4291559424 4291301392 4290314240 4282526764 0 4279178011 4289648383 4290833151 4289977080 4287675384 4279637536 0 4290314240 4293066752 4292673536 4292673536 4292214784 4291297280 4290641920 4284427051 0 4288003050 4291754239 4292606975 4292606975 4290306556 4285501886 0 0 4294181121 4293066752 4293001216 4291624960 4291297280 4289200128 0 4278849043 4291622399 4293132287 4293722111 4293132287 4291622399 4290043388 4280624427 0 4286447616 4292280320 4292739072 4292280320 4291624960 4280749582 0 4280693314 4283260533 4283391341 4283259501 4283391341 4283391341 4282799986 4282009177 0 0 4281532673 4280942849 4281008385 4280352768 0 0)	offset: 0@0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:58'!newIcon	"answer a form to be used as icon"	^ Icons		at: #new		ifAbsentPut: [Form	extent: 14@15	depth: 32	fromArray: #( 0 0 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 4278190081 0 0 4278190081 4294375933 4294375933 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4278190081 0 0 4278190081 4294375933 4294375933 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4294310140 4278190081 0 4294415388 4278190081 4294415388 4294967040 4294415388 4293718520 4294415388 4293718520 4293718520 4293718520 4293718520 4293718520 4278190081 4294415388 4294967040 4294811648 4294957312 4294967040 4294957312 4294811648 4294967040 4294415388 4292929779 4292929779 4292929779 4292929779 4278190081 4294967295 4294811648 4294967040 4294953216 4294967235 4294953216 4294967040 4294811648 4292403952 4292403952 4292403952 4292403952 4292403952 4278190081 4294415388 4294957312 4294953216 4294967235 4294967235 4294967235 4294953216 4294957312 4294415388 4291812076 4291812076 4291812076 4291812076 4278190081 4294967040 4294967040 4294967235 4294967235 4294967235 4294967235 4294967235 4294967040 4294967040 4291549419 4291220970 4291220713 4291220713 4278190081 4294415388 4294957312 4294953216 4294967235 4294967235 4294967235 4294953216 4294957312 4294415388 4291549419 4291549419 4291549419 4291549419 4278190081 4294967295 4294415388 4294967040 4294953216 4294967235 4294953216 4294967040 4294811648 4292206831 4292403952 4292403952 4292403952 4292272624 4278190081 4294415388 4294967040 4294415388 4294811648 4294967040 4294811648 4294415388 4294967040 4294415388 4292929779 4292995315 4292469745 4292995315 4278190081 4293848813 4294415388 4278190081 4294415388 4294967040 4294415388 4293455608 4294415388 4293718521 4293455607 4293455607 4293455607 4293455607 4278190081 0 0 4278190081 4294112764 4294112763 4294112763 4294112763 4294112763 4294112763 4294113020 4294112763 4294112763 4294112763 4278190081 0 0 4278190081 4293718777 4293718777 4293718520 4293718520 4293718520 4293718520 4293718520 4293718520 4293718520 4293718520 4278190081 0 0 4278190081 4281479730 4280427042 4280361249 4280361249 4280361249 4280361249 4280361249 4280361249 4280361249 4280361249 4280427042)	offset: 0@0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:42'!okIcon	"answer a form to be used as icon"	^ Icons		at: #ok		ifAbsentPut: [ (Form	extent: 14@13	depth: 32	fromArray: #( 0 0 0 0 0 0 0 0 0 0 0 0 4280494885 4281243983 0 0 0 0 0 0 0 0 0 0 0 4280896308 4288013220 4278234158 0 0 0 0 0 0 0 0 0 0 4281095737 4281509462 4278493479 4278228005 0 0 0 0 0 0 0 0 0 4281688130 4282628192 4278231328 4278493479 4278452225 0 4281420601 4281509462 4278200576 0 0 0 0 4281689668 4283022949 4278298918 4278234158 4278191872 0 4280297251 4279477564 4289389236 4278214656 0 0 0 4280969528 4282692712 4278298918 4278235439 4278192128 0 0 4278212374 4278234402 4279809075 4278231328 0 0 4280706618 4283022949 4278236197 4278234158 4278196227 0 0 0 4278210831 4278237731 4279156015 4282834031 0 4286221696 4284729979 4278236197 4278235439 4278196739 0 0 0 0 4278208269 4278306857 4278242856 4284670076 4291755482 4288013220 4278234402 4278235439 4278199304 0 0 0 0 0 4278269718 4278239018 4278240548 4279225909 4279354676 4278237977 4278235439 4278200585 0 0 0 0 0 0 4278657040 4278237225 4278239018 4278242599 4278239018 4278237751 4278199048 0 0 0 0 0 0 0 4278387972 4278231328 4278239018 4278306857 4278237751 4278196483 0 0 0 0 0 0 0 0 0 4278194944 4278221857 4278229557 4278193664 0 0 0 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:07'!openIcon	"answer a form to be used as icon"	^ Icons		at: #open		ifAbsentPut: [ (Form	extent: 16@15	depth: 32	fromArray: #( 0 0 0 0 0 0 0 0 4288842363 4286347163 4285428404 4288645244 0 0 0 0 0 0 0 0 0 0 0 4287791492 4286677171 4291349230 4292401910 4285689241 0 0 0 0 4283131820 4285236925 4284776636 4284710844 4282670503 4288908410 4287004053 4288257747 4293322490 4293980158 4293585148 4287796945 4287265666 0 0 0 4282218204 4289850108 4288535292 4287747580 4285178604 4285102528 4291546859 4294769918 4293980414 4293125114 4293124602 4292532982 4284705196 4287790973 0 0 4282874839 4291099902 4289127420 4287280106 4288127449 4293914618 4294901502 4294375166 4293717246 4293256698 4292861687 4290889969 4286483154 4284703113 4288251003 4288251003 4282612183 4290902782 4287475429 4290624737 4294901502 4294901502 4294901502 4294901502 4294834174 4294637054 4285040346 4282016981 4283727070 4281686469 4282736052 4281089440 4282480343 4291165694 4286887407 4284646617 4287080942 4286751464 4286488549 4286290405 4286289636 4283330515 4281229271 4283141880 4282025470 4282354942 4280177122 4280233634 4282349012 4291428094 4282549220 4283990750 4288592884 4288003830 4286887156 4285900529 4284717552 4284059633 4284062462 4281105406 4280578556 4279651815 4278194611 4282861711 4282282451 4290310398 4281165015 4292208892 4291486199 4291885821 4288731902 4285640957 4283272956 4281366010 4280114165 4279189471 4278459587 4279047084 4278719144 0 4282414804 4286232820 4283794660 4292738814 4288205047 4286889466 4284719870 4282351098 4280639217 4279190507 4278396373 4278195907 4278194104 4279112877 4279837342 0 4282415060 4283008479 4288003054 4289850366 4286236414 4283996920 4283601660 4282087928 4280178928 4278464737 4278198229 4278197197 4278194880 4278586798 4281612178 0 4280637902 4282809825 4289778679 4290898942 4289123838 4287478268 4286424566 4285306353 4283199973 4281621469 4281291477 4281157576 4280695997 4279247534 4283583881 0 4278859967 4284517603 4294901246 4294901502 4294901246 4294308348 4293584630 4292795119 4292334314 4291545315 4290690268 4289966293 4289571281 4281551024 0 0 4278660536 4289249007 4294901502 4294901502 4294901502 4294901502 4294505978 4293453040 4292400102 4291347677 4290295250 4289571273 4288782788 4280102558 0 0 4278791603 4281293771 4282016462 4281819086 4281818570 4281489864 4281225665 4280896443 4280566964 4280171951 4279973544 4279709860 4279315104 4281940622 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:09'!pasteIcon	"answer a form to be used as icon"	^ Icons		at: #paste		ifAbsentPut: [ (Form	extent: 15@16	depth: 32	fromArray: #( 0 0 0 0 0 4289107077 4291547086 4289503123 0 0 0 0 0 0 0 4293818659 4294941516 4294941256 4294940737 4292448348 4292142057 4292601837 4291811804 4292256118 4294935827 4294935311 4294935052 4294536455 4289563760 0 4294943061 4294967035 4294965739 4291940551 4290760663 4290826455 4290234320 4290496461 4291021773 4290951586 4294951747 4294950973 4294940182 4290675287 0 4294943576 4294965741 4294964182 4294958217 4294956403 4294955373 4294954855 4294954337 4294953819 4294952789 4294950726 4294942484 4294935297 4290675287 0 4294943319 4294964443 4294959256 4294957187 4294956670 4294956151 4290893017 4290764540 4290764540 4290764540 4290764540 4290698492 4290698492 4290370041 4288652199 4294943062 4294961076 4294958227 4294957452 4294956935 4294956418 4292600283 4294967295 4294901503 4294835966 4294770174 4294704381 4294573053 4294507516 4290435317 4294942030 4294959265 4294958747 4294957974 4294957202 4294956684 4292600286 4294901503 4294835966 4294770174 4294704381 4294573053 4294441468 4294113017 4293586934 4294941774 4294959527 4294959011 4294958237 4294957465 4294956949 4292534752 4294835710 4294770174 4294704381 4294573053 4294441468 4294244347 4293521398 4293192948 4294941774 4294959527 4294959011 4294958237 4294957465 4294956949 4292534752 4294770174 4294704381 4294507517 4294441468 4294244347 4293521398 4293127156 4292863986 4294941774 4294959527 4294959011 4294958237 4294957465 4294956949 4292468960 4294573309 4294507516 4294375932 4294244347 4293521398 4293061620 4292798450 4292469999 4294941774 4294959527 4294959011 4294958237 4294957465 4294954882 4292466372 4294507004 4294375676 4293981689 4293324277 4293061363 4292667122 4292404207 4292141293 4294941774 4294959527 4294959011 4294958237 4294957465 4294948676 4292335044 4294375676 4293784311 4293258484 4292995571 4292666864 4292338415 4292009965 4291681259 4294941774 4294959527 4294959011 4294958237 4294951517 4294946866 4292203203 4293718775 4293192948 4292930035 4292601328 4292272878 4291878892 4291615466 4291155687 4294941774 4294959527 4294959011 4294953839 4294947900 4294946866 4291283903 4293127156 4292863986 4292535536 4292207086 4291813100 4291549674 4291155687 4290761189 4294940996 4294956423 4294952288 4294949187 4294947900 4294946866 4290036159 4290172144 4289908975 4289514990 4289186541 4288857836 4288463595 4288135145 4287740903 4293818146 4294937893 4294937378 4294936862 4294936091 4294935578 4294935064 4294934551 4294934037 4294933524 4294933011 4294932242 4294536732 4289563762 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:20'!printIcon	"answer a form to be used as icon"	^ Icons		at: #print		ifAbsentPut: [ (Form	extent: 16@16	depth: 32	fromArray: #( 0 0 0 4287660927 4286019978 4284840866 4283788962 0 0 0 0 0 0 0 0 0 0 0 4287600304 4288655058 4291350760 4294242296 4290495966 4284968583 0 0 0 0 0 0 0 0 4287800264 4293192437 4294638333 4294901502 4294374652 4293256689 4293256176 4284775337 4288382841 0 0 0 0 0 0 0 4287271852 4293915898 4294901502 4294440957 4293848824 4293190897 4292992751 4289443287 4284705153 0 0 0 0 0 0 0 0 4289116375 4294901502 4294506749 4293848824 4293190897 4292795628 4292794859 4284643753 4284049819 4284574110 0 0 0 0 0 0 4286744995 4293718264 4294835454 4294045431 4293453041 4292008686 4289319414 4284658682 4280512230 4279060949 4279780545 4283061147 0 0 0 0 4288186497 4289312980 4294900990 4292865786 4290109434 4286301950 4283147770 4280974577 4279128798 4279061980 4282416362 4288196840 4283585690 0 0 0 4286742676 4286949071 4291885822 4288734462 4284988926 4282554616 4281236719 4281563627 4285506548 4290763000 4294901502 4294901502 4286744788 4285950337 0 4284577209 4287670000 4291488509 4289720318 4285187582 4284001277 4284918266 4288596220 4293259774 4294901502 4294901502 4294047229 4292797425 4287735499 4283715462 0 4284184788 4290561020 4290693886 4290895614 4289059582 4290699006 4293916158 4294638334 4294244350 4293258237 4291218156 4290691566 4289573341 4284325519 4283517828 0 4284316112 4290692855 4289772017 4291482365 4293849342 4294309630 4293258237 4292402680 4291021039 4289770469 4288718814 4286087873 4284116655 4285434559 4283780737 0 4284053202 4292469246 4291021558 4290034671 4291547894 4291416305 4290626801 4289638886 4288521692 4287075790 4286221505 4287931854 4291087075 4286220996 4283785101 0 4284771749 4286946021 4292732670 4292337146 4290494447 4290100463 4289311716 4288194265 4288917977 4290693860 4293718008 4294308346 4293453556 4293650164 4289443800 4283852689 0 4285032853 4285169103 4292995837 4293652990 4291549182 4287668951 4291154666 4294901502 4294901502 4294637565 4294308346 4292401643 4288062926 4284051099 4285230722 0 0 4286214536 4284509628 4290298863 4287272414 4283718823 4285759661 4291549678 4294901502 4293191413 4287735246 4284773272 4285558655 0 0 0 0 0 4286937218 4283520669 4285097100 4287922300 0 4286743957 4287077829 4285628320 4286675840 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:22'!quitIcon	"answer a form to be used as icon"	^ Icons		at: #quit		ifAbsentPut: [ (Form	extent: 16@16	depth: 32	fromArray: #( 0 4292188820 4288088834 4289279270 4289146144 4289080608 4289145629 4288949020 4288948762 4288947994 4288947992 4288816152 4288948761 4288023298 4292254613 0 4292188820 4289146144 4292455817 4290799168 4290866760 4290933064 4290933580 4291065420 4290999885 4291197774 4291067216 4291067986 4291396951 4291861610 4288552465 4292254614 4288088834 4292390024 4289344273 4289808164 4289874983 4290072620 4290139181 4291725159 4291856746 4290338872 4290470717 4290668351 4290669122 4290801223 4291728742 4288089090 4289213477 4290933067 4289807906 4290007596 4290666557 4294365119 4294967295 4294967295 4294967295 4294967295 4294101944 4291065425 4290801736 4290868043 4291529308 4288619026 4289146144 4290866247 4289874983 4290666557 4294967295 4294967295 4294431426 4292385150 4292913293 4294962658 4294967295 4294965746 4291264087 4290934864 4291463773 4288551693 4289080608 4290933064 4290072620 4294365119 4294967295 4292846473 4290470459 4293970614 4293705899 4290735172 4293045653 4294967295 4293838771 4291001429 4291595103 4288551436 4289145629 4290933580 4290931784 4294967295 4294431426 4290470459 4290602558 4294962658 4294962915 4290801736 4290868043 4294963429 4294967295 4291067735 4291530081 4288420107 4288949020 4291065420 4291725159 4294967295 4292120687 4290602558 4290668865 4294962915 4294962916 4290868043 4290934350 4293574569 4294967295 4291991411 4291596902 4288419593 4288948762 4290999885 4291856746 4294967295 4292121202 4290668865 4290735172 4294962916 4294963172 4290934350 4291001172 4293640618 4294967295 4292387974 4291662954 4288419079 4288947994 4291197774 4291196498 4294967295 4294101944 4290735172 4290801736 4294963172 4294963429 4291001172 4291067478 4294964458 4294967295 4291727467 4291991149 4288222213 4288947992 4291067216 4290470717 4294962658 4294967295 4292319611 4290868043 4294564812 4293905077 4291067478 4293310881 4294967295 4294499019 4291859827 4291795057 4288221700 4288816152 4291067987 4290668351 4291461470 4294967295 4294967295 4294564812 4292848529 4292914578 4294762960 4294967295 4294967288 4292188283 4291860857 4291992955 4288221186 4288948762 4291199059 4290734915 4290801736 4291264087 4294564812 4294967295 4294967295 4294967295 4294967295 4294829270 4292188283 4291794291 4292256131 4291992699 4288221698 4288023298 4291861867 4290801223 4290868043 4290934864 4291001429 4291463266 4292782475 4292783505 4291727467 4291859827 4291860857 4292190081 4293051046 4290867531 4288023298 4292254613 4288552465 4291728742 4291529308 4291463773 4291595103 4291530081 4291596902 4291662954 4291991149 4291795057 4291992696 4292323464 4290866761 4288089088 4292320663 0 4292254614 4288089090 4288619026 4288551693 4288551436 4288420107 4288419593 4288419079 4288222213 4288221700 4288221186 4288155649 4288023298 4292320663 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:20'!redoIcon	"answer a form to be used as icon"	^ Icons		at: #redo		ifAbsentPut: [ (Form	extent: 13@14	depth: 32	fromArray: #( 0 0 0 0 0 0 4294901501 4293980399 4294440950 0 0 0 0 0 0 0 0 0 0 4294638329 4294901501 4278190081 0 4294704122 0 0 0 0 0 4294901501 0 0 0 4278190081 4294900699 4278190081 0 0 0 0 0 4294835708 4278190081 4278190081 4278190081 4278190081 4278190081 4294042540 4294242771 4278584838 0 0 0 4294835708 4278190081 4294900699 4294900699 4294900699 4294900699 4294900699 4294767013 4294042540 4294242771 4278190081 0 0 4278190081 4294900699 4294303041 4294303041 4294303041 4294303041 4294303041 4294700177 4294767013 4294042540 4294242771 4278190081 4278190081 4294303041 4294303041 4294359566 4294361123 4294495032 4294562638 4294630243 4294698363 4294700177 4294621989 4278190081 0 4278190081 4294303041 4294303041 4294361122 4293302279 4278190081 4278190081 4278190081 4294169956 4294621989 4278190081 0 0 4278190081 4294303041 4294303041 4294361122 4278190081 0 0 4278190081 4294621989 4278190081 0 0 0 4278190081 4294303041 4294361122 4278190081 0 0 0 0 4278190081 0 0 0 0 4278190081 4294303041 4294361122 4278190081 0 0 0 0 0 0 0 0 0 4294901501 4278190081 4294239232 4293302278 4278190081 0 4294572536 0 4294440950 0 0 0 0 0 0 4278190081 4294239232 4293302278 4278190081 0 0 0 0 0 0 0 0 4294704122 0 4278190081 4278190081 0 0 0 0 0 0 0 0)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:04'!saveAsIcon	"answer a form to be used as icon"	^ Icons		at: #saveAs		ifAbsentPut: [ (Form	extent: 13@15	depth: 32	fromArray: #( 0 0 0 0 0 0 0 0 0 0 4294824449 4294892108 4294753916 4288321714 4288914365 4288256184 4288124339 4287400619 4286348190 4285558420 4284834957 4283782025 4289102620 4294890240 4294877440 4293618957 4289045953 4293982206 4294901502 4287405502 4282933137 4290890718 4294901502 4294901502 4294896582 4294889731 4294884097 4294873352 4289418278 4288124856 4292798712 4294244606 4283591063 4280894330 4290693341 4294901502 4294901502 4294628694 4294889730 4294881037 4294408979 4285880932 4287466925 4291878127 4293455607 4288589258 4287800774 4293849594 4294901502 4294897367 4294627352 4294887701 4294878492 4290734126 4282732672 4286743205 4291154408 4291548648 4292863732 4292666352 4292337390 4291746030 4293248618 4294891804 4294884902 4294809130 4285880666 4281418874 4285953947 4290628324 4288918482 4288129227 4287537348 4286682817 4286680229 4293182773 4294891828 4294884666 4290603826 4281943407 4281088104 4285164691 4289707482 4288852945 4289115603 4288523981 4287406029 4289699690 4294894401 4294889543 4294748996 4286470740 4281551229 4280364121 4284572041 4288589776 4291022559 4294901502 4294901502 4294439150 4294431321 4294894425 4294889049 4293170771 4290884548 4284509333 4279310662 4283848578 4287931848 4290495964 4293256438 4292401648 4291741397 4294364027 4294895237 4294887016 4289428072 4287665343 4283257981 4278849852 4283256442 4286879676 4289443280 4292993015 4291414762 4290622921 4293837976 4294895301 4290609766 4286675094 4286612141 4282468977 4278586675 4282598513 4285498024 4288127684 4292203500 4290625247 4289767619 4289099612 4289757552 4286477716 4285954467 4286150559 4281942378 4278388782 4281875047 4284445082 4287403449 4291151076 4289638357 4288913084 4287521117 4286281373 4285954470 4285361560 4285887391 4281811050 4278191656 4281085020 4283390597 4285757854 4290624722 4289177539 4288585144 4287795889 4287072429 4286480032 4285887896 4285953690 4280954712 4278190107 4279965506 4279374142 4279374137 4279966272 4279834431 4279703102 4279703100 4279637050 4279571257 4279439672 4279374136 4278847786 4278584607)	offset: 0@0)]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:26'!saveIcon	"answer a form to be used as icon"	^ Icons		at: #save		ifAbsentPut: [ Form	extent: 14@14	depth: 32	fromArray: #( 4288321714 4288914365 4288256184 4288124339 4287400619 4286348190 4285558420 4284834956 4284242819 4283650427 4283058549 4282006120 4279900227 4285949022 4289045953 4293982206 4294901502 4287405502 4282933137 4290890718 4294901502 4294901502 4294901502 4294901502 4294901502 4291877611 4284969375 4279307827 4288124856 4292798712 4294244606 4283591063 4280894330 4290693341 4294901502 4294901502 4294901502 4294901502 4294901502 4290365148 4284247194 4279242553 4287466925 4291878127 4293455607 4288589258 4287800774 4293849594 4294901502 4294901502 4294901502 4294901502 4294901502 4289773011 4282338684 4279045428 4286743205 4291154408 4291548648 4292863732 4292666352 4292337390 4291943146 4291745766 4291548133 4291219939 4290364375 4285957286 4281483117 4278979378 4285953947 4290628324 4288918482 4288129227 4287537348 4286814141 4286222263 4285498543 4284577954 4283392656 4282208125 4281813111 4281219175 4278913327 4285164691 4289707482 4288852945 4289115603 4288523981 4287734212 4286747063 4285563560 4284641434 4283851919 4283391111 4281944439 4280364121 4278781997 4284572041 4288589776 4291022559 4294901502 4294901502 4294638334 4293717242 4292993521 4292204008 4291348703 4291348702 4284706196 4279442762 4278715946 4283848578 4287931848 4290495964 4293256438 4292401391 4291743466 4291085281 4290361817 4289638096 4288848584 4289111497 4283982220 4279047488 4278650409 4283256442 4286879676 4289443280 4292993015 4291414502 4290690781 4290032853 4289309133 4288651204 4287927484 4288124605 4283258496 4278652728 4278584615 4282598513 4285498024 4288127684 4292203500 4290624988 4289967059 4289243339 4288585411 4287927483 4287269553 4287466675 4282535029 4278389038 4278584613 4281875047 4284445082 4287403449 4291151076 4289638098 4288914378 4288256449 4287664313 4287006384 4286348455 4286479785 4281942893 4278191655 4278584612 4281085020 4283390597 4285757854 4290624722 4289177539 4288519609 4287795889 4287072169 4286611617 4285953689 4285953434 4280954456 4278190107 4278453023 4279965506 4279374142 4279374137 4279966272 4279834687 4279703101 4279703099 4279571258 4279505465 4279374136 4279374136 4278847786 4278584607 4279242025)	offset: 0@0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/22/2003 17:03'!undoIcon	"answer a form to be used as icon"	^ Icons		at: #undo		ifAbsentPut: [Form		extent: 13 @ 14		depth: 32		fromArray: #(0 0 0 0 4294440950 4293980399 4294901501 0 0 0 0 0 0 0 0 4294704122 0 4278190081 4294901501 4294638329 0 0 0 0 0 0 0 0 0 4278190081 4294900699 4278190081 0 0 0 4294901501 0 0 0 0 0 4278584838 4294242771 4294042540 4278190081 4278190081 4278190081 4278190081 4278190081 4294835708 0 0 0 4278190081 4294242771 4294042540 4294767013 4294900699 4294900699 4294900699 4294900699 4294900699 4278190081 4294835708 0 4278190081 4294242771 4294042540 4294767013 4294700177 4294303041 4294303041 4294303041 4294303041 4294303041 4294900699 4278190081 0 0 4278190081 4294621989 4294700177 4294698363 4294630243 4294562638 4294495032 4294361123 4294359566 4294303041 4294303041 4278190081 0 0 4278190081 4294621989 4294169956 4278190081 4278190081 4278190081 4293302279 4294361122 4294303041 4294303041 4278190081 0 0 0 4278190081 4294621989 4278190081 0 0 4278190081 4294361122 4294303041 4294303041 4278190081 0 0 0 0 4278190081 0 0 0 0 4278190081 4294361122 4294303041 4278190081 0 0 0 0 0 0 0 0 0 4278190081 4294361122 4294303041 4278190081 0 0 0 0 4294440950 0 4294572536 0 4278190081 4293302278 4294239232 4278190081 4294901501 0 0 0 0 0 0 0 4278190081 4293302278 4294239232 4278190081 0 0 0 0 0 0 0 0 0 0 4278190081 4278190081 0 4294704122 0 )		offset: 0 @ 0]! !!MenuIcons class methodsFor: 'accessing - icons' stamp: 'dgd 3/30/2003 19:10'!windowIcon	"answer a form to be used as icon"	^ Icons		at: #window		ifAbsentPut: [ Form	extent: 16@16	depth: 32	fromArray: #( 3123546081 4215314408 4215050727 4214654691 4214259168 4213863644 4213467864 4213072341 4212676817 4212347086 4211951307 4211621318 4211357380 4211224512 4211157944 3120571033 4165246188 4285842174 4284789502 4283999486 4283275774 4282420222 4281695742 4280905726 4280115966 4279457278 4278864126 4278336254 4278202366 4278202110 4278201598 4160758195 4082541805 4288270078 4287349502 4286822910 4286296574 4285769982 4285178110 4284651518 4284059134 4283532542 4282940414 4282347774 4281952766 4281821438 4281952509 4078123447 4085037036 4294573310 4294507518 4294507518 4294441470 4294441470 4294375934 4294375678 4294375678 4294310142 4294178558 4293981180 4293784057 4293651960 4294111992 4082199993 4085233644 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294835709 4294572539 4294440952 4294309367 4294768887 4082462648 4085233129 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294769917 4294506747 4294375161 4294177783 4294046198 4294440438 4082265271 4085035753 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294835710 4294769917 4294572539 4294375161 4294177783 4294046197 4293848819 4294308595 4082133941 4085035496 4294901502 4294901502 4294901502 4294901502 4294901502 4294901502 4294835709 4294572540 4294375161 4294177783 4294046198 4293848819 4293651442 4294045425 4082002355 4084969703 4294901502 4294901502 4294901502 4294901502 4294901502 4294835710 4294506748 4294440955 4294309368 4294046198 4293783029 4293651442 4293519857 4293782512 4081936562 4084838118 4294901502 4294901502 4294901502 4294901502 4294835710 4294572540 4294375161 4294309368 4294046198 4293848819 4293651442 4293454064 4293322478 4293650669 4081870769 4084837604 4294901502 4294901502 4294901502 4294835709 4294572540 4294440955 4294177784 4294046199 4293848819 4293651442 4293454065 4293322478 4293125101 4293453036 4081804977 4084837347 4294901502 4294901502 4294835710 4294704124 4294506747 4294309369 4294046199 4293980405 4293717234 4293519857 4293322480 4293125101 4292993516 4293321707 4081804720 4084771555 4294901502 4294901502 4294704125 4294506747 4294375161 4294111992 4293980406 4293783027 4293519857 4293388272 4293125102 4292993516 4292796139 4293124585 4081739184 4084968162 4294901502 4294901501 4294901500 4294900985 4294899959 4294702839 4294439667 4294308338 4294110704 4293848046 4293715949 4293518569 4293387241 4293781480 4082067633 4013324495 4217344467 4216883150 4216619466 4216355524 4216092095 4215828156 4215630263 4215366578 4215102894 4214905258 4214905002 4214839466 4214839466 4215036587 4011079835 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215 16777215)	offset: 0@0]! !!MenuIcons class methodsFor: 'class initialization' stamp: 'dgd 3/22/2003 17:01'!initialize"self initialize"	Icons := IdentityDictionary new! !!MenuIcons class methodsFor: 'decoration' stamp: 'dgd 3/22/2003 16:48'!decorateMenu: aMenu 	"decorate aMenu with icons"	Preferences menuWithIcons		ifFalse: [^ self].	""	self itemsIcons		do: [:each | 			| wordings icon | 			wordings := each key.			icon := each value.			""			wordings				do: [:eachWording | ""					self						putIcon: icon						onItemWithWording: eachWording						in: aMenu]]! !!MenuIcons class methodsFor: 'decoration' stamp: 'dgd 3/30/2003 19:17'!itemsIcons	"answer a collection of associations wordings -> icon to decorate 	the menus all over the image"	| icons |	icons := OrderedCollection new.	" 	world menu"	icons add: #('previous project' ) -> self backIcon.	icons add: #('jump to project...' ) -> self forwardIcon.	icons add: #('open...' ) -> self openIcon.	icons add: #('appearance...' ) -> self appearanceIcon.	icons add: #('help...' ) -> self helpIcon.	icons add: #('windows...' ) -> self windowIcon.	icons add: #('print PS to file...' ) -> self printIcon.	icons add: #('save' 'save project on file...' ) -> self saveIcon.	icons add: #('save as...' 'save as new version' ) -> self saveAsIcon.	icons add: #('quit' 'save and quit' ) -> self quitIcon.	""	icons add: #('do it (d)' ) -> self doItIcon.	icons add: #('inspect it (i)' 'explore it (I)' 'inspect world' 'explore world' 'inspect model' 'inspect morph' 'explore morph' 'inspect owner chain' 'explore' 'inspect' 'explore (I)' 'inspect (i)' 'basic inspect' ) -> self inspectIcon.	icons add: #('print it (p)' ) -> self printIcon.	""	icons add: #('copy (c)' ) -> self copyIcon.	icons add: #('paste (v)' 'paste...' ) -> self pasteIcon.	icons add: #('cut (x)' ) -> self cutIcon.	""	icons add: #('accept (s)' ) -> self okIcon.	icons add: #('cancel (l)' ) -> self cancelIcon.	""	icons add: #('do again (j)' ) -> self redoIcon.	icons add: #('undo (z)' ) -> self undoIcon.	""	icons add: #('find...(f)' 'find again (g)' 'find class... (f)' 'find method...' ) -> self findIcon.	""	icons add: #('remove' 'remove class (x)' 'delete method from changeset (d)' 'remove method from system (x)' 'delete class from change set (d)' 'remove class from system (x)' 'destroy change set (X)' ) -> self deleteIcon.	icons add: #('add item...' 'new category...' ) -> self newIcon.	""	icons add: #('new morph...' 'objects (o)' ) -> self morphsIcon.	""	^ icons! !!MenuIcons class methodsFor: 'decoration' stamp: 'dgd 3/22/2003 16:45'!putIcon: aForm onItemWithWording: aString in: aMenu 	"search for an item with wording aString in aMenu and use  	aForm as the icon"	| item |	item := aMenu itemWithWording: aString.	item isNil		ifFalse: [item icon: aForm]! !!MenuItemMorph methodsFor: 'accessing' stamp: 'dgd 3/22/2003 14:45'!hasIcon	"answer whatever the receiver has an icon"	^ icon notNil! !!MenuItemMorph methodsFor: 'accessing' stamp: 'dgd 3/22/2003 14:45'!icon	"answer the receiver's icon"	^ icon! !!MenuItemMorph methodsFor: 'accessing' stamp: 'dgd 3/22/2003 14:45'!icon: aForm 	"change the the receiver's icon"	icon := aForm! !!MenuItemMorph methodsFor: 'copying' stamp: 'dgd 3/22/2003 14:56'!veryDeepInner: deepCopier 	"Copy all of my instance variables. Some need to be not copied  	at all, but shared. Warning!!!! Every instance variable defined in  	this class must be handled. We must also implement  	veryDeepFixupWith:. See DeepCopier class comment."	super veryDeepInner: deepCopier.	isEnabled := isEnabled veryDeepCopyWith: deepCopier.	subMenu := subMenu veryDeepCopyWith: deepCopier.	isSelected := isSelected veryDeepCopyWith: deepCopier.	icon := icon veryDeepCopyWith: deepCopier.	"target := target.		Weakly copied"	"selector := selector.		a Symbol"	arguments := arguments! !!MenuItemMorph methodsFor: 'drawing' stamp: 'sd 11/8/2003 15:59'!drawOn: aCanvas 	| stringColor stringBounds |	isSelected & isEnabled		ifTrue: [			aCanvas fillRectangle: self bounds fillStyle: self selectionFillStyle.			stringColor := color negated]		ifFalse: [stringColor := color].	self hasIcon		ifTrue: [| iconForm | 			iconForm := isEnabled ifTrue:[self icon] ifFalse:[self icon asGrayScale].			aCanvas paintImage: iconForm at: self left @ (self top + (self height - iconForm height // 2)).			stringBounds := bounds left: bounds left + iconForm width + 2]		ifFalse: [stringBounds := bounds].	aCanvas		drawString: contents		in: stringBounds		font: self fontToUse		color: stringColor.	subMenu		ifNotNil: [aCanvas paintImage: SubMenuMarker at: self right - 8 @ (self top + self bottom - SubMenuMarker height // 2)]! !!MenuItemMorph methodsFor: 'drawing' stamp: 'sd 11/8/2003 15:59'!selectionFillStyle	"answer the fill style to use with the receiver is the selected  	element"	| fill baseColor |	Display depth <= 2		ifTrue: [^ Color gray].	baseColor := owner color negated.	Preferences gradientMenu		ifFalse: [^ baseColor].	fill := GradientFillStyle ramp: {0.0 -> baseColor twiceLighter . 1 -> baseColor twiceDarker}.	fill origin: self topLeft.	fill direction: self width @ 0.	^ fill! !!MenuItemMorph methodsFor: 'layout' stamp: 'dgd 3/21/2003 23:53'!minHeight	| iconHeight |	iconHeight := self hasIcon				ifTrue: [self icon height]				ifFalse: [0].	^ self fontToUse height max: iconHeight! !!MenuItemMorph methodsFor: 'layout' stamp: 'dgd 3/22/2003 13:13'!minWidth	| fontToUse iconWidth subMenuWidth |	fontToUse := self fontToUse.	subMenuWidth := self hasSubMenu				ifFalse: [0]				ifTrue: [10].	iconWidth := self hasIcon				ifTrue: [self icon width + 2]				ifFalse: [0].	^ (fontToUse widthOfString: contents)		+ subMenuWidth + iconWidth! !!MenuLineMorph methodsFor: 'drawing' stamp: 'sd 11/8/2003 16:00'!drawOn: aCanvas 	| baseColor |	baseColor := Preferences menuColorFromWorld				ifTrue: [owner color twiceDarker]				ifFalse: [Preferences menuAppearance3d						ifTrue: [owner color]						ifFalse: [Preferences menuLineColor]].	Preferences menuAppearance3d		ifTrue: [			aCanvas				fillRectangle: (bounds topLeft corner: bounds rightCenter)				color: baseColor twiceDarker.						aCanvas				fillRectangle: (bounds leftCenter corner: bounds bottomRight)				color: baseColor twiceLighter]		ifFalse: [			aCanvas				fillRectangle: (bounds topLeft corner: bounds bottomRight)				color: baseColor]! !!MenuMorph methodsFor: 'construction' stamp: 'dgd 3/22/2003 19:27'!addStayUpIcons	| title closeBox pinBox |	title := submorphs				detect: [:ea | ea hasProperty: #titleString]				ifNone: [self setProperty: #needsTitlebarWidgets toValue: true.					^ self].	closeBox := IconicButton new target: self;				 actionSelector: #delete;				 labelGraphic: self class closeBoxImage;				 color: Color transparent;				 extent: 14 @ 16;				 borderWidth: 0.	pinBox := IconicButton new target: self;				 actionSelector: #stayUp:;				 arguments: {true};				 labelGraphic: self class pushPinImage;				 color: Color transparent;				 extent: 14 @ 15;				 borderWidth: 0.	Preferences noviceMode		ifTrue: [closeBox setBalloonText: 'close this menu'.			pinBox setBalloonText: 'keep this menu up'].	self addMorphFront: (AlignmentMorph newRow vResizing: #shrinkWrap;			 layoutInset: 0;			 color: Color transparent"Preferences menuTitleColor";			 addMorphBack: closeBox;			 addMorphBack: title;			 addMorphBack: pinBox).	self setProperty: #hasTitlebarWidgets toValue: true.	self removeProperty: #needsTitlebarWidgets.	self removeStayUpItems! !!MenuMorph methodsFor: 'construction' stamp: 'dgd 3/22/2003 19:25'!addTitle: aString updatingSelector: aSelector updateTarget: aTarget 	"Add a title line at the top of this menu Make aString its initial 	contents.  	If aSelector is not nil, then periodically obtain fresh values for its 	contents by sending aSelector to aTarget.."	| title |	title := AlignmentMorph new.	self setTitleParametersFor: title.	title vResizing: #shrinkWrap.	title listDirection: #topToBottom.	title wrapCentering: #center;		 cellPositioning: #topCenter;		 layoutInset: 0.	aSelector		ifNil: [(aString asString findTokens: String cr)				do: [:line | title addMorphBack: (StringMorph new contents: line;							 font: Preferences standardMenuFont)]]		ifNotNil: [title addMorphBack: (UpdatingStringMorph new lock; font: Preferences standardMenuFont; useStringFormat; target: aTarget; getSelector: aSelector)].	title setProperty: #titleString toValue: aString.	self addMorphFront: title.	(self hasProperty: #needsTitlebarWidgets)		ifTrue: [self addStayUpIcons]! !!MenuMorph methodsFor: 'control' stamp: 'dgd 3/21/2003 22:36'!popUpAdjacentTo: rightOrLeftPoint forHand: hand from: sourceItem 	"Present this menu at the given point under control of the given  	hand."	| delta tryToPlace selectedOffset |	hand world startSteppingSubmorphsOf: self.	popUpOwner := sourceItem.	self fullBounds.self updateColor.	"ensure layout is current"	selectedOffset := (selectedItem				ifNil: [self items first]) position - self position.	tryToPlace := [:where :mustFit | 			self position: where - selectedOffset.			delta := self fullBoundsInWorld amountToTranslateWithin: sourceItem worldBounds.			(delta x = 0					or: [mustFit])				ifTrue: [delta = (0 @ 0)						ifFalse: [self position: self position + delta].					sourceItem owner owner addMorphFront: self.					^ self]].	tryToPlace value: rightOrLeftPoint first value: false;		 value: rightOrLeftPoint last - (self width @ 0) value: false;		 value: rightOrLeftPoint first value: true! !!MenuMorph methodsFor: 'control' stamp: 'sd 11/8/2003 16:00'!popUpAt: aPoint forHand: hand in: aWorld allowKeyboard: aBoolean 	"Present this menu at the given point under control of the given  	hand."	| evt |	self items isEmpty		ifTrue: [^ self].	MenuIcons decorateMenu: self.	(self submorphs		select: [:m | m isKindOf: UpdatingMenuItemMorph])		do: [:m | m updateContents].	"precompute width"	self		positionAt: aPoint		relativeTo: (selectedItem				ifNil: [self items first])		inWorld: aWorld.	aWorld addMorphFront: self.	"Acquire focus for valid pop up behavior"	hand newMouseFocus: self.	aBoolean		ifTrue: [hand newKeyboardFocus: self].	evt := hand lastEvent.	(evt isKeyboard			or: [evt isMouse					and: [evt anyButtonPressed not]])		ifTrue: ["Select first item if button not down"			self moveSelectionDown: 1 event: evt].	self updateColor.	self changed! !!MenuMorph methodsFor: 'control' stamp: 'dgd 3/22/2003 19:56'!updateColor	| fill title |	Preferences gradientMenu		ifFalse: [^ self].	""	fill := GradientFillStyle ramp: {0.0 -> self color lighter. 1 -> self color darker}.	""	fill origin: self topLeft.	fill direction: self width @ 0.	""	self fillStyle: fill.	" 	update the title color"	title := self allMorphs				detect: [:each | each hasProperty: #titleString]				ifNone: [^ self].	""	fill := GradientFillStyle ramp: {0.0 -> title color twiceLighter. 1 -> title color twiceDarker}.	""	fill origin: title topLeft.	fill direction: title width @ 0.	""	title fillStyle: fill! !!MenuMorph methodsFor: 'initialization' stamp: 'dgd 3/22/2003 18:46'!setDefaultParameters	| colorFromMenu worldColor menuColor menuBorderColor |	colorFromMenu := Preferences menuColorFromWorld				and: [Display depth > 4]				and: [(worldColor := self currentWorld color) isColor].	""	menuColor := colorFromMenu				ifTrue: [worldColor luminance > 0.7						ifTrue: [worldColor mixed: 0.85 with: Color black]						ifFalse: [worldColor mixed: 0.4 with: Color white]]				ifFalse: [Preferences menuColor].	""	menuBorderColor := Preferences menuAppearance3d				ifTrue: [#raised]				ifFalse: [colorFromMenu						ifTrue: [worldColor muchDarker]						ifFalse: [Preferences menuBorderColor]].	""	self		setColor: menuColor		borderWidth: Preferences menuBorderWidth		borderColor: menuBorderColor.	""	self layoutInset: 3! !!MenuMorph methodsFor: 'initialization' stamp: 'dgd 3/22/2003 19:58'!setTitleParametersFor: aMenuTitle 	| menuTitleColor menuTitleBorderColor |	Preferences roundedMenuCorners		ifTrue: [aMenuTitle useRoundedCorners].	""	menuTitleColor := Preferences menuColorFromWorld				ifTrue: [self color darker]				ifFalse: [Preferences menuTitleColor].	""	menuTitleBorderColor := Preferences menuAppearance3d				ifTrue: [#inset]				ifFalse: [Preferences menuColorFromWorld						ifTrue: [self color darker muchDarker]						ifFalse: [Preferences menuTitleBorderColor]].	""	aMenuTitle		setColor: menuTitleColor		borderWidth: Preferences menuTitleBorderWidth		borderColor: menuTitleBorderColor! !!Preferences class methodsFor: 'menu parameters' stamp: 'dgd 3/23/2003 11:06'!menuLineColor	^ Parameters		at: #menuLineColor		ifAbsentPut: [Preferences menuBorderColor lighter]! !!Preferences class methodsFor: 'menu parameters' stamp: 'dgd 3/23/2003 11:11'!restoreDefaultMenuParameters	"Restore the four color choices of the original implementors of  	MorphicMenus"	" 	Preferences restoreDefaultMenuParameters	"	Parameters		at: #menuColor		put: (Color				r: 0.97				g: 0.97				b: 0.97).	Parameters		at: #menuBorderColor		put: (Color				r: 0.167				g: 0.167				b: 1.0).	Parameters at: #menuBorderWidth put: 2.	Parameters at: #menuTitleColor put: (Color			r: 0.4			g: 0.8			b: 0.9) twiceDarker.	Parameters		at: #menuTitleBorderColor		put: (Color				r: 0.333				g: 0.667				b: 0.751).	Parameters at: #menuTitleBorderWidth put: 1.	Parameters		at: #menuLineColor		put: (Preferences menuBorderColor lighter)! !!Preferences class methodsFor: 'scrollbar parameters' stamp: 'dgd 3/25/2003 19:58'!fontFactor	"answer the convertion factor for resizing element based on font  	size"	| factor |	factor := TextStyle defaultFont height / 12.0.	^ factor > 1.0		ifTrue: [1 + (factor - 1.0 * 0.5)]		ifFalse: [factor]! !!Preferences class methodsFor: 'standard queries' stamp: 'dgd 3/21/2003 19:23'!alternativeWindowBoxesLook	^ self		valueOfFlag: #alternativeWindowBoxesLook		ifAbsent: [true]! !!ScrollPane methodsFor: 'geometry' stamp: 'sd 11/8/2003 16:02'!scrollbarWidth	"Includes border"	| result |	result := Preferences scrollBarsNarrow				ifTrue: [10]				ifFalse: [14].	self flatColoredScrollBarLook		ifFalse: [result := result + 2].		^ (result * Preferences fontFactor) rounded! !!Slider methodsFor: 'other events' stamp: 'sd 11/8/2003 16:02'!mouseDownInSlider: event 	slider borderStyle style == #raised		ifTrue: [slider borderColor: #inset].		sliderShadow color: self sliderShadowColor.	sliderShadow cornerStyle: slider cornerStyle.	sliderShadow bounds: slider bounds.	sliderShadow show! !!Slider methodsFor: 'other events' stamp: 'sd 11/8/2003 16:02'!mouseUpInSlider: event 	slider borderStyle style == #inset		ifTrue: [slider borderColor: #raised].		sliderShadow hide! !!ScrollBar methodsFor: 'access' stamp: 'sd 11/8/2003 16:01'!sliderColor: aColor 	"Change the color of the scrollbar to go with aColor."	| buttonColor |	super sliderColor: aColor.	buttonColor := self thumbColor.	menuButton		ifNotNil: [menuButton color: buttonColor].	upButton color: buttonColor.	downButton color: buttonColor.	slider color: buttonColor slightlyLighter.		self class updateScrollBarButtonsAspect: {menuButton. upButton. downButton} color: buttonColor.		self updateMenuButtonImage.	self updateUpButtonImage.	self updateDownButtonImage.		self alternativeScrollbarLook		ifTrue: [			self roundedScrollbarLook				ifTrue: [					self color: Color transparent.					pagingArea color: aColor muchLighter.					self borderStyle style == #simple						ifTrue: [self borderColor: aColor darker darker]						ifFalse: [self borderStyle baseColor: aColor]]				ifFalse: [					pagingArea						color: (aColor alphaMixed: 0.3 with: Color white).					self borderWidth: 0]]! !!ScrollBar methodsFor: 'geometry' stamp: 'dgd 3/26/2003 10:59'!buttonExtent	| baseSize size |	baseSize := Preferences scrollBarsNarrow				ifTrue: [11]				ifFalse: [15].	size := (baseSize * Preferences fontFactor) rounded.	^ bounds isWide		ifTrue: [size @ self innerBounds height]		ifFalse: [self innerBounds width @ size]! !!ScrollBar methodsFor: 'geometry' stamp: 'dgd 3/26/2003 09:13'!extent: p 	p x > p y		ifTrue: [super				extent: (p max: 42 @ 8)]		ifFalse: [super				extent: (p max: 8 @ 42)].	! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:13'!downImage	"answer a form to be used in the down button"	^ self class		arrowOfDirection: (bounds isWide				ifTrue: [#right]				ifFalse: [#bottom])		size: (self buttonExtent x min: self buttonExtent y)		color: self thumbColor! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 10:23'!initializeDownButton	"initialize the receiver's downButton"	downButton := RectangleMorph				newBounds: (self innerBounds bottomRight - self buttonExtent extent: self buttonExtent)				color: self thumbColor.	downButton		on: #mouseDown		send: #scrollDownInit		to: self.	downButton		on: #mouseUp		send: #finishedScrolling		to: self.	self updateDownButtonImage.	self roundedScrollbarLook		ifTrue: [downButton color: Color veryLightGray.			downButton				borderStyle: (BorderStyle complexRaised width: 3)]		ifFalse: [downButton setBorderWidth: 1 borderColor: #raised].	self addMorph: downButton! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 6/23/2003 20:11'!initializeMenuButton"initialize the receiver's menuButton"	"Preferences disable: #scrollBarsWithoutMenuButton"	"Preferences enable: #scrollBarsWithoutMenuButton"	(Preferences valueOfFlag: #scrollBarsWithoutMenuButton)		ifTrue: [^ self].	menuButton := self roundedScrollbarLook		ifTrue: [RectangleMorph					newBounds: ((bounds isWide							ifTrue: [upButton bounds topRight]							ifFalse: [upButton bounds bottomLeft])							extent: self buttonExtent)]		ifFalse: [RectangleMorph					newBounds: (self innerBounds topLeft extent: self buttonExtent)					color: self thumbColor].	menuButton		on: #mouseEnter		send: #menuButtonMouseEnter:		to: self.	menuButton		on: #mouseDown		send: #menuButtonMouseDown:		to: self.	menuButton		on: #mouseLeave		send: #menuButtonMouseLeave:		to: self.	"menuButton 	addMorphCentered: (RectangleMorph 	newBounds: (0 @ 0 extent: 4 @ 2) 	color: Color black)."	self updateMenuButtonImage.	self roundedScrollbarLook		ifTrue: [menuButton color: Color veryLightGray.			menuButton				borderStyle: (BorderStyle complexRaised width: 3)]		ifFalse: [menuButton setBorderWidth: 1 borderColor: #raised].	self addMorph: menuButton! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:44'!initializePagingArea"initialize the receiver's pagingArea"	pagingArea := RectangleMorph				newBounds: self totalSliderArea				color: (Color						r: 0.6						g: 0.6						b: 0.8).	pagingArea borderWidth: 0.	pagingArea		on: #mouseDown		send: #scrollPageInit:		to: self.	pagingArea		on: #mouseUp		send: #finishedScrolling		to: self.	self addMorph: pagingArea.	self roundedScrollbarLook		ifTrue: [pagingArea				color: (Color gray: 0.9)]! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:44'!initializeSlider"initialize the receiver's slider"	self roundedScrollbarLook		ifTrue: [self initializeUpButton; initializeMenuButton; initializeDownButton; initializePagingArea]		ifFalse: [self initializeMenuButton; initializeUpButton; initializeDownButton; initializePagingArea].	super initializeSlider.	self roundedScrollbarLook		ifTrue: [slider cornerStyle: #rounded.			slider				borderStyle: (BorderStyle complexRaised width: 3).			sliderShadow cornerStyle: #rounded].	self sliderColor: self sliderColor! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 6/23/2003 20:12'!initializeUpButton"initialize the receiver's upButton"	upButton := self roundedScrollbarLook		ifTrue: [RectangleMorph						newBounds: (self innerBounds topLeft extent: self buttonExtent)]		ifFalse: [RectangleMorph						newBounds: ((menuButton								ifNil: [self innerBounds topLeft]								ifNotNil: [bounds isWide										ifTrue: [menuButton bounds topRight]										ifFalse: [menuButton bounds bottomLeft]])								extent: self buttonExtent)].	upButton color: self thumbColor.	upButton		on: #mouseDown		send: #scrollUpInit		to: self.	upButton		on: #mouseUp		send: #finishedScrolling		to: self.	self updateUpButtonImage.	self roundedScrollbarLook		ifTrue: [upButton color: Color veryLightGray.			upButton				borderStyle: (BorderStyle complexRaised width: 3)]		ifFalse: [upButton setBorderWidth: 1 borderColor: #raised].	self addMorph: upButton! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:13'!menuImage	"answer a form to be used in the menu button"	^ self class		boxOfSize: (self buttonExtent x min: self buttonExtent y)		color: self thumbColor! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:13'!upImage	"answer a form to be used in the up button"	^ self class		arrowOfDirection: (bounds isWide				ifTrue: [#left]				ifFalse: [#top])		size: (self buttonExtent x min: self buttonExtent y)		color: self thumbColor! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 10:24'!updateDownButtonImage	"update the receiver's downButton.  put a new image inside"	downButton removeAllMorphs.	downButton		addMorphCentered: (ImageMorph new image: self downImage)! !!ScrollBar methodsFor: 'initialize' stamp: 'sd 11/8/2003 16:01'!updateMenuButtonImage	"update the receiver's menuButton. put a new image inside"menuButton isNil ifTrue:[^ self].	menuButton removeAllMorphs.	menuButton		addMorphCentered: (ImageMorph new image: self menuImage)! !!ScrollBar methodsFor: 'initialize' stamp: 'dgd 3/28/2003 19:13'!updateUpButtonImage"update the receiver's upButton. put a new image inside"	upButton removeAllMorphs.	upButton		addMorphCentered: (ImageMorph new image: self upImage)! !!ScrollBar class methodsFor: 'class initialization' stamp: 'dgd 3/28/2003 10:13'!createArrowImagesCache	"creates the cache to store the arrow forms"	^ LRUCache		size: 40		factory: [:key | ""			self				createArrowOfDirection: key first				size: key second				color: key third]! !!ScrollBar class methodsFor: 'class initialization' stamp: 'dgd 3/28/2003 10:13'!createBoxImagesCache	"creates the cache to store the arrow forms"	^ LRUCache		size: 20		factory: [:key | self createBoxOfSize: key first color: key second]! !!ScrollBar class methodsFor: 'class initialization' stamp: 'dgd 3/27/2003 10:05'!initialize	"ScrollBar initialize"	UpArrow := Form				extent: 6 @ 3				fromArray: #(805306368 2013265920 4227858432 )				offset: 0 @ 0.	""	self initializeImagesCache! !!ScrollBar class methodsFor: 'class initialization' stamp: 'dgd 3/28/2003 10:16'!initializeImagesCache	"initialize the receiver's ImagesCache. 	 	normally this method is not evaluated more than in the class 	initializazion. "	" 	ScrollBar initializeImagesCache.	"	ArrowImagesCache := self createArrowImagesCache.	BoxesImagesCache := self createBoxImagesCache! !!ScrollBar class methodsFor: 'coloring morphs' stamp: 'dgd 3/28/2003 20:29'!updateScrollBarButtonAspect: aMorph color: aColor 	"update aMorph with aColor"	| fill direction |	aMorph isNil		ifTrue: [^ self].	""aMorph color: aColor.	Preferences gradientScrollBars		ifFalse: [^ self].	""	fill := GradientFillStyle ramp: {0.0 -> aColor twiceLighter twiceLighter. 1.0 -> aColor twiceDarker}.	""	direction := ((aMorph width min: aMorph height)				+ ((aMorph width - aMorph height) abs * 0.3)) rounded.	""	fill origin: aMorph topLeft + (direction // 8).	fill direction: direction @ direction.	fill radial: true.	""	aMorph fillStyle: fill! !!ScrollBar class methodsFor: 'coloring morphs' stamp: 'dgd 3/28/2003 20:29'!updateScrollBarButtonsAspect: aCollection color: aColor 	"update aCollection of morphs with aColor"			aCollection		do: [:each | self updateScrollBarButtonAspect: each color: aColor]! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 10:22'!arrowOfDirection: aSymbol size: finalSizeInteger color: aColor 	"answer a form with an arrow based on the parameters"	^ ArrowImagesCache at: {aSymbol. finalSizeInteger. aColor}! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 10:22'!boxOfSize: finalSizeInteger color: aColor 	"answer a form with an box based on the parameters"	^ BoxesImagesCache at: {finalSizeInteger. aColor}! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 20:54'!changesInPreferences	"the related preferences changed"	self initializeImagesCache	" ScrollBar allInstances do: [:each | each removeAllMorphs; initializeSlider] "! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 20:43'!createArrowOfDirection: aSymbol in: aRectangle 	"PRIVATE - create an arrow bounded in aRectangle"	| arrow vertices |	vertices := Preferences alternativeButtonsInScrollBars 				ifTrue: [self verticesForComplexArrow: aRectangle]				ifFalse: [self verticesForSimpleArrow: aRectangle].	""	arrow := PolygonMorph 				vertices: vertices				color: Color transparent				borderWidth: 0				borderColor: Color black.	""	arrow bounds: (arrow bounds insetBy: (aRectangle width / 6) rounded).	""	Preferences alternativeButtonsInScrollBars 		ifTrue: [arrow rotationDegrees: 45].	""	aSymbol == #right 		ifTrue: [arrow rotationDegrees: arrow rotationDegrees + 90].	aSymbol == #bottom 		ifTrue: [arrow rotationDegrees: arrow rotationDegrees + 180].	aSymbol == #left 		ifTrue: [arrow rotationDegrees: arrow rotationDegrees + 270].	""	^arrow! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 19:32'!createArrowOfDirection: aSymbolDirection size: finalSizeInteger color: aColor 	"PRIVATE - create an arrow with aSymbolDirectionDirection,  	finalSizeInteger and aColor  	 	aSymbolDirectionDirection = #top, #bottom. #left or #right  	 	Try with:  	(ScrollBar createArrowOfDirection: #top size: 32 color: Color  	lightGreen) asMorph openInHand.  	"	| resizeFactor outerBox arrow resizedForm |	resizeFactor := 4.	outerBox := RectangleMorph new.	outerBox extent: finalSizeInteger asPoint * resizeFactor;		 borderWidth: 0;		 color: aColor.	""	arrow := self createArrowOfDirection: aSymbolDirection in: outerBox bounds.	self updateScrollBarButtonAspect: arrow color: aColor muchDarker.	outerBox addMorphCentered: arrow.	""	resizedForm := outerBox imageForm				magnify: outerBox imageForm boundingBox				by: 1 / resizeFactor				smoothing: 4.	""	^ (resizedForm replaceColor: aColor withColor: Color transparent)		trimBordersOfColor: Color transparent! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 10:29'!createBoxIn: aRectangle 	"PRIVATE - create an box bounded in aRectangle"	| box |	box := RectangleMorph new.	box extent: (aRectangle scaleBy: 1 / 2) extent rounded;		 borderWidth: 0.	""	^ box! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 19:32'!createBoxOfSize: finalSizeInteger color: aColor 	"PRIVATE - create a box with finalSizeInteger and aColor  	 	Try with:  	(ScrollBar createBoxOfSize: 32 color: Color lightGreen) asMorph  	openInHand.  	"	| resizeFactor outerBox innerBox resizedForm |	resizeFactor := 4.	outerBox := RectangleMorph new.	outerBox extent: finalSizeInteger asPoint * resizeFactor;		 borderWidth: 0;		 color: aColor.	""	innerBox := self createBoxIn: outerBox bounds.	self updateScrollBarButtonAspect: innerBox color: aColor muchDarker.	outerBox addMorphCentered: innerBox.	""	resizedForm := outerBox imageForm				magnify: outerBox imageForm boundingBox				by: 1 / resizeFactor				smoothing: 4.	""	^ (resizedForm replaceColor: aColor withColor: Color transparent)		trimBordersOfColor: Color transparent! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 10:21'!verticesForComplexArrow: aRectangle 	"PRIVATE - answer a collection of vertices to draw a complex arrow"	| vertices aux |	vertices := OrderedCollection new.	""	vertices add: aRectangle bottomLeft.	vertices add: aRectangle topLeft.	vertices add: aRectangle topRight.	""	aux := (aRectangle width / 3) rounded.	vertices add: aRectangle topRight + (0 @ aux).	vertices add: aRectangle topLeft + aux.	vertices add: aRectangle bottomLeft + (aux @ 0).	""	^ vertices! !!ScrollBar class methodsFor: 'images' stamp: 'dgd 3/28/2003 10:21'!verticesForSimpleArrow: aRectangle 	"PRIVATE - answer a collection of vertices to draw a simple arrow"	| vertices |	vertices := OrderedCollection new.	""	vertices add: aRectangle bottomLeft.	vertices add: aRectangle center x @ (aRectangle top + (aRectangle width / 8)).	vertices add: aRectangle bottomRight.	""	^ vertices! !!ScrollBar class methodsFor: 'images - samples' stamp: 'sd 11/8/2003 16:02'!arrowSamples	"create a set of arrow with different sizes, colors and directions"	" 	ScrollBar arrowSamples.  	"	| column |	column := AlignmentMorph newColumn vResizing: #shrinkWrap;				 hResizing: #shrinkWrap;				 layoutInset: 1;				 borderColor: Color black;				 borderWidth: 0;				 wrapCentering: #center;				 cellPositioning: #center;				 color: Color white;				 yourself.		self sampleSizes		do: [:size | 			| row | 			row := AlignmentMorph newRow color: Color transparent;						 vResizing: #shrinkWrap;						 cellInset: 2 @ 0 yourself.						self sampleColors				do: [:color | 					#(#top #right #bottom #left )						do: [:direction | 							row addMorphBack: (ScrollBar									arrowOfDirection: direction									size: size									color: color) asMorph]].						column addMorphBack: row].		column openInHand! !!ScrollBar class methodsFor: 'images - samples' stamp: 'dgd 3/28/2003 10:18'!boxSamples	"create a set of box with different sizes and colors"	" 	ScrollBar boxSamples.  	"	| column |	column := AlignmentMorph newColumn vResizing: #shrinkWrap;				 hResizing: #shrinkWrap;				 layoutInset: 1;				 borderColor: Color black;				 borderWidth: 0;				 wrapCentering: #center;				 cellPositioning: #center;				 color: Color white;				 yourself.	""	self sampleSizes		do: [:size | 			| row | 			row := AlignmentMorph newRow color: Color transparent;						 vResizing: #shrinkWrap;						 cellInset: 2 @ 0 yourself.			""			self sampleColors				do: [:color | 					row addMorphBack: (ScrollBar boxOfSize: size color: color) asMorph].			""			column addMorphBack: row].	""	""	column openInHand! !!ScrollBar class methodsFor: 'images - samples' stamp: 'dgd 3/28/2003 10:18'!sampleColors	"private"	^ (Color lightCyan wheel: 5)! !!ScrollBar class methodsFor: 'images - samples' stamp: 'dgd 3/28/2003 10:17'!sampleSizes	"private"	^ #(10 12 14 16 18 32 64 )! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 18:52'!addCloseBox	"If I have a labelArea, add a close box to it"	| frame |	labelArea		ifNil: [^ self].	closeBox := self createCloseBox.	frame := LayoutFrame new.	frame leftFraction: 0;		 leftOffset: 2;		 topFraction: 0;		 topOffset: 0.	closeBox layoutFrame: frame.	labelArea addMorph: closeBox! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 18:52'!addExpandBox	"If I have a labelArea, add a close box to it"	| frame |	labelArea		ifNil: [^ self].	expandBox := self createExpandBox.	frame := LayoutFrame new.	frame leftFraction: 1;		 leftOffset: (self boxExtent x * 2 + 3) negated;		 topFraction: 0;		 topOffset: 0.	expandBox layoutFrame: frame.	labelArea addMorph: expandBox! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 18:52'!addMenuControl	"If I have a label area, add a menu control to it."	| frame |	labelArea		ifNil: [^ self].	"No menu if no label area"	menuBox		ifNotNil: [menuBox delete].	menuBox := self createMenuBox.	frame := LayoutFrame new.	frame leftFraction: 0;		 leftOffset: closeBox right + 3;		 topFraction: 0;		 topOffset: 0.	menuBox layoutFrame: frame.	labelArea addMorph: menuBox! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 19:41'!boxExtent	"answer the extent to use in all the buttons. 	 	the label height is used to be proportional to the fonts preferences"	^ (Preferences alternativeWindowBoxesLook		ifTrue: [18 @ 18]		ifFalse: [14 @ 14])		max: label height @ label height ! !!SystemWindow methodsFor: 'initialization' stamp: 'sd 11/8/2003 16:02'!createBox	"create a button with default to be used in the label area"	"Transcript show: self paneColor asString;  	cr."	| box boxBorderWidth |	box := IconicButton new.	box color: Color transparent;		 target: self;		 useRoundedCorners.	boxBorderWidth := (Preferences alternativeWindowLook					and: [Preferences alternativeWindowBoxesLook])				ifTrue: [1]				ifFalse: [0].	box borderWidth: boxBorderWidth.	^ box! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 15:23'!createCloseBox	^ self createBox labelGraphic: self class closeBoxImage;		 extent: self boxExtent;		 actionSelector: #closeBoxHit;		 setBalloonText: 'close this window'! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 15:22'!createCollapseBox	^ self createBox labelGraphic: self class collapseBoxImage;		 extent: self boxExtent;		 actionSelector: #collapseOrExpand;		 setBalloonText: 'collapse this window'! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 15:22'!createExpandBox	^ self createBox 				labelGraphic: (ScriptingSystem formAtKey: 'expandBox');			 extent: self boxExtent;		 actWhen: #buttonUp;		 actionSelector: #expandBoxHit;		 setBalloonText: 'expand to full screen'! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 15:23'!createMenuBox	^ self createBox 				labelGraphic: (ScriptingSystem formAtKey: 'TinyMenu');		 extent: self boxExtent;		 actWhen: #buttonDown;		 actionSelector: #offerWindowMenu;		 setBalloonText: 'window menu'! !!SystemWindow methodsFor: 'initialization' stamp: 'sd 11/8/2003 16:03'!initialize	"Initialize a system window. Add label, stripes, etc., if desired"	super initialize.	allowReframeHandles := true.	labelString		ifNil: [labelString := 'Untitled Window'].	isCollapsed := false.	activeOnlyOnTop := true.	paneMorphs := Array new.	Preferences alternativeWindowLook		ifTrue: [			borderColor := #raised.			borderWidth := 2.			color := Color white]		ifFalse: [			borderColor := Color black.			borderWidth := 1.			color := Color black].	self layoutPolicy: ProportionalLayout new.	self wantsLabel		ifTrue: [label := StringMorph new contents: labelString;						 font: Preferences windowTitleFont emphasis: 1.			"Add collapse box so #labelHeight will work"			collapseBox := self createCollapseBox.			stripes := Array						with: (RectangleMorph newBounds: bounds)						with: (RectangleMorph newBounds: bounds).			"see extent:"			self addLabelArea.			labelArea				addMorph: (stripes first borderWidth: 1).			labelArea				addMorph: (stripes second borderWidth: 2).			self setLabelWidgetAllowance.			self addCloseBox.			self addMenuControl.			labelArea addMorph: label.			self wantsExpandBox				ifTrue: [self addExpandBox].			labelArea addMorph: collapseBox.			self setFramesForLabelArea.			Preferences clickOnLabelToEdit				ifTrue: [label						on: #mouseDown						send: #relabel						to: self].			Preferences noviceMode				ifTrue: [closeBox						ifNotNil: [closeBox setBalloonText: 'close window'].					menuBox						ifNotNil: [menuBox setBalloonText: 'window menu'].					collapseBox						ifNotNil: [collapseBox setBalloonText: 'collapse/expand window']]].	self		on: #mouseEnter		send: #spawnReframeHandle:		to: self.	self		on: #mouseLeave		send: #spawnReframeHandle:		to: self.	self extent: 300 @ 200.	mustNotClose := false.	updatablePanes := Array new! !!SystemWindow methodsFor: 'initialization' stamp: 'dgd 3/21/2003 18:59'!setFramesForLabelArea	"an aid to converting old instances, but then I found  	convertAlignment (jesse welton's note)"	| frame |	labelArea		ifNil: [^ self].	frame := LayoutFrame new.	frame leftFraction: 0.5;		 topFraction: 0;		 leftOffset: label width negated // 2;		 topOffset: 1.	label layoutFrame: frame.	frame := LayoutFrame new.	frame rightFraction: 1;		 topFraction: 0;		 rightOffset: -2;		 topOffset: 0.	collapseBox		ifNotNilDo: [:cb | cb layoutFrame: frame].	stripes isEmptyOrNil		ifFalse: [frame := LayoutFrame new.			frame leftFraction: 0;				 topFraction: 0;				 rightFraction: 1;				 leftOffset: 1;				 topOffset: 1;				 rightOffset: -1;				 bottomOffset: -2.			stripes first layoutFrame: frame.			stripes first height: self labelHeight - 1.			stripes first hResizing: #spaceFill.			frame := LayoutFrame new.			frame leftFraction: 0;				 topFraction: 0;				 rightFraction: 1;				 leftOffset: 3;				 topOffset: 3;				 rightOffset: -3.			stripes last layoutFrame: frame.			stripes last height: self labelHeight - 5.			stripes last hResizing: #spaceFill].	labelArea		ifNotNil: [frame := LayoutFrame new.			frame leftFraction: 0;				 topFraction: 0;				 rightFraction: 1;				 topOffset: self labelHeight negated.			Preferences alternativeWindowLook				ifTrue: [frame leftOffset: -1;						 rightOffset: 1;						 topOffset: self labelHeight negated - 1;						 bottomFraction: 0;						 bottomOffset: 1].			labelArea layoutFrame: frame]! !!SystemWindow methodsFor: 'label' stamp: 'dgd 3/21/2003 13:03'!setLabelWidgetAllowance	^ labelWidgetAllowance :=  (self boxExtent x * 4) + 19! !!SystemWindow methodsFor: 'label' stamp: 'sd 11/8/2003 16:03'!setStripeColorsFrom: paneColor 	"Set the stripe color based on the given paneColor"	labelArea		ifNotNil: [			labelArea				color: (Preferences alternativeWindowLook						ifTrue: [paneColor lighter]						ifFalse: [Color transparent])].		self		updateBoxesColor: (self isActive				ifTrue: [paneColor]				ifFalse: [paneColor muchDarker]).		stripes		ifNil: [^ self].		Preferences alternativeWindowLook		ifTrue: [			self isActive				ifTrue: [					stripes first borderColor: paneColor paler;						 color: stripes first borderColor slightlyLighter.					stripes second borderColor: stripes first color slightlyLighter;						 color: stripes second borderColor slightlyLighter]				ifFalse: ["This could be much faster"					stripes first borderColor: paneColor;						 color: paneColor.					stripes second borderColor: paneColor;						 color: paneColor]]		ifFalse: [			self isActive				ifTrue: [					stripes second color: paneColor;						 borderColor: stripes second color darker.					stripes first color: stripes second borderColor darker;						 borderColor: stripes first color darker]				ifFalse: ["This could be much faster"					stripes second color: paneColor;						 borderColor: paneColor.					stripes first color: paneColor;						 borderColor: paneColor]]! !!SystemWindow methodsFor: 'panes' stamp: 'sd 11/8/2003 16:03'!updateBox: anIconMorph color: aColor 	| fill |	anIconMorph isNil		ifTrue: [^ self].		fill := GradientFillStyle ramp: {0.0 -> aColor muchLighter muchLighter. 1.0 -> aColor twiceDarker}.		fill origin: anIconMorph topLeft + (5 @ 5).	fill direction: anIconMorph extent.		anIconMorph fillStyle: fill.	anIconMorph borderColor: aColor darker! !!SystemWindow methodsFor: 'panes' stamp: 'sd 11/8/2003 16:03'!updateBoxesColor: aColor 	| opaqueColor |	aColor isNil		ifTrue: [^ self].	Preferences alternativeWindowLook		ifFalse: [^ self].Preferences alternativeWindowBoxesLook ifFalse:[^ self].		opaqueColor := aColor asNontranslucentColor.		self		updateBox: closeBox		color: (opaqueColor alphaMixed: 0.5 with: Color red).	self updateBox: menuBox color: opaqueColor.	self updateBox: expandBox color: opaqueColor.	self updateBox: collapseBox color: opaqueColor! !!SystemWindow reorganize!('drawing' areasRemainingToFill: colorForInsets makeMeVisible raisedColor scrollBarColor wantsRoundedCorners)('events' doFastFrameDrag: handleListenEvent: handlesMouseDown: handlesMouseOverDragging: isCandidateForAutomaticViewing mouseDown: mouseEnterDragging: mouseLeaveDragging: mouseMove: mouseUp: paneTransition: secondaryPaneTransition:divider: wantsHalo wantsToBeDroppedInto:)('geometry' borderWidthForRounding extent: justDroppedInto:event: labelRect paneMorphs panelRect position: removeMenuBox setPaneRectsFromBounds)('initialization' addCloseBox addExpandBox addLabelArea addMenuControl applyModelExtent boxExtent createBox createCloseBox createCollapseBox createExpandBox createMenuBox defaultBorderColor defaultBorderWidth defaultColor initialize maximumExtent maximumExtent: model: setFramesForLabelArea)('label' externalName getRawLabel label labelHeight labelWidgetAllowance relabel relabelEvent: setLabel: setLabelWidgetAllowance setStripeColorsFrom: tryToRenameTo: update: wantsLabel widthOfFullLabelText)('layout' convertAlignment layoutBounds putLabelItemsInLabelArea)('menu' addCustomMenuItems:hand: buildWindowMenu changeColor deleteCloseBox fullScreen fullScreenMaximumExtent makeClosable makeSecondTopmost makeUnclosable offerWindowMenu sendToBack setWindowColor setWindowColor: takeOutOfWindow)('object fileIn' convertToCurrentVersion:refStream:)('open/close' closeBoxHit delete initialExtent mustNotClose openAsIs openAsIsIn: openInMVC openInMVCExtent: openInWorld: openInWorld:extent: openInWorldExtent: positionSubmorphs)('panes' addMorph:frame: addMorph:fullFrame: existingPaneColor holdsTranscript paneColor paneColor: paneColorToUse paneMorphSatisfying: replacePane:with: restoreDefaultPaneColor setUpdatablePanesFrom: titleAndPaneText updatablePanes updateBox:color: updateBoxesColor: updatePaneColors)('resize/collapse' allowReframeHandles allowReframeHandles: collapse collapseOrExpand collapsedFrame doFastWindowReframe: expand expandBoxHit fastFramingOn fullFrame getBoundsWithFlex getCollapsedFrame isCollapsed mouseLeaveEvent:fromPane: paneWithLongestSide:near: reframePanesAdjoining:along:to: setBoundsWithFlex: spawnOffsetReframeHandle:divider: spawnPaneFrameHandle: spawnReframeHandle: unexpandedFrame unexpandedFrame: wantsExpandBox)('stepping' amendSteppingStatus stepAt: stepTime wantsSteps wantsStepsWhenCollapsed)('testing' isSystemWindow shouldDropOnMouseUp wantsToBeCachedByHand)('top window' activate activateAndForceLabelToShow activeOnlyOnTop activeOnlyOnTop: adjustBorderUponActivationWhenLabeless adjustBorderUponDeactivationWhenLabeless extantSketchEditor isActive lockInactivePortions passivate)!ScrollBar initialize!!ScrollBar class reorganize!('as yet unclassified' alwaysShowFlatScrollbarForAlternativeLook)('class initialization' createArrowImagesCache createBoxImagesCache initialize initializeImagesCache)('coloring morphs' updateScrollBarButtonAspect:color: updateScrollBarButtonsAspect:color:)('images' arrowOfDirection:size:color: boxOfSize:color: changesInPreferences createArrowOfDirection:in: createArrowOfDirection:size:color: createBoxIn: createBoxOfSize:color: verticesForComplexArrow: verticesForSimpleArrow:)('images - samples' arrowSamples boxSamples sampleColors sampleSizes)!Slider subclass: #ScrollBar	instanceVariableNames: 'menuButton upButton downButton pagingArea scrollDelta pageDelta interval menuSelector timeOfMouseDown timeOfLastScroll nextPageDirection currentScrollDelay '	classVariableNames: 'ArrowImagesCache BoxesImagesCache CachedImages UpArrow UpArrow8Bit '	poolDictionaries: ''	category: 'Morphic-Windows'!!Slider reorganize!('access' descending descending: pagingArea sliderColor sliderColor: sliderShadowColor thumbColor value wantsSlot)('geometry' computeSlider extent: roomToMove sliderExtent sliderThickness totalSliderArea)('initialize' initialize initializeSlider)('model access' setValue: value:)('other events' mouseDownInSlider: mouseUpInSlider:)('scrolling' scrollAbsolute:)('initialization' defaultBorderColor defaultBorderWidth defaultBounds defaultColor)!Preferences class removeSelector: #menuLineLowerColor!Preferences class removeSelector: #menuLineUpperColor!!Preferences class reorganize!('*Refactory-RBExternalBrowserReferences' browseToolClass editCustomHalos letUserPersonalizeMenu)('add preferences' addPreference:categories:default:balloonHelp: addPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector: addPreference:category:default:balloonHelp:)('factored pref panel' categoriesContainingPreference:)('fonts' chooseCodeFont chooseFlapsFont chooseFontWithPrompt:andSendTo:withSelector: chooseListFont chooseMenuFont chooseSystemFont chooseWindowTitleFont fontConfigurationMenu presentMvcFontConfigurationMenu restoreDefaultFonts setButtonFontTo: setCodeFontTo: setFlapsFontTo: setListFontTo: setMenuFontTo: setSystemFontTo: setWindowTitleFontTo: standardButtonFont standardCodeFont standardFlapFont standardListFont standardMenuFont windowTitleFont windowTitleStyle)('get/set' automaticFlapLayoutString disable: disableGently: doesNotUnderstand: enable: enableGently: enableOrDisable:asPer: enableProjectNavigator navigatorShowingString setPreference:toValue: togglePreference: valueOfFlag: valueOfFlag:ifAbsent:)('halos' classicHaloSpecs classicHalosInForce customHaloSpecs customHalosInForce haloSpecifications haloSpecificationsForWorld haloTheme iconicHaloSpecifications iconicHalosInForce installClassicHaloSpecs installCustomHaloSpecs installHaloSpecsFromArray: installHaloTheme: installIconicHaloSpecs installSimpleHaloSpecs resetHaloSpecifications showChooseGraphicHaloHandle simpleFullHaloSpecifications simpleHalosInForce)('hard-coded prefs' cmdGesturesEnabled cmdKeysInText debugMenuItemsInvokableFromScripts desktopMenuTitle isFlagship messengersInViewers metaMenuDisabled preserveCommandExcursions suppressWindowTitlesInInstanceBrowsers useCategoryListsInViewers)('help')('initial values')('initialization' addPreferenceForCelesteShowingAttachmentsFlag addPreferenceForOptionalCelesteStatusPane chooseInitialSettings compileAccessMethodForPreference: initializeDictionaryOfPreferences removePreference: setPreferencesFrom:)('menu parameters' menuBorderColor menuBorderWidth menuColor menuLineColor menuTitleBorderColor menuTitleBorderWidth menuTitleColor restoreDefaultMenuParameters)('misc' addModelItemsToWindowMenu: browseThemes defaultValueTableForCurrentRelease giveHelpWithPreferences installTheme: menuColorString offerThemesMenu okayToChangeProjectLocalnessOf: roundedCornersString setFlag:toValue:during: soundEnablingString staggerPolicyString themeChoiceButtonOfColor:font: toggleMenuColorPolicy toggleRoundedCorners toggleSoundEnabling toggleWindowPolicy wantsChangeSetLogging)('parameters' acceptAnnotationsFrom: annotationEditingWindow annotationInfo borderColorWhenRunning defaultAnnotationRequests defaultAnnotationRequests: defaultAuthorName defaultPaintingExtent desktopColor desktopColor: editAnnotations initializeParameters inspectParameters maxBalloonHelpLineLength parameterAt: parameterAt:default: parameterAt:ifAbsent: parameterAt:ifAbsentPut: scrollBarColor scrollBarWidth setDefaultAnnotationInfo setParameter:to:)('personalization' compileHardCodedPref:enable: disableProgrammerFacilities enableProgrammerFacilities loadPreferencesFrom: personalizeUserMenu: restorePersonalPreferences restorePreferencesFromDisk savePersonalPreferences storePreferencesIn: storePreferencesToDisk)('preference-object access' allPreferenceObjects preferenceAt: preferenceAt:ifAbsent:)('preferences panel' initialExtent initializePreferencePanel:in: inspectPreferences listOfCategories openFactoredPanel openFactoredPanelWithWidth: openNewPreferencesPanel openPreferencesControlPanel openPreferencesInspector preferenceObjectsInCategory: preferencesControlPanel)('reacting to change' annotationPanesChanged classicTilesSettingToggled eToyFriendlyChanged infiniteUndoChanged largeTilesSettingToggled mouseOverHalosChanged optionalButtonsChanged roundedWindowCornersChanged setNotificationParametersForStandardPreferences sharedFlapsSettingChanged showProjectNavigatorChanged smartUpdatingChanged universalTilesSettingToggled)('scrollbar parameters' fontFactor)('standard queries' abbreviatedBrowserButtons allowCelesteTell alphabeticalProjectMenu alternativeBrowseIt alternativeButtonsInScrollBars alternativeScrollbarLook alternativeWindowBoxesLook alternativeWindowLook annotationPanes ansiAssignmentOperatorWhenPrettyPrinting areaFillsAreTolerant areaFillsAreVeryTolerant autoAccessors automaticFlapLayout automaticKeyGeneration automaticPlatformSettings automaticViewerPlacement balloonHelpEnabled balloonHelpInMessageLists batchPenTrails browseWithDragNDrop browseWithPrettyPrint browserNagIfNoClassComment browserShowsPackagePane bugFixArchiveViewerAsyncLoadUpdates canRecordWhilePlaying capitalizedReferences caseSensitiveFinds cautionBeforeClosing celesteHasStatusPane celesteShowsAttachmentsFlag changeSetVersionNumbers checkForSlips checkForUnsavedProjects classicNavigatorEnabled classicNewMorphMenu clickOnLabelToEdit cmdDotEnabled collapseWindowsInPlace colorWhenPrettyPrinting compactViewerFlaps compressFlashImages confirmFirstUseOfStyle conversionMethodsAtFileOut cpuWatcherEnabled debugHaloHandle debugPrintSpaceLog debugShowDamage decorateBrowserButtons diffsInChangeList diffsWithPrettyPrint dismissAllOnOptionClose dragNDropWithAnimation duplicateControlAndAltKeys eToyFriendly eToyLoginEnabled enableLocalSave extraDebuggerButtons extractFlashInHighQuality extractFlashInHighestQuality fastDragWindowForMorphic fenceEnabled fenceSoundEnabled fenceSoundEnabled: fullScreenLeavesDeskMargins gradientMenu gradientScrollBars haloEnclosesFullBounds haloTransitions hiddenScrollBars higherPerformance honorDesktopCmdKeys ignoreStyleIfOnlyBold inboardScrollbars includeSoundControlInNavigator infiniteUndo logDebuggerStackToFile magicHalos menuAppearance3d menuButtonInToolPane menuColorFromWorld menuKeyboardControl menuWithIcons modalColorPickers mouseOverForKeyboardFocus mouseOverHalos mvcProjectsAllowed navigatorOnLeftEdge noviceMode okToReinitializeFlaps optionalButtons passwordsOnPublish personalizedWorldMenu postscriptStoredAsEPS preserveTrash printAlternateSyntax projectViewsInWindows projectZoom projectsSentToDisk promptForUpdateServer propertySheetFromHalo readDocumentAtStartup restartAlsoProceeds reverseWindowStagger roundedMenuCorners roundedWindowCorners scrollBarsNarrow scrollBarsOnRight scrollBarsWithoutMenuButton securityChecksEnabled selectionsMayShrink selectiveHalos showBoundsInHalo showDeprecationWarnings showDirectionForSketches showDirectionHandles showFlapsWhenPublishing showProjectNavigator showSecurityStatus showSharedFlaps signProjectFiles simpleMenus slideDismissalsToTrash smartUpdating soundQuickStart soundStopWhenDone soundsEnabled startInUntrustedDirectory swapControlAndAltKeys swapMouseButtons systemWindowEmbedOK thoroughSenders tileTranslucentDrag timeStampsInMenuTitles turnOffPowerManager twentyFourHourFileStamps twoSidedPoohTextures typeCheckingInTileScripting uniTilesClassic uniqueNamesInHalos universalTiles unlimitedPaintArea updateSavesFile useButtonProprtiesToFire useFileList2 useUndo viewersInFlaps warnAboutInsecureContent warnIfNoChangesFile warnIfNoSourcesFile wordStyleCursorMovement)('text highlighting' chooseInsertionPointColor chooseKeyboardFocusColor chooseTextHighlightColor initializeTextHighlightingParameters insertionPointColor insertionPointColor: keyboardFocusColor keyboardFocusColor: textHighlightColor textHighlightColor:)('themes' brightSqueak magdeburg outOfTheBox paloAlto personal smalltalk80 westwood)('window colors' darkenStandardWindowPreferences installBrightWindowColors installMissingWindowColors installPastelWindowColors installUniformWindowColors installWindowColorsVia: lightenStandardWindowPreferences setWindowColorFor:to: windowColorFor: windowColorHelp windowColorTable windowSpecificationPanel)('class initialization' initialize registerInFlapsRegistry unload)!!MenuMorph reorganize!('accessing' allWordings allWordingsNotInSubMenus: commandKeyHandler commandKeyHandler: defaultTarget hasSubMenu: itemWithWording: items lastItem lastSelection popUpOwner popUpOwner: rootMenu stayUp stayUp:)('construction' add:action: add:selector:argument: add:subMenu: add:subMenu:target:selector:argumentList: add:target:action: add:target:selector: add:target:selector:argument: add:target:selector:argumentList: addLine addList: addService:for: addServices2:for:extraLines: addServices:for:extraLines: addStayUpIcons addStayUpItem addStayUpItemSpecial addTitle: addTitle:updatingSelector:updateTarget: addUpdating:action: addUpdating:enablement:action: addUpdating:enablementSelector:target:selector:argumentList: addUpdating:target:action: addUpdating:target:selector:argumentList: addWithLabel:enablement:action: addWithLabel:enablementSelector:target:selector:argumentList: balloonTextForLastItem: defaultTarget: labels:lines:selections: title:)('control' activeSubmenu: deleteIfPopUp deleteIfPopUp: isCandidateForAutomaticViewing popUpAdjacentTo:forHand:from: popUpAt:forHand:in: popUpAt:forHand:in:allowKeyboard: popUpEvent:in: popUpForHand:in: popUpInWorld popUpInWorld: popUpNoKeyboard selectItem:event: updateColor wantsToBeDroppedInto:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('dropping/grabbing' justDroppedInto:event: undoGrabCommand)('events' activate: handleFocusEvent: handlesMouseDown: mouseDown: mouseUp:)('initialization' delete initialize setDefaultParameters setTitleParametersFor:)('keyboard control' displayFiltered: handlesKeyboard: keyStroke: keyboardFocusChange: moveSelectionDown:event:)('menu' addCustomMenuItems:hand: addItem addTitle detachSubMenu: removeStayUpBox removeStayUpItems setInvokingView: setTarget: toggleStayUp: toggleStayUpIgnore:evt:)('modal control' invokeModal invokeModal: invokeModalAt:in:allowKeyboard: isModalInvokationDone isModalInvokationDone: modalSelection modalSelection:)('private' invokeMetaMenu: morphicLayerNumber positionAt:relativeTo:inWorld: selectedItem)('*connectors-accessing')!!MenuItemMorph reorganize!('accessing' adaptToWorld: allWordingsNotInSubMenus: arguments arguments: contentString contentString: contents: contents:withMarkers: contents:withMarkers:inverse: hasIcon hasSubMenu hasSubMenu: icon icon: isEnabled isEnabled: isStayUpItem itemWithWording: selector selector: subMenu subMenu: target target:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn: selectionFillStyle)('events' activateOwnerMenu: activateSubmenu: deselectTimeOut: doButtonAction handleMouseUp: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: invokeWithEvent: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseUp:)('grabbing' aboutToBeGrabbedBy: duplicateMorph:)('initialization' defaultBounds deleteIfPopUp: initialize)('layout' minHeight minWidth)('layout-properties' hResizing vResizing)('meta actions' wantsHaloFromClick)('selecting' deselect: isSelected: select:)('private' deselectItem notObsolete offImage onImage)!MenuIcons initialize!!MenuIcons class reorganize!('accessing - icons' appearanceIcon backIcon cancelIcon copyIcon cutIcon deleteIcon doItIcon findIcon forwardIcon helpIcon inspectIcon morphsIcon newIcon okIcon openIcon pasteIcon printIcon quitIcon redoIcon saveAsIcon saveIcon undoIcon windowIcon)('class initialization' initialize)('decoration' decorateMenu: itemsIcons putIcon:onItemWithWording:in:)!!LRUCache class reorganize!('instance creation' size:factory:)('testing' test test2)!!FillInTheBlankMorph reorganize!('accessing' response response: selectionInterval)('event handling' handlesMouseDown: mouseDown:)('geometry' extent:)('grabbing/dropping' undoGrabCommand)('initialization' createAcceptButton createCancelButton createQueryTextMorph: createTextPaneExtent:acceptBoolean:topOffset:buttonAreaHeight: defaultColor delete initialize responseUponCancel: setDefaultParameters setPasswordQuery:initialAnswer:answerHeight:acceptOnCR: setQuery:initialAnswer:answerExtent:acceptOnCR: setQuery:initialAnswer:answerHeight:acceptOnCR: updateColor updateColor:color:intensity:)('invoking' getUserResponse morphicLayerNumber)('menu' accept cancel codePaneMenu:shifted:)('object fileIn' convertToCurrentVersion:refStream:)!"Postscript:"Preferences restoreDefaultMenuParameters.Compiler	evaluate: 'Parameters removeKey: #menuLineLowerColor ifAbsent:[].'	for: Preferences	logged: false.Compiler	evaluate: 'Parameters removeKey: #menuLineUpperColor ifAbsent:[].'	for: Preferences	logged: false.!