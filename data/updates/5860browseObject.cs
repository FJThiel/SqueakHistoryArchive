'From Squeak3.7alpha of 11 September 2003 [latest update: #5816] on 11 March 2004 at 4:13:25 pm'!"Change Set:		browseObjectDate:			11 March 2004Author:			Masashi UmezawaAdd #browse method to Object.The method is now on tools-browser package to minimize dependency.Object>>browseHierarchy delegates SystemNavigation to keep consistency. Simple SUnit tests are also included."!TestCase subclass: #BrowseTest	instanceVariableNames: 'originalBrowserClass originalHierarchyBrowserClass'	classVariableNames: ''	poolDictionaries: ''	category: 'Tests-Tools-Browser'!Object subclass: #SystemNavigation	instanceVariableNames: 'browserClass hierarchyBrowserClass '	classVariableNames: 'Default '	poolDictionaries: ''	category: 'System-Support'!!Object methodsFor: '*tools-browser' stamp: 'mu 3/6/2004 15:13'!browse	self systemNavigation browseClass: self class! !!Object methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 16:00'!browseHierarchy	self systemNavigation browseHierarchy: self class! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/6/2004 15:43'!testBrowseClass	"self debug: #testBrowseClass"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentBrowsers.	1 class browse.	browsersAfter := self currentBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == SmallInteger).		opened delete			! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/11/2004 15:56'!testBrowseHierarchyClass	"self debug: #testBrowseHierarchyClass"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentHierarchyBrowsers.	1 class browseHierarchy.	browsersAfter := self currentHierarchyBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == SmallInteger).		opened delete			! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/11/2004 15:52'!testBrowseHierarchyInstance	"self debug: #testBrowseHierarchyInstance"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentHierarchyBrowsers.	1 browseHierarchy.	browsersAfter := self currentHierarchyBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == SmallInteger).		opened delete			! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/11/2004 16:00'!testBrowseHierarchyMataclass	"self debug: #testBrowseHierarchyMataclass"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentHierarchyBrowsers.	1 class class browseHierarchy.	browsersAfter := self currentHierarchyBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == Metaclass).		opened delete			! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/6/2004 15:43'!testBrowseInstance	"self debug: #testBrowseInstance"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentBrowsers.	1 browse.	browsersAfter := self currentBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == SmallInteger).		opened delete			! !!BrowseTest methodsFor: 'testing' stamp: 'mu 3/6/2004 15:44'!testBrowseMetaclass	"self debug: #testBrowseMetaclass"	| browsersBefore browsersAfter opened |	self ensureMorphic.		browsersBefore := self currentBrowsers.	1 class class browse.	browsersAfter := self currentBrowsers.		self assert:  (browsersAfter size  = (browsersBefore size + 1)).	opened := browsersAfter removeAll: browsersBefore; yourself.	self assert:  (opened size = 1).	opened := opened asArray first.	self assert: (opened model selectedClass == Metaclass).		opened delete			! !!BrowseTest methodsFor: 'private' stamp: 'mu 3/6/2004 15:41'!currentBrowsers	^ (ActiveWorld submorphs		select: [:each | (each isKindOf: SystemWindow)				and: [each model isKindOf: Browser]]) asSet! !!BrowseTest methodsFor: 'private' stamp: 'mu 3/11/2004 15:52'!currentHierarchyBrowsers	^ (ActiveWorld submorphs		select: [:each | (each isKindOf: SystemWindow)				and: [each model isKindOf: HierarchyBrowser]]) asSet! !!BrowseTest methodsFor: 'private' stamp: 'mu 3/6/2004 15:27'!ensureMorphic	self isMorphic ifFalse: [self error: 'This test should be run in Morphic'].! !!BrowseTest methodsFor: 'private' stamp: 'mu 3/6/2004 15:26'!isMorphic	^Smalltalk isMorphic! !!BrowseTest methodsFor: 'running' stamp: 'mu 3/11/2004 15:57'!setUp	| systemNavigation |	systemNavigation := SystemNavigation default.	originalBrowserClass := systemNavigation browserClass.	originalHierarchyBrowserClass := systemNavigation hierarchyBrowserClass.		 systemNavigation browserClass: nil.	 systemNavigation hierarchyBrowserClass: nil.		! !!BrowseTest methodsFor: 'running' stamp: 'mu 3/11/2004 15:57'!tearDown	| systemNavigation |	systemNavigation := SystemNavigation default.	 systemNavigation browserClass: originalBrowserClass.	 systemNavigation hierarchyBrowserClass: originalHierarchyBrowserClass.! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:47'!browseClass: aBehavior	| targetClass |	self browserClass ifNil: [self error: 'No browser installed:'].	targetClass := aBehavior isMeta				ifTrue: [aBehavior theNonMetaClass]				ifFalse: [aBehavior ].	self browserClass newOnClass: targetClass! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:51'!browseHierarchy: aBehavior	| targetClass |	self hierarchyBrowserClass ifNil: [self error: 'No hierarchy browser installed:'].	targetClass := aBehavior isMeta				ifTrue: [aBehavior theNonMetaClass]				ifFalse: [aBehavior ].	self hierarchyBrowserClass newFor: targetClass! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:46'!browserClass	browserClass ifNil: [browserClass := self defaultBrowserClass].	^browserClass! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:46'!browserClass: aBrowserClass	browserClass := aBrowserClass! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:50'!defaultBrowserClass	^self class environment at: #Browser ifAbsent:[]! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:49'!defaultHierarchyBrowserClass	^self class environment at: #HierarchyBrowser ifAbsent:[]! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:50'!hierarchyBrowserClass	hierarchyBrowserClass ifNil: [hierarchyBrowserClass := self defaultHierarchyBrowserClass].	^hierarchyBrowserClass! !!SystemNavigation methodsFor: '*tools-browser' stamp: 'mu 3/11/2004 15:47'!hierarchyBrowserClass: aBrowserClass	hierarchyBrowserClass := aBrowserClass! !Object subclass: #SystemNavigation	instanceVariableNames: 'browserClass hierarchyBrowserClass'	classVariableNames: 'Default'	poolDictionaries: ''	category: 'System-Support'!