'From Squeak 2.3 beta of Nov 25, 1998 on 13 December 1998 at 3:41:27 pm'!"Change Set:		SimulatorUpdateDate:			13 December 1998Author:			Dan IngallsUpdates simulator for new bytecode dispatch.  Also only prints a few entries beyond the stack pointer of contexts."!!InterpreterSimulator methodsFor: 'testing' stamp: 'di 12/11/1998 17:06'!findNewMethodInClass: class"	| cName |	traceOn ifTrue:		[cName _ (self sizeBitsOf: class) = 16r20			ifTrue: ['class ' , (self nameOfClass: (self fetchPointer: 6 ofObject: class))]			ifFalse: [(self nameOfClass: class)].		self cr; print: cName , '>>' , (self stringOf: messageSelector)]."(self stringOf: messageSelector) = 'doesNotUnderstand:' ifTrue: [self halt].	sendCount _ sendCount + 1."	(sendCount > 1000 and: [sendCount\\10 = 0]) ifTrue:		[Transcript print: sendCount; space.		self validate].""	(sendCount > 100150) ifTrue:		[self qvalidate.		messageQueue == nil ifTrue: [messageQueue _ OrderedCollection new].		messageQueue addLast: (self stringOf: messageSelector)]."	super findNewMethodInClass: class.! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 12/11/1998 17:18'!profile: nBytecodes	"(InterpreterSimulator new openOn: 'clonex.image') profile: 60000"	Transcript clear.	byteCount _ 0.	MessageTally spyOn: [		self internalizeIPandSP.		self fetchNextBytecode.		[byteCount < nBytecodes] whileTrue:			[self dispatchOn: currentBytecode in: BytecodeTable.			byteCount _ byteCount + 1].		self externalizeIPandSP.	].	self close! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 12/11/1998 17:19'!profileSends: nBytecodes	"(InterpreterSimulator new openOn: 'clonex.image') profileSends: 5000"	Transcript clear.	byteCount _ 0.	MessageTally tallySendsTo: self inBlock: [		self internalizeIPandSP.		self fetchNextBytecode.		[byteCount < nBytecodes] whileTrue:			[self dispatchOn: currentBytecode in: BytecodeTable.			byteCount _ byteCount + 1].		self externalizeIPandSP.	] showTree: true.	self close! !!InterpreterSimulator methodsFor: 'testing' stamp: 'di 12/11/1998 17:17'!test	Transcript clear.	byteCount _ 0.	self internalizeIPandSP.	self fetchNextBytecode.	[true] whileTrue:		[self dispatchOn: currentBytecode in: BytecodeTable.		byteCount _ byteCount + 1].	self externalizeIPandSP.! !!InterpreterSimulator methodsFor: 'debug support' stamp: 'di 12/11/1998 09:31'!longPrint: oop	| lastPtr val lastLong hdrType prevVal |	(self isIntegerObject: oop) ifTrue: [^ self shortPrint: oop].	^ String streamContents:		[:strm |		lastPtr _ 256 min: (self lastPointerOf: oop).		hdrType _ self headerType: oop.		hdrType = 2 ifTrue: [lastPtr _ 0].		prevVal _ 0.		(self headerStart: oop) to: lastPtr by: 4 do:			[:a | val _ self longAt: oop+a.			(a > 0 and: [(val = prevVal) & (a ~= lastPtr)])			ifTrue:			[prevVal = (self longAt: oop+a-8) ifFalse: [strm cr; nextPutAll: '        ...etc...']]			ifFalse:			[strm cr; nextPutAll: (a<16 ifTrue: [' ', a hex] ifFalse: [a hex]); 				space; space; space; nextPutAll: val hex8; space; space.			a=-8 ifTrue: [strm nextPutAll: 'size = ' , (val - hdrType) hex].			a=-4 ifTrue: [strm nextPutAll: '<' , (self nameOfClass: (val - hdrType)) , '>'].			a=0 ifTrue: [strm cr; tab; nextPutAll: (self dumpHeader: val)].			a>0 ifTrue: [strm nextPutAll: (self shortPrint: val)].			a=4 ifTrue: [(self fetchClassOf: oop) = (self splObj: ClassCompiledMethod) ifTrue:							[strm cr; tab; nextPutAll: (self dumpMethodHeader: val)]]].			prevVal _ val].		lastLong _ 256 min: (self sizeBitsOf: oop) - 4.		hdrType = 2			ifTrue:			["free" strm cr; nextPutAll: (oop+(self longAt: oop)-2) hex;			space; space; nextPutAll: (oop+(self longAt: oop)-2) printString]			ifFalse:			[(self formatOf: oop) = 3			ifTrue:				[strm cr; tab; nextPutAll: '/ next 3 fields are above SP... /'.				lastPtr+4 to: lastPtr+12 by: 4 do:					[:a | val _ self longAt: oop+a.					strm cr; nextPutAll: a hex; 						space; space; space; nextPutAll: val hex8; space; space.					strm nextPutAll: (self shortPrint: val)]]			ifFalse:			[lastPtr+4 to: lastLong by: 4 do:				[:a | val _ self longAt: oop+a.				strm cr; nextPutAll: (a<16 ifTrue: [' ', a hex] ifFalse: [a hex]); 					space; space; space.				strm nextPutAll: val hex8; space; space;						nextPutAll: (self charsOfLong: val)]]].	]! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/12/1998 08:32'!pushLiteralConstantBytecode	"Interpreter version has fetchNextBytecode out of order"	self pushLiteralConstant: (currentBytecode bitAnd: 16r1F).	self fetchNextBytecode.! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/11/1998 17:32'!pushLiteralVariableBytecode	"Interpreter version has fetchNextBytecode out of order"	self pushLiteralVariable: (currentBytecode bitAnd: 16r1F).	self fetchNextBytecode.! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/11/1998 17:34'!pushReceiverVariableBytecode	"Interpreter version has fetchNextBytecode out of order"	self pushReceiverVariable: (currentBytecode bitAnd: 16rF).	self fetchNextBytecode.! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/11/1998 17:35'!pushTemporaryVariableBytecode	"Interpreter version has fetchNextBytecode out of order"	self pushTemporaryVariable: (currentBytecode bitAnd: 16rF).	self fetchNextBytecode.! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/12/1998 08:30'!storeAndPopReceiverVariableBytecode	"Note: This code uses storePointerUnchecked:ofObject:withValue: and does the store check explicitely in order to help the translator produce better code."	"Interpreter version has fetchNextBytecode out of order"	| rcvr top |	rcvr _ receiver.	top _ self internalStackTop.	(rcvr < youngStart) ifTrue: [		self possibleRootStoreInto: rcvr value: top.	].	self storePointerUnchecked: (currentBytecode bitAnd: 7)		ofObject: rcvr		withValue: top.	self internalPop: 1.	self fetchNextBytecode.! !!InterpreterSimulator methodsFor: 'bytecode routines' stamp: 'di 12/11/1998 17:32'!storeAndPopTemporaryVariableBytecode	"Interpreter version has fetchNextBytecode out of order"	self storePointerUnchecked: (currentBytecode bitAnd: 7) + TempFrameStart		ofObject: localHomeContext		withValue: self internalStackTop.	self internalPop: 1.	self fetchNextBytecode.! !