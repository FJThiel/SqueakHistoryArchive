'From Squeak 2.0 of May 22, 1998 on 26 May 1998 at 6:06:53 pm'!"Change Set:		DebuggerFixes-wodDate:			26 May 1998Author:			William O. Dargel      wdargel@shoshana.comA handful of fixes for the debugger, primarily for Morphic.-The Debugger step method needs to do a changed: #contentsSelection (not #currentSelection)	This is Andreas Raab's original fix.-The PluggableTextMorph setSelection: method would only display the selection if it needed to be scrolled into view. Added 'scroller changed' to update the highlight for when it's already visible.-When going from the Notifier to the Debugger views in Morphic, the original SystemWindow and PluggableTextMorph were left as dependants. Things like setSelection: were getting called twice. By calling breakDependents in Debugger>>debug they're eliminated from the dependants.-Finally, the Morphic Notifier had an initial selection (visible if one scrolled or resized the window) as if the text was showing the debugger's code, rather than the notifier's short stack. I changed Debugger>>buildMorphicNotifierLabelled:message: to nil the #readSelection: argument. While I was at it, I used nil for #text: and #accept:, since they aren't really being used. -Right now if you 'cancel' while in the notifier, all the text goes away. This is because the initial short stack message isn't saved in any model. I couldn't think of a *simple* way to correct this ... maybe after I learn more about Morphic."!!Debugger methodsFor: 'initialize' stamp: 'wod 5/26/1998 16:44'!buildMorphicNotifierLabelled: label message: messageString	| notifyPane window |	window _ (SystemWindow labelled: label) model: self.	notifyPane _ PluggableTextMorph on: self text: nil accept: nil		readSelection: nil menu: #debugProceedMenu:.	notifyPane editString: messageString;		askBeforeDiscardingEdits: false.	window addMorph: notifyPane frame: (0@0 corner: 1@1).	^ window openInWorldExtent: 350@116! !!Debugger methodsFor: 'notifier menu' stamp: 'wod 5/26/1998 16:19'!debug	"Open a full DebuggerView."	| topView |	topView _ self topView.	topView model: nil.  "so close won't release me."	World ifNotNil:		[self breakDependents.		self openFullMorphicLabel: topView label.		^ topView delete].	topView controller controlTerminate.	topView deEmphasizeView; erase.	self openFullNoSuspendLabel: topView label.	topView controller closeAndUnscheduleNoErase.	Processor terminateActive.! !!Debugger methodsFor: 'context stack menu' stamp: 'ar 5/26/1998 16:26'!step	"Send the selected message in the accessed method, and regain control 	after the invoked method returns."		| currentContext oldMethod |	self okToChange ifFalse: [^ self].	self checkContextSelection.	externalInterrupt ifFalse: [contextStackTop push: proceedValue].	externalInterrupt _ true. "simulation leaves same state as interrupting"	currentContext _ self selectedContext.	self contextStackIndex > 1		ifTrue: 			[currentContext completeCallee: contextStackTop.			self resetContext: currentContext]		ifFalse: 			[currentContext stepToSendOrReturn.			currentContext willReturn				ifTrue: 					[oldMethod _ currentContext method.					currentContext _ currentContext step.					currentContext stepToSendOrReturn.					self resetContext: currentContext.					oldMethod == currentContext method "didnt used to update pc here"						ifTrue: [self changed: #contentsSelection]]				ifFalse: 					[currentContext completeCallee: currentContext step.					self changed: #contentsSelection.					self updateInspectors]]! !!PluggableTextMorph methodsFor: 'model access' stamp: 'wod 5/26/1998 17:03'!setSelection: sel	selectionInterval _ sel.	textMorph editor selectFrom: sel first to: sel last.	self scrollSelectionIntoView ifFalse: [scroller changed].! !