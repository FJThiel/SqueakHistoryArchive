'From Squeak3.3alpha of 18 January 2002 [latest update: #4989] on 6 November 2002 at 1:37:15 am'!"Change Set:		miscFixes-swDate:			6 November 2002Author:			Scott Wallace¥  Corrects the long-standing bug that a select-all, rather than a select-line, resulted when references-to-it was issued when the selection was an insertion point at the very beginning or the very end of the text.¥  Fixes a bug in the functioning of the graphical-imports feature which evidently got broken by the registering-file-list work almost a year ago -- the graphic was being given the name of the directory rather than the file.¥  Adds a 'copy name' cmd to the menu for the ancient GraphicalDictionaryMenu, a tool used to browse the graphical-imports dictionary; also adds balloon help to all items in that menu.¥  Updates one of the themes to keep up with recent preference additions.  This could serve well as a prototype for constructing personalized theme-defining methods -- just edit this method to reflect personal choices, change the name of the method to whatever you want to call your theme, and submit.  It will then show up in the themes list.¥  Adds a command in the shifted class-list-menu of the browser to provide getter- and setter- accessors for all inst variables defined by the class.¥  Provides balloon-help for all the items in the shifted class-list menu.¥  Limits the width of the menu title of the debug menu."!!ParagraphEditor methodsFor: 'menu messages' stamp: 'sw 10/22/2002 14:54'!referencesToIt	"Open a references browser on the selected symbol"	| aSymbol |	self selectLine.	((aSymbol _ self selectedSymbol) == nil or:		[(Smalltalk includesKey: aSymbol) not])			ifTrue: [^ view flash].	self terminateAndInitializeAround: [Smalltalk browseAllCallsOn: (Smalltalk associationAt: self selectedSymbol)]! !!Form class methodsFor: 'fileIn/Out' stamp: 'sw 10/25/2002 15:38'!importImage: fullName	"Import the given image file and store the resulting Form in the global dictionary	ImageImports, at a key consisting of the short filename up to the first period."	| image |	image _ Form fromFileNamed: fullName.	Smalltalk imageImports at: (FileDirectory localNameFor: fullName) sansPeriodSuffix put: image! !!GraphicalDictionaryMenu methodsFor: 'menu commands' stamp: 'sw 10/25/2002 16:58'!copyName	"Copy the name of the current selection to the clipboard"	Clipboard clipboardText: self nameOfGraphic asText! !!GraphicalDictionaryMenu methodsFor: 'menu commands' stamp: 'sw 10/25/2002 16:56'!showMenu	"Show the receiver's menu"	| aMenu |	aMenu _ MenuMorph new defaultTarget: self.	aMenu addList: #(		('remove'			removeEntry			'Remove this entry from the dictionary')		('rename'			renameEntry			'Rename this entry')		('repaint'			repaintEntry			'Edit the actual graphic for this entry' )		-		('hand me one'		handMeOne				'Hand me a morph with this picture as its form')		('copy name'		copyName				'Copy the name of this graphic to the clipboard')		-		('find...'			findEntry				'Find an entry by name')).	aMenu popUpInWorld! !!HaloMorph methodsFor: 'private' stamp: 'sw 10/27/2002 09:27'!doDebug: evt with: menuHandle	"Ask hand to invoke the a debugging menu for my inner target.  If shift key is down, immediately put up an inspector on the inner target"	| menu |	self obtainHaloForEvent: evt andRemoveAllHandlesBut: nil.	self world displayWorld.	evt shiftPressed ifTrue: 		[self delete.		^ innerTarget inspectInMorphic: evt].	menu _ innerTarget buildDebugMenu: evt hand.	menu addTitle: (innerTarget externalName truncateWithElipsisTo: 40).	menu popUpEvent: evt in: self world! !!Preferences class methodsFor: 'themes' stamp: 'sw 10/26/2002 01:37'!paloAlto	"Similar to the brightSqueak theme, but with a number of idiosyncratic personal settings.   Note that mouseOverForKeyboardFocus & caseSensitiveFinds are both true"	self setPreferencesFrom:	#(		(abbreviatedBrowserButtons false)		(accessOnlineModuleRepositories noOpinion)		(allowCelesteTell noOpinion)		(alternativeBrowseIt noOpinion)		(alternativeScrollbarLook false)		(alternativeWindowLook false)		(annotationPanes true)		(areaFillsAreTolerant true)		(areaFillsAreVeryTolerant false)		(autoAccessors false)		(automaticFlapLayout true)		(automaticKeyGeneration noOpinion)		(automaticPlatformSettings noOpinion)		(automaticViewerPlacement false)		(balloonHelpEnabled true)		(balloonHelpInMessageLists false)		(batchPenTrails noOpinion)		(browseWithDragNDrop false)		(browseWithPrettyPrint false)		(browserShowsPackagePane false)		(canRecordWhilePlaying noOpinion)		(capitalizedReferences true)		(caseSensitiveFinds true)		(cautionBeforeClosing false)		(celesteHasStatusPane noOpinion)		(celesteShowsAttachmentsFlag noOpinion)		(changeSetVersionNumbers true)		(checkForSlips true)		(checkForUnsavedProjects noOpinion)		(classicNavigatorEnabled false)		(classicNewMorphMenu false)		(clickOnLabelToEdit false)		(cmdDotEnabled true)		(collapseWindowsInPlace false)		(colorWhenPrettyPrinting false)		(compactViewerFlaps false)		(compressFlashImages noOpinion)		(confirmFirstUseOfStyle true)		(conservativeModuleDeActivation noOpinion)		(conversionMethodsAtFileOut true)		(cpuWatcherEnabled noOpinion)		(debugHaloHandle true)		(debugPrintSpaceLog true)		(debugShowDamage false)		(decorateBrowserButtons true)		(diffsInChangeList true)		(diffsWithPrettyPrint false)		(dismissAllOnOptionClose true)		(dragNDropWithAnimation false)		(duplicateControlAndAltKeys false)		(eToyFriendly false)		(eToyLoginEnabled noOpinion)		(enableLocalSave true)		(extractFlashInHighQuality noOpinion)		(extractFlashInHighestQuality noOpinion)		(extraDebuggerButtons true)		(fastDragWindowForMorphic true)		(fenceEnabled true)		(fenceSoundEnabled  false)		(fullScreenLeavesDeskMargins true)		(haloTransitions false)		(hiddenScrollBars false)		(higherPerformance noOpinion)		(honorDesktopCmdKeys true)		(ignoreStyleIfOnlyBold true)		(inboardScrollbars false)		(includeSoundControlInNavigator true)		(infiniteUndo false)		(lenientScopeForGlobals noOpinion)		(logDebuggerStackToFile true)		(magicHalos false)		(menuButtonInToolPane false)		(menuColorFromWorld false)		(menuKeyboardControl true)  		(modalColorPickers true)		(modularClassDefinitions noOpinion)		(mouseOverForKeyboardFocus true)		(mouseOverHalos false)		(mvcProjectsAllowed true)		(navigatorOnLeftEdge true)		(noviceMode false)		(okToReinitializeFlaps true)		(optionalButtons true)		(passwordsOnPublish noOpinion)		(personalizedWorldMenu true)		(postscriptStoredAsEPS noOpinion)		(preserveTrash false)		(projectsSentToDisk noOpinion)		(projectViewsInWindows true)		(projectZoom true)		(promptForUpdateServer false)		(printAlternateSyntax false)		(propertySheetFromHalo false)		(restartAlsoProceeds false)		(reverseWindowStagger true)		(roundedMenuCorners true)		(roundedWindowCorners true)		(scrollBarsNarrow false)		(scrollBarsOnRight false)		(scrollBarsWithoutMenuButton false)		(securityChecksEnabled noOpinion)		(selectiveHalos false)		(showBoundsInHalo false)		(showDirectionForSketches true)		(showDirectionHandles false)		(showFlapsWhenPublishing false)		(showProjectNavigator false)		(showSecurityStatus noOpinion)		(showSharedFlaps true)		(signProjectFiles noOpinion)		(simpleMenus false)		(slideDismissalsToTrash true)		(smartUpdating true)		(soundQuickStart noOpinion)		(soundsEnabled true)		(soundStopWhenDone noOpinion)		(startInUntrustedDirectory noOpinion)		(strongModules noOpinion)		(swapControlAndAltKeys noOpinion)		(swapMouseButtons  noOpinion)		(systemWindowEmbedOK false)		(thoroughSenders true)		(tileTranslucentDrag noOpinion)		(timeStampsInMenuTitles true)		(turnOffPowerManager noOpinion)		(twentyFourHourFileStamps false)		(twoSidedPoohTextures noOpinion)		(typeCheckingInTileScripting noOpinion)		(uniqueNamesInHalos false)		(uniTilesClassic noOpinion)		(universalTiles false)		(unlimitedPaintArea false)		(updateSavesFile noOpinion)		(useButtonProprtiesToFire false)		(useUndo true)		(viewersInFlaps true)		(warnAboutInsecureContent noOpinion)		(warnIfNoChangesFile true)		(warnIfNoSourcesFile true)).	self installBrightWindowColors! !!Browser methodsFor: 'class functions' stamp: 'sw 10/22/2002 16:10'!createInstVarAccessors	"Create getters and setters for all inst vars defined at the level of the current class selection, except do NOT clobber or override any selectors already understood by the instances of the selected class"	| aClass newMessage setter |	(aClass _ self selectedClassOrMetaClass) ifNotNil:		[aClass instVarNames do: 			[:aName |				(aClass canUnderstand: aName asSymbol)					ifFalse:						[newMessage _ aName, '	"Answer the value of ', aName, '"	^ ', aName.						aClass compile: newMessage classified: 'accessing' notifying: nil].				(aClass canUnderstand: (setter _ aName, ':') asSymbol)					ifFalse:						[newMessage _ setter, ' anObject	"Set the value of ', aName, '"	', aName, ' _ anObject'.						aClass compile: newMessage classified: 'accessing' notifying: nil]]]! !!Browser methodsFor: 'class functions' stamp: 'sw 10/16/2002 15:41'!shiftedClassListMenu: aMenu	"Set up the menu to apply to the receiver's class list when the shift key is down"	^ aMenu addList: #(			-			('unsent methods'			browseUnusedMethods	'browse all methods defined by this class that have no senders')			('unreferenced inst vars'	showUnreferencedInstVars	'show a list of all instance variables that are not referenced in methods')			('unreferenced class vars'	showUnreferencedClassVars	'show a list of all class variables that are not referenced in methods')			('subclass template'			makeNewSubclass		'put a template into the code pane for defining of a subclass of this class')			-			('sample instance'			makeSampleInstance		'give me a sample instance of this class, if possible')			('inspect instances'			inspectInstances			'open an inspector on all the extant instances of this class')			('inspect subinstances'		inspectSubInstances		'open an inspector on all the extant instances of this class and of all of its subclasses')			-			('fetch documentation'		fetchClassDocPane		'once, and maybe again someday, fetch up-to-date documentation for this class from the Squeak documentation repository')			('add all meths to current chgs'		addAllMethodsToCurrentChangeSet																'place all the methods defined by this class into the current change set')			('create inst var accessors'	createInstVarAccessors	'compile instance-variable access methods for any instance variables that do not yet have them')			-			('more...'					offerUnshiftedClassListMenu	'return to the standard class-list menu'))! !!GraphicalDictionaryMenu reorganize!('initialization' baseDictionary: initializeFor:fromDictionary:)('menu commands' copyName findEntry handMeOne removeEntry renameEntry renameGraphicTo: repaintEntry showMenu truncatedNameOfGraphic)('private' nameOfGraphic)!