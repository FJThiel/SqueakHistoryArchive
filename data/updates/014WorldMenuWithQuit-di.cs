'From Squeak 2.0 BETA of May 8, 1998 on 11 May 1998 at 5:15:58 pm'!!DisplayScreen methodsFor: 'private' stamp: 'di 5/11/1998 15:30'!newDepth: pixelSize"	Display newDepth: 8.	Display newDepth: 1."	self newDepthNoRestore: pixelSize.	Smalltalk isMorphic		ifTrue: [World fullRepaintNeeded]		ifFalse: [ScheduledControllers unCacheWindows; restore].! !!DisplayScreen methodsFor: 'private' stamp: 'di 5/11/1998 15:28'!newDepthNoRestore: pixelSize	"Change depths.  Check if there is enough space!!  , di"	| area need |	pixelSize = depth ifTrue: [^ self  "no change"].	pixelSize < depth ifFalse:		["Make sure there is enough space"		area _ Display boundingBox area. "pixels"		Smalltalk isMorphic		ifTrue:			[area _ area + area "World canvas bitmap still separate"]		ifFalse:			[ScheduledControllers scheduledWindowControllers do:				[:aController | aController view cacheBitsAsTwoTone ifFalse:					[area _ area + aController view windowBox area]]].		need _ (area * pixelSize // 8) - (area * depth // 8)  "new bytes needed"				+ 80000.  "lowSpaceThreshold (should be shared)"		(Smalltalk garbageCollectMost <= need			and: [Smalltalk garbageCollect <= need])			ifTrue: [self halt: 'Insufficient free space']].	self depth: pixelSize.  	self setExtent: self extent.	ScheduledControllers updateGray.	DisplayScreen startUp! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 17:15'!buildWorldMenu	"Build the meta menu for the world."	| menu subMenu |	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	Project current isTopProject ifFalse:		[menu add: 'exit this world' action: #exitWorld.		menu addLine].	menu add: 'new morph...' action: #newMorph.	World ifNotNil: [		subMenu _ MenuMorph new defaultTarget: self.		subMenu add: 'workspace' action: #openWorkspace.		subMenu add: 'browser' action: #openBrowser.		subMenu add: 'recent changes' action: #openRecentChanges.		subMenu add: 'change sorter' action: #openChangeSorter.		subMenu add: 'changes log' action: #openChangesLog.		subMenu add: 'file list' action: #openFileList.		subMenu add: 'transcript' action: #openTranscript.		subMenu add: 'project (mvc)' action: #openMVCProject.		subMenu add: 'project (morphic)' action: #openMorphicProject."coming soon...		subMenu addLine.		subMenu add: 'collapse all' action: #collapseAll.		subMenu add: 'expand all' action: #expandAll.		subMenu add: 'find window' action: #findWindow."		menu add: 'windows...' subMenu: subMenu].	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'grab drawing from screen' action: #grabDrawingFromScreen.	subMenu add: 'read drawing from file' action: #importImageFromDisk.	subMenu add: 'make new drawing' target: self presenter associatedMorph action: #makeNewDrawingWithin.	menu add: 'graphics...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'add slot to model' action: #newVariable.	subMenu add: 'write init method for model' action: #writeInitMethodForModel.	subMenu add: 'grab model for this world' action: #grabModel.	menu add: 'model...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'change background color' action: #changeBackgroundColor.	subMenu add: 'set display depth...' action: #setDisplayDepth.	subMenu add: 'use texture background' target: self world action: #setStandardTexture.	subMenu add: 'unlock contents' action: #unlockWorldContents.	subMenu add: 'unhide hidden objects' action: #showHiders.	subMenu add: 'round up stray objects' action: #roundUpStrayObjects.	gridOn		ifTrue: [subMenu add: 'turn gridding off' action: #setGridding]		ifFalse: [subMenu add: 'turn gridding on' action: #setGridding].	menu add: 'options...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'local host address' action: #reportLocalAddress.	subMenu add: 'connect remote user' action: #connectRemoteUser.	subMenu add: 'disconnect remote user' action: #disconnectRemoteUser.	subMenu add: 'disconnect all remote users' action: #disconnectAllRemoteUsers.	menu add: 'remote...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'read drawing from file' action: #importImageFromDisk.	subMenu add: 'save world in file' action: #saveWorldInFile.	subMenu add: 'read morph(s) from file' action: #readMorphFile.	menu add: 'file...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self world.	subMenu add: 'add stop, step, & go buttons' target: self world presenter action: #addStopStepGoButtons.	subMenu add: 'add scripting knobs' target: self presenter action: #addStandardControls.	subMenu add: 'remove scripting knobs' target: self world action: #removeScriptingControls.	subMenu addLine.	subMenu add: 'parts bin' target: self presenter action: #createStandardPartsBin.	subMenu add: 'control panel' target: self presenter action: #createControlPanel.	menu add: 'scripting...' subMenu: subMenu.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'inspect world' action: #inspectWorld.	subMenu add: 'inspect model' action: #inspectWorldModel.	subMenu add: 'clear palette area' action: #clearPaletteArea.	subMenu add: 'flush viewer cache' action: #flushViewerCache.	subMenu add: 'full screen' action: #fullScreen.	subMenu add: 'start MessageTally' action: #startMessageTally.	subMenu add: 'call #tempCommand' action: #callTempCommand.	menu add: 'debug...' subMenu: subMenu.	menu addLine.	menu add: 'save' action: #saveSession.	menu add: 'save as...' action: #saveAs.	menu add: 'save and quit' action: #saveAndQuit.	menu add: 'quit...' action: #quitSession.	^ menu! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:09'!openChangesLog	ChangeList browseRecentLog! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:08'!openRecentChanges	Utilities browseRecentSubmissions! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:19'!quitSession	Smalltalk		snapshot: (self confirm: 'Save changes before quitting?' orCancel: [^ self])		andQuit: true! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:18'!saveAndQuit	Smalltalk snapshot: true andQuit: true! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:16'!saveAs	^ Smalltalk saveAs! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:15'!saveSession	Smalltalk snapshot: true andQuit: false! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 16:11'!setDisplayDepth	"Let the user choose a new depth for the display. "	| result |	(result _ (SelectionMenu selections: #('1' '2' '4' '8' '16' '32')) startUpWithCaption: 'Choose a display depth(it is currently ' , Display depth printString , ')') == nil ifFalse:		[Display newDepth: result asNumber]! !!HandMorph methodsFor: 'meta menu' stamp: 'di 5/11/1998 17:05'!startMessageTally	| world |	world _ self world.	(self confirm: 'MessageTally will start now,and stop when the cursor goesto the top of the screen') ifTrue:		[MessageTally spyOn:			[[Sensor primMousePt y > 0] whileTrue: [world doOneCycle]]]! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'di 5/11/1998 15:14'!isMorphic	"Return true if the user interface is running in Morphic rathern than MVC.	By convention the gloabl variable World is set to nil when MVC is running.	ScheduledControllers could be set to nil when Morphic is running, but	this symmetry is not yet in effect."	^ World ~~ nil! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'di 5/11/1998 15:21'!processShutDownList	"Call the shutDown method on each object that needs to gracefully shut itself down before a snapshot."	PWS stopServer.	(self includesKey: #Password) ifTrue: [Password shutDown].	self shutDownSound.	Delay shutDown.	Smalltalk shutDown.	Color shutDown.	StrikeFont shutDown.	Smalltalk isMorphic ifFalse: [ControlManager shutDown].	Form shutDown.	DisplayScreen shutDown.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'di 5/11/1998 15:32'!processStartUpList	"Call the startUp method on each object that needs to gracefully restart itself after a snapshot."	DisplayScreen startUp.	FileDirectory startUp.	Cursor startUp.	Smalltalk installLowSpaceWatcher.	InputSensor startUp.	ProcessorScheduler startUp.	Delay startUp.	Smalltalk startUp.	Smalltalk isMorphic		ifTrue: [World fullRepaintNeeded]		ifFalse: [ControlManager startUp].! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'di 5/11/1998 15:17'!snapshot: save andQuit: quit	"Mark the changes file and close all files. If save is true, save the current state of this Smalltalk in the image file. If quit is true, then exit to the outer shell. The latter part of this method runs when resuming a previously saved image. The resume logic checks for a document file to process when starting up."	| resuming msg sourceLink |	save & (SourceFiles at: 2) notNil ifTrue:		[msg _  (quit			ifTrue: ['----QUIT----']			ifFalse: ['----SNAPSHOT----'])			, Date dateAndTimeNow printString.		sourceLink _ ' priorSource: ' , LastQuitLogPosition printString.		LastQuitLogPosition _ (SourceFiles at: 2) setToEnd; position.		self logChange: msg , sourceLink.		Transcript cr; show: msg].	self processShutDownList.	Smalltalk isMorphic ifFalse: [Cursor write show].	save		ifTrue: [resuming _ self snapshotPrimitive]  "<-- PC frozen here on image file"		ifFalse: [resuming _ false].	quit & resuming not ifTrue: [self quitPrimitive].	Smalltalk isMorphic ifFalse: [Cursor normal show].	self processStartUpList.	resuming ifTrue: [		self clearExternalObjects.		self readDocumentFile].! !