'From Squeak3.2alpha of 2 October 2001 [latest update: #4466] on 30 October 2001 at 2:14:44 pm'!"Change Set:		viewerSlim-swDate:			30 October 2001Author:			Scott WallaceFor a long time there have been extra layers of containment in Viewers that did not carry their weight in terms of features; these had been serving as place-holders in support of various unreleased forays into allowing optional panes for showing code, status, readout, etc., right in place in Viewers.  Extensions of the envisaged sort have now come well along, but it turns out they are using quite different mechanisms, so it is now well past time for those old place-holding layers to disappear, so this update does that.The PhraseWrapperMorph layer that bound the rows together is eliminated, and the ViewerRow and ViewerEntry are conflated back into ViewerLine.  The old classes (not a lot of code) are retained in service of existing content that may include Viewers still working adequately under the old design."!AlignmentMorph subclass: #ViewerLine	instanceVariableNames: 'elementSymbol '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Scripting Tiles'!!Morph methodsFor: 'other' stamp: 'sw 10/30/2001 13:12'!removeAllButFirstSubmorph	"Remove all of the receiver's submorphs other than the first one."	self submorphs allButFirst do: [:m | m delete]! !!CategoryViewer methodsFor: 'categories' stamp: 'sw 10/30/2001 13:50'!adjustColorsAndBordersWithin	"Adjust the colors and borders of submorphs to suit currenty fashion"	self allMorphsDo:		[:m | 		(m isKindOf: TilePadMorph) ifTrue:			[m beTransparent].		(m isKindOf: PhraseTileMorph) ifTrue:			[m beTransparent.			m borderWidth: 1].		(m isKindOf: TileMorph orOf: TilePadMorph)			ifTrue:				[m borderColor: Color transparent; borderWidth: 1]			ifFalse:				[Preferences universalTiles ifFalse:					[m borderWidth: 0]]].	self borderWidth: 1! !!CategoryViewer methodsFor: 'categories' stamp: 'sw 10/30/2001 13:45'!categoryWording: aCategoryWording	"Make the category with the given wording be my current one."	| actualPane |	(actualPane _ namePane renderedMorph) firstSubmorph contents: aCategoryWording; color: Color black.	actualPane extent: actualPane firstSubmorph extent.	self removeAllButFirstSubmorph. "that being the header"	self addAllMorphs:		((scriptedPlayer tilePhrasesForCategory: chosenCategorySymbol inViewer: self)).	self enforceTileColorPolicy.	self secreteCategorySymbol.	self world ifNotNil: [self world startSteppingSubmorphsOf: self].	self adjustColorsAndBordersWithin.	owner ifNotNil: [owner isStandardViewer ifTrue: [owner fitFlap]]! !!CategoryViewer methodsFor: 'categories' stamp: 'sw 10/30/2001 12:39'!viewerEntryForSymbol:  aSymbol	"Answer a viewer entry or viewer line associated with the given symbol, or nil if none"	^ self allMorphs detect:		[:m | (m inheritsFromAnyIn: #(ViewerEntry ViewerLine)) and:			[m slotName == aSymbol]] ifNone: [nil]! !!CategoryViewer methodsFor: 'entries' stamp: 'sw 10/30/2001 11:40'!phraseForCommandFrom: aMethodInterface	"Answer a phrase for the non-slot-like command represented by aMethodInterface - classic tiles"	| aRow resultType cmd names argType argTile selfTile aPhrase balloonTextSelector stat inst aDocString universal tileBearingHelp |	aDocString _ aMethodInterface documentationOrNil.	names _ scriptedPlayer class namedTileScriptSelectors.	resultType _ aMethodInterface resultType.	cmd _ aMethodInterface selector.	(universal _ scriptedPlayer isUniversalTiles)		ifTrue:			[aPhrase _ scriptedPlayer universalTilesForInterface: aMethodInterface]		ifFalse: [cmd numArgs == 0			ifTrue:				[aPhrase _ PhraseTileMorph new vocabulary: self currentVocabulary..				aPhrase setOperator: cmd					type: resultType					rcvrType: #Player]			ifFalse:				["only one arg supported in classic tiles, so if this is fed				with a selector with > 1 arg, results will be very strange"				argType _ aMethodInterface typeForArgumentNumber: 1.				aPhrase _ PhraseTileMorph new vocabulary: self currentVocabulary.				aPhrase setOperator: cmd					type: resultType					rcvrType: #Player					argType: argType.				argTile _ ScriptingSystem tileForArgType: argType.				argTile position: aPhrase lastSubmorph position.				aPhrase lastSubmorph addMorph: argTile]].	(scriptedPlayer slotInfo includesKey: cmd)		ifTrue: [balloonTextSelector _ #userSlot].	(scriptedPlayer belongsToUniClass and: [scriptedPlayer class includesSelector: cmd])		ifTrue:			[aDocString ifNil:				[aDocString _ (scriptedPlayer class userScriptForPlayer: scriptedPlayer selector: cmd) documentationOrNil].			aDocString ifNil:				[balloonTextSelector _ #userScript]].	tileBearingHelp _ universal ifTrue: [aPhrase submorphs second] ifFalse: [aPhrase operatorTile]. 	aDocString		ifNotNil:			[tileBearingHelp setBalloonText: aDocString]		ifNil:			[balloonTextSelector ifNil:				[tileBearingHelp setProperty: #inherentSelector toValue: cmd.				balloonTextSelector _ #methodComment].			tileBearingHelp balloonTextSelector: balloonTextSelector].	aPhrase markAsPartsDonor.	cmd == #emptyScript ifTrue:		[aPhrase setProperty: #newPermanentScript toValue: true.		aPhrase setProperty: #newPermanentPlayer toValue: scriptedPlayer.		aPhrase submorphs second setBalloonText: 'drag and drop to add a new script'].	universal ifFalse:		[selfTile _ self tileForSelf.		selfTile position: aPhrase firstSubmorph position.		aPhrase firstSubmorph addMorph: selfTile].	aRow _ ViewerLine newRow borderWidth: 0; color: self color.	aRow elementSymbol: cmd asSymbol.	aRow addMorphBack: (ScriptingSystem tryButtonFor: aPhrase).	aRow addMorphBack: (Morph new extent: 4@2; beTransparent).	aRow addMorphBack: (self infoButtonFor: cmd).	aRow addMorphBack: aPhrase.	(names includes: cmd) ifTrue:		[aPhrase userScriptSelector: cmd.		aPhrase beTransparent.		aRow addMorphBack: AlignmentMorph newVariableTransparentSpacer.		aRow addMorphBack: (stat _ (inst _ scriptedPlayer scriptInstantiationForSelector: cmd) statusControlMorph).		inst updateStatusMorph: stat].	aRow beSticky; disableDragNDrop.	^ aRow! !!CategoryViewer methodsFor: 'entries' stamp: 'sw 10/30/2001 11:40'!phraseForVariableFrom: aMethodInterface	"Return a structure consisting of tiles and controls and a readout representing a 'variable' belonging to the player, complete with an appropriate readout when indicated.  Functions in both universalTiles mode and classic mode.  Slightly misnamed in that this path is used for any methodInterface that indicates an interesting resultType."	| anArrow slotName getterButton cover inner aRow doc setter tryer universal |	aRow _ ViewerLine newRow		color: self color;		beSticky;		elementSymbol: (slotName _ aMethodInterface selector);		wrapCentering: #center;		cellPositioning: #leftCenter.	(universal _ scriptedPlayer isUniversalTiles) ifFalse:		[aRow addMorphBack: (Morph new color: self color;		extent: 11 @ 22; yourself)].  "spacer"	aRow addMorphBack: (self infoButtonFor: slotName).	aRow addMorphBack: (Morph new color: self color; extent: 2@10).  " spacer"	universal ifTrue:			[inner _ scriptedPlayer universalTilesForGetterOf: aMethodInterface.			cover _ Morph new color: Color transparent.			cover extent: inner fullBounds extent.			(getterButton _ cover copy) addMorph: cover; addMorphBack: inner.			cover on: #mouseDown send: #makeUniversalTilesGetter:event:from: 					to: self withValue: aMethodInterface.			aRow addMorphFront:  (tryer _ ScriptingSystem tryButtonFor: inner).			tryer color: tryer color lighter lighter]		ifFalse:			[aRow addMorphBack: self tileForSelf bePossessive.			aRow addMorphBack: (Morph new color: self color; extent: 2@10).  " spacer"			getterButton _ self getterButtonFor: aMethodInterface selector type: aMethodInterface resultType].	aRow addMorphBack: getterButton.	(doc _ aMethodInterface documentationOrNil) ifNotNil:		[getterButton setBalloonText: doc].	universal ifFalse:		[(slotName == #seesColor:) ifTrue:			[self addIsOverColorDetailTo: aRow.			^ aRow].		(slotName == #touchesA:) ifTrue:			[self addTouchesADetailTo: aRow.			^ aRow]].	aRow addMorphBack: (AlignmentMorph new beTransparent).  "flexible spacer"	(setter _ aMethodInterface companionSetterSelector) ifNotNil:		[aRow addMorphBack: (Morph new color: self color; extent: 2@10).  " spacer"		anArrow _ universal 			ifTrue: [self arrowSetterButton: #newMakeSetterFromInterface:evt:from:  						args: aMethodInterface]			ifFalse: [self arrowSetterButton: #makeSetter:from:forPart:						args: (Array with: slotName with: aMethodInterface resultType)].		aRow addMorphBack: anArrow].	(#(color:sees: playerSeeingColor copy touchesA:) includes: slotName) ifFalse: 		[(universal and: [slotName == #seesColor:]) ifFalse:			[aRow addMorphBack: (self readoutFor: slotName type: aMethodInterface resultType readOnly: setter isNil getSelector: aMethodInterface selector putSelector: setter)]].	anArrow ifNotNil: [anArrow step].	^ aRow! !!ViewerLine methodsFor: 'access' stamp: 'sw 10/30/2001 12:43'!elementSymbol	"Answer the element symbol"	^ elementSymbol! !!ViewerLine methodsFor: 'access' stamp: 'sw 10/30/2001 12:43'!elementSymbol: aSymbol	"Set the element symbol"	elementSymbol _ aSymbol! !!ViewerLine methodsFor: 'access' stamp: 'sw 5/25/2001 10:36'!entryType	"Answer one of: #systemSlot #userSlot #systemScript #userScript"	^ self playerBearingCode elementTypeFor: elementSymbol vocabulary: self currentVocabulary! !!ViewerLine methodsFor: 'access' stamp: 'sw 10/30/2001 12:44'!initialize	"Initialize the receiver"	super initialize.	color _ Color				r: 1.0				g: 0.985				b: 0.985.	self layoutInset: 0! !!ViewerLine methodsFor: 'slot' stamp: 'sw 10/30/2001 11:46'!slotName	"Assuming the receiver represents a slot, return its name"	^  self elementSymbol! !ViewerRow removeSelector: #detail!ViewerEntry removeSelector: #detailButtonPressed!ScriptEditorMorph removeSelector: #removeAllButFirstSubmorph!CategoryViewer removeSelector: #viewerEntryFor:!