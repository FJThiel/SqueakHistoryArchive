'From Vancouver1.0 of 28 September 2004 [latest update: #355] on 1 January 2005 at 1:41:31 am'!"Change Set:		sibHalo-swDate:			2 January 2005Author:			Scott Wallace*  The greenish top-right-halo handle, which may be either the olive 'make-sibling' or the bright green 'make-deep copy (duplicate)' handle, will now, when depressed while the *shift* key is down, trigger the 'other' action, i.e. shift click on olive handle yields make-deep-copy, and shift-click on bright green handle yields 'make-sibling.'*  A further visual cue is provided when operating a green handle:  the color of the handle while dragging the resulting sibling or deep-copy will reflect the actual kind of copy made, which may be different from the original color of the handle if the shift key were found to be down.*  Whether or not a scripted player will show the olive handle in the halo is now governed by a new preference, #oliveHandleForScriptedObjects, which is automatically set to false when the eToyFriendly preference is set to true.*  Also adds, to the morph halo's 'siblings' submenu, for scripted objects, a new item, 'flash siblings', which will momentarily flash an object and all of its siblings.This version of this fileout intended for Squeakland3.8"!!DisplayScreen methodsFor: 'displaying' stamp: 'sw 1/1/2005 01:31'!flashAll: rectangleList andWait: msecs	"Flash the areas of the screen defined by the given rectangles."	rectangleList do: [:aRectangle | self reverse: aRectangle].	self forceDisplayUpdate.	(Delay forMilliseconds: msecs) wait.	rectangleList do: [:aRectangle | self reverse: aRectangle].	self forceDisplayUpdate.	(Delay forMilliseconds: msecs) wait.! !!Morph methodsFor: 'halos and balloon help' stamp: 'sw 12/30/2004 02:53'!addHandlesTo: aHaloMorph box: box	"Add halo handles to the halo.  Apply the halo filter if appropriate"	| wantsIt aSelector |	aHaloMorph haloBox: box.	Preferences haloSpecifications  do:		[:aSpec | 			aSelector _  aSpec addHandleSelector.			wantsIt _ Preferences selectiveHalos				ifTrue:					[self wantsHaloHandleWithSelector: aSelector inHalo: aHaloMorph]				ifFalse:					[true].			wantsIt ifTrue:				[(#(addMakeSiblingHandle: addDupHandle:) includes: aSelector) ifTrue:					[wantsIt _ self preferredDuplicationHandleSelector = aSelector].			wantsIt ifTrue:				[aHaloMorph perform: aSelector with: aSpec]]].	aHaloMorph innerTarget addOptionalHandlesTo: aHaloMorph box: box! !!Morph methodsFor: 'halos and balloon help' stamp: 'sw 12/29/2004 15:02'!balloonHelpTextForHandle: aHandle	"Answer a string providing balloon help for the given halo handle"	|  itsSelector |	itsSelector _ aHandle eventHandler firstMouseSelector.	#(	(addFullHandles							'More halo handles')		(addSimpleHandles						'Fewer halo handles')		(chooseEmphasisOrAlignment				'Emphasis & alignment')		(chooseFont								'Change font')		(chooseNewGraphicFromHalo				'Choose a new graphic')		(chooseStyle								'Change style')		(dismiss									'Remove')		(doDebug:with:							'Debug (press shift to inspect morph)')		(doDirection:with:						'Choose forward direction')		(doDup:with:							'Duplicate')		(doDupOrMakeSibling:with: 				'Duplicate (press shift to make a sibling)')		(doMakeSiblingOrDup:with: 				'Make a sibling (press shift to make simple duplicate)')		(doMakeSibling:with: 					'Make a sibling')		(doMenu:with:							'Menu')		(doGrab:with:							'Pick up')		(doRecolor:with:							'Change color (press shift for more properties)')		(editButtonsScript						'See the script for this button')		(editDrawing							'Repaint')		(maybeDoDup:with:						'Duplicate')		(makeNascentScript						'Make a scratch script')		(makeNewDrawingWithin				'Paint new object')		(mouseDownInCollapseHandle:with:		'Collapse')		(mouseDownOnHelpHandle:				'Help')		(openViewerForArgument				'Open a Viewer for me')		(openViewerForTarget:with:				'Open a Viewer for me')		(paintBackground						'Paint background')		(prepareToTrackCenterOfRotation:with:	'Move object or set center of rotation')		(presentViewMenu						'Present the Viewing menu')		(startDrag:with:							'Move')		(startGrow:with:							'Change size (press shift to preserve aspect)') 		(startRot:with:							'Rotate')		(startScale:with:							'Change scale') 		(tearOffTile								'Make a tile representing this object')		(tearOffTileForTarget:with:				'Make a tile representing this object')		(trackCenterOfRotation:with:				'Set center of rotation')) 	do:		[:pair | itsSelector == pair first ifTrue: [^ pair last]].	(itsSelector == #mouseDownInDimissHandle:with:) ifTrue:		[^ Preferences preserveTrash			ifTrue:				['Move to trash']			ifFalse:				['Remove from screen']].	^ 'unknown halo handle'! !!Morph methodsFor: 'halos and balloon help' stamp: 'sw 12/31/2004 03:30'!preferredDuplicationHandleSelector	"Answer the selector, either #addMakeSiblingHandle: or addDupHandle:, to be offered as the default in a halo open on me"	Preferences oliveHandleForScriptedObjects ifFalse:		[^ #addDupHandle:].	^ self renderedMorph valueOfProperty: #preferredDuplicationHandleSelector ifAbsent:		[self player class isUniClass			ifTrue:				[#addMakeSiblingHandle:]			ifFalse:				[#addDupHandle:]]! !!Morph methodsFor: 'menus' stamp: 'sw 1/1/2005 01:03'!addPlayerItemsTo: aMenu	"Add player-related items to the menu if appropriate"	| aPlayer subMenu |	aPlayer _ self topRendererOrSelf player.	subMenu _ MenuMorph new defaultTarget: self.	subMenu add: 'make a sibling instance' translated target: self action: #makeNewPlayerInstance:.	subMenu balloonTextForLastItem: 'Makes another morph whose player is of the same class as this one.  Both siblings will share the same scripts' translated.	subMenu add: 'make multiple siblings...' translated target: self action: #makeMultipleSiblings:.	subMenu balloonTextForLastItem: 'Make any number of sibling instances all at once' translated.	(aPlayer belongsToUniClass and: [aPlayer class instanceCount > 1]) ifTrue:		[subMenu addLine.		subMenu add: 'make all siblings look like me' translated target: self action: #makeSiblingsLookLikeMe:.		subMenu balloonTextForLastItem: 'make all my sibling instances look like me.' translated.		subMenu add: 'bring all siblings to my location' translated target: self action: #bringAllSiblingsToMe:.		subMenu balloonTextForLastItem: 'find all sibling instances and bring them to me' translated.		subMenu add: 'apply status to all siblngs' translated target: self action: #applyStatusToAllSiblings:.		subMenu balloonTextForLastItem: 'apply the current status of all of my scripts to the scripts of all my siblings' translated].		subMenu add: 'indicate all siblings' translated target: self action: #indicateAllSiblings.		subMenu balloonTextForLastItem: 'momentarily show, by flashing , all of my visible siblings.'.		aMenu add: 'siblings...' translated subMenu: subMenu! !!Morph methodsFor: 'meta-actions' stamp: 'sw 1/1/2005 01:17'!indicateAllSiblings	"Indicate all the receiver and all its siblings by flashing momentarily."	| aPlayer allBoxes |	(aPlayer _ self topRendererOrSelf player) belongsToUniClass ifFalse: [self error: 'not uniclass'].	allBoxes _ aPlayer class allInstances		select: [:m | m costume world == ActiveWorld]		thenCollect: [:m | m costume boundsInWorld].	5 timesRepeat:		[Display flashAll: allBoxes andWait: 120]! !!HaloMorph methodsFor: 'handles' stamp: 'sw 12/29/2004 22:18'!addDupHandle: haloSpec	"Add the halo that offers duplication, or, when shift is down, make-sibling"	self addHandle: haloSpec on: #mouseDown send: #doDupOrMakeSibling:with: to: self! !!HaloMorph methodsFor: 'handles' stamp: 'sw 12/29/2004 22:18'!addMakeSiblingHandle: haloSpec	"Add the halo handle that allows a sibling instance to be torn off, or, if the shift key is down, for a deep-copy duplicate to be made."	self addHandle: haloSpec on: #mouseDown send: #doMakeSiblingOrDup:with: to: self! !!HaloMorph methodsFor: '*connectors-private' stamp: 'sw 12/29/2004 22:59'!doDupOrMakeSibling: evt with: dupHandle	"Ask hand to duplicate my target, if shift key *not* pressed, or make a sibling if shift key *is* pressed"	^ evt shiftPressed		ifTrue:			[dupHandle color: Color green muchDarker.			self doMakeSibling: evt with: dupHandle]		ifFalse:			[self doDup: evt with: dupHandle]! !!HaloMorph methodsFor: '*connectors-private' stamp: 'sw 12/29/2004 22:59'!doMakeSiblingOrDup: evt with: dupHandle	"Ask hand to duplicate my target, if shift key *is* pressed, or make a sibling if shift key *not* pressed"	^ evt shiftPressed		ifFalse:			[self doMakeSibling: evt with: dupHandle]		ifTrue:			[dupHandle color: Color green.			self doDup: evt with: dupHandle]! !!Preferences class methodsFor: 'halos' stamp: 'sw 12/30/2004 01:42'!classicHaloSpecs	"Non-iconic halos with traditional placements"	"Preferences installClassicHaloSpecs"	"Preferences resetHaloSpecifications"  "  <-  will result in the standard default halos being reinstalled"	"NB: listed below in clockwise order"		^ #(	"  	selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------"	(addMenuHandle:		left			top				(red)							none)	(addDismissHandle:		leftCenter	top				(red		muchLighter)			'Halo-Dismiss')	(addGrabHandle:			center		top				(black)							none)	(addDragHandle:			rightCenter	top				(brown)							none)	(addDupHandle:			right		top				(green)							none)		(addMakeSiblingHandle:		right		top				(green muchDarker)				'Halo-Dup')		(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		none)	(addPoohHandle:			right		center			(white)							none)	(addPaintBgdHandle:		right		center			(lightGray)						none)	(addRepaintHandle:		right		center			(lightGray)						none)	(addGrowHandle:		right		bottom			(yellow)						none)	(addScaleHandle:		right		bottom			(lightOrange)					none)	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				none)	(addFontStyleHandle:		center		bottom			(lightRed)						none)	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						none)	(addRecolorHandle:		right		bottomCenter	(magenta darker)				none)	(addRotateHandle:		left			bottom			(blue)							none))! !!Preferences class methodsFor: 'halos' stamp: 'sw 12/29/2004 22:16'!iconicHaloSpecifications	"Answer an array that characterizes the locations, colors, icons, and selectors of the halo handles that may be used in the iconic halo scheme"	"Preferences resetHaloSpecifications"	^ #(	"  	selector				horiz		vert			color info						icon key		---------				------		-----------		-------------------------------		---------------"	(addCollapseHandle:		left			topCenter		(tan)							'Halo-Collapse')	(addPoohHandle:			right		center			(white)							'Halo-Pooh')	(addDebugHandle:		right		topCenter		(blue	veryMuchLighter)		'Halo-Debug')	(addDismissHandle:		left			top				(red		muchLighter)			'Halo-Dismiss')	(addRotateHandle:		left			bottom			(blue)							'Halo-Rot')	(addMenuHandle:		leftCenter	top				(red)							'Halo-Menu')	(addTileHandle:			left			bottomCenter	(lightBrown)					'Halo-Tile')	(addViewHandle:			left			center			(cyan)							'Halo-View')	(addGrabHandle:			center		top				(black)							'Halo-Grab')	(addDragHandle:			rightCenter	top				(brown)							'Halo-Drag')	(addDupHandle:			right		top				(green)							'Halo-Dup')		(addMakeSiblingHandle:	right		top				(green muchDarker)				'Halo-Dup')		(addHelpHandle:			center		bottom			(lightBlue)						'Halo-Help')	(addGrowHandle:		right		bottom			(yellow)						'Halo-Scale')	(addScaleHandle:		right		bottom			(lightOrange)					'Halo-Scale')	(addScriptHandle:		rightCenter	bottom			(green muchLighter)			'Halo-Script')	(addPaintBgdHandle:		right		center			(lightGray)						'Halo-Paint')	(addViewingHandle:		leftCenter	bottom			(lightGreen lighter)				'Halo-View')	(addRepaintHandle:		right		center			(lightGray)						'Halo-Paint')	(addFontSizeHandle:		leftCenter	bottom			(lightGreen)						'Halo-FontSize')	(addFontStyleHandle:		center		bottom			(lightRed)						'Halo-FontStyle')	(addFontEmphHandle:	rightCenter	bottom			(lightBrown darker)				'Halo-FontEmph')	(addRecolorHandle:		right		bottomCenter	(magenta darker)				'Halo-Recolor')	(addChooseGraphicHandle:	right	bottomCenter	(green muchLighter)			'Halo-ChooseGraphic')		) ! !!StandardScriptingSystem methodsFor: 'utilities' stamp: 'sw 12/31/2004 19:11'!customizeForEToyUsers: aBoolean	"If aBoolean is true, set things up for etoy users.  If it's false, unset some of those things.  Some things are set when switching into etoy mode but not reversed when switching out of etoy mode" 	#(			(balloonHelpEnabled			yes		dontReverse)		(debugHaloHandle			no		reverse)		(modalColorPickers			yes		dontReverse)		oliveHandleForScriptedObjects	no	dontReverse		(uniqueNamesInHalos		yes		reverse)		(useUndo					yes		dontReverse)		(infiniteUndo				no		dontReverse)		(warnIfNoChangesFile		no		reverse)		(warnIfNoSourcesFile		no		reverse)) do:			[:trip |				(aBoolean or: [trip third == #reverse]) ifTrue:					[Preferences enableOrDisable: trip first asPer:						((trip second == #yes) & aBoolean) | ((trip second == #no) & aBoolean not)]]! !"Postscript:"Preferences resetHaloSpecifications.Preferences addPreference: #oliveHandleForScriptedObjects category: #halos default: Preferences eToyFriendly not balloonHelp: 'when true, the halo on a scripted object will show an olive handle at top-right, which serves to make a sibling copy of the object.  This is by default set to false when the eToyFriendly preference is set to true, but you can subsequently change it manually if desired.'!