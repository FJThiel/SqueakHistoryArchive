'From Squeak 2.3 of January 14, 1999 on 10 February 1999 at 1:05:05 pm'!"Change Set:		logStartup-swDate:			10 February 1999Author:			Scott WallaceLogs system startup to disk, but defers the actual writing until the first time anything else has reason to get logged.  Anything between two successive STARTUP logs (without intervening SNAPSHOT or QUIT) was not done in the current image.This improvement makes it possible for the tale of the change-log to be completely unambiguous about which items were done in the current image and which were not."!!SystemDictionary methodsFor: 'sources, change log' stamp: 'sw 2/5/1999 20:01'!logChange: aStringOrText 	"Write the argument, aString, onto the changes file."	| aString startupStamp changesFile |	(SourceFiles isNil or: [(SourceFiles at: 2) == nil]) ifTrue: [^ self].	startupStamp _ self at: #StartupStamp ifAbsent: [nil].	aStringOrText isText		ifTrue: [aString _ aStringOrText string]		ifFalse: [aString _ aStringOrText].	(aString isMemberOf: String)		ifFalse: [self error: 'cant log this change'].	(aString findFirst: [:char | char isSeparator not]) = 0		ifTrue: [^self].  "null doits confuse replay"	(changesFile _ SourceFiles at: 2) setToEnd; cr; cr.	startupStamp ifNotNil:		[changesFile nextChunkPut: startupStamp asString; cr.		self removeKey: #StartupStamp].	changesFile nextChunkPut: aString.		"If want style changes in DoIt, use nextChunkPutWithStyle:, and allow Texts to get here"	self forceChangesToDisk.! !!SystemDictionary methodsFor: 'snapshot and quit' stamp: 'sw 2/5/1999 19:38'!readDocumentFile	"Process system updates. Read a document file, if one was provided. Start application."	| fileName object |	Smalltalk at: #StartupStamp put: '----STARTUP----', Time dateAndTimeNow printString.	self processUpdates.	fileName _ Smalltalk getSystemAttribute: 2.	((fileName ~~ nil) and: [fileName size > 0])		ifTrue: [			(fileName asLowercase beginsWith: 'http://')				ifTrue: [					"fetch remote file"					HTTPSocket httpFileIn: fileName]				ifFalse: [					"read local file"					object _ (FileStream oldFileNamed: fileName) fileInObjectAndCode.					"if launching a .sqo document, send open to the final object"					(fileName endsWith: '.sqo') ifTrue: [object open]]]		ifFalse: [			(Preferences valueOfFlag: #startImagineeringStudio)				ifTrue: [ScriptingSystem openImagineeringStudio]].! !