'From Squeak 2.4c of May 10, 1999 on 18 July 1999 at 10:45:34 am'!"Change Set:		ReshapeClassesDate:			18 July 1999Author:			Dan IngallsRemoves the instVar, 'subclasses' from Metaclass	-- partly as a cleanup, 	-- and partly as an acid test of Andreas's new ClassBuilder."!!ClassDescription methodsFor: 'initialize-release' stamp: 'di 7/21/1999 11:05'!superclass: aClass methodDictionary: mDict format: fmt	"Basic initialization of the receiver"	super superclass: aClass methodDictionary: mDict format: fmt.	organization _ nil.	instanceVariables _ nil.! !!ClassDescription methodsFor: 'accessing class hierarchy' stamp: 'di 7/21/1999 11:05'!subclasses	^ Array new! !!DeepCopier methodsFor: 'like fullCopy' stamp: 'di 7/21/1999 11:18'!checkVariables	"Check that no indexed of inst vars have changed in certain classes.  If you get an error in this method, look at veryDeepCopyWith:, or tables in WeakFields and WeakFieldNames need to be updated.  	DeepCopier new checkVariables	"	| str str2 meth |	str _ '|veryDeepCopyWith: or veryDeepInner: is out of date.'.	Object instSize = 0 ifFalse: [self error: 'Many implementers of veryDeepCopyWith: are out of date'].	Morph superclass == Object ifFalse: [self error: 'Morph', str].	(Morph instVarNames copyFrom: 1 to: 6) = #('bounds' 'owner' 'submorphs' 			'fullBounds' 'color' 'extension') 		ifFalse: [self error: 'Morph', str].	"added ones are OK"	"Every class that implements veryDeepInner: must copy all its inst vars.  Danger is that a user will add a new instance variable and forget to copy it.  So check that the last one is mentioned in the copy method."	(Smalltalk allClassesImplementing: #veryDeepInner:) do: [:aClass | 		((aClass compiledMethodAt: #veryDeepInner:) writesField: aClass instSize) ifFalse: [			aClass instSize > 0 ifTrue: [				self warnIverNotCopiedIn: aClass sel: #veryDeepInner:]]].	(Smalltalk allClassesImplementing: #veryDeepCopyWith:) do: [:aClass | 		meth _ aClass compiledMethodAt: #veryDeepCopyWith:.		(meth size > 20) & (meth literals includes: #veryDeepCopyWith:) not ifTrue: [			(meth writesField: aClass instSize) ifFalse: [				self warnIverNotCopiedIn: aClass sel: #veryDeepCopyWith:]]].	str2 _ 'Player|copyUniClass and DeepCopier|mapUniClasses are out of date'.	Behavior instVarNames = #('superclass' 'methodDict' 'format' )		ifFalse: [self error: str2].	ClassDescription instVarNames = #('instanceVariables' 'organization' )		ifFalse: [self error: str2].	Class instVarNames = #('subclasses' 'name' 'classPool' 'sharedPools' )		ifFalse: [self error: str2].	Model superclass == Object ifFalse: [self error: str2].	Player superclass == Model ifFalse: [self error: str2].	Model class instVarNames = #() ifFalse: [self error: str2].	Player class instVarNames = #('scripts' 'slotInfo')		ifFalse: [self error: str2].! !"Postscript:Now do the work..."Utilities informUser: 'Recompiling all The metaclasses.This will take 5 minutes or so...'	during: [ClassBuilder new silentlyMoveInstVarNamed: 'subclasses'					from: ClassDescription to: Class after: nil]!