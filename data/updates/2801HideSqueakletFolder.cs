'From Squeak2.9BJ of 22 September 2000 [latest update: #2818] on 10 October 2000 at 4:06:31 pm'!"Change Set:		HideSqueakletFolderDate:			10 October 2000Author:			Andreas RaabHide the 'Squeaklets' folder in the default publishing mechanism. It's used as cache only and may be trashed so we better don't allow access to it too freely."!FileList subclass: #FileList2	instanceVariableNames: 'showDirsInFileList currentDirectorySelected fileSelectionBlock dirSelectionBlock optionalButtonSpecs modalView directoryChangeBlock '	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-FileList'!!FileDirectoryWrapper methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 16:02'!contents	^((model directoryNamesFor: itemName) sortBy: [ :a :b | a caseInsensitiveLessOrEqual: b]) collect: [ :n | 		FileDirectoryWrapper with: (item directoryNamed: n) name: n model: self	]! !!FileDirectoryWrapper methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 16:03'!directoryNamesFor: fullString	^model directoryNamesFor: itemName, FileDirectory slash, fullString! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 16:00'!dirSelectionBlock: aBlock	dirSelectionBlock _ aBlock! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 16:03'!directoryNamesFor: fullString	| entries |	entries _ (FileDirectory on: fullString) directoryNames.	dirSelectionBlock ifNotNil:[entries _ entries select: dirSelectionBlock].	^entries! !!FileList2 methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 15:57'!initialize	showDirsInFileList _ false.	fileSelectionBlock _ [ :entry :myPattern |		entry isDirectory ifTrue: [			showDirsInFileList		] ifFalse: [			myPattern = '*' or: [myPattern match: entry name]		]	] fixTemps.	dirSelectionBlock _ [ :dirName | true].! !!FileList2 class methodsFor: 'as yet unclassified' stamp: 'ar 10/10/2000 15:59'!hideSqueakletDirectoryBlock	^[:dirName| (dirName sameAs: 'Squeaklets') not]! !!FileList2 class methodsFor: 'blue ui' stamp: 'ar 10/10/2000 15:58'!morphicViewProjectLoader2InWorld: aWorld reallyLoad: aBoolean	| window aFileList buttons treePane textColor1 fileListPane pane2a pane2b |	window _ AlignmentMorphBob1 newColumn.	textColor1 _ Color r: 0.742 g: 0.839 b: 1.0.	aFileList _ self new directory: FileDirectory default.	aFileList 		optionalButtonSpecs: self specsForProjectLoader;		fileSelectionBlock: self projectOnlySelectionBlock;		dirSelectionBlock: self hideSqueakletDirectoryBlock;		modalView: window.	window		setProperty: #FileList toValue: aFileList;		centering: #center;		borderWidth: 4;		borderColor: (Color r: 0.355 g: 0.516 b: 1.0);		useRoundedCorners.	buttons _ #('OK' 'Cancel') collect: [ :each |		self blueButtonText: each textColor: textColor1 inWindow: window	].	treePane _ aFileList morphicDirectoryTreePane 		extent: 250@300; 		retractable: false;		borderWidth: 0.	fileListPane _ aFileList morphicFileListPane 		extent: 350@300; 		retractable: false;		borderWidth: 0.	window		addARow: {			window fancyText: 'Load A Project' ofSize: 21 color: textColor1		};		addARowCentered: {			buttons first. 			(Morph new extent: 30@5) color: Color transparent. 			buttons second		};		addARow: {			window fancyText: 'Please select a project' ofSize: 21 color: Color blue		};		addARow: {			(window inAColumn: {(pane2a _ window inARow: {window inAColumn: {treePane}}) 				useRoundedCorners; inset: 6}) inset: 10.			(window inAColumn: {(pane2b _ window inARow: {window inAColumn: {fileListPane}}) 				useRoundedCorners; inset: 6}) inset: 10.		}.	window fullBounds.	window fillWithRamp: self blueRamp1 oriented: 0.65.	pane2a fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	pane2b fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	buttons do: [ :each |		each fillWithRamp: self blueRamp2 oriented: (0.75 @ 0).	].	buttons first 		on: #mouseUp 		send: (aBoolean ifTrue: [#okHitForProjectLoader] ifFalse: [#okHit])		to: aFileList.	buttons second on: #mouseUp send: #cancelHit to: aFileList.	aFileList postOpen.	window position: aWorld topLeft + (aWorld extent - window extent // 2).	^ window openInWorld: aWorld.! !!FileList2 class methodsFor: 'blue ui' stamp: 'ar 10/10/2000 15:58'!morphicViewProjectSaverFor: aProject"(FileList2 morphicViewProjectSaverFor: Project current) openInWorld"	| window aFileList buttons treePane pane2 textColor1 |	textColor1 _ Color r: 0.742 g: 0.839 b: 1.0.	aFileList _ self new directory: FileDirectory default.	aFileList dirSelectionBlock: self hideSqueakletDirectoryBlock.	window _ AlignmentMorphBob1 newColumn.	aFileList modalView: window.	window		setProperty: #FileList toValue: aFileList;		centering: #center;		borderWidth: 4;		borderColor: (Color r: 0.355 g: 0.516 b: 1.0);		useRoundedCorners.	buttons _ #( ('OK' okHit) ('Cancel' cancelHit) ) collect: [ :each |		(self blueButtonText: each first textColor: textColor1 inWindow: window)			on: #mouseUp send: each second to: aFileList	].	treePane _ aFileList morphicDirectoryTreePane 		extent: 350@300; 		retractable: false;		borderWidth: 0.	window		addARowCentered: {			window fancyText: 'Publish This Project' ofSize: 21 color: textColor1		};		addARowCentered: {			buttons first. 			(Morph new extent: 30@5) color: Color transparent. 			buttons second		};		addARowCentered: { (window inAColumn: {(ProjectViewMorph on: aProject) lock}) inset: 4};		addARowCentered: {			window fancyText: 'Please select a folder' ofSize: 21 color: Color blue		};		addARow: {			(				window inAColumn: {					(pane2 _ window inARow: {window inAColumn: {treePane}}) 						useRoundedCorners; inset: 6				}			) inset: 10		}.	window fullBounds.	window fillWithRamp: self blueRamp1 oriented: 0.65.	pane2 fillWithRamp: self blueRamp3 oriented: (0.7 @ 0.35).	buttons do: [ :each |		each fillWithRamp: self blueRamp2 oriented: (0.75 @ 0).	].	window setProperty: #morphicLayerNumber toValue: 11.	aFileList postOpen.	^ window ! !