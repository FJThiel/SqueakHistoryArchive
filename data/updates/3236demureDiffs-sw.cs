'From Squeak2.9alpha of 5 August 2000 [latest update: #3296] on 24 January 2001 at 10:38:32 pm'!"Change Set:		demureDiffs-swDate:			24 January 2001Author:			Scott WallaceProtects the mapping of cmd-d (when issued over a class-list or selector-list-pane in a browser or other code-bearing tool) to the toggling of whether or not to show diffs in that windoow's code pane by a new preference, #diffsToggledByCmdD, which defaults to false."!!StringHolder methodsFor: 'message list menu' stamp: 'sw 1/24/2001 20:43'!messageListKey: aChar from: view	"Respond to a Command key.  I am a model with a code pane, and I also	have a listView that has a list of methods.  The view knows how to get	the list and selection."	| sel class |	(aChar == $d and: [Preferences diffsToggledByCmdD]) ifTrue: [^ self toggleDiffing].	(class _ self selectedClassOrMetaClass) ifNil: [^ self arrowKey: aChar from: view].	sel _ self selectedMessageName.	aChar == $b ifTrue: [^ Browser fullOnClass: class selector: sel].	aChar == $N ifTrue: [^ self browseClassRefs].	aChar == $i ifTrue: [^ self methodHierarchy].	aChar == $h ifTrue: [^ self classHierarchy].	aChar == $p ifTrue: [^ self browseFullProtocol].	sel ifNotNil: 		[aChar == $m ifTrue: [^ Smalltalk browseAllImplementorsOf: sel].		aChar == $n ifTrue: [^ Smalltalk browseAllCallsOn: sel].		aChar == $v ifTrue: [^ self browseVersions].		aChar == $O ifTrue: [^ self openSingleMessageBrowser].		aChar == $x ifTrue: [^ self removeMessage]].	^ self arrowKey: aChar from: view! !!StringHolder methodsFor: 'as yet unclassified' stamp: 'sw 1/24/2001 20:58'!addDiffingToggleItemTo: aMenu	"Add an item to aMenu that governs the toggling of diffing.  This obeys a preference"	Preferences diffsToggledByCmdD		ifTrue:			[aMenu addList:				#(('toggle diffing (d)'	toggleDiffing))]		ifFalse:			[aMenu addList:				#(('toggle diffing'		toggleDiffing))]! !!Browser methodsFor: 'message functions' stamp: 'sw 1/24/2001 20:49'!shiftedMessageListMenu: aMenu	"Fill aMenu with the items appropriate when the shift key is held down"	aMenu addList: #(		('method pane' 							makeIsolatedCodePane)		"('make a scriptor'						makeScriptor)").	self addDiffingToggleItemTo: aMenu.	aMenu addList: #(		('implementors of sent messages'			browseAllMessages)		-		('spawn sub-protocol'					spawnProtocol)		('spawn full protocol'					spawnFullProtocol)		-		('sample instance'						makeSampleInstance)		('inspect instances'						inspectInstances)		('inspect subinstances'					inspectSubInstances)).	self addExtraShiftedItemsTo: aMenu.	aMenu addList: #(		-		('change category...'					changeCategory)		-		('change sets with this method'			findMethodInChangeSets)		('revert to previous version'				revertToPreviousVersion)		('remove from current change set'		removeFromCurrentChanges)		('revert & remove from changes'		revertAndForget)		('add to current change set'				adoptMessageInCurrentChangeset)		-		('fetch documentation'					fetchDocPane)		('more...' 								unshiftedYellowButtonActivity)).	^ aMenu! !!ChangeList methodsFor: 'menu actions' stamp: 'sw 1/24/2001 20:50'!changeListMenu: aMenu	"Fill aMenu up so that it comprises the primary changelist-browser menu"	aMenu addTitle: 'change list'.	Smalltalk isMorphic ifTrue: [aMenu addStayUpItemSpecial].	aMenu addList: #(	('fileIn selections'							fileInSelections)	('fileOut selections...	'						fileOutSelections)	-	('compare to current'						compareToCurrentVersion)).	self addDiffingToggleItemTo: aMenu.	aMenu addList: #(		-	('select conflicts with any changeset'		selectAllConflicts)	('select conflicts with current changeset'	selectConflicts)	-	('select conflicts with...'						selectConflictsWith)	('select unchanged methods'					selectUnchangedMethods)	('select methods for this class'				selectMethodsForThisClass)	-	('select all (a)'								selectAll)	('deselect all'								deselectAll)	-	('browse current versions of selections'		browseCurrentVersionsOfSelections)	('remove current methods of selections'		destroyCurrentCodeOfSelections)	-	('remove doIts'								removeDoIts)	('remove older versions'						removeOlderMethodVersions)	('remove selected items'						removeSelections)	('remove unselected items'					removeNonSelections)).	^ aMenu! !!ChangeSorter methodsFor: 'message list' stamp: 'sw 1/24/2001 20:50'!shiftedMessageMenu: aMenu	"Arm the menu so that it holds items appropriate to the message-list while the shift key is down.  Answer the menu."	aMenu addList: #(		-		('method pane'						makeIsolatedCodePane)).	self addDiffingToggleItemTo: aMenu.	aMenu addList: #(		('implementors of sent messages'		browseAllMessages)		('change category...'				changeCategory)			-		('sample instance'					makeSampleInstance)		('inspect instances'					inspectInstances)		('inspect subinstances'				inspectSubInstances)		-		('change sets with this method'		findMethodInChangeSets)		('revert to previous version'			revertToPreviousVersion)		('revert & remove from changes'	revertAndForget)		-		('more...'							unshiftedYellowButtonActivity)).	^ aMenu! !!VersionsBrowser methodsFor: 'menu' stamp: 'sw 1/24/2001 20:44'!versionsHelpString	^ 'Each entry in the list pane represents a version of the source code for the same method; the topmost entry is the current version, the next entry is the next most recent, etc.To revert to an earlier version, select it (in the list pane) and then do any of the following:  *  Choose "revert to this version" from the list pane menu.  *  Hit the "revert" button,  *  Type ENTER in the code pane  *  Type cmd-s (alt-s) in the code pane.The code pane shows the source for the selected version.  If "diffing" is in effect, then differences betwen the selected version and the version before it are pointed out in the pane.  Turn diffing on and off by choosing "toggle diffing" from the list pane menu, or hitting the "diffs" button, or hitting cmd-d when the cursor is over the list pane (provided the preference "diffsToggledByCmdD" is true.)To get a comparison between the selected version and the current version, choose "compare to current" from the list pane menu or hit the "compare to current" button.  (This is meaningless if the current version is selected, and is unnecessary if you''re interested in diffs from between the current version and the next-most-recent version, since the standard in-pane "diff" feature will give you that.)If further versions of the method in question have been submitted elsewhere since you launched a particular Versions Browser, it will still stay nicely up-to-date if you''re in Morphic and have asked that smart updating be maintained; if you''re in mvc or in morphic but with smart-updating turned off, a versions browser is only brought up to date when you activate its window (and when you issue "revert" from within it, of course,) and you can also use the "update list" command to make certain the versions list is up to date.Hit the "remove from changes" button, or choose the corresponding command in the list pane menu, to have the method in question deleted from the current change set.  This is useful if you''ve put debugging code into a method, and now want to strip it out and cleanse your current change set of all memory of the excursion.Note:  the annotation pane in versions browsers shows information about the *current* version of the method in the image, not about the selected version.'! !"Postscript:"Preferences addPreference:  #diffsToggledByCmdD category: #browsing default: false balloonHelp: 'Governs whether the issuing of cmd-d (alt-d) over a selector-list pane will toggle the show-diffs/hide-diffs setting of a browser or other code-bearing tool'.!