'From Squeak2.9alpha of 13 June 2000 [latest update: #2857] on 10 October 2000 at 11:09:59 pm'!"Change Set:		MoreTweaks-arDate:			10 October 2000Author:			Andreas RaabFour more tweaks:#1: Make #mouseUp behavior consistent with the former behavior in which #mouseUp was only dispatched to the current mouse focus, and make menu items handle them anyways (very nice for popups).#2: Make wrap-around behavior of halos more robust (could leave to some spurious jumps otherwise).#3: Reactivate some old scroll pane code which I never understood but turns out to be important for the n-pixel inset pane (e.g., clicking *just* on the left or right pixel of a scroll pane leads to strange behavior otherwise).#4: Make EventSensor start up with an event queue if we come up running in morphic. We always do these days."!!EventSensor methodsFor: 'initialize' stamp: 'ar 10/10/2000 23:09'!startUp	"Run the I/O process"	self shutDown.	self initialize.	self primSetInputSemaphore: (Smalltalk registerExternalObject: inputSemaphore).	inputProcess _ [self ioProcess] forkAt: Processor lowIOPriority.	super startUp.	Smalltalk isMorphic ifTrue:[self eventQueue: SharedQueue new].! !!Morph methodsFor: 'events-processing' stamp: 'ar 10/10/2000 22:45'!handleMouseUp: anEvent	"System level event handling."	anEvent wasHandled ifTrue:[^self]. "not interested"	anEvent hand mouseFocus == self ifFalse:[^self]. "Not interested in other parties"	anEvent hand releaseMouseFocus: self.	anEvent wasHandled: true.	anEvent blueButtonChanged		ifTrue:[self blueButtonUp: anEvent]		ifFalse:[self mouseUp: anEvent].! !!Morph methodsFor: 'meta-actions' stamp: 'ar 10/10/2000 22:58'!blueButtonDown: anEvent	"Special gestures (cmd-mouse on the Macintosh; Alt-mouse on Windows and Unix) allow a mouse-sensitive morph to be moved or bring up a halo for the morph."	| h tfm doNotDrag |	h _ anEvent hand halo.	"Prevent wrap around halo transfers originating from throwing the event back in"	doNotDrag _ false.	h ifNotNil:[doNotDrag _ ((h innerTarget hasOwner: self) or:[self hasOwner: h target])].	h _ self addHalo: anEvent.	doNotDrag ifTrue:[^self].	"Initiate drag transition if requested"	tfm _ (self transformedFrom: nil) inverseTransformation.	anEvent hand 		waitForClicksOrDrag: h		event: (anEvent transformedBy: tfm)		selectors: { nil. nil. #dragTarget:. }		threshold: 5.	"Pass focus explicitly here"	anEvent hand newMouseFocus: h.! !!MenuItemMorph methodsFor: 'events' stamp: 'ar 10/10/2000 22:45'!handleMouseUp: anEvent	"The handling of control between menu item requires them to act on mouse up even if not the current focus. This is different from the default behavior which really only wants to handle mouse ups when they got mouse downs before"	anEvent wasHandled ifTrue:[^self]. "not interested"	anEvent hand releaseMouseFocus: self.	anEvent wasHandled: true.	anEvent blueButtonChanged		ifTrue:[self blueButtonUp: anEvent]		ifFalse:[self mouseUp: anEvent].! !!ScrollPane methodsFor: 'pane events' stamp: 'ar 10/10/2000 23:01'!mouseMove: evt	"If pane is not full, pass the event to the last submorph,	assuming it is the most appropriate recipient (!!)."	scroller hasSubmorphs ifTrue:		[scroller submorphs last mouseMove: (evt transformedBy: (scroller transformFrom: self))]! !