'From Squeak 2.4c of May 10, 1999 on 1 July 1999 at 11:40:51 pm'!"Change Set:		postscriptChg-swDate:			1 July 1999Author:			Scott WallaceIf a changeSet currently has no postscript, the change sorter will now reflect that fact by offering only an 'add postscript' item in menu. Thus, you need no longer create a vacuous postscript just to find if there already is one!!If a changeSet *does* currently have a postscript, the change sorter will offer options to edit that postscript (as before) or to delete it (this is new).Tries to deal intelligently with cases where there are already windows open on a changeset's postscript.Also: adds a title to the change-set menu so that you can know for sure which change-set the menu refers to.  Useful because the menu can often obscure the list of changesets."!!ChangeSet methodsFor: 'accessing' stamp: 'sw 7/1/1999 22:14'!editPostscript	"edit the receiver's postscript, in a separate window.  "	| deps found |	self assurePostscriptExists.	deps _ postscript dependents select:		[:m | (m isKindOf: SystemWindow) or:			[m isKindOf: StandardSystemView]].	deps size > 0 ifTrue:		[Smalltalk isMorphic			ifTrue:				[found _ deps detect: [:obj | (obj isKindOf: SystemWindow) and: [obj world == self currentWorld]] ifNone: [nil].				found ifNotNil:  [^ found activate]]			ifFalse:				[found _ deps detect: [:obj | (obj isKindOf: StandardSystemView) and: [ScheduledControllers scheduledControllers includes: obj controller]] ifNone: [nil].				found ifNotNil: [^ ScheduledControllers activateController: found controller]]..		self inform:'Caution -- there', (deps size isOrAreStringWith: 'other window'), 'already open on this postscript elsewhere'].	postscript openLabel: 'Postscript for ChangeSet named ', name! !!ChangeSet methodsFor: 'accessing' stamp: 'sw 6/29/1999 14:44'!hasPostscript	^ postscript notNil! !!ChangeSet methodsFor: 'accessing' stamp: 'sw 6/29/1999 20:51'!postscriptHasDependents	^ postscript dependents size > 0! !!ChangeSet methodsFor: 'accessing' stamp: 'sw 6/29/1999 14:48'!removePostscript	postscript _ nil! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 7/1/1999 22:22'!changeSetMenu: aMenu shifted: isShifted	"Could be for a single or double changeSorter"	aMenu title: 'Change Set:', myChangeSet name.	isShifted ifTrue:		[^ self shiftedChangeSetMenu: aMenu].	aMenu add: 'make changes go to me' action: #newCurrent.	aMenu addLine.	aMenu add: 'new change set...' action: #newSet.	aMenu add: 'find...' action: #findCngSet.	aMenu add: 'show...' action: #chooseCngSet.	aMenu add: 'rename change set' action: #rename.	aMenu addLine.	aMenu add: 'file out' action: #fileOut.	aMenu add: 'browse methods' action: #browseChangeSet.	aMenu addLine.	parent ifNotNil:		[aMenu add: 'copy all to other side' action: #copyAllToOther.		aMenu add: 'submerge into other side' action: #submergeIntoOtherSide.		aMenu add: 'subtract other side' action: #subtractOtherSide.		aMenu addLine].	myChangeSet hasPreamble		ifTrue:			[aMenu add: 'edit preamble' action: #addPreamble.			aMenu add: 'remove preamble' action: #removePreamble]		ifFalse:			[aMenu add: 'add preamble' action: #addPreamble].	"aMenu add: 'edit preamble...' action: #editPreamble."	myChangeSet hasPostscript		ifTrue:			[aMenu add: 'edit postscript...' action: #editPostscript.			aMenu add: 'remove postscript' action: #removePostscript]		ifFalse:			[aMenu add: 'add postscript...' action: #editPostscript].	aMenu addLine.		aMenu add: 'destroy change set' action: #remove.	aMenu addLine.	aMenu add: 'more...' action: #shiftedYellowButtonActivity.	^ aMenu! !!ChangeSorter methodsFor: 'changeSet menu' stamp: 'sw 6/29/1999 20:53'!removePostscript	(myChangeSet hasPostscript and: [myChangeSet postscriptHasDependents]) ifTrue:		[^ self inform:'Cannot remove the postscript rightnow because there is at least onewindow open on that postscript.Close that window and try again.'].	myChangeSet removePostscript.	self showChangeSet: myChangeSet! !!MenuMorph methodsFor: 'construction' stamp: 'sw 7/1/1999 22:21'!title: aString	"Add a title line at the top of this menu."	self addTitle: aString! !!Number methodsFor: 'printing' stamp: 'sw 6/29/1999 21:10'!isOrAreStringWith: aNoun	| result |	result _ self = 1		ifTrue:			[' is one ']		ifFalse:			[self = 0				ifTrue:					[' are no ']				ifFalse:					[' are ', self printString, ' ']].	result _ result, aNoun.	self = 1 ifFalse: [result _ result, 's'].	^ result"#(0 1 2 98.6) do:	[:num | Transcript cr; show: 'There', (num isOrAreStringWith: 'way'), ' to skin a cat']"! !