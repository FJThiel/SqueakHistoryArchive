'From Squeak2.9alpha of 5 August 2000 [latest update: #3367] on 1 February 2001 at 11:26:26 pm'!"Change Set:		allScriptsToolTick-swDate:			31 January 2001Author:			Scott WallaceSets the all-scripts-status tool to ticking at a leisurely pace."!!AllScriptsTool methodsFor: 'stepping' stamp: 'sw 1/31/2001 23:12'!stepTime	"Answer the interval between steps -- in this case a leisurely 4 seconds"	^ 4000! !!AllScriptsTool methodsFor: 'stepping' stamp: 'sw 1/31/2001 23:12'!wantsSteps	"Answer whether the receiver wishes to receive the #step message"	 ^ true! !!Presenter methodsFor: 'playerList' stamp: 'sw 1/31/2001 23:11'!updateContentsFor: aStatusViewer 	"Rebuild the contents of the script-statusViewing tool"	| showingOnlyActiveScripts candidateList firstTwo |	showingOnlyActiveScripts _ aStatusViewer showingOnlyActiveScripts.	self flushPlayerListCache.	firstTwo  _ {aStatusViewer submorphs first.  aStatusViewer submorphs second}.	aStatusViewer removeAllMorphs; addAllMorphs: firstTwo.		candidateList _ self allExtantPlayers.	aStatusViewer showingAllInstances "take all instances of all classes"		ifTrue:			[candidateList _ self allExtantPlayers]  		ifFalse:  "include only one exemplar per uniclass.  Try to get one that has some qualifying scripts"			[candidateList _ Set new.			self allExtantPlayers do:				[:aPlayer |					(candidateList detect: [:plyr | plyr isMemberOf:  aPlayer class] ifNone: [nil]) ifNil:						[aPlayer instantiatedUserScriptsDo: [:aScriptInstantiation |							(showingOnlyActiveScripts not or: [#(paused ticking) includes: aScriptInstantiation status]) 								ifTrue:									[candidateList add: aPlayer]]]]].	candidateList do:		[:aPlayer | aPlayer instantiatedUserScriptsDo:			[:aScriptInstantiation |				(showingOnlyActiveScripts not or: [#(paused ticking) includes: aScriptInstantiation status]) ifTrue:					[aStatusViewer addMorphBack: (aScriptInstantiation statusControlRowIn: aStatusViewer)]]].! !