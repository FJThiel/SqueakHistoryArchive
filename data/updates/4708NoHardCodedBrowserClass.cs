'From Squeak3.2alpha of 1 November 2001 [latest update: #4599] on 5 January 2002 at 9:14:59 pm'!"Change Set:		Browser-NoHardCodedBrowserClassReferenceDate:			5 January 2002Author:			stephane ducasseReady for 4599This changeset changes all the Browser hardcoded reference in the Browser class methods into self and for the  instance methods into self class . This way subclasses can work!!!!!!"!!Browser methodsFor: 'message category functions' stamp: 'sd 1/5/2002 21:11'!buildMessageCategoryBrowserEditString: aString 	"Create and schedule a message category browser for the currently 	selected	 message category. The initial text view contains the characters 	in aString."	"wod 6/24/1998: set newBrowser classListIndex so that it works whether the	receiver is a standard or a Hierarchy Browser."	| newBrowser |	messageCategoryListIndex ~= 0		ifTrue: 			[newBrowser _ self class new.			newBrowser systemCategoryListIndex: systemCategoryListIndex.			newBrowser classListIndex: (newBrowser classList indexOf: self selectedClassName).			newBrowser metaClassIndicated: metaClassIndicated.			newBrowser messageCategoryListIndex: messageCategoryListIndex.			newBrowser messageListIndex: messageListIndex.			self class openBrowserView: (newBrowser openMessageCatEditString: aString)				label: 'Message Category Browser (' , 						newBrowser selectedClassOrMetaClassName , ')']! !!Browser methodsFor: 'message functions' stamp: 'sd 1/5/2002 21:11'!buildMessageBrowserEditString: aString 	"Create and schedule a message browser for the receiver in which the 	argument, aString, contains characters to be edited in the text view."	messageListIndex = 0 ifTrue: [^ self].	^ self class openMessageBrowserForClass: self selectedClassOrMetaClass 		selector: self selectedMessageName editString: aString! !!Browser methodsFor: 'system category functions' stamp: 'sd 1/5/2002 21:11'!browseAllClasses	"Create and schedule a new browser on all classes alphabetically."	| newBrowser |	newBrowser _ HierarchyBrowser new initAlphabeticListing.	self class openBrowserView: (newBrowser openSystemCatEditString: nil)		label: 'All Classes Alphabetically'! !!Browser methodsFor: 'system category functions' stamp: 'sd 1/5/2002 21:12'!buildSystemCategoryBrowserEditString: aString 	"Create and schedule a new system category browser with initial textual 	contents set to aString."	| newBrowser |	systemCategoryListIndex > 0		ifTrue: 			[newBrowser _ self class new.			newBrowser systemCategoryListIndex: systemCategoryListIndex.			newBrowser setClass: self selectedClassOrMetaClass selector: self selectedMessageName.			self class openBrowserView: (newBrowser openSystemCatEditString: aString)				label: 'Classes in category ', newBrowser selectedSystemCategoryName]! !!Browser class methodsFor: 'instance creation' stamp: 'sd 1/5/2002 21:07'!fullOnClass: aClass 	"Open a new full browser set to class."	| brow |	brow _ self new.	brow setClass: aClass selector: nil.	Browser openBrowserView: (brow openEditString: nil)		label: 'System Browser'! !!Browser class methodsFor: 'instance creation' stamp: 'sd 1/5/2002 21:08'!newOnCategory: aCategory	"Browse the system category of the given name.  7/13/96 sw"	"Browser newOnCategory: 'Interface-Browser'"	| newBrowser catList |	newBrowser _ self new.	catList _ newBrowser systemCategoryList.	newBrowser systemCategoryListIndex: 		(catList indexOf: aCategory asSymbol ifAbsent: [^ self inform: 'No such category']).	self openBrowserView: (newBrowser openSystemCatEditString: nil)				label: 'Classes in category ', aCategory! !!Browser class methodsFor: 'instance creation' stamp: 'sd 1/5/2002 21:09'!newOnClass: aClass label: aLabel	"Open a new class browser on this class."	| newBrowser |	newBrowser _ self new.	newBrowser setClass: aClass selector: nil.	self openBrowserView: (newBrowser openOnClassWithEditString: nil)			label: aLabel! !!Browser class methodsFor: 'instance creation' stamp: 'sd 1/5/2002 21:09'!newOnClass: aClass selector: aSymbol	"Open a new class browser on this class."	| newBrowser |	newBrowser _ self new.	newBrowser setClass: aClass selector: aSymbol.	self openBrowserView: (newBrowser openOnClassWithEditString: nil)			label: 'Class Browser: ', aClass name! !!Browser class methodsFor: 'instance creation' stamp: 'sd 1/5/2002 21:10'!openMessageBrowserForClass: aBehavior selector: aSymbol editString: aString	"Create and schedule a message browser for the class, aBehavior, in 	which the argument, aString, contains characters to be edited in the text 	view. These characters are the source code for the message selector 	aSymbol."	| newBrowser |	(newBrowser _ self new) setClass: aBehavior selector: aSymbol.	^ self openBrowserView: (newBrowser openMessageEditString: aString)		label: newBrowser selectedClassOrMetaClassName , ' ' , newBrowser selectedMessageName! !