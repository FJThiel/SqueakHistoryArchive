'From Squeak2.9alpha of 5 August 2000 [latest update: #3265] on 14 January 2001 at 12:48:03 am'!"Change Set:		rename-swjgDate:			14 January 2001Author:			Scott Wallace & Joshua Channing GargusFixes an error (which was introduced in update ProjStore7) that occurred when trying to rename a morph that didn't have a player.Fixes another error that occured when trying to update a viewer open on a non-morph"!!Morph methodsFor: 'naming' stamp: 'sw 1/14/2001 00:20'!renameTo: aName	"Set Player name in costume.  Update Viewers.  Fix all tiles (old style).  fix References.  New tiles: recompile, and recreate open scripts.  If coming in from disk, and have name conflict, References will already have new name."	| aPresenter putInViewer aPasteUp renderer oldKey assoc classes oldName |	oldName _ self knownName.	(renderer _ self topRendererOrSelf) setNameTo: aName.	putInViewer _ false.	((aPresenter _ self presenter) isNil or: [renderer player isNil]) ifFalse:		[putInViewer _ aPresenter currentlyViewing: renderer player.		putInViewer ifTrue:			[renderer player viewerFlapTab hibernate]].  "empty it temporarily"	(aPasteUp _ self topPasteUp) ifNotNil:		[aPasteUp allTileScriptingElements do: [:m | m bringUpToDate]].	"Fix References dictionary.  See restoreReferences to know why oldKey is 		already aName, but oldName is the old name."	oldKey _ References keyAtIdentityValue: renderer player ifAbsent: [nil].	oldKey ifNotNil:		[assoc _ References associationAt: oldKey.		oldKey = aName ifFalse: ["normal rename"			assoc key: aName asSymbol.			References rehash]].	putInViewer ifTrue: [aPresenter viewMorph: self].	"recreate my viewer"	oldKey ifNil: [^ aName].	"Force strings in tiles to be remade with new name.  New tiles only."	(aPasteUp valueOfProperty: #universalTiles ifAbsent: [false]) ifFalse: [^ aName].	classes _ (Smalltalk allCallsOn: assoc) collect: [:classAndMethod | 		(classAndMethod findTokens: Character separators) first asSymbol].	(classes asSet) do: [:clsName |		(Smalltalk at: clsName) replaceSilently: oldName to: aName].		"replace in text body of all methods.  Can be wrong!!"	"Redo the tiles that are showing"	aPasteUp allTileScriptingElements do: [:mm | "just ScriptEditorMorphs"		(mm isKindOf: ScriptEditorMorph) ifTrue:			[((mm playerScripted class compiledMethodAt: mm scriptName) hasLiteral: assoc)				ifTrue: [mm hibernate; unhibernate]]].	^ aName! !!Presenter methodsFor: 'misc' stamp: 'sw 1/14/2001 00:22'!currentlyViewing: aPlayer	"Only detects viewers in tabs"	^ aPlayer notNil and: [aPlayer viewerFlapTab ~~ nil]! !!TileMorph methodsFor: 'initialization' stamp: 'sw 1/14/2001 00:47'!bringUpToDate	"Make certain, if the receiver is an object-reference tile, that it shows the current external name of the object, which may just have changed.  This only applies to the Player regime." 	| newLabel |		(type == #objRef and: [actualObject isKindOf: Player]) ifTrue:		[newLabel _ actualObject externalName.		self isPossessive ifTrue:			[newLabel _ newLabel, '''s'].		self line1: newLabel]! !