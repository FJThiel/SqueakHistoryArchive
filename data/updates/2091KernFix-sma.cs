'From Squeak2.8alpha of 4 February 2000 [latest update: #2052] on 6 May 2000 at 12:34:10 pm'!"Change Set:		041KernFix-smaDate:			7 May 2000Author:			Stefan Matthias AustI noticed that with kerned characters, the block selection didn't work anymore. This changes fixes it for MVC and morphic (one should unify the two methods some day)"!!CharacterBlockScanner methodsFor: 'scanning' stamp: 'sma 5/6/2000 12:29'!characterBlockAtPoint: aPoint index: index in: textLine	| runLength lineStop stopCondition |	line _ textLine.	characterIndex _ index.  " == nil means scanning for point"	characterPoint _ aPoint.	(characterPoint == nil or: [characterPoint y > line bottom])		ifTrue: [characterPoint _ line bottomRight].	(text isEmpty or: [(characterPoint y < line top or: [characterPoint x < line left])				or: [characterIndex ~~ nil and: [characterIndex < line first]]])		ifTrue:	[^ (CharacterBlock new stringIndex: line first text: text					topLeft: line leftMargin@line top extent: 0 @ textStyle lineGrid)					textLine: line].	rightMargin _ line rightMargin.	destX _ leftMargin _ line leftMarginForAlignment: textStyle alignment.	destY _ line top.	lastIndex _ line first.	self setStopConditions.		"also sets font"	self adjustForIndentationLevel.	runLength _ text runLengthFor: line first.	characterIndex ~~ nil		ifTrue:	[lineStop _ characterIndex  "scanning for index"]		ifFalse:	[lineStop _ line last  "scanning for point"].	runStopIndex _ lastIndex + (runLength - 1) min: lineStop.	lastCharacterExtent _ 0 @ line lineHeight.	spaceCount _ 0.	[true] whileTrue:		[stopCondition _ self scanCharactersFrom: lastIndex to: runStopIndex			in: text string rightX: characterPoint x			stopConditions: stopConditions kern: kern displaying: false.		"see setStopConditions for stopping conditions for character block 	operations."		self lastCharacterExtentSetX: (specialWidth == nil			ifTrue: [font widthOf: (text at: lastIndex)]			ifFalse: [specialWidth]).		(self perform: stopCondition) ifTrue:			[^ (characterIndex				ifNil: [CharacterBlock new					stringIndex: lastIndex 					text: text 					topLeft: characterPoint 					extent: lastCharacterExtent]				ifNotNil: [CharacterBlock new 					stringIndex: lastIndex 					text: text 					topLeft: characterPoint - (kern @ 0)					extent: lastCharacterExtent]) textLine: line]]! !!CharacterBlockScanner methodsFor: 'private' stamp: 'sma 5/6/2000 11:54'!buildCharacterBlockIn: para	| lineIndex runLength lineStop done stopCondition |	"handle nullText"	(para numberOfLines = 0 or: [text size = 0])		ifTrue:	[^ CharacterBlock new stringIndex: 1  "like being off end of string"					text: para text					topLeft: (para leftMarginForDisplayForLine: 1)								@ para compositionRectangle top					extent: 0 @ textStyle lineGrid].	"find the line"	lineIndex _ para lineIndexOfTop: characterPoint y.	destY _ para topAtLineIndex: lineIndex.	line _ para lines at: lineIndex.	rightMargin _ para rightMarginForDisplay.	(lineIndex = para numberOfLines and:		[(destY + line lineHeight) < characterPoint y])			ifTrue:	["if beyond lastLine, force search to last character"					self characterPointSetX: rightMargin]			ifFalse:	[characterPoint y < (para compositionRectangle) top						ifTrue: ["force search to first line"								characterPoint _ (para compositionRectangle) topLeft].					characterPoint x > rightMargin						ifTrue:	[self characterPointSetX: rightMargin]].	destX _ leftMargin _ para leftMarginForDisplayForLine: lineIndex.	nextLeftMargin_ para leftMarginForDisplayForLine: lineIndex+1.	lastIndex _ line first.	self setStopConditions.		"also sets font"	self adjustForIndentationLevel.	runLength _ (text runLengthFor: line first).	characterIndex ~~ nil		ifTrue:	[lineStop _ characterIndex	"scanning for index"]		ifFalse:	[lineStop _ line last].	(runStopIndex _ lastIndex + (runLength - 1)) > lineStop		ifTrue:	[runStopIndex _ lineStop].	lastCharacterExtent _ 0 @ line lineHeight.	spaceCount _ 0. done  _ false.	[done]	whileFalse:	[stopCondition _ self scanCharactersFrom: lastIndex to: runStopIndex			in: text string rightX: characterPoint x			stopConditions: stopConditions kern: kern displaying: false.	"see setStopConditions for stopping conditions for character block 	operations."	self lastCharacterExtentSetX: (font widthOf: (text at: lastIndex)).	(self perform: stopCondition)		ifTrue:	[^ CharacterBlock new stringIndex: lastIndex text: text					topLeft: characterPoint - (kern @ 0) extent: lastCharacterExtent]]! !