'From Squeak2.8alpha of 13 January 2000 [latest update: #2076] on 8 May 2000 at 2:46:38 pm'!"Change Set:		hierarchy-swDate:			8 May 2000Author:			Scott WallaceFixes HierarchyBrowser so that it reformulates the hierarchy list when a class has been added or deleted.Adds an 'explore' item to the control- and halo-debug menus of morphs."!Browser subclass: #HierarchyBrowser	instanceVariableNames: 'classList centralClass '	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-Browser'!!Object methodsFor: 'user interface' stamp: 'sw 5/8/2000 01:59'!browseHierarchy	^ HierarchyBrowser newFor: self class"(2@7) browseHierarchy"! !!HierarchyBrowser methodsFor: 'initialization' stamp: 'sw 5/8/2000 01:28'!changed: sym	sym == #classList ifTrue: [self updateAfterClassChange].	super changed: sym! !!HierarchyBrowser methodsFor: 'initialization' stamp: 'sw 5/8/2000 01:02'!initHierarchyForClass: aClassOrMetaClass	| tab stab index nonMetaClass |	centralClass _ aClassOrMetaClass.	nonMetaClass _ aClassOrMetaClass theNonMetaClass.	self systemOrganizer: SystemOrganization.	metaClassIndicated _ aClassOrMetaClass isMeta.	classList _ OrderedCollection new.	tab _ ''.	nonMetaClass allSuperclasses reverseDo: 		[:aClass | 		classList add: tab , aClass name.		tab _ tab , '  '].	index _ classList size + 1.	nonMetaClass allSubclassesWithLevelDo:		[:aClass :level |		stab _ ''.  1 to: level do: [:i | stab _ stab , '  '].		classList add: tab , stab , aClass name]	 	startingLevel: 0.	self classListIndex: index! !!HierarchyBrowser methodsFor: 'initialization' stamp: 'sw 5/8/2000 01:04'!updateAfterClassChange	"It is possible that some the classes comprising the hierarchy have changed, so reinitialize the entire browser."	centralClass ifNotNil:		[self initHierarchyForClass: centralClass]! !!HierarchyBrowser class methodsFor: 'as yet unclassified' stamp: 'sw 5/8/2000 02:10'!newFor: aClass	"Open a new HierarchyBrowser on the given class"	|  newBrowser |	newBrowser _ HierarchyBrowser new initHierarchyForClass: aClass.	Browser openBrowserView: (newBrowser openSystemCatEditString: nil)		label: aClass theNonMetaClass name, ' hierarchy'"HierarchyBrowser newFor: Boolean"! !!Morph methodsFor: 'debug and other' stamp: 'sw 5/8/2000 02:03'!debuggingMenuFor: aHandMorph	| aMenu aPlayer |	aMenu _ MenuMorph new defaultTarget: self.	(self hasProperty: #errorOnDraw) ifTrue:		[aMenu add: 'start drawing again' action: #resumeAfterDrawError.		aMenu addLine].	(self hasProperty: #errorOnStep) ifTrue:		[aMenu add: 'start stepping again' action: #resumeAfterStepError.		aMenu addLine].	aMenu add: 'control-menu...' target: aHandMorph selector: #invokeMetaMenuFor: argument: self.	aMenu add: 'inspect morph' action: #inspectInMorphic.	Smalltalk isMorphic ifFalse:		[aMenu add: 'inspect morph (in MVC)' action: #inspect].     aMenu add: 'explore morph' target: self selector: #explore.	aMenu add: 'browse morph class' target: self selector: #browseHierarchy.	(aPlayer _ self player) ifNotNil:		[aMenu add: 'inspect player' target: aPlayer action: #inspect.		World ifNil: [aMenu add: 'inspect player (morphic)' action: #inspectArgumentsPlayerInMorphic].		aMenu add: 'browse player class' target: aPlayer action: #inspect].	aMenu add: 'make own subclass' target: aHandMorph action: #subclassMorph.	aMenu add: 'internal name ' action: #choosePartName.	aMenu add: 'save morph in file'  action: #saveOnFile.	aMenu addLine.	aMenu add: 'call #tempCommand' target: aHandMorph action: #callTempCommand.	aMenu add: 'define #tempCommand' target: aHandMorph action: #defineTempCommand.	aMenu addLine.	aMenu add: 'edit balloon help' action: #editBalloonHelpText.	^ aMenu! !!HandMorph methodsFor: 'world menu commands' stamp: 'sw 5/8/2000 14:38'!buildMorphMenuFor: argMorph	"Build the morph menu. This menu has two sections. The first section contains commands that are handled by the hand; the second contains commands handled by the argument morph."	| menu |	argument _ argMorph.	menu _ MenuMorph new defaultTarget: self.	menu addStayUpItem.	menu add: 'grab' action: #grabMorph.	menu add: 'delete' action: #dismissMorph.	menu addLine.	menu add: 'copy to paste buffer' action: #copyToPasteBuffer.	menu add: 'copy Postscript' target: argMorph action: #clipPostscript.	menu add: 'print PS to file...' target: argMorph action: #printPSToFile.	menu addLine.	menu add: 'go behind' action: #goBehind.	menu add: 'add halo' action: #addHalo.	menu add: 'duplicate' action: #maybeDuplicateMorph.	self potentialEmbeddingTargets size > 1 ifTrue:		[menu add: 'embed...' action: #placeArgumentIn].	menu add: 'resize' action: #resizeMorph.	"Give the argument control over what should be done about fill styles"	argMorph addFillStyleMenuItems: menu hand: self.	(argMorph morphsAt: targetOffset) size > 1 ifTrue:		[menu add: 'submorphs...'			target: self			selector: #selectSubmorphToOperateOn:sending:event:			argumentList: (Array with: argMorph with: #operateOnSubmorph:event:)].	menu addLine.	World ifNil:		[menu add: 'inspect (in MVC)' action: #inspectMorph.		menu add: 'inspect' action: #inspectMorphInMorphic]		ifNotNil:		[menu add: 'inspect' action: #inspectMorph].	menu add: 'explore' target: argument action: #explore.	menu add: 'browse hierarchy' target: argument action: #browseHierarchy.	menu add: 'make own subclass' action: #subclassMorph.	menu addLine.	menu add: 'set variable name...' action: #nameMorph.	(argMorph isKindOf: MorphicModel) ifTrue:		[menu add: 'save morph as prototype' action: #saveAsPrototype.		(argMorph ~~ self world modelOrNil) ifTrue:			 [menu add: 'become this world''s model' action: #beThisWorldsModel]].	menu add: 'save morph in file' action: #saveOnFile.	(argMorph hasProperty: #resourceFilePath)		ifTrue: [((argMorph valueOfProperty: #resourceFilePath) endsWith: '.morph')				ifTrue: [menu add: 'save as resource' target: argMorph action: #saveAsResource].				menu add: 'update from resource' target: argMorph action: #updateFromResource]		ifFalse: [menu add: 'attach to resource' target: argMorph action: #attachToResource].	menu add: 'show actions' action: #showActions.	menu addLine.	menu defaultTarget: argMorph.	argMorph addCustomMenuItems: menu hand: self.	^ menu! !HandMorph removeSelector: #browseMorphClass!HandMorph removeSelector: #browseMorphClassFor:!HierarchyBrowser removeSelector: #initForClassList:!HierarchyBrowser removeSelector: #initHierarchyForClass:meta:!