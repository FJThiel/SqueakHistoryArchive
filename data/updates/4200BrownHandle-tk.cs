'From Squeak3.1alpha of 28 February 2001 [latest update: #4193] on 14 July 2001 at 11:15:05 am'!"Change Set:		BrownHandle-tkDate:			14 July 2001Author:			Ted KaehlerWhen dragging with the Brown handle, allow the object to be partially outside the owner.  Can move out until just two pixels are showing."!!Morph methodsFor: 'geometry' stamp: 'tk 7/14/2001 11:11'!setConstrainedPosition: aPoint hangOut: partiallyOutside	"Change the position of this morph and and all of its submorphs to aPoint, but don't let me go outside my owner's bounds.  Let me go within two pixels of completely outside if partiallyOutside is true."	| trialRect delta boundingMorph bRect |	owner ifNil:[^self].	trialRect _ aPoint extent: self bounds extent.	boundingMorph _ self topRendererOrSelf owner.	delta _ boundingMorph			ifNil:    [0@0]			ifNotNil: [				bRect _ partiallyOutside 					ifTrue: [boundingMorph bounds insetBy: 								self extent negated + boundingMorph borderWidth + (2@2)]					ifFalse: [boundingMorph bounds].				trialRect amountToTranslateWithin: bRect].	self position: aPoint + delta.	self layoutChanged  "So that, eg, surrounding text will readjust"! !!BlobMorph methodsFor: 'geometry' stamp: 'tk 7/14/2001 11:06'!setConstrainedPosition: aPoint hangOut: partiallyOutside	"Deal with dragging the blob over another blob which results in spontaneous deletations."	self owner ifNil: [^ self].	super setConstrainedPosition: aPoint hangOut: false.		"note that we keep them from overlapping"! !!HaloMorph methodsFor: 'events' stamp: 'tk 7/14/2001 11:04'!dragTarget: event	"Begin dragging the target"	| thePoint |	thePoint _ target point: event position - positionOffset from: owner.	target setConstrainedPosition: thePoint hangOut: true.	event hand newMouseFocus: self.! !!HaloMorph methodsFor: 'events' stamp: 'tk 7/14/2001 11:04'!mouseMove: evt	"Drag our target around"	| thePoint |	thePoint _ target point: (evt position - positionOffset) from: owner.	target setConstrainedPosition: thePoint hangOut: true.! !!HaloMorph methodsFor: 'private' stamp: 'tk 7/14/2001 11:04'!doDrag: evt with: dragHandle	| thePoint |	evt hand obtainHalo: self.	thePoint _ target point: evt position - positionOffset from: owner.	target setConstrainedPosition:(target griddedPoint: thePoint) hangOut: true.! !!MVCMenuMorph methodsFor: 'invoking' stamp: 'tk 7/14/2001 11:04'!informUserAt: aPoint during: aBlock	"Add this menu to the Morphic world during the execution of the given block."	| title w |	Smalltalk isMorphic ifFalse: [^ self].	title _ submorphs first submorphs first.	self visible: false.	w _ ActiveWorld.	aBlock value:[:string|		self visible ifFalse:[			w addMorph: self centeredNear: aPoint.			self visible: true].		title contents: string.		self setConstrainedPosition: Sensor cursorPoint hangOut: false.		self changed.		w displayWorld		 "show myself"	]. 	self delete.	w displayWorld! !BlobMorph removeSelector: #setConstrainedPositionFrom:!BlobMorph removeSelector: #setConstrainedPositionFrom:hangOut:!Morph removeSelector: #setConstrainedPositionFrom:!Morph removeSelector: #setConstrainedPositionFrom:hangOut:!