'From Squeak2.8alpha of 13 January 2000 [latest update: #2121] on 15 May 2000 at 4:12:35 am'!"Change Set:		rendererBlend-swDate:			15 May 2000Author:			Scott WallaceMakes DropShadowMorph obey the same conventions as TransformationMorph regarding which pieces of state are stored in the renderer and which remain in the renderee.Among other things, this hopefully brings about closure on a boring but knotty problem regarding the names that appear beneath halos on morphs that have renderers.  It also regularizes, for the first time, the ability of objects bearing DropShadows to be scripted and to be referenced via the toy scripting system." !!Morph methodsFor: 'rotate scale and flex' stamp: 'sw 5/15/2000 00:01'!addFlexShell	"Wrap a rotating and scaling shell around this morph."	| oldHalo flexMorph |	oldHalo _ self halo.	self owner addMorph:		(flexMorph _ self newTransformationMorph asFlexOf: self).	self transferStateToRenderer: flexMorph.	oldHalo ifNotNil: [oldHalo setTarget: flexMorph].	^ flexMorph! !!Morph methodsFor: 'naming' stamp: 'sw 5/15/2000 00:12'!renameTo: aName	| aPresenter putInViewer aPasteUp renderer |	(renderer _ self topRendererOrSelf) setNameTo: aName.	(aPresenter _ self presenter) ifNotNil:		[putInViewer _ aPresenter currentlyViewing: renderer player.		putInViewer ifTrue: [aPresenter viewMorph: self]].	(aPasteUp _ self topPasteUp) ifNotNil:		[aPasteUp allTileScriptingElements do:			[:m | m bringUpToDate]]! !!Morph methodsFor: 'menus' stamp: 'sw 5/15/2000 00:29'!absorbStateFromRenderer: aRenderer 	| current |	"Transfer knownName, actorState, and player info over from aRenderer, which was formerly imposed above me as a transformation shell but is now going away."	(current _ aRenderer actorStateOrNil) ifNotNil:		[self actorState: current.		aRenderer actorState: nil].	(current _ aRenderer knownName) ifNotNil:		[self setNameTo: current.		aRenderer setNameTo: nil].	(current _ aRenderer player) ifNotNil:		[self player: current.		current rawCostume: self.		aRenderer player: nil]! !!Morph methodsFor: 'menus' stamp: 'sw 5/15/2000 00:02'!addDropShadow	| ds hadHalo |	(hadHalo _ self hasHalo) ifTrue: [self halo delete].	self owner replaceSubmorph: self by: (ds _ DropShadowMorph new).	ds addMorph: self.	self transferStateToRenderer: ds.	hadHalo ifTrue: [ds addHalo]! !!Morph methodsFor: 'menus' stamp: 'sw 5/15/2000 04:06'!transferStateToRenderer: aRenderer	| current |	"Transfer knownName, actorState, and player info over to aRenderer, which is being imposed above me as a transformation shell"	(current _ self actorStateOrNil) ifNotNil:		[aRenderer actorState: current.		self actorState: nil].	(current _ self knownName) ifNotNil:		[aRenderer setNameTo: current.		self setNameTo: nil].	(current _ self player) ifNotNil:		[aRenderer player: current.		self player rawCostume: aRenderer.		self player: nil]! !!DropShadowMorph methodsFor: 'menu' stamp: 'sw 5/15/2000 00:15'!removeDropShadow	| hadHalo first |	(hadHalo _ self hasHalo) ifTrue: [self halo delete].	first _ self firstSubmorph.	owner addAllMorphs: self submorphs.	first absorbStateFromRenderer: self.	hadHalo ifTrue: [first addHalo].	self delete! !!DropShadowMorph methodsFor: 'accessing' stamp: 'sw 5/14/2000 22:22'!innocuousName	| actualMorph |	^ (actualMorph _ self renderedMorph) == self		ifTrue:	[super innocuousName]		ifFalse:	[actualMorph innocuousName]! !!HaloMorph methodsFor: 'private' stamp: 'sw 9/8/1999 11:06'!addName	self addNameBeneath: self basicBox string: target externalName! !!TransformationMorph methodsFor: 'menu' stamp: 'sw 5/15/2000 00:10'!removeFlexShell	"Remove the shell used to make a morph rotatable and scalable."	| oldHalo unflexed |	oldHalo _ self halo.	submorphs isEmpty ifTrue: [^ self delete].	unflexed _ self firstSubmorph.	self submorphs do: [:m |		m position: self center - (m extent // 2).		owner addMorph: m].	unflexed absorbStateFromRenderer: self.	oldHalo ifNotNil: [oldHalo setTarget: unflexed].	self delete.	^ unflexed! !HaloMorph removeSelector: #setTargetBasic:!