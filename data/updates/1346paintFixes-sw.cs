'From Squeak 2.4c of May 10, 1999 on 22 July 1999 at 4:44:54 pm'!"Change Set:		paintFixes-swDate:			22 July 1999Author:			Scott Wallace(1)  When an object that is NOT wearing a sketch costume is told to look like another object that IS wearing a sketch costume, the rotation style of the latter is now correctly applied to the new sketch costume of the former.(2)  If the sketchMorph currently being painted has been removed from the world (by dismissing its enclosing window, for example) before painting is completed, a fix is made so that the paint palette is properly disposed of and the user is not dropped into a debugger."!!Player methodsFor: 'costume' stamp: 'sw 7/22/1999 16:26'!wearSketchCostumeResembling: aSketchMorph	| newCostume itsForm cur degs chgd |	itsForm _ aSketchMorph form.	((cur _ costume renderedMorph) isKindOf: SketchMorph)		ifTrue:			[cur form == itsForm ifTrue: [^ self]].	(costumes notNil and: [costumes size > 0]) ifTrue:		[newCostume _ costumes detect: [:c | (c isKindOf: SketchMorph) and: [c form == itsForm]]					ifNone: [nil]].	chgd _ false.	newCostume ifNil:		[newCostume _ SketchMorph new player: self.		newCostume originalForm: itsForm;			rotationCenter: aSketchMorph rotationCenter;			framesToDwell: aSketchMorph framesToDwell;			rotationStyle: aSketchMorph rotationStyle.		chgd _ true].	((cur isKindOf: SketchMorph) and: [cur rotationStyle ~~ #normal])			ifTrue:				[newCostume rotationStyle: cur rotationStyle.				newCostume rotationDegrees: cur rotationDegrees.				degs _ cur valueOfProperty: #setupAngle ifAbsent: [nil].				degs ifNotNil: [newCostume setupAngle: degs].				chgd _ true].	chgd ifTrue: [newCostume layoutChanged].	self renderedCostume: newCostume! !!SketchMorph methodsFor: 'menu' stamp: 'sw 7/22/1999 16:41'!editDrawingIn: aPasteUpMorph forBackground: forBackground	| w oldRotation bnds sketchEditor pal aPaintTab aWorld aPaintBox |	(self world findA: SketchEditorMorph) ifNotNil:		[^ self inform: 'Sorry, you can only paint oneobject at a time'].	w _ aPasteUpMorph world.	w stopRunningAll; abandonAllHalos.	w displayWorld.	oldRotation _ rotationDegrees.	forBackground		ifTrue:			[bnds _ aPasteUpMorph boundsInWorld]		ifFalse:			[bnds _ (self boundsInWorld expandBy: (60 @ 60)) intersect: self world bounds.			bnds _ (aPasteUpMorph paintingBoundsAround: bnds center) merge: bnds].	sketchEditor _ SketchEditorMorph new.	forBackground ifTrue: [sketchEditor setProperty: #background toValue: true].	w addMorphFront: sketchEditor.	sketchEditor initializeFor: self inBounds: bnds pasteUpMorph: aPasteUpMorph.		"self rotationDegrees: 0.  inside the init"	self rotationDegrees: oldRotation.  "restore old rotation so that cancel leaves it right"	sketchEditor		afterNewPicDo: [:aForm :aRect |			self form: aForm.			self topRendererOrSelf position: aRect origin.			self rotationStyle: sketchEditor rotationStyle.			self setupAngle: sketchEditor forwardDirection.			self rotationDegrees: sketchEditor forwardDirection.			self presenter drawingJustCompleted: self.			forBackground ifTrue: [self goBehind]]  "shouldn't be necessary"		ifNoBits: ["If no bits drawn.  Must keep old pic.  Can't have no picture"			aWorld _ self currentWorld.				"sometimes by now I'm no longer in a world myself, but we still need				 to get ahold of the world so that we can deal with the palette"			((pal _ aPasteUpMorph standardPalette) notNil and: [pal isInWorld])				ifTrue:					[(aPaintBox _ aWorld paintBox) ifNotNil: [aPaintBox delete].					pal viewMorph: self]				ifFalse:					[(aPaintTab _ aWorld paintingFlapTab)						ifNotNil:							[aPaintTab hideFlap]						ifNil:							[(aPaintBox _ aWorld paintBox) ifNotNil: [aPaintBox delete]]]]! !