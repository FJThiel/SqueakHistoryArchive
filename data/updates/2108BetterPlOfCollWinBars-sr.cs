'From Squeak2.8alpha of 4 February 2000 [latest update: #2052] on 30 April 2000 at 3:20:18 pm'!"Change Set:		018BetterPlOfCollWinBars-srDate:			26 March 2000Author:			Stephan RudlofImproves placement of collapsing window bars in morphic and mvc projects.Always look for the next free *rectangle* to place the collapsed win bar to *avoid* overlapping with others.Try (before/after applying this changeset):- Collaps all wins,- move some collapsed win bars so that they overlap,and- expand all,- collapse all.Explanation:If you move around collapsed win bars (after your personal taste) then so far it is possible that they will be overlapped from win bars of currently open windows if these will be collapsed.With this changeset there is no more overlapping, collapsing window bars will be placed as one expects.In case of a conflict the next free win bar position will be used for the collapsing window, its stored win bar position (if recollapsing) will be ignored.If there is no conflict the stored (if recollapsing) or first possible (if first collapsing) win bar position is used.This works before the left side of the screen is fully filled by win bars. Also includes bugfix SystemWindow>>extent: : Updates inst vars 'fullFrame' and 'collapsedFrame' now (similar to SystemWindow>>position:)."!!RealEstateAgent class methodsFor: 'as yet unclassified' stamp: 'sr 3/26/2000 04:49'!assignCollapseFrameFor: aSSView 	"Offer up a location along the left edge of the screen for a collapsed SSView. Make sure it doesn't overlap any other collapsed frames."	| grid otherFrames topLeft viewBox collapsedFrame extent newFrame verticalBorderDistance top |	grid _ 8.	verticalBorderDistance _ 8.	Smalltalk isMorphic		ifTrue: 			[otherFrames _ (SystemWindow windowsIn: World satisfying: [:w | w ~= aSSView])						collect: [:w | w collapsedFrame]						thenSelect: [:rect | rect notNil].			viewBox _ World viewBox]		ifFalse: 			[otherFrames _ ScheduledControllers scheduledWindowControllers						collect: [:aController | aController view ~= aSSView ifTrue: [aController view collapsedFrame]]						thenSelect: [:rect | rect notNil].			viewBox _ Display boundingBox].	collapsedFrame _ aSSView collapsedFrame.	extent _ collapsedFrame notNil				ifTrue: [collapsedFrame extent]				ifFalse: [Smalltalk isMorphic					ifTrue: [aSSView getRawLabel width + aSSView labelWidgetAllowance @ (aSSView labelHeight + 2)]					ifFalse: [(aSSView labelText extent x + 70) @ aSSView labelHeight							min: aSSView labelDisplayBox extent					]				].	collapsedFrame notNil		ifTrue: [(otherFrames anySatisfy: [:f | collapsedFrame intersects: f])				ifFalse: ["non overlapping"					^ collapsedFrame]].	top _ viewBox top + verticalBorderDistance.	[topLeft _ viewBox left @ top.	newFrame _ topLeft extent: extent.	newFrame bottom <= (viewBox height - verticalBorderDistance)]		whileTrue: 			[(otherFrames anySatisfy: [:w | newFrame intersects: w])				ifFalse: ["no overlap"					^ newFrame].			top _ top + grid].	"If all else fails... (really to many wins here)"	^ 0 @ 0 extent: extent! !!StandardSystemView methodsFor: 'label access' stamp: 'sr 3/26/2000 04:26'!labelText	^labelText! !!StandardSystemView methodsFor: 'framing' stamp: 'sr 3/26/2000 03:47'!chooseCollapsePoint	"Answer the point at which to place the collapsed window."	| pt labelForm beenDown offset |	labelForm _ Form fromDisplay: self labelDisplayBox.	self uncacheBits.	self erase.	beenDown _ Sensor anyButtonPressed.	self isCollapsed ifTrue:		[offset _ self labelDisplayBox topLeft - self growBoxFrame topLeft.		labelForm follow: [pt _ (Sensor cursorPoint + offset max: 0@0) truncateTo: 8]				while: [Sensor anyButtonPressed							ifTrue: [beenDown _ true]							ifFalse: [beenDown not]].		^ pt].	^ (RealEstateAgent assignCollapseFrameFor: self) origin.! !!SystemWindow methodsFor: 'geometry' stamp: 'sr 1/14/2000 03:59'!extent: newExtent 	| inner labelRect |	isCollapsed		ifTrue: [super extent: newExtent x @ (self labelHeight + 2)]		ifFalse: [super extent: newExtent].	inner _ self innerBounds.	labelRect _ self labelRect.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	self setStripeColorsFrom: self paneColorToUse.	closeBox ifNotNil: [closeBox align: closeBox topLeft with: inner topLeft + (4 @ 1)].	menuBox ifNotNil: [menuBox align: menuBox topLeft with: inner topLeft + (19 @ 1)].	collapseBox align: collapseBox topRight with: inner topRight - (4 @ -1).	label fitContents; setWidth: (label width min: bounds width - self labelWidgetAllowance).	label align: label bounds topCenter with: inner topCenter.	isCollapsed		ifTrue: [collapsedFrame _ self bounds]		ifFalse: [self setBoundsOfPaneMorphs. fullFrame _ self bounds]! !!SystemWindow methodsFor: 'label' stamp: 'sr 1/14/2000 02:39'!getRawLabel	^ label! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'sr 1/14/2000 02:26'!collapseOrExpand	isCollapsed		ifTrue: 			["Expand -- restore panes to morphics structure"			isCollapsed _ false.			collapsedFrame _ self getBoundsWithFlex.			"First save latest collapsedFrame"			self setBoundsWithFlex: fullFrame.			paneMorphs				reverseDo: 					[:m | 					self addMorph: m.					self world startSteppingSubmorphsOf: m].			self activate "-- mainly for findWindow"]		ifFalse: 			["Collapse -- remove panes from morphics structure"			isCollapsed _ true.			fullFrame _ self getBoundsWithFlex.			"First save latest fullFrame"			paneMorphs do: [:m | m delete; releaseCachedState].			model modelSleep.			collapsedFrame _ (RealEstateAgent assignCollapseFrameFor: self).									self setBoundsWithFlex: collapsedFrame].	self layoutChanged! !