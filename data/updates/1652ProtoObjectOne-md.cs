'From Squeak2.7alpha of 25 October 1999 [latest update: #1637] on 25 November 1999 at 11:36:22 pm'!"Change Set:		ProtoObjectOne-mdDate:			25 November 1999Author:			Marcus DenkerIntroduces class ProtoObject, a subclass of nil, as the superclass of Object, and all the other classes that had formerly been subclasses of nil.This collects in one place the protocol that makes it easy to handle most objects that do not inherit from Object.The follow-on changeSet, ProtoObjectTwo removes the three separate copies of this protocol that had been maintained separately before this change."!nil subclass: #ProtoObject	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Objects'!!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:23'!ifNil: nilBlock	"Return self, or evaluate the block if I'm == nil (q.v.)"	^ self! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:25'!ifNil: nilBlock ifNotNil: ifNotNilBlock	"Evaluate the block, unless I'm == nil (q.v.)"	^ ifNotNilBlock value! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:25'!ifNotNil: ifNotNilBlock	"Evaluate the block, unless I'm == nil (q.v.)"	^ ifNotNilBlock value! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:25'!ifNotNil: ifNotNilBlock ifNil: nilBlock 	"If I got here, I am not nil, so evaluate the block ifNotNilBlock"	^ ifNotNilBlock value! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:57'!isInMemory	"All normal objects are."	^ true! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:26'!isNil	"Coerces nil to true and everything else to false."	^false! !!ProtoObject methodsFor: 'testing' stamp: 'md 11/24/1999 19:58'!pointsTo: anObject	"This method returns true if self contains a pointer to anObject,		and returns false otherwise"	<primitive: 132>	1 to: self class instSize do:		[:i | (self instVarAt: i) == anObject ifTrue: [^ true]].	1 to: self basicSize do:		[:i | (self basicAt: i) == anObject ifTrue: [^ true]].	^ false! !!ProtoObject methodsFor: 'comparing' stamp: 'md 11/24/1999 19:27'!== anObject 	"Primitive. Answer whether the receiver and the argument are the same 	object (have the same object pointer). Do not redefine the message == in 	any other class!! Essential. No Lookup. Do not override in any subclass. 	See Object documentation whatIsAPrimitive."	<primitive: 110>	self primitiveFailed! !!ProtoObject methodsFor: 'comparing' stamp: 'md 11/24/1999 19:27'!identityHash	"Answer a SmallInteger whose value is related to the receiver's identity.	This method must not be overridden, except by SmallInteger.	Primitive. Fails if the receiver is a SmallInteger. Essential.	See Object documentation whatIsAPrimitive.	Do not override."	<primitive: 75>	self primitiveFailed! !!ProtoObject methodsFor: 'comparing' stamp: 'md 11/24/1999 19:27'!~~ anObject	"Answer whether the receiver and the argument are not the same object 	(do not have the same object pointer)."	self == anObject		ifTrue: [^ false]		ifFalse: [^ true]! !!ProtoObject methodsFor: 'system primitives' stamp: 'md 11/24/1999 19:30'!become: otherObject 	"Primitive. Swap the object pointers of the receiver and the argument.	All variables in the entire system that used to point to the 	receiver now point to the argument, and vice-versa.	Fails if either object is a SmallInteger"	(Array with: self)		elementsExchangeIdentityWith:			(Array with: otherObject)! !!ProtoObject methodsFor: 'system primitives' stamp: 'md 11/24/1999 19:58'!nextInstance	"Primitive. Answer the next instance after the receiver in the 	enumeration of all instances of this class. Fails if all instances have been 	enumerated. Essential. See Object documentation whatIsAPrimitive."	<primitive: 78>	^nil! !!ProtoObject methodsFor: 'system primitives' stamp: 'md 11/24/1999 19:58'!nextObject	"Primitive. Answer the next object after the receiver in the 	enumeration of all objects. Return 0 when all objects have been 	enumerated."	<primitive: 139>	self primitiveFailed.! !!ProtoObject methodsFor: 'objects from disk' stamp: 'md 11/24/1999 20:03'!rehash	"Do nothing.  Here so sending this to a Set does not have to do a time consuming respondsTo:"! !"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."Object superclass: ProtoObject.Object class superclass: ProtoObject class.ProtoObject addSubclass: Object.Class removeSubclass: Object class.ObjectOut superclass: ProtoObject.ObjectOut class superclass: ProtoObject class.ProtoObject addSubclass: ObjectOut.Class removeSubclass: ObjectOut class.ImageSegmentRootStub superclass: ProtoObject.ImageSegmentRootStub class superclass: ProtoObject class.ProtoObject addSubclass: ImageSegmentRootStub.Class removeSubclass: ImageSegmentRootStub class.!