'From Squeak3.6gamma of ''11 September 2003'' [latest update: #5421] on 26 September 2003 at 12:28:14 pm'!!String class methodsFor: 'm17n' stamp: 'yo 9/25/2003 20:10'!conv	| str cand classes oldVars newVars |	oldVars _ String classVarNames asArray.	newVars _ OrderedCollection new: oldVars size.	oldVars do: [:var |		newVars add: 'A', var.		String addClassVarName: 'A', var.	].	newVars _ newVars asArray.	str _ String streamContents: [:strm |		oldVars do: [:var |			strm nextPutAll: 'A', var, ' _ ', var, '.\' withCRs.		].	].	Compiler evaluate: str for: String logged: false.	String class removeSelector: #DoIt."	(String allMethodCategoriesIntegratedThrough: String) do: [:cat |		AbstractString organization addCategory: cat	]."	classes _ Array with: String with: String class with: Symbol with: Symbol class.	classes do: [:cls |		cand _ Set new.		oldVars do: [:var |			((cls allCallsOn: (String classPool associationAt: var asSymbol)) select: [:meth | meth classSymbol = cls theNonMetaClass name]) do: [:meth |				cand add: meth methodSymbol.			].		].		cand asArray do: [:sel |			str _ String getTempMethodStringFrom: (cls sourceCodeAt: sel) string replaceVars: oldVars withVars: newVars.			cls compile: str classified: (cls organization categoryOfElement: sel).		].	].	oldVars do: [:k | String removeClassVarName: k].	oldVars do: [:var |		(Smalltalk at: #AbstractString) addClassVarName: var.	].	str _ String streamContents: [:strm |		oldVars do: [:var |			strm nextPutAll: var, ' _ ', 'A', var, '.\' withCRs.		].	].	Compiler evaluate: str for: String logged: false.	String class removeSelector: #DoIt.	classes _ Array with: String with: String class with: Symbol with: Symbol class.	classes do: [:cls |		cand _ Set new.		newVars do: [:var |			((cls allCallsOn: (String classPool associationAt: var asSymbol)) select: [:meth | meth classSymbol = cls theNonMetaClass name]) do: [:meth |				cand add: meth methodSymbol.			].		].		cand asArray do: [:sel |			str _ String getTempMethodStringFrom: (cls sourceCodeAt: sel) string replaceVars: newVars withVars: oldVars.			cls compile: str classified: (cls organization categoryOfElement: sel).		].	].	newVars do: [:k | String removeClassVarName: k].! !!String class methodsFor: 'm17n' stamp: 'yo 9/25/2003 19:51'!conv0	ArrayedCollection subclass: #AbstractString		instanceVariableNames: ''		classVariableNames: ''		poolDictionaries: ''		category: 'Multilingual-BaseClasses'.	ClassBuilder new		name: #String		inEnvironment: String environment		subclassOf: (Smalltalk at: #AbstractString)		type: String typeOfClass		instanceVariableNames: String instanceVariablesString		classVariableNames: String classVariablesString		poolDictionaries: String sharedPoolsString		category: (SystemOrganization categoryOfElement: #String) asString		unsafe: true.	String organization categories do: [:cat |		(Smalltalk at: #AbstractString) organization addCategory: cat	].! !!String class methodsFor: 'm17n' stamp: 'yo 9/25/2003 18:54'!getDelimited: var from: from in: string	| start end index |	index _ string findString: var startingAt: from.	index > 0 ifTrue: [		start _ index.		[start > 0 and: [(string at: start) isAlphaNumeric]] whileTrue: [start _ start - 1].		start _ start + 1.		end _ index.		[end <= string size and: [(string at: end) isAlphaNumeric]] whileTrue: [end _ end + 1].		end _ end - 1.		((string copyFrom: start to: end) = var) ifTrue: [^ start] ifFalse: [			^ self getDelimited: var from: index + var size in: string.		].	].	^ 0.! !!String class methodsFor: 'm17n' stamp: 'yo 9/25/2003 18:15'!getDelimited: index in: string	| start end |	start _ index.	[start > 0 and: [(string at: start) isAlphaNumeric]] whileTrue: [start _ start - 1].	start _ start + 1.	end _ index.	[end <= string size and: [(string at: end) isAlphaNumeric]] whileTrue: [end _ end + 1].	end _ end - 1.	^ string copyFrom: start to: end.! !!String class methodsFor: 'm17n' stamp: 'yo 9/25/2003 19:37'!getTempMethodStringFrom: original replaceVars: oldClassVarNames withVars: newClassVarNames	| str start index stream |	str _ original.	oldClassVarNames with: newClassVarNames do: [:var :newVar |		start _ 1.		[(index _ self getDelimited: var from: start in: str) > 0] whileTrue: [			stream _ WriteStream on: (String new: original size + 1).			stream nextPutAll: (str copyFrom: 1 to: index - 1).			stream nextPutAll: newVar.			stream nextPutAll: (str copyFrom: index + var size to: str size).			str _ stream contents.			start _ index + var size + 1.		].	].	^ str.! !!String class methodsFor: 'm17n' stamp: 'yo 9/26/2003 10:19'!multiClasses	Character subclass: #MultiCharacter		instanceVariableNames: ''		classVariableNames: ''		poolDictionaries: ''		category: 'Multilingual-BaseClasses'.	AbstractString variableWordSubclass: #MultiString		instanceVariableNames: ''		classVariableNames: ''		poolDictionaries: ''		category: 'Multilingual-BaseClasses'.	(Smalltalk at: #MultiString) variableWordSubclass: #MultiSymbol		instanceVariableNames: ''		classVariableNames: 'MultiSymbolTable NewMultiSymbols OneCharacterMultiSymbols '		poolDictionaries: ''		category: 'Multilingual-BaseClasses'.! !!String class methodsFor: 'm17n' stamp: 'yo 9/26/2003 10:17'!pushUpMethods	(String selectors reject: [:each | #(compare:with:collated:  < >= compare: <= byteSize byteAt:put: = at:put:  replaceFrom:to:with:startingAt:   >  byteAt:  sameAs:  caseInsensitiveLessOrEqual: at: caseSensitiveLessOrEqual:) includes: each]) do: [:sel |		AbstractString copy: sel from: String.		String removeSelector: sel.	].	((String class selectors reject: [:each | #(findFirstInString:inSet:startingAt: ccgDeclareCForVar: translate:from:to:table: ccg:prolog:expr:index: stringHash:initialHash: indexOfAscii:inString:startingAt: fromByteArray: correspondingSymbolClass) includes: each]) reject: [:each | (String class organization categoryOfElement: each) = (String class organization categoryOfElement: #conv)]) do: [:sel |		AbstractString class copy: sel from: String class.		String class removeSelector: sel.	].	"#(asMultiString convertToSystemString  convertFromWithConverter: includesUnifiedCharacter convertToWithConverter: convertFromSystemString asOctetString convertFromCompoundText isOctetString asTranslatedWording)"! !!SmalltalkImage methodsFor: 'housekeeping' stamp: 'yo 7/25/2003 17:50'!reconstructChanges2	"Move all the changes and its histories onto another sources file."	"SmalltalkImage reconstructChanges2"	| f oldChanges classCount |	f _ FileStream fileNamed: 'ST80.temp'.	f header; timeStamp.	(SourceFiles at: 2) converter: MacRomanTextConverter new.'Recoding Changes File...'	displayProgressAt: Sensor cursorPoint	from: 0 to: Smalltalk classNames size	during:		[:bar | classCount _ 0.		Smalltalk allClassesDo:			[:class | bar value: (classCount _ classCount + 1).			class moveChangesWithVersionsTo: f.			class putClassCommentToCondensedChangesFile: f.			class class moveChangesWithVersionsTo: f]].	self lastQuitLogPosition: f position.	f trailer; close.	oldChanges _ SourceFiles at: 2.	oldChanges close.	FileDirectory default 		deleteFileNamed: oldChanges name , '.old';		rename: oldChanges name toBe: oldChanges name , '.old';		rename: f name toBe: oldChanges name.	Smalltalk setMacFileInfoOn: oldChanges name.	SourceFiles at: 2			put: (FileStream oldFileNamed: oldChanges name)! !"Postscript:"String conv0.String conv.String multiClasses.String pushUpMethods.