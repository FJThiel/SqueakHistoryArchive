'From Squeak2.9alpha of 17 July 2000 [latest update: #3352] on 1 February 2001 at 1:44:42 pm'!"Change Set:		colorpickerDate:			1 February 2001Author:			Bob Arningfixes reference to <clickedTranslucency> before it had a meaningful value"!!ColorPickerMorph methodsFor: 'initialization' stamp: 'RAA 2/1/2001 13:43'!initialize	"Initialize the receiver.  Obey the modalColorPickers preference when deciding how to configure myself.  This is not quite satisfactory -- we'd like to have explicit calls tell us things like whether whether to be modal, whether to allow transparency, but for the moment, in grand Morphic fashion, this is rather inflexibly all housed right here"	super initialize.	self buildChartForm.		selectedColor _ Color white.	sourceHand _ nil.	deleteOnMouseUp _ false.	clickedTranslucency _ false.	updateContinuously _ true.	selector _ nil.	target _ nil! !!ColorPickerMorph methodsFor: 'private' stamp: 'RAA 2/1/2001 13:43'!pickColorAt: aGlobalPoint 	| alpha selfRelativePoint pickedColor |	clickedTranslucency ifNil: [clickedTranslucency _ false].	selfRelativePoint _ (self globalPointToLocal: aGlobalPoint) - self topLeft.	(FeedbackBox containsPoint: selfRelativePoint) ifTrue: [^ self].	(RevertBox containsPoint: selfRelativePoint)		ifTrue: [^ self updateColor: originalColor feedbackColor: originalColor].	"check for transparent color and update using appropriate feedback color "	(TransparentBox containsPoint: selfRelativePoint) ifTrue:		[clickedTranslucency ifFalse: [^ self].  "Can't wander into translucency control"		alpha _ (selfRelativePoint x - TransparentBox left - 10) asFloat /							(TransparentBox width - 20)							min: 1.0 max: 0.0.					"(alpha roundTo: 0.01) printString , '   ' displayAt: 0@0." " -- debug"		self 			updateColor: (selectedColor alpha: alpha)			feedbackColor: (selectedColor alpha: alpha).		^ self].	"pick up color, either inside or outside this world"	clickedTranslucency ifTrue: [^ self].  "Can't wander out of translucency control"	pickedColor _ Display colorAt: aGlobalPoint.	self 		updateColor: (			(selectedColor isColor and: [selectedColor isTranslucentColor])						ifTrue: [pickedColor alpha: selectedColor alpha]						ifFalse: [pickedColor]		)		feedbackColor: pickedColor! !