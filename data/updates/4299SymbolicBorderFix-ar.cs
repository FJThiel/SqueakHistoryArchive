'From Squeak3.1alpha of 28 February 2001 [latest update: #4297] on 26 August 2001 at 5:19:32 pm'!"Change Set:		SymbolicBorderFix-arDate:			26 August 2001Author:			Andreas RaabFixes a problem with viewer readouts for symbolic borders (which really expected a color to work). Also removes a few (now obsolete) #drawOn: methods in favour of the newly introduced #insetColor protocol (which is the equivalent to #raisedColor; both being sent to figure out on what color the bevel should be based)."!!Morph methodsFor: 'accessing' stamp: 'ar 8/26/2001 17:05'!insetColor	"Return the color to be used for shading inset borders.	Note: Contrary to #colorForInsets (which is sent to some owner) this message is sent to the morph we want to fill."	owner ifNotNil:[^owner colorForInsets].	^color colorForInsets! !!Morph methodsFor: 'visual properties' stamp: 'ar 8/26/2001 17:08'!colorsAtCorners	"Return the colors to draw for a morph its corners are rounded"	| c c14 c23 |	c _ self borderColor.	c == #raised ifTrue:[		c _ self raisedColor.		c14 _ c lighter. c23 _ c darker.		^Array with: c14 with: c23 with: c23 with: c14].	c == #inset ifTrue:[		c _ self insetColor.		c14 _ c lighter. c23 _ c darker.		^Array with: c23 with: c14 with: c14 with: c23].	^Array new: 4 withAll: c! !!BorderedMorph methodsFor: 'drawing' stamp: 'ar 8/26/2001 17:07'!drawOn: aCanvas 	"Draw a rectangle with a solid, inset, or raised border.	Note: the raised border color is generated from the receiver's own color,	while the inset border color is generated from the color of its owner.	This behavior is visually more consistent. Thanks to Hans-Martin Mosner."	| bc |	borderWidth = 0 ifTrue: [  "no border"		"Note: This is the hook for border styles.			When converting to the new borders we'll just put 0 into the borderWidth"		super drawOn: aCanvas.		^ self].	borderColor == #raised ifTrue: [		"Use a hack for now"		aCanvas fillRectangle: self bounds fillStyle: self fillStyle.		bc _ self raisedColor.		^ aCanvas frameAndFillRectangle: bounds			fillColor: Color transparent			borderWidth: borderWidth			topLeftColor: (borderWidth = 1 ifTrue: [bc twiceLighter]										ifFalse: [bc lighter])			bottomRightColor: (borderWidth = 1 ifTrue: [bc twiceDarker]										ifFalse: [bc darker])].	borderColor == #inset ifTrue: [		bc _ self insetColor.		aCanvas fillRectangle: self bounds fillStyle: self fillStyle.		^ aCanvas frameAndFillRectangle: bounds			fillColor: Color transparent			borderWidth: borderWidth			topLeftColor: (borderWidth = 1 ifTrue: [bc twiceDarker]										ifFalse: [bc darker])			bottomRightColor: (borderWidth = 1 ifTrue: [bc twiceLighter]										ifFalse: [bc lighter])].	"solid color border"	aCanvas fillRectangle: (self bounds insetBy: borderWidth) fillStyle: self fillStyle.	aCanvas frameAndFillRectangle: bounds		fillColor: Color transparent		borderWidth: borderWidth		borderColor: borderColor.! !!Player methodsFor: 'slot getters/setters' stamp: 'ar 8/26/2001 17:10'!getBorderColor	"Answer the border color of my costume"	| aColor |	aColor _  self getValueFromCostume: #borderColor.	aColor isColor ifTrue:[^aColor].	aColor == #raised ifTrue:[		aColor _ self getValueFromCostume: #raisedColor.		aColor isColor ifTrue:[^aColor]].	aColor == #inset ifTrue:[		aColor _ self getValueFromCostume: #insetColor.		aColor isColor ifTrue:[^aColor]].	^Color gray! !!SameGameTile methodsFor: 'accessing' stamp: 'ar 8/26/2001 17:14'!insetColor	"Use my own color for insets"	^color! !UpdatingRectangleMorph removeSelector: #drawOn:!SameGameTile removeSelector: #drawOn:!AlansTextPlusMorph removeSelector: #drawOn:!