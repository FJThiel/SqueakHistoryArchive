'From Squeak2.8alpha of 12 January 2000 [latest update: #1973] on 27 March 2000 at 4:15:34 pm'!"Change Set:		GrowFontsDate:			27 March 2000Author:			Dan IngallsSeveral enhancements to StrikeFont...Ability to extend ascii range.Prompted call to above if adding a glyph with characterFormAt:put:Ability to replace all zero-width characters by a visible glyph.Postscript performs above replacement on all fonts."!!StrikeFont methodsFor: 'accessing' stamp: 'di 3/27/2000 14:49'!widthOf: aCharacter 	"Answer the width of the argument as a character in the receiver."	| ascii |	ascii _ aCharacter asciiValue.	(ascii between: minAscii and: maxAscii) ifFalse: [ascii _ maxAscii + 1].	^ (xTable at: ascii + 2) - (xTable at: ascii + 1)! !!StrikeFont methodsFor: 'character shapes' stamp: 'di 3/27/2000 14:25'!characterFormAt: character 	"Answer a Form copied out of the glyphs for the argument, character."	| ascii leftX rightX |	ascii _ character asciiValue.	(ascii between: minAscii and: maxAscii) ifFalse: [ascii _ maxAscii + 1].	leftX _ xTable at: ascii + 1.	rightX _ xTable at: ascii + 2.	^ glyphs copy: (leftX @ 0 corner: rightX @ self height)! !!StrikeFont methodsFor: 'character shapes' stamp: 'di 3/27/2000 16:15'!characterFormAt: character put: characterForm	"Copy characterForm over the glyph for the argument, character."	| ascii leftX rightX widthDif newGlyphs |	ascii _ character asciiValue.	ascii < minAscii ifTrue: [^ self error: 'Cant store characters below min ascii'].	ascii > maxAscii ifTrue:		[(self confirm:'This font does not accomodate ascii values higher than ' , maxAscii printString , '.Do you wish to extend it permanently to handle values up to ' , ascii printString)			ifTrue: [self extendMaxAsciiTo: ascii]			ifFalse: [^ self error: 'No change made']].	leftX _ xTable at: ascii + 1.	rightX _ xTable at: ascii + 2.	widthDif _ characterForm width - (rightX - leftX).	widthDif ~= 0 ifTrue:		["Make new glyphs with more or less space for this char"		newGlyphs _ Form extent: (glyphs width + widthDif) @ glyphs height.		newGlyphs copy: (0@0 corner: leftX@glyphs height)			from: 0@0 in: glyphs rule: Form over.		newGlyphs copy: ((rightX+widthDif)@0 corner: newGlyphs width@glyphs height)			from: rightX@0 in: glyphs rule: Form over.		glyphs _ newGlyphs.		"adjust further entries on xTable"		ascii+2 to: xTable size			do: [:i | xTable at: i put: (xTable at: i) + widthDif]].	glyphs copy: (leftX @ 0 extent: characterForm extent)		from: 0@0 in: characterForm rule: Form over"| f |  f _ TextStyle defaultFont.f characterFormAt: $  put: (Form extent: (f widthOf: $ )+10@f height)"! !!StrikeFont methodsFor: 'character shapes' stamp: 'di 3/27/2000 16:10'!extendMaxAsciiTo: newMax	"Extend the range of this font so that it can display glyphs up to newMax."	(newMax+3) <= xTable size ifTrue: [^ self].  "No need to extend."	xTable size = (maxAscii+3) ifFalse:		[^ self error: 'This font is not well-formed.'].	"Insert a bunch of zero-width characters..."	xTable _ (xTable copyFrom: 1 to: maxAscii+2) ,			((maxAscii+1 to: newMax) collect: [:i | xTable at: maxAscii+2]) ,			{ xTable at: maxAscii+3 }.	maxAscii + 3 to: newMax + 2 do:		[:index | stopConditions at: index put: nil].	maxAscii _ newMax.	self fillZeroWidthSlots! !!StrikeFont methodsFor: 'character shapes' stamp: 'di 3/27/2000 16:10'!fillZeroWidthSlots	| nullGlyph |	"Note: this is slow because it copies the font once for every replacement."	nullGlyph _ (Form extent: 1@glyphs height) fillGray.	"Now fill the empty slots with narrow box characters."	minAscii to: maxAscii do:		[:i | (self widthOf: (Character value: i)) = 0 ifTrue:			[self characterFormAt: (Character value: i) put: nullGlyph]].! !"Postscript:Make all characters visible in all fonts by replacing zero-width characters with a default 1-wide pattern."StrikeFont allInstancesDo: [:f | f fillZeroWidthSlots]!