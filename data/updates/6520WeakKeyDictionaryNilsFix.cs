'From Squeak3.9alpha of ''2 November 2004'' [latest update: #6509] on 5 December 2004 at 5:09:59 pm'!"Change Set:		WeakKeyDictionaryNilsFixDate:			5 December 2004Author:			Chris Mullerfixes this bugSubject:		[BUG] WeakKeyDictionary>>keysAndValuesDo:Author:		Chris MullerDate Posted: 8 June 2004Archive ID: 22746Comments:	The following code demonstrates that keysAndValuesDo: will evaluate nil keysthat have been gc'd.	| d |	d _ WeakIdentityKeyDictionary new		at: 'hello' copy put: nil;		yourself.	Smalltalk garbageCollectMost.	d keysAndValuesDo: [ : k : v | k ifNil: [ self halt ] ]I consider this a bug because it contradicts the notion that nil cannot be akey in a Dictionary.  Incidentally, keysDo: passes the test."!ClassTestCase subclass: #WeakIdentityKeyDictionaryTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Collections-Weak-Tests'!!Dictionary methodsFor: 'accessing' stamp: 'cmm 6/8/2004 20:50'!at: key put: anObject 	"Set the value at key to be anObject.  If key is not found, create a	new entry for key and set is value to anObject. Answer anObject."	| index assoc |	key ifNil: [ self error: 'Dictionaries cannot meaningfully key by nil.' ].	index _ self findElementOrNil: key.	assoc _ array at: index.	assoc		ifNil: [self atNewIndex: index put: (Association key: key value: anObject)]		ifNotNil: [assoc value: anObject].	^ anObject! !!WeakIdentityKeyDictionaryTest methodsFor: 'tests' stamp: 'md 12/5/2004 16:50'!testNoNils	| d foundNil |	foundNil _ false.	d _ WeakIdentityKeyDictionary new		at: 'hello' copy put: 'world';		yourself.	Smalltalk garbageCollectMost.	d keysAndValuesDo: [ : k : v | k ifNil: [ foundNil _ true] ].	self deny: foundNil! !!WeakKeyDictionary methodsFor: 'accessing' stamp: 'cmm 6/10/2004 15:56'!associationsDo: aBlock 	"Evaluate aBlock for each of the receiver's elements (key/value 		associations)."	super associationsDo:		[ : eachAssoc |  | eachKey |		eachKey _ eachAssoc key.  "reference to ensure no GC"		eachKey ifNotNil: [ aBlock value: eachAssoc ] ]! !