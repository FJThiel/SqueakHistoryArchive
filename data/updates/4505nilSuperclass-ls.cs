'From Squeak3.1alpha of 7 March 2001 [latest update: #4173] on 9 October 2001 at 12:14:10 am'!"Change Set:		nilSuperclassDate:			9 October 2001Author:			Lex SpoonThis changeset makes it a little more work to create a class with a nil superclass.  One must either use ClassBuilder directly, or one must call #superclass: after creating the class to reset the superclass to nil.  Classes with a nil superclass will still file out correctly.The rationale is this.  Experienced Smalltalkers who really, truly, wish to create a class with superclass nil, will still be able to easily accomplish it.  Furthermore, they probably don't do this at all frequently.  However, new Smalltalkers are now protected against an error that is otherwise more common: filing in a subclass before its superclass has been filed in, resulting unintentionally in classes without a superclass.  This usually leads to the VM aborting when the newbie tries to actually use this class."!!ClassDescription methodsFor: 'fileIn/Out' stamp: 'ls 10/9/2001 00:12'!definitionST80	"Answer a String that defines the receiver."	| aStream path |	aStream _ WriteStream on: (String new: 300).	superclass == nil		ifTrue: [aStream nextPutAll: 'ProtoObject']		ifFalse: [path _ ''.				self environment scopeFor: superclass name from: nil						envtAndPathIfFound: [:envt :remotePath | path _ remotePath].				aStream nextPutAll: path , superclass name].	aStream nextPutAll: self kindOfSubclass;			store: self name.	aStream cr; tab; nextPutAll: 'instanceVariableNames: ';			store: self instanceVariablesString.	aStream cr; tab; nextPutAll: 'classVariableNames: ';			store: self classVariablesString.	aStream cr; tab; nextPutAll: 'poolDictionaries: ';			store: self sharedPoolsString.	aStream cr; tab; nextPutAll: 'category: ';			store: (SystemOrganization categoryOfElement: self name) asString.	superclass ifNil: [ 		aStream nextPutAll: '.'; cr.		aStream nextPutAll: self name.		aStream space; nextPutAll: 'superclass: nil'. ].	^ aStream contents! !!ClassDescription methodsFor: 'fileIn/Out' stamp: 'ls 10/9/2001 00:12'!definitionST80: isST80	"Answer a String that defines the receiver."	| aStream path |	isST80 ifTrue: [^ self definitionST80].	aStream _ WriteStream on: (String new: 300).	superclass == nil		ifTrue: [aStream nextPutAll: 'ProtoObject']		ifFalse: [path _ ''.				self environment scopeFor: superclass name from: nil						envtAndPathIfFound: [:envt :remotePath | path _ remotePath].				aStream nextPutAll: path , superclass name].	aStream nextPutKeyword: self kindOfSubclass			withArg: self name.	aStream cr; tab; nextPutKeyword: 'instanceVariableNames: '			withArg: self instanceVariablesString.	aStream cr; tab; nextPutKeyword: 'classVariableNames: 'withArg: self classVariablesString.	aStream cr; tab; nextPutKeyword: 'poolDictionaries: '			withArg: self sharedPoolsString.	aStream cr; tab; nextPutKeyword: 'category: '			withArg: (SystemOrganization categoryOfElement: self name) asString.	superclass ifNil: [ 		aStream nextPutAll: '.'; cr.		aStream nextPutAll: self name.		aStream space; nextPutAll: 'superclass (nil)'. ].	^ aStream contents! !!UndefinedObject methodsFor: 'class hierarchy' stamp: 'ls 10/9/2001 00:11'!subclass: nameOfClass  	instanceVariableNames: instVarNames	classVariableNames: classVarNames	poolDictionaries: poolDictnames	category: category	"Calling this method is now considered an accident.  If you really want to create a class with a nil superclass, then create the class and then set the superclass using #superclass:"	Transcript show: ('Attempt to create ', nameOfClass, ' as a subclass of nil.  Possibly a class is being loaded before its superclass.'); cr.	^ProtoObject		subclass: nameOfClass		instanceVariableNames: instVarNames		classVariableNames: classVarNames		poolDictionaries: poolDictnames		category: category! !