'From Squeak2.9alpha of 17 July 2000 [latest update: #2616] on 14 September 2000 at 4:26:07 pm'!"Change Set:		moreProjDate:			14 September 2000Author:			Bob Arning- escape filename in url- fix another local name in MailDBFile>>save"!!HandMorph methodsFor: 'object fileIn' stamp: 'RAA 9/14/2000 14:53'!convertbosfceekmmmdccffuleatdccttggrtllmhssffa0: varDict bosfceekmmmdccffuleatdccttggrtllmhssffacw0: smartRefStrm	"These variables are automatically stored into the new instance #('bounds' 'owner' 'submorphs' 'fullBounds' 'color' 'extension' 'eventSubscribers' 'keyboardFocus' 'mouseDownMorph' 'mouseOverMorphs' 'mouseOverTimes' 'dragOverMorphs' 'clickClient' 'clickState' 'firstClickEvent' 'firstClickTime' 'userInitials' 'lastEvent' 'eventTransform' 'argument' 'targetOffset' 'damageRecorder' 'cacheCanvas' 'cachedCanvasHasHoles' 'temporaryCursor' 'temporaryCursorOffset' 'grid' 'gridOn' 'remoteConnections' 'transmitBuffer' 'lastEventTransmitted' 'lastWorldExtent' 'menuTargetOffset' 'hasChanged' 'savedPatch' 'suppressDrawing' 'formerOwner' 'formerPosition' 'addedFlexAtGrab').	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."	"New variables: #('currentCommand' 'worldUnderCursor')  If a non-nil value is needed, please assign it."! !!MailDBFile methodsFor: 'file operations' stamp: 'RAA 9/14/2000 15:59'!save	"Atomically save a representation of this object to its file. The old file is 	renamed to '<oldname>.bak' before the new file is written. If the write 	operation fails, the old file may be restored by renaming it. If it 	succeeds, the .bak file is deleted."	"create the file if it doesn't already exist"	| f dir shortName |	(StandardFileStream fileNamed: filename) close.	"ensure it exists"	shortName _ FileDirectory localNameFor: filename.	dir _ FileDirectory forFileName: filename.	dir rename: shortName toBe: shortName , '.bak'.	Cursor write showWhile: [f _ FileStream fileNamed: filename.	self writeOn: f.	f setToEnd; close.].	dir deleteFileNamed: shortName , '.bak' ifAbsent: []! !!IndexFile methodsFor: 'dictionary access' stamp: 'RAA 9/14/2000 16:00'!logStream	logfile ifNil: [		^logfile _ (StandardFileStream fileNamed: filename,'.log') setToEnd	].	logfile closed ifTrue: [logfile open; setToEnd].	^ logfile! !!Project methodsFor: 'file in/out' stamp: 'RAA 9/14/2000 14:38'!urlForLoading	| aDir |	"compose a url that will load me in someone's browser"	urlList isEmptyOrNil ifTrue: [^nil].	aDir _ ServerDirectory new fullPath: urlList first.	aDir loaderUrl isEmptyOrNil ifTrue: [^nil].	^		aDir loaderUrl,		'?',		self versionedFileName encodeForHTTP! !!WorldState methodsFor: 'object fileIn' stamp: 'RAA 9/14/2000 14:53'!converthavcdsll0: varDict havcdsllcal0: smartRefStrm	"These variables are automatically stored into the new instance #('hands' 'activeHand' 'viewBox' 'canvas' 'damageRecorder' 'stepList' 'lastStepTime' 'lastCycleTime').	This method is for additional changes. Use statements like (foo _ varDict at: 'foo')."	"New variables: #('commandHistory' 'alarms' 'lastAlarmTime')  If a non-nil value is needed, please assign it."! !