'From Squeak 2.3 of January 14, 1999 on 16 February 1999 at 6:36:28 pm'!"Change Set:		B3DPoolDefinitionDate:			16 February 1999Author:			Andreas RaabThis change set defines the necessary pool dictionary for Balloon 3D."!Object subclass: #B3DPoolDefiner	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Balloon-3D-Engine'!!B3DPoolDefiner commentStamp: 'ar 2/8/1999 17:16' prior: 0!This class is used to define the pool dictionary B3DConstants.!!B3DPoolDefiner class methodsFor: 'class initialization' stamp: 'ar 2/8/1999 17:21'!initialize	"B3DPoolDefiner initialize"	self initPool.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/13/1999 20:30'!defineClipConstants: dict	"Initialize the clipper constants"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		(InLeftBit		16r001)		(OutLeftBit		16r002)		(InRightBit		16r004)		(OutRightBit		16r008)		(InTopBit		16r010)		(OutTopBit		16r020)		(InBottomBit		16r040)		(OutBottomBit	16r080)		(InFrontBit		16r100)		(OutFrontBit		16r200)		(InBackBit		16r400)		(OutBackBit		16r800)		(InAllMask		16r555)		(OutAllMask		16rAAA)	) in: dict.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/16/1999 01:22'!defineMaterialAndLights: dict	"Initialize constants used for materials and lights"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		"MaterialColor stuff"		(AmbientPart 0)		(AmbientRed 0)		(AmbientGreen 1)		(AmbientBlue 2)		(AmbientAlpha 3)		(DiffusePart 4)		(DiffuseRed 4)		(DiffuseGreen 5)		(DiffuseBlue 6)		(DiffuseAlpha 7)		(SpecularPart 8)			(SpecularRed 8)		(SpecularGreen 9)		(SpecularBlue 10)		(SpecularAlpha 11)		(MaterialColorSize 12)	"Size of B3DMaterialColor"		"Material definition"		(EmissionPart 12)		(EmissionRed 12)		(EmissionGreen 13)		(EmissionBlue 14)		(EmissionAlpha 15)		(MaterialShininess 16)		(MaterialSize 17)			"Size of B3DMaterial"		"PrimitiveLight definition"		(PrimLightPosition 12)		(PrimLightPositionX 12)		(PrimLightPositionY 13)		(PrimLightPositionZ 14)		(PrimLightDirection 15)		(PrimLightDirectionX 15)		(PrimLightDirectionY 16)		(PrimLightDirectionZ 17)		(PrimLightAttenuation 17)		(PrimLightAttenuationConstant 17)		(PrimLightAttenuationLinear 18)		(PrimLightAttenuationSquared 19)		(PrimLightFlags 20)		"Spot light stuff"		(SpotLightMinCos 21)		(SpotLightMaxCos 22)		(SpotLightDeltaCos 23)		(SpotLightExponent 24)		(PrimLightSize 32)		"Round up to power of 2"		"Primitive light flags"		(FlagPositional 16r0001)	"Light has an associated position"		(FlagDirectional 16r0002)	"Light has an associated direction"		(FlagAttenuated 16r0004)	"Light is attenuated"		(FlagHasSpot 16r0008)	"Spot values are valid"		(FlagAmbientPart 16r0100)	"Light has ambient part"		(FlagDiffusePart 16r0200)	"Light has diffuse part"		(FlagSpecularPart 16r0400)	"Light has specular part"	) in: dict.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 20:15'!defineMatrixFlags: dict	"Define the flags for analyzing vertices"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		(FlagM44Identity 1)		"Matrix is identity"		(FlagM44NoPerspective 2) "Matrix has no perspective part"		(FlagM44NoTranslation 4) "Matrix has no translation"	) in: dict! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/13/1999 23:41'!definePrimitiveTypes: dict	"Initialize the types of Primitives"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		(PrimTypePoints 1)		(PrimTypeLines 2)		(PrimTypePolygon 3)		(PrimTypeIndexedLines 4)		(PrimTypeIndexedTriangles 5)		(PrimTypeIndexedQuads 6)		(PrimTypeMax 6)	"Max used primitive type"	) in: dict.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/15/1999 00:19'!definePrimitiveVertexIndexes: dict	"Define the indexes for primitive vertices"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		"Full vertex size is 16 to simplify index computation"		(PrimVertexSize 16)		"Position"		(PrimVtxPosition 0)		(PrimVtxPositionX 0)		(PrimVtxPositionY 1)		(PrimVtxPositionZ 2)		"Normal"		(PrimVtxNormal 3)		(PrimVtxNormalX 3)		(PrimVtxNormalY 4)		(PrimVtxNormalZ 5)		"Tex coord"		(PrimVtxTexCoords 6)		(PrimVtxTexCoordU 6)		(PrimVtxTexCoordV 7)		"RasterPos"		(PrimVtxRasterPos 8)		(PrimVtxRasterPosX 8)		(PrimVtxRasterPosY 9)		(PrimVtxRasterPosZ 10)		(PrimVtxRasterPosW 11)		"Color"		(PrimVtxColor32 12)		"Clip flags"		(PrimVtxClipFlags 13)		"Currently unused"		(PrimVtxUnused1 14)		(PrimVtxUnused2 15)	) in: dict! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:34'!defineVBConstants: dict	"Initialize the vertex buffer constants"	"B3DPoolDefiner initPool"	self initFromSpecArray:	#(		"Vertex color tracking flags. These tracks define what part of 		the material in the shader is determined by the vertex color (if given)."		(VBTrackAmbient 1)		"ambient part"		(VBTrackDiffuse 2)		"diffuse part"		(VBTrackSpecular 4)		"specular part"		(VBTrackEmission 8)		"emission part -- i.e. simply add vertex color to output"		(VBNoTrackMask 4294967280) "Mask out the above flags"		"Vertex attribute flags. These flags determine if the primitive		vertices include these attributes. Note that color is not included		below - it is fully specified by the color tracking flags above."		(VBVtxHasNormals 16)	"per vertex normals included"		(VBVtxHasTexCoords 32)	"per vertex tex coords inclueded"		"Shader flags stored in the vertex buffer"		(VBTwoSidedLighting 64)	"Do we shade front and back faces differently?!!"		(VBUseLocalViewer 128)	"Do we use a local viewer model for specular colors?!!"	) in: dict.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:20'!initFromSpecArray: specArray in: aDictionary	specArray do:[:spec|		self initPoolVariable: spec first value: spec last in: aDictionary.	]! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:23'!initPool	"B3DPoolDefiner initPool"	| poolName |	poolName _ self poolName asSymbol.	(Smalltalk includesKey: poolName) ifFalse:[		Smalltalk declare: poolName from: Undeclared.	].	(Smalltalk at: poolName) isNil ifTrue:[		(Smalltalk associationAt: poolName) value: Dictionary new.	].	self initPool: (Smalltalk at: poolName).! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/15/1999 04:14'!initPool: aDictionary	"B3DPoolDefiner initPool"	self defineVBConstants: aDictionary.	self definePrimitiveVertexIndexes: aDictionary.	self defineMatrixFlags: aDictionary.	self defineClipConstants: aDictionary.	self definePrimitiveTypes: aDictionary.	self defineMaterialAndLights: aDictionary.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:23'!initPoolFull	"B3DPoolDefiner initPoolFull"	"Move old stuff to Undeclared and re-initialize the receiver"	| pool |	pool _ Smalltalk at: self poolName asSymbol ifAbsent:[Dictionary new].	pool associationsDo:[:assoc|		Undeclared declare: assoc key from: pool.	].	self initPool.	Undeclared removeUnreferencedKeys.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:20'!initPoolVariable: token value: value in: aDictionary	aDictionary declare: token from: Undeclared.	(aDictionary associationAt: token) value: value.! !!B3DPoolDefiner class methodsFor: 'pool definition' stamp: 'ar 2/8/1999 17:22'!poolName	^#B3DEngineConstants! !B3DPoolDefiner class removeSelector: #definePrimitiveVertexIndexes!B3DPoolDefiner initialize!B3DPoolDefiner class removeSelector: #definePool:!B3DPoolDefiner class removeSelector: #definePool!