'From Squeak 2.5 of August 6, 1999 on 10 September 1999 at 5:52:12 pm'!"Change Set:		ClsRemovals-arDate:			10 September 1999Author:			Andreas RaabFixes two problems with obsoleting classes by zapping the method dictionaries for those classes where it is safe and *not* obsoleting the subclasses of an obsolete superclass (which should be done in #removeFromSystem if wanted). "!!Behavior methodsFor: 'initialize-release' stamp: 'ar 9/10/1999 17:33'!obsolete	"Invalidate and recycle local messages,	e.g., zap the method dictionary if can be done safely."	self canZapMethodDictionary		ifTrue:[ methodDict _ MethodDictionary new ].! !!Behavior methodsFor: 'testing' stamp: 'ar 9/10/1999 17:29'!canZapMethodDictionary	"Return true if it is safe to zap the method dictionary on #obsolete"	^true! !!Class methodsFor: 'initialize-release' stamp: 'ar 9/10/1999 17:34'!obsolete	"Change the receiver and all of its subclasses to an obsolete class."	self == Object 		ifTrue:[^self error:'Object is NOT obsolete'].	name _ 'AnObsolete' , name.	Object class instSize + 1 to: self class instSize do:		[:i | self instVarAt: i put: nil]. "Store nil over class instVars."	classPool _ nil.	sharedPools _ nil.	self class obsolete.	super obsolete.! !!Behavior class methodsFor: 'testing' stamp: 'ar 9/10/1999 17:28'!canZapMethodDictionary	"Return false since zapping the method dictionary of Behavior class or its subclasses will cause the system to fail."	^false! !!Metaclass methodsFor: 'testing' stamp: 'ar 9/10/1999 17:41'!canZapMethodDictionary	"Return true if it is safe to zap the method dictionary on #obsolete"	thisClass == nil		ifTrue:[^true]		ifFalse:[^thisClass canZapMethodDictionary]! !