'From Squeak2.9alpha of 17 July 2000 [latest update: #3274] on 17 January 2001 at 12:15:34 pm'!"Change Set:		renamedMethodsDate:			17 January 2001Author:			Bob ArningFixed case where imported method had a source pointer AND the class to which it belonged had been renamed during the segment load. The first part had been working, but the second condition caused it to fail"!Object subclass: #ImageSegment	instanceVariableNames: 'arrayOfRoots segment outPointers state segmentName fileName endMarker userRootCnt renamedClasses '	classVariableNames: 'BiggestFileNumber RecentlyRenamedClasses '	poolDictionaries: ''	category: 'System-Object Storage'!!ImageSegment methodsFor: 'fileIn/Out' stamp: 'RAA 1/17/2001 12:15'!acceptSingleMethodSource: aDictionary	| oldClassInfo oldClassName ismeta newName actualClass selector |	oldClassInfo _ (aDictionary at: #oldClassName) findTokens: ' '.	"'Class' or 'Class class'"	oldClassName _ oldClassInfo first asSymbol.	ismeta _ oldClassInfo size > 1.	"must use class var since we may not be the same guy who did the initial work"	newName _ RecentlyRenamedClasses ifNil: [		oldClassName	] ifNotNil: [		RecentlyRenamedClasses at: oldClassName ifAbsent: [oldClassName]	].	actualClass _ Smalltalk at: newName.	ismeta ifTrue: [actualClass _ actualClass class].	selector _ actualClass parserClass new parseSelector: (aDictionary at: #methodText).	(actualClass compiledMethodAt: selector ifAbsent: [^self "hosed input"]) 		putSource: (aDictionary at: #methodText)		fromParseNode: nil		class: actualClass		category: (aDictionary at: #category)		withStamp: (aDictionary at: #changeStamp)		inFile: 2		priorMethod: nil.! !!ImageSegment methodsFor: 'fileIn/Out' stamp: 'RAA 1/17/2001 12:09'!comeFullyUpOnReload: smartRefStream	"fix up the objects in the segment that changed size.  An object in the segment is the wrong size for the modern version of the class.  Construct a fake class that is the old size.  Replace the modern class with the old one in outPointers.  Load the segment.  Traverse the instances, making new instances by copying fields, and running conversion messages.  Keep the new instances.  Bulk forward become the old to the new.  Let go of the fake objects and classes.	After the install (below), arrayOfRoots is filled in.  Globalize new classes.  Caller may want to do some special install on certain objects in arrayOfRoots. 	May want to write the segment out to disk in its new form."	| mapFakeClassesToReal ccFixups receiverClasses |	self flag: #bobconv.		RecentlyRenamedClasses _ nil.		"in case old data hanging around"	mapFakeClassesToReal _ smartRefStream reshapedClassesIn: outPointers.		"Dictionary of just the ones that change shape.  Substitute them in outPointers."	ccFixups _ self remapCompactClasses: mapFakeClassesToReal 				refStrm: smartRefStream.	ccFixups ifFalse: [^ self error: 'A class in the file is not compatible'].	endMarker _ segment nextObject. 	"for enumeration of objects"	endMarker == 0 ifTrue: [endMarker _ 'End' clone].	arrayOfRoots _ self loadSegmentFrom: segment outPointers: outPointers.		"Can't use install.  Not ready for rehashSets"	mapFakeClassesToReal isEmpty ifFalse: [		self reshapeClasses: mapFakeClassesToReal refStream: smartRefStream	].	receiverClasses _ self restoreEndianness.		"rehash sets"	smartRefStream checkFatalReshape: receiverClasses.	"Classes in this segment."	arrayOfRoots do: [:importedObject | 		importedObject class class == Metaclass ifTrue: [self declare: importedObject]].	arrayOfRoots do: [:importedObject | 		(importedObject isKindOf: Project) ifTrue: [			importedObject ensureChangeSetNameUnique.			Project addingProject: importedObject.			importedObject restoreReferences]].	arrayOfRoots do: [:importedObject | 		(importedObject respondsTo: #unhibernate) ifTrue: [			importedObject unhibernate].	"ScriptEditors and ViewerFlapTabs"		].	mapFakeClassesToReal isEmpty ifFalse: [		mapFakeClassesToReal keys do: [:aFake | 			aFake indexIfCompact > 0 ifTrue: [aFake becomeUncompact].			aFake removeFromSystemUnlogged].		SystemOrganization removeEmptyCategories].	"^ self"! !!ImageSegment methodsFor: 'fileIn/Out' stamp: 'RAA 1/17/2001 12:06'!declare: classThatIsARoot	| nameOnArrival |	"The class just arrived in this segment.  How fit it into the Smalltalk dictionary?  If it had an association, that was installed with associationDeclareAt:."	nameOnArrival _ classThatIsARoot name.	self declareAndPossiblyRename: classThatIsARoot.	nameOnArrival == classThatIsARoot name ifTrue: [^self].	renamedClasses ifNil: [RecentlyRenamedClasses _ renamedClasses _ Dictionary new].	renamedClasses at: nameOnArrival put: classThatIsARoot name.! !