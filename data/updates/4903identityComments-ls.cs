'From Squeak3.3alpha of 30 January 2002 [latest update: #4889] on 15 June 2002 at 12:49:15 pm'!"Change Set:		identityComments-lsDate:			15 June 2002Author:			Lex SpoonAdds comments to various IdentityFoo classes."!!IdentityBag commentStamp: 'ls 6/15/2002 12:43' prior: 0!Like a Bag, except that items are compared with #== instead of #= .See the comment of IdentitySet for more information.!]style[(88 11 23)f3,f3LIdentitySet Comment;,f3!!IdentityDictionary commentStamp: 'ls 6/15/2002 12:47' prior: 0!Like a Dictionary, except that keys are compared with #== instead of #= .See the comment of IdentitySet for more information.!]style[(95 11 24)f3,f3LIdentitySet Comment;,f3!!IdentitySet commentStamp: '<historical>' prior: 0!The same as a Set, except that items are compared using #== instead of #=.Almost any class named IdentityFoo is the same as Foo except for the way items are compared.  In Foo, #= is used, while in IdentityFoo, #== is used.  That is, identity collections will treat items as the same only if they have the same identity.For example, note that copies of a string are equal:	('abc' copy) = ('abc' copy)but they are not identitcal:	('abc' copy) == ('abc' copy)A regular Set will only include equal objects once:	| aSet |	aSet := Set new.	aSet add: 'abc' copy.	aSet add: 'abc' copy.	aSetAn IdentitySet will include multiple equal objects if they are not identical:	| aSet |	aSet := IdentitySet new.	aSet add: 'abc' copy.	aSet add: 'abc' copy.	aSet!!IdentitySkipList commentStamp: 'ls 6/15/2002 12:47' prior: 0!Like a SkipList, except that elements are compared with #== instead of #= .See the comment of IdentitySet for more information.!]style[(96 11 23)f3,f3LIdentitySet Comment;,f3!