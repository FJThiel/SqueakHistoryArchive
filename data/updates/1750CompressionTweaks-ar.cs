'From Squeak2.6 of 13 October 1999 [latest update: #1748] on 2 January 2000 at 4:39:57 pm'!"Change Set:		CompressionTweaks-arDate:			2 January 2000Author:			Andreas RaabTweaks for compressing non-binary contents (e.g., using Strings instead of ByteArrays)."!!ZipEncoder methodsFor: 'initialize-release' stamp: 'ar 1/2/2000 16:35'!flushBits	"Flush currently unsent bits"	[bitPosition > 0] whileTrue:[		self nextBytePut: (bitBuffer bitAnd: 255).		bitBuffer _ bitBuffer bitShift: -8.		bitPosition _ bitPosition - 8].	bitPosition _ 0.! !!ZipEncoder methodsFor: 'initialize-release' stamp: 'ar 1/2/2000 16:32'!on: aCollectionOrStream	aCollectionOrStream isStream 		ifTrue:[encodedStream _ aCollectionOrStream]		ifFalse:[	encodedStream _ WriteStream on: aCollectionOrStream].	super on: (aCollectionOrStream species new: 4096).	bitPosition _ bitBuffer _ 0.! !!ZipEncoder methodsFor: 'accessing' stamp: 'ar 1/2/2000 16:34'!nextBits: nBits put: value	"Store a value of nBits"	"self assert:[value >= 0 and:[(1 bitShift: nBits) > value]]."	bitBuffer _ bitBuffer bitOr: (value bitShift: bitPosition).	bitPosition _ bitPosition + nBits.	[bitPosition >= 8] whileTrue:[		self nextBytePut: (bitBuffer bitAnd: 255).		bitBuffer _ bitBuffer bitShift: -8.		bitPosition _ bitPosition - 8].! !!ZipEncoder methodsFor: 'accessing' stamp: 'ar 1/2/2000 16:34'!nextBytePut: anObject 	"Primitive. Insert the argument at the next position in the Stream	represented by the receiver. Fail if the collection of this stream is not an	Array or a String. Fail if the stream is positioned at its end, or if the	position is out of bounds in the collection. Fail if the argument is not	of the right type for the collection. Optional. See Object documentation	whatIsAPrimitive."	<primitive: 66>	position >= writeLimit		ifTrue: [^ self pastEndPut: anObject]		ifFalse: 			[position _ position + 1.			^collection byteAt: position put: anObject]! !!ZipEncoder methodsFor: 'private' stamp: 'ar 1/2/2000 16:38'!pastEndPut: anObject	"Flush the current buffer and store the new object at the beginning"	self commit.	^self nextBytePut: anObject asInteger! !!ZipWriteStream methodsFor: 'initialize-release' stamp: 'ar 1/2/2000 16:29'!on: aCollectionOrStream	encoder _ ZipEncoder on: aCollectionOrStream.	super on: (aCollectionOrStream species new).! !!ZipWriteStream methodsFor: 'stored blocks' stamp: 'ar 1/2/2000 16:36'!sendStoredBlock	"Send an uncompressed block"	| inBytes |	inBytes _ blockPosition - blockStart.	encoder flushBits. "Skip to byte boundary"	encoder nextBits: 16 put: inBytes.	encoder nextBits: 16 put: (inBytes bitXor: 16rFFFF).	encoder flushBits.	1 to: inBytes do:[:i|		encoder nextBytePut: (collection byteAt: blockStart+i)].! !!GZipWriteStream methodsFor: 'initialize-release' stamp: 'ar 1/2/2000 16:36'!release	"Write crc and the number of bytes encoded"	super release.	self updateCrc.	crc _ crc bitXor: 16rFFFFFFFF.	encoder flushBits.	0 to: 3 do:[:i| encoder nextBytePut: (crc >> (i*8) bitAnd: 255)].	0 to: 3 do:[:i| encoder nextBytePut: (bytesWritten >> (i*8) bitAnd: 255)].! !