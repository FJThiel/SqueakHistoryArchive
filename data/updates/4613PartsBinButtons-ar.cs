'From Squeak3.2alpha of 2 October 2001 [latest update: #4612] on 15 December 2001 at 2:53:29 pm'!"Change Set:		PartsBinButtons-arDate:			15 December 2001Author:			Andreas RaabThe change set makes all elements in parts bins 'real' buttons, by adding mouse feedback. This change is experimental - if you don't like it take out the #buttonSetup call and look at the post script to see how the existing setup might be removed.Also, because items in the parts bin are now real buttons, they act on mouse ***UP***. This behavior is intentional - while some people might now be used to dragging objects out of parts bins almost every 'normal' user will be most surprised by this behavior if the object looks and feels like a button."!!SimpleButtonMorph methodsFor: 'events' stamp: 'ar 12/12/2001 01:39'!mouseDown: evt	| now dt |	super mouseDown: evt.	now _ Time millisecondClockValue.	oldColor _ self fillStyle. 	actWhen == #buttonDown		ifTrue: [self doButtonAction]		ifFalse: [	self updateVisualState: evt; refreshWorld].	dt _ Time millisecondClockValue - now max: 0.  "Time it took to do"	dt < 200 ifTrue: [(Delay forMilliseconds: 200-dt) wait].	self mouseStillDown: evt.! !!SimpleButtonMorph methodsFor: 'events' stamp: 'ar 12/12/2001 01:39'!mouseUp: evt	super mouseUp: evt.	oldColor ifNotNil:		["if oldColor nil, it signals that mouse had not gone DOWN		inside me, e.g. because of a cmd-drag; in this case we want		to avoid triggering the action!!"		self color: oldColor.		oldColor _ nil.		(actWhen == #buttonUp and: [self containsPoint: evt cursorPoint])			ifTrue: [self doButtonAction]].! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/12/2001 01:38'!borderInset	self borderStyle: (BorderStyle inset width: 2).! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/12/2001 01:38'!borderNormal	self borderStyle: (BorderStyle width: 2 color: Color transparent).! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/12/2001 01:41'!borderRaised	self borderStyle: (BorderStyle raised width: 2).! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/15/2001 14:43'!buttonSetup	self actWhen: #buttonUp.	self cornerStyle: #rounded.	self borderNormal.	self on: #mouseEnter send: #borderRaised to: self.	self on: #mouseLeave send: #borderNormal to: self.	self on: #mouseLeaveDragging send: #borderNormal to: self.	self on: #mouseDown send: #borderInset to: self.	self on: #mouseUp send: #borderRaised to: self.! !!IconicButton methodsFor: 'initialization' stamp: 'ar 12/15/2001 14:43'!initializeWithThumbnail: aThumbnail withLabel: aLabel andSend: aSelector to: aReceiver 		"Initialize the receiver to show aThumbnail on its face, giving it the label supplied and arranging for it, when the button goes down on it, to obtain a new morph by sending the supplied selector to the supplied receiver"	| labeledItem  |	labeledItem _ AlignmentMorph newColumn beTransparent.	labeledItem borderWidth: 0.	labeledItem addMorph: aThumbnail.	labeledItem addMorphBack: (Morph new extent: (4@4)) beTransparent.	labeledItem addMorphBack: (BorderedStringMorph contents: aLabel font: (StrikeFont familyName: 'ComicBold' size: 15)).	self		beTransparent;		labelGraphic: labeledItem imageForm;		borderWidth: 0;		target: aReceiver;		actionSelector: #launchPartVia:label:;		arguments: {aSelector. aLabel};		actWhen: #buttonDown.	self buttonSetup. "Make us a real button"! !"Postscript:Give all existing iconic buttons in parts bins a button setup."World flapTabs do:[:tab|	(tab referent isKindOf: PartsBin) ifTrue:[		tab referent submorphsDo:[:sm|			(sm isKindOf: IconicButton) ifTrue:[sm buttonSetup].		].	].].!