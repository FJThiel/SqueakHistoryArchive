'From Squeak3.2alpha of 2 October 2001 [latest update: #4603] on 13 December 2001 at 9:36:33 pm'!"Change Set:		LessFullGCs-arDate:			12 December 2001Author:			Andreas RaabRemove the need for garbage collections in two cases.Case #1: File operations required (possibly full) garbage collections on certain operations. These are unneeded if the file registry does not contain a file with the same name. In this case, the failure to perform the operation cannot be due to a dangling file handle and thus we don't need a GC.Case #2: Socket creation required a full GC if the creation failed. This can only happen if the number of open sockets is above a critical threshold (and therefore exceed OS resources) and some sockets are dangling (and could be used to free up resources). A registry threshold can prevent execution of a full GC until we have at least a certain number of sockets open."!Object subclass: #Socket	instanceVariableNames: 'semaphore socketHandle readSemaphore writeSemaphore primitiveOnlySupportsOneSemaphore '	classVariableNames: 'Connected DeadServer InvalidSocket OtherEndClosed Registry RegistryThreshold TCPSocketType ThisEndClosed UDPSocketType Unconnected WaitingForConnection '	poolDictionaries: ''	category: 'Network-Kernel'!!FileDirectory methodsFor: 'file operations' stamp: 'ar 12/12/2001 15:56'!deleteFileNamed: localFileName ifAbsent: failBlock	"Delete the file of the given name if it exists, else evaluate failBlock.	If the first deletion attempt fails do a GC to force finalization of any lost references. ar 3/21/98 17:53"	| fullName |	fullName _ self fullNameFor: localFileName.	(StandardFileStream 		retryWithGC:[self primDeleteFileNamed: (self fullNameFor: localFileName)]		until:[:result| result notNil]		forFileNamed: fullName) == nil			ifTrue: [^failBlock value].! !!FileDirectory methodsFor: 'file operations' stamp: 'ar 12/12/2001 15:57'!rename: oldFileName toBe: newFileName	| selection oldName newName |	"Rename the file of the given name to the new name. Fail if there is no file of the old name or if there is an existing file with the new name."	"Modified for retry after GC ar 3/21/98 18:09"	oldName _ self fullNameFor: oldFileName.	newName _ self fullNameFor: newFileName.	(StandardFileStream 		retryWithGC:[self primRename: oldName to: newName]		until:[:result| result notNil]		forFileNamed: oldName) ~~ nil ifTrue:[^self].	(self fileExists: oldFileName) ifFalse:[		^self error:'Attempt to rename a non-existent file'.	].	(self fileExists: newFileName) ifTrue:[		selection _ (PopUpMenu labels:'delete old versioncancel')				startUpWithCaption: 'Trying to rename a file to be', newFileName , 'and it already exists.'.		selection = 1 ifTrue:			[self deleteFileNamed: newFileName.			^ self rename: oldFileName toBe: newFileName]].	^self error:'Failed to rename file'.! !!Socket class methodsFor: 'class initialization' stamp: 'ar 12/12/2001 19:12'!initialize	"Socket initialize"	"Socket Types"	TCPSocketType _ 0.	UDPSocketType _ 1.	"Socket Status Values"	InvalidSocket _ -1.	Unconnected _ 0.	WaitingForConnection _ 1.	Connected _ 2.	OtherEndClosed _ 3.	ThisEndClosed _ 4.	RegistryThreshold _ 100. "# of sockets"! !!Socket class methodsFor: 'registry' stamp: 'ar 12/12/2001 19:12'!registryThreshold	"Return the registry threshold above which socket creation may fail due to too many already open sockets. If the threshold is reached, a full GC will be issued if the creation of a socket fails."	^RegistryThreshold! !!Socket class methodsFor: 'registry' stamp: 'ar 12/12/2001 19:12'!registryThreshold: aNumber	"Return the registry threshold above which socket creation may fail due to too many already open sockets. If the threshold is reached, a full GC will be issued if the creation of a socket fails."	RegistryThreshold _ aNumber! !!StandardFileStream methodsFor: 'open/close' stamp: 'ar 12/12/2001 15:58'!open: fileName forWrite: writeMode 	"Open the file with the given name. If writeMode is true, allow writing, otherwise open the file in read-only mode."	"Changed to do a GC and retry before failing ar 3/21/98 17:25"	fileID _ StandardFileStream retryWithGC:[self primOpen: fileName writable: writeMode] 					until:[:id| id notNil] 					forFileNamed: fileName.	fileID ifNil: [^ nil].  "allows sender to detect failure"	self register.	name _ fileName.	rwmode _ writeMode.	buffer1 _ String new: 1.! !!StandardFileStream class methodsFor: 'registry' stamp: 'ar 12/12/2001 15:55'!retryWithGC: execBlock until: testBlock forFileNamed: fullName	"Re-implemented to only force GC if a file with the given name exists"	| blockValue foundIt |	blockValue := execBlock value.	(testBlock value: blockValue) ifTrue:[^blockValue].	"See if we have a file with the given name"	foundIt _ Registry keys "hold on strongly for now" 		anySatisfy:[:file| file name sameAs: fullName].	foundIt ifFalse:[^blockValue].	Smalltalk garbageCollectMost.	blockValue := execBlock value.	(testBlock value: blockValue) ifTrue:[^blockValue].	Smalltalk garbageCollect.	^execBlock value.! !!WeakRegistry methodsFor: 'accessing' stamp: 'ar 12/12/2001 16:00'!keys	^self protected:[		Array streamContents:[:s| valueDictionary keysDo:[:key| s nextPut: key]]].! !Socket initialize!