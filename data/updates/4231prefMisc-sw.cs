'From Squeak3.1alpha of 28 February 2001 [latest update: #4230] on 4 August 2001 at 2:49:35 am'!"Change Set:		prefMisc-swDate:			4 August 2001Author:			Scott Wallace1. Alphabetizes the preferences in the Search Results category of a preferences panel.2. Makes the balloon help over the right-hand portion of a preference item in a Preferences panel (where, if you click, you get a menu relating to the particular item) tell you of the menu possibility.3. Show the menu cursor when the mouse is over a menu-invoking area of a preference-panel entry.  (Moved a couple of methods of ScrollBar up to Morph in support of this.)4. Fixes a bug that had made the Search function not work at all when a Preferences panel is seen in an mvc project.Caution: Update does not affect pre-existing preference panels, only newly-launched ones."!!Morph methodsFor: 'other events' stamp: 'sw 8/1/2001 14:08'!menuButtonMouseEnter: event	"The mouse entered a menu-button area; show the menu cursor temporarily"	event hand showTemporaryCursor: Cursor menu! !!Morph methodsFor: 'other events' stamp: 'sw 8/1/2001 14:09'!menuButtonMouseLeave: event	"The mouse left a menu-button area; restore standard cursor"	event hand showTemporaryCursor: nil! !!Preference methodsFor: 'menu' stamp: 'sw 8/1/2001 14:15'!offerPreferenceNameMenu: aPanel with: ignored1 in: ignored2	"the user clicked on a preference name -- put up a menu"	| aMenu |	ActiveHand showTemporaryCursor: nil.	aMenu _ MenuMorph new defaultTarget: self.	aMenu addTitle: name.	(Preferences okayToChangeProjectLocalnessOf: name) ifTrue:		[aMenu addUpdating: #isProjectLocalString target: self action: #toggleProjectLocalness.		aMenu balloonTextForLastItem: 'Some preferences are best applied uniformly to all projects, and others are best set by each individual project.  If this item is checked, then this preference will be printed in bold and will have a separate value for each project'].	aMenu add: 'browse senders' target: Smalltalk  selector: #browseAllCallsOn: argument: name.	aMenu balloonTextForLastItem: 'This will open a method-list browser on all methods that the send the preference "', name, '".'. 	aMenu add: 'show category...' target: aPanel selector: #findCategoryFromPreference: argument: name.	aMenu balloonTextForLastItem: 'Allows you to find out which category, or categories, this preference belongs to.'.	Smalltalk isMorphic ifTrue:		[aMenu add: 'hand me a button for this preference' target: self selector: #tearOffButton.		aMenu balloonTextForLastItem: 'Will give you a button that governs this preference, which you may deposit wherever you wish'].	aMenu add: 'copy this name to clipboard' target: self selector: #copyName.	aMenu balloonTextForLastItem: 'Copy the name of the preference to the text clipboard, so that you can paste into code somewhere'.	aMenu popUpInWorld! !!Preference methodsFor: 'button' stamp: 'sw 8/1/2001 14:19'!representativeButtonWithColor: aColor inPanel: aPreferencesPanel	"Return a button that controls the setting of prefSymbol.  It will keep up to date even if the preference value is changed in a different place"	| outerButton aButton str miniWrapper |		outerButton _ AlignmentMorph newRow height: 24.	outerButton color:  (aColor ifNil: [Color r: 0.645 g: 1.0 b: 1.0]).	outerButton hResizing: (aPreferencesPanel ifNil: [#shrinkWrap] ifNotNil: [#spaceFill]).	outerButton vResizing: #shrinkWrap.	outerButton addMorph: (aButton _ UpdatingThreePhaseButtonMorph checkBox).	aButton		target: self;		actionSelector: #togglePreferenceValue;		getSelector: #preferenceValue.	outerButton addTransparentSpacerOfSize: (2 @ 0).	str _ StringMorph contents: name font: (StrikeFont familyName: 'NewYork' size: 12).	localToProject ifTrue:		[str emphasis: 1].	miniWrapper _ AlignmentMorph newRow hResizing: #shrinkWrap; vResizing: #shrinkWrap.	miniWrapper beTransparent addMorphBack: str lock.	aPreferencesPanel		ifNotNil:  "We're in a Preferences panel"			[miniWrapper on: #mouseDown send: #offerPreferenceNameMenu:with:in: to: self withValue: aPreferencesPanel.			miniWrapper on: #mouseEnter send: #menuButtonMouseEnter: to: miniWrapper.			miniWrapper on: #mouseLeave send: #menuButtonMouseLeave: to: miniWrapper.			miniWrapper setBalloonText: 'Click here for a menu of options regarding this preference.  Click on the checkbox to the left to toggle the setting of this preference']		ifNil:  "We're a naked button, not in a panel"			[miniWrapper setBalloonText: helpString; setProperty: #balloonTarget toValue: aButton].	outerButton addMorphBack: miniWrapper.	aButton setBalloonText: helpString.	^ outerButton	"self currentHand attachMorph: (Preferences buttonRepresenting: #balloonHelpEnabled"! !!PreferencesPanel methodsFor: 'initialization' stamp: 'sw 8/1/2001 13:50'!findPreferencesMatching: incomingTextOrString	"find all preferences matching incomingTextOrString"	| result aList aPalette controlPage |	result _ incomingTextOrString asString asLowercase.	result _ result asLowercase withBlanksTrimmed.	result isEmptyOrNil ifTrue: [^ self].	aList _ Preferences allPreferenceObjects select:		[:aPreference | 			(aPreference name includesSubstring: result caseSensitive: false) or:				[aPreference helpString includesSubstring: result caseSensitive: false]].	aPalette _ (self containingWindow ifNil: [^ self]) findDeeplyA: TabbedPalette.	aPalette ifNil: [^ self].	aPalette selectTabNamed:  'search results'.	aPalette currentPage ifNil: [^ self].  "bkwd compat"	controlPage _ aPalette currentPage.	controlPage removeAllMorphs.	controlPage addMorph: (StringMorph contents: ('Preferences matching "', self searchString, '"') font: Preferences standardButtonFont).	aList _ aList asSortedCollection:		[:a :b | a name < b name].	aList do:		[:aPreference |			controlPage addMorphBack: (aPreference representativeButtonWithColor: nil inPanel: self)].	aPalette world startSteppingSubmorphsOf: aPalette! !!PreferencesPanel methodsFor: 'find' stamp: 'sw 8/4/2001 02:47'!containingWindow	"Answer the window in which the receiver is seen"	^ super containingWindow ifNil:		[self currentWorld]! !ScrollBar removeSelector: #menuButtonMouseEnter:!ScrollBar removeSelector: #menuButtonMouseLeave:!