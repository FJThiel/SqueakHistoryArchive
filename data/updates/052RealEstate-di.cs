'From Squeak 2.0 BETA of May 8, 1998 on 20 May 1998 at 9:34:57 am'!"Change Set:		RealEstateDate:			19 May 1998Author:			Dan IngallsAdded automatic placement of collapsed and expanded morphic windows.For now, this just uses the same old code that MVC does.Fixed bug adding a category to a metaclass in the browser.Fixed bug when compiler wants to insert a message in code." !!Browser methodsFor: 'message category functions' stamp: 'di 5/19/1998 23:58'!addCategory	"Prompt for a new category name and add it before the	current selection, or at the end if no current selection"	| oldIndex newName |	self okToChange ifFalse: [^ self].	classListIndex = 0 ifTrue: [^ self].	oldIndex _ messageCategoryListIndex.	newName _ self		request: 'Please type new category name'		initialAnswer: 'category name'.	newName isEmpty		ifTrue: [^ self]		ifFalse: [newName _ newName asSymbol].	self classOrMetaClassOrganizer		addCategory: newName		before: (messageCategoryListIndex = 0				ifTrue: [nil]				ifFalse: [self selectedMessageCategoryName]).	self changed: #messageCategoryList.	self messageCategoryListIndex:		(oldIndex = 0			ifTrue: [self classOrMetaClassOrganizer categories size]			ifFalse: [oldIndex]).	self changed: #messageCategoryList.! !!ParagraphEditor methodsFor: 'new selection' stamp: 'di 5/20/1998 08:31'!notify: aString at: anInteger in: aStream 	"The compilation of text failed. The syntax error is noted as the argument, 	aString. Insert it in the text at starting character position anInteger."	self insertAndSelect: aString at: (anInteger max: 1)! !!PluggableTextMorph methodsFor: 'interactive error protocol' stamp: 'di 5/20/1998 08:32'!notify: aString at: anInteger in: aStream	^ textMorph editor notify: aString at: anInteger in: aStream! !!RealEstateAgent class methodsFor: 'as yet unclassified' stamp: 'di 5/20/1998 08:47'!assignCollapsePointFor: aSSView	"Offer up a location along the left edge of the screen for a collapsed SSView.	Make sure it doesn't overlap any other collapsed frames."	| grid otherFrames y free topLeft |	grid _ 24.  "should be mult of 8, since manual move is gridded by 8"	otherFrames _ Smalltalk isMorphic		ifTrue: [(SystemWindow windowsIn: World satisfying: [:w | true])					collect: [:w | w collapsedFrame]					thenSelect: [:rect | rect notNil]]		ifFalse: [ScheduledControllers scheduledWindowControllers					collect: [:aController | aController view collapsedFrame]					thenSelect: [:rect | rect notNil]].	y _ 0.	[(y _ y + grid) <= (Display height - grid)]		whileTrue:		[topLeft _ 0@y.		free _ true.		otherFrames do: [:w | free _ free & (topLeft ~= w topLeft)].		free ifTrue: [^ topLeft]].	"If all else fails..."	^ 0 @ 0! !!RealEstateAgent class methodsFor: 'as yet unclassified' stamp: 'di 5/20/1998 09:18'!strictlyStaggeredInitialFrameFor: aStandardSystemView	"This method implements a staggered window placement policy that I like.	Basically it provides for up to 4 windows, staggered from each of the 4 corners.	The windows are staggered so that there will always be a corner visible.	"	| allowedArea grid initialFrame otherFrames cornerSel corner delta putativeCorner free maxLevel |	allowedArea _ ScrollBarSetback @ ScreenTopSetback					corner: Display usableArea bottomRight.	"Number to be staggered at each corner (less on small screens)"	maxLevel _ allowedArea area > 300000 ifTrue: [3] ifFalse: [2].	"Amount by which to stagger (less on small screens)"	grid _ allowedArea area > 500000 ifTrue: [40] ifFalse: [20].	initialFrame _ 0@0 extent: ((aStandardSystemView initialExtent							"min: (allowedArea extent - (grid*(maxLevel+1*2) + (grid//2))))							min: 600@400")).	otherFrames _ Smalltalk isMorphic		ifTrue: [(SystemWindow windowsIn: World satisfying: [:w | w isCollapsed not])					collect: [:w | w bounds]]		ifFalse: [ScheduledControllers scheduledWindowControllers				select: [:aController | aController view ~~ nil]				thenCollect: [:aController | aController view isCollapsed								ifTrue: [aController view expandedFrame]								ifFalse: [aController view displayBox]]].	0 to: maxLevel do:		[:level | 		1 to: 4 do:			[:ci | cornerSel _ #(topLeft topRight bottomRight bottomLeft) at: ci.			corner _ allowedArea perform: cornerSel.			"The extra grid//2 in delta helps to keep title tabs distinct"			delta _ (maxLevel-level*grid+(grid//2)) @ (level*grid).			1 to: ci-1 do: [:i | delta _ delta rotateBy: #right centerAt: 0@0]. "slow way"			putativeCorner _ corner + delta.			free _ true.			otherFrames do:				[:w |				free _ free & ((w perform: cornerSel) ~= putativeCorner)].			free ifTrue:				[^ (initialFrame align: (initialFrame perform: cornerSel)								with: putativeCorner)						 squishedWithin: allowedArea]]].	"If all else fails..."	^ (ScrollBarSetback @ ScreenTopSetback extent: initialFrame extent)		squishedWithin: allowedArea! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/20/1998 09:14'!initialExtent	^ model initialExtent! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/20/1998 09:14'!openInMVC	^ self openInMVCExtent: self initialExtent! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/20/1998 09:28'!openInWorld	"This msg and its callees result in the window being activeOnlyOnTop"	Smalltalk isMorphic ifFalse: [^ self openInMVC].	self bounds: (RealEstateAgent initialFrameFor: self).	World addMorph: self.	self activate! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/20/1998 09:28'!openInWorldExtent: extent	"This msg and its callees result in the window being activeOnlyOnTop"	Smalltalk isMorphic ifFalse: [^ self openInMVCExtent: extent].	self position: (RealEstateAgent initialFrameFor: self) topLeft; extent: extent.	World addMorph: self.	self activate! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/20/1998 08:52'!collapseOrExpand	isCollapsed	ifTrue:		["Expand -- restore panes to morphics structure"		isCollapsed _ false.		paneMorphs reverseDo: [:m | self addMorph: m].		super bounds: fullFrame.		self activate "-- mainly for findWindow"]	ifFalse:		["Collapse -- remove panes from morphics structure"		isCollapsed _ true.		paneMorphs do: [:m | m delete; releaseCachedState].		collapsedFrame			ifNil:	[self extent: (label width + 50) @ (self labelHeight + 2).					self position: (RealEstateAgent assignCollapsePointFor: self)]			ifNotNil: [super bounds: collapsedFrame]]! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/20/1998 08:25'!collapsedFrame	^ collapsedFrame! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/20/1998 08:25'!fullFrame	^ fullFrame! !StringHolderController removeSelector: #insertAndSelect:at:!StringHolderController removeSelector: #notify:at:in:!SystemWindow class removeSelector: #assignFrameFor:avoiding:!SystemWindow class removeSelector: #assignCollapsePointFor:avoiding:!