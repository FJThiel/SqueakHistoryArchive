'From Squeak3.2alpha of 3 October 2001 [latest update: #4606] on 13 December 2001 at 6:05:12 pm'!"Change Set:		tileFixes-swDate:			13 December 2001Author:			Scott WallaceA host of bug fixes relating to 'classic' tile-scripting.   Some of these bugs have been with us for quite a long time!!¥ Makes color:sees: not fail if the object being tested is not in the world.¥ Fixes the long-standing bug that had invited certain spurious and error-producing drops (which would always eventually lead to trouble,) into CompoundTileMorphs.¥ Fixes the long-standing bug that had often made Scriptor panes not open up a tall-enough space for phrases they are inviting in -- most conspicuously seen in  a TEST pane, when the value being dragged over has just been grabbed from a Viewer.¥ Fixes the long-standing bug that could make a TEST pane sometimes not accept the drop of a perfectly reasonable boolean-valued phrase.¥ Fixes a bug revealed in update 4604: the position adjustment when setting a new form into a SketchMorph was not taking flexing into account.  The result was that the flex could be broken (i.e. flexee no longer had its position in local coords) and things would not come right until you picked the object up.¥ Fixes the long-standing bug that a coerced-to-boolean slot retrieval in a TEST pane, if subsequently removed and then dropped on the desktop, would spawn a new scriptor around it. ¥ Temporarily reverts the handling of action-when-mouse-is-up imparted by 4572DragVsClick to ScriptEdtiorMorph.step, which was producing a serious problem in newly-launched CompoundTileMorphs.¥ Adds some limited interoperatbility between plugin and standard images regarding types in TilePadMorph, eliminating a kind of horrible problem that could be seen when loading an etoy project created under the plugin-in into a standard image and then trying to do some further tile editing in it."!!CompoundTileMorph methodsFor: 'mouse' stamp: 'sw 12/13/2001 16:42'!wantsDroppedMorph: aMorph event: evt	"Removing this method entirely would be okay someday"	^ false"	^ (aMorph isKindOf: TileMorph) or:	   [(aMorph isKindOf: ScriptEditorMorph) or:	   [(aMorph isKindOf: CompoundTileMorph) or:	   [aMorph isKindOf: CommandTilesMorph]]]"! !!HaloMorph methodsFor: 'handles' stamp: 'sw 12/13/2001 14:07'!addCollapseHandle: handleSpec	"Add the collapse handle, with all of its event handlers set up, unless the target's owner is not the world or the hand."	| collapseHandle |	(target owner notNil "nil happens, amazingly"			and: [target owner isWorldOrHandMorph])		ifFalse: [^ self].	collapseHandle _ self addHandle: handleSpec		on: #mouseDown send: #mouseDownInCollapseHandle:with: to: self.	collapseHandle on: #mouseUp send: #maybeCollapse:with: to: self.	collapseHandle on: #mouseMove send: #setDismissColor:with: to: self! !!PhraseTileMorph methodsFor: 'all' stamp: 'sw 12/13/2001 17:41'!rowOfRightTypeFor: aLayoutMorph forActor: aPlayer	"Answer a phrase of the right type for the putative container"	| aTemporaryViewer aPhrase |	aLayoutMorph demandsBoolean ifTrue:		[self isBoolean ifTrue: [^ self].		aTemporaryViewer _ CategoryViewer new invisiblySetPlayer: aPlayer.		aPhrase _ aTemporaryViewer booleanPhraseFromPhrase: self.		aPhrase justGrabbedFromViewer: false.		^ aPhrase].	^ self! !!Player methodsFor: 'misc' stamp: 'sw 12/13/2001 14:34'!color: myColor sees: externalColor	"Answer whether any pixel of one color on my costume is coincident with any pixel of a second color in its surround.  Returns false if the costume is not currently in the world"	self costume isInWorld ifFalse: [^ false].	^ self costume color: myColor sees: externalColor! !!ScriptEditorMorph methodsFor: 'dropping/grabbing' stamp: 'sw 12/13/2001 17:02'!step	"The fundamental heart of script-editor layout, by Dan Ingalls in fall 1997, though many hands have touched it since."	| hand insertion i space1 d space2 insHt nxtHt prevBot ht2 c1 c2 ii where |	hand _ handWithTile ifNil: [self primaryHand].	(hand lastEvent redButtonPressed and: [(self hasOwner: hand) not] and: [hand submorphCount > 0])		ifTrue:			[insertion _ hand firstSubmorph renderedMorph.			insHt _ insertion fullBounds height.			self removeSpaces.			where _ self globalPointToLocal: hand position"insertion fullBounds topLeft".			i _ (ii _ self indexOfMorphAbove: where) min: submorphs size-1.			prevBot _ i <= 0 ifTrue: [(self innerBounds) top]							ifFalse: [(self submorphs at: i) bottom].			nxtHt _ (submorphs isEmpty				ifTrue: [insertion]				ifFalse: [self submorphs at: i+1]) height.			d _ ii > i ifTrue: [nxtHt "for consistent behavior at bottom"]					ifFalse: [0 max: (where y - prevBot min: nxtHt)].			"Top and bottom spacer heights cause continuous motion..."			c1 _ Color green.  c2 _ Color transparent.			ht2 _ d*insHt//nxtHt.			space1 _ Morph newBounds: (0@0 extent: 30@(insHt-ht2))                                        color: ((insHt-ht2) > (insHt//2+1) ifTrue: [c1] ifFalse: [c2]).			self privateAddMorph: space1 atIndex: (i+1 max: 1).			space2 _ Morph newBounds: (0@0 extent: 30@ht2)                                        color: (ht2 > (insHt//2+1) ifTrue: [c1] ifFalse: [c2]).			self privateAddMorph: space2 atIndex: (i+3 min: submorphs size+1)]		ifFalse:			[self stopStepping.			self removeSpaces]"NB: Andreas in 4572DragVsClick removed the red-button-pressed requirement up near the top. but the prior code has temporarily been restored here unless/until someone fixes the problem of multiple inappropriate green boxes being put up when the addition of a TEST/YES/NO complex has left the ScriptEditors therein inappropriately stepping"! !!BooleanScriptEditor methodsFor: 'as yet unclassified' stamp: 'sw 12/13/2001 17:34'!wantsDroppedMorph: aMorph event: evt	"Answer whether the receiver would be interested in accepting the morph"	(submorphs detect: [:m | m isKindOf: PhraseTileMorph] ifNone: [nil])		ifNotNil: [^ false]. "Avoids unintended destructive drop"	^ (aMorph isKindOf: PhraseTileMorph) and: [(#(Command Unknown) includes: aMorph resultType capitalized) not]! !!SketchMorph methodsFor: 'accessing' stamp: 'sw 12/13/2001 12:10'!form: aForm	"Set the receiver's form"	| oldForm topRenderer |	oldForm _ originalForm.	(self hasProperty: #baseGraphic) ifFalse: [self setProperty: #baseGraphic toValue: aForm].	originalForm _ aForm.	self rotationCenter: 0.5@0.5.	self layoutChanged.	topRenderer _ self topRendererOrSelf.	oldForm ifNotNil: [topRenderer position: topRenderer position + (oldForm extent - aForm extent // 2)].! !!TilePadMorph methodsFor: 'mouse' stamp: 'sw 12/13/2001 13:22'!canAccept: aMorph	"Answer whether this pad can accept the given morph"	((aMorph isKindOf: PhraseTileMorph) or: [aMorph isKindOf: TileMorph]) 		ifTrue:			[^ (aMorph resultType capitalized = self type capitalized "for bkwd compat") "or:				[(aMorph resultType == #unknown) and: [type == #Player]]"].	^ false! !