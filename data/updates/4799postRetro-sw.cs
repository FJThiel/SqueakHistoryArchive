'From Squeak3.2gamma of 5 February 2002 [latest update: #4744] on 7 March 2002 at 1:08:31 am'!"Change Set:		postRetro-swDate:			7 March 2002Author:			Scott WallaceFixups for 3.2 for three methods retrofitted from update 4769 of 3.3a that still had some 3.3a-dependent code in them."!!Object methodsFor: 'viewer' stamp: 'sw 3/7/2002 01:01'!uniqueNameForReferenceFrom: proposedName	"Answer a satisfactory symbol, similar to the proposedName but obeying the rules, to represent the receiver"	| aName nameSym stem knownClassVars |	proposedName = self uniqueNameForReferenceOrNil 		ifTrue: [^ proposedName].  "No change"	stem _ proposedName select: [:ch | ch isLetter or: [ch isDigit]].	stem size == 0 ifTrue: [stem _ 'A'].	stem first isLetter ifFalse:		[stem _ 'A', stem].	stem _ stem capitalized.	knownClassVars _ ScriptingSystem allKnownClassVariableNames.	aName _ Utilities keyLike: stem satisfying:		[:jinaLake |			nameSym _ jinaLake asSymbol.			 (References includesKey:  nameSym) not and:				[(knownClassVars includes: nameSym) not]].	^ aName asSymbol! !!MessageSend methodsFor: 'evaluating' stamp: 'mir 7/25/2000 19:11'!value	^arguments isNil		ifTrue: [receiver perform: selector]		ifFalse: [receiver perform: selector withArguments: arguments]! !!Morph methodsFor: 'naming' stamp: 'sw 3/7/2002 00:24'!renameTo: aName	"Set Player name in costume.  Update Viewers.  Fix all tiles (old style).  fix References.  New tiles: recompile, and recreate open scripts.  If coming in from disk, and have name conflict, References will already have new name."	| aPresenter putInViewer aPasteUp renderer oldKey assoc classes oldName |	oldName _ self knownName.	(renderer _ self topRendererOrSelf) setNameTo: aName.	putInViewer _ false.	((aPresenter _ self presenter) isNil or: [renderer player isNil]) ifFalse:		[putInViewer _ aPresenter currentlyViewing: renderer player.		putInViewer ifTrue:			[renderer player viewerFlapTab hibernate]].  "empty it temporarily"	(aPasteUp _ self topPasteUp) ifNotNil:		[aPasteUp allTileScriptingElements do: [:m | m bringUpToDate]].	"Fix References dictionary.  See restoreReferences to know why oldKey is 		already aName, but oldName is the old name."	oldKey _ References keyAtIdentityValue: renderer player ifAbsent: [nil].	oldKey ifNotNil:		[assoc _ References associationAt: oldKey.		oldKey = aName ifFalse:			["normal rename"			assoc key: (renderer player uniqueNameForReferenceFrom: aName).			References rehash]].	putInViewer ifTrue: [aPresenter viewMorph: self].	"recreate my viewer"	oldKey ifNil: [^ aName].	"Force strings in tiles to be remade with new name.  New tiles only."	Preferences universalTiles ifFalse: [^ aName].	classes _ (Smalltalk allCallsOn: assoc) collect: [ :each | each classSymbol].	(classes asSet) do: [:clsName |		(Smalltalk at: clsName) replaceSilently: oldName to: aName].		"replace in text body of all methods.  Can be wrong!!"	"Redo the tiles that are showing.  This is also done in caller in unhibernate."	aPasteUp ifNotNil: [		aPasteUp allTileScriptingElements do: [:mm | "just ScriptEditorMorphs".			(mm isKindOf: ScriptEditorMorph) ifTrue:				[((mm playerScripted class compiledMethodAt: mm scriptName) hasLiteral: assoc)					ifTrue: [mm hibernate; unhibernate]]]].	^ aName! !