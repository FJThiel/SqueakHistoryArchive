'From Squeak2.8alpha of 19 January 2000 [latest update: #2204] on 24 May 2000 at 12:22:37 pm'!!HandMorph methodsFor: 'grabbing/dropping' stamp: 'di 11/28/1999 10:12'!grabMorph: aMorph	"Grab the given morph (i.e., add it to this hand and remove it from its current owner) without changing its position. This is used to pick up a morph under the hand's current position, versus attachMorph: which is used to pick up a morph that may not be near this hand."	| editor localPt m trans morphToGrab pos |	m _ aMorph.	formerOwner _ m owner.	formerPosition _ m position.	m isTileLike ifTrue:		[editor _ m topEditor].	(m owner isKindOf: DropShadowMorph) ifTrue:		[self grabMorph: m owner.		^ editor ifNotNil: [editor scriptEdited]].	"Check if the morph will keep it's transform while grabbed"	m keepsTransform		ifTrue:[localPt _ self position]		ifFalse:[localPt _ m pointFromWorld: self position].	m _ m aboutToBeGrabbedBy: self.	m == nil ifTrue: [^ self].	(formerOwner == nil		or: [m keepsTransform		or: [(trans _ formerOwner transformFromWorld) isPureTranslation]]) 		ifTrue: [m position: self position + (m position - localPt).				morphToGrab _ m.				addedFlexAtGrab _ false]		ifFalse: ["Morph was in a flexed environment.  Flex it in the hand."				pos _ m position.				morphToGrab _ m addFlexShell transform: trans asMorphicTransform.				m position: pos.  "revert offset from addFlexShell"				morphToGrab transform: (trans withOffset: (trans offset + (trans localPointToGlobal: pos + targetOffset) - self position)).				addedFlexAtGrab _ true].	gridOn ifTrue: [morphToGrab position: (morphToGrab position grid: grid)].	self addMorphBack: morphToGrab.	editor ifNotNil: [editor scriptEdited]! !!PluggableListMorph methodsFor: 'drag and drop' stamp: 'svp 5/24/2000 12:16'!drag: evt itemMorph: itemMorph 	| ddm |	evt hand hasSubmorphs		ifTrue: [^self].	itemMorph ~= self selection ifTrue: [self setSelectedMorph: itemMorph].	ddm _ TransferMorph withPassenger: (self model dragPassengerFor: itemMorph inMorph: self) from: self.	ddm dragTransferType: (self model dragTransferTypeForMorph: self).	Preferences dragNDropWithAnimation			ifTrue: [self model dragAnimationFor: itemMorph transferMorph: ddm].	evt hand grabMorph: ddm! !!TransferMorph methodsFor: 'dropping/grabbing' stamp: 'svp 5/24/2000 12:16'!aboutToBeGrabbedBy: aHand 	"The receiver is being grabbed by a hand.                        	Perform necessary adjustments (if any) and return the actual morph    	  that should be added to the hand."	"Since this morph has been initialized automatically with bounds origin   	  0@0, we have to move it to aHand position."	self align: self center with: aHand position.	self draggedMorph.	self align: self center with: aHand position.! !