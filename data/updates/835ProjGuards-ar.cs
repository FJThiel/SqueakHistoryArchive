'From Squeak 2.3 of January 14, 1999 on 19 April 1999 at 4:41:21 am'!"Change Set:		ProjGuards-arDate:			19 April 1999Author:			Andreas RaabThis change set adds project 'guards'. Project guards are queried if it is #okayToEnterProject before the project is actually entered. An example of use is Wonderland requiring 3D primitive support."!Model subclass: #Project	instanceVariableNames: 'world changeSet transcript parentProject previousProject displayDepth activeProcess exitFlag viewSize thumbnail nextProject guards '	classVariableNames: 'CurrentProject NavList '	poolDictionaries: ''	category: 'Interface-Projects'!!Project methodsFor: 'accessing' stamp: 'ar 4/19/1999 04:26'!addGuard: anObject	"Add the given object to the list of objects receiving #okayToEnterProject on Project entry"	guards ifNil:[guards _ WeakArray with: anObject]			ifNotNil:[guards _ guards copyWith: anObject].! !!Project methodsFor: 'menu messages' stamp: 'ar 4/19/1999 04:37'!enter: returningFlag	"Install my ChangeSet, Transcript, and scheduled views as current globals. If returningFlag is true, we are return to the project from whence the current project was entered; don't change its previousProject link in this case."	| newDisplay entering vanishingPoint showZoom priorProject recorderOrNil |	self == CurrentProject ifTrue: [^ self].	"Check the guards"	guards ifNotNil:[		guards _ guards reject:[:obj| obj isNil].		guards do:[:obj| obj okayToEnterProject ifFalse:[^self]]].	Smalltalk at: #ScorePlayer ifPresent: [:playerClass |		playerClass allInstancesDo: [:player | player pause]].	returningFlag		ifTrue: [nextProject _ CurrentProject]		ifFalse: [previousProject _ CurrentProject].	priorProject _ CurrentProject.	"Same code runs for enter and exit; test which for zoom"	entering _ self ~~ CurrentProject parent.	displayDepth == nil ifTrue: [displayDepth _ Display depth].	CurrentProject makeThumbnail.	CurrentProject saveState.	CurrentProject _ self.	Smalltalk newChanges: changeSet.	TranscriptStream newTranscript: transcript.	Sensor flushKeyboard.	showZoom _ Preferences showProjectZoom		and: ["Only show zoom if there is room for the both displays plus a megabyte"			Smalltalk garbageCollectMost > (Display boundingBox area*displayDepth//8+1000000)].	World isMorph ifTrue: [recorderOrNil _ World pauseEventRecorder].	Display replacedBy:			(showZoom				ifTrue: [newDisplay _ DisplayScreen extent: Display extent													depth: displayDepth]				ifFalse: [Display newDepthNoRestore: displayDepth])		do: [world isMorph				ifTrue: [World _ world.  "Signifies Morphic"						world install]				ifFalse: [World _ nil.  "Signifies MVC"						Smalltalk at: #ScheduledControllers put: world.						ScheduledControllers restore]].	World isMorph ifTrue:		[recorderOrNil ifNotNil: [recorderOrNil resumeIn: World]].	showZoom		ifTrue: ["Show animated zoom to new display"				entering					ifTrue: [vanishingPoint _ Sensor cursorPoint]					ifFalse: [vanishingPoint _ self viewLocFor: priorProject].				Display zoomIn: entering orOutTo: newDisplay at: 0@0							vanishingPoint: vanishingPoint.				Display copyFrom: newDisplay].	world isMorph		ifTrue: [self spawnNewProcessAndTerminateOld: true]		ifFalse: [world searchForActiveController]! !!WonderlandCameraMorph methodsFor: 'initialization' stamp: 'ar 4/19/1999 04:29'!initialize	super initialize.	Project current addGuard: self.! !!WonderlandCameraMorph methodsFor: 'initialization' stamp: 'ar 4/19/1999 04:31'!okayToEnterProject	"Check if it is okay to enter the project containing the receiver"	B3DPrimitiveEngine isAvailable ifFalse:[		^(self confirm:'You are about to enter a project requiring 3D primitive support.This support is currently NOT available.Do you really want to enter the project?')].	^true! !