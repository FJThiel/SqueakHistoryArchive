'From Squeak 2.0 BETA of May 8, 1998 on 18 May 1998 at 3:56:30 pm'!HandleMorph subclass: #NewHandleMorph	instanceVariableNames: 'hand offset lastPointBlock waitingForClickInside '	classVariableNames: ''	poolDictionaries: ''	category: 'Morphic-Components'!!NewHandleMorph methodsFor: 'all' stamp: 'di 5/18/1998 15:27'!followHand: aHand forEachPointDo: block1 lastPointDo: block2	hand _ aHand.	pointBlock _ block1.	lastPointBlock _ block2.	self position: hand lastEvent cursorPoint - (self extent // 2)! !!NewHandleMorph methodsFor: 'all' stamp: 'di 5/17/1998 21:24'!initialize	waitingForClickInside _ true.	super initialize! !!NewHandleMorph methodsFor: 'all' stamp: 'di 5/17/1998 21:57'!step	| evt |	evt _ hand lastEvent.	evt anyButtonPressed		ifTrue: [waitingForClickInside _ false.				self position: evt cursorPoint - (self extent // 2).				pointBlock value: self center]		ifFalse: [waitingForClickInside					ifTrue: [(self containsPoint: evt cursorPoint)								ifFalse: ["mouse wandered out before clicked"										^ self delete]]					ifFalse: [lastPointBlock value: self center.							^ self delete]]! !!SystemWindow reorganize!('initialization' initialize updateIfOld)('geometry' extent: justDroppedInto:event:)('label' label labelHeight setLabel: setStripeColorsFrom: update:)('open/close' delete openInMVC openInMVCExtent: openInWorld openInWorldExtent:)('resize/collapse' addHandles collapseOrExpand enterHandle:morph:pointName: mouseLeaveEvent:fromPane: removeHandles)('top window' activate activeOnlyOnTop activeOnlyOnTop: handlesMouseDown: isActive mouseDown: passivate)('panes' addMorph:frame: paneColor panelRect)('stepping' step stepTime wantsSteps)!!SystemWindow methodsFor: 'initialization' stamp: 'di 5/18/1998 15:43'!initialize	| aFont |	super initialize.	isCollapsed _ false.	paneMorphs _ Array new.	paneRects _ Array new.	borderColor _ #raised.	borderWidth _ 1.	color _ Color black.	aFont _ Preferences fontForScriptorButtons.	stripes _ Array with: (RectangleMorph newBounds: bounds)  "see extent:"				with: (RectangleMorph newBounds: bounds).	self addMorph: (stripes first borderWidth: 1).	self addMorph: (stripes second borderWidth: 2).	self addMorph: (label _ StringMorph new contents: labelString;			font: ((TextStyle default fontAt: 2) emphasized: 1)).	self addMorph: (closeBox _ SimpleButtonMorph new borderWidth: 0;			label: 'X' font: aFont; color: Color transparent;			actionSelector: #delete; target: self; extent: 16@16).	self addMorph: (collapseBox _ SimpleButtonMorph new borderWidth: 0;			label: 'O' font: aFont; color: Color transparent;			actionSelector: #collapseOrExpand; target: self; extent: 16@16).	self extent: 300@200! !!SystemWindow methodsFor: 'initialization' stamp: 'di 5/18/1998 15:50'!updateIfOld  "SystemWindow allInstancesDo: [:w | w updateIfOld]"	| panelRect |	stripes ifNil:		[stripes _ Array with: (RectangleMorph newBounds: bounds)				with: (RectangleMorph newBounds: bounds).		submorphs _ submorphs , stripes reversed].	paneMorphs _ submorphs copyFrom: 1 to: submorphs size-5.	panelRect _ self panelRect.	paneRects _ paneMorphs collect:		[:m | (m bounds translateBy: panelRect topLeft negated)				scaleBy: (1.0/panelRect width)@(1.0/panelRect height)].	collapseBox actionSelector: #collapseOrExpand.	fullFrame _ self bounds.	isCollapsed _ false.	self extent: self extent.  "Cause layout of stripes etc."! !!SystemWindow methodsFor: 'geometry' stamp: 'di 5/18/1998 13:43'!extent: newExtent	| inner panelRect labelRect paneColor |	self removeHandles.	isCollapsed		ifTrue: [super extent: newExtent x @ (self labelHeight + 2)]		ifFalse: [super extent: newExtent].	inner _ self innerBounds.	labelRect _ inner withHeight: self labelHeight.	panelRect _ self panelRect.	paneColor _ Color perform: model defaultBackgroundColor.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	self setStripeColorsFrom: paneColor.	closeBox align: closeBox topLeft with: inner topLeft + (4@0).	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label fitContents; setWidth: (label width min: bounds width - 50).	label align: label bounds topCenter with: inner topCenter.	paneMorphs with: paneRects do:		[:m :frame |  m color: paneColor.		m bounds: (((frame scaleBy: panelRect extent) translateBy: panelRect topLeft)) truncated].	isCollapsed		ifTrue: [collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds].	self isActive ifTrue: [self addHandles]! !!SystemWindow methodsFor: 'label' stamp: 'di 5/18/1998 09:33'!setStripeColorsFrom: paneColor	self isActive		ifTrue: [stripes second color: paneColor;					borderColor: stripes second color darker.				stripes first color: stripes second borderColor darker;					borderColor: stripes first color darker]		ifFalse: ["This could be much faster"				stripes second color: paneColor; borderColor: paneColor.				stripes first color: paneColor; borderColor: paneColor].! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/18/1998 15:33'!addHandles 	| pt handle |	isCollapsed ifTrue: [^ self "no handles if collapsed"].	#(topLeft topRight bottomLeft bottomRight rightCenter leftCenter		topLeft topRight bottomLeft bottomRight topCenter bottomCenter)		withIndexDo: [:ptName :i | pt _ self bounds perform: ptName.			handle _ Morph new color: Color gray; extent: (i<=6 ifTrue: [2@20] ifFalse: [20@2]).			handle align: (handle bounds perform: ptName) with: pt.			handle on: #mouseEnter send: #enterHandle:morph:pointName:					to: self withValue: ptName.			self addMorph: handle].! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/18/1998 12:29'!collapseOrExpand	isCollapsed	ifTrue:		["Expand -- restore panes to morphics structure"		isCollapsed _ false.		paneMorphs reverseDo: [:m | self addMorph: m].		super bounds: fullFrame]	ifFalse:		["Collapse -- remove panes from morphics structure"		isCollapsed _ true.		paneMorphs do: [:m | m delete; releaseCachedState].		collapsedFrame			ifNil:	[self extent: (label width + 50) @ (self labelHeight + 2).					self world primaryHand attachMorph: self]			ifNotNil: [super bounds: collapsedFrame]]! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/18/1998 15:03'!enterHandle: event morph: handle pointName: ptName	"The mouse has entered reframing mark.  Start a reframe operation."	| resizer b |	resizer _ NewHandleMorph new followHand: event hand		forEachPointDo:			[:p | b _ self bounds.			ptName = #topCenter ifTrue: [self bounds: (b withTop: p y)].			ptName = #bottomCenter ifTrue: [self bounds: (b withBottom: p y)].			ptName = #leftCenter ifTrue: [self bounds: (b withLeft: p x)].			ptName = #rightCenter ifTrue: [self bounds: (b withRight: p x)].			ptName = #topLeft ifTrue: [self bounds: (b bottomRight rect: p)].			ptName = #bottomRight ifTrue: [self bounds: (b topLeft rect: p)].			ptName = #bottomLeft ifTrue: [self bounds: (b topRight rect: p)].			ptName = #topRight ifTrue: [self bounds: (b bottomLeft rect: p)]]		lastPointDo: [:lastPoint | ].	event hand world addMorph: resizer.	resizer startStepping! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/18/1998 15:54'!mouseLeaveEvent: event fromPane: pane	"For backward compatibility only.  Not used by any newly created window"	(pane isKindOf: ScrollPane) ifTrue: [pane mouseLeave].! !!SystemWindow methodsFor: 'resize/collapse' stamp: 'di 5/18/1998 15:19'!removeHandles	(self submorphs select: [:m | m isMemberOf: Morph])		do: [:m | m delete]! !!SystemWindow methodsFor: 'top window' stamp: 'di 5/18/1998 12:31'!activate	"Bring me to the front and make me able to respond to mouse and keyboard"	| oldTop |	activeOnlyOnTop _ true.	oldTop _ TopWindow.	TopWindow _ self.	oldTop ifNotNil: [oldTop passivate].	owner firstSubmorph == self ifFalse: [owner addMorphFront: self].	self submorphsDo: [:m | m unlock].	self setStripeColorsFrom: self paneColor.	self addHandles! !!SystemWindow methodsFor: 'top window' stamp: 'di 5/18/1998 12:31'!passivate	"Make me unable to respond to mouse and keyboard"	self submorphsDo: [:m | m lock].	self setStripeColorsFrom: self paneColor.	self removeHandles! !!SystemWindow methodsFor: 'panes' stamp: 'di 5/18/1998 15:43'!addMorph: aMorph frame: relFrame	| panelRect |	self addMorph: aMorph.	paneMorphs _ paneMorphs copyReplaceFrom: 1 to: 0 with: (Array with: aMorph).	paneRects _ paneRects copyReplaceFrom: 1 to: 0 with: (Array with: relFrame).	panelRect _ self panelRect.	aMorph borderWidth: 1;		color: (Color perform: model defaultBackgroundColor);		bounds: ((relFrame scaleBy: panelRect extent) translateBy: panelRect topLeft) truncated.! !!SystemWindow methodsFor: 'panes' stamp: 'di 5/18/1998 09:40'!paneColor	^ Color perform: model defaultBackgroundColor! !SystemWindow removeSelector: #enterHandle:morph:!SystemWindow removeSelector: #leaveHandle:morph:!SystemWindow removeSelector: #clickHandle:morph:pointName:!