'From Squeak 2.1 of June 30, 1998 on 20 August 1998 at 4:21:56 pm'!"Change Set:		FileList-Menu-chgs-diDate:			20 August 1998Author:			Dan IngallsSeveral related changes:1.	Makes 3 Menu classes accept strings or collections for the labelList	supplied in #labels:lines:selectors.2.	Restructures the fileList menu logic so that only options appropriate	to the selected file type (suffix) are offered.3.	Adds a more... item to this new menu to offer all options as before."!!CustomMenu methodsFor: 'construction' stamp: 'di 8/20/1998 09:24'!labels: labelList lines: linesArray selections: selectionsArray	"This method allows the receiver to accept old-style SelectionMenu creation messages. It should be used only for backward compatibility during the MVC-to-Morphic transition. New code should be written using the other menu construction protocol such as addList:."	"Labels can be either a sting with embedded crs, or a collection of strings."	| labelArray |	(labelList isMemberOf: String)		ifTrue: [labelArray _ labelList findTokens: String cr]		ifFalse: [labelArray _ labelList].	1 to: labelArray size do: [:i |		self add: (labelArray at: i) action: (selectionsArray at: i).		(linesArray includes: i) ifTrue: [self addLine]].! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 16:06'!fileSelectedMenu: aMenu	| firstItems secondItems thirdItems n1 n2 n3 |	firstItems _ self itemsForFileEnding: self fileNameSuffix asLowercase.	secondItems _ self itemsForAnyFile.	thirdItems _ self itemsForNoFile.	n1 _ firstItems first size.	n2 _ n1 + secondItems first size.	n3 _ n2 + thirdItems first size.	^ aMenu		labels: firstItems first , secondItems first , thirdItems first , #('more...')		lines: firstItems second				, (Array with: n1 with: n2)				, (thirdItems second collect: [:n | n + n2])				, (Array with: n3)		selections: firstItems third , secondItems third , thirdItems third , #(offerAllFileOptions)! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 15:30'!itemsForAnyFile	^ #(('copy name to clipboard' 'rename' 'delete')		()		(copyName renameFile deleteFile)		)! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 16:09'!itemsForFileEnding: suffix	| labels lines selectors |	labels _ OrderedCollection new.	lines _ OrderedCollection new.	selectors _ OrderedCollection new.	(suffix = 'bmp') | (suffix = 'gif') | (suffix = 'form') | (suffix = '*') ifTrue:		[labels addAll: #('open image in a window' 'read image into GIFImports').		selectors addAll: #(openImageInWindow importImage)].	(suffix = 'morph') | (suffix = 'morphs') | (suffix = '*') ifTrue:		[labels add: 'load as morph'.		selectors add: #openMorphFromFile].	(suffix = 'mid') | (suffix = '*') ifTrue:		[labels add: 'play midi file'.		selectors add: #playMidiFile].	(suffix = 'movie') | (suffix = '*') ifTrue:		[labels add: 'open as movie'.		selectors add: #openAsMovie].	(suffix = 'st') | (suffix = 'cs') | (suffix = '*') ifTrue:		[suffix = '*' ifTrue: [lines add: labels size].		labels addAll: #('fileIn' 'file into new change set' 'browse changes' 'broadcast as update').		lines add: labels size - 1.		selectors addAll: #(fileInSelection fileIntoNewChangeSet browseChanges putUpdate)].	^ Array with: labels with: lines with: selectors! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 09:33'!itemsForNoFile	^ #(		('sort by name' 'sort by size' 'sort by date'		'add new file' 'add new directory')		(3)		(sortByName sortBySize sortByDate		addNewFile addNewDirectory)		)! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 09:34'!noFileSelectedMenu: aMenu	| items |	items _ self itemsForNoFile.	^ aMenu		labels: items first		lines: items second		selections: items third! !!FileList methodsFor: 'file list menu' stamp: 'di 8/20/1998 16:05'!offerAllFileOptions	| items action |	items _ self itemsForFileEnding: '*'.	action _ (SelectionMenu labels: items first lines: items second selections: items third)			startUp.	action ifNotNil: [self perform: action]! !!MenuMorph methodsFor: 'construction' stamp: 'di 8/20/1998 09:30'!labels: labelList lines: linesArray selections: selectionsArray	"This method allows the receiver to accept old-style SelectionMenu creation messages. It should be used only for backward compatibility during the MVC-to-Morphic transition. New code should be written using the other menu construction protocol such as addList:."	"Labels can be either a sting with embedded crs, or a collection of strings."	| labelArray |	(labelList isMemberOf: String)		ifTrue: [labelArray _ labelList findTokens: String cr]		ifFalse: [labelArray _ labelList].	1 to: labelArray size do: [:i |		self add: (labelArray at: i) action: (selectionsArray at: i).		(linesArray includes: i) ifTrue: [self addLine]].! !!SelectionMenu class methodsFor: 'instance creation' stamp: 'di 8/20/1998 09:18'!labels: labels lines: linesArray selections: selectionsArray	"Answer an instance of me whose items are in aString, with lines drawn 	after each item indexed by anArray. Record the given array of selections	corresponding to the items in labelsArray."	"Labels can be either a sting with embedded crs, or a collection of strings"	| labelString |	(labels isMemberOf: String)		ifTrue: [labelString _ labels]		ifFalse: [labelString _ String streamContents:					[:s |					labels do: [:l | s nextPutAll: l; cr].					s skip: -1]].	^ (self labels: labelString lines: linesArray) selections: selectionsArray! !