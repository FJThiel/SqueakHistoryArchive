'From Squeak2.6 of 11 October 1999 [latest update: #1581] on 27 October 1999 at 9:50:29 pm'!"Change Set:		graphicalDict-swDate:			27 October 1999Author:			Scott WallaceSome improvements to 'graphical dictionaries', such as the one you get when you inspect the ScriptingSystem's form library by evaluating	'ScriptingSystem inspectFormDictionary'(1)  You can now directly repaint any object you see in the dictionary -- via the new 'repaint' command in the menu.(2)  A 'find' command is also added to the menu, allowing you to locate any object by name.  The search starts after the current entry, and wraps around to the beginning if necesary, and is case-blind, and is done keyword-fashion, so that any picture name containing the search string anywhere within it will be found.(3)  A menu icon is supplied rather than the former textual <> button label.(4)  Balloon help is provided for all the controls."!!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'sw 10/27/1999 21:42'!findEntry	| toFind searchIndex |	toFind _ FillInTheBlank request: 'Type name or fragment: ' initialAnswer: 'Controls'.	toFind isEmptyOrNil ifTrue: [^ self].	searchIndex _ currentIndex + 1.	toFind _ '*', toFind asLowercase, '*'.	[toFind match: (entryNames at: searchIndex) asString]		whileFalse:			[searchIndex _ (searchIndex \\ entryNames size) + 1.			searchIndex == currentIndex ifTrue: [^ self inform: 'not found']].	currentIndex _ searchIndex.	self updateThumbnail! !!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'sw 10/27/1999 21:47'!initializeFor: aTarget fromDictionary: aDictionary	|  buttons buttonCage imageWrapper anIndex aButton |	self baseDictionary: aDictionary.	target _ aTarget.	coexistWithOriginal _ true.	color _ Color white.	borderColor _ Color blue darker.	borderWidth _ 1.	self hResizing: #shrinkWrap; vResizing: #shrinkWrap.	aButton _ SimpleButtonMorph new target: self; borderColor: Color black.	buttons _ AlignmentMorph newRow.	buttons borderWidth: 0; inset: 0.	buttons hResizing: #shrinkWrap; vResizing: #shrinkWrap; extent: 5@5.	buttons centering: #topLeft.	buttonCage _ AlignmentMorph newColumn.	buttonCage hResizing: #shrinkWrap; vResizing: #spaceFill.	buttonCage addTransparentSpacerOfSize: (0 @ 10).	buttons addMorphBack: (aButton fullCopy		label: 'Prev';		actionSelector: #downArrowHit;		actWhen: #buttonDown;		setBalloonText: 'show previous picture (one per click)';		yourself).	buttons addTransparentSpacerOfSize: (5@0).	buttons addMorphBack: (aButton fullCopy label: 'Next';	actionSelector: #upArrowHit; actWhen: #buttonDown; setBalloonText: 'show next pictutre (one per click)').	buttons addTransparentSpacerOfSize: (5@0).	buttons addUpDownArrowsFor: self.	buttons submorphs last setBalloonText: 'advance quickly through the pictures.'.	buttonCage addMorphBack: buttons.	buttonCage addTransparentSpacerOfSize: (0 @ 12).	buttons _ AlignmentMorph newRow.	buttons addTransparentSpacerOfSize: (20@0).		buttons addMorphBack: (IconicButton new borderWidth: 0;			labelGraphic: (ScriptingSystem formAtKey: 'Menu'); color: Color transparent; 			actWhen: #buttonDown;			actionSelector: #showMenu; target: self;			setBalloonText: 'menu').	buttons addTransparentSpacerOfSize: (20@0).	buttonCage addMorphBack: buttons.	buttonCage addTransparentSpacerOfSize: (0 @ 10).	buttonCage addMorphBack: (UpdatingStringMorph new contents: ' '; target: self; putSelector: #renameGraphicTo:; getSelector: #nameOfGraphic; useStringFormat).	buttonCage addTransparentSpacerOfSize: (0 @ 10).	self addMorphFront: buttonCage.	imageWrapper _ Morph new color: Color transparent; extent: 102 @ 82.	imageWrapper addMorphBack: (formDisplayMorph _ ImageMorph new extent: 100 @ 100).	self addMorphBack: imageWrapper.	target ifNotNil: [(anIndex _ formChoices indexOf: target form ifAbsent: [nil]) ifNotNil:		[currentIndex _ anIndex]].	self updateThumbnail! !!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'sw 10/27/1999 21:38'!repaintEntry	"Let the user enter into painting mode to repaint the item and save it back."	| aWorld bnds sketchEditor aPaintBox formToEdit |		(aWorld _ self world) assureNotPaintingElse: [^ self].	aWorld stopRunningAll; abandonAllHalos.	aWorld displayWorld.	formToEdit _ formChoices at: currentIndex.	bnds _ (submorphs second boundsInWorld origin extent: formToEdit extent) intersect: aWorld bounds.	bnds _ (aWorld paintingBoundsAround: bnds center) merge: bnds.	sketchEditor _ SketchEditorMorph new.	aWorld addMorphFront: sketchEditor.	sketchEditor initializeFor: ((SketchMorph new form: formToEdit) position: submorphs second positionInWorld)  inBounds: bnds pasteUpMorph: aWorld paintBoxPosition: bnds topRight.	sketchEditor		afterNewPicDo: [:aForm :aRect |			formChoices at: currentIndex put: aForm.			baseDictionary at: (entryNames at: currentIndex) put: aForm.			self updateThumbnail.			(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]] 		ifNoBits:			[(aPaintBox _ aWorld paintBoxOrNil) ifNotNil: [aPaintBox delete]].	! !!GraphicalDictionaryMenu methodsFor: 'as yet unclassified' stamp: 'sw 10/12/1999 12:19'!showMenu	| aMenu sel |	aMenu _ MVCMenuMorph new.	aMenu add: 'remove' action:	#removeEntry.	aMenu add: 'rename' action: #renameEntry.	aMenu add: 'repaint' action: #repaintEntry.	aMenu add: 'find...' action:	#findEntry.	sel _ aMenu invokeAt: self primaryHand position in: self world.	sel ifNotNil: [self perform: sel]! !