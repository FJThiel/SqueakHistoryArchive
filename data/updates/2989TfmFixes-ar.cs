'From Squeak2.9alpha of 13 June 2000 [latest update: #3036] on 21 November 2000 at 6:30:11 pm'!"Change Set:		TfmFixes-arDate:			21 November 2000Author:			Andreas RaabSome fixes for transformed grabs and drops."!!HandMorph methodsFor: 'grabbing/dropping' stamp: 'ar 11/21/2000 18:27'!dropMorph: aMorph event: anEvent	"Drop the given morph which was carried by the hand"	| event dropped |	dropped _ aMorph.	(dropped hasProperty: #addedFlexAtGrab) 		ifTrue:[dropped _ aMorph removeFlexShell].	event _ DropEvent new setPosition: self position contents: dropped hand: self.	owner processEvent: event.	event wasHandled ifFalse:[aMorph rejectDropMorphEvent: event].	aMorph owner == self ifTrue:[aMorph delete].	self mouseOverHandler processMouseOver: anEvent.! !!HandMorph methodsFor: 'grabbing/dropping' stamp: 'ar 11/21/2000 17:42'!grabMorph: aMorph	"Grab the given morph (i.e., add it to this hand and remove it from its current owner) without changing its position. This is used to pick up a morph under the hand's current position, versus attachMorph: which is used to pick up a morph that may not be near this hand."	| grabbed |	self releaseMouseFocus. "Break focus"	grabbed _ aMorph aboutToBeGrabbedBy: self.	grabbed ifNil:[^self].	grabbed _ grabbed topRendererOrSelf.	^self grabMorph: grabbed from: grabbed owner! !!HandMorph methodsFor: 'grabbing/dropping' stamp: 'ar 11/21/2000 18:25'!grabMorph: aMorph from: formerOwner	"Grab the given morph (i.e., add it to this hand and remove it from its current owner) without changing its position. This is used to pick up a morph under the hand's current position, versus attachMorph: which is used to pick up a morph that may not be near this hand."	| grabbed offset targetPoint grabTransform fullTransform |	self releaseMouseFocus. "Break focus"	grabbed _ aMorph.	"Compute the transform to apply to the grabbed morph"	grabTransform _ formerOwner 			ifNil:[IdentityTransform new] 			ifNotNil:[formerOwner grabTransform].	"Compute the full transform for the grabbed morph"	fullTransform _ formerOwner 			ifNil:[IdentityTransform new] 			ifNotNil:[formerOwner transformFrom: owner].	"targetPoint is point in aMorphs reference frame"	targetPoint _ fullTransform globalPointToLocal: self position.	"but current position will be determined by grabTransform, so compute offset"	offset _ targetPoint - (grabTransform globalPointToLocal: self position).	"apply the transform that should be used after grabbing"	grabbed _ grabbed transformedBy: grabTransform.	grabbed == aMorph 		ifFalse:[grabbed setProperty: #addedFlexAtGrab toValue: true].	"offset target to compensate for differences in transforms"	grabbed position: grabbed position - offset asIntegerPoint.	"And compute distance from hand's position"	targetOffset _ grabbed position - self position.	self addMorphBack: grabbed.! !!MorphicTransform methodsFor: 'transformations' stamp: 'ar 11/21/2000 17:36'!composedWithLocal: aTransform	aTransform isIdentity ifTrue:[^self].	self isIdentity ifTrue:[^aTransform].	aTransform isMorphicTransform ifFalse:[^super composedWithLocal: aTransform].	self isPureTranslation ifTrue:[		^aTransform withOffset: aTransform offset - self offset].	aTransform isPureTranslation ifTrue:[		^self withOffset: (self localPointToGlobal: aTransform offset negated) negated].	^super composedWithLocal: aTransform.! !!PlayingCardMorph methodsFor: 'dropping/grabbing' stamp: 'ar 11/21/2000 10:48'!aboutToBeGrabbedBy: aHand	"I'm about to be grabbed by the hand.  If other cards are above me in a deck,	then move them from the deck to being submorphs of me"	| i |	super aboutToBeGrabbedBy: aHand.	i _ owner submorphs indexOf: self ifAbsent: [^ self].	i = 1 ifTrue: [^ self].	(owner submorphs copyFrom: 1 to: i-1) do:		[:m | m class = self class ifTrue: [self addMorphBack: m]].! !!TransformationMorph methodsFor: 'geometry' stamp: 'ar 11/21/2000 17:00'!computeBounds	self hasSubmorphs ifTrue:		[bounds _ (transform localBoundsToGlobal:					(Rectangle merging:						(self submorphs collect: [:m | m fullBounds]))) truncated				expandBy: 1].	fullBounds _ bounds.! !