'From Squeak3.6beta of ''4 July 2003'' [latest update: #5331] on 10 July 2003 at 9:33:45 pm'!"Change Set:		simpleMorphicDelay-lsDate:			10 July 2003Author:			Lex SpoonThis simplifies a few things involving the interCycleDelay: method.First, the old semantics have been put back: MinCycleLapse is the minimum time for a single cycle, not the minimum time *between* cycles.  If Morphic is pegging the CPU and still only obtaining 10 fps, then there is no need to pause between cycles.Second, the check for a change of screen size has been moved to a place where it will get called more reliably.In particular, it will get called even if Morphic ends up not delaying at all between two cycles, e.g. if a large BouncingAtomsMorph is open on the screen.Additionally, it looks to me like the CanSurrenderToOS stuff could go away now that we have mouse events transmitted through VM's.  In current VM's, the ioRelinquishProcessorForMicroseconds: primitive should wake up whenever the mouse moves, anyway, and so there seems sto be no point in avoiding going to sleep.  However, maybe I misunderstand what's going on with it, and so I've left it for now."!!WorldState commentStamp: 'ls 7/10/2003 19:30' prior: 0!The state of a Morphic world.  (This needs some serious commenting!!!!)The MinCycleLapse variable holds the minimum amount of time that a morphic cycle is allowed to take.  If a cycle takes less than this, then interCyclePause: will wait until the full time has been used up.!!WorldState methodsFor: 'update cycle' stamp: 'ls 7/10/2003 20:21'!doOneCycleNowFor: aWorld	"Immediately do one cycle of the interaction loop.  This should not be called directly, but only via doOneCycleFor:"	| recognizing |	DisplayScreen checkForNewScreenSize.	recognizing _ false.	self flag: #bob.		"need to consider remote hands in lower worlds"	"process user input events"	LastCycleTime _ Time millisecondClockValue.	self handsDo: [:h |		ActiveHand _ h.		h processEvents.		h isGenieRecognizing ifTrue: 			[recognizing _ h giveGenieChanceToEscape not].		ActiveHand _ nil	].	"the default is the primary hand"	ActiveHand _ self hands first.	"The gesture recognizer needs enough points to be accurate.	Therefore morph stepping is disabled while capturing points for the recognizer"	recognizing ifFalse: 		[aWorld runStepMethods.		"there are currently some variations here"		self displayWorldSafely: aWorld].! !!WorldState methodsFor: 'update cycle' stamp: 'ls 7/10/2003 21:32'!interCyclePause: milliSecs	"delay enough that the previous cycle plus the amount of delay will equal milliSecs.  If the cycle is already expensive, then no delay occurs.  However, if the system is idly waiting for interaction from the user, the method will delay for a proportionally long time and cause the overall CPU usage of Squeak to be low."	| currentTime wait |	(lastCycleTime notNil and: [CanSurrenderToOS ~~ false]) ifTrue: [ 		 currentTime _ Time millisecondClockValue.		  wait _ lastCycleTime + milliSecs - currentTime.		  (wait > 0 and: [ wait <= milliSecs ] )		ifTrue: [			(Delay forMilliseconds: wait) wait ]. 	].	lastCycleTime _  Time millisecondClockValue.	CanSurrenderToOS _ true.! !