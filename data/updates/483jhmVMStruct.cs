'From Squeak 2.3 beta of Nov 25, 1998 on 14 December 1998 at 10:49:39 am'!"Change Set:		jhmVMStructDate:			14 December 1998Author:			John MaloneyMake the Smalltalk-to-C translator put selected global variablesinto a large structure. Reduces register contention in interpret()under the CodeWarrior PPC compiler."!!CCodeGenerator methodsFor: 'public' stamp: 'jm 12/13/1998 20:22'!useStructNamed: structName forAllGlobalsExcept: exceptionsList	"Place all global variables into a C record structure of the given name except those in the given list."	| exceptions mappingDict newVariables newName |	exceptions _ exceptionsList asSet.	mappingDict _ Dictionary new: variables size * 3.	newVariables _ OrderedCollection new: variables size.	variables do: [:var |		(exceptions includes: var asSymbol)			ifTrue: [newVariables add: var]			ifFalse: [				newName _ structName, '.', var.				mappingDict at: var asSymbol put: (TVariableNode new setName: newName asSymbol).				newVariables add: newName]].	methods do: [:meth |		meth parseTree: (meth parseTree bindVariablesIn: mappingDict)].	variables _ newVariables.! !!CCodeGenerator methodsFor: 'C code generator' stamp: 'jm 12/14/1998 08:23'!emitCCodeOn: aStream doInlining: inlineFlag doAssertions: assertionFlag	"Emit C code for all methods in the code base onto the given stream. All inlined method calls should already have been expanded."	| verbose |	"method preparation"	verbose _ false.	self prepareMethods.	verbose ifTrue: [		self printUnboundCallWarnings.		self printUnboundVariableReferenceWarnings.		Transcript cr.	].	assertionFlag ifFalse: [ self removeAssertions ].	self doInlining: inlineFlag.	"experimental"	self useStructNamed: 'vm' forAllGlobalsExcept: #(		memory interpreterProxy interruptCheckCounter successFlag		maskTable opTable fullScreenFlag interruptKeycode interruptPending savedWindowSize		currentBytecode localIP localSP localHomeContext localMethod localReceiver localCP localTP).	"code generation"	methods _ methods asSortedCollection: [ :m1 :m2 | m1 selector < m2 selector ].	self emitCHeaderOn: aStream.	self emitCVariablesOn: aStream.	self emitCFunctionPrototypesOn: aStream.'Writing Translated Code...'displayProgressAt: Sensor cursorPointfrom: 0 to: methods sizeduring: [:bar |	methods doWithIndex: [ :m :i | bar value: i.		m emitCCodeOn: aStream generator: self.]].! !!CCodeGenerator methodsFor: 'C code generator' stamp: 'jm 12/13/1998 20:18'!emitCVariablesOn: aStream	"Store the global variable declarations on the given stream."	| i fieldName |	aStream nextPutAll: '/*** Variables ***/'; cr.	variables asSortedCollection do: [:var |		(var indexOf: $.) = 0 ifTrue: [			(variableDeclarations includesKey: var) ifTrue: [				aStream nextPutAll: (variableDeclarations at: var), ';'; cr.			] ifFalse: [				"default variable declaration"				aStream nextPutAll: 'int ', var, ';'; cr]]].	aStream cr; cr.	aStream nextPutAll: 'struct {'; cr.	variables asSortedCollection do: [:var |		(i _ var indexOf: $.) > 0 ifTrue: [			fieldName _ var copyFrom: i + 1 to: var size.			aStream tab.			(variableDeclarations includesKey: fieldName) ifTrue: [				aStream nextPutAll: (variableDeclarations at: fieldName), ';'; cr.			] ifFalse: [				"default variable declaration"				aStream nextPutAll: 'int ', fieldName, ';'; cr]]].	aStream nextPutAll: '} vm;'; cr; cr.! !CCodeGenerator removeSelector: #emitCCodeOn:doInlining:!