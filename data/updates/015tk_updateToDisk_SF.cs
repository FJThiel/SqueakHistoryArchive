'From Squeak 2.0 BETA of May 8, 1998 on 11 May 1998 at 8:54:29 pm'!!Utilities class methodsFor: 'fetching updates' stamp: 'tk 5/11/1998 20:14'!absorbUpdatesAndWriteFilesWithNums: withNumbers	"Absorb all updates from the server of your choice, and write each update to a local file on your disk.  Chop off the sequence numbers, if indicated."	Preferences setPreference: #updateSavesFile toValue: true.	Preferences setPreference: #updateRemoveSequenceNum toValue: withNumbers not.	self absorbUpdatesFromServer.	Preferences setPreference: #updateSavesFile toValue: false.	Preferences setPreference: #updateRemoveSequenceNum toValue: false.	! !!Utilities class methodsFor: 'fetching updates' stamp: 'tk 5/11/1998 19:34'!absorbUpdatesFromServer	"Go to two common servers and look for updates.  Do not bring themto the user's disk.  A file on the server called updates.list has the namesof the last N update files.  We look backwards for the first one we do nothave, and start there bringing them in.  tk 9/10/97""* To add a new update:  Name it starting with a new two-digit code.  * Do not use %, /, *, space, or more than one period in the name of an update file.* The update name does not need to have any relation to the version name.* Figure out which versions of the system the update makes sense for.* Add the name of the file to each version's category below.* Put this file and the update file on all of the servers.** To make a new version of the system:  Pick a name for it (no restrictions)* Put # and exactly that name on a new line at the end of this file.* During the release process, fill in exactly that name in the dialog box.* Put this file on the server.""Utilities absorbUpdatesFromServer"| doc urls failed str |Cursor wait showWhile: [	Utilities chooseUpdateList.	"ask the user which kind of updates"	(Smalltalk includesKey: #EToySystem)		ifTrue: [(Smalltalk at: #EToySystem) guessDOLProxy].	urls _ self newUpdatesOn: 		(Utilities serverUrls collect: [:url | url, 'updates/']).	failed _ 0.	urls do: [:this |		doc _ HTTPSocket httpGet: this accept: 'application/octet-stream'.		"check here that it worked"		doc class == String			ifTrue: [failed _ failed + 1]	"an error loading"			ifFalse: [				doc reset; text.				doc peek asciiValue = 4	"pure object file"					ifTrue: [failed _ failed + 1]	"Must be fileIn, not pure object file"					ifFalse: [						"(this endsWith: '.html') ifTrue: [doc _ doc asHtml]."							"HTML source code not supported here yet"						ChangeSorter newChangesFromStream: doc							named: (this findTokens: '/') last.						self saveUpdate: doc onFile: (this findTokens: '/') last]]].	"if wanted"	].str _ 'Loaded ', (urls size - failed) printString ,' new update files.'.failed > 0 ifTrue: [str _ str, '\Could not find ' withCRs, failed printString ,' update files.'].self inform: str.! !!Utilities class methodsFor: 'fetching updates' stamp: 'tk 5/11/1998 20:37'!absorbUpdatesWriteFilesZapNums: zapNumbers	"Absorb all updates from the server of your choice, and write each update to a local file on your disk.  Chop off the sequence numbers, if indicated."	Preferences setPreference: #updateSavesFile toValue: true.	Preferences setPreference: #updateRemoveSequenceNum toValue: zapNumbers.	self absorbUpdatesFromServer.	Preferences setPreference: #updateSavesFile toValue: false.	Preferences setPreference: #updateRemoveSequenceNum toValue: false.	! !!Utilities class methodsFor: 'fetching updates' stamp: 'tk 5/11/1998 20:52'!saveUpdate: doc onFile: fileName	"See if the user wants the update stored on a local file.  With or without the update number on the front."| file fName |(Preferences valueOfFlag: #updateSavesFile) ifTrue: [	fName _ fileName.	(Preferences valueOfFlag: #updateRemoveSequenceNum) ifTrue: [		1 to: 100 do: [:pos | 			(fName at: pos) isDigit ifFalse: [				fName _ fName copyFrom: pos to: fName size.				doc reset; ascii.				(FileDirectory default fileExists: fName) ifFalse: [					file _ FileStream newFileNamed: fName.					file nextPutAll: doc contents.					file close].				^ self]]]].! !"Add two new choices to screen menu Do..."Utilities commonRequestStrings: (Utilities classPool at: #CommonRequestStrings) contents,	'\Utilities absorbUpdatesWriteFilesZapNums: true\Utilities absorbUpdatesWriteFilesZapNums: false' withCRs.!