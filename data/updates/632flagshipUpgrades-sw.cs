'From Squeak 2.3 beta of Nov 25, 1998 on 2 February 1999 at 11:27:13 am'!"Change Set:		flagshipUpgrades-swDate:			2 February 1999Author:			Scott WallaceWorkarounds and conversions relating to recent changes in viewers and scriptors, prompted by attempts to get ack's flagship system breathing happily across the changes.  Converts anonymous scripts over to be permanent scripts, "!!Morph methodsFor: 'scripting' stamp: 'sw 2/2/1999 11:18'!viewAfreshIn: aPasteUp showingScript: aScriptName at: aPosition	| anEditor |	self player updateAllViewersAndForceToShow: 'scripts'.	anEditor _ self player scriptEditorFor: aScriptName.	aPasteUp ifNotNil: [aPasteUp addMorph: anEditor].	anEditor position: aPosition! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 2/2/1999 09:19'!dismiss	| aMenu reply |	owner ifNil: [^ self].	scriptName ifNil: [^ self delete].  "ad hoc fixup for bkwrd compat"	self isAnonymous		ifTrue:			[((submorphs size > 3) or: [self scriptInstantiation status ~~ #normal]) ifTrue:				[aMenu _ SelectionMenu selections: #('yes, name it' 'no, discard it' 'cancel').				reply _ aMenu startUpWithCaption: 'Do you want to give thisscript a name and save it? '.				(reply size == 0 or: [reply = 'cancel']) ifTrue: [^ self].				(reply = 'yes, name it') ifTrue: [^ self renameScript]].		self actuallyDestroyScript].	self delete! !!ScriptEditorMorph methodsFor: 'buttons' stamp: 'sw 2/2/1999 10:51'!scriptTitle	^ scriptName! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 2/2/1999 11:20'!modernizeScript	"Invoked at user menu request to fix up an anonymous script editor"	| oldSelector newSelector oldStatus aPosition oldOwner |	oldSelector _ self scriptName.	newSelector _ (oldSelector asString copyReplaceAll: 'xxxS' with: 's') asSymbol.	oldStatus _ self scriptInstantiation status.	scriptName _ newSelector.	playerScripted class atSelector: scriptName putScriptEditor: self.	self scriptInstantiation status: oldStatus.	playerScripted class removeScriptNamed: oldSelector.	playerScripted actorState instantiatedUserScriptsDictionary removeKey: oldSelector.	submorphs first delete.  "the button row"	self addMorphFront: self buttonRowForEditor.  "up to date"	self install.	aPosition _ self position.	oldOwner _ self topRendererOrSelf owner.	self delete	playerScripted costume viewAfreshIn: oldOwner showingScript: scriptName at: aPosition! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 2/2/1999 11:20'!offerScriptorMenu	| aMenu result  aList lines title |	self isAnonymous		ifTrue:			["This is a disused branch but will still be reached if someone loads an old thing				from a save-file that has anonymous scripts still present"			aList _ #(				('modernize'						modernizeScript)				('destroy this script'				destroyScript)				('explain status alternatives' 	explainStatusAlternatives)).			title _ 'temporary script'.			lines _ #()]		ifFalse:			[title _ scriptName asString.			self isTextuallyCoded				ifTrue:					[title _ title, ' (textually coded)'.					aList _ #(						('revert to tile version...'		revertScriptVersion)						('modify textual script'			editScriptTextually)				"		('view all scripts'				browseScripts)"						('destroy this script'				destroyScript)						('rename this script'				renameScript)						('explain status alternatives' 	explainStatusAlternatives)).					lines _ #(2 4)]				ifFalse:					[aList _ #(						('save this version'				saveScriptVersion)						('revert to prior version...'		revertScriptVersion)						('edit this script textually'		editScriptTextually)					"	('view all scripts'				browseScripts)"						('destroy this script'				destroyScript)						('rename this script'				renameScript)						('explain status alternatives' 	explainStatusAlternatives)).					lines _ #(2 3 5)]].	aMenu _ SelectionMenu labelList: (aList collect: [:pair | pair first]) lines: lines selections: (aList collect: [:pair | pair second]).	result _ aMenu startUpWithCaption: title.	result ifNotNil: [self perform: result]"		('add parameter to this script'	addParameter)"! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 2/2/1999 09:22'!renameScript	"Invoked at user menu request"	| reply aPosition oldSelector dflt oldStatus oldOwner |	self flag: #deferred.  "Maybe this other branch should be reinstated someday"	self isAnonymous ifFalse:		[^ self inform: 'Please make this request ina Viewer'].	oldSelector _ self scriptName.	oldStatus _ self scriptInstantiation status.	dflt _ self isAnonymous ifTrue: [''] ifFalse: [self scriptTitle].	reply _   FillInTheBlank request: 'Script Name' initialAnswer: dflt. 	reply size == 0 ifTrue: [^ self].	reply first isUppercase ifTrue: [^ self inform: 'Illegal script name'].	((reply _ reply asSymbol) == scriptName) ifTrue: [^ self].	(Scanner isLiteralSymbol: reply) ifFalse: [^ self inform: 'Bad script name, please try again'].	self titleMorph borderColor: Color black.	scriptName _ reply.	playerScripted class atSelector: reply putScriptEditor: self.	self scriptInstantiation status: oldStatus.	playerScripted class removeScriptNamed: oldSelector.	playerScripted actorState instantiatedUserScriptsDictionary removeKey: oldSelector.	submorphs first delete.  "the button row"	self addMorphFront: self buttonRowForEditor.  "up to date"	self install.	aPosition _ self position.	oldOwner _ self topRendererOrSelf owner.	self delete	playerScripted costume viewAfreshIn: oldOwner showingScript: scriptName at: aPosition! !!ScriptEditorMorph methodsFor: 'other' stamp: 'sw 2/2/1999 10:19'!renameScript: newSelector	| aPosition oldStatus existingOwner |	oldStatus _ self scriptInstantiation status.	"self titleMorph borderColor: Color black."	scriptName _ newSelector.	self scriptInstantiation status: oldStatus.	submorphs first delete.  "the button row"	self addMorphFront: self buttonRowForEditor.  "up to date"	self install.	aPosition _ self position.	existingOwner _ self topRendererOrSelf owner.	self delete.	existingOwner ifNotNil:		[playerScripted costume viewAfreshIn: existingOwner showingScript: scriptName at: aPosition]! !!StandardScriptingSystem methodsFor: 'utilities' stamp: 'sw 2/2/1999 11:25'!makeAnonymousScriptsPermanent	"ScriptingSystem makeAnonymousScriptsPermanent"	ScriptEditorMorph allInstances do: [:m | m playerScripted ifNotNil: [m isAnonymous ifTrue: [m modernizeScript]]]! !"Postscript:"ScriptingSystem makeAnonymousScriptsPermanent!