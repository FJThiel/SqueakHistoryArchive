'From Squeak 2.1 of June 30, 1998 on 10 September 1998 at 4:39:29 pm'!"Change Set:		WorldTrails-diDate:			10 September 1998Author:			Dan IngallsCauses pen trails to be visible in the world.If you have trails in your world, you are asked, on leaving that world, if they may be cleared to save space.If you move a morph whose pen is down by picking it up, it will not draw a line.But if you drag it with the brown handle or cmd-drag, it will (try it)."!!Morph methodsFor: 'pen' stamp: 'di 9/10/1998 16:18'!trailMorph	"You can't draw trails on me, but try my owner."	owner == nil ifTrue: [^ nil].	^ owner trailMorph! !!Morph methodsFor: 'private' stamp: 'di 9/10/1998 16:21'!privateMoveBy: delta	"Private!! Use 'position:' instead."	| trailMorph start |	(extension == nil or: [extension player == nil]) ifFalse:		["Most cases eliminated fast by above test"		self getPenDown ifTrue:			["If this is a costume for a player with its pen down, draw a line."			(trailMorph _ self trailMorph) ifNotNil:				[start _ self referencePosition.				trailMorph drawPenTrailFor: self from: start to: start + delta]]].	fullBounds == bounds		ifTrue: ["optimization: avoids recomputing fullBounds"				fullBounds _ bounds _ bounds translateBy: delta]		ifFalse: [bounds _ bounds translateBy: delta.				fullBounds _ nil]! !!HandMorph methodsFor: 'drawing' stamp: 'di 9/10/1998 16:20'!trailMorph	"You can't draw trails when picked up by the hand."	^ nil! !!PasteUpMorph methodsFor: 'pen' stamp: 'di 9/10/1998 16:17'!trailMorph	"Yes, you can draw trails on me."	^ self! !!WorldMorph methodsFor: 'install / exit' stamp: 'di 9/10/1998 16:38'!sleep	canvas ifNil: [^ self  "already called (clean this up)"].	Cursor normal show.	"restore the normal cursor"	(turtleTrailsForm ~~ nil and: [self confirm: 'May I clear the pen trailsin this project to save space?']) ifTrue: [self clearTurtleTrails].	self canvas: nil.		"free my canvas to save space"	self fullReleaseCachedState.! !!WorldMorph methodsFor: 'drawing' stamp: 'di 9/10/1998 16:27'!drawInvalidAreasOn: aCanvas 	"Redraw the damaged areas of the given canvas and clear the damage list. Return a collection of the areas that were redrawn."	| rectList c i n mm morphs rects rectToFill remnants rect |	rectList _ damageRecorder invalidRectsFullBounds: (0@0 extent: viewBox extent).	damageRecorder reset.	n _ self submorphs size.	morphs _ OrderedCollection new: n*2.	rects _ OrderedCollection new: n*2.	rectList do: [:r |		true		ifTrue:			["Experimental top-down drawing --			Traverses top to bottom, stopping if the entire area is filled.			If only a single rectangle remains, then continue with the reduced rectangle."			rectToFill _ r.			i _ 1.			[rectToFill == nil or: [i > n]] whileFalse:				[mm _ submorphs at: i.				(mm fullBounds intersects: r) ifTrue:					[morphs addLast: mm.  rects addLast: rectToFill.					remnants _ mm areasRemainingToFill: rectToFill.					remnants size = 1 ifTrue: [rectToFill _ remnants first].					remnants size = 0 ifTrue: [rectToFill _ nil]].				i _ i+1].			"Now paint from bottom to top, but using the reduced rectangles."			rectToFill ifNotNil:				[c _ aCanvas copyClipRect: rectToFill.				c fillColor: color.				turtleTrailsForm ifNotNil: [c image: turtleTrailsForm at: 0@0]].			[morphs isEmpty] whileFalse:				[(rect _ rects removeLast) == rectToFill ifFalse:					[c _ aCanvas copyClipRect: (rectToFill _ rect)].				morphs removeLast fullDrawOn: c].			morphs reset.  rects reset]		ifFalse: [c _ aCanvas copyClipRect: r.				c fillColor: color.				turtleTrailsForm ifNotNil: [c image: turtleTrailsForm at: 0@0].				submorphs reverseDo: [:m | m fullDrawOn: c]]		].	^ rectList! !