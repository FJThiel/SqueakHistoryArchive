'From Squeak 2.1 of June 30, 1998 on 20 September 1998 at 11:41:35 am'!"Change Set:		UIMisc-lsDate:			20 September 1998Author:			Lex Spoonsmall things:	1. truly small tweaks to Celeste	2. FileList resorts don't forget the current file name	3. HandMorph.fullScreen exits cleanly if executed from a morphic project	4. fix to SystemWindow.wantsSteps	5. decrease the max frame rate in the frame-rate-limitter in Morphic to 50 frames per second instead of 100.  Many users might want this even lower...."!!Celeste methodsFor: 'sending mail' stamp: 'ls 9/18/1998 05:10'!forwardTextFor: msgID	"Answer the template for forwarding the message with the given ID."	^self composeText, '---------- Forwarded ----------',	(mailDB getMessage: msgID) body, '-------------------------------'! !!Celeste methodsFor: 'sending mail' stamp: 'ls 9/18/1998 06:34'!sendQueuedMail	"send queued mail out"	| msgIds msgNum message recipients bareFrom |	"compute the main part of the From: address"	bareFrom _ (MailAddressParser addressesIn: self class userName) first.	"gather up message IDs of messages to send"	msgIds _ mailDB messagesIn: '.tosend.'.	msgIds isEmpty ifTrue: [		^self inform: 'all messages have been sent' ].	msgNum _ 1.	('sending ', msgIds size printString, ' messages...')		displayProgressAt: Sensor mousePoint		from: 0		to: msgIds size		during: 	[ :bar | msgIds do: [ :id |		message _ mailDB getMessage: id.				"gather up the recipients"		recipients _ Set new.		recipients addAll: (MailAddressParser addressesIn: message to).		recipients addAll: (MailAddressParser addressesIn: message cc).		"send it out"		[(SMTPSocket 			deliverMailFrom: bareFrom			to: recipients 			text: message text 			usingServer: Celeste smtpServer) ifFalse: [ self error: 'error delivering mail' ].		] ifError: [ :a :b |			self error: 'error delivering message' ].			"inform the user we are starting a new message"		bar value: msgNum.		msgNum _ msgNum + 1.		].	"remove all these messages from the queue"	msgIds do: [ :id |		mailDB remove: id  fromCategory: '.tosend.' ].	].	mailDB saveDB.	"update any Celeste display windows to account for the changing .tosend. category"	self updateTOC.! !!FileList methodsFor: 'private' stamp: 'ls 9/11/1998 04:15'!resort: newMode	"Re-sort the list of files."	| name |	listIndex > 0		ifTrue: [name _ self fileNameFromFormattedItem: (list at: listIndex)].	sortMode _ newMode.	self pattern: pattern.	name ifNotNil: [		fileName _ name.		listIndex _ list findFirst: [:item | (self fileNameFromFormattedItem: item) = name. ].		self changed: #fileListIndex].	listIndex = 0 ifTrue: [self changed: #contents]! !!HandMorph methodsFor: 'from EToyHand' stamp: 'ls 9/18/1998 06:19'!fullScreen	| aController aWorld |	aWorld _ self world.	aController _ ScheduledControllers scheduledWindowControllers detect: [:c | (c view subViews size > 0) and: [c view subViews first model == aWorld]] ifNone: [ ^self ].	aController fullScreen! !!SystemWindow methodsFor: 'stepping' stamp: 'ls 9/16/1998 04:47'!wantsSteps	"Return true if the model responds to step (except if it is a debugger)."	| c |	(model respondsTo: #wantsSteps) ifTrue: [ ^model wantsSteps ].	c _ model class.	[c == nil] whileFalse:		[(c includesSelector: #step) ifTrue: [^ c ~= Debugger].		c _ c superclass].	^ false! !!WorldMorph class methodsFor: 'all' stamp: 'ls 9/20/1998 11:36'!initialize	"WorldMorph initialize"	self MinCycleLapse: 20.		"allows 50 frames per second..."! !Celeste removeSelector: #importMail!WorldMorph initialize!