'From Squeak3.7alpha of 11 September 2003 [latest update: #5764] on 4 March 2004 at 7:03:53 pm'!"Change Set:		BalloonCommentsDate:			4 March 2004Author:			Andreas Raab22 comments for various Balloon classes."!!BalloonBezierSimulation commentStamp: '<historical>' prior: 0!This class is a simulation of the code that's run by the Balloon engine. For debugging purposes only.!!BalloonBuffer commentStamp: '<historical>' prior: 0!BalloonBuffer is a repository for primitive data used by the BalloonEngine.!!BalloonCanvas commentStamp: '<historical>' prior: 0!BalloonCanvas is a canvas using the BalloonEngine for drawing wherever possible. It has various methods which other canvases do not support due to the extra features of the balloon engine.!!BalloonEngine commentStamp: '<historical>' prior: 0!BalloonEngine is the representative for the Balloon engine inside Squeak. For most purposes it should not be used directly but via BalloonCanvas since this ensures proper initialization and is polymorphic with other canvas uses.!!BalloonFillData commentStamp: '<historical>' prior: 0!This class is a simulation of the code that's run by the Balloon engine. For debugging purposes only.!!BalloonLineSimulation commentStamp: '<historical>' prior: 0!This class is a simulation of the code that's run by the Balloon engine. For debugging purposes only.!!BalloonRectangleMorph commentStamp: '<historical>' prior: 0!BalloonRectangleMorph is an example for drawing using the BalloonEngine.!!BalloonSolidFillSimulation commentStamp: '<historical>' prior: 0!This class is a simulation of the code that's run by the Balloon engine. For debugging purposes only.!!BalloonState commentStamp: '<historical>' prior: 0!This class is a repository for data which needs to be preserved during certain operations of BalloonCanvas.!!FillStyle commentStamp: '<historical>' prior: 0!FillStyle is an abstract base class for fills in the BalloonEngine.!!MatrixTransformMorph commentStamp: '<historical>' prior: 0!MatrixTransformMorph is similar to TransformMorph but uses a MatrixTransform2x3 instead of a MorphicTransform. It is used by clients who want use the BalloonEngine for vector-based scaling instead of the standard WarpBlt pixel-based mechanism.!!OrientedFillStyle commentStamp: '<historical>' prior: 0!OrientedFill is an abstract superclass for fills which can be aligned appropriately.Instance variables:	origin	<Point>	The point at which to align the fill.	direction <Point>	The direction in which the fill is defined	normal	<Point>	Typically, just the direction rotated by 90 degrees.!!BitmapFillStyle commentStamp: '<historical>' prior: 0!A BitmapFillStyle fills using any kind of form.Instance variables:	form	<Form>	The form to be used as fill.	tileFlag	<Boolean>	If true, then the form is repeatedly drawn to fill the area.!!GradientFillStyle commentStamp: '<historical>' prior: 0!A gradient fill style is a fill which interpolates smoothly between any number of colors.Instance variables:	colorRamp	<Array of: Association> Contains the colors and their relative positions along the fill, which is a number between zero and one.	pixelRamp	<Bitmap>		A cached version of the colorRamp to avoid needless recomputations.	radial		<Boolean>	If true, this fill describes a radial gradient. If false, it is a linear gradient.	isTranslucent	<Boolean>	A (cached) flag determining if there are any translucent colors involved.!!ShortIntegerArray commentStamp: '<historical>' prior: 0!ShortIntegerArray is an array for efficiently representing integers in the 16bit range.!!SolidFillStyle commentStamp: '<historical>' prior: 0!SolidFillStyle is a fill which represents a color for the BalloonEngine.Instance variables:	color	<Color>	The color to use.	pixelValue32 <Integer>	The cached pixel value to use.!!TTCompositeGlyph commentStamp: '<historical>' prior: 0!This class represents a composite TrueType glyph, e.g.one which contains many simple TTGlyphs.!!TTFontReader commentStamp: '<historical>' prior: 0!TTFontReader constructs a TTFontDescription from a TrueType font (.ttf).!!TTFontTableDirEntry commentStamp: '<historical>' prior: 0!This class represents an entry in a truetype font table directory. Used by TTFontReader only.!!TTKernPair commentStamp: '<historical>' prior: 0!A TTKernPair represents a TrueType kerning pair.Instance variables:	left	<Integer>	The glyph index for the left character.	right <Integer>	The glyph index for the right character.	value <Integer>	The amount of kerning.	mask <Integer>	An efficient representation for the left and the right value.!!TTPoint commentStamp: '<historical>' prior: 0!A representation of a TrueType point which includes a 'type' flag defining whether this point is an 'on' or an 'off' curve point.!!TTSampleFontMorph commentStamp: '<historical>' prior: 0!An example for using TrueType fonts.!