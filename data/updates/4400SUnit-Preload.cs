'From Squeak3.1alpha of 7 March 2001 [latest update: #4282] on 29 August 2001 at 1:49:14 am'!Delay subclass: #SUnitDelay	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SUnit-Preload'!Object subclass: #SUnitNameResolver	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SUnit-Preload'!SUnitNameResolver class	instanceVariableNames: ''!Exception subclass: #TestFailure	instanceVariableNames: '' 	classVariableNames: ''	poolDictionaries: ''	category: 'SUnit-Preload'!!TestFailure commentStamp: '<historical>' prior: 0!Signaled in case of a failed test (failure). The test framework distinguishes between failures and errors. A failure is anticipated and checked for with assertions. Errors are unanticipated problems like a division by 0 or an index out of bounds ...!!Object methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:04'!sunitAddDependent: anObject        self addDependent: anObject! !!Object methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:04'!sunitChanged: anAspect        self changed: anAspect! !!Object methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:05'!sunitRemoveDependent: anObject        self removeDependent: anObject! !!Behavior methodsFor: 'Camp Smalltalk' stamp: 'Sames 2/19/2001 13:14'!sunitAllSelectors        ^self allSelectors asSortedCollection asOrderedCollection! !!Behavior methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 10:41'!sunitSelectors        ^self selectors asSortedCollection asOrderedCollection! !!BlockContext methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 10:55'!sunitEnsure: aBlock        ^self ensure: aBlock! !!BlockContext methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 10:58'!sunitOn: anException do: aHandlerBlock        ^self on: anException do: aHandlerBlock! !!Class methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 10:59'!sunitName        ^self name! !!Exception methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:02'!sunitExitWith: aValue        self return: aValue! !!Exception class methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:02'!sunitSignalWith: aString        ^self signal: aString! !!SUnitNameResolver class methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/200011:11'!classNamed: aSymbol        ^Smalltalk                at: aSymbol                ifAbsent: [nil].! !!String methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:09'!sunitAsSymbol        ^self asSymbol! !!String methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:10'!sunitMatch: aString        ^self match: aString! !!String methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:10'!sunitSubStrings        ^self substrings! !!Symbol methodsFor: 'Camp Smalltalk' stamp: 'SSS 7/3/2000 11:12'!sunitAsClass        ^SUnitNameResolver classNamed: self! !!TestFailure methodsFor: 'Camp Smalltalk' stamp: 'Sames 4/11/2000 18:07'!defaultAction        Debugger                openContext: initialContext                label: messageText                contents: initialContext shortStack! !