'From Squeak 2.0 BETA of May 8, 1998 on 17 May 1998 at 1:24:10 am'!"Change Set:		WindowTweaks-diDate:			16 May 1998Author:			Dan IngallsSundry fixes...Allow changeLists to open in Morphic, although...	Still don't have read-only code pane and	Still don't have multiple selectionsFix HaloMorph so it doesn't keep updating its bounds	if its target doesn't change.John's fix so dragging windows doesn't cause redisplay.Another fix to allow text as well as strings in 	Morphic menu conversionsBetter window borders due to integer coordinates.One improvement to top-down display"!!BorderedMorph methodsFor: 'drawing' stamp: 'di 5/17/1998 00:16'!drawOnFills: aRectangle	^ (bounds containsRect: aRectangle) and: [self isOpaque]! !!BorderedMorph methodsFor: 'drawing' stamp: 'di 5/17/1998 00:16'!isOpaque	^ color isTransparent not and:		[borderColor isColor and: [borderColor isTransparent not]]! !!ChangeList class methodsFor: 'public access' stamp: 'di 5/16/1998 21:53'!browseFile: fileName    "ChangeList browseFile: 'AutoDeclareFix.st'"	"Opens a changeList on the file named fileName"	| changesFile changeList |	changesFile _ FileStream readOnlyFileNamed: fileName.	Cursor read showWhile:		[changeList _ self new			scanFile: changesFile from: 0 to: changesFile size].	changesFile close.	self open: changeList name: fileName , ' log' multiSelect: true! !!ChangeList class methodsFor: 'public access' stamp: 'di 5/16/1998 21:53'!browseRecent: charCount    "ChangeList browseRecent: 5000"	"Opens a changeList on the end of the changes log file"	| changesFile changeList end |	changesFile _ (SourceFiles at: 2) readOnlyCopy.	end _ changesFile size.	Cursor read showWhile:		[changeList _ self new			scanFile: changesFile from: (0 max: end-charCount) to: end].	changesFile close.	self open: changeList name: 'Recent changes' multiSelect: true! !!ChangeList class methodsFor: 'public access' stamp: 'di 5/16/1998 21:56'!browseVersionsOf: method class: class meta: meta		category: category selector: selector 	| changeList |	Cursor read showWhile:		[changeList _ self new			scanVersionsOf: method class: class meta: meta			category: category selector: selector].	changeList ifNotNil:		[self open: changeList name: 'Recent versions of ' , selector multiSelect: false]! !!ChangeList class methodsFor: 'public access' stamp: 'di 5/16/1998 21:56'!browseVersionsOf: method class: class meta: meta		category: category selector: selector lostMethodPointer: sourcePointer	| changeList |	Cursor read showWhile:		[changeList _ self new			scanVersionsOf: method class: class meta: meta			category: category selector: selector].	changeList setLostMethodPointer: sourcePointer.	self open: changeList name: 'Recent versions of ' , selector multiSelect: false! !!ChangeList class methodsFor: 'instance creation' stamp: 'di 5/16/1998 22:00'!open: aChangeList name: aString multiSelect: multiSelect	"Create a standard system view for the messageSet, whose label is aString.	The listView may be either single or multiple selection type"	| topView aBrowserCodeView aListView |	World ifNotNil: [^ self openAsMorph: aChangeList name: aString multiSelect: multiSelect].	topView _ (StandardSystemView new) model: aChangeList.	topView label: aString.	topView minimumSize: 180 @ 120.	topView borderWidth: 1.	aListView _ PluggableListView on: aChangeList		list: #list		selected: #listIndex		changeSelected: #toggleListIndex:		menu: #changeListMenu:		keystroke: #messageListKey:from:.	multiSelect ifTrue: [aListView controller: PluggableListControllerOfMany new].	aListView window: (0 @ 0 extent: 180 @ 100).	topView addSubView: aListView.	aBrowserCodeView _ PluggableTextView on: aChangeList 			text: #contents accept: #contents:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:.	aBrowserCodeView controller: ReadOnlyTextController new.	aBrowserCodeView window: (0 @ 0 extent: 180 @ 300).	topView addSubView: aBrowserCodeView below: aListView.	topView controller open! !!ChangeList class methodsFor: 'instance creation' stamp: 'di 5/16/1998 22:15'!openAsMorph: aChangeList name: labelString multiSelect: multiSelect	"Open a morphic view for the messageSet, whose label is labelString.	The listView may be either single or multiple selection type"	| window listView textMorph |	window _ (SystemWindow labelled: labelString) model: aChangeList.	window addMorph: (listView _ PluggableListMorph on: aChangeList list: #list		selected: #listIndex changeSelected: #toggleListIndex:		menu: #changeListMenu: keystroke: #messageListKey:from:)		frame: (0@0 corner: 1@0.3)."	multiSelect ifTrue: [listView controller: PluggableListControllerOfMany new]."	window addMorph: (textMorph _ PluggableTextMorph on: aChangeList 			text: #contents accept: #contents:			readSelection: #contentsSelection menu: #codePaneMenu:shifted:)		frame: (0@0.3 corner: 1@1)."	textMorph controller: ReadOnlyTextController new."	^ window openInWorld! !!HaloMorph methodsFor: 'stepping' stamp: 'di 5/16/1998 20:23'!step	| newBounds |	target ifNil: [^ self].	(newBounds _ target fullBoundsInWorld) = self bounds ifTrue: [^ self].	growingOrRotating ifFalse:		["adjust halo bounds if appropriate"		submorphs size > 1 ifTrue:			[self addHandles "recreates full set with new bounds"].		self bounds: newBounds]! !!MenuMorph methodsFor: 'construction' stamp: 'di 5/16/1998 22:14'!addTitle: aString	"Add a title line at the top of this menu."	| title |	title _ AlignmentMorph new setColor: (Color r: 0.5 g: 1 b: 0.75) borderWidth: 1 borderColor: #inset.	title vResizing: #shrinkWrap.	title orientation: #vertical.	title centering: #center.	(aString asString findTokens: String cr) do:		[:line | title addMorphBack: (StringMorph new contents: line)].	self addMorphFront: title.! !!SystemWindow methodsFor: 'open/close' stamp: 'di 5/17/1998 01:20'!delete	| thisWorld |	thisWorld _ self world.	model breakDependents.	model _ nil.	super delete.	SystemWindow noteTopWindowIn: thisWorld! !!SystemWindow methodsFor: 'geometry' stamp: 'di 5/16/1998 23:20'!extent: newExtent	| inner panelRect labelRect paneColor |	super extent: newExtent.	inner _ self innerBounds.	labelRect _ inner withHeight: self labelHeight.	panelRect _ self panelRect.	paneColor _ Color perform: model defaultBackgroundColor.	stripes first bounds: (labelRect insetBy: 1).	stripes second bounds: (labelRect insetBy: 3).	stripes second color: paneColor;			borderColor: stripes second color darker.	stripes first color: stripes second borderColor darker;			borderColor: stripes first color darker.	closeBox align: closeBox topLeft with: inner topLeft + (4@0).	collapseBox align: collapseBox topRight with: inner topRight - (4@0).	label align: label bounds topCenter with: inner topCenter.	paneMorphs with: paneRects do:		[:m :frame |  m color: paneColor.		m bounds: (((frame scaleBy: panelRect extent) translateBy: panelRect topLeft)) truncated].	isCollapsed		ifTrue: [collapsedFrame _ self bounds]		ifFalse: [fullFrame _ self bounds].! !!SystemWindow methodsFor: 'panes' stamp: 'di 5/16/1998 23:19'!addMorph: aMorph frame: relFrame	| panelRect |	self addMorph: aMorph.	paneMorphs _ paneMorphs copyReplaceFrom: 1 to: 0 with: (Array with: aMorph).	paneRects _ paneRects copyReplaceFrom: 1 to: 0 with: (Array with: relFrame).	panelRect _ self panelRect.	aMorph borderWidth: 1;		color: (Color perform: model defaultBackgroundColor);		bounds: ((relFrame scaleBy: panelRect extent) translateBy: panelRect topLeft) truncated! !!TransformMorph methodsFor: 'geometry' stamp: 'jm 5/16/1998 19:54'!privateFullMoveBy: delta	"Private!! Relocate me, but not my subMorphs."	self privateMoveBy: delta.	transform _ transform withOffset: (transform offset - delta).! !!WorldMorph methodsFor: 'drawing' stamp: 'di 5/17/1998 00:03'!displayWorld	"Update this world's display."	| updateNeeded worldDamageRects handsToDraw handDamageRects allDamage |	submorphs do: [:m | m fullBounds].  "force re-layout if needed"	updateNeeded _ damageRecorder updateIsNeeded.	updateNeeded ifFalse: [		hands do: [:h |			(h hasChanged and: [h needsToBeDrawn])				ifTrue: [updateNeeded _ true]]].	updateNeeded ifFalse: [^ self].  "display is already up-to-date"	self assuredCanvas.	worldDamageRects _ self drawInvalidAreasOn: canvas.  "repair world's damage on canvas"	handsToDraw _ self selectHandsToDrawForDamage: worldDamageRects.	handDamageRects _ handsToDraw collect: [:h | h savePatchFrom: canvas].	allDamage _ worldDamageRects, handDamageRects.	handsToDraw reverseDo: [:h | h fullDrawOn: canvas].  "draw hands onto world canvas"	false ifTrue: [  "*make this true to flash damaged areas for testing*"		self flashRects: allDamage color: Color black].	canvas		showAt: viewBox origin  "quickly copy altered rects of canvas to Display"		invalidRects: allDamage.	handsToDraw do: [:h | h restoreSavedPatchOn: canvas].  "restore saved hand patches"	Smalltalk forceDisplayUpdate.! !!WorldMorph methodsFor: 'drawing' stamp: 'di 5/17/1998 00:02'!drawInvalidAreasOn: aCanvas	"Redraw the damaged areas of the given canvas and clear the damage list. Return a collection of the areas that were redrawn."	| rectList c i n intersectors done mm |	rectList _ damageRecorder invalidRectsFullBounds: (0@0 extent: aCanvas extent).	damageRecorder reset.	n _ self submorphs size.	intersectors _ OrderedCollection new: n*2.	rectList do: [:r |		c _ aCanvas copyClipRect: r.		true		ifTrue:			["Experimental top-down drawing"			i _ 1. done _ false.			[done or: [i > n]] whileFalse:				[mm _ submorphs at: i.				(mm fullBounds intersects: r) ifTrue:					[intersectors addLast: mm.					done _ mm drawOnFills: r].				i _ i+1].			done ifFalse: [c fillColor: color].			intersectors reverseDo:				[:m | m topDownDrawOn: c].			intersectors reset]		ifFalse: [c fillColor: color.				submorphs reverseDo: [:m | m fullDrawOn: c]]		].	^ rectList! !ChangeList class removeSelector: #open:name:!ChangeList class removeSelector: #open:name:withListView:!ChangeList class removeSelector: #openVersions:name:!FormCanvas removeSelector: #paragraph:bounds:color:!