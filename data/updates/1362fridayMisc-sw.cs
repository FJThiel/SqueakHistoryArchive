'From Squeak 2.4c of May 10, 1999 on 30 July 1999 at 2:04:51 pm'!"Change Set:		fridayMisc-swDate:			30 July 1999Author:			Scott WallaceA potpourri of fixes and improvements in the run-up to the 2.5 beta release...(1)  Corrects the bug that caused a trash-can to be opened when you clicked on something that was in front of any part of its bounding box.(2) Exclude several types of objects involved in tile scripting from consideration for automatic viewing. (3) Extends the morphic 'restoreDisplay' facility so that it rescinds any display suppression that might be lingering in any hands.(4) When the 'dismiss' button of a Viewer in a flap is hit, the entire flap is now removed.(5) When a morph which has a ViewerFlap looking at it is dismissed, the ViewerFlap is dismissed."!!PasteUpMorph methodsFor: 'flaps' stamp: 'sw 7/28/1999 15:42'!correspondingFlapTab	"If there is a flap tab whose referent is me, return it, else return nil"	self currentWorld flapTabs do:		[:aTab | aTab referent == self ifTrue: [^ aTab]].	^ nil! !!PasteUpMorph methodsFor: 'world state' stamp: 'sw 7/28/1999 10:24'!restoreDisplay	self == World ifTrue:  "Else we're a morphic world-window in an mvc worldState and the restoreDisplay was, unusually, issued from the world's menu rather than from the mvc screen menu"		[DisplayScreen startUp.		self extent: Display extent.		self viewBox: Display boundingBox.		self handsDo: [:h | h endDisplaySuppression].		self restoreFlapsDisplay].	self fullRepaintNeeded! !!PhraseTileMorph methodsFor: 'miscellaneous' stamp: 'sw 7/28/1999 17:02'!isCandidateForAutomaticViewing	^ false! !!Player methodsFor: 'misc' stamp: 'sw 7/28/1999 15:54'!noteDeletionOf: aMorph fromWorld: aWorld	"aMorph, while pointing to me as its costumee, has been deleted"	"This may be too aggressive because deletion of a morph may not really mean deletion of its associated player -- in light of hoped-for multiple viewing"	| viewers scriptors viewerFlaps |	viewers _ OrderedCollection new.	viewerFlaps _ OrderedCollection new.	scriptors _ OrderedCollection new.	aWorld allMorphs do:		[:m | m isAViewer ifTrue: [viewers add: m].			((m isKindOf: ViewerFlapTab) and: [m scriptedPlayer == self])				ifTrue:					[viewerFlaps add: m].			((m isKindOf: ScriptEditorMorph) and: [m myMorph == aMorph])				ifTrue: [scriptors add: m]].	viewers do: [:v |  v noteDeletionOf: aMorph].	viewerFlaps do: [:v  | v dismissViaHalo].	scriptors do: [:s | s privateDelete] ! !!Presenter methodsFor: 'viewer' stamp: 'sw 7/30/1999 13:05'!viewMorph: aMorph	| aPlayer aViewer aPalette aRect aPoint nominalHeight aFlapTab |	Sensor leftShiftDown ifFalse:		[((aPalette _ aMorph standardPalette) ~~ nil and: [aPalette isInWorld])			ifTrue:	[^ aPalette viewMorph: aMorph]].	aPlayer _ aMorph assuredPlayer.	associatedMorph addMorph: (aViewer _ self nascentPartsViewer).	(Preferences viewersInFlaps) ifTrue:		[aViewer initializeFor: aPlayer barHeight: 0.		aViewer enforceTileColorPolicy.		associatedMorph world hideViewerFlapsOtherThanFor: aPlayer.		aFlapTab _ associatedMorph world viewerFlapTabFor: aMorph.		aFlapTab referent submorphs do: 			[:m | (m isKindOf: Viewer) ifTrue: [m delete]].		aFlapTab referent addMorph: aViewer beSticky.		aViewer visible: true.		aFlapTab applyThickness: aViewer width + 25.		aFlapTab showFlap. 		aViewer position: aFlapTab referent position.		associatedMorph world startSteppingSubmorphsOf: aFlapTab.		^ associatedMorph world startSteppingSubmorphsOf: aViewer].			aViewer initializeFor: aPlayer barHeight: 6.	aViewer enforceTileColorPolicy.	Preferences automaticViewerPlacement ifTrue:		[aPoint _ aMorph bounds right @ 			(aMorph center y - ((nominalHeight _ aViewer initialHeightToAllow) // 2)).		aRect _ (aPoint extent: (aViewer width @ nominalHeight)) translatedToBeWithin: associatedMorph world bounds.		aViewer position: aRect topLeft.		aViewer visible: true.		associatedMorph world startSteppingSubmorphsOf: aViewer.		"it's already in the world, somewhat coincidentally"		^ self].	aMorph primaryHand attachMorph: (aViewer visible: true)! !!ScriptEditorMorph methodsFor: 'dropping/grabbing' stamp: 'sw 7/28/1999 17:02'!isCandidateForAutomaticViewing	^ false! !!StandardViewer methodsFor: 'as yet unclassified' stamp: 'sw 7/28/1999 15:45'!dismiss	| aFlapTab |	"User hit the dismiss button."	(owner isKindOf: TabbedPalette)		ifTrue:			[^ owner showNoPalette].	(aFlapTab _ self pasteUpMorph correspondingFlapTab) ifNotNil:		[^ aFlapTab dismissViaHalo].	self delete! !!TileMorph methodsFor: 'mouse handling' stamp: 'sw 7/30/1999 13:08'!isCandidateForAutomaticViewing	^ false! !!TrashCanMorph methodsFor: 'event handling' stamp: 'sw 7/30/1999 07:59'!handlesMouseDown: evt	^ self inPartsBin not and: [self uncoveredAt: evt cursorPoint]! !