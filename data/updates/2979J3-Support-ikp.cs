'From Squeak2.8 of 13 June 2000 [latest update: #2359] on 27 October 2000 at 5:17:50 pm'!!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 9/19/2000 04:35'!assertVars: ivars subsumeAll: primList	| summum |	summum _ Set new.	primList valuesDo: [:vars | summum addAll: vars].	summum removeAll: ivars.	summum isEmpty ifFalse: [self error: 'unexpected variables in primitive: ' , summum printString].! !!InterpreterSupportCode class methodsFor: 'compiler-j3'!externalPrimitives	"InterpreterSupportCode externalPrimitives"	| unexported |	Interpreter initialize.	unexported _ self unexportedPrimitives.	^(Interpreter primitiveTable asSet reject: [:sel | Interpreter includesSelector: sel])		asSortedCollection		reject: [:prim | unexported includes: prim]! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 9/19/2000 04:30'!gcReachableFrom: selector	"Answer whether the given selector can trigger a garbage collection."	"InterpreterSupportCode gcReachableFrom: #primitiveClass"	"InterpreterSupportCode gcReachableFrom: #primitiveFullGC"	"InterpreterSupportCode gcReachableFrom: #primitiveAt"	"InterpreterSupportCode gcReachableFrom: #primitiveArrayBecome"	"InterpreterSupportCode gcReachableFrom: #primitiveStoreImageSegment"	| method messages prevSize |	method _ Interpreter compiledMethodAt: selector ifAbsent: [^false].	messages _ (method literals select: [:sel |					(Interpreter includesSelector: sel) or: [ObjectMemory includesSelector: sel]]) asSet.	prevSize _ 0.	[messages size > prevSize] whileTrue:		[prevSize _ messages size.		 messages copy do: [:sel |			method _ Interpreter compiledMethodAt: sel ifAbsent: [ObjectMemory compiledMethodAt: sel].			messages addAll: (method literals select: [:sel2 |					(Interpreter includesSelector: sel2) or: [ObjectMemory includesSelector: sel2]])].		 ((messages includes: #mapPointersInObjectsFrom:to:)			or: [messages includes: #markAndTraceInterpreterOops]) ifTrue: [^true]].	^false! !!InterpreterSupportCode class methodsFor: 'compiler-j3'!internalPrimitives	"InterpreterSupportCode internalPrimitives"	| unexported |	Interpreter initialize.	unexported _ self unexportedPrimitives.	^(Interpreter primitiveTable asSet select: [:sel | Interpreter includesSelector: sel])		asSortedCollection reject: [:prim | unexported includes: prim].! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 1/10/2000 07:49'!nextPutExternDeclarations: tricky on: file	file nextPutAll: 'static const unsigned ArgumentCountBit=	0x01; // prim reads argumentCount'; cr.	file nextPutAll: 'static const unsigned StackPointerBit=	0x02; // prim reads stackPointer'; cr.	file nextPutAll: 'static const unsigned SuccessFlagBit=	0x04; // prim writes successFlag'; cr.	file nextPutAll: 'static const unsigned ActiveFrameBit=	0x08; // prim may cause GC'; cr.	file nextPutAll: 'static const unsigned IntrinsicPrimBit=	0x10; // prim not exported to j3'; cr.	file nextPutAll: 'static const unsigned PrimitiveFailBit=	0x20; // prim has no primitive response'; cr.	file cr.	file nextPutAll: 'typedef int (*primitive_t)(void);'; cr; cr.	file nextPutAll: 'extern primitive_t primitiveTable[];'; cr; cr.	file nextPutAll: 'extern unsigned char primitiveFlags[];'; cr; cr.	file nextPutAll: '// primitives imported from the Interpreter'; cr; cr.	file nextPutAll: 'extern "C" {'; cr.	tricky keysDo: [:prim | file nextPutAll: '  int '; nextPutAll: prim; nextPutAll: '(void);'; cr].	file nextPutAll: '};'; cr; cr.! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 10/11/2000 19:18'!nextPutFlagsDefinition: tricky on: file	| ivars primitives prim |	ivars _ #(activeFrame argumentCount stackPointer successFlag).	"Sanity check"	self assertVars: ivars subsumeAll: tricky.	primitives _ Interpreter primitiveTable.	file nextPutAll: 'unsigned char primitiveFlags['; print: primitives size + 1; nextPutAll: ']= {'; cr.	'scanning for GC reachability...'		displayProgressAt: Sensor cursorPoint		from: 0 to: primitives size - 1		during: [:bar |			0 to: primitives size - 1 do: [:index |				bar value: index.				prim _ primitives at: index + 1.				file nextPutAll: '  0'.				prim == #primitiveFail					ifTrue: [file nextPutAll: ' | PrimitiveFailBit']					ifFalse:						[(tricky includesKey: prim)								ifTrue: [(tricky at: prim) do:											[:var | file nextPutAll: ' | '; nextPutAll: var capitalized; nextPutAll: 'Bit']]								ifFalse: [file nextPutAll: ' | IntrinsicPrimBit'].						 (self gcReachableFrom: prim) ifTrue: [file nextPutAll: ' | ActiveFrameBit']].				file nextPutAll: ',	// '; nextPutAll: prim; cr]].	file nextPutAll: '  0};'; cr.! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 1/10/2000 07:49'!nextPutPrimitiveTable: tricky on: file	| prims |	prims _ Interpreter primitiveTable.	file nextPutAll: 'primitive_t primitiveTable['; print: (prims size + 1); nextPutAll: ']= {'; cr.	prims do: [:prim |		file nextPutAll: '  '.		(tricky includesKey: prim) ifFalse: [file nextPutAll: '(primitive_t)j_'].		file nextPutAll: prim; nextPut: $,; cr].	file nextPutAll: '  0'; cr; nextPutAll: '};'; cr.! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 1/10/2000 06:58'!primitiveHeaderString: tricky			"InterpreterSupportCode primitiveHeaderString: self trickyPrimitiveList"	"Answer the contents of the primitives.h file."	^String streamContents: [:file |		file nextPutAll: '// primitives.h -- primitive characteristics'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// WARNING: this file was generated automatically -- DO NOT EDIT!!'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// Author: Squeak2.7 (on behalf of Ian.Piumarta@INRIA.Fr)'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// Last edited: NEVER (and woebetide anybody who dares to!!)'; cr; cr.		self nextPutExternDeclarations: tricky on: file.	]! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 1/10/2000 08:35'!primitiveImplementationString: tricky	"InterpreterSupportCode primitiveImplementationString: self trickyPrimitiveList"	"Answer the contents of the primitives.cc file."	^String streamContents: [:file |		file nextPutAll: '// primitives.cc -- primitive characteristics'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// WARNING: this file was generated automatically -- DO NOT EDIT!!'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// Author: Squeak2.7 (on behalf of Ian.Piumarta@INRIA.Fr)'; cr;			nextPutAll: '//'; cr;			nextPutAll: '// Last edited: NEVER (and woebetide anybody who dares to!!)'; cr; cr;			nextPutAll: '#include "primitive.h"'; cr; cr.		self nextPutFlagsDefinition: tricky on: file.		file cr.		self nextPutPrimitiveTable: tricky on: file.	]! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 9/16/2000 19:25'!selectorsReachableFrom: selector	"Answer the Set of selectors reachable transitively in Interpreter starting at selector"	"InterpreterSupportCode selectorsReachableFrom: #primitiveAdd"	| method messages prevSize |	method _ Interpreter compiledMethodAt: selector.	messages _ (method literals select: [:sel | Interpreter includesSelector: sel]) asSet.	prevSize _ 0.	[messages size > prevSize] whileTrue:		[prevSize _ messages size.		 messages copy do: [:sel |			method _ Interpreter compiledMethodAt: sel.			messages addAll: (method literals select: [:sel2 | Interpreter includesSelector: sel2])]].	^messages add: selector; yourself! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 10/11/2000 19:21'!trickyPrimitiveList	"InterpreterSupportCode trickyPrimitiveList"	| primitives internal method index ivars |	"Instance variables of Interpreter that we might have to setup before running a primitive"	ivars _ #(activeContext argumentCount instructionPointer lkupClass messageSelector			method newMethod primitiveIndex receiver stackPointer successFlag theHomeContext).	Interpreter initialize.	primitives _ self internalPrimitives asArray.	primitives _ IdentityDictionary withAll: ('scanning for reachable methods...' withCRs		displayProgressAt: Sensor cursorPoint		from: 1 to: primitives size		during: [:bar |			primitives withIndexCollect: [:sel :seq |				bar value: seq.				sel -> (self selectorsReachableFrom: sel)]]).	internal _ Dictionary new.	('scanning for inst var refs...' withCRs		displayProgressAt: Sensor cursorPoint		from: 1 to: ivars size		during: [:bar |			ivars withIndexCollect: [:ivar :seq |				bar value: seq.				index _ Interpreter allInstVarNames indexOf: ivar.				ivar -> (primitives select: [:sels |							nil ~~ (sels detect: [:sel |											method _ (Interpreter compiledMethodAt: sel).											(method readsField: index) or: [method writesField: index]]										ifNone: [nil])]) keys]])		associationsDo: [:assoc |			assoc value do: [:sel |				(internal at: sel ifAbsent: [internal at: sel put: Set new])					add: assoc key]].	primitives keysDo: [:sel | (internal includesKey: sel) ifFalse: [internal at: sel put: Set new]].	internal addAll: (self externalPrimitives collect: [:prim | prim -> #(argumentCount stackPointer successFlag)]).	(internal at: #primitiveStoreImageSegment) removeAll:		#(activeContext lkupClass messageSelector method newMethod receiver).	internal at: #primitiveFlushCache put:		#(stackPointer activeFrame).	^(internal associationsDo: [:assoc | assoc value: assoc value asSortedCollection])! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 10/11/2000 19:20'!unexportedPrimitives	"Answer an Array containing the names of the primitives that are not exported to j3."	"InterpreterSupportCode unexportedPrimitives"	| prims missing |	prims _ #(primitiveAt primitiveAtPut primitiveBlockCopy primitiveClone		primitiveDoPrimitiveWithArgs primitiveExternalCall primitiveInstVarAt		primitiveInstVarAtPut primitiveInstVarsPutFromStack primitiveLoadInstVar		primitivePerform primitivePerformInSuperclass primitivePerformWithArgs		primitiveResume primitiveSignal primitiveSize primitiveSnapshot		primitiveStoreStackp primitiveStringAt primitiveStringAtPut primitiveSuspend		primitiveValue primitiveValueWithArgs primitiveWait		primitiveObsoleteIndexedPrimitive).	missing _ prims reject: [:prim | Interpreter primitiveTable includes: prim].	missing isEmpty ifFalse: [self error: 'missing primitives: ' , missing printString].	^prims! !!InterpreterSupportCode class methodsFor: 'compiler-j3' stamp: 'ikp 1/10/2000 06:58'!writeCompilerSourceFiles	"Store into this image's directory the C sources files required to support the runtime compiler."	"InterpreterSupportCode writeCompilerSourceFiles"	| tricky |	tricky _ self trickyPrimitiveList.	self storeString: (self primitiveHeaderString: tricky)			onFileNamed: 'primitives.h'.	self storeString: (self primitiveImplementationString: tricky)	onFileNamed: 'primitives.cc'.! !