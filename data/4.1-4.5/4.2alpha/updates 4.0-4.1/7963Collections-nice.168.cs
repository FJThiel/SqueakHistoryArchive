"Change Set:		7963Collections-nice.168Collections-nice.168:Generalize the fasterKeys trick implementation.Most senders of keys won't need a Set.(81 of 129 trunk senders after a first pass, surely more)Collections-nice.167:http://bugs.squeak.org/view.php?id=7362use self class instead of Text, so that we can subclass Text"!!WeakRegistry methodsFor: 'accessing' stamp: 'nice 10/19/2009 22:08'!fasterKeys	^self protected:[		Array streamContents:[:s| valueDictionary keysDo:[:key| s nextPut: key]]].! !!Text methodsFor: 'copying' stamp: 'nice 10/19/2009 08:32'!copyFrom: start to: stop 	"Answer a copied subrange of the receiver."	| realStart realStop |	stop > self size		ifTrue: [realStop := self size]		"handle selection at end of string"		ifFalse: [realStop := stop].	start < 1		ifTrue: [realStart := 1]			"handle selection before start of string"		ifFalse: [realStart := start].	^self class 		string: (string copyFrom: realStart to: realStop)		runs: (runs copyFrom: realStart to: realStop)! !!KeyedSet methodsFor: 'accessing' stamp: 'nice 10/19/2009 22:08'!fasterKeys	"most uses of keys don't need a Set.	This method is faster than keys, because no lookup: will be performed"		^Array new: self size streamContents: [:s| self keysDo: [:key| s nextPut: key]]! !!Dictionary methodsFor: 'accessing' stamp: 'nice 10/19/2009 21:49'!fasterKeys	"most uses of keys don't need a Set.	This method is faster than keys, because no lookup: will be performed"		^Array new: self size streamContents: [:s| self keysDo: [:key| s nextPut: key]]! !!Text methodsFor: 'converting' stamp: 'nice 10/19/2009 08:32'!reversed	"Answer a copy of the receiver with element order reversed."	^ self class string: string reversed runs: runs reversed.  "  It is assumed that  self size = runs size  holds. "! !IdentityDictionary removeSelector: #fasterKeys!