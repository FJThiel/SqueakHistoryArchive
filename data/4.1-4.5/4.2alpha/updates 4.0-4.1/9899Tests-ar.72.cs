"Change Set:		9899Tests-ar.72Tests-ar.72:The previous fix for MCChangeNotificationTest was incomplete and based on flawed analysis. This one should do better.Tests-ul.65:- fix StandardSystemFontsTest >> #testRestoreDefaultFontsTests-ar.66:Add two tests for FileStream behavior. One that I thought was broken (but is not) and one that is broken.Tests-ar.67:Add test for FileStream>>atEnd when file is positioned past end.Tests-fbs.68:Update DecompilerTests>>decompilerFailures with all the failing tests in the #testDecompilerInClasses<Foo>to<Bar> tests.Where syntax errors occur, I've noted the error given. In one case (towards the end of the run, so perhaps a class starting with a P or an S?) I missed noting an 'out of scope' error.Tests-ar.69:4.1 release preparations: Mark expectedFailures in ClosureCompilerTest and LocaleTest since there are no fixes in sight. Also update PackageDependencyTest to reflect changed dependencies.Tests-ar.70:Mark DecompilerTest>>testRemoteTemp as expected failure.Tests-ar.71:Fix unreliable Monticello test."!!StandardSystemFontsTest methodsFor: 'testing' stamp: 'ul 3/29/2010 04:27'!testRestoreDefaultFonts	self saveStandardSystemFontsDuring: [		Preferences restoreDefaultFonts.		self assert: #standardDefaultTextFont familyName: 'Bitmap DejaVu Sans' pointSize: 9.		self assert: #standardListFont familyName: 'Bitmap DejaVu Sans' pointSize: 9.		self assert: #standardFlapFont familyName: 'Accushi' pointSize: 12.		self assert: #standardEToysFont familyName: 'BitstreamVeraSans' pointSize: 9.		self assert: #standardMenuFont familyName: 'Bitmap DejaVu Sans' pointSize: 9.		self assert: #windowTitleFont familyName: 'Bitmap DejaVu Sans' pointSize: 9.		self assert: #standardBalloonHelpFont familyName: 'Accujen' pointSize: 9.		self assert: #standardCodeFont familyName: 'Bitmap DejaVu Sans' pointSize: 9.		self assert: #standardButtonFont familyName: 'BitstreamVeraSansMono' pointSize: 9]! !!MCChangeNotificationTest methodsFor: 'running' stamp: 'ar 4/7/2010 09:47'!setUp	"FIXME: Unregister Monticellomocks if it got created in another test	(for example MCMethodDefinitionTest may create it implicitly).	This avoids a nasty failure of MCChangeNotificationTest due to	some inconsistency about the package info registered with it.	If Monticellomocks was created earlier it will contain a 'regular'	PackageInfo instance but the test requires it to be an MCMockPackageInfo"	MCWorkingCopy registry 		removeKey: (MCPackage new name: 'Monticellomocks')		ifAbsent:[].	PackageOrganizer default unregisterPackageNamed: 'Monticellomocks'.		workingCopy := MCWorkingCopy forPackage: self mockPackage.! !!LocaleTest methodsFor: 'testing' stamp: 'ar 4/5/2010 20:56'!expectedFailures	^#(testIsFontAvailable)! !!FileStreamTest methodsFor: 'as yet unclassified' stamp: 'ar 3/29/2010 20:56'!testNextChunkOutOfBounds	"Ensure that nextChunkPut:/nextChunk works properly on a caching file"	| file text read |	[file := FileStream forceNewFileNamed: 'testNextChunkOutOfBounds'.	text := 'this is a chunkful of text'.	file nextChunkPut: text.	read := [file position: 999999; nextChunkText] valueWithin: 1 seconds onTimeout:[nil].	self assert: read = ''.	] ensure:[file close. FileDirectory default deleteFileNamed: file name ifAbsent:[]].! !!DecompilerTests methodsFor: 'utilities' stamp: 'fbs 4/5/2010 22:31'!decompilerFailures	"here is the list of failures: DNU resulting in trying to decompile the following methods"	^ #((AdditionalMethodState at:ifAbsent:)		(AdditionalMethodState at:ifAbsentPut:)		(AdditionalMethodState at:put:)		(AdditionalMethodState hasLiteralSuchThat:)		(AdditionalMethodState hasLiteralThorough:)		(AdditionalMethodState includesProperty:)		(AdditionalMethodState keysAndValuesDo:)		(AdditionalMethodState pragmas)		(AdditionalMethodState properties)		(AdditionalMethodState propertyKeysAndValuesDo:)		(AdditionalMethodState propertyValueAt:ifAbsent:)		(AdditionalMethodState removeKey:ifAbsent:)		(AdditionalMethodState setMethod:)		(BalloonEngineSimulation circleCosTable "-0.3826834323650903 => -0.38268343236509 or -0.3826834323650902")		 (BalloonEngineSimulation circleSinTable "-0.3826834323650903 => -0.38268343236509 or -0.3826834323650902")		(BlockNode emitCodeExceptLast:encoder:)		(BlockNode sizeCodeExceptLast:)		(Categorizer changeFromCategorySpecs:)		(Categorizer elementCategoryDict)		(ChatNotes storeAIFFOnFile:)		(ClosureTests testToDoInsideTemp)		(Command veryDeepFixupWith:)		(CompiledMethod =)		(CompiledMethod allEmbeddedBlockMethods)		(CompiledMethod embeddedBlockMethods)		(CompiledMethod getPreambleFrom:at:)		(CompiledMethod hasLiteralSuchThat:)		(CompiledMethod hasLiteralThorough:)		(CompiledMethod sameTraitCodeAs:)		(Date printOn:)		(DependencyBrowser computePackageDependencies:)		(EventSensor eventTickler)		(Float printPaddedWith:to:)		(FMSound mixSampleCount:into:startingAt:leftVol:rightVol:)		(Form preMultiplyAlpha)		(FTPClient getDataInto:)		 (GeniePlugin primSameClassAbsoluteStrokeDistanceMyPoints:otherPoints:myVectors:otherVectors:mySquaredLengths:otherSquaredLengths:myAngles:otherAngles:maxSizeAndReferenceFlag:rowBase:rowInsertRemove:rowInsertRemoveCount: "Cannot compile -- stack including temps is too deep")		(GZipReadStream on:from:to:)		(GraphMorph drawDataOn:)		(HttpUrl checkAuthorization:retry:)		(Integer asBytesDescription)		(IntegerTest testNumberOfDigits)		(IntegerTest testPrintStringBase)		(JPEGReadWriter decodeBlockInto:component:dcTable:acTable:)		(LoopedSampledSound mixSampleCount:into:startingAt:leftVol:rightVol:)		(MessageTally treePrintOn:tabs:thisTab:total:totalTime:tallyExact:orThreshold:)		(MessageTrace selectAllBetweenAnchorAnd:)		(MethodPragmaTest testCompileCharacter)		(MultiByteBinaryOrTextStream next:)		(MultiByteFileStream next:)		(MVCProject textWindows)		(MVCToolBuilder setLayout:in:)		(NewParagraph selectionRectsFrom:to:)		(OldSocket getResponseNoLF)		(PackageDependencyTest testPackage:dependsExactlyOn:)		(PasteUpMorph dropFiles:)		(Player veryDeepFixupWith:)		(PluggableTabButtonMorph calculateArcLengths)		(PluggableTabButtonMorph drawTabOn:)		(PluckedSound reset)		(PNGReadWriter copyPixelsGray:)		(PNGReadWriter processInterlaced)		(PNMReadWriter nextPutRGB:)		(PNMReadWriter nextPutBW:reverse:)		(PNMReadWriter readBWreverse:)		(PNMReadWriter readGray)		(PNMReadWriter readPlainRGB)		(PNMReadWriter writeHeader:)		(PointTest testTheta)		(PopUpMenu readKeyboard)		(PostscriptCanvas outlineQuadraticBezierShape:)		(QPickable2D pick:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(QUsersPane userEntryCompare:to:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(RelativeInstructionPrinter print:)		(RemoteHandMorph appendNewDataToReceiveBuffer)		(ScaledDecimalTest testConvertFromFraction)		(SHMCClassDefinition allInstVarNames)		(SHMCClassDefinition withAllSuperclasses)		(ShortIntegerArray writeOn:)		(SHParserST80 isBinary)		(StandardScriptingSystem holderWithAlphabet)		(StrikeFontSet displayStringR2L:on:from:to:at:kern:)		(String howManyMatch:)		(String keywords)		(StringTest testWthNoLineLongerThan)		(SyntaxMorph replaceKeyWord:menuItem:)		(SyntaxMorph replaceSel:menuItem:)		(TextDiffBuilder lcsFor:and:)		(TextURL actOnClickFor:)		(TShaderProgram vertexStrings) "foo ifTrue: []. => foo. => ."		(TShaderProgram fragmentStrings) "foo ifTrue: []. => foo. => ."		(TTContourConstruction segmentsDo:) "out of scope variable"		(TTCFontReader processCharacterMappingTable:)		(TTFileDescription getGlyphFlagsFrom:size:)		(TTFileDescription processCharacterMappingTable:)		(TTFontReader getGlyphFlagsFrom:size:)		(TTFontReader processCharacterMappingTable:)		(TTFontReader processHorizontalMetricsTable:length:)		(TWindow zoomWindow:) "foo ifTrue: [^bar] ifFalse: [^baz]. ^huh?"		(WaveEditor showEnvelope)		(WeakSet scanForLoadedSymbol:)		"(PNMReadWriter nextImage) (Collection #ifEmpty:ifNotEmpty:) (Collection #ifEmpty:) (Collection #ifNotEmpty:ifEmpty:) (Text #alignmentAt:ifAbsent:) (ObjectWithDocumentation propertyAt:ifAbsent:)")! !!FileStreamTest methodsFor: 'as yet unclassified' stamp: 'ar 4/2/2010 00:43'!testPositionPastEndIsAtEnd	"Tests that a file positioned after its end responds true to #atEnd"	| filename file |	filename := 'filestream.tst'.	file := StandardFileStream forceNewFileNamed: filename.	[		file position: 1000.		self assert: file atEnd.	] ensure:[		file close.		FileDirectory default deleteFileNamed: filename ifAbsent:[].	].! !!MCMethodDefinitionTest methodsFor: 'running' stamp: 'ar 4/7/2010 09:41'!tearDown	self restoreMocks.	(MCWorkingCopy forPackage: (MCPackage named: 'FooBarBaz')) unregister.	self class compile: 'override ^ 1' classified: 'mocks'.	self ownPackage modified: isModified.! !!ClosureCompilerTest methodsFor: 'failures' stamp: 'ar 4/5/2010 20:50'!expectedFailures	^#(testDebuggerTempAccess testInjectIntoDecompilations testInjectIntoDecompiledDebugs)! !!FileStreamTest methodsFor: 'as yet unclassified' stamp: 'ar 3/29/2010 20:56'!testCachingNextChunkPut	"Ensure that nextChunkPut:/nextChunk works properly on a caching file"	| file text read |	[file := FileStream forceNewFileNamed: 'testCachingNextChunkPut'.	text := 'this is a chunkful of text'.	file nextChunkPut: text.	read := [file position: 0; nextChunkText] valueWithin: 1 seconds onTimeout:[''].	self assert: read = text.	] ensure:[file close. FileDirectory default deleteFileNamed: file name ifAbsent:[]].! !!DecompilerTests methodsFor: 'utilities' stamp: 'ar 4/5/2010 21:33'!expectedFailures	^#(testRemoteTemp)! !!PackageDependencyTest methodsFor: 'tests' stamp: 'ar 4/5/2010 21:02'!testSUnitGUI	self testPackage: 'SUnitGUI' dependsExactlyOn: #(		Collections		Graphics		Kernel		PackageInfo		SUnit		System		'ToolBuilder-Kernel'		Tools		Morphic	"WindowColorSpec"	).! !!PackageDependencyTest methodsFor: 'tests' stamp: 'ar 4/5/2010 21:08'!testST80	self testPackage: 'ST80' dependsExactlyOn: #(		Collections		Compiler		Files		Graphics		Kernel		Morphic		Multilingual		Network		SUnit		System		'ToolBuilder-Kernel'		Tools	).! !