"Change Set:		7731Morphic-Igor.Stasenko.167Morphic-Igor.Stasenko.167:Yet another fix for top corner grips ofSystemWindow morph.I hope now it will serve us for a couple more years.Morphic-ar.165:Disable style choices in the font chooser dialog for now since its users don't expect the font to be emphasized already. This will need more work and is too confusing at this point (and too easy to break).Morphic-bf.166:Fix typo from UIManager refactoring"!!TopRightGripMorph methodsFor: 'accessing' stamp: 'Igor.Stasenko 9/4/2009 11:58'!gripLayoutFrame	^ LayoutFrame		fractions: (1 @ 0 corner: 1 @ nil)		offsets: (0 - self defaultWidth @ 0 corner: 0 @ nil)! !!FontChooserTool methodsFor: 'toolbuilder' stamp: 'ar 8/31/2009 20:07'!contents	| sample i c f |	sample := WriteStream on: ''.	f := self selectedFont ifNil:[^Text new].	f isSymbolFont ifFalse:[		sample 			nextPutAll: 'the quick brown fox jumps over the lazy dog' ;cr;			nextPutAll:  'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.' ;cr;cr;			nextPutAll: '0123456789'; cr; cr;			nextPutAll: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';		yourself.	] ifTrue:[		i := 0.		33 to: 255 do:[:ci |			sample nextPut: (c:=Character value: ci).			i := i + 1.			(('@Z`z' includes:c) or:[i = 30]) 				ifTrue:[i :=0. sample cr]].	].	sample := sample contents asText.	sample addAttribute: (TextFontReference toFont: f).	^sample! !!FontChooserTool methodsFor: 'toolbuilder' stamp: 'ar 8/31/2009 20:13'!buildWith: builder	"Create the ui for the browser"	"ToolBuilder open: self"	| windowSpec |	self offerStyleList ifTrue:[		windowSpec := self buildWindowWith: builder specs: {			(0@0 corner: 0.4@0.4) -> [self buildFontListWith: builder].			(0.4@0 corner: 0.8@0.4) -> [self buildStyleListWith: builder].			(0.8@0 corner: 1.0@0.4) -> [self buildPointSizeListWith: builder].			(0.0@0.4 corner: 1.0@0.88) -> [self buildPreviewPaneWith: builder].			(0.0@0.88 corner: 1@1) -> [self buildButtonBarWith: builder].		}.	] ifFalse:[		windowSpec := self buildWindowWith: builder specs: {			(0@0 corner: 0.7@0.4) -> [self buildFontListWith: builder]."			(0.4@0 corner: 0.8@0.4) -> [self buildStyleListWith: builder]."			(0.7@0 corner: 1.0@0.4) -> [self buildPointSizeListWith: builder].			(0.0@0.4 corner: 1.0@0.8) -> [self buildPreviewPaneWith: builder].			(0.0@0.8 corner: 1@1) -> [self buildButtonBarWith: builder].		}.	].	windowSpec extent: self initialExtent.	window := builder build: windowSpec.	"Yes, that's a hack. But it looks ugly with line breaks."	(builder widgetAt: #preview) textMorph wrapFlag: false.	^window! !!FontChooserTool methodsFor: 'toolbuilder' stamp: 'ar 8/31/2009 20:04'!buildPreviewPaneWith: builder	"Build the preview panel"	| textSpec |	textSpec := builder pluggableTextSpec new.	textSpec 		name: #preview;		model: self;		getText: #contents.	^textSpec! !!TopLeftGripMorph methodsFor: 'accessing' stamp: 'Igor.Stasenko 9/4/2009 15:48'!gripLayoutFrame	^ LayoutFrame		fractions: (0 @ 0 corner: 0 @ 0)		offsets: (0 @ 0 corner: self defaultWidth @ 0)! !!TopRightGripMorph methodsFor: 'layout' stamp: 'Igor.Stasenko 9/4/2009 16:02'!layoutProportionallyIn: newBounds	| b |	b := owner bounds.		self bounds: (b right - self width @ b top extent: self extent)! !!TopLeftGripMorph methodsFor: 'layout' stamp: 'Igor.Stasenko 9/4/2009 16:04'!layoutProportionallyIn: newBounds	| b |	b := owner bounds.	self bounds: (b topLeft extent: self extent)! !!FileList methodsFor: 'private' stamp: 'bf 9/2/2009 12:45'!selectEncoding	| encodingItems |	encodingItems := OrderedCollection new.	TextConverter allSubclasses do: [:each | | names |		names := each encodingNames.		names notEmpty ifTrue: [ | label |			label := '' writeStream.			names do: [:eachName | label nextPutAll: eachName ] separatedBy: [ label nextPutAll: ', '].			encodingItems add: {label contents. names first asSymbol}.		].	].	brevityState := UIManager default		chooseFrom: (encodingItems collect: [:spec| spec first])		values: (encodingItems collect: [:spec| spec last]).	brevityState ifNil: [brevityState := #needToGetBrief].! !!FontChooserTool methodsFor: 'initialize' stamp: 'ar 8/31/2009 20:01'!offerStyleList	"Whether to offer a choice of styles with the font.	Currently disabled since most of the text machinery doesn't like emphasis	already being applied to the font. Would have to decompose font/emphasis	in order for that to work."	^false! !!FontChooserTool methodsFor: 'initialize' stamp: 'ar 8/31/2009 20:01'!initialExtent	^self offerStyleList ifTrue:[400@300] ifFalse:[300@200].! !