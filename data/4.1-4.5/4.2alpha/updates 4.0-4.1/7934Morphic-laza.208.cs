"Change Set:		7934Morphic-laza.208Morphic-laza.208:Make sure SystemProgressMorph gets initialized during update processMorphic-ar.202:Fix FileList to not blow up when attempting to set a nil directory (for example, when collapsing a selected tree).Morphic-MAD.203:Hack to fix problem with rounding of buttons - I'm happy to take advice on how to address the underlying problem. I've also slightly increased the radius so that the curve is visible.Morphic-MAD.204:Selection highlighting in lists is now consistent with that in menus. I've made direct reference to Preferences menuSelectionColor - not sure if this will be seen as reasonable?You should really tone down the highlight colour after loading these changes:Preferences setParameter: #menuSelectionColor to: (Color r: 0.4 g: 0.5 b: 0.7)Morphic-MAD.205:Fixing the mess I made of the formatting.Morphic-laza.206:Use a centered layout if labels are too longMorphic-laza.207:Initialize SystemProgressMorph after loading the package"!RectangleMorph subclass: #SystemProgressMorph	instanceVariableNames: 'activeSlots bars labels font lock'	classVariableNames: 'BarHeight BarWidth Inset UniqueInstance'	poolDictionaries: ''	category: 'Morphic-Widgets'!!PluggableListMorph methodsFor: 'initialization' stamp: 'MAD 10/6/2009 19:54'!textHighlightColor	"Answer my default text highlight color."	^self valueOfProperty: #textHighlightColor ifAbsent: [ self textColor negated ].! !!SimpleHierarchicalListMorph methodsFor: 'drawing' stamp: 'MAD 10/6/2009 19:55'!drawOn: aCanvas 	super drawOn: aCanvas.	selectedMorph		ifNotNil: [aCanvas				fillRectangle: (((scroller transformFrom: self)						invertBoundsRect: selectedMorph bounds)						intersect: scroller bounds)				color: Preferences menuSelectionColor].	self drawLinesOn: aCanvas! !!ListItemWrapper methodsFor: 'accessing' stamp: 'MAD 10/6/2009 19:54'!preferredColor	^ Color black! !!FileList methodsFor: 'directory tree' stamp: 'ar 10/6/2009 00:54'!setDirectoryTo: dir	"Set the current directory shown in the FileList. 	Does not allow setting the directory to nil since this blows up in various places."	dir ifNil:[^self].	self directory: dir.	brevityState := #FileList.	self changed: #fileList.	self changed: #contents.	self changed: #pathAndPattern.! !!LazyListMorph methodsFor: 'drawing' stamp: 'MAD 10/6/2009 19:52'!drawSelectionOn: aCanvas		| selectionDrawBounds |	selectedRow ifNil: [ ^self ].	selectedRow = 0 ifTrue: [ ^self ].	selectionDrawBounds := self drawBoundsForRow: selectedRow.	selectionDrawBounds := selectionDrawBounds intersect: self bounds.	aCanvas fillRectangle: selectionDrawBounds color: (Preferences menuSelectionColor)! !!BalloonCanvas methodsFor: 'private' stamp: 'MAD 10/6/2009 14:17'!makeRoundRectShape: aRectangle radius: radius	"decompose a rounded rectangle into bezier form"	| ovalDiameter rectExtent segments points endPoint seg idx offset rectOffset |	ovalDiameter := (radius * 2) asPoint min: aRectangle extent.	(ovalDiameter x <= 0 or:[ovalDiameter y <= 0]) ifTrue:[		"degenerates into rectangle - just hand back four lines"		| topLeft topRight bottomLeft bottomRight |		topLeft := aRectangle topLeft.		topRight := aRectangle topRight.		bottomLeft := aRectangle bottomLeft.		bottomRight := aRectangle bottomRight.		points := Array new: 4*3.		points at: 1 put: topLeft.		points at: 2 put: topLeft.		points at: 3 put: topRight.		points at: 4 put: topRight.		points at: 5 put: topRight.		points at: 6 put: bottomRight.		points at: 7 put: bottomRight.		points at: 8 put: bottomRight.		points at: 9 put: bottomLeft.		points at: 10 put: bottomLeft.		points at: 11 put: bottomLeft.		points at: 12 put: topLeft.		^points	].	rectExtent := aRectangle extent - ovalDiameter.	rectOffset := aRectangle origin.	segments := Bezier2Segment makeEllipseSegments: (0@0 extent: ovalDiameter).	"patch up the segments to include lines connecting the oval parts.	we need: 8*3 points for the oval parts + 4*3 points for the connecting lines"	points := Array new: 12*3.	idx := 0.	"Tweaked offsets to clean up curves. MAD"	endPoint := segments last end + rectOffset + (0@-1).	1 to: 8 by: 2 do:[:i|		i = 1 ifTrue:[offset := rectOffset + (rectExtent x @ 0) + (1@-1)]. "top, tr"		i = 3 ifTrue:[offset := rectOffset + rectExtent + (1@1)]. "right, br"		i = 5 ifTrue:[offset := rectOffset + (0 @ rectExtent y) + (0@1)]. "bottom, bl"		i = 7 ifTrue:[offset := rectOffset + (0@-1)]."left, tl"		seg := segments at: i.		"insert a line segment for the horizontal part of the round rect"		points at: (idx := idx+1) put: endPoint.		points at: (idx := idx+1) put: endPoint.		points at: (idx := idx+1) put: seg start + offset.		"now the first half-arc"		points at: (idx := idx+1) put: seg start + offset.		points at: (idx := idx+1) put: seg via + offset.		points at: (idx := idx+1) put: seg end + offset.		"the second half-arc"		seg := segments at: i+1.		points at: (idx := idx+1) put: seg start + offset.		points at: (idx := idx+1) put: seg via + offset.		points at: (idx := idx+1) put: seg end + offset.		endPoint := seg end + offset.	].	^points! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 10/9/2009 14:50'!freeSlot: number	number > 0 ifTrue: [		lock critical: [			(bars at: number) delete.			(labels at: number) delete.			activeSlots := activeSlots - 1.			activeSlots = 0				ifTrue: [self delete. 	self class initialize]				ifFalse: [self recenter]]]! !!LazyListMorph methodsFor: 'drawing' stamp: 'MAD 10/6/2009 19:52'!colorForRow: row		^(selectedRow notNil and: [ row = selectedRow])		ifTrue: [ self color negated ]		ifFalse: [ self color ].! !!SystemProgressMorph class methodsFor: 'class initialization' stamp: 'laza 10/9/2009 11:06'!initialize	"SystemProgressMorph initialize; reset"	BarHeight := 8.	BarWidth := 300.	Inset := 30@30! !!SystemProgressMorph methodsFor: 'initialization' stamp: 'laza 10/9/2009 11:06'!initialize	super initialize.	activeSlots := 0.	bars := Array new: 10.	labels := Array new: 10.	font := Preferences standardMenuFont.	lock := Semaphore forMutualExclusion.	self setDefaultParameters;		setProperty: #morphicLayerNumber toValue: self morphicLayerNumber;		layoutPolicy: TableLayout new;		listDirection: #topToBottom;		cellPositioning: #leftCenter;		cellInset: 5;		listCentering: #center;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		layoutInset: Inset;		minWidth: 150! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 10/9/2009 14:50'!recenter	| position |	self class initialize.	"Put ourself in the center of the display"	self align: self fullBounds center with: Display boundingBox center.	"Check to see if labels are wider than progress bars. In that case do	a centered instead of the default left aligned layout."	position :=	self width > (Inset x * 2 + (self borderWidth * 2) + BarWidth)					ifTrue: [#topCenter]					ifFalse: [#leftCenter].	self cellPositioning: position! !!PluggableButtonMorph methodsFor: 'drawing' stamp: 'MAD 10/6/2009 12:18'!drawOn: aCanvas 	| cc gradient |	cc := self color.	cc isTransparent ifTrue:[cc := Color gray: 0.9].	self enabled ifFalse:[cc := Color lightGray].	cc brightness > 0.9 ifTrue:[cc := cc adjustBrightness: 0.9 - cc brightness].	showSelectionFeedback ifTrue:[		gradient := GradientFillStyle ramp: {			0 -> (Color gray: 0.75).			0.5 -> (Color gray: 0.85).			0.51 -> (Color gray: 0.9).			1 -> (Color gray: 1).		}.	] ifFalse:[		gradient := GradientFillStyle ramp: {			0.0 -> Color white.			0.5 -> (cc).			0.51-> (cc adjustBrightness: -0.1).			1 -> (Color gray: 0.95).		}	].	gradient origin: bounds topLeft.	gradient direction: 0@self height.	^aCanvas frameAndFillRoundRect: bounds radius: 8 fillStyle: gradient borderWidth: 1 borderColor: Color lightGray.! !!ListItemWrapper methodsFor: 'accessing' stamp: 'MAD 10/6/2009 19:53'!highlightingColor	^self preferredColor negated! !SystemProgressMorph initialize!