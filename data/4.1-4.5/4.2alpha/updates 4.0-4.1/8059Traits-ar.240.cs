"Change Set:		8059Traits-ar.240Traits-ar.240:Tests for broken traits behavior."!!TraitTest methodsFor: 'testing' stamp: 'ar 10/21/2009 21:39'!testTraitMethodSelector	"Tests that the #selector of a trait method isn't screwed up when aliasing traits"	| baseTrait classA methodA classB methodB traitMethod |	[baseTrait := Trait named: #TraitTestBaseTrait uses:{} category: self class category.	baseTrait compileSilently: 'traitMethod' classified: 'tests'.	traitMethod := baseTrait compiledMethodAt: #traitMethod.	self assert: traitMethod selector == #traitMethod.	classA := Object subclass: #TraitTestMethodClassA 					uses: {baseTrait @ {#methodA -> #traitMethod}}					instanceVariableNames: '' 					classVariableNames: '' 					poolDictionaries: '' 					category: self class category.	methodA := classA compiledMethodAt: #methodA.	self assert: traitMethod selector == #traitMethod.	self assert: methodA selector == #methodA.	classB := Object subclass: #TraitTestMethodClassB					uses: {baseTrait @ {#methodB -> #traitMethod}}					instanceVariableNames: '' 					classVariableNames: '' 					poolDictionaries: '' 					category: self class category.	methodB := classB compiledMethodAt: #methodB.	self assert: traitMethod selector == #traitMethod.	self assert: methodA selector == #methodA.	self assert: methodB selector == #methodB.	] ensure:[		classA ifNotNil:[classA removeFromSystem: false].		classB ifNotNil:[classB removeFromSystem: false].		baseTrait ifNotNil:[baseTrait removeFromSystem: false].	].! !!TraitTest methodsFor: 'testing' stamp: 'ar 10/21/2009 21:37'!testTraitMethodClass	"Tests that the #methodClass of a trait method isn't screwed up"	| baseTrait classA methodA classB methodB traitMethod |	[baseTrait := Trait named: #TraitTestBaseTrait uses:{} category: self class category.	baseTrait compileSilently: 'traitMethod' classified: 'tests'.	traitMethod := baseTrait compiledMethodAt: #traitMethod.	self assert: traitMethod methodClass == baseTrait.	classA := Object subclass: #TraitTestMethodClassA 					uses: baseTrait 					instanceVariableNames: '' 					classVariableNames: '' 					poolDictionaries: '' 					category: self class category.	methodA := classA compiledMethodAt: #traitMethod.	self assert: traitMethod methodClass == baseTrait.	self assert: methodA methodClass == classA.	classB := Object subclass: #TraitTestMethodClassB					uses: baseTrait 					instanceVariableNames: '' 					classVariableNames: '' 					poolDictionaries: '' 					category: self class category.	methodB := classB compiledMethodAt: #traitMethod.	self assert: traitMethod methodClass == baseTrait.	self assert: methodA methodClass == classA.	self assert: methodB methodClass == classB.	] ensure:[		classA ifNotNil:[classA removeFromSystem: false].		classB ifNotNil:[classB removeFromSystem: false].		baseTrait ifNotNil:[baseTrait removeFromSystem: false].	].! !