"Change Set:		9605SMBase-ar.98SMBase-ar.98:Avoid dictionary protocol in Smalltalk."!!SMDVSInstaller class methodsFor: 'testing' stamp: 'ar 3/5/2010 20:33'!canInstall: aPackage	"Can I install this? First we check if class StreamPackageLoader	is available, otherwise DVS isn't installed.	Then we check if the package is categorized with package	format DVS - currently we have hardcoded the id of that category."		Smalltalk at: #StreamPackageLoader ifPresent: [ :loader | | fileName |		fileName := aPackage downloadFileName.		fileName ifNil: [^false].		fileName := fileName asLowercase.		^((fileName endsWith: '.st') or: [fileName endsWith: '.st.gz'])			and: [aPackage categories includes: "The DVS format category"					(SMSqueakMap default						categoryWithId: 'b02f51f4-25b4-4117-9b65-f346215a8e41')]].	^false! !!SMSARInstaller methodsFor: 'private' stamp: 'ar 3/5/2010 20:33'!fileIn	Smalltalk at: #SARInstaller ifPresent: [:installer |		(installer directory: dir fileName: fileName) fileIn. ^self].	self error: 'SAR support not installed in image, can not install.'! !!SMInstaller class methodsFor: 'changeset utilities' stamp: 'ar 3/5/2010 20:33'!changeSetNamed: newName	"This method copied here to ensure SqueakMap is independent of ChangesOrganizer."	Smalltalk at: #ChangesOrganizer ifPresent: [ :cs | ^cs changeSetNamed: newName ].	^ChangeSet allInstances detect: [ :cs | cs name = newName ] ifNone: [ nil ].! !!SMInstaller class methodsFor: 'changeset utilities' stamp: 'ar 3/5/2010 20:33'!basicNewChangeSet: newName 	"This method copied here to ensure SqueakMap is independent of 	ChangesOrganizer. "	Smalltalk		at: #ChangesOrganizer		ifPresent: [:cs | ^ cs basicNewChangeSet: newName].	(self changeSetNamed: newName)		ifNotNil: [self error: 'The name ' , newName , ' is already used'].	^ ChangeSet basicNewNamed: newName! !!SMSARInstaller class methodsFor: 'testing' stamp: 'ar 3/5/2010 20:33'!canInstall: aPackage	"Answer if this class can install the package.	We handle it if the filename has the extension	.sar (upper and lowercase) and SARInstaller is	present in the image to handle the install."	| fileName |	fileName := aPackage downloadFileName.	fileName ifNil: [^false].	Smalltalk at: #SARInstaller ifPresent: [ :installer |			^'sar' = (FileDirectory extensionFor: fileName) asLowercase].	^false! !