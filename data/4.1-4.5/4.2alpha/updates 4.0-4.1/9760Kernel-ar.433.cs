"Change Set:		9760Kernel-ar.433Kernel-ar.433:Add the underscore preferences in Behavior.Kernel-laza.428:Order instance variables alphabeticallyKernel-laza.429:reverting last changeKernel-nice.430:Don't use closeTo: when comparing compiledMethod.Either two methods are equals or not (or we could fuzzify String equality to with sameAs: or other trick....).The hack was previously necessary due to roundoff errors in printing and reading a Float.This is not the case anymore: Float literals now storeOn: and readFrom: exactly..Kernel-nice.431:Use literalEqual: rather than = to test for compiled code equality.We don't want 256000.0s1 = 256000.0e0 nor = 256000Kernel-djr.432:Fix rootsOfTheWorld, broken since the SmalltalkImage refactoring."!!CompiledMethod methodsFor: 'comparing' stamp: 'nice 3/22/2010 22:05'!= method	| numLits |	"Answer whether the receiver implements the same code as the 	argument, method."	(method isKindOf: CompiledMethod) ifFalse: [^false].	self size = method size ifFalse: [^false].	self header = method header ifFalse: [^false].	self initialPC to: self endPC do:		[:i | (self at: i) = (method at: i) ifFalse: [^false]].	(numLits := self numLiterals) ~= method numLiterals ifTrue: [^false].	"``Dont bother checking FFI and named primitives''	 (#(117 120) includes: self primitive) ifTrue: [^ true]."	1 to: numLits do:		[:i| | lit1 lit2 |		lit1 := self literalAt: i.		lit2 := method literalAt: i.		(lit1 == lit2 or: [lit1 literalEqual: lit2]) ifFalse:			[(i = 1 and: [#(117 120) includes: self primitive])				ifTrue:					[lit1 isArray						ifTrue:							[(lit2 isArray and: [lit1 allButLast = lit2 allButLast])								ifFalse: [^false]]						ifFalse: "ExternalLibraryFunction"							[(lit1 analogousCodeTo: lit2)								ifFalse: [^false]]]				ifFalse:					[i = (numLits - 1)						ifTrue: "properties"							[(self properties analogousCodeTo: method properties)								ifFalse: [^false]]						ifFalse: [^false]]]].	^true! !!Behavior methodsFor: 'compiling' stamp: 'ar 3/12/2010 15:50'!allowUnderscoreAssignments	"Return true if the receiver and its subclasses should be allowed to use underscore as assignment operator. Returning nil here means that the compiler should use the system-wide default preference. Also see #allowUnderscoreSelectors.	Combinations: If both preferences are false, underscore is illegal. If both preferences are true, underscore assignment needs the be surrounded by spaces and a single underscore cannot be used as selector."	^nil! !!Behavior methodsFor: 'compiling' stamp: 'ar 3/12/2010 13:05'!allowUnderscoreSelectors	"Return true if the receiver and its subclasses should be allowed to use underscore in selectors. Returning nil here means that the compiler should use the system-wide default preference. Also see #allowUnderscoreAssignments.	Combinations: If both preferences are false, underscore is illegal. If both preferences are true, underscore assignment needs the be surrounded by spaces and a single underscore cannot be used as selector."	^nil! !!Class class methodsFor: 'inquiries' stamp: 'djr 3/23/2010 17:40'!rootsOfTheWorld	"return a collection of classes which have a nil superclass"	^(Smalltalk globals select: [:each | each isBehavior and: [each superclass isNil]]) asOrderedCollection! !