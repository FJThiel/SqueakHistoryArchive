"Change Set:		9692Tools-nice.210Tools-nice.210:Let the debugger retain context selection when requested for fullStack.Note: I don't like (self changed: #flash) for these reasons:- it traverses all dependents (inefficient MVC like process)- the text flash (not always, I don't know why), not the list from which the menu was triggered.Maybe it would be better to disable the menu and the button when (contextStack last sender isNil).Tools-cmm.208:Fix for pruning the last message of a MessageTrace.Tools-cmm.209:When removing message from a MessageTrace, maintain the selection index."!!Debugger methodsFor: 'context stack menu' stamp: 'nice 3/12/2010 22:57'!fullStack	"Change from displaying the minimal stack to a full one."	contextStack last sender isNil		ifTrue:			["Already expanded"			self changed: #flash]		ifFalse:			[| oldContextStackIndex |			oldContextStackIndex := contextStackIndex.			self fullyExpandStack.			oldContextStackIndex = contextStackIndex				ifFalse:					[self toggleContextStackIndex: oldContextStackIndex]]! !!Debugger methodsFor: 'context stack (message list)' stamp: 'nice 3/12/2010 22:50'!fullyExpandStack	"Expand the stack to include all of it, rather than the first four or five contexts.	Well, almost all of it, we better maintain sane limits too."	self okToChange ifFalse: [^ self].	self newStack: (contextStackTop stackOfSize: contextStack size + 100000).	self changed: #contextStackList! !!MessageTrace methodsFor: 'building' stamp: 'cmm 3/11/2010 14:04'!removeMessageFromBrowser	| indexToSelect |	"Try to keep the same selection index."	indexToSelect := (messageSelections indexOf: true) max: 1.	self selectedMessages do: [ :eachMethodReference | self deleteFromMessageList: eachMethodReference ].	self deselectAll.	messageSelections ifNotEmpty:		[ messageSelections 			at: (indexToSelect min: messageSelections size)  "safety"			put: true ].	anchorIndex := indexToSelect min: messageSelections size.	self 		messageListIndex: anchorIndex ; 		reformulateList! !