"Change Set:		9238Collections-ar.295Collections-ar.295:Merging Collections-mtf.291:7219: Improve Streams Usage Readabilityhttp://bugs.squeak.org/view.php?id=7219Adds << to streams to be mostly like nextPutAll, but uses putOn: so that it works with any object.Collections-ul.293:- weak collection changes, part 3Collections-ul.294:- fix #growSize in WeakSet and WeakKeyDictioanrySince we are using self slowSize (which is like tally in not weak collections) instead of array size we should multiply slowSize by 4/3 and 4/3*3/2 is 2."!!WeakKeyDictionary methodsFor: 'finalization' stamp: 'ul 2/4/2010 01:07'!finalizeValues: finiObjects	"Remove all associations with key == nil and value is in finiObjects.	This method is folded with #rehash for efficiency."		| oldArray |	self deprecated: 'The finalization logic changed, this method shouldn''t be called anymore.'.	oldArray := array.	array := Array new: oldArray size.	tally := 0.	1 to: array size do: [ :index |		(oldArray at: index) ifNotNil: [ :association |			association key ifNotNil: [ :key | "Don't let the key go away"				(finiObjects includes: association value) ifFalse: [					array 						at: (self scanForEmptySlotFor: key) 						put: association.					tally := tally + 1 ] ] ] ]! !!ByteArray methodsFor: 'streaming' stamp: 'kph 9/27/2007 21:53'!putOn: aStream	aStream nextPutAll: self! !!SequenceableCollection methodsFor: 'streaming' stamp: 'kph 9/27/2007 21:18'!putOn: aStream	self do: [ :each | each putOn: aStream ]! !!WeakSet methodsFor: 'private' stamp: 'ul 2/5/2010 04:35'!growSize	"Answer what my next table size should be.	Note that, it can be less than the current."		^self class goodPrimeAtLeast: self slowSize * 2 + 2! !!Stream methodsFor: 'readability' stamp: 'kph 9/27/2007 21:53'!<< items 	items putOn: self.		^ self! !!WriteStream methodsFor: 'printing' stamp: 'kph 11/2/2008 01:16'!<< aCollection	"we want a readable version of nextPutAll however it may be difficult to fully recreate nextPutAll:	for all the different types of stream. Rather then simply send to nextPutAll:	we handle the String (or ByteArray) argument	as fast as possible - the rest we delegate to putOn: This means that we handle single characters and bytes 	whereas nextPutAll: is only for sequencable collections.	.	Note this may not work in every case that nextPutAll: does subject to extensive testing, 	but it should work in the important cases"	| newEnd |	collection class == aCollection class ifFalse:		[ aCollection putOn: self. ^ self ].	newEnd := position + aCollection size.	newEnd > writeLimit ifTrue:		[self growTo: newEnd + 10].	collection replaceFrom: position+1 to: newEnd  with: aCollection startingAt: 1.	position := newEnd.! !!WeakKeyDictionary methodsFor: 'private' stamp: 'ul 2/5/2010 04:35'!growSize	"Answer what my next table size should be.	Note that, it can be less than the current."		^self class goodPrimeAtLeast: self slowSize * 2 + 2! !