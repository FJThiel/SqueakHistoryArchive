"Change Set:		9856KernelTests-dtl.147KernelTests-dtl.147:Add VM version test to allow AllocationTest to run on updated Unix VM (pending). Flagged #toRemove, should be updated after new VMs are in general use.KernelTests-jcg.144:PromiseTest: rudimentary tests for Promise class.  The test demonstrates a bug that exists in Kernel-ar.437 and earlier.KernelTests-ar.145:4.1 release preparations: Remove the expectedFailures from AllocationTest - they are expected to pass for the release (except on unix where we still wait for a VM refresh).KernelTests-jcg.146:One more failing test in PromiseTest (but not for long!)"!TestCase subclass: #PromiseTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'KernelTests-Processes'!!AllocationTest methodsFor: 'workarounds' stamp: 'dtl 4/7/2010 10:02'!isSafeVM	"False if the VM is a Unix VM that has not been updated to version 4.	Earlier versions may be subject to a bug that can crash the VM when	running AllocationTest."	self flag: #toRemove. "April 2010 dtl - remove this about one year from now"	^ Smalltalk platformName ~= 'unix'		or: [(((Smalltalk getSystemAttribute: 0)				findTokens: FileDirectory slash)				select: [:e | e beginsWith: '4.']) isEmpty not]! !!PromiseTest methodsFor: 'testing' stamp: 'jcg 4/5/2010 00:31'!testMultipleResolvers	| promise sum |	sum := 0.	promise := Promise new.	5 timesRepeat: [		promise whenResolved: [:val | sum := sum + val].	].	promise resolveWith: 5.	self should: [sum = 25].	! !!PromiseTest methodsFor: 'testing' stamp: 'jcg 4/6/2010 01:38'!testTimeout	| promise |	promise := Promise new.	self shouldnt: [promise waitTimeoutMSecs: 1].	self shouldnt: [promise isResolved].	promise resolveWith: 45.	self should: [promise waitTimeoutMSecs: 1].	self should: [promise isResolved].	! !!PromiseTest methodsFor: 'testing' stamp: 'jcg 4/5/2010 00:36'!testChainedResolvers	| promise1 promise2 result |	promise1 := Promise new.	promise2 := Promise new.	promise1 whenResolved: [:bool | promise2 resolveWith: bool not].	promise2 whenResolved: [:bool | result := bool].	promise1 resolveWith: false.	self should: [result].! !!PromiseTest methodsFor: 'testing' stamp: 'jcg 4/5/2010 00:30'!testSingleResolver	| promise sum |	sum := 0.	promise := Promise new.	promise whenResolved: [:val | sum := sum + val].	promise resolveWith: 5.	self should: [sum = 5].	! !!AllocationTest methodsFor: 'tests' stamp: 'dtl 4/7/2010 09:46'!expectedFailures 	"should be fixed with latest VMs but unix is still pending"	self isSafeVM		ifTrue: [ ^#() ]		ifFalse: [ ^#(testOneGigAllocation testOutOfMemorySignal) ]! !!AllocationTest methodsFor: 'tests' stamp: 'dtl 4/7/2010 09:47'!testOutOfMemorySignal	"Ensure that OOM is signaled eventually"	| sz |	self isSafeVM ifFalse: [ "avoid crashing"		^self assert: false ].	sz := 512*1024*1024. "work around the 1GB alloc bug"	self should:[(1 to: 2000) collect:[:i| Array new: sz]] raise: OutOfMemory.	"Call me when this test fails, I want your machine"	sz := 1024*1024*1024*1024.	self should:[Array new: sz] raise: OutOfMemory.! !