"Change Set:		7890KernelTests-nice.98KernelTests-nice.98:Test for http://bugs.squeak.org/view.php?id=7401Float negativeZero shallowCopy loose its negative sign.self assert: Float negativeZero copy hex = Float negativeZero hex.KernelTests-nice.97:Tests from http://bugs.squeak.org/view.php?id=6781plus additional tests for license clean #reciprocal #/ etc..."!!FractionTest methodsFor: 'tests - sinuses' stamp: 'GabrielOmarCotelli 5/23/2009 20:19'!testReciprocal	self 		assert: (1/2) reciprocal = 2;		assert: (3/4) reciprocal = (4/3);		assert: (-1/3) reciprocal = -3;		assert: (-3/5) reciprocal = (-5/3)! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/23/2009 19:26'!testReciprocal	self 		assert: 1 reciprocal = 1;		assert: 2 reciprocal = (1/2);		assert: -1 reciprocal = -1;		assert: -3 reciprocal = (-1/3).			self should: [ 0 reciprocal ] raise: ZeroDivide! !!NumberTest methodsFor: 'tests' stamp: 'nice 12/6/2007 21:24'!testRaisedTo	"this is a test related to http://bugs.squeak.org/view.php?id=6781"		self should: [0 raisedTo: -1] raise: ZeroDivide.	self should: [0 raisedTo: -1.0] raise: ZeroDivide.! !!ScaledDecimalTest methodsFor: 'tests' stamp: 'nice 5/17/2009 00:31'!testScaleExtension	"The scale is extended to the larger one in case of arithmetic operation"		#( #* #+ #- #/) do: [:op |		self assert: (2.5s1 perform: op with: 1.000s3) scale = 3.		self assert: (3.5000s4 perform: op with: 1.0s1) scale = 4.]! !!ScaledDecimalTest methodsFor: 'tests' stamp: 'nice 5/17/2009 00:40'!testZeroRaisedToInteger	"Zero might be handle specially"		self should: [0.0s1 raisedToInteger: -1] raise: Error.	self assert: (0.0s1 raisedToInteger: 0) = 1.	self assert: (0.0s1 raisedToInteger: 0) scale = 1.	self assert: (0.0s1 raisedToInteger: 1) = 0.	self assert: (0.0s1 raisedToInteger: 1) scale = 1.	self assert: (0.0s1 raisedToInteger: 2) = 0.	self assert: (0.0s1 raisedToInteger: 2) scale = 1.! !!ScaledDecimalTest methodsFor: 'tests' stamp: 'nice 5/17/2009 00:35'!testRaisedToInteger	"Raising to integer should preserve class and scale"		self assert: (3.0s1 raisedToInteger: -1) scale = 1.	self assert: (3.0s1 raisedToInteger: -1) = (1/3).	self assert: (3.0s1 raisedToInteger: 0) scale = 1.	self assert: (3.0s1 raisedToInteger: 0) = 1.	self assert: (3.0s1 raisedToInteger: 1) scale = 1.	self assert: (3.0s1 raisedToInteger: 1) = 3.	self assert: (3.0s1 raisedToInteger: 2) scale = 1.	self assert: (3.0s1 raisedToInteger: 2) = 9.! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/23/2009 20:49'!testOne	self 		assert: Integer one = 1;		assert: Float one = 1.0;		assert: Fraction one = 1! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/26/2009 21:55'!testIntegerPart	self 		assert: 2 integerPart = 2;		assert: (1/2) integerPart = 0;		assert: (4/3) integerPart = 1;		assert: 2.0 integerPart = 2.0;		assert: 0.5 integerPart = 0.0;		assert: 2.5 integerPart = 2.0! !!FloatTest methodsFor: 'NaN behavior' stamp: 'GabrielOmarCotelli 5/23/2009 20:38'!testReciprocal	self 		assert: 1.0 reciprocal = 1.0;		assert: 2.0 reciprocal = 0.5;		assert: -1.0 reciprocal = -1.0;		assert: -2.0 reciprocal = -0.5.			self should: [ 0.0 reciprocal ] raise: ZeroDivide! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/26/2009 21:57'!testFractionPart	self 		assert: 2 fractionPart = 0;		assert: (1/2) fractionPart = (1/2);		assert: (4/3) fractionPart = (1/3);		assert: 2.0 fractionPart = 0.0;		assert: 0.5 fractionPart = 0.5;		assert: 2.5 fractionPart = 0.5! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/25/2009 16:41'!testRaisedToInteger	self 		assert: (2 raisedToInteger: 0) = 1;		assert: (2 raisedToInteger: 1) = 2;		assert: (2 raisedToInteger: 4) = 16;		assert: (0 raisedToInteger: 0) = 1;		assert: (0 raisedToInteger: 2) = 0;		assert: (2 raisedToInteger: -1) = (1/2);		assert: (2 raisedToInteger: -4) = (1/16).		self 		assert: (-3 raisedTo: 0) = 1;		assert: (-3 raisedTo: 1) = -3;		assert: (-3 raisedTo: 2) = 9;		assert: (-3 raisedTo: 3) = -27;		assert: (-3 raisedTo: -2) = (1/9);		assert: (-3 raisedTo: -3) = (-1/27).		self should: [ 0 raisedTo: -1 ] raise: ZeroDivide! !!ScaledDecimalTest methodsFor: 'tests' stamp: 'nice 5/17/2009 00:38'!testOneRaisedToInteger	"One might be handled specially"		self assert: (1.0s1 raisedToInteger: -1) scale = 1.	self assert: (1.0s1 raisedToInteger: -1) = 1.	self assert: (1.0s1 raisedToInteger: 0) scale = 1.	self assert: (1.0s1 raisedToInteger: 0) = 1.	self assert: (1.0s1 raisedToInteger: 1) scale = 1.	self assert: (1.0s1 raisedToInteger: 1) = 1.	self assert: (1.0s1 raisedToInteger: 2) scale = 1.	self assert: (1.0s1 raisedToInteger: 2) = 1.! !!NumberTest methodsFor: 'tests' stamp: 'GabrielOmarCotelli 5/25/2009 16:46'!testRaisedToIntegerWithFloats	self 		assert: (2.0 raisedToInteger: 0) = 1.0;		assert: (2.0 raisedToInteger: 1) = 2.0;		assert: (2.0 raisedToInteger: 4) = 16.0;		assert: (0.0 raisedToInteger: 0) = 1.0;		assert: (0.0 raisedToInteger: 2) = 0.0;		assert: (2.0 raisedToInteger: -1) = 0.5;		assert: (2.0 raisedToInteger: -4) = 0.0625.		self 		assert: (-3.0 raisedTo: 0) = 1.0;		assert: (-3.0 raisedTo: 1) = -3.0;		assert: (-3.0 raisedTo: 2) = 9.0;		assert: (-3.0 raisedTo: 3) = -27.0;		assert: (-2.0 raisedTo: -2) = 0.25;		assert: (-2.0 raisedTo: -3) = -0.125.		self should: [ 0.0 raisedTo: -1 ] raise: ZeroDivide! !!FloatTest methodsFor: 'testing - arithmetic' stamp: 'GabrielOmarCotelli 6/6/2009 17:14'!testDivide	self assert: 1.5 / 2.0 = 0.75.		self assert: 2.0 / 1 = 2.0.		self should: [ 2.0 / 0 ] raise: ZeroDivide.	self should: [ 2.0 / 0.0 ] raise: ZeroDivide.	self should: [ 1.2 / Float negativeZero ] raise: ZeroDivide.	self should: [ 1.2 / (1.3 - 1.3) ] raise: ZeroDivide	! !!FloatTest methodsFor: 'testing - arithmetic' stamp: 'nice 12/1/2007 17:59'!testRaisedTo	"this is a test related to http://bugs.squeak.org/view.php?id=6781"		self should: [0.0 raisedTo: -1] raise: ZeroDivide.	self should: [0.0 raisedTo: -1.0] raise: ZeroDivide.! !!FloatTest methodsFor: 'testing' stamp: 'nice 10/4/2009 23:13'!testCopy	"Elementary tests"	self assert: 2.0 copy = 2.0.	self assert: -0.5 copy = -0.5.		"Are exceptional Floats preserved by the copy ?"	self assert: Float nan copy isNaN.	self assert: Float infinity copy = Float infinity.	self assert: Float infinity negated copy = Float infinity negated.		"Is the sign of zero preserved by the copy ?"	self assert: 0.0 copy hex = 0.0 hex.	self assert: Float negativeZero copy hex = Float negativeZero hex.! !