"Change Set:		8734System-nice.216System-nice.216:remove some #or:or: #and:and: sendsSystem-ar.215:Remove Preference>>viewRegistry which is no longer used."!Object subclass: #Preference	instanceVariableNames: 'name value defaultValue helpString localToProject categoryList changeInformee changeSelector type'	classVariableNames: ''	poolDictionaries: ''	category: 'System-Preferences'!!Preference methodsFor: 'accessing' stamp: 'ar 1/2/2010 23:56'!type	"The type of this preference. One of #Boolean, #Color, #String, #Font, #Number etc."	^type! !!Utilities class methodsFor: 'fetching updates' stamp: 'nice 1/1/2010 21:48'!summariesForUpdates: startNumber through: stopNumber	"Answer the concatenation of summary strings for updates numbered in the given range"	^ String streamContents: [:aStream |		((ChangeSet changeSetsNamedSuchThat:			[:aName | aName first isDigit						 and: [aName initialIntegerOrNil >= startNumber						and: [aName initialIntegerOrNil <= stopNumber]]]) asSortedCollection:				[:a :b | a name < b name]) do:					[:aChangeSet | aStream cr; nextPutAll: aChangeSet summaryString]]"Utilities summariesForUpdates: 4899 through: 4903"! !!SmalltalkImage methodsFor: 'image cleanup' stamp: 'nice 1/1/2010 21:56'!fixObsoleteReferences	"SmalltalkImage current fixObsoleteReferences"		Smalltalk garbageCollect; garbageCollect.	Preference allInstances do: [:each | | informee | 		informee := each instVarNamed: #changeInformee.		((informee isKindOf: Behavior)			and: [informee isObsolete])			ifTrue: [				Transcript show: 'Preference: '; show: each name; cr.				each instVarNamed: #changeInformee put: (Smalltalk at: (informee name copyReplaceAll: 'AnObsolete' with: '') asSymbol)]]. 	CompiledMethod allInstances do: [:method |		| obsoleteBindings |		obsoleteBindings := method literals select: [:literal |			literal isVariableBinding				and: [literal value isBehavior				and: [literal value isObsolete]]].		obsoleteBindings do: [:binding |			| obsName realName realClass |			obsName := binding value name.			Transcript show: 'Binding: '; show: obsName; cr.			realName := obsName copyReplaceAll: 'AnObsolete' with: ''.			realClass := Smalltalk at: realName asSymbol ifAbsent: [UndefinedObject].			binding isSpecialWriteBinding				ifTrue: [binding privateSetKey: binding key value: realClass]				ifFalse: [binding key: binding key value: realClass]]].	Behavior flushObsoleteSubclasses.	Smalltalk garbageCollect; garbageCollect.	SystemNavigation default obsoleteBehaviors size > 0		ifTrue: [			SystemNavigation default obsoleteBehaviors inspect.			self error:'Still have obsolete behaviors. See inspector'].! !!MethodReference methodsFor: 'comparisons' stamp: 'nice 1/1/2010 21:57'!= anotherMethodReference 	"Answer whether the receiver and the argument represent the 	same object."	^ self species == anotherMethodReference species		and: [self classSymbol = anotherMethodReference classSymbol		and: [self classIsMeta = anotherMethodReference classIsMeta		and: [self methodSymbol = anotherMethodReference methodSymbol]]]! !Preference class removeSelector: #initialize!Preference initialize!