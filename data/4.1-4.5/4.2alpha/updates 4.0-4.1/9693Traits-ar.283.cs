"Change Set:		9693Traits-ar.283Traits-ar.283:Fix SystemChangeNotification for traits.NB, SystemNotification is broken: It requires passing in *both* old and new class/trait verbatim even though they cannot both exist at the same time and even though copying is not desirable (for the current trait implementation copying would mean recompiling all methods). So we pass in a shallowCopy to avoid excessive recompilation but of course if a client ever looks deeply inside it it will quickly find that it's not a copy. This should be fixed by passing a description of some sort (similar to MCClassDefinition) or specifically the values that were changed."!!ClassTrait methodsFor: 'initialize' stamp: 'ar 3/11/2010 08:45'!uses: aTraitComposition	| newTraits copyOfOldTrait |	copyOfOldTrait := self shallowCopy.	newTraits := aTraitComposition asTraitComposition.	newTraits traitsDo:[:t|		(t isBaseTrait and:[t classSide hasMethods]) 			ifTrue:[self error: 'Cannot add: ', t].		(t isClassTrait and:[(baseTrait includesTrait: t baseTrait) not]) 			ifTrue:[self error: 'Cannot add: ', t].	].	self installTraitsFrom: newTraits.	SystemChangeNotifier uniqueInstance		traitDefinitionChangedFrom: copyOfOldTrait to: self.! !!Trait class methodsFor: 'instance creation' stamp: 'ar 3/11/2010 08:47'!named: aSymbol uses: aTraitComposition category: aString env: anEnvironment	| trait oldTrait systemCategory |	systemCategory := aString asSymbol.	trait := anEnvironment at: aSymbol ifAbsent: [nil].	(trait == nil or:[trait isMemberOf: Trait]) ifFalse: [		^self error: trait name , ' is not a Trait'].	oldTrait := trait shallowCopy.	trait ifNil:[trait := Trait new].	trait		setName: aSymbol		andRegisterInCategory: systemCategory		environment: anEnvironment.	trait uses: aTraitComposition.		"... notify interested clients ..."	oldTrait ifNil:[		SystemChangeNotifier uniqueInstance classAdded: trait inCategory: systemCategory.	] ifNotNil:[		SystemChangeNotifier uniqueInstance traitDefinitionChangedFrom: oldTrait to: trait.		systemCategory = oldTrait category  ifFalse:[			SystemChangeNotifier uniqueInstance class: trait 				recategorizedFrom: oldTrait category to: systemCategory].	].	^ trait! !