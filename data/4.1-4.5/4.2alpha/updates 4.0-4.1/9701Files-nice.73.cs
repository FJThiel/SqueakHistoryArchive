"Change Set:		9701Files-nice.73Files-nice.73:Let #readInto:startingAt:count: handle the buffer and answer number of byte reads and always avoid a copy, and #next:into:startingAt: use it and eventually use a copy if number of bytes read less than requested count.Files-nice.72:Fix StandardFileStream >>readInto:startingAt:count:It did answer size of buffer rather than number of bytes read."!!StandardFileStream methodsFor: 'read, write, position' stamp: 'nice 3/15/2010 21:02'!readInto: byteArray startingAt: startIndex count: count	"Read into the given array as specified, and return the count	actually transferred.  index and count are in units of bytes or	longs depending on whether the array is Bitmap, String or ByteArray"		| nRead newN newStartIndex |	collection 		ifNil: [ 			newN := count.			newStartIndex := startIndex ]		ifNotNil: [			byteArray class isBytes 				ifFalse: [ 					position < readLimit ifTrue: [ self flushReadBuffer ].					newN := count.					newStartIndex := startIndex ]				ifTrue: [					| available |					(available := readLimit - position) > 0 						ifFalse: [ available := 0 ]						ifTrue: [							| bufferedCount |							bufferedCount := count min: available.							byteArray								replaceFrom: startIndex								to: startIndex + bufferedCount - 1								with: collection								startingAt: position + 1.							position := position + bufferedCount.							bufferedCount = count ifTrue: [ ^count ] ].					newN := count - available.					newStartIndex := startIndex + available ] ].	nRead := self primRead: fileID into: byteArray startingAt: newStartIndex count: newN.	^nRead + (count - newN)! !!StandardFileStream methodsFor: 'read, write, position' stamp: 'nice 3/15/2010 21:04'!next: n into: aString startingAt: startIndex	"Read n bytes into the given string.	Return aString or a partial copy if less than	n elements have been read."		| count |	count := self readInto: aString startingAt: startIndex count: n.	count = n		ifTrue:[ ^aString ]		ifFalse:[ ^aString copyFrom: 1 to: startIndex + count - 1 ]! !