"Change Set:		8021EToys-nice.39EToys-nice.39:forgot one #asArray sortEToys-nice.38:Use #keys rather than #fasterKeysNote that pattern (x keys asArray sort) could as well be written (x keys sort) now that keys returns an Array...This #asArray is here solely for cross-dialect/fork compatibility."!!EToyVocabulary methodsFor: 'initialization' stamp: 'nice 10/20/2009 23:40'!includesSelector: aSelector forInstance: anInstance ofClass: aTargetClass limitClass: mostGenericClass	"Answer whether the vocabulary includes the given selector for the given class (and instance, if provided), only considering method implementations in mostGenericClass and lower"	| classToUse aClass |	(aTargetClass isUniClass and:		[(aTargetClass namedTileScriptSelectors includes: aSelector) or:			[aTargetClass slotInfo keys anySatisfy:				[:anInstVarName | (Utilities getterSelectorFor: anInstVarName) = aSelector or: [(Utilities setterSelectorFor: anInstVarName) = aSelector]]]])					 ifTrue: [^ true].	(methodInterfaces includesKey: aSelector) ifFalse: [^ false].	classToUse := self classToUseFromInstance: anInstance ofClass: aTargetClass.	^ (aClass := classToUse whichClassIncludesSelector: aSelector)		ifNil:			[false]		ifNotNil:			[aClass includesBehavior: mostGenericClass]! !!StandardScriptingSystem methodsFor: '*eToys-customevents-custom events' stamp: 'nk 9/26/2003 23:30'!globalCustomEventNames	^self customEventsRegistry keys asArray sort! !!KedamaSequenceExecutionStub methodsFor: 'method management' stamp: 'nice 10/20/2009 23:45'!compileAllAccessors	turtles info keys do: [:k |		(#(who x y heading color visible normal) includes: k) ifFalse: [			self compileScalarInstVarAccessorsFor: k.		].	].! !!EToyVocabulary methodsFor: 'method list' stamp: 'nice 10/21/2009 00:35'!allMethodsInCategory: aCategoryName forInstance: anObject ofClass: aClass	"Answer a list of all methods in the etoy interface which are in the given category, on behalf of anObject, or if it is nil, aClass"	| aCategory unfiltered suitableSelectors isAll |	aCategoryName ifNil: [^ OrderedCollection new].	aClass isUniClass ifTrue:		[aCategoryName = ScriptingSystem nameForScriptsCategory ifTrue:			[^ aClass namedTileScriptSelectors].		aCategoryName = ScriptingSystem nameForInstanceVariablesCategory ifTrue:			[^ aClass slotInfo keys asArray sort collect:				[:anInstVarName | Utilities getterSelectorFor: anInstVarName]]].	unfiltered := (isAll := aCategoryName = self allCategoryName)		ifTrue:			[methodInterfaces collect: [:anInterface | anInterface selector]]		ifFalse:			[aCategory := categories detect: [:cat | cat categoryName = aCategoryName] 							ifNone: [^ OrderedCollection new].			aCategory elementsInOrder collect: [:anElement | anElement selector]].	(anObject isKindOf: Player) ifTrue:		[suitableSelectors := anObject costume selectorsForViewer.		unfiltered := unfiltered  select:			[:aSelector | suitableSelectors includes: aSelector]].	(isAll and: [aClass isUniClass]) ifTrue:		[unfiltered addAll: aClass namedTileScriptSelectors.		unfiltered addAll: (aClass slotInfo keys asArray sort collect:			[:anInstVarName | Utilities getterSelectorFor: anInstVarName])].	^ (unfiltered copyWithoutAll: #(dummy unused)) asSortedArray! !!KedamaTurtleVectorPlayer methodsFor: 'player protocol' stamp: 'nice 10/20/2009 23:46'!compileAllAccessors	info keys do: [:k |		(#(who x y heading color visible) includes: k) ifFalse: [			self compileVectorInstVarAccessorsFor: k.		].	].! !!PasteUpMorph methodsFor: '*eToys-customevents-scripting' stamp: 'nk 9/26/2003 23:20'!userCustomEventNames	| reg |	reg := self valueOfProperty: #userCustomEventsRegistry ifAbsent: [ ^#() ].	^reg keys asArray sort! !