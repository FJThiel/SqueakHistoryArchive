"Change Set:		7185KernelTests-ar.67KernelTests-ar.67:Merge incoming tests; add a test for ensuring that changing a #subclass: to a #variableSubclass: doesn't raise an error.KernelTests-p4s.64:Added tests for SmallInteger even and odd methods.KernelTests-dtl.465:Reference Mantis 7361: Float >= primitive failure code sends > instead of >=Added FloatTest>>testComparisonWhenPrimitiveFailsKernelTests-it.66:Testing False class   * added tests for instance methods asBit and isInMemory.Testing True class   * added tests for instance methods and:, asBit, ifFalse, ifFalse:IfTrue:, ifTrue:, ifTrue:ifFalse:, not, |, or:.   * fixed testInMemory and testNot to test true rather than false."!!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:22'!testNot	self assert: (true not = false).! !!ClassBuilderFormatTests methodsFor: 'testing' stamp: 'ar 7/13/2009 21:18'!testChangeToVariableSubclass	"Ensure that the invariants for superclass/subclass format are preserved"	baseClass := Object subclass: self baseClassName		instanceVariableNames: ''		classVariableNames: ''		poolDictionaries: ''		category: 'Kernel-Tests-ClassBuilder'.	[		self shouldnt:[baseClass := Object variableSubclass: self baseClassName			instanceVariableNames: ''			classVariableNames: ''			poolDictionaries: ''			category: 'Kernel-Tests-ClassBuilder'] raise: Error.	] ensure:[self cleanup].! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:22'!testInMemory	self assert: (true isInMemory = true).! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:11'!testAnd	self assert: (true and: ['alternativeBlock']) = 'alternativeBlock'.! !!FalseTest methodsFor: 'tests' stamp: 'it 7/13/2009 22:24'!testAsBit	self assert: (false asBit = 0).! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:15'!testIfTrueIfFalse	self assert: (true ifTrue: ['trueAlternativeBlock']                       ifFalse: ['falseAlternativeBlock']) = 'trueAlternativeBlock'. ! !!SmallIntegerTest methodsFor: 'testing - basic' stamp: 'p4s 7/12/2009 01:35'!testOdd		self deny: (SmallInteger minVal odd).	self assert: (SmallInteger maxVal odd).		self assert: ((SmallInteger minVal + 1) odd).	self deny: ((SmallInteger maxVal - 1) odd).		self assert: (1 odd).	self assert: (-1 odd).		self deny: (2 odd).	self deny: (-2 odd).		self deny: (0 odd).! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:12'!testIfFalse	self assert: (true ifFalse: ['alternativeBlock']) = nil. ! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:19'!testOr	self assert: (true or: ['alternativeBlock']) = true.! !!SmallIntegerTest methodsFor: 'testing - basic' stamp: 'p4s 7/12/2009 01:33'!testEven		self assert: (SmallInteger minVal even).	self deny: (SmallInteger maxVal even).		self deny: ((SmallInteger minVal + 1) even).	self assert: ((SmallInteger maxVal - 1) even).		self deny: (1 even).	self deny: (-1 even).		self assert: (2 even).	self assert: (-2 even).		self assert: (0 even).! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:20'!testIfTrue		self assert: (true ifTrue: ['alternativeBlock']) = 'alternativeBlock'. ! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:16'!testIfFalseIfTrue	self assert: (true ifFalse: ['falseAlternativeBlock']                       ifTrue: ['trueAlternativeBlock']) = 'trueAlternativeBlock'. ! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:24'!testAsBit	self assert: (true asBit = 1).! !!TrueTest methodsFor: 'testing' stamp: 'it 7/13/2009 22:07'!testOR	self assert: (true | true) = true.	self assert: (true | false) = true.! !!FalseTest methodsFor: 'tests' stamp: 'it 7/13/2009 22:22'!testInMemory	self assert: (false isInMemory = true).! !!FloatTest methodsFor: 'testing compare' stamp: 'nice 7/10/2009 22:27'!testComparisonWhenPrimitiveFails	"This is related to http://bugs.squeak.org/view.php?id=7361"	self deny: 0.5 < (1/4).	self deny: 0.5 < (1/2).	self assert: 0.5 < (3/4).		self deny: 0.5 <= (1/4).	self assert: 0.5 <= (1/2).	self assert: 0.5 <= (3/4).		self assert: 0.5 > (1/4).	self deny: 0.5 > (1/2).	self deny: 0.5 > (3/4).		self assert: 0.5 >= (1/4).	self assert: 0.5 >= (1/2).	self deny: 0.5 >= (3/4).		self deny: 0.5 = (1/4).	self assert: 0.5 = (1/2).	self deny: 0.5 = (3/4).		self assert: 0.5 ~= (1/4).	self deny: 0.5 ~= (1/2).	self assert: 0.5 ~= (3/4).! !