"Change Set:		8709Kernel-ar.363Kernel-ar.363:Making traits unloadable: We need three backstop methods in Behavior.Kernel-ul.361:- speed up method trailer creation- speed up source fetching from source filesKernel-ul.362:- speed up method trailer creation- speed up source fetching from source files"!Object subclass: #CompiledMethodTrailer	instanceVariableNames: 'data encodedData kind size method'	classVariableNames: ''	poolDictionaries: ''	category: 'Kernel-Methods'!!CompiledMethodTrailer class methodsFor: 'generated' stamp: 'ul 12/31/2009 19:01'!trailerKindDecoders	^#(#decodeNoTrailer #decodeClearedTrailer #decodeTempsNamesQCompress #decodeTempsNamesZip #decodeSourceBySelector #decodeSourceByStringIdentifier #decodeEmbeddedSourceQCompress #decodeEmbeddedSourceZip #decodeVarLengthSourcePointer #decodeExtendedKind #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeUndefined #decodeSourcePointer)! !!CompiledMethod methodsFor: 'source code management' stamp: 'ul 12/31/2009 18:28'!getSourceFromFileAt: sourcePointer		| position index |	position := SourceFiles filePositionFromSourcePointer: sourcePointer.	position = 0 ifTrue: [ ^nil ].	index := SourceFiles fileIndexFromSourcePointer: sourcePointer.	^(RemoteString newFileNumber: index position: position)		text! !!CompiledMethod methodsFor: 'source code management' stamp: 'ul 12/31/2009 18:15'!getSourceFor: selector in: class	"Retrieve or reconstruct the source code for this method."	| trailer source |	trailer := self trailer.	trailer tempNames ifNotNil: [:namesString | 		"Magic sources -- decompile with temp names"		^ ((class decompilerClass new withTempNames: namesString)				decompile: selector in: class method: self)			decompileString].		trailer sourceCode ifNotNil: [:code | ^ code ].		trailer hasSourcePointer ifFalse: [		"No source pointer -- decompile without temp names"		^ (class decompilerClass new decompile: selector in: class method: self)			decompileString].	"Situation normal;  read the sourceCode from the file"	source := [self getSourceFromFileAt: trailer sourcePointer]				on: Error		"An error can happen here if, for example, the changes file has been truncated by an aborted download.  The present solution is to ignore the error and fall back on the decompiler.  A more thorough solution should probably trigger a systematic invalidation of all source pointers past the end of the changes file.  Consider that, as time goes on, the changes file will eventually grow large enough to cover the lost code, and then instead of falling into this error case, random source code will get returned."				do: [ :ex | ex return: nil].			^source ifNil: [			"Something really wrong -- decompile blind (no temps)"			 (class decompilerClass new decompile: selector in: class method: self)				decompileString]! !!Behavior methodsFor: 'traits' stamp: 'ar 12/31/2009 18:22'!hasTraitComposition	"Backstop. When traits are unloaded we never have a trait composition"	^false! !!Behavior methodsFor: 'traits' stamp: 'ar 1/1/2010 17:51'!traitCompositionString	"Backstop. Monticello needs a traitCompositionString even with traits unloaded"	^'{}'! !!CompiledMethodTrailer class methodsFor: 'as yet unclassified' stamp: 'ul 12/31/2009 18:54'!trailerKinds	" see class comment for description. If you change this method, evaluate this:	self generateTrailerKindDecoders"		^#("000000" #NoTrailer"000001" #ClearedTrailer"000010" #TempsNamesQCompress"000011" #TempsNamesZip"000100" #SourceBySelector"000101" #SourceByStringIdentifier"000110" #EmbeddedSourceQCompress"000111" #EmbeddedSourceZip"001000" #VarLengthSourcePointer"001001" #ExtendedKind"001010" #Undefined"001011" #Undefined"001100" #Undefined"001101" #Undefined"001110" #Undefined"001111" #Undefined"010000" #Undefined"010001" #Undefined"010010" #Undefined"010011" #Undefined"010100" #Undefined"010101" #Undefined"010110" #Undefined"010111" #Undefined"011000" #Undefined"011001" #Undefined"011010" #Undefined"011011" #Undefined"011100" #Undefined"011101" #Undefined"011110" #Undefined"011111" #Undefined"100000" #Undefined"100001" #Undefined"100010" #Undefined"100011" #Undefined"100100" #Undefined"100101" #Undefined"100110" #Undefined"100111" #Undefined"101000" #Undefined"101001" #Undefined"101010" #Undefined"101011" #Undefined"101100" #Undefined"101101" #Undefined"101110" #Undefined"101111" #Undefined"110000" #Undefined"110001" #Undefined"110010" #Undefined"110011" #Undefined"110100" #Undefined"110101" #Undefined"110110" #Undefined"110111" #Undefined"111000" #Undefined"111001" #Undefined"111010" #Undefined"111011" #Undefined"111100" #Undefined"111101" #Undefined"111110" #Undefined"111111" #SourcePointer	)! !!Behavior methodsFor: 'initialize-release' stamp: 'ar 1/1/2010 16:08'!superclass: aClass methodDictionary: mDict format: fmt	"Basic initialization of the receiver.	Must only be sent to a new instance; else we would need Object flushCache."	superclass := aClass.	format := fmt.	methodDict := mDict.! !!Behavior methodsFor: 'traits' stamp: 'ar 12/31/2009 18:22'!traitComposition	"Backstop. When traits are unloaded we never have a trait composition"	^#()! !!CompiledMethodTrailer class methodsFor: 'as yet unclassified' stamp: 'ul 12/31/2009 19:01'!generateTrailerKindDecoders	self class		compile: (String streamContents: [ :stream |			stream				nextPutAll: 'trailerKindDecoders'; cr;				cr;				tab; nextPut: $^; print: (					self trailerKinds collect: [ :each | 						('decode', each) asSymbol ]) ])		classified: 'generated'		! !!CompiledMethod methodsFor: 'source code management' stamp: 'ul 12/31/2009 18:29'!getSourceFromFile		^self getSourceFromFileAt: self sourcePointer! !!CompiledMethodTrailer methodsFor: 'initialize-release' stamp: 'ul 12/31/2009 17:05'!method: aMethod	| flagByte index |	data := size := nil.	method := aMethod.	flagByte := method at: method size.	"trailer kind encoded in 6 high bits of last byte"	index := flagByte >> 2 + 1.	kind := self class trailerKinds at: index.	"decode the trailer bytes"	self perform: (self class trailerKindDecoders at: index).		"after decoding the trailer, size must be set"	self assert: size notNil	! !