"Change Set:		9729Files-nice.75Files-nice.75:Let nextPut: answer the put object.Same for nextPutAll:, answer the collection argumentFiles-cmm.74:Integrated DirectoryEntry>>'attributes' so that third-party applications can easily extend DirectoryEntry with whatever additional state they need."!Object subclass: #DirectoryEntry	instanceVariableNames: 'directory name creationTime modificationTime fileSize attributes'	classVariableNames: ''	poolDictionaries: ''	category: 'Files-Directories'!!DirectoryEntry methodsFor: 'access' stamp: 'cmm 9/13/2007 16:54'!attributeNamed: aString ifAbsent: oneArgBlock 	"Answer the value of attribute named aString.  If no attribute by that name has ever been set, answer oneArgBlock value."	^ self attributes 		at: aString		ifAbsent: oneArgBlock! !!DirectoryEntry methodsFor: 'access' stamp: 'cmm 9/13/2007 16:55'!attributeNamed: aString put: anObject	"Set the value of attribute named aString.  This is provided for extension by third-party developers."	^ self attributes 		at: aString		put: anObject! !!CompressedSourceStream methodsFor: 'access' stamp: 'nice 3/19/2010 19:13'!nextPutAll: str	| n nInSeg |	n := str size.	n <= (writeLimit - position) ifTrue:		["All characters fit in buffer"		collection replaceFrom: position + 1 to: position + n with: str.		dirty := true.		position := position + n.		readLimit := readLimit max: position.		endOfFile := endOfFile max: self position.		^ str].	"Write what fits in segment.  Then (after positioning) write what remains"	nInSeg := writeLimit - position.	nInSeg = 0		ifTrue: [self position: self position.				self nextPutAll: str]		ifFalse: [self nextPutAll: (str first: nInSeg).				self position: self position.				self nextPutAll: (str allButFirst: nInSeg)].	^str	! !!DirectoryEntry methodsFor: 'private-initialization' stamp: 'cmm 9/13/2007 16:55'!attributes	^ attributes ifNil: [ attributes := Dictionary new ]! !!HtmlFileStream methodsFor: 'read, write, position' stamp: 'nice 3/19/2010 19:13'!nextPutAll: aString	"Write the whole string, translating as we go. 4/6/96 tk"	"Slow, but faster than using aString asHtml?"	^aString do: [:each | self nextPut: each].! !!DirectoryEntry methodsFor: 'access' stamp: 'cmm 9/21/2009 18:24'!extension	^ FileDirectory extensionFor: self name! !!DirectoryEntry methodsFor: 'access' stamp: 'cmm 10/30/2009 15:50'!baseName	^ FileDirectory baseNameFor: self name! !