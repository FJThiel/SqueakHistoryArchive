"Change Set:		8051Compiler-nice.93Compiler-nice.93:Fix a test I broke : the test now needs (keys asSet)Compiler-jcg.92:ParseNode>>notYetImplemented is no longer necessary, now that the implementation inherited from Object raises an error instead of popping up an exception (as of Kernel-jcg.279)."!!DecompilerTests methodsFor: 'utilities' stamp: 'nice 10/23/2009 22:49'!decompileClassesSelect: aBlock		(Smalltalk classNames select: aBlock) do:		[:cn | | cls |		cls := Smalltalk at: cn.		Smalltalk garbageCollect.		 Transcript cr; show: cn.		 cls selectorsDo:			[:selector | | methodNode oldMethod newMethod oldCodeString newCodeString |			(self isFailure: cls sel: selector) ifFalse:				[" to help making progress					(self						isStoredProblems: cls theNonMetaClass						sel: selector						meta: cls isMeta)					ifFalse: [ "				Transcript nextPut: $.; flush.				self checkDecompileMethod: (cls compiledMethodAt: selector)]]]! !!ClosureCompilerTest methodsFor: 'tests' stamp: 'nice 10/23/2009 23:46'!testMethodAndNodeTempNames	"self new testMethodAndNodeTempNames"	"Test that BytecodeAgnosticMethodNode>>blockExtentsToTempRefs answers the same	 structure as CompiledMethod>>blockExtentsToTempRefs when the method has been	 copied with the appropriate temps.  This tests whether doit methods are debuggable	 since they carry their own temps."	self closureCases do:		[:source| | mn om m mbe obe |		mn := source first isLetter					ifTrue:						[self class compilerClass new							compile: source							in: self class							notifying: nil							ifFail: [self error: 'compilation error']]					ifFalse:						[self class compilerClass new							compileNoPattern: source							in: self class							context: nil							notifying: nil							ifFail: [self error: 'compilation error']].		m := (om := mn generate: #(0 0 0 0)) copyWithTempsFromMethodNode: mn.		self assert: m holdsTempNames.		self assert: m endPC = om endPC.		mbe := m blockExtentsToTempsMap.		obe := mn blockExtentsToTempsMap.		self assert: mbe keys asSet = obe keys asSet.		(mbe keys intersection: obe keys) do:			[:interval|			self assert: (mbe at: interval) = (obe at: interval)]]! !ParseNode removeSelector: #notYetImplemented!