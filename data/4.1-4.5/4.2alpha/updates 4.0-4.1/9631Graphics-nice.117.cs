"Change Set:		9631Graphics-nice.117Graphics-nice.117:Restore TextStopConditions backward compatibility support for FreeType overrides.Otherwise, VMMaker update cannot be loaded safely in the image.Add a long comment to TextStopConditions.I cannot complain about comments if I don't put some myself.Maybe it does not belong here, but hey, that's better than nothing."!Object subclass: #TextStopConditions	instanceVariableNames: 'stops crossedX endOfRun'	classVariableNames: ''	poolDictionaries: ''	category: 'Graphics-Text'!!CharacterScanner class methodsFor: 'class initialization' stamp: 'nice 3/8/2010 11:51'!initialize"	CharacterScanner initialize"	| a |	a := TextStopConditions new.	a at: 1 + 1 put: #embeddedObject.	a at: Tab asciiValue + 1 put: #tab.	a at: CR asciiValue + 1 put: #cr.	a at: Character lf asciiValue + 1 put: #cr.		NilCondition := a copy.	DefaultStopConditions := a copy.	PaddedSpaceCondition := a copy.	PaddedSpaceCondition at: Space asciiValue + 1 put: #paddedSpace.		SpaceCondition := a copy.	SpaceCondition at: Space asciiValue + 1 put: #space.! !!CharacterScanner methodsFor: 'initialize' stamp: 'ul 3/8/2010 04:44'!initializeStringMeasurer	stopConditions := TextStopConditions new! !!TextStopConditions methodsFor: 'initialize-release' stamp: 'nice 3/8/2010 14:31'!initialize	"Initialize the default stop conditions."	stops := Array new: 258.	self endOfRun: #endOfRun.	self crossedX: #crossedX.! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 14:01'!crossedX	"Answer the special action to be performed when crossing composition bounds."		^crossedX! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 14:01'!at: anInteger	"Answer the special action associated with a character of code anInteger, or nil if none.	The character code should be betxween 1 and 256 (presumably codePoint + 1).	It can eventually be 257 for endOfRun action, or 258 for crossedX action for backward compatibility with historical squeak versions."		^stops at: anInteger! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 12:00'!crossedX: aSymbolOrNil	crossedX := aSymbolOrNil.		"Backward compatibility with historical EndOfRun TextConstant handling"	stops size >= 258 ifTrue: [stops at: 258 put: crossedX]! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 12:00'!endOfRun: aSymbolOrNil	endOfRun := aSymbolOrNil.		"Backward compatibility with historical EndOfRun TextConstant handling"	stops size >= 257 ifTrue: [stops at: 257 put: endOfRun]! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 14:01'!endOfRun	"Answer the special action to be performed et end of text."		^endOfRun! !!TextStopConditions methodsFor: 'accessing' stamp: 'nice 3/8/2010 14:02'!at: anInteger put: aSymbolOrNil	"Set the special action associated with a character of code anInteger, or nil if none.	The character code should be betxween 1 and 256 (presumably codePoint + 1).	It can eventually be 257 for endOfRun action, or 258 for crossedX action for backward compatibility with historical squeak versions."		anInteger = 257		ifTrue: [			self endOfRun: aSymbolOrNil..			^aSymbolOrNil].	anInteger = 258		ifTrue: [			self crossedX: aSymbolOrNil..			^aSymbolOrNil].	^stops at: anInteger put: aSymbolOrNil! !TextStopConditions removeSelector: #setStops:!CharacterScanner initialize!