"Change Set:		7530ToolBuilder-Morphic-ar.32ToolBuilder-Morphic-ar.32:Morphic ToolBuilder tweaks: Leave buttons with a white background to have proper mouse over highlight. Update enabled selector *after* updating color to get disabled state in buttons right.ToolBuilder-Morphic-ar.26:Morphic ToolBuilder tweaks: buttons need to update more often, and their appearance should match current looks.ToolBuilder-Morphic-ar.27:Use the preferred code font for pluggable texts in tools.ToolBuilder-Morphic-ar.28:A few subtle tweaks for pluggable panels in Morphic. Makes button rows and other composite panels look nicer.ToolBuilder-Morphic-ar.29:Update button colors more often; otherwise inheritance button gets wrong color.ToolBuilder-Morphic-ar.30:Changes the default color of pluggable text to match current morphic style.ToolBuilder-Morphic-ar.31:Don't remember text widgets as updatable panes - they are not supported and create useless warnings."!!PluggableButtonMorphPlus methodsFor: 'updating' stamp: 'ar 8/9/2009 01:11'!update: what	what ifNil:[^self].	what == getLabelSelector ifTrue: [		self label: (model perform: getLabelSelector)].	what == getEnabledSelector ifTrue:[^self enabled: (model perform: getEnabledSelector)].	getColorSelector ifNotNil: [ | cc |		color = (cc := model perform: getColorSelector) ifFalse:[			color := cc.			self onColor: color offColor: color.			self changed.		].	].	self getModelState			ifTrue: [self color: onColor]			ifFalse: [self color: offColor].	getEnabledSelector ifNotNil:[		self enabled: (model perform: getEnabledSelector).	].! !!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 8/8/2009 23:58'!buildPluggableText: aSpec	| widget |	widget := PluggableTextMorphPlus on: aSpec model				text: aSpec getText 				accept: aSpec setText				readSelection: aSpec selection 				menu: aSpec menu.	widget font: Preferences standardCodeFont.	self register: widget id: aSpec name.	widget getColorSelector: aSpec color.	self setFrame: aSpec frame in: widget.	parent ifNotNil:[self add: widget to: parent].	widget borderColor: Color lightGray.	^widget! !!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 8/7/2009 19:40'!buildPluggableActionButton: aSpec	| button |	button := self buildPluggableButton: aSpec.	button color: Color white.	^button! !!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 8/8/2009 17:03'!buildPluggablePanel: aSpec	| widget children frame |	widget := PluggablePanelMorph new.	self register: widget id: aSpec name.	widget model: aSpec model.	widget color: Color transparent.	widget clipSubmorphs: true.	children := aSpec children.	children isSymbol ifTrue:[		widget getChildrenSelector: children.		widget update: children.		children := #().	].	self buildAll: children in: widget.	self setFrame: aSpec frame in: widget.	parent ifNotNil:[self add: widget to: parent].	self setLayout: aSpec layout in: widget.	widget layoutInset: 0.	widget borderWidth: 0.	widget submorphsDo:[:sm|		(frame := sm layoutFrame) ifNotNil:[			(frame rightFraction = 0 or:[frame rightFraction = 1]) 				ifFalse:[frame rightOffset:1].			(frame bottomFraction = 0 or:[frame bottomFraction = 1]) 				ifFalse:[frame bottomOffset: 1]]].	^widget! !!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 8/9/2009 01:09'!buildPluggableButton: aSpec	| widget label state action enabled |	label := aSpec label.	state := aSpec state.	action := aSpec action.	widget := PluggableButtonMorphPlus on: aSpec model				getState: (state isSymbol ifTrue:[state])				action: nil				label: (label isSymbol ifTrue:[label]).	self register: widget id: aSpec name.	enabled := aSpec enabled.	enabled isSymbol		ifTrue:[widget getEnabledSelector: enabled]		ifFalse:[widget enabled:enabled].	widget action: action.	widget getColorSelector: aSpec color.	widget offColor: Color white..	aSpec help ifNotNil:[widget setBalloonText: aSpec help].	(label isSymbol or:[label == nil]) ifFalse:[widget label: label].	self setFrame: aSpec frame in: widget.	parent ifNotNil:[self add: widget to: parent].	^widget! !!PluggableButtonMorphPlus methodsFor: 'initialize-release' stamp: 'ar 8/7/2009 21:32'!initialize	super initialize.	enabled := true.	onColor := Color veryLightGray.	offColor := Color white! !PluggableButtonMorphPlus removeSelector: #beActionButton!