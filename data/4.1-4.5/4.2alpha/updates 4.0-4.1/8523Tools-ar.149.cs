"Change Set:		8523Tools-ar.149Tools-ar.149:CompiledMethodTrailer phase 3."!!ChangeSorter methodsFor: 'message list' stamp: 'Igor.Stasenko 12/20/2009 18:54'!browseVersions	"Create and schedule a changelist browser on the versions of the 	selected message."	| class selector method category pair sourcePointer |	(selector := self selectedMessageName) ifNil: [^ self].	class := self selectedClassOrMetaClass.	(class includesSelector: selector)		ifTrue: [method := class compiledMethodAt: selector.				category := class whichCategoryIncludesSelector: selector.				sourcePointer := nil]		ifFalse: [pair := myChangeSet methodInfoFromRemoval: {class name. selector}.				pair ifNil: [^ nil].				sourcePointer := pair first.				method := CompiledMethod toReturnSelfTrailerBytes:					(CompiledMethodTrailer new sourcePointer: sourcePointer).				category := pair last].	VersionsBrowser		browseVersionsOf: method		class: self selectedClass meta: class isMeta		category: category selector: selector		lostMethodPointer: sourcePointer.! !!ChangeList methodsFor: 'viewing access' stamp: 'Igor.Stasenko 12/20/2009 18:54'!restoreDeletedMethod	"If lostMethodPointer is not nil, then this is a version browser for a method that has been removed.  In this case we want to establish a sourceCode link to prior versions.  We do this by installing a dummy method with the correct source code pointer prior to installing this version."	| dummyMethod class selector |	dummyMethod := CompiledMethod toReturnSelfTrailerBytes: 		(CompiledMethodTrailer new sourcePointer: lostMethodPointer).	class := (changeList at: listIndex) methodClass.	selector := (changeList at: listIndex) methodSelector.	class addSelectorSilently: selector withMethod: dummyMethod.	(changeList at: listIndex) fileIn.	"IF for some reason, the dummy remains, remove it, but (N.B.!!) we might not get control back if the compile (fileIn above) fails."	(class compiledMethodAt: selector) == dummyMethod		ifTrue: [class basicRemoveSelector: selector].	^ true! !