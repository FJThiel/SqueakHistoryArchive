"Change Set:		9764Files-nice.77Files-nice.77:Let #at:put: answer the put objectFiles-nice.76:1) Avoid sending at: to a DirectoryEntry, it is deprecated2) fast-up directoryContentsFor: a bit"!!StandardSourceFileArray methodsFor: 'accessing' stamp: 'nice 3/20/2010 09:14'!at: index put: aFile	^files at: index put: aFile! !!FileDirectory methodsFor: 'enumeration' stamp: 'nice 3/21/2010 20:51'!statsForDirectoryTree: rootedPathName	"Return the size statistics for the entire directory tree starting at the given root. The result is a three element array of the form: (<number of folders><number of files><total bytes in all files>). This method also serves as an example of how recursively enumerate a directory tree."	"FileDirectory default statsForDirectoryTree: '\smalltalk'"	^Cursor wait showWhile: [		| dirs files bytes todo entries p |		dirs := files := bytes := 0.		todo := OrderedCollection with: rootedPathName.		[todo isEmpty] whileFalse: [			p := todo removeFirst.			entries := self directoryContentsFor: p.			entries do: [:entry |				entry isDirectory					ifTrue: [						todo addLast: p , self pathNameDelimiter asString , entry name.						dirs := dirs + 1]					ifFalse: [						files := files + 1.						bytes := bytes + entry fileSize]]].		Array with: dirs with: files with: bytes] ! !!ExpandedSourceFileArray methodsFor: 'accessing' stamp: 'nice 3/20/2010 09:13'!at: index put: aFile	^files at: index put: aFile! !!FileDirectory methodsFor: 'private' stamp: 'nice 3/21/2010 20:46'!directoryContentsFor: fullPath	"Return a collection of directory entries for the files and directories in the directory with the given path. See primLookupEntryIn:index: for further details."	"FileDirectory default directoryContentsFor: ''"	^Array new: 200 streamContents: [:stream |		| f entryArray index |		f := fullPath asVmPathName.		index := 1.		[(entryArray := self primLookupEntryIn: f index: index) == nil] whileFalse: [		.	#badDirectoryPath = entryArray ifTrue: [				^(InvalidDirectoryError pathName: pathName asSqueakPathName) signal].			index := index + 1.			stream nextPut: (DirectoryEntry fromArray: entryArray directory: self) convertFromSystemName]].! !