"Change Set:		7519ST80-ar.49ST80-ar.49:There is currently no preference browser in MVC. Inform the user about it.ST80-ar.43:ToolBuilder cleanup in StringHolder. Avoid referencing either Morphic or MVC wherever possible.ST80-ar.44:Refactoring of ToolBuilder construction methods. Breaks them out into separate methods and makes it easier to mix and match the different parts.ST80-ar.45:Tools should be using a dynamic #labelString not a static one when constructed.ST80-ar.46:Better layout for optional buttons and annotation panes. As an experiment, annotation panes are now at the bottom (kinda like status lines).ST80-ar.47:StringHolder needs to implement contents:notifying: to support the standard code pane.ST80-ar.48:Push optional buttons and annotation pane down to CodeHolder. This avoids ugly appearance of users of (StringHolder new contents: '') openLabel: 'Title'."!!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 11:15'!buildWith: builder	| windowSpec |	windowSpec := 	self buildWindowWith: builder specs: {		(0@0corner: 1@1) -> [self buildCodePaneWith: builder].	}.	^builder build: windowSpec! !!FormInspectView class methodsFor: 'instance creation' stamp: 'ar 8/7/2009 23:44'!openOn: aFormDictionary withLabel: aLabel	"open a graphical dictionary in a window having the label aLabel.      aFormDictionary should be a dictionary containing as value a form."     ^ DictionaryInspector                openOn: aFormDictionary                withEvalPane: true                withLabel: aLabel! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 17:16'!annotation	^''! !!StringHolder methodsFor: 'code pane menu' stamp: 'ar 8/8/2009 22:58'!contents: aString notifying: aController 	"Accept text"	^self acceptContents: aString! !!ScreenController methodsFor: 'menu messages' stamp: 'ar 8/9/2009 14:44'!editPreferences	"Open up a Preferences inspector.  2/7/96 sw"	self inform: 'The preference browser is currently not available in MVC'! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 17:14'!buildOptionalButtonsWith: builder	| panelSpec buttonSpec |	panelSpec := builder pluggablePanelSpec new.	panelSpec children: OrderedCollection new.	self optionalButtonPairs do:[:spec|		buttonSpec := builder pluggableActionButtonSpec new.		buttonSpec model: self.		buttonSpec label: spec first.		buttonSpec action: spec second.		spec size > 2 ifTrue:[buttonSpec help: spec third].		panelSpec children add: buttonSpec.	].	panelSpec layout: #horizontal. "buttons"	^panelSpec! !!StringHolder methodsFor: 'initialize-release' stamp: 'ar 8/7/2009 22:27'!openLabel: aString 	"Create a standard system view of the model, me, a StringHolder and open it.  If in mvc, terminate the active controller so that the new window will immediately be activated."	^ToolBuilder open: self label: aString! !!StringHolderView class methodsFor: 'instance creation' stamp: 'ar 8/7/2009 22:43'!open: aStringHolder label: labelString 	"NOTE this should be in the model class, and all senders so redirected,	in order that the view class can be discarded in a morphic world."	"Create a standard system view of the model, aStringHolder, as viewed by 	an instance of me. The label of the view is aString."	| aStringHolderView topView |	aStringHolderView := self container: aStringHolder.	topView := StandardSystemView new.	topView model: aStringHolderView model.	topView addSubView: aStringHolderView.	topView label: labelString.	topView minimumSize: 100 @ 50.	topView controller open! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 11:12'!buildWindowWith: builder specs: specs	| windowSpec rect action widgetSpec |	windowSpec := self buildWindowWith: builder.	specs do:[:assoc|		rect := assoc key.		action := assoc value.		widgetSpec := action value.		widgetSpec ifNotNil:[			widgetSpec frame: rect.			windowSpec children add: widgetSpec]].	^windowSpec! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 12:18'!labelString	^self class name! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 17:16'!optionalButtonPairs	"Answer a tuple (formerly pairs) defining buttons, in the format:			button label			selector to send			help message"	^#()! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 23:46'!buildCodePaneWith: builder	| textSpec |	textSpec := builder pluggableTextSpec new.	textSpec 		model: self;		getText: #contents; 		setText: #contents:notifying:; 		selection: #contentsSelection; 		menu: #codePaneMenu:shifted:.	^textSpec! !!StringHolder methodsFor: 'toolbuilder' stamp: 'ar 8/8/2009 12:31'!buildWindowWith: builder	| windowSpec |	windowSpec := builder pluggableWindowSpec new.	windowSpec model: self.	windowSpec label: #labelString.	windowSpec children: OrderedCollection new.	^windowSpec! !StringHolder removeSelector: #embeddedInMorphicWindowLabeled:!StringHolder removeSelector: #openLabel:andTerminate:!StringHolder removeSelector: #openAsMorphLabel:!