"Change Set:		8156Morphic-ar.227Morphic-ar.227:Merging Morphic-ul.226- moved all #explorerContents and #hasContentsInExplorer to Morphic-Explorer- reimplemented #explorerContents in Dictionary, Integer, SequenceableCollection and Set"!!Set methodsFor: '*Morphic-Explorer' stamp: 'ul 11/11/2009 19:52'!explorerContents 	^Array new: self size streamContents: [ :stream |		self do: [ :each |			stream nextPut: (				ObjectExplorerWrapper					with: each					name: (stream position + 1) printString					model: self) ] ]! !!Integer methodsFor: '*Morphic-Explorer' stamp: 'ul 11/11/2009 19:47'!explorerContents	^#(		('hexadecimal' 16)		('octal' 8)		('binary' 2)) collect: [ :each |			ObjectExplorerWrapper				with: each first translated				name: (self printStringBase: each second)				model: self ]! !!CompiledMethod methodsFor: '*Morphic-Explorer' stamp: 'eem 5/15/2008 13:14'!explorerContents	"(CompiledMethod compiledMethodAt: #explorerContents) explore"		^Array streamContents:		[:s| | tokens |		tokens := Scanner new scanTokens: (self headerDescription readStream skipTo: $"; upTo: $").		s nextPut: (ObjectExplorerWrapper						with: ((0 to: tokens size by: 2) collect:								[:i| i = 0 ifTrue: [self header] ifFalse: [{tokens at: i - 1. tokens at: i}]])						name: 'header'						model: self).		(1 to: self numLiterals) do:			[:key|			s nextPut: (ObjectExplorerWrapper							with: (self literalAt: key)							name: ('literal', key printString contractTo: 32)							model: self)].		self isQuick			ifTrue: [s nextPut: (ObjectExplorerWrapper									with: self symbolic									name: #symbolic									model: self)]			ifFalse:				[self symbolicLinesDo:					[:pc :line|					pc <= 1						ifTrue:							[s nextPut: (ObjectExplorerWrapper											with: line											name: 'pragma'											model: self)]						ifFalse:							[s nextPut: (ObjectExplorerWrapper											with: line											name: pc printString											model: self)]]].				"should be self numLiterals + 1 * Smalltalk wordSize + 1"		self endPC + 1			to: self basicSize			do: [:key|				s nextPut: (ObjectExplorerWrapper								with: (self basicAt: key)								name: key printString								model: self)]]! !!String methodsFor: '*Morphic-Explorer' stamp: 'yo 11/3/2004 19:24'!hasContentsInExplorer	^false! !!SequenceableCollection methodsFor: '*Morphic-Explorer' stamp: 'ul 11/11/2009 19:49'!explorerContents	^Array new: self size streamContents: [ :stream |		1 to: self size do: [ :index |			stream nextPut: (				ObjectExplorerWrapper					with: (self at: index)					name: index printString					model: self) ] ]! !!Dictionary methodsFor: '*Morphic-Explorer' stamp: 'bf 8/20/1999 15:07'!hasContentsInExplorer	^self isEmpty not! !!OrderedCollection methodsFor: '*Morphic-Explorer' stamp: 'bf 8/20/1999 15:08'!hasContentsInExplorer	^self isEmpty not! !!Object methodsFor: '*Morphic-Explorer' stamp: 'RAA 6/21/1999 11:27'!hasContentsInExplorer	^self basicSize > 0 or: [self class allInstVarNames isEmpty not]! !!Set methodsFor: '*Morphic-Explorer' stamp: 'hg 9/7/2001 11:51'!hasContentsInExplorer	^self isEmpty not! !!Float methodsFor: '*Morphic-Explorer' stamp: 'bf 8/20/1999 12:56'!hasContentsInExplorer	^false! !!Integer methodsFor: '*Morphic-Explorer' stamp: 'laza 3/17/2005 13:38'!hasContentsInExplorer	^true! !!Dictionary methodsFor: '*Morphic-Explorer' stamp: 'ul 11/11/2009 19:39'!explorerContents	^self keysSortedSafely replace: [ :key |		ObjectExplorerWrapper			with: (self at: key)			name: (key printString contractTo: 32)			model: self ]! !