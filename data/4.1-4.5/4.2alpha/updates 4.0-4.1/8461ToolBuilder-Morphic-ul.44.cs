"Change Set:		8461ToolBuilder-Morphic-ul.44ToolBuilder-Morphic-ul.44:- replace sends of #ifNotNilDo: to #ifNotNil:, #ifNil:ifNotNilDo: to #ifNil:ifNotNil:, #ifNotNilDo:ifNil: to #ifNotNil:ifNil:ToolBuilder-Morphic-ar.42:Use a simple chooser tool instead of menus for lists that are very long. Makes it easier to find things since scrolling is required anyway.ToolBuilder-Morphic-ar.43:Experimental. Try UserDialogBoxMorph to see how people like it (and hopefully to get some of 'em to improve it :-)"!Model subclass: #ChooserTool	instanceVariableNames: 'label items index builder window'	classVariableNames: ''	poolDictionaries: ''	category: 'ToolBuilder-Morphic'!!MorphicUIManager methodsFor: 'ui requests' stamp: 'ar 12/9/2009 22:12'!chooseFrom: labelList values: valueList lines: linesArray title: aString	"Choose an item from the given list. Answer the selected item."	| index |	labelList size > 30 ifTrue:[		"No point in displaying more than 30 items as list. Use ChooserTool insted"		index := ChooserTool chooseFrom: labelList title: aString.		^ index = 0 ifFalse:[valueList at: index].	] ifFalse:[		^MenuMorph chooseFrom: labelList values: valueList lines: linesArray title: aString	].! !!MorphicUIManager methodsFor: 'ui requests' stamp: 'ar 12/12/2009 00:28'!inform: aString	"Display a message for the user to read and then dismiss"	^UserDialogBoxMorph inform: aString! !!ChooserTool methodsFor: 'actions' stamp: 'ar 12/9/2009 22:26'!closed	"Cancel the dialog and move on"	builder ifNotNil:[index := 0].! !!ChooserTool methodsFor: 'toolbuilder' stamp: 'ar 12/9/2009 23:47'!buildWith: aBuilder	| windowSpec |	builder := aBuilder.	windowSpec := self buildWindowWith: builder specs: {		(0@0 corner: 1@0.9) -> [self buildChooserListWith: builder].		(0@0.9 corner: 1@1) -> [self buildButtonsWith: builder].	}.	windowSpec closeAction: #closed.	windowSpec extent: 250@350.	^builder build: windowSpec! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:08'!itemList: aCollection	items := aCollection.	self changed: #items.! !!ChooserTool methodsFor: 'initialize' stamp: 'ar 12/9/2009 23:50'!chooseFrom: labelList title: aString	builder := ToolBuilder default.	self itemList: labelList.	self label: aString.	window := ToolBuilder default open: self.	window center: Sensor cursorPoint.	window setConstrainedPosition: (Sensor cursorPoint - (window fullBounds extent // 2)) hangOut: false.	builder runModal: window.	^self itemListIndex! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:06'!labelString	^label! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:15'!itemListIndex	^index ifNil:[0]! !!MorphicUIManager methodsFor: 'ui requests' stamp: 'ar 12/12/2009 00:28'!confirm: queryString	"Put up a yes/no menu with caption queryString. Answer true if the 	response is yes, false if no. This is a modal question--the user must 	respond yes or no."	^UserDialogBoxMorph confirm: queryString! !!ChooserTool class methodsFor: 'opening' stamp: 'ar 12/9/2009 22:08'!open	^ToolBuilder open: self! !!ChooserTool methodsFor: 'toolbuilder' stamp: 'ar 12/9/2009 21:55'!buildChooserListWith: builder	| listSpec |	listSpec := builder pluggableListSpec new.	listSpec 		model: self;		list: #itemList; 		getIndex: #itemListIndex; 		setIndex: #itemListIndex:; 		autoDeselect: false.	^listSpec! !!ChooserTool methodsFor: 'toolbuilder' stamp: 'ar 12/9/2009 21:52'!buildWindowWith: builder	| windowSpec |	windowSpec := builder pluggableWindowSpec new.	windowSpec model: self.	windowSpec label: #labelString.	windowSpec children: OrderedCollection new.	^windowSpec! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:17'!canAccept	^self itemListIndex > 0! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:07'!label: aString	label := aString.! !!MorphicUIManager methodsFor: 'ui requests' stamp: 'ar 12/9/2009 22:12'!chooseFrom: aList lines: linesArray title: aString	"Choose an item from the given list. Answer the index of the selected item."	aList size > 30 ifTrue:[		"No point in displaying more than 30 items as list. Use ChooserTool insted"		^ChooserTool chooseFrom: aList title: aString.	] ifFalse:[		^MenuMorph chooseFrom: aList lines: linesArray title: aString	].! !!ChooserTool methodsFor: 'toolbuilder' stamp: 'ar 12/9/2009 21:52'!buildWindowWith: builder specs: specs	| windowSpec rect action widgetSpec |	windowSpec := self buildWindowWith: builder.	specs do:[:assoc|		rect := assoc key.		action := assoc value.		widgetSpec := action value.		widgetSpec ifNotNil:[			widgetSpec frame: rect.			windowSpec children add: widgetSpec]].	^windowSpec! !!MorphicToolBuilderTests methodsFor: 'support' stamp: 'ul 12/12/2009 14:09'!fireMenuItemWidget	(widget itemWithWording: 'Menu Item')		ifNotNil: [:item | item doButtonAction]! !!ChooserTool class methodsFor: 'tools' stamp: 'ar 12/9/2009 22:25'!chooseFrom: labelList title: aString	^self new chooseFrom: labelList title: aString! !!ChooserTool methodsFor: 'actions' stamp: 'ar 12/9/2009 22:24'!cancel	"Cancel the dialog and move on"	index := 0.	builder ifNotNil:[builder close: window].! !!ChooserTool methodsFor: 'actions' stamp: 'ar 12/9/2009 22:26'!accept	"Accept current selection and move on"	builder ifNotNil:[:bldr|		builder := nil.		bldr close: window].! !!ChooserTool methodsFor: 'toolbuilder' stamp: 'ar 12/9/2009 22:03'!buildButtonsWith: aBuilder	| panel button |	panel := aBuilder pluggablePanelSpec new		model: self;		layout: #proportional;		children: OrderedCollection new.	button := aBuilder pluggableButtonSpec new.	button				model: self; 				label: 'Accept';				action: #accept;				enabled: #canAccept;				frame: (0.0 @ 0.0 corner: 0.48@1).	panel children add: button.	button := aBuilder pluggableButtonSpec new.	button				model: self; 				label: 'Cancel';				action: #cancel;				frame: (0.52 @ 0.0 corner: 1@1).	panel children add: button.	^panel! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:16'!itemListIndex: newIndex	index := newIndex.	self changed: #itemListIndex.	self changed: #canAccept.! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:07'!label	^label! !!MorphicUIManager methodsFor: 'ui requests' stamp: 'ar 12/12/2009 00:28'!confirm: aString orCancel: cancelBlock	"Put up a yes/no/cancel menu with caption aString. Answer true if  	the response is yes, false if no. If cancel is chosen, evaluate  	cancelBlock. This is a modal question--the user must respond yes or no."	^UserDialogBoxMorph confirm: aString orCancel: cancelBlock! !!ChooserTool methodsFor: 'accessing' stamp: 'ar 12/9/2009 22:08'!itemList	^items! !