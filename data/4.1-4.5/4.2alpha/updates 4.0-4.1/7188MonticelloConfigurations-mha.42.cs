"Change Set:		7188MonticelloConfigurations-mha.42MonticelloConfigurations-mha.42:This fixes a problem with multiple repositories being passed to MCMcmUpdater >> #updateFromRepositories:. The list of updates would not be cleared after processing one repository, so the updater would attempt to download updates from another repository than the one they are stored in.This works now:MCMcmUpdater updateFromRepositories: #( 'http://source.squeak.org/trunk' 'http://source.squeak.org/tests' )MonticelloConfigurations-mha.41:Fix for bug #0007363: MCMcmUpdater >> #updateFromRepositories: fails when repository is empty"!!MCMcmUpdater class methodsFor: 'updating' stamp: 'mha 7/8/2009 13:03'!updateFromRepositories: repositoryUrls	"MCMcmUpdater updateFromRepositories: #(		'http://squeaksource.com/MCUpdateTest'	)"	| repos updateList parts base author version type config |	Preferences enable: #upgradeIsMerge.	"The list of repositories to consult in order"	repos := repositoryUrls collect:[:url| 		MCRepositoryGroup default repositories 			detect:[:r| r description = url]			ifNone:[ | r |				r := MCHttpRepository location: url user: '' password: ''.				MCRepositoryGroup default addRepository: r.				r]].	"The list of updates-author.version.mcm sorted by version"	repos do:[:r|		updateList := SortedCollection new.		"Find all the updates-author.version.mcm files"		r allFileNames do:[:versionedName|			parts := versionedName findTokens: '.-'.			parts size = 4 ifTrue:[				base := parts at: 1.				author := parts at: 2.				version := [(parts at: 3) asNumber] on: Error do:[:ex| ex return: 0].				type := parts at: 4.			].			(base = 'update' and:[version > 0 and:[type = 'mcm']]) 				ifTrue:[updateList add: version -> versionedName]].				"Proceed only if there are updates available at all."		updateList ifNotEmpty: [			"Now process each update file. Check if we have all dependencies and if not,			load the entire configuration (this is mostly to skip older updates quickly)"			updateList do:[:assoc|				config := r versionFromFileNamed: assoc value.				(config dependencies allSatisfy:[:dep| dep isFulfilled]) 					ifFalse:[config upgrade]].			"We've loaded all the provided update configurations.			Use the latest configuration to update all the remaining packages."			config updateFromRepositories.			config upgrade.		].	].! !