"Change Set:		8658Monticello-ar.345Monticello-ar.345:Display progress during common MC operations on HTTP repositories.Monticello-ar.344:Fixes a bug preventing Monticello to load a class definition with traits removed over one containing traits."!!MCClassDefinition methodsFor: 'installing' stamp: 'ar 12/29/2009 19:51'!createClass	| superClass class |	superClass := Smalltalk at: superclassName.	class := (ClassBuilder new)			name: name 			inEnvironment: superClass environment 			subclassOf: superClass			type: type 			instanceVariableNames: self instanceVariablesString 			classVariableNames: self classVariablesString 			poolDictionaries: self sharedPoolsString			category: category.	class setTraitComposition: (Compiler		evaluate: (self traitComposition ifNil:['{}'])) asTraitComposition.	class class setTraitComposition: (Compiler		evaluate: (self classTraitComposition ifNil:['{}'])) asTraitComposition.	^class! !!MCHttpRepository methodsFor: 'required' stamp: 'ar 12/30/2009 16:14'!allFileNames	| index |	self displayProgress: 'Updating repository' during:[		index := HTTPSocket httpGet: self locationWithTrailingSlash, '?C=M;O=D' args: nil user: self user passwd: self password.	].	index isString ifTrue: [self error: 'Could not access ', location].	^ self parseFileNamesFromStream: index	! !!MCHttpRepository methodsFor: 'required' stamp: 'ar 12/30/2009 16:41'!displayProgress: label during: workBlock	| nextUpdateTime |	nextUpdateTime := 0.	^UIManager default displayProgress: label at: Display center		from: 0.0 to: 1.0 during:[:bar|			[workBlock value] on: HTTPProgress do:[:ex|				(ex total == nil or:[ex amount == nil]) ifFalse:[					(nextUpdateTime < Time millisecondClockValue 						or:[ex total = ex amount]) ifTrue:[							bar value: ex amount asFloat / ex total asFloat.							nextUpdateTime := Time millisecondClockValue + 100.					].				].				ex resume.			]		].! !!MCHttpRepository methodsFor: 'required' stamp: 'ar 12/30/2009 16:30'!writeStreamForFileNamed: aString replace: ignoreBoolean do: aBlock	| stream response |	stream := RWBinaryOrTextStream on: String new.	aBlock value: stream.	self displayProgress: 'Uploading package' during:[		response := HTTPSocket					httpPut: stream contents					to: (self urlForFileNamed: aString)					user: self user					passwd: self password.	].	(#( 'HTTP/1.1 201 ' 'HTTP/1.1 200 ' 'HTTP/1.0 201 ' 'HTTP/1.0 200 ')		anySatisfy: [:code | response beginsWith: code ])			ifFalse: [self error: response].! !