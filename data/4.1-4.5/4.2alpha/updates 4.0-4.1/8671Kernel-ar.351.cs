"Change Set:		8671Kernel-ar.351Kernel-ar.351:Shipping NanoTraits part 3: A hand ful of small changes that pave the way for the (major) follow-on cleanup."!!ClassDescription methodsFor: 'accessing method dictionary' stamp: 'ar 12/29/2009 16:43'!removeSelector: selector 	"Remove the message whose selector is given from the method 	dictionary of the receiver, if it is there. Answer nil otherwise."	| priorMethod priorProtocol | 	priorMethod := self compiledMethodAt: selector ifAbsent: [^ nil].	priorProtocol := self whichCategoryIncludesSelector: selector.	SystemChangeNotifier uniqueInstance doSilently: [		self organization removeElement: selector].	super removeSelector: selector.	SystemChangeNotifier uniqueInstance 			methodRemoved: priorMethod selector: selector inProtocol: priorProtocol class: self.! !!Behavior methodsFor: 'adding/removing methods' stamp: 'ar 12/29/2009 16:43'!removeSelector: aSelector 	"Assuming that the argument, selector (a Symbol), is a message selector 	in my method dictionary, remove it and its method."	^self basicRemoveSelector: aSelector! !!Behavior methodsFor: 'adding/removing methods' stamp: 'ar 12/29/2009 16:52'!addSelector: selector withMethod: compiledMethod notifying: requestor	^ self basicAddSelector: selector withMethod: compiledMethod! !ClassDescription removeSelector: #updateOrganizationSelector:oldCategory:newCategory:!ClassDescription removeSelector: #noteRecategorizedSelectors:oldComposition:!Behavior removeSelector: #setTraitComposition:!ClassDescription removeSelector: #noteRecategorizedSelector:from:to:!ClassDescription removeSelector: #applyChangesOfNewTraitCompositionReplacing:!Class removeSelector: #applyChangesOfNewTraitCompositionReplacing:!