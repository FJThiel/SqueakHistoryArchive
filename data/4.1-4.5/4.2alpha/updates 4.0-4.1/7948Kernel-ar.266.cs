"Change Set:		7948Kernel-ar.266Kernel-ar.266:Merging Kernel-ul.264,  Kernel-ul.265:- removed unnecessary #fixTemps send- removed Float >> #shallowCopy. Primitive 148 seems to handle this correcly.Kernel-ul.265:- removed Float >> #shallowCopy. Primitive 148 seems to handle this correcly.Kernel-ul.264:- removed unnecessary #fixTemps send"!!BlockClosure methodsFor: 'copying' stamp: 'ul 10/9/2009 00:18'!postCopy	"To render a copy safe we need to provide a new outerContext that	 cannot be returned from and a copy of any remoteTemp vectors.	 When a block is active it makes no reference to state in its nested	 contexts (this is the whole point of the indirect temps scheme; any	 indirect state is either copied or in indirect temp vectors.  So we	 need to substitute a dummy outerContext and copy the copiedValues,	 copying anything looking like a remote temp vector.  if we accidentally	 copy an Array that isn't actually an indirect temp vector we do extra work	 but don't break anything."	outerContext := MethodContext						sender: nil						receiver: outerContext receiver						method: outerContext method						arguments: #()! !Float removeSelector: #shallowCopy!