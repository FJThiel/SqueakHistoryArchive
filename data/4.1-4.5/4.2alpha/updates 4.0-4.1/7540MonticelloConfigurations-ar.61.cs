"Change Set:		7540MonticelloConfigurations-ar.61MonticelloConfigurations-ar.61:Add a preference governing whether to log MC configuration info to disk or to the Transcript.MonticelloConfigurations-ar.59:Faster updates. MCMcmUpdater now remembers the last update map seen in each repository and only considers newer ones when updating. This avoids downloading old update maps that are long past.MonticelloConfigurations-edc.60:This moddification lets have external file recording of updates in the form update-author.n"!Object subclass: #MCConfiguration	instanceVariableNames: 'name dependencies repositories log'	classVariableNames: 'DefaultLog LogToFile'	poolDictionaries: ''	category: 'MonticelloConfigurations'!Object subclass: #MCMcmUpdater	instanceVariableNames: ''	classVariableNames: 'LastUpdateMap'	poolDictionaries: ''	category: 'MonticelloConfigurations'!!MCConfiguration class methodsFor: 'preferences' stamp: 'ar 8/21/2009 21:13'!logToFile: aBool	"Whether to log configuration info to files by default.		MCConfiguration logToFile: true.		MCConfiguration logToFile: false.	"	LogToFile := aBool! !!MCMcmUpdater class methodsFor: 'class initialization' stamp: 'ar 8/12/2009 22:15'!initialize	"MCMcmUpdater initialize"	LastUpdateMap := Dictionary new.! !!MCConfiguration methodsFor: 'accessing' stamp: 'ar 8/21/2009 21:19'!log	"Answer the receiver's log. If no log exist use the default log"	log ifNil: [		self class logToFile ifFalse:[^Transcript].		self log: (FileStream fileNamed: self name, '.log').	].	^log! !!MCMcmUpdater class methodsFor: 'updating' stamp: 'ar 8/12/2009 22:13'!updateFromRepositories: repositoryUrls	"MCMcmUpdater updateFromRepositories: #(		'http://squeaksource.com/MCUpdateTest'	)"	| repos updateList parts base author version type config minVersion |	Preferences enable: #upgradeIsMerge.	LastUpdateMap ifNil:[LastUpdateMap := Dictionary new].	"The list of repositories to consult in order"	repos := repositoryUrls collect:[:url| 		MCRepositoryGroup default repositories 			detect:[:r| r description = url]			ifNone:[ | r |				r := MCHttpRepository location: url user: '' password: ''.				MCRepositoryGroup default addRepository: r.				r]].	"The list of updates-author.version.mcm sorted by version"	repos do:[:r|		updateList := SortedCollection new.		minVersion := LastUpdateMap at: r description ifAbsent:[0].		"Find all the updates-author.version.mcm files"		r allFileNames do:[:versionedName|			parts := versionedName findTokens: '.-'.			parts size = 4 ifTrue:[				base := parts at: 1.				author := parts at: 2.				version := [(parts at: 3) asNumber] on: Error do:[:ex| ex return: 0].				type := parts at: 4.			].			(base = 'update' and:[version >= minVersion and:[type = 'mcm']]) 				ifTrue:[updateList add: version -> versionedName]].				"Proceed only if there are updates available at all."		updateList ifNotEmpty: [			"Now process each update file. Check if we have all dependencies and if not,			load the entire configuration (this is mostly to skip older updates quickly)"			updateList do:[:assoc|				ProgressNotification signal: '' extra: 'Processing ', assoc value.				config := r versionFromFileNamed: assoc value.				(config dependencies allSatisfy:[:dep| dep isFulfilled]) 					ifFalse:[config upgrade].				LastUpdateMap at: r description put: assoc key.			] displayingProgress: 'Processing configurations'.			"We've loaded all the provided update configurations.			Use the latest configuration to update all the remaining packages."			config updateFromRepositories.			config upgrade.		].	].! !!MCConfiguration class methodsFor: 'preferences' stamp: 'ar 8/21/2009 21:18'!logToFile	"Whether to log configuration info to files by default.	If true, logs to a file named after the configuration (config.nn.log).	If false, logs to the transcript."	<preference: 'Log config info to disk' 		category: 'Monticello' 		description: 'If true, configuration information (such as change logs) are logged to disk instead of the Transcript. The log file is named after the configuration map (config.nn.log)' 		type: #Boolean>	^LogToFile ifNil:[true].! !MCMcmUpdater initialize!