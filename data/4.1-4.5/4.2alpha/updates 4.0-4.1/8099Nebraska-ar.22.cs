"Change Set:		8099Nebraska-ar.22Nebraska-ar.22:Companion change to Morphic-ar.220: Check all morphs of the world to be shared whether it's safe to serve them or not.Nebraska-ul.21:- make sure that sockets are closed even when the tests fail in ArbitraryObjectSocketTestCase- add a small delay to ArbitraryObjectSocketTestCase and StringSocketTestCase to avoid random failures/errors under windows"!!NebraskaServerMorph class methodsFor: 'as yet unclassified' stamp: 'ar 10/31/2009 13:01'!serveWorld: aWorld	"Check to make sure things won't crash. See Mantis #0000519"	aWorld allMorphsDo:[:m|		m isSafeToServe ifFalse:[			^self inform: 'Can not share world if a ', m class, ' is present. Close the mprph and try again']].	^self serveWorld: aWorld onPort: NebraskaServer defaultPort! !!StringSocketTestCase methodsFor: 'running' stamp: 'ul 10/23/2009 09:14'!testBogusInput1	| negString |	negString := String new: 4.	negString putInteger32: -10 at: 1.	socket1 sendData: negString.	10 milliSeconds asDelay wait. "data sent, wait a few milliseconds"	end2 processIO.		self should: [ end2 isConnected not ].	! !!ArbitraryObjectSocketTestCase methodsFor: 'testing' stamp: 'ul 10/23/2009 09:13'!testBasics	end1 nextPut: 'hello'.	end1 nextPut: 42.	end1 nextPut: 3@5.	end1 processIO.  "hopefully one call is enough...."	10 milliSeconds asDelay wait. "data sent, wait a few milliseconds"	end2 processIO.  "hopefully one call is enough...."	self should: [ end2 next = 'hello' ].	self should: [ end2 next = 42 ].	self should: [ end2 next = (3@5) ].	! !!ArbitraryObjectSocketTestCase methodsFor: 'running' stamp: 'ul 10/23/2009 09:03'!tearDown	socket1 ifNotNil: [ socket1 destroy ].	socket2 ifNotNil: [ socket2 destroy ]! !!StringSocketTestCase methodsFor: 'running' stamp: 'ul 10/23/2009 09:14'!testBogusInput2	| bogoString |	bogoString := String new: 8.	bogoString putInteger32: 2 at: 1.	bogoString putInteger32: -10 at: 5.	socket1 sendData: bogoString.	10 milliSeconds asDelay wait. "data sent, wait a few milliseconds"	end2 processIO.		self should: [ end2 isConnected not ].	! !