"Change Set:		7900ToolBuilder-Morphic-ar.41ToolBuilder-Morphic-ar.41:Two tweaks for MorphicToolBuilder: Allow #open: to be used with pre-built Morphs so we can do something like ToolBuilder open: (ToolBuilder build: FileList). Secondly, do not register pluggable trees as updatable panes to avoid pointless transcript warning.ToolBuilder-Morphic-ar.40:Honor the askBeforeDiscardingEdits property."!!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 10/4/2009 21:15'!buildPluggableText: aSpec	| widget |	widget := PluggableTextMorphPlus on: aSpec model				text: aSpec getText 				accept: aSpec setText				readSelection: aSpec selection 				menu: aSpec menu.	widget askBeforeDiscardingEdits: aSpec askBeforeDiscardingEdits.	widget font: Preferences standardCodeFont.	self register: widget id: aSpec name.	widget getColorSelector: aSpec color.	self setFrame: aSpec frame in: widget.	parent ifNotNil:[self add: widget to: parent].	widget borderColor: Color lightGray.	widget color: Color white.	^widget! !!MorphicToolBuilder methodsFor: 'opening' stamp: 'ar 10/4/2009 22:47'!open: anObject	"Build and open the object. Answer the widget opened."	| morph |	anObject isMorph 		ifTrue:[morph := anObject]		ifFalse:[morph := self build: anObject].	(morph isKindOf: MenuMorph)		ifTrue:[morph popUpInWorld: World].	(morph isKindOf: SystemWindow)		ifTrue:[morph openInWorldExtent: morph extent]		ifFalse:[morph openInWorld].	^morph! !!MorphicToolBuilder methodsFor: 'pluggable widgets' stamp: 'ar 10/4/2009 22:52'!buildPluggableTree: aSpec	| widget |	widget := PluggableTreeMorph new.	self register: widget id: aSpec name.	widget model: aSpec model.	widget getSelectedPathSelector: aSpec getSelectedPath.	widget setSelectedSelector: aSpec setSelected.	widget getChildrenSelector: aSpec getChildren.	widget hasChildrenSelector: aSpec hasChildren.	widget getLabelSelector: aSpec label.	widget getIconSelector: aSpec icon.	widget getHelpSelector: aSpec help.	widget getMenuSelector: aSpec menu.	widget keystrokeActionSelector: aSpec keyPress.	widget getRootsSelector: aSpec roots.	widget autoDeselect: aSpec autoDeselect.	widget dropItemSelector: aSpec dropItem.	widget wantsDropSelector: aSpec dropAccept.	self setFrame: aSpec frame in: widget.	parent ifNotNil:[self add: widget to: parent]."	panes ifNotNil:[		aSpec roots ifNotNil:[panes add: aSpec roots].	].	"	^widget! !