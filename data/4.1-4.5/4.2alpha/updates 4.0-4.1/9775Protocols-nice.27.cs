"Change Set:		9775Protocols-nice.27Protocols-nice.27:Fix underscores"!!Vocabulary class methodsFor: 'type vocabularies' stamp: 'sw 6/14/2005 11:49'!typeChoices	"Answer a list of all user-choosable data types"	| aList |	(aList := self allStandardVocabularies		select:			[:aVocab | aVocab representsAType]		thenCollect:			[:aVocab | aVocab vocabularyName]).	Preferences allowEtoyUserCustomEvents ifFalse: [aList remove: #CustomEvents ifAbsent: []].	^ aList asSortedArray! !!Vocabulary class methodsFor: 'class initialization' stamp: 'ar 1/4/2010 02:34'!initializeStandardVocabularies	"Initialize a few standard vocabularies and place them in the AllStandardVocabularies list."	AllStandardVocabularies := nil.	Smalltalk at: #EToyVocabulary		ifPresent:[:aClass| self addStandardVocabulary: aClass new].	Smalltalk at: #EToyVectorVocabulary		ifPresent:[:aClass| self addStandardVocabulary: aClass new].	self addStandardVocabulary: self newPublicVocabulary.	self addStandardVocabulary: FullVocabulary new.	self addStandardVocabulary: self newQuadVocabulary.	self addStandardVocabulary: ColorType new.	self addStandardVocabulary: BooleanType new.	self addStandardVocabulary: GraphicType new.	Smalltalk at: #PlayerType		ifPresent:[:aClass| self addStandardVocabulary: aClass new].	self addStandardVocabulary: SoundType new.	self addStandardVocabulary: StringType new.	self addStandardVocabulary: MenuType new.	self addStandardVocabulary: UnknownType new.	Smalltalk at: #ScriptNameType		ifPresent:[:aClass| self addStandardVocabulary: aClass new].	self addStandardVocabulary: (SymbolListType new symbols: #(simple raised inset complexFramed complexRaised complexInset complexAltFramed complexAltRaised complexAltInset); vocabularyName: #BorderStyle; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(lines arrows arrowheads dots); vocabularyName: #TrailStyle; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(leftToRight rightToLeft topToBottom bottomToTop); vocabularyName: #ListDirection; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(topLeft bottomRight center justified); vocabularyName: #ListCentering; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(buttonDown whilePressed buttonUp); vocabularyName: #ButtonPhase; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(rotate #'do not rotate' #'flip left right' #'flip up down'); vocabularyName: #RotationStyle; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(rigid spaceFill shrinkWrap); vocabularyName: #Resizing; yourself).	self addStandardVocabulary: self newSystemVocabulary.  "A custom vocabulary for Smalltalk -- still under development)"	self numberVocabulary.  		"creates and adds it"	"self wonderlandVocabulary."  	"creates and adds it"	self vocabularyForClass: Time.   "creates and adds it"	Smalltalk at: #KedamaPatchType ifPresent:[:aClass| 		self addStandardVocabulary: (aClass new vocabularyName: #Patch; yourself).	].	self addStandardVocabulary: (SymbolListType new symbols: #(wrap stick bouncing); vocabularyName: #EdgeMode; yourself).	self addStandardVocabulary: (SymbolListType new symbols: #(logScale linear color); vocabularyName: #PatchDisplayMode; yourself).	"Vocabulary initialize"! !