"Change Set:		8673Kernel-ar.352Kernel-ar.352:Shipping NanoTraits part 4: Here comes the big clean up. Let's see if it's loadable :-)"!!Behavior methodsFor: 'testing method dictionary' stamp: 'ar 12/29/2009 17:26'!includesLocalSelector: aSymbol	^self includesSelector: aSymbol! !!Behavior methodsFor: 'adding/removing methods' stamp: 'ar 12/29/2009 17:28'!addSelectorSilently: selector withMethod: compiledMethod	self basicAddSelector: selector withMethod: compiledMethod.! !!Class methodsFor: 'organization' stamp: 'ar 12/29/2009 17:34'!category: aString 	"Categorize the receiver under the system category, aString, removing it from 	any previous categorization."	| oldCategory |	oldCategory := category.	aString isString		ifTrue: [			category := aString asSymbol.			SystemOrganization classify: self name under: category ]		ifFalse: [self errorCategoryName].	SystemChangeNotifier uniqueInstance		class: self recategorizedFrom: oldCategory to: category! !!Class methodsFor: 'organization' stamp: 'ar 12/29/2009 17:34'!category	"Answer the system organization category for the receiver. First check whether the	category name stored in the ivar is still correct and only if this fails look it up	(latter is much more expensive)"	category ifNotNil: [ :symbol |		((SystemOrganization listAtCategoryNamed: symbol) includes: self name)			ifTrue: [ ^symbol ] ].	category := SystemOrganization categoryOfElement: self name.	^category! !!Metaclass methodsFor: 'initialize-release' stamp: 'ar 12/29/2009 17:37'!uses: aTraitCompositionOrArray instanceVariableNames: instVarString 	| newComposition newMetaClass copyOfOldMetaClass |		copyOfOldMetaClass := self copy.	newMetaClass := self instanceVariableNames: instVarString.		newComposition := aTraitCompositionOrArray asTraitComposition.	newMetaClass setTraitComposition: newComposition.		SystemChangeNotifier uniqueInstance		classDefinitionChangedFrom: copyOfOldMetaClass to: newMetaClass! !!Behavior methodsFor: 'adding/removing methods' stamp: 'ar 12/29/2009 17:27'!localSelectors	"Return a set of selectors defined locally."	^ self selectors! !Behavior removeSelector: #traitCompositionIncludes:!Behavior removeSelector: #updateMethodDictionarySelector:!Behavior removeSelector: #setTraitCompositionFrom:!Class removeSelector: #basicLocalSelectors!Behavior removeSelector: #parseScope!Class removeSelector: #hasTraitComposition!Behavior removeSelector: #noteChangedSelectors:!Behavior removeSelector: #deregisterLocalSelector:!Behavior removeSelector: #traitTransformations!Behavior removeSelector: #addTraitSelector:withMethod:!Behavior removeSelector: #addExclusionOf:to:!Behavior removeSelector: #isLocalAliasSelector:!Behavior removeSelector: #isDisabledSelector:!Metaclass removeSelector: #basicLocalSelectors:!Behavior removeSelector: #basicLocalSelectors!Behavior removeSelector: #removeTraitSelector:!Behavior removeSelector: #hasTraitComposition!Behavior removeSelector: #removeFromComposition:!Behavior removeSelector: #traitCompositionString!Behavior removeSelector: #basicAddTraitSelector:withMethod:!Behavior removeSelector: #requirements!Class removeSelector: #basicLocalSelectors:!Behavior removeSelector: #notifyUsersOfChangedSelectors:!Behavior removeSelector: #sendCaches:!Behavior removeSelector: #registerLocalSelector:!Class removeSelector: #basicCategory!Behavior removeSelector: #selfSentSelectorsFromSelectors:!Metaclass removeSelector: #assertConsistantCompositionsForNew:!Behavior removeSelector: #methodDictAddSelectorSilently:withMethod:!Behavior removeSelector: #canPerform:!Behavior removeSelector: #traitComposition!Behavior removeSelector: #superRequirements!Behavior removeSelector: #hasRequiredSelectors!Behavior removeSelector: #traitOrClassOfSelector:!Behavior removeSelector: #addToComposition:!Metaclass removeSelector: #noteNewBaseTraitCompositionApplied:!Behavior removeSelector: #basicLocalSelectors:!Behavior removeSelector: #traitsProvidingSelector:!Behavior removeSelector: #purgeLocalSelectors!Behavior removeSelector: #clearSendCaches!Behavior removeSelector: #isAliasSelector:!Behavior removeSelector: #isProvidedSelector:!Behavior removeSelector: #traitComposition:!Behavior removeSelector: #notifyUsersOfChangedSelector:!Behavior removeSelector: #applyChangesOfNewTraitCompositionReplacing:!Metaclass removeSelector: #basicLocalSelectors!Metaclass removeSelector: #hasTraitComposition!Behavior removeSelector: #setRequiredStatusOf:to:!Behavior removeSelector: #removeAlias:of:!Class removeSelector: #basicCategory:!Behavior removeSelector: #ensureLocalSelectors!