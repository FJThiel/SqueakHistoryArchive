"Change Set:		8783MorphicExtras-ar.68MorphicExtras-ar.68:Make Etoys unloadable: Move lots of methods to Etoys package. Remove the old Fabrik remnants."!MorphicModel subclass: #TwoWayScrollPane	instanceVariableNames: 'getMenuSelector getMenuTitleSelector xScrollBar yScrollBar scroller'	classVariableNames: ''	poolDictionaries: ''	category: 'MorphicExtras-Obsolete'!!ViewerFlapTab methodsFor: 'transition' stamp: 'ar 1/3/2010 16:40'!unhibernate	"recreate my viewer"	| wasShowing viewer |	referent ifNotNil: [(referent isViewer) ifNotNil: [^self]].	wasShowing := flapShowing.	"guard against not-quite-player-players"	viewer := ((scriptedPlayer respondsTo: #costume) 				and: [scriptedPlayer costume isMorph]) 					ifTrue: [self presenter viewMorph: scriptedPlayer costume]					ifFalse: [self presenter viewObjectDirectly: scriptedPlayer]. 	wasShowing ifFalse: [self hideFlap].	^viewer! !!AlignmentMorphBob1 methodsFor: 'as yet unclassified' stamp: 'ar 1/3/2010 20:08'!simpleToggleButtonFor: target attribute: attribute help: helpText	^(Smalltalk at: #EtoyUpdatingThreePhaseButtonMorph ifAbsent:[^Morph new])		target: target;		actionSelector: #toggleChoice:;		arguments: {attribute};		getSelector: #getChoice:;		setBalloonText: helpText;		step! !!ProjectNavigationMorph methodsFor: 'the actions' stamp: 'ar 1/3/2010 18:48'!gotoAnother	Smalltalk at: #EToyProjectHistoryMorph ifPresent:[:aClass| aClass new openInWorld].! !!InternalThreadNavigationMorph methodsFor: 'navigation' stamp: 'ar 1/3/2010 18:47'!insertNewProject	| newProj |	[newProj := MorphicProject openViewOn: nil.]		on: ProjectViewOpenNotification		do: [ :ex | ex resume: false].		Smalltalk at: #EToyProjectDetailsMorph ifPresent:[:aClass|		aClass			getFullInfoFor: newProj			ifValid: [self insertNewProjectActionFor: newProj]			expandedFormat: false.	].! !!ProjectNavigationMorph methodsFor: 'the buttons' stamp: 'ar 1/3/2010 18:49'!findSomethingOnSuperSwiki	| projectServers server index |	projectServers := ServerDirectory projectServers.	projectServers isEmpty		ifTrue: [^self].	projectServers size = 1		ifTrue: [server := projectServers first]		ifFalse: [index := UIManager default chooseFrom: (projectServers collect: [:each | (ServerDirectory nameForServer: each) translatedIfCorresponds]) 				title: 'Choose a super swiki:' translated.			index > 0				ifTrue: [server := projectServers at: index]				ifFalse: [^self]].	Smalltalk at: #EToyProjectQueryMorph ifPresent:[:aClass| aClass onServer: server].! !!ProjectSorterMorph methodsFor: 'as yet unclassified' stamp: 'ar 1/3/2010 18:48'!insertNewProject: evt	| newProj |	[newProj := MorphicProject openViewOn: nil.]		on: ProjectViewOpenNotification		do: [ :ex | ex resume: false].		Smalltalk at: #EToyProjectDetailsMorph ifPresent:[:aClass|		aClass			getFullInfoFor: newProj			ifValid: [				evt hand attachMorph: (self sorterMorphForProjectNamed: newProj name)			]			expandedFormat: false.	].! !!ProjectNavigationMorph methodsFor: 'the actions' stamp: 'ar 1/3/2010 18:48'!editProjectInfo	Smalltalk at: #EToyProjectDetailsMorph ifPresent:[:aClass|		aClass			getFullInfoFor: (self world ifNil: [^self]) project			ifValid: []			expandedFormat: true	].! !!RecordingControlsMorph methodsFor: 'button commands' stamp: 'ar 1/3/2010 16:18'!makeTile	"Make a tile representing my sound.  Get a sound-name from the user by which the sound is to be known."	| newStyleTile sndName tile tileClass |	tileClass := Smalltalk at: #SoundTile ifAbsent:[nil].	recorder verifyExistenceOfRecordedSound ifFalse: [^ self].	recorder pause.	newStyleTile := tileClass notNil.	newStyleTile		ifTrue:			[sndName := UIManager default				request: 'Please name your new sound' translated				initialAnswer: 'sound' translated.			sndName isEmpty ifTrue: [^ self].			sndName := SampledSound unusedSoundNameLike: sndName.			SampledSound				addLibrarySoundNamed: sndName				samples: recorder condensedSamples				samplingRate: recorder samplingRate.			tile := tileClass new literal: sndName]		ifFalse:			[tile := InterimSoundMorph new sound: 				(SampledSound					samples: recorder condensedSamples					samplingRate: recorder samplingRate)].	tile bounds: tile fullBounds.	tile openInHand! !!ViewerFlapTab methodsFor: 'transition' stamp: 'ar 1/3/2010 16:39'!hibernate	"drop my viewer to save space when writing to the disk."	referent submorphs do: 		[:m | (m isViewer) ifTrue: [m delete]]! !Smalltalk removeClassNamed: #ComponentLayout!ComponentLayout removeSelector: #allKnownNames!ComponentLayout removeSelector: #acceptDroppingMorph:event:!PinMorph removeSelector: #handlesMouseDown:!PinMorph classSide removeSelector: #includeInNewMorphMenu!PinMorph removeSelector: #canDockWith:!Component classSide removeSelector: #wantsChangeSetLogging!PinSpec removeSelector: #pinLoc!PinSpec removeSelector: #isInput!FunctionComponent removeSelector: #headerString!PinMorph removeSelector: #mergeVariableWith:!Smalltalk removeClassNamed: #TextComponent!PinMorph removeSelector: #placeFromSpec!PinSpec removeSelector: #isOutput!PinMorph removeSelector: #mouseMove:!PinMorph removeSelector: #hasVariable!FunctionComponent removeSelector: #initPinSpecs!BookMorph removeSelector: #methodHolders!PinSpec removeSelector: #pinName:direction:localReadSelector:localWriteSelector:modelReadSelector:modelWriteSelector:defaultValue:pinLoc:!PrintComponent removeSelector: #initPinSpecs!PinSpec removeSelector: #pinName!Component removeSelector: #justDroppedInto:event:!PinMorph classSide removeSelector: #initialize!Component classSide removeSelector: #addSlotNamed:!PinSpec removeSelector: #localReadSelector!PinMorph removeSelector: #shareVariableOf:!Component removeSelector: #removeVariableNamed:!PinSpec removeSelector: #isOutputOnly!PinSpec removeSelector: #modelReadSelector:modelWriteSelector:!PinSpec removeSelector: #isInputOutput!ListComponent removeSelector: #initFromPinSpecs!PinSpec removeSelector: #hasVariable!PinMorph removeSelector: #wiringEndPoint!TextComponent removeSelector: #initComponentIn:!Component removeSelector: #addVariableNamed:!Smalltalk removeClassNamed: #PinMorph!BookMorph removeSelector: #installRollBackButtons!WireMorph removeSelector: #delete!Smalltalk removeClassNamed: #FunctionComponent!PinMorph removeSelector: #connectedPins!Component removeSelector: #nameMeIn:!WireMorph removeSelector: #addHandles!PinMorph removeSelector: #wireTo:!ComponentLayout removeSelector: #createCustomModel!PinSpec removeSelector: #localWriteSelector!Component removeSelector: #chooseNameLike:!PinSpec removeSelector: #variableName!FunctionComponent removeSelector: #addCustomMenuItems:hand:!DSCPostscriptCanvas removeSelector: #fullDrawBookMorph:!ComponentLayout removeSelector: #addCustomMenuItems:hand:!PinSpec removeSelector: #modelWriteSelector!FunctionComponent removeSelector: #accept!PinMorph removeSelector: #pinSpec!Smalltalk removeClassNamed: #WireMorph!Smalltalk removeClassNamed: #PrintComponent!Smalltalk removeClassNamed: #PinSpec!PrintComponent removeSelector: #accept!PinMorph removeSelector: #position:!FunctionComponent removeSelector: #initFromPinSpecs!PinMorph removeSelector: #addWire:!ComponentLayout removeSelector: #initialize!TextComponent removeSelector: #initPinSpecs!ListComponent removeSelector: #list:!PinMorph removeSelector: #delete!Component removeSelector: #renameMe!PinMorph removeSelector: #removeModelVariable!PinMorph removeSelector: #removeVariableAccess!FunctionComponent removeSelector: #getText!PrintComponent removeSelector: #getText!ScrollableField class removeSelector: #additionsToViewerCategories!WireMorph removeSelector: #fromPin:toPin:!Smalltalk removeClassNamed: #Component!ListComponent removeSelector: #changeModelSelection:!Smalltalk removeClassNamed: #ListComponent!WireMorph removeSelector: #mouseUp:!PinMorph removeSelector: #unwire!Component classSide removeSelector: #includeInNewMorphMenu!PasteUpMorph class removeSelector: #additionsToViewerCategories!PinMorph removeSelector: #mouseDown:!PinMorph removeSelector: #initialize!PinMorph removeSelector: #component:pinSpec:!PinSpec removeSelector: #defaultValue!FunctionComponent removeSelector: #update:!FunctionComponent removeSelector: #fire!WireMorph removeSelector: #otherPinFrom:!PinMorph removeSelector: #removeWire:!BookMorph removeSelector: #chooseAndRevertToVersion!PinSpec removeSelector: #pinLoc:!Component removeSelector: #initComponentIn:!WireMorph removeSelector: #pinMoved!TextComponent removeSelector: #initFromPinSpecs!WireMorph removeSelector: #handlesMouseDown:!TextComponent removeSelector: #initialize!WireMorph classSide removeSelector: #includeInNewMorphMenu!PinMorph removeSelector: #updateImage!PinMorph removeSelector: #addModelVariable!Component classSide removeSelector: #acceptsLoggingOfCompilation!PinMorph removeSelector: #startWiring:!PinSpec removeSelector: #isInputOnly!PinMorph removeSelector: #isIsolated!PinSpec removeSelector: #modelReadSelector!ListComponent removeSelector: #initPinSpecs!FunctionComponent removeSelector: #addPin!Component removeSelector: #externalName!PinMorph initialize!