"Change Set:		7193Tests-auto.35Tests-auto.35:This is an automatic commit from the 3.10.2 to cover the delta between 3.10 and 3.10.2 in the repositories"!MorphicUIBugTest subclass: #RenderBugz	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Tests-Bugs'!!RenderBugz methodsFor: 'utility' stamp: 'wiz 5/14/2008 23:25'!shouldntTakeLong: aBlock"Check for infinite recursion. Test should finish in a reasonable time."^self should:  aBlock  		notTakeMoreThanMilliseconds: self long .! !!LangEnvBugs methodsFor: 'as yet unclassified' stamp: 'wiz 5/19/2008 14:17'!tearDownPreferences restoreDefaultFonts! !!RenderBugz methodsFor: 'utility' stamp: 'wiz 5/15/2008 22:44'!long"return time limit in milliseconds for tests"^4! !!ReleaseTest methodsFor: 'testing' stamp: 'wiz 5/30/2008 23:29'!testClassesSystemCategory"Find cases where classes have nil system categories.This test will tell you the classes.This is inspired by the proposed fix of a bug in release of 3.10.1 see Mantis #7070" | rejectClasses | rejectClasses :=  nil systemNavigation allClasses reject: [ :each |	each category notNil ] .self assert: rejectClasses isEmpty .! !!RenderBugz methodsFor: 'tests' stamp: 'wiz 5/15/2008 22:34'!testHeading"If the bug exist there will be an infinte recursion.""self new testHeading""self run: #testHeading"| t |cases := {t := TransformationMorph new openCenteredInWorld } . self shouldntTakeLong: [ [self assert: ( t heading = 0.0 ) ] 				ensure: [ t delete ] ]  .^true  ! !!RenderBugz methodsFor: 'tests' stamp: 'wiz 5/15/2008 22:36'!testForward"If the bug exist there will be an infinte recursion.""self new testForward""self run: #testForward"| t |cases := {t := TransformationMorph new openCenteredInWorld } . self shouldntTakeLong: [self assert: ( t forwardDirection = 0.0 ) ]  .^true  ! !!ReleaseTest methodsFor: 'testing' stamp: 'wiz 5/30/2008 23:30'!testSystemCategoryClasses"Find cases where system categories name absent classes.This test will tell you the classes.This is inspired by a bug in release of 3.10.1 see Mantis #7070" |  rejectCats rejectClasses | rejectCats := SystemOrganization categories reject: [ :catName |	(SystemOrganization listAtCategoryNamed: catName) 		allSatisfy: [ :className | 			( Smalltalk includesKey: className ) ] ] ."self assert: rejectCats isEmpty ."rejectCats isEmpty ifTrue: [ ^ true ] . rejectClasses :=rejectCats collect: [ :each |	each ->	( (SystemOrganization listAtCategoryNamed: each) 		reject: [ :eachOne | 			( Smalltalk includesKey: eachOne )  ] ) ] .self assert: rejectCats isEmpty .! !!RenderBugz methodsFor: 'tests' stamp: 'wiz 5/15/2008 22:35'!testSetHeading"If the bug exist there will be an infinte recursion.""self new testSetHeading""self run: #testSetHeading"| t |cases := {t := TransformationMorph new openCenteredInWorld } . self shouldntTakeLong: [ t heading:  180 .					 self assert: ( t heading = 0.0 ) .]  .^true  ! !!RenderBugz methodsFor: 'tests' stamp: 'wiz 5/15/2008 22:35'!testSetForward"If the bug exist there will be an infinte reccursion.""self new testSetForward""self run: #testSetForward"| t |cases := {t := TransformationMorph new openCenteredInWorld } . self 	shouldntTakeLong: [ t forwardDirection: 180.0 . 					self assert: ( t forwardDirection = 0.0 )  ]  ."and without a rendee it should not change things."^true  ! !!RenderBugz methodsFor: 'tests' stamp: 'wiz 5/15/2008 22:33'!testTestTime"This is a control case. Should always pass. If it does not something external to the tests are slowing things down past the 1 millisecond mark.""self new testTestTime""self run: #testTestTime"| t |cases := {t := TransformationMorph new openCenteredInWorld } . self shouldntTakeLong: [ self assert: ( true )  ]  .^true  ! !