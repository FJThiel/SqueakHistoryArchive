"Change Set:		7692System-ar.139System-ar.139:FreeTypePlus integration. Vector the preference requests for changing standard fonts through UI manager so that we can fire off a proper chooser dialog.System-ar.137:Tests for when:evaluate: with blocks. Remove EventTest while we are at it because it was a duplicate of EventManagerTest.System-dtl.138:Use #identityHash rather than #asOop in MessageTally>>Hash"!!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:00'!chooseEToysTitleFont	"present a menu with the possible fonts for the eToys"	self		chooseFontWithPrompt: 'eToys Title font...' translated		andSendTo: self		withSelector: #setEToysTitleFontTo:		highlightSelector: #standardEToysTitleFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:01'!chooseMenuFont	self 		chooseFontWithPrompt: 'Menu font...' translated		andSendTo: self 		withSelector: #setMenuFontTo: 		highlightSelector: #standardMenuFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:01'!chooseWindowTitleFont	self 		chooseFontWithPrompt: 'Window Title font...' translated		andSendTo: self 		withSelector: #setWindowTitleFontTo: 		highlightSelector: #windowTitleFont! !!EventManagerTest methodsFor: 'running-dependent action' stamp: 'ar 8/26/2009 21:37'!testBlockReceiverOneArg	eventSource when: #anEvent: evaluate:[:arg1| eventListener add: arg1].	eventSource triggerEvent: #anEvent: with: 9.	self should: [eventListener includes: 9]! !!EventManagerTest methodsFor: 'running-dependent action' stamp: 'ar 8/26/2009 21:38'!testBlockReceiverTwoArgs	eventSource when: #anEvent:info: evaluate:[:arg1 :arg2| self addArg1: arg1 addArg2: arg2].	eventSource triggerEvent: #anEvent:info: withArguments: #( 9 42 ).	self should: [(eventListener includes: 9) and: [eventListener includes: 42]]! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:00'!chooseHaloLabelFont	"present a menu with the possible fonts for label in halo"	self		chooseFontWithPrompt: 'Halo Label font...'		andSendTo: self		withSelector: #setHaloLabelFontTo:		highlightSelector: #standardHaloLabelFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:01'!chooseListFont	self 		chooseFontWithPrompt: 'List font...' translated		andSendTo: self 		withSelector: #setListFontTo: 		highlightSelector: #standardListFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 01:59'!chooseCodeFont	"Not currently sent, but once protocols are sorted out so that we can disriminate on whether a text object being launched is for code or not, will be reincorporated"	self 		chooseFontWithPrompt: 'Code font...' translated 		andSendTo: self 		withSelector: #setCodeFontTo: 		highlightSelector: #standardCodeFont.! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:00'!chooseEToysFont	"present a menu with the possible fonts for the eToys"	self		chooseFontWithPrompt: 'eToys font...' translated		andSendTo: self		withSelector: #setEToysFontTo:		highlightSelector: #standardEToysFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/4/2007 14:30'!standardSystemFont	"Answer the standard system font "	^(TextConstants at: #DefaultTextStyle) defaultFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:01'!chooseSystemFont	self 		chooseFontWithPrompt: 'Default font...' translated		andSendTo: self 		withSelector: #setSystemFontTo: 		highlightSelector: #standardSystemFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:00'!chooseFlapsFont	self 		chooseFontWithPrompt: 'Flaps font...' translated		andSendTo: self 		withSelector: #setFlapsFontTo: 		highlightSelector: #standardFlapFont! !!Preferences class methodsFor: 'fonts' stamp: 'tween 8/7/2007 02:01'!chooseStandardButtonFont	self 		chooseFontWithPrompt: 'Button font...' translated		andSendTo: self 		withSelector: #setButtonFontTo: 		highlightSelector: #standardButtonFont! !!Preferences class methodsFor: 'fonts' stamp: 'ar 8/30/2009 16:44'!chooseFontWithPrompt: aPrompt andSendTo: aReceiver withSelector: aSelector highlightSelector: highlightSelector	^UIManager default 			chooseFont: aPrompt 			for: aReceiver 			setSelector: aSelector			getSelector: highlightSelector ! !!MessageTally methodsFor: 'comparing' stamp: 'dtl 8/29/2009 12:49'!hash	"Hash is reimplemented because = is implemented."	^method identityHash! !!EventManagerTest methodsFor: 'running-dependent action' stamp: 'ar 8/26/2009 21:37'!testBlockReceiverNoArgs	eventSource when: #anEvent evaluate:[self heardEvent].	eventSource triggerEvent: #anEvent.	self should: [succeeded]! !EventTest removeSelector: #testMultipleValueSuppliersEventHasArguments!EventTest removeSelector: #testTwoArgumentEvent!EventTest removeSelector: #testRemoveActionsWithReceiver!EventTest removeSelector: #testNoArgumentEventDependentSuppliedArgument!EventTest removeSelector: #testNoArgumentEvent!EventTest removeSelector: #testReturnValueWithOneListener!EventTest removeSelector: #testSingleValueSupplier!EventTest removeSelector: #heardEvent!EventTest removeSelector: #testReturnValueWithManyListeners!EventTest removeSelector: #testMultipleValueSuppliers!EventTest removeSelector: #getTrue:!EventTest removeSelector: #setUp!EventTest removeSelector: #addArg1:addArg2:!EventTest removeSelector: #testReturnValueWithNoListeners!EventTest removeSelector: #tearDown!EventTest removeSelector: #getTrue!EventTest removeSelector: #testNoValueSupplierHasArguments!EventTest removeSelector: #testRemoveActionsForEvent!EventTest removeSelector: #getFalse!Smalltalk removeClassNamed: #EventTest!EventTest removeSelector: #testMultipleValueSuppliersEventHasArgumentsWithGC!EventTest removeSelector: #testOneArgumentEvent!EventTest removeSelector: #testNoValueSupplier!EventTest removeSelector: #testRemoveActionsTwiceForEvent!EventTest removeSelector: #getFalse:!EventTest removeSelector: #testNoArgumentEventDependentSuppliedArguments!