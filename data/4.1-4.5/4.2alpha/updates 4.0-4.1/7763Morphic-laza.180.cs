"Change Set:		7763Morphic-laza.180Morphic-laza.180:empty log messageMorphic-bf.169:- fix PluggableListMorph>>userString which answered an OrderedCollection instead of a String, making 'copy text' on a list failMorphic-jmv.170:Fix a couple of issues with AntiAliased StrikeFonts in StringMorph and in ProjectViewMorph.Morphic-ar.171:Remove a usage of SelectionMenu in TextEditor and clean out some obscure code paths that were never actually used. Leave in the actual menu definitions for now since although they aren't used it's yet unclear what the ultimate location for these will be.Morphic-ar.172:Fix users of CustomMenu in Morphic and replace them with proper MenuMorph usage."!!StringMorph methodsFor: 'drawing' stamp: 'jmv 9/7/2009 00:36'!imageForm: depth forRectangle: rect	| canvas |	canvas := Display defaultCanvasClass extent: rect extent depth: depth.	canvas form fillColor: Color white. 	canvas translateBy: rect topLeft negated		during:[:tempCanvas| tempCanvas fullDrawMorph: self].	^ canvas form offset: rect topLeft! !!SystemProgressMorph methodsFor: 'labelling' stamp: 'laza 9/7/2009 22:01'!setLabel: shortDescription at: slot	(labels at: slot) contents: shortDescription.	self recenter! !!TextEditor class methodsFor: 'keyboard shortcut tables' stamp: 'ar 9/7/2009 11:23'!initializeYellowButtonMenu	"Initialize the yellow button pop-up menu and corresponding messages."	"TextEditor initialize"	yellowButtonMenu := {		{'find...(f)' translated.				#find}.		{'find again (g)' translated.			#findAgain}.		{'set search string (h)' translated.	#setSearchString}.		#-.		{'do again (j)' translated.			#again}.		{'undo (z)' translated.				#undo}.		#-.		{'copy (c)' translated.				#copySelection}.		{'cut (x)' translated.				#cut}.		{'paste (v)' translated.				#paste}.		{'paste...' translated.				#pasteRecent}.		#-.		{'set font... (k)' translated.			#offerFontMenu}.		{'set style... (K)' translated.		#changeStyle}.		{'set alignment...' translated.		#chooseAlignment}.		"		#-.		{'more...' translated.				#shiftedTextPaneMenuRequest}.		"	}! !!StringMorph methodsFor: 'accessing' stamp: 'jmv 9/7/2009 00:34'!hasTranslucentColor	^true! !!Morph methodsFor: 'meta-actions' stamp: 'ar 9/7/2009 14:28'!sightWorldTargets: event 	"Return the potential targets for the receiver.  	This is derived from Morph>>potentialEmbeddingTargets."	| bullseye myWorld candidates choice |	myWorld := self world ifNil: [^ #()].	bullseye := Point fromUserWithCursor: Cursor target.	candidates := myWorld morphsAt: bullseye.	choice := UIManager default 		chooseFrom: (candidates collect:[:m| m knownName ifNil:[m class name]])		values: candidates.	choice ifNotNil:[self target: choice].! !!SystemProgressMorph methodsFor: 'labelling' stamp: 'laza 9/9/2009 01:00'!labelAt: progressBlock put: aString	"Change the label for the given progressBlock to aString."	"progressBlock value: aString"! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 9/8/2009 15:03'!label: shortDescription min: minValue max: maxValue	| slot range newBarSize barSize lastRefresh |	((range := maxValue - minValue) < 0 or: [(slot := self nextSlotFor: shortDescription) = 0])		ifTrue: [^[:barVal| 0 ]].	range <= 0 ifTrue: [self removeMorph: (bars at: slot)].	self recenter.	self openInWorld.	barSize := -1. "Enforces a inital draw of the morph"	lastRefresh := 0.	^[:barVal |		barVal isString ifTrue: [			self setLabel: barVal at: slot.			self currentWorld displayWorld].		(barVal isNumber and: [barVal between: minValue and: maxValue]) ifTrue: [			newBarSize := (barVal - minValue / range * BarWidth) truncated.			newBarSize = barSize ifFalse: [				barSize := newBarSize.				(bars at: slot) barSize: barSize.				Time primMillisecondClock - lastRefresh > 25 ifTrue: [					self currentWorld displayWorld.					lastRefresh := Time primMillisecondClock]]].		slot]! !!ProjectViewMorph methodsFor: 'events' stamp: 'ar 9/7/2009 14:54'!showMenuForProjectView	| menu |	(menu := MenuMorph new)		add: 'enter this project' translated		action: [^ self enter];				add: 'ENTER ACTIVE' translated		action: [self setProperty: #wasOpenedAsSubproject toValue: true.			^ self enterAsActiveSubproject];				add: 'PUBLISH (also saves a local copy)' translated		action: [^ project storeOnServerShowProgressOn: self forgetURL: false];				add: 'PUBLISH to a different server' translated		action: [project forgetExistingURL.			^ project storeOnServerShowProgressOn: self forgetURL: true];				add: 'see if server version is more recent' translated		action: [^ self checkForNewerVersionAndLoad];		addLine;		add: 'expunge this project' translated		action: [^ self expungeProject].	menu title: ('Project Named \"{1}"' translated withCRs format: {project name}).	menu invokeModal.! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 9/8/2009 06:06'!nextSlotFor: shortDescription	| bar slots label |	lock critical: [		slots := labels size.		activeSlots = slots ifTrue: [^0].		activeSlots := activeSlots + 1.		1 to: slots do: [:index |			label := (labels at: index).			label ifNil: [				bar := bars at: index put: (SystemProgressBarMorph new extent: BarWidth@BarHeight).				label := labels at: index put: (StringMorph contents: shortDescription font: font).				self					addMorphBack: label;					addMorphBack: bar.				^index].			label owner ifNil: [				bar := bars at: index.				label := labels at: index.				self					addMorphBack: (label contents: shortDescription);					addMorphBack: (bar barSize: 0).				^index]]]		! !!MenuMorph methodsFor: 'construction' stamp: 'ar 9/7/2009 14:51'!add: aString action: aSymbolOrValuable	"Append a menu item with the given label. If the item is selected, it will send the given selector to the default target object."	"Details: Note that the menu item added captures the default target object at the time the item is added; the default target can later be changed before added additional items without affecting the targets of previously added entries. The model is that each entry is like a button that knows everything it needs to perform its action."	aSymbolOrValuable isSymbol ifTrue:[		self add: aString			target: defaultTarget			selector: aSymbolOrValuable			argumentList: EmptyArray.	] ifFalse:[		self add: aString			target: aSymbolOrValuable			selector: #value			argumentList: EmptyArray.	]! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 9/8/2009 15:04'!freeSlot: number	number > 0 ifTrue: [		lock critical: [			(bars at: number) delete.			(labels at: number) delete.			activeSlots := activeSlots - 1.			activeSlots = 0				ifTrue: [self delete]				ifFalse: [self recenter]]]! !!SmalltalkEditor class methodsFor: 'keyboard shortcut tables' stamp: 'ar 9/7/2009 11:27'!initializeShiftedYellowButtonMenu	"Initialize the yellow button pop-up menu and corresponding messages."	"SmalltalkEditor initialize"	shiftedYellowButtonMenu := {		{'set font... (k)' translated.					#offerFontMenu}.		{'set style... (K)' translated.				#changeStyle}.		{'set alignment...' translated.				#chooseAlignment}.		#-.		{'explain' translated.						#explain}.		{'pretty print' translated.					#prettyPrint}.		{'pretty print with color' translated.		#prettyPrintWithColor}.		{'file it in (G)' translated.					#fileItIn}.		{'spawn (o)' translated.					#spawn}.		#-.		{'browse it (b)' translated.					#browseIt}.		{'senders of it (n)' translated.				#sendersOfIt}.		{'implementors of it (m)' translated.		#implementorsOfIt}.		{'references to it (N)' translated.			#referencesToIt}.		#-.		{'selectors containing it (W)' translated.	#methodNamesContainingIt}.		{'method strings with it (E)' translated.	#methodStringsContainingit}.		{'method source with it' translated.		#methodSourceContainingIt}.		{'class names containing it' translated.	#classNamesContainingIt}.		{'class comments with it' translated.		#classCommentsContainingIt}.		{'change sets with it' translated.			#browseChangeSetsWithSelector}.		#-.		{'save contents to file...' translated.		#saveContentsInFile}.		#-.		{'more...' translated.						#yellowButtonActivity}.	}! !!SystemProgressMorph class methodsFor: 'examples' stamp: 'laza 9/8/2009 22:04'!exampleLabelOnly	"SystemProgressMorph exampleLabelOnly"	| words |	words := #(zero one two three four five six seven eight nine ten) reversed.	UIManager default informUserDuring: [:bar |		words do: [:each|			bar value: 'Countdown: ', each.			(Delay forSeconds: 1) wait]].! !!ProjectViewMorph methodsFor: 'drawing' stamp: 'jmv 9/7/2009 00:35'!drawOn: aCanvas	| font projectName nameForm rectForName |	self ensureImageReady.	super drawOn: aCanvas.	self isEditingName ifTrue: [^self].	font := self fontForName.	projectName := self safeProjectName.	nameForm := (StringMorph contents: projectName font: font) imageForm.	nameForm := nameForm scaledToSize: (self extent - (4@2) min: nameForm extent).	rectForName := self bottomLeft + 			(self width - nameForm width // 2 @ (nameForm height + 2) negated)				extent: nameForm extent.	rectForName topLeft eightNeighbors do: [ :pt |		aCanvas			stencil: nameForm 			at: pt			color: self colorAroundName.	].	aCanvas		drawImage: nameForm 		at: rectForName topLeft! !!SystemProgressMorph methodsFor: 'initialization' stamp: 'laza 9/8/2009 15:13'!initialize	super initialize.	activeSlots := 0.	bars := Array new: 10.	labels := Array new: 10.	font := Preferences standardMenuFont.	lock := Semaphore forMutualExclusion.	self setDefaultParameters;		setProperty: #morphicLayerNumber toValue: self morphicLayerNumber;		layoutPolicy: TableLayout new;		listDirection: #topToBottom;		cellPositioning: #leftCenter;		cellInset: 5;		listCentering: #center;		hResizing: #shrinkWrap;		vResizing: #shrinkWrap;		layoutInset:30@30;		minWidth: 150! !!SmalltalkEditor class methodsFor: 'keyboard shortcut tables' stamp: 'ar 9/7/2009 11:27'!initializeYellowButtonMenu	"Initialize the yellow button pop-up menu and corresponding messages."	"SmalltalkEditor initialize"	yellowButtonMenu := {		{'find...(f)' translated.				#find}.		{'find again (g)' translated.			#findAgain}.		{'set search string (h)' translated.	#setSearchString}.		#-.	     		{'do again (j)' translated.			#again}.		{'undo (z)' translated.				#undo}.		#-.	     		{'copy (c)' translated.				#copySelection}.		{'cut (x)' translated.				#cut}.		{'paste (v)' translated.				#paste}.		{'paste...' translated.				#pasteRecent}.		#-.	     		{'do it (d)' translated.				#doIt}.		{'print it (p)' translated.			#printIt}.		{'inspect it (i)' translated.			#inspectIt}.		{'explore it (I)' translated.			#exploreIt}.		{'debug it' translated.				#debugIt}.		#-.	     		{'accept (s)' translated.			#accept}.		{'cancel (l)' translated.				#cancel}.		#-.	     		{'show bytecodes' translated.		#showBytecodes}.		#-.	     		{'more...' translated.				#shiftedTextPaneMenuRequest}.	}! !!TheWorldMenu methodsFor: 'action' stamp: 'ar 9/7/2009 14:33'!projectThumbnail	"Offer the user a menu of project names. Attach to the hand a thumbnail of the project the user selects."	| projName pr names values |	names := OrderedCollection with: Project current name, ' (current)'.	values := OrderedCollection with: Project current name.	Project allNames do: [:n | names add: n. values add: n].	projName := UIManager default 		chooseFrom: names values: values lines: #(1) title: 'Select a project'.	projName ifNotNil:		[(pr := Project named: projName) 			ifNotNil: [myHand attachMorph: (ProjectViewMorph on: pr)]			ifNil: [self inform: 'can''t seem to find that project']].! !!SystemProgressMorph methodsFor: 'private' stamp: 'laza 9/7/2009 21:58'!recenter	self align: self fullBounds center with: Display boundingBox center.! !!SystemProgressMorph class methodsFor: 'examples' stamp: 'laza 9/8/2009 15:12'!exampleChangeLabel	"SystemProgressMorph exampleChangeLabel"	| classes |	classes := Smalltalk allClasses copyFrom: 1 to: 100.	'InitialLabel' 		displayProgressAt: Display center		from: 0 to: classes size		during: [:bar | 1 to: classes size do: [:i |				bar value: i.				bar value: i printString, '/', classes size printString, ' ', (classes at: i) printString.				(Delay forMilliseconds: 100) wait]]! !!PluggableListMorph methodsFor: 'debug and other' stamp: 'bf 9/6/2009 16:17'!userString	"Do I have a text string to be searched on?"	^ String streamContents: [:strm |		1 to: self getListSize do: [:i |			strm nextPutAll: (self getListItem: i); cr]]! !!TextEditor class methodsFor: 'keyboard shortcut tables' stamp: 'ar 9/7/2009 11:41'!initializeShiftedYellowButtonMenu	"Initialize the yellow button pop-up menu and corresponding messages."	"TextEditor initialize"	"	shiftedYellowButtonMenu := {		{'set font... (k)' translated.					#offerFontMenu}.		{'set style... (K)' translated.				#changeStyle}.		{'set alignment...' translated.				#chooseAlignment}.		#-.		{'more...' translated.						#yellowButtonActivity}.	}	"	shiftedYellowButtonMenu _ yellowButtonMenu! !!TextMorph methodsFor: 'menu' stamp: 'ar 9/7/2009 11:31'!addCustomMenuItems: aCustomMenu hand: aHandMorph	| outer |	super addCustomMenuItems: aCustomMenu hand: aHandMorph.	aCustomMenu add: 'text properties...' translated action: #changeTextColor.	aCustomMenu addUpdating: #autoFitString target: self action: #autoFitOnOff.	aCustomMenu addUpdating: #wrapString target: self action: #wrapOnOff.	aCustomMenu add: 'text margins...' translated action: #changeMargins:.	aCustomMenu add: 'add predecessor' translated action: #addPredecessor:.	aCustomMenu add: 'add successor' translated action: #addSuccessor:.		outer := self owner.	outer ifNotNil: [	outer isLineMorph ifTrue:		[container isNil			ifTrue: [aCustomMenu add: 'follow owner''s curve' translated action: #followCurve]			ifFalse: [aCustomMenu add: 'reverse direction' translated action: #reverseCurveDirection.					aCustomMenu add: 'set baseline' translated action: #setCurveBaseline:]]		ifFalse:		[self fillsOwner			ifFalse: [aCustomMenu add: 'fill owner''s shape' translated action: #fillingOnOff]			ifTrue: [aCustomMenu add: 'rectangular bounds' translated action: #fillingOnOff].		self avoidsOcclusions			ifFalse: [aCustomMenu add: 'avoid occlusions' translated action: #occlusionsOnOff]			ifTrue: [aCustomMenu add: 'ignore occlusions' translated action: #occlusionsOnOff]]].	aCustomMenu addLine.	aCustomMenu add: 'holder for characters' translated action: #holderForCharacters! !!SystemProgressBarMorph methodsFor: 'drawing' stamp: 'laza 9/8/2009 22:02'!drawOn: aCanvas	| area |	super drawOn: aCanvas.		barSize > 0 ifTrue: [		area := self innerBounds.		area := area origin extent: barSize-2@area extent y.		aCanvas fillRectangle: area color: (Preferences menuTitleColor alpha: 1) darker.	].! !!Morph methodsFor: 'meta-actions' stamp: 'ar 9/7/2009 14:28'!sightTargets: event 	"Return the potential targets for the receiver.  	This is derived from Morph>>potentialEmbeddingTargets."	| bullseye candidates choice |	owner ifNil: [^ #()].	bullseye := Point fromUserWithCursor: Cursor target.	candidates := self potentialTargetsAt: bullseye.	choice := UIManager default 		chooseFrom: (candidates collect:[:m| m knownName ifNil:[m class name]])		values: candidates.	choice ifNotNil:[self target: choice].! !!SystemProgressMorph class methodsFor: 'instance creation' stamp: 'laza 9/7/2009 22:48'!informUserAt: aPoint during: workBlock	ProgressInitiationException 		display: ' '		at: aPoint 		from: 0 		to: 0 		during: workBlock! !TextEditor removeSelector: #yellowButtonActivity!TextEditor removeSelector: #getPluggableYellowButtonMenu:!TextMorph removeSelector: #yellowButtonActivity!TextEditor removeSelector: #shiftedTextPaneMenuRequest!TextMorph removeSelector: #shiftedYellowButtonActivity!TextEditor removeSelector: #pluggableYellowButtonActivity:!Morph removeSelector: #targetFromMenu:popupAt:!Collection removeSelector: #asKnownNameMenu!