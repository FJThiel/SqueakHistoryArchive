"Change Set:		8003SUnit-nice.70SUnit-nice.70:Track #selectors usage, and #keys usage, use #asSet where due"!!TestCase class methodsFor: 'coverage' stamp: 'nice 10/20/2009 21:08'!localCoverageForClass: cls		| definedMethods testedMethods untestedMethods |	definedMethods := cls selectors asSet.	"It happens for IdentityBag / IdentityBagTest"	definedMethods size = 0		ifTrue: [^ {0. Set new}].	testedMethods := 		self methodDictionary inject: Set new into: 							[:sums :cm | sums union: cm messages].						"testedMethods contains all the methods send in test methods, which probably contains methods that have nothign to do with collection"	testedMethods := testedMethods reject: [:sel | (definedMethods includes: sel) not].	untestedMethods := definedMethods select: [:selector | (testedMethods includes: selector) not].	^ { (testedMethods size * 100 / definedMethods size) asFloat . untestedMethods}! !!ClassFactoryForTestCaseTest methodsFor: 'testing' stamp: 'nice 10/20/2009 20:10'!testSingleClassCreation	|class elementsInCategoryForTest |	class := factory 		newSubclassOf: Object 		instanceVariableNames: 'a b c' 		classVariableNames: 'X Y'.	self assert: (SystemNavigation new allClasses includes: class).	elementsInCategoryForTest := SystemOrganization listAtCategoryNamed: factory defaultCategory. 	self assert: elementsInCategoryForTest = {class name}.	self assert: class instVarNames = #(a b c).	self assert: class classPool keys asSet = #(X Y) asSet! !