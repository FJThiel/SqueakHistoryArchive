"Change Set:		9911Tools-ar.226Tools-ar.226:Merging Tools-fbs.225:Fixes Mantis issue 7494: HierarchyBrowser's classes pane sits nicely below the single-category pane.Tools-ar.218:Add a defaultBrowserTitle for MessageNames.Tools-nice.219:Attempt to fix http://bugs.squeak.org/view.php?id=7463currentClassName instVar is decorated with annotation and cannot be used directly as a class name.Tools-bp.220:fix height for button rows in browsersTools-fbs.223:Update Hierarchy Browser with fixed button height.Tools-fbs.225:Fixes Mantis issue 7494: HierarchyBrowser's classes pane sits nicely below the single-category pane.Tools-fbs.224:Constant height buttons for the 'predebug' Debugger dialog."!CodeHolder subclass: #ChangeSorter	instanceVariableNames: 'parent myChangeSet currentClassName currentSelector priorChangeSetList'	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-Changes'!SelectionMenu subclass: #CustomMenu	instanceVariableNames: 'labels dividers lastDivider title targets arguments'	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-Menus'!!Debugger methodsFor: 'toolbuilder' stamp: 'fbs 4/5/2010 00:07'!buildNotifierWith: builder label: label message: messageString	| windowSpec listSpec textSpec panelSpec quads |	windowSpec := builder pluggableWindowSpec new.	windowSpec model: self.	windowSpec extent: 450 @ 156. "nice and wide to show plenty of the error msg"	windowSpec label: label.	windowSpec children: OrderedCollection new.	panelSpec := builder pluggablePanelSpec new.	panelSpec children: OrderedCollection new.	quads := self preDebugButtonQuads.	(self interruptedContext selector == #doesNotUnderstand:) ifTrue: [		quads := quads copyWith: 			{ 'Create'. #createMethod. #magenta. 'create the missing method' }	].	quads do:[:spec| | buttonSpec |		buttonSpec := builder pluggableButtonSpec new.		buttonSpec model: self.		buttonSpec label: spec first.		buttonSpec action: spec second.		buttonSpec help: spec fourth.		buttonSpec frame: self preDebugButtonQuadFrame. 		panelSpec children add: buttonSpec.	].	panelSpec layout: #horizontal. "buttons"	panelSpec frame: self preDebugButtonQuadFrame.	windowSpec children add: panelSpec.	Preferences eToyFriendly | messageString notNil ifFalse:[		listSpec := builder pluggableListSpec new.		listSpec 			model: self;			list: #contextStackList; 			getIndex: #contextStackIndex; 			setIndex: #debugAt:; 			frame: self contextStackFrame.		windowSpec children add: listSpec.	] ifTrue:[		message := messageString.		textSpec := builder pluggableTextSpec new.		textSpec 			model: self;			getText: #preDebugMessageString; 			setText: nil; 			selection: nil; 			menu: #debugProceedMenu:;			frame: self contextStackFrame.		windowSpec children add: textSpec.	].	^windowSpec! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/3/2010 20:50'!switchesFrame: bottomFraction	^self switchesFrame: bottomFraction fromLeft: 0.25 width: 0.25.! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/5/2010 11:38'!classListFrame: bottomFraction fromLeft: leftFraction width: rightFraction	^self		classListFrame: bottomFraction		fromTop: 0		fromLeft: leftFraction		width: rightFraction.! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:39'!buttonHeight	^Preferences standardButtonFont height + 12! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:39'!optionalButtonsFrame	^LayoutFrame new		leftFraction: 0 offset: 0;		topFraction: 0 offset: 0;		rightFraction: 1 offset: 0;		bottomFraction: 0 offset: self buttonHeight! !!MessageNames methodsFor: 'initialization' stamp: 'ar 3/28/2010 15:12'!defaultBrowserTitle	^ 'Message Names'! !!ChangeSorter methodsFor: 'code pane' stamp: 'nice 3/29/2010 21:06'!setContents	"return the source code that shows in the bottom pane"	| sel class strm changeType | 	self clearUserEditFlag.	currentClassName ifNil: [^ contents := myChangeSet preambleString ifNil: ['']].	class := self selectedClassOrMetaClass.	(sel := self selectedMessageName) == nil		ifFalse: [changeType := (myChangeSet atSelector: (sel := sel asSymbol) class: class).			changeType == #remove				ifTrue: [^ contents := 'Method has been removed (see versions)'].			changeType == #addedThenRemoved				ifTrue: [^ contents := 'Added then removed (see versions)'].			class ifNil: [^ contents := 'Method was added, but cannot be found!!'].			(class includesSelector: sel)				ifFalse: [^ contents := 'Method was added, but cannot be found!!'].			contents := class sourceCodeAt: sel.			(#(prettyPrint prettyDiffs) includes: contentsSymbol) ifTrue:				[contents :=  class prettyPrinterClass					format: contents in: class notifying: nil].			self showingAnyKindOfDiffs				ifTrue: [contents := self diffFromPriorSourceFor: contents].			^ contents := contents asText makeSelectorBoldIn: class]		ifTrue: [strm := WriteStream on: (String new: 100).			(myChangeSet classChangeAt: (self withoutItemAnnotation: currentClassName)) do:				[:each |				each = #remove ifTrue: [strm nextPutAll: 'Entire class was removed.'; cr].				each = #addedThenRemoved ifTrue: [strm nextPutAll: 'Class was added then removed.'].				each = #rename ifTrue: [strm nextPutAll: 'Class name was changed.'; cr].				each = #add ifTrue: [strm nextPutAll: 'Class definition was added.'; cr].				each = #change ifTrue: [strm nextPutAll: 'Class definition was changed.'; cr].				each = #reorganize ifTrue: [strm nextPutAll: 'Class organization was changed.'; cr].				each = #comment ifTrue: [strm nextPutAll: 'New class comment.'; cr.				]].			^ contents := strm contents].! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/5/2010 11:38'!classListFrame: bottomFraction	^self		classListFrame: bottomFraction		fromTop: 0		fromLeft: 0.25		width: 0.25.! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:44'!annotationFrame	^LayoutFrame new		leftFraction: 0 offset: 0;		topFraction: 1 offset: self annotationPaneHeight negated - 1;		rightFraction: 1 offset: 0;		bottomFraction: 1 offset: 0! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/5/2010 11:41'!openSystemCatEditString: aString	"Create a pluggable version of all the views for a Browser, including views and controllers.  The top list view is of the currently selected system class category--a single item list."	"Example:		Browser new browseAllClasses.	"	| builder catPaneHeight max |	catPaneHeight := 0.08.	builder := ToolBuilder default.	max := self wantsOptionalButtons ifTrue:[0.32 + catPaneHeight] ifFalse:[0.4 + catPaneHeight].	^self buildWindowWith: builder specs: {		(0@0 corner: 1.0@0.08) -> [self buildSystemCatListSingletonWith: builder].		(self classListFrame: max fromTop: catPaneHeight fromLeft: 0 width: 0.333) -> [self buildClassListWith: builder].		(self switchesFrame: max fromLeft: 0 width: 0.333) -> [self buildSwitchesWith: builder].		(0.333@0.08 corner: 0.666@max) -> [self buildMessageCategoryListWith: builder].		(0.666@0.08 corner: 1@max) -> [self buildMessageListWith: builder].		(0@max corner: 1@1) -> [self buildCodePaneWith: builder].	}! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:56'!textFrame	| spacing topOffset bottomOffset |	spacing := 3.	topOffset := self wantsOptionalButtons		ifTrue: [self buttonHeight + spacing]		ifFalse: [spacing].	bottomOffset := self wantsAnnotationPane		ifTrue: [self annotationPaneHeight negated]		ifFalse: [0].	^LayoutFrame new		leftFraction: 0 offset: 0;		topFraction: 0 offset: topOffset;		rightFraction: 1 offset: 0;		bottomFraction: 1 offset: bottomOffset! !!Browser methodsFor: 'initialize-release' stamp: 'bp 4/2/2010 23:26'!openEditString: aString        "Create a pluggable version of all the views for a Browser, including views and controllers."	"Example: 		Browser fullOnClass: Browser.	"	| builder max |	builder := ToolBuilder default.	max := self wantsOptionalButtons ifTrue:[0.42] ifFalse:[0.5].	^self buildWindowWith: builder specs: {		(0@0 corner: 0.25@max) -> [self buildSystemCategoryListWith: builder].		(self classListFrame: max) -> [self buildClassListWith: builder].		(self switchesFrame: max) -> [self buildSwitchesWith: builder].		(0.5@0 corner: 0.75@max) -> [self buildMessageCategoryListWith: builder].		(0.75@0 corner: 1@max) -> [self buildMessageListWith: builder].		"(0@max corner: 1@0.5) -> [self buildOptionalButtonsWith: builder]."		(0@max corner: 1@1) -> [self buildCodePaneWith: builder].	}! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:55'!annotationPaneHeight	^Preferences standardCodeFont height * 2 + 5! !!CodeHolder methodsFor: 'toolbuilder' stamp: 'bp 4/2/2010 22:09'!buildCodePaneWith: builder	| textSpec top buttonSpec annoSpec |	self wantsOptionalButtons ifTrue: [		top := builder pluggablePanelSpec new.		top children: OrderedCollection new.		buttonSpec := self buildOptionalButtonsWith: builder.		buttonSpec frame: self optionalButtonsFrame.		top children add: buttonSpec].	textSpec := builder pluggableCodePaneSpec new.	textSpec 		model: self;		getText: #contents; 		setText: #contents:notifying:; 		selection: #contentsSelection; 		menu: #codePaneMenu:shifted:.	self wantsAnnotationPane ifTrue: [		top ifNil: [			top := builder pluggablePanelSpec new.			top children: OrderedCollection new].		annoSpec := builder pluggableInputFieldSpec new.		annoSpec model: self; getText: #annotation. 		annoSpec frame: self annotationFrame.		top children add: annoSpec].	top ifNotNil: [		textSpec frame: self textFrame.		top children add: textSpec].	^top ifNil: [textSpec]! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/3/2010 10:27'!switchesFrame: bottomFraction fromLeft: leftFraction width: rightFraction	^LayoutFrame new		leftFraction: leftFraction offset: 0;		topFraction: bottomFraction offset: self buttonHeight negated - 4;		rightFraction: (leftFraction + rightFraction) offset: 0;		bottomFraction: bottomFraction offset: 0! !!Browser methodsFor: 'initialize-release' stamp: 'fbs 4/5/2010 11:37'!classListFrame: bottomFraction fromTop: topFraction fromLeft: leftFraction width: rightFraction	^LayoutFrame new		leftFraction: leftFraction offset: 0;		topFraction: topFraction offset: 0;		rightFraction: (leftFraction + rightFraction) offset: 0;		bottomFraction: bottomFraction offset: self buttonHeight negated - 3! !!Debugger methodsFor: 'toolbuilder' stamp: 'fbs 4/4/2010 23:52'!preDebugButtonQuadFrame	^LayoutFrame new		leftFraction: 0 offset: 0;		topFraction: 0 offset: 0;		rightFraction: 1 offset: 0;		bottomFraction: 0 offset: self buttonHeight.! !!Debugger methodsFor: 'toolbuilder' stamp: 'fbs 4/5/2010 00:08'!contextStackFrame	| spacing topOffset |	spacing := 3.	topOffset := self wantsOptionalButtons		ifTrue: [self buttonHeight + spacing]		ifFalse: [spacing].	^LayoutFrame new		leftFraction: 0 offset: 0;		topFraction: 0 offset: topOffset;		rightFraction: 1 offset: 0;		bottomFraction: 1 offset: 0! !Browser removeSelector: #addClassAndSwitchesTo:at:with:!