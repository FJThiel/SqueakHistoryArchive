"Change Set:		7938Tools-ar.133Tools-ar.133:Put the 'create' button back into debug notifiers when we're encountering a DNU.Tools-MAD.132:See also Morphic-MAD.204Selection highlighting in lists is now consistent with that in menus. I've made direct reference to Preferences menuSelectionColor - not sure if this will be seen as reasonable?You should really tone down the highlight colour after loading these changes:Preferences setParameter: #menuSelectionColor to: (Color r: 0.4 g: 0.5 b: 0.7)"!!Debugger methodsFor: 'toolbuilder' stamp: 'ar 10/7/2009 20:40'!buildNotifierWith: builder label: label message: messageString	| windowSpec listSpec textSpec panelSpec buttonSpec quads |	windowSpec := builder pluggableWindowSpec new.	windowSpec model: self.	windowSpec extent: 450 @ 156. "nice and wide to show plenty of the error msg"	windowSpec label: label.	windowSpec children: OrderedCollection new.	panelSpec := builder pluggablePanelSpec new.	panelSpec children: OrderedCollection new.	quads := self preDebugButtonQuads.	(self interruptedContext selector == #doesNotUnderstand:) ifTrue: [		quads := quads copyWith: 			{ 'Create'. #createMethod. #magenta. 'create the missing method' }	].	quads do:[:spec|		buttonSpec := builder pluggableButtonSpec new.		buttonSpec model: self.		buttonSpec label: spec first.		buttonSpec action: spec second.		buttonSpec help: spec fourth.		panelSpec children add: buttonSpec.	].	panelSpec layout: #horizontal. "buttons"	panelSpec frame: (0@0 corner: 1@0.2).	windowSpec children add: panelSpec.	Preferences eToyFriendly | messageString notNil ifFalse:[		listSpec := builder pluggableListSpec new.		listSpec 			model: self;			list: #contextStackList; 			getIndex: #contextStackIndex; 			setIndex: #debugAt:; 			frame: (0@0.2 corner: 1@1).		windowSpec children add: listSpec.	] ifTrue:[		message := messageString.		textSpec := builder pluggableTextSpec new.		textSpec 			model: self;			getText: #preDebugMessageString; 			setText: nil; 			selection: nil; 			menu: #debugProceedMenu:;			frame: (0@0.2corner: 1@1).		windowSpec children add: textSpec.	].	^windowSpec! !!IndentingListItemMorph methodsFor: 'drawing' stamp: 'MAD 10/6/2009 19:40'!drawOn: aCanvas		| tRect sRect columnRect columnScanner columnData columnLeft  |		tRect := self toggleRectangle.		sRect := bounds withLeft: tRect right + 4.	self drawToggleOn: aCanvas in: tRect.	icon isNil ifFalse:[		aCanvas			translucentImage: icon				at: sRect left @ (self top + (self height - icon height // 2)).			sRect := sRect left: sRect left + icon width + 2.	].	(container columns isNil or: [(contents asString indexOf: Character tab) = 0]) ifTrue: [		sRect := sRect top: sRect top + sRect bottom - self fontToUse height // 2.		aCanvas drawString: contents asString in: sRect font: self fontToUse color: color.		] ifFalse: [		columnLeft := sRect left.		columnScanner := ReadStream on: contents asString.		container columns do: [ :width |			columnRect := columnLeft @ sRect top extent: width @ sRect height.			columnData := columnScanner upTo: Character tab.			columnData isEmpty ifFalse: [				aCanvas drawString: columnData in: columnRect font: self fontToUse color: color.			].			columnLeft := columnRect right + 5.		].	]! !