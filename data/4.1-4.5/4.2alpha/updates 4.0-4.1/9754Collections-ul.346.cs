"Change Set:		9754Collections-ul.346Collections-ul.346:- added #sorted protocol to collections- added two helpful comments to discourage the use of #asSortedCollection*Collections-ul.344:- deprecated SequenceableCollection >> #reverse, so it can become an in-place reverse method in the future"!!Collection methodsFor: 'converting' stamp: 'ul 3/22/2010 17:26'!asSortedCollection	"Answer a SortedCollection whose elements are the elements of the 	receiver. The sort order is the default less than or equal. 	Use #sorted: if you don't really need a SortedCollection, but a sorted collection!!"		^self as: SortedCollection! !!OrderedCollection methodsFor: 'sorting' stamp: 'ul 3/22/2010 12:16'!sorted: aSortBlockOrNil	"Return a new sequenceable collection which contains the same elements as self but its elements are sorted by aSortBlockOrNil. The block should take two arguments and return true if the first element should preceed the second one. If aSortBlock is nil then <= is used for comparison."		^self copy sort: aSortBlockOrNil! !!Collection methodsFor: 'converting' stamp: 'ul 3/22/2010 17:26'!asSortedCollection: aSortBlock 	"Answer a SortedCollection whose elements are the elements of the 	receiver. The sort order is defined by the argument, aSortBlock.	Use #sorted: if you don't really need a SortedCollection, but a sorted collection!!"	| aSortedCollection |	aSortedCollection := SortedCollection new: self size.	aSortedCollection sortBlock: aSortBlock.	aSortedCollection addAll: self.	^ aSortedCollection! !!Collection methodsFor: 'sorting' stamp: 'ul 3/22/2010 12:13'!sorted: aSortBlockOrNil	"Return a new sequenceable collection which contains the same elements as self but its elements are sorted by aSortBlockOrNil. The block should take two arguments and return true if the first element should preceed the second one. If aSortBlock is nil then <= is used for comparison."	^self asArray sort: aSortBlockOrNil! !!Collection methodsFor: 'sorting' stamp: 'ul 3/22/2010 12:16'!sorted	"Return a new sequenceable collection which contains the same elements as self but its elements are sorted in ascending order using the #'<=' operator."	^self sorted: nil! !!Array methodsFor: 'sorting' stamp: 'ul 3/22/2010 12:16'!sorted: aSortBlockOrNil	"Return a new sequenceable collection which contains the same elements as self but its elements are sorted by aSortBlockOrNil. The block should take two arguments and return true if the first element should preceed the second one. If aSortBlock is nil then <= is used for comparison."		^self copy sort: aSortBlockOrNil! !!SequenceableCollection methodsFor: 'converting' stamp: 'ul 3/21/2010 17:45'!reverse	"This method will be the in place version sometime"		self deprecated: 'Use #reversed'.	^self reversed! !