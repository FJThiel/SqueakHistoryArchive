"Change Set:		7312EToys-ar.29EToys-ar.29:Closure compiler, main part."!!TileMessageNode methodsFor: 'printing' stamp: 'eem 6/2/2008 11:47'!printWithClosureAnalysisReceiver: rcvr on: aMorph indent: level						"I don't think we need this to do anything since we already printed the receiver ourself"! !!TileMessageNode methodsFor: 'printing' stamp: 'eem 6/2/2008 11:47'!printWithClosureAnalysisWhileOn: aMorph indent: level	(arguments first isJust: NodeNil) ifTrue: [		selector := SelectorNode new			key: (selector key == #whileTrue:				ifTrue: [#whileTrue] ifFalse: [#whileFalse])			code: #macro.		arguments := Array new	].	self printWithClosureAnalysisKeywords: selector key arguments: arguments		on: aMorph indent: level! !!TileMessageNode methodsFor: 'printing' stamp: 'eem 6/2/2008 11:47'!printWithClosureAnalysisIfOn: aStream indent: level "Just copied the old MessageNode one down here."	(arguments last isJust: NodeNil)		ifTrue: [^self				printWithClosureAnalysisKeywords: #ifTrue:				arguments: (Array with: arguments first)				on: aStream				indent: level].	(arguments last isJust: NodeFalse)		ifTrue: [^self				printWithClosureAnalysisKeywords: #and:				arguments: (Array with: arguments first)				on: aStream				indent: level].	(arguments first isJust: NodeNil)		ifTrue: [^self				printWithClosureAnalysisKeywords: #ifFalse:				arguments: (Array with: arguments last)				on: aStream				indent: level].	(arguments first isJust: NodeTrue)		ifTrue: [^self				printWithClosureAnalysisKeywords: #or:				arguments: (Array with: arguments last)				on: aStream				indent: level].	self		printWithClosureAnalysisKeywords: #ifTrue:ifFalse:		arguments: arguments		on: aStream		indent: level! !!TileMessageNode methodsFor: 'printing' stamp: 'eem 6/2/2008 11:47'!printWithClosureAnalysisToDoOn: aMorph indent: level 	| limitNode |	limitNode := (arguments last isNil 				or: [(arguments last isMemberOf: AssignmentNode) not]) 					ifTrue: [arguments first]					ifFalse: [arguments last value].	(selector key = #to:by:do: 		and: [arguments second isConstantNumber and: [arguments second key == 1]]) 			ifTrue: 				[self 					printWithClosureAnalysisKeywords: #to:do:					arguments: (Array with: limitNode with: (arguments third))					on: aMorph					indent: level]			ifFalse: 				[self 					printWithClosureAnalysisKeywords: selector key					arguments: (Array with: limitNode) , arguments allButFirst					on: aMorph					indent: level]! !ParseNode removeSelector: #asMorphicSyntaxIn:!ParseNode removeSelector: #addCommentToMorph:!CascadeNode removeSelector: #asMorphicSyntaxIn:!BlockNode removeSelector: #asMorphicSyntaxIn:!BraceNode removeSelector: #asMorphicSyntaxIn:!ParseNode removeSelector: #currentValueIn:!LiteralNode removeSelector: #asMorphicSyntaxIn:!AssignmentNode removeSelector: #asMorphicSyntaxIn:!MessageNode removeSelector: #asMorphicSyntaxIn:!TempVariableNode removeSelector: #asMorphicSyntaxIn:!MessageSend removeSelector: #stringFor:!MethodNode removeSelector: #asMorphicSyntaxIn:!ReturnNode removeSelector: #asMorphicSyntaxIn:!VariableNode removeSelector: #asMorphicSyntaxIn:!VariableNode removeSelector: #variableGetterBlockIn:!VariableNode removeSelector: #currentValueIn:!BlockNode removeSelector: #asMorphicCollectSyntaxIn:!MethodNode removeSelector: #asMorphicSyntaxUsing:!