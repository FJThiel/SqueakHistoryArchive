"Change Set:		7663CollectionsTests-ar.91CollectionsTests-ar.91:Tests for String>>asDecomposedUnicode and String>>asPrecomposedUnicode."!!StringTest methodsFor: 'tests - converting' stamp: 'ar 8/27/2009 20:36'!testAsPrecomposedUnicode	"Test the behavior of #asPrecomposedUnicode"	| composed decomposed |	"Tests single character"	composed := String with: (Character value: 353).	decomposed := String with: (Character value: 115) with: (Character value: 780).	self assert: decomposed asPrecomposedUnicode = composed.	"Test character at end of text"	composed := 'Hello', (String with: (Character value: 353)).	decomposed := 'Hello', (String with: (Character value: 115) with: (Character value: 780)).	self assert: decomposed asPrecomposedUnicode = composed.	"Test character in the midst of text"	composed := 'Hello', (String with: (Character value: 353)), 'World'.	decomposed := 'Hello', (String with: (Character value: 115) with: (Character value: 780)), 'World'.	self assert: decomposed asPrecomposedUnicode = composed.	"Test character in the end of text"	composed := (String with: (Character value: 353)), 'World'.	decomposed := (String with: (Character value: 115) with: (Character value: 780)), 'World'.	self assert: decomposed asPrecomposedUnicode = composed.	"Test string full of characters"	"Test character in the end of text"	composed := (String with: (Character value: 353)).	decomposed := (String with: (Character value: 115) with: (Character value: 780)).	self assert: (decomposed, decomposed, decomposed) asPrecomposedUnicode = (composed, composed, composed).! !!StringTest methodsFor: 'tests - converting' stamp: 'ar 8/27/2009 20:43'!testAsDecomposedUnicode	"Test the behavior of #asDecomposedUnicode"	| composed decomposed |	"Tests single character"	composed := String with: (Character value: 353).	decomposed := String with: (Character value: 115) with: (Character value: 780).	self assert: composed asDecomposedUnicode = decomposed.	"Test character at end of text"	composed := 'Hello', (String with: (Character value: 353)).	decomposed := 'Hello', (String with: (Character value: 115) with: (Character value: 780)).	self assert: composed asDecomposedUnicode = decomposed.	"Test character in the midst of text"	composed := 'Hello', (String with: (Character value: 353)), 'World'.	decomposed := 'Hello', (String with: (Character value: 115) with: (Character value: 780)), 'World'.	self assert: composed asDecomposedUnicode = decomposed.	"Test character in the end of text"	composed := (String with: (Character value: 353)), 'World'.	decomposed := (String with: (Character value: 115) with: (Character value: 780)), 'World'.	self assert: composed asDecomposedUnicode = decomposed.	"Test string full of characters"	"Test character in the end of text"	composed := (String with: (Character value: 353)).	decomposed := (String with: (Character value: 115) with: (Character value: 780)).	self assert: (composed, composed, composed) asDecomposedUnicode = (decomposed, decomposed, decomposed).! !