"Change Set:		7551Kernel-ar.217Kernel-ar.217:Styling hooks:- Add ParagraphEditor>>blinkParen and fix issue in ParagraphEditor>>clearParens for syntax highlighting compatibility.Kernel-mha.213:implemented isMethodContext to avoid an error in MethodContextTestKernel-mha.214:fixed problem in MethodProperties>>#analogousCodeTo: that would cause an error in TraitTestKernel-mha.215:removed obsolete method from CompiledMethodKernel-ar.216:Another round of reducing MVC/Morphic dependencies:- Introduce the #isWindowForModel: protocol which avoids the use of patterns like '(d isKindOf: SystemWindow orOf: StandardSystemView) and:[d model == self]'- Simply Object>>currentWorld to neither look at MVC embedded worlds nor create new MVC-based morphic worlds"!!ParagraphEditor methodsFor: 'parenblinking' stamp: 'ar 8/18/2009 00:18'!blinkParen	"Highlight the last parenthesis in the text"	lastParentLocation ifNotNil:		[self text string size >= lastParentLocation ifTrue: [			self text				addAttribute: TextEmphasis bold				from: lastParentLocation				to: lastParentLocation]]! !!Object methodsFor: 'macpal' stamp: 'ar 8/15/2009 15:20'!currentWorld	"Answer a morphic world that is the current UI focus."	^ActiveWorld ifNil:[World]! !!Object methodsFor: 'testing' stamp: 'mha 8/10/2009 08:52'!isMethodContext	^ false! !!MethodContext methodsFor: 'testing' stamp: 'mha 8/10/2009 08:53'!isMethodContext	^ true! !!ParagraphEditor methodsFor: 'parenblinking' stamp: 'ar 8/18/2009 00:18'!clearParens	lastParentLocation ifNotNil:		[self text string size >= lastParentLocation ifTrue: [			self text				removeAttribute: TextEmphasis bold				from: lastParentLocation				to: lastParentLocation]].	lastParentLocation := nil.! !!Model methodsFor: 'dependents' stamp: 'ar 8/15/2009 15:06'!containingWindow	"Answer the window that holds the receiver.  The dependents technique is odious and may not be airtight, if multiple windows have the same model."	^ self dependents detect:		[:d | d isWindowForModel: self] ifNone: [nil]! !!MethodProperties methodsFor: 'testing' stamp: 'mha 8/11/2009 09:04'!analogousCodeTo: aMethodProperties	pragmas		ifNil: [aMethodProperties pragmas notEmpty ifTrue: [^false]]		ifNotNil:			[aMethodProperties pragmas isEmpty ifTrue: [^false].			 pragmas size ~= aMethodProperties pragmas size ifTrue:				[^false].			 pragmas with: aMethodProperties pragmas do:				[:mine :others|				(mine analogousCodeTo: others) ifFalse: [^false]]].	^(self hasAtLeastTheSamePropertiesAs: aMethodProperties)	  and: [aMethodProperties hasAtLeastTheSamePropertiesAs: self]! !!Object methodsFor: 'testing' stamp: 'ar 8/15/2009 15:05'!isWindowForModel: aModel	"Return true if the receiver acts as the window for the given model"	^false! !!Model methodsFor: 'dependents' stamp: 'ar 8/15/2009 15:09'!topView	"Find the first top view on me. Is there any danger of their being two with the same model?  Any danger from ungarbage collected old views?  Ask if schedulled?"	dependents ifNil: [^nil].	dependents do: [:d| (d isWindowForModel: self) ifTrue:[^d]].	^nil! !CompiledMethod removeSelector: #createBlock:!