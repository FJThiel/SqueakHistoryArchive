'From MinimalMorphic of 8 December 2006 [latest update: #7246] on 19 October 2009 at 5:35:11 am'!Object subclass: #MCConfiguration	instanceVariableNames: 'name dependencies repositories log '	classVariableNames: 'DefaultLog LogToFile '	poolDictionaries: ''	category: 'MonticelloConfigurations'!!MCConfiguration methodsFor: 'accessing' stamp: 'ar 9/19/2009 11:50'!log	"Answer the receiver's log. If no log exist use the default log"	log ifNil: [		(name notNil and:[self class logToFile]) ifFalse:[^Transcript].		self log: (FileStream fileNamed: self name, '.log').	].	^log! !!MCConfiguration methodsFor: 'private' stamp: 'edc 8/27/2009 07:28'!depsSatisfying: selectBlock versionDo: verBlock displayingProgress: progressString 	| repoMap count packagesInThis existe |	repoMap := Dictionary new.	packagesInThis := #('39Deprecated' 'Balloon' 'Collections' 'Compiler' 'Compression' 'Exceptions' 'Files' 'Graphics' 'Kernel' 'Monticello' 'MonticelloConfigurations' 'Morphic' 'MorphicExtras' 'Multilingual' 'Network'  'PreferenceBrowser' 'Protocols' 'ReleaseBuilder' 'ST80' 'Services' 'Sound' 'System' 'ToolBuilder' 'Tools' 'TrueType' 'VersionNumber').	self repositories		do: [:repo | 			MCRepositoryGroup default addRepository: repo.			repo allVersionNames				ifEmpty: [self logWarning: 'cannot read from ' , repo description]				ifNotEmptyDo: [:all | all						do: [:ver | repoMap at: ver put: repo]]].	count := 0.	self dependencies		do: [:dep | 			| ver repo | 			existe := packagesInThis includes: dep package name.			existe				ifTrue: [ver := dep versionInfo name.					repo := repoMap								at: ver								ifAbsent: [self logError: 'Version ' , ver , ' not found in any repository'.									self logError: 'Aborting'.									^ count].					(selectBlock value: dep)						ifTrue: [| new | 							new := self										versionNamed: ver										for: dep										from: repo.							new								ifNil: [self logError: 'Could not download version ' , ver , ' from ' , repo description.									self logError: 'Aborting'.									^ count]								ifNotNil: [self logUpdate: dep package with: new.									ProgressNotification signal: '' extra: 'Installing ' , ver.									verBlock value: new.									count := count + 1]].					dep package workingCopy repositoryGroup addRepository: repo]				ifFalse: [self logWarning: 'NOT LOADING ' , dep package name printString]]		displayingProgress: progressString.	^ count! !!MCConfiguration class methodsFor: 'preferences' stamp: 'ar 8/21/2009 21:18'!logToFile	"Whether to log configuration info to files by default.	If true, logs to a file named after the configuration (config.nn.log).	If false, logs to the transcript."	<preference: 'Log config info to disk' 		category: 'Monticello' 		description: 'If true, configuration information (such as change logs) are logged to disk instead of the Transcript. The log file is named after the configuration map (config.nn.log)' 		type: #Boolean>	^LogToFile ifNil:[true].! !!MCPackageLoader methodsFor: 'private' stamp: 'edc 10/19/2009 05:32'!useChangeSetNamed: baseName during: aBlock 	"Use the named change set, or create one with the given name."	| changeHolder oldChanges newChanges csName |	changeHolder := (ChangeSet respondsTo: #newChanges:)				ifTrue: [ChangeSet]				ifFalse: [Smalltalk].	oldChanges := (ChangeSet respondsTo: #current)				ifTrue: [ChangeSet current]				ifFalse: [Smalltalk changes].	self class changeHighestUpdate		ifTrue: [csName := (SystemVersion current highestUpdate + 1) asString , baseName.			newChanges := (ChangesOrganizer changeSetNamed: csName)						ifNil: [ChangeSet new name: csName].			changeHolder newChanges: newChanges.			[aBlock value]				ensure: [changeHolder newChanges: oldChanges].			SystemVersion current registerUpdate: SystemVersion current highestUpdate + 1]		ifFalse: [newChanges := (ChangesOrganizer changeSetNamed: baseName)						ifNil: [ChangeSet new name: baseName].			changeHolder newChanges: newChanges.			newChanges fileOut.			[aBlock value]				ensure: [changeHolder newChanges: oldChanges]].	! !Object subclass: #MCConfiguration	instanceVariableNames: 'name dependencies repositories log'	classVariableNames: 'DefaultLog LogToFile'	poolDictionaries: ''	category: 'MonticelloConfigurations'!