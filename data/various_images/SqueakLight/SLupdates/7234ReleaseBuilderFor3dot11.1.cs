'From SqueakLight|II of 31 May 2008 [latest update: #7232] on 11 August 2009 at 9:22:28 am'!"Change Set:		7233ReleaseBuilderFor3dot11Date:			11 August 2009Author:			Edgar J. De CleeneChanges for try to synch with trunk"!!MCConfiguration methodsFor: 'accessing' stamp: 'edc 8/11/2009 09:12'!log	^log		ifNil: [self				log: (FileStream fileNamed: self name)]		ifNotNil: [^ log]! !!MCConfiguration methodsFor: 'private' stamp: 'edc 8/5/2009 16:42'!depsSatisfying: selectBlock versionDo: verBlock displayingProgress: progressString	| repoMap count packagesInThis existe |	repoMap := Dictionary new.	packagesInThis := MCWorkingCopyBrowser new workingCopies collect: [:wc| wc package name].	self repositories do: [:repo |		MCRepositoryGroup default addRepository: repo.		repo allVersionNames			ifEmpty: [self logWarning: 'cannot read from ', repo description]			ifNotEmptyDo: [:all | all do: [:ver | repoMap at: ver put: repo]]].	count := 0.	self dependencies do: [:dep | 		| ver repo |		existe := packagesInThis includes: dep package name.		existe ifFalse: [self logWarning:		'NOT LOADING ', dep package name printString] ifTrue:[						ver := dep versionInfo name.		repo := repoMap at: ver ifAbsent: [			self logError: 'Version ', ver, ' not found in any repository'.			self logError: 'Aborting'.			^count].		(selectBlock value: dep) ifTrue: [			| new |			new := self versionNamed: ver for: dep from: repo.			new ifNil: [					self logError: 'Could not download version ', ver, ' from ', repo description.					self logError: 'Aborting'.					^count]				ifNotNil: [					self logUpdate: dep package with: new.					ProgressNotification signal: '' extra: 'Installing ', ver.					verBlock value: new.					count := count + 1.				]		].		dep package workingCopy repositoryGroup addRepository: repo.	]] displayingProgress: progressString.	^count! !!ReleaseBuilderFor3dot11 methodsFor: 'cleaning' stamp: 'edc 7/22/2009 10:55'!cleanupPhaseFinal" ReleaseBuilderFor3dot11 new cleanupPhaseFinal "| tasks |    tasks := OrderedCollection new                        add: [Smalltalk removeEmptyMessageCategories];                add: [Workspace                        allSubInstancesDo: [:each | each setBindings: Dictionary new]];                add: [Undeclared removeUnreferencedKeys];                add: [Categorizer removeAllEmptyCategories;sortAllCategories];                add: [Symbol compactSymbolTable];	add: [#(#TheWorldMenu #FileServices #AppRegistry #Preferences #FileList )		do: [:cl | (Smalltalk at: cl) removeObsolete]]; add:[Flaps freshFlapsStart]; add:[MCFileBasedRepository flushAllCaches];                 add: [PackageOrganizer default unregisterPackageNamed: 'FlexibleVocabularies'.Command zapObsolete.HandMorph releaseCachedState;	initForEvents.self fixObsoleteReferences];                add: [Smalltalk forgetDoIts.	DataStream initialize.	Behavior flushObsoleteSubclasses.	"The pointer to currentMethod is not realy needed (anybody care to fix this) and often holds on to obsolete bindings"	MethodChangeRecord allInstancesDo: [:each | each noteNewMethod: nil].Smalltalk garbageCollectMost];                 yourself.Utilities        informUserDuring: [:bar | tasks                do: [:block |                    bar value: block printString.                    [block value]                        on: Error                        do: [:error | Transcript show: error;                                 cr]]]. SystemNavigation default obsoleteClasses isEmpty        ifTrue: [SmalltalkImage current saveSession]        ifFalse: [SystemNavigation default obsoleteClasses                do: [:each | [PointerFinder on: each]                        on: Error                        do: [:error | Transcript show: error; cr]]].                        self cleanUnwantedCs! !!ReleaseBuilderFor3dot11 methodsFor: 'cleaning' stamp: 'edc 7/22/2009 10:26'!cleanupPhasePrepareself cleanUnwantedCs.                "SMSqueakMap default clearCaches."" Commented out for no Undeclared on image "#(zapMVCprojects zapAllOtherProjects discardFlash discardFFIcomputeImageSegmentation discardSpeech ) do:[:ea| SystemDictionary removeSelector:ea].#( reserveUrl: saveAsResource saveDocPane saveOnURL saveOnURL:saveOnURLbasic isTurtleRow objectViewed inATwoWayScrollPane) do:[:ea| Morph removeSelector: ea].#(playfieldOptionsMenu presentPlayfieldMenu allScriptEditorsattemptCleanupReporting: modernizeBJProjectscriptorForTextualScript:ofPlayer:) do:[:ea| PasteUpMorph removeSelector:   ea].#(isUniversalTiles noteDeletionOf:fromWorld: scriptorsForSelector:inWorld: tilesToCall: handMeTilesToFire) do:[:ea| Player removeSelector:   ea].Player class removeCategory: 'turtles'.Player removeCategory: 'slots-user'.Morph class organization classify: #isTileScriptingElement under: '*Unload-scripting'.Morph class organization classify: #partName:categories:documentation:sampleImageForm: under: '*Unload-eToys-new-morph participation'.Morph removeCategory: 'scripting'.ColorType removeCategory: 'tiles'.TheWorldMainDockingBar removeSelector: #hideAllViewersIn: .#(test1 test2) do:[:ea|WorldWindow class removeSelector:   ea].SystemOrganization removeCategoriesMatching: 'UserObjects'.FileList2 class organization classify: #morphicViewOnDirectory: under: 'morphic ui'.FileList2 class organization classify: #morphicView under: 'morphic ui'.SystemOrganization classifyAll: #(AbstractMediaEventMorph ColorSwatch) under: 'MorphicExtras-AdditionalSupport'.! !!ReleaseBuilderFor3dot11 methodsFor: 'squeakThreeEleven' stamp: 'edc 7/16/2009 17:27'!makeSqueakThreeTenEleven	"ReleaseBuilderFor3dot11 new makeSqueakThreeTenEleven"	Transcript open.	self cleanupPhasePrepare;getRidOfUnwantedMorphs	"prepareforUnloadBookMorphandFriends;"	;prepareforUnloadEtoys;	prepareforUnloadNebraska	;groupingTests;	unloadSomeMore;unloadSomeMore3;cleanupPhaseFinal;createBackgroundColor.	World removeAllMorphs.! !!ReleaseBuilderFor3dot11 methodsFor: 'unloadPackages' stamp: 'edc 2/5/2008 07:56'!groupingTests" this is how I build Tests-edc.35 for unload "| classList |classList := OrderedCollection new.	#(TestCase TestResource) do: [:cl|  (Smalltalk at:  cl)		allSubclassesWithLevelDo: [:c :i | classList addFirst: c]		startingLevel: 0].						 	Smalltalk organization addCategory: 'Tests-Others'.	 classList select: [:ea| ((ea basicCategory asString) match: '*Test*') not] thenDo: [:any|  SystemOrganization classify: any name under: 'Tests-Others'].! !!ReleaseBuilderFor3dot11 methodsFor: 'unloadPackages' stamp: 'edc 7/16/2009 19:48'!prepareforUnloadEtoysSmalltalk removeClassNamed: #FlexibleVocabulariesInfo.Smalltalk removeClassNamed: #ColorSwatch.SystemOrganization classifyAll: #(ActorState MethodMorph Player Presenter StickySketchMorph UnscriptedPlayer SlotInformation UnscriptedCardPlayer) under: 'MorphicExtras-EToys-Scripting'.#( actorState actorState: isPartsDonor isPartsDonor: player player:) do: [:method|MorphExtension organization classify: method under: '*MorphicExtras-accessing' suppressIfDefault: false].HaloMorph organization classify: #doMakeSiblingOrDup:with: under: 'Old Etoys-handles'.HaloMorph organization classify: #doDupOrMakeSibling:with: under: 'Old Etoys-handles'."self loadTogether: #('Morphic-CandidatesForGo-edc.3.mcz' ) merge: false."SystemOrganization classifyAll: #(ScriptEditorMorph TwoWayScrollPane TabSorterMorph) under:'Morphic-CandidatesForGo'.#('*eToys-queries' '*eToys-eToy vocabularies' '*eToys-color' '*eToys-customevents-custom events' '*eToys-type vocabularies') do:[:ea| Vocabulary class removeCategory: ea].#('*flexibleVocabularies-flexiblevocabularies-scripting' '*flexibleVocabularies-flexibleVocabularies' '*eToys-scripting' '*eToys-new-morph participation' '*eToys-customevents-user events') do:[:ea|Morph class removeCategory:  ea].#(nascentUserScriptInstance userScriptForPlayer: selector:  ) do:[:ea|Player class removeSelector:  ea].Smalltalk removeClassNamed: #FlexibleVocabulariesInfo.Preferences removePreference: #allowEtoyUserCustomEvents. Morph organization classify: #partName:categories:documentation:sampleImageForm: under: '*MorphicExtras-new-morph participation'.#(possiblyReplaceEToyFlaps twiddleSuppliesButtonsIn:) do: [:ea| Flaps class removeSelector:   ea].Flaps clobberFlapTabList.Flaps addStandardFlaps.SystemOrganization classifyAll: #(ComponentLikeModel) under: 'MorphicExtras-Components'! !!ReleaseBuilderFor3dot11 methodsFor: 'unloadPackages' stamp: 'edc 7/16/2009 19:49'!unloadSomeMore3"ReleaseBuilderFor3dot11 new unloadSomeMore3;cleanupPhaseFinal;cleanUnwantedCs "#('MorphicExtras-Demo'  'Morphic-CandidatesForGo' 'Nebraska' 'UserObjects')		do: [:ea | (MCPackage named: ea) unload].		SystemOrganization removeCategoriesMatching: 'EToys*'.		self fixObsoleteReferences! !!ReleaseBuilderFor3dot11 methodsFor: 'sources managment' stamp: 'edc 2/12/2008 09:04'!createCompressedSources" ReleaseBuilderFor3dot11 new createCompressedSources"| unzipped nameToUse zipped buffer dir |ProtoObject allSubclassesWithLevelDo:[:cl :l| 	dir := self createDirIfnotExists:cl category.			Cursor write showWhile: [nameToUse :=  cl printString .		(dir fileExists: nameToUse) ifFalse:[			unzipped :=RWBinaryOrTextStream on: ''.			unzipped header; timeStamp.	 cl  fileOutOn: unzipped moveSource: false toFile: 0.	unzipped trailer.				unzipped reset.			zipped := dir newFileNamed: (nameToUse, FileDirectory dot, ImageSegment compressedFileExtension).	zipped binary.	zipped := GZipWriteStream on: zipped.	buffer := ByteArray new: 50000.	'Compressing ', nameToUse displayProgressAt: Sensor cursorPoint		from: 0 to: unzipped size		during:[:bar|			[unzipped atEnd] whileFalse:[				bar value: unzipped position.				zipped nextPutAll: (unzipped nextInto: buffer)].			zipped close.			unzipped close]]]] startingLevel: 0! !!ReleaseBuilderFor3dot11 methodsFor: 'sources managment' stamp: 'edc 2/12/2008 07:43'!createDirIfnotExists: aDirName(FileDirectory default directoryExists:aDirName)		ifFalse: [FileDirectory default createDirectory: aDirName].	^FileDirectory default directoryNamed: aDirName! !!ReleaseBuilderFor3dot11 methodsFor: 'updates' stamp: 'edc 7/22/2009 10:22'!installtrunk" ReleaseBuilderFor3dot11 new installtrunk"	MCWorkingCopy allManagers		do: [:each | each repositoryGroup addRepository: (MCHttpRepository new location: 'http://source.squeakfoundation.org/trunk';					 user: 'squeak';					 password: 'squeak')]! !!ReleaseBuilderFor3dot11 methodsFor: 'updates' stamp: 'edc 7/15/2009 16:45'!loadLastVersion: aListOfPackageNames 	| mcw montiNames package version |	mcw := MCWorkingCopyBrowser new				repository: (MCHttpRepository						location: 'http://source.squeakfoundation.org/trunk'						user: ''						password: '').	mcw repository		ifNotNilDo: [:repos | montiNames := repos readableFileNames].	aListOfPackageNames		do: [:mo | 			package := montiNames						detect: [:ea | (ea findTokens: '-' ) first = mo]						ifNone: [].			package				ifNotNil: [version := mcw repository loadVersionFromFileNamed: package.					version load]].	^ version! !!ReleaseBuilderFor3dot11 methodsFor: 'updates' stamp: 'edc 7/16/2009 17:38'!repository	repository isNil		ifTrue: [repository := MCHttpRepository						location: 'http://source.squeak.org/trunk'						user: ''						password: ''].	^ repository! !