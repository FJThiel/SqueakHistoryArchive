'From SqueakLight|II of 31 May 2008 [latest update: #7198] on 27 August 2008 at 9:21:12 am'!UGlobalInstaller class	instanceVariableNames: 'unwantedPackages '!!CodeLoader methodsFor: 'installing' stamp: 'edc 6/28/2008 09:47'!installSourceFiles| packName pos |	"Install the previously loaded source files"	sourceFiles == nil		ifTrue: [^ self].	sourceFiles		do: [:req | (req url endsWith: '.mcz')				ifTrue: [					pos := req url lastPositionOf: $/.					packName := req url copyFrom: pos + 1 to: req url size.					self tryVersion: packName ].				(req url endsWith: '.sar')				ifTrue: [ SARInstaller new fileInFrom: req contentStream].				(req url endsWith: '.cs') |(req url endsWith: 'st')				ifTrue: [self installSourceFile: req contentStream]].	sourceFiles := nil! !!CodeLoader class methodsFor: 'accessing' stamp: 'edc 8/16/2008 17:34'!tryHttpURL: aHttpURL| loader pos baseUrl packName wName mcc  lista |loader := self new.pos := aHttpURL printString lastPositionOf: $/.	baseUrl := aHttpURL printString  copyFrom: 1 to: pos.	loader baseURL: baseUrl.	packName :=  aHttpURL printString  copyFrom: pos + 1 to: aHttpURL printString size.Transcript show: packName;cr.wName :=  packName copyUpToLast: $..(UGlobalInstaller unwantedPackages includes: wName) ifTrue:[Transcript show: 'Avoid loading';cr.	^self].mcc := MCWorkingCopyBrowser new.mcc  repository: MCCacheRepository default.lista := mcc workingCopies select:		[:wc |		 wc ancestors notEmpty] thenCollect: [:ea| ea ancestry ancestors first  name].(lista includes: wName) ifTrue:[Transcript show: 'Was loaded';cr.	^self].	loader loadSourceFiles: (Array with: packName).		(packName endsWith: '.sar') ifTrue:[^loader installSourceFiles].	loader tryVersion: packName! !!UCodeLoader class methodsFor: 'as yet unclassified' stamp: 'edc 8/27/2008 07:44'!foundMe: aString | pos v |^UCodeLoader knowPackages detect: [:ea| pos := ea url fullPath lastPositionOf: $/.	v := ea url fullPath  copyFrom: pos + 1 to: ea url fullPath size.	v = aString] ifNone: [self guess: aString].! !!UCodeLoader class methodsFor: 'as yet unclassified' stamp: 'edc 8/27/2008 09:11'!guess: aString| found pos v g xxx |g := aString copyUpTo: $..g := g,'*'.found := UCodeLoader knowPackages detect: [:ea| 	pos := ea url fullPath lastPositionOf: $/.	v := ea url fullPath  copyFrom: pos + 1 to: ea url fullPath size.	g match: v.	] ifNone: [].xxx := found url printString.pos := xxx lastPositionOf: $/.xxx := xxx copyFrom: 1 to: pos.xxx := xxx , aString.found  guessedUrl: xxx.^ found! !!UGlobalInstaller class methodsFor: 'accessing' stamp: 'edc 8/16/2008 17:28'!unwantedPackages^ unwantedPackages! !!UGlobalInstaller class methodsFor: 'accessing' stamp: 'edc 8/16/2008 17:28'!unwantedPackages: aPackagesListunwantedPackages := aPackagesList! !!UPackage methodsFor: 'accessing' stamp: 'edc 8/27/2008 09:11'!guessedUrl: aString	"The location of the package to install.  If it is nil, then the package is virtual and only has meaning for its dependencies."	url := Url absoluteFromText: aString! !UGlobalInstaller class	instanceVariableNames: 'unwantedPackages'!