'From SqueakLight|II of 31 May 2008 [latest update: #7198] on 27 August 2008 at 6:49:44 pm'!!Object methodsFor: 'error handling' stamp: 'edc 7/31/2008 06:39'!dpsTraceUntilRoot: anObject	| reportString context count |		Transcript open.		reportString := (anObject respondsTo: #asString) 			ifTrue: [anObject asString] ifFalse: [anObject printString].	(Smalltalk at: #Decompiler ifAbsent: [nil]) 	ifNil: 		[Transcript cr; show: reportString]	ifNotNil:		[context := thisContext.		count := 1.		[Transcript cr.			Transcript show: count printString, ': '.						reportString notNil			ifTrue:				[Transcript show: context home class name 			, '/' , context sender selector,  ' (' , reportString , ')'.				context := context sender.				reportString := nil]			ifFalse:				[(context notNil and: [(context := context sender) notNil])				ifTrue: [Transcript show: context receiver class name , '/' , context selector.					count := count + 1]].	context sender notNil]whileTrue]! !