'From SqueakLight|II of 31 May 2008 [latest update: #7068] on 9 June 2008 at 8:42:45 am'!!RecentMessageSet methodsFor: 'update' stamp: 'kph 4/13/2007 05:43'!updateListsAndCodeIn: aWindow 	self canDiscardEdits ifFalse: [^ self].  	(messageList first = Utilities mostRecentlySubmittedMessage)		ifFalse:			[self reformulateList]		ifTrue:			[self updateCodePaneIfNeeded]! !!SelectorBrowser methodsFor: 'as yet unclassified' stamp: 'kph 4/13/2007 05:17'!markMatchingClasses	"If an example is used, mark classes matching the example instance with an asterisk."	| unmarkedClassList firstPartOfSelector receiverString receiver |	self flag: #mref.	"allows for old-fashioned style"	"Only 'example' queries can be marked."	(contents asString includes: $.) ifFalse: [^ self].	unmarkedClassList := classList copy.	"Get the receiver object of the selected statement in the message list."	firstPartOfSelector := (Scanner new scanTokens: (selectorList at: selectorIndex)) second.	receiverString := (ReadStream on: (selectorList at: selectorIndex))						upToAll: firstPartOfSelector.	receiver := Compiler evaluate: receiverString.	unmarkedClassList do: [ :classAndMethod | | class |		(classAndMethod isKindOf: MethodReference) ifTrue: [			(receiver isKindOf: classAndMethod actualClass) ifTrue: [				classAndMethod stringVersion: '*', classAndMethod asStringOrText.			]		] ifFalse: [			class := Compiler evaluate:					((ReadStream on: classAndMethod) upToAll: firstPartOfSelector).			(receiver isKindOf: class) ifTrue: [				classList add: '*', classAndMethod.				classList remove: classAndMethod			]		].	].! !!Transcripter methodsFor: 'command line' stamp: 'kph 4/13/2007 05:25'!readEvalPrint	| line okToRevert |	okToRevert _ true.	[#('quit' 'exit' 'done' ) includes: (line _ self request: '>')]		whileFalse:		[line = 'revert'		ifTrue: [okToRevert			ifTrue: [Utilities revertLastMethodSubmission.					self cr; show: 'reverted: ' , Utilities mostRecentlySubmittedMessage asStringOrText.					okToRevert _ false]			ifFalse: [self cr; show: 'Only one level of revert currently supported']]		ifFalse: [self cr; show: ([Compiler evaluate: line] ifError: [:err :ex | err])]]! !!Utilities class methodsFor: 'recent method submissions' stamp: 'kph 4/13/2007 05:28'!mostRecentlySubmittedMessage	"Answer a MethodReference indicating the most recently submitted method that is still extant"	self flag: #mref.	"fix for faster references to methods"	self assureMostRecentSubmissionExists.	^ RecentSubmissions last! !