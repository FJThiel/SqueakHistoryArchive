'From MinimalMorphic of 8 December 2006 [latest update: #7252] on 13 December 2009 at 8:44:11 am'!!EncodedCharSet class methodsFor: 'class methods' stamp: 'edc 12/13/2009 08:38'!initialize	"	EncodedCharSet initialize	"	self		allSubclassesDo: [:each | each initialize].	EncodedCharSets := Array new: 256.	EncodedCharSets at: 0 + 1 put: Latin1Environment.	"EncodedCharSets at: 1 + 1 put: JISX0208.	EncodedCharSets at: 2 + 1 put: GB2312.	EncodedCharSets at: 3 + 1 put: KSX1001.	EncodedCharSets at: 4 + 1 put: JISX0208.	EncodedCharSets at: 5 + 1 put: JapaneseEnvironment.	EncodedCharSets at: 6 + 1 put: SimplifiedChineseEnvironment.	EncodedCharSets at: 7 + 1 put: KoreanEnvironment.	EncodedCharSets at: 8 + 1 put: GB2312.	EncodedCharSets at: 9+1 put: UnicodeTraditionalChinese.	EncodedCharSets at: 10+1 put: UnicodeVietnamese.	EncodedCharSets at: 12 + 1 put: KSX1001.	EncodedCharSets at: 13 + 1 put: GreekEnvironment.	EncodedCharSets at: 14 + 1 put: Latin2Environment."	EncodedCharSets at: 256 put: Unicode! !!SmalltalkImage methodsFor: 'image cleanup' stamp: 'edc 12/13/2009 08:34'!cleanup	"SmalltalkImage current cleanup"	| tasks |	Transcript open.	tasks := OrderedCollection new				add: [Smalltalk removeEmptyMessageCategories];								add: [Workspace						allSubInstancesDo: [:each | each setBindings: Dictionary new]];								add: [Undeclared removeUnreferencedKeys];								add: [Categorizer sortAllCategories];								add: [Symbol compactSymbolTable];								add: [#(#TheWorldMenu #FileServices #AppRegistry #Preferences #FileList )						do: [:cl | (Smalltalk at: cl) removeObsolete]];								add: [Flaps freshFlapsStart];								add: [MCFileBasedRepository flushAllCaches];								add: [HandMorph releaseCachedState; initForEvents.					self fixObsoleteReferences];								add: [Smalltalk forgetDoIts.					DataStream initialize.					Behavior flushObsoleteSubclasses.					"The pointer to currentMethod is not realy needed					(anybody care to fix this) and often holds on to					obsolete bindings"					MethodChangeRecord						allInstancesDo: [:each | each noteNewMethod: nil].					Smalltalk garbageCollectMost];				 yourself.	Utilities		informUserDuring: [:bar | tasks				do: [:block | 					bar value: block printString.					[block value]						on: Error						do: [:error | Transcript show: error;								 cr]]].	SystemNavigation default obsoleteClasses isEmpty		ifTrue: [SmalltalkImage current saveSession]		ifFalse: [SystemNavigation default obsoleteClasses				do: [:each | 					nil.					self halt.					[PointerFinder on: each]						on: Error						do: [:error | Transcript show: error;								 cr]]]! !!ZoomMorph reorganize!('as yet unclassified' zoomFromMorph:toMorph:andThen: zoomTo:)('initialization' defaultColor)('stepping and presenter' step)('testing' stepTime)!!GZipWriteStream class reorganize!('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-file list services' services)('*MinimalMorphicInitialization' initializeClass)('file list services' compressFile: fileReaderServicesForFile:suffix: serviceCompressFile)!!ZipWriteStream class reorganize!('accessing' baseDistance baseLength crcTable distanceCodes extraDistanceBits extraLengthBits matchLengthCodes maxDistanceCodes maxLiteralCodes)('class initialization' initialize initializeCrcTable)('crc' updateCrc:from:to:in:)('regression test' compressAndDecompress:using:stats: logProblem:for: printRegressionStats:from: regressionCompress:into:notifiying:stats: regressionDecompress:from:notifying:stats: regressionTest regressionTestFrom: regressionTestFrom:using:stats:)!!ZipWriteStream reorganize!('accessing' crc encodedStream forcedMethod)('deflating' deflateBlock:chainLength:goodMatch:)('dynamic blocks' dynamicBlockSizeFor:and:using:and: scanBitLength:repeatCount:into: scanBitLengths:into: sendBitLength:repeatCount:tree: sendBitLength:tree: sendBitLengthTree: sendCompressedBlock:with: sendDynamicBlock:literalTree:distanceTree:bitLengths: sendLiteralTree:distanceTree:using:bitLengths:)('encoding' encodeLiteral: encodeMatch:distance: flushBlock flushBlock: shouldFlush)('fixed blocks' fixedBlockSizeFor:and: sendFixedBlock)('initialize-release' close finish initialize initializeNewBlock on: release writeFooter writeHeader)('stored blocks' sendStoredBlock storedBlockSize)('private' moveContentsToFront updateCrc updateCrc:from:to:in:)!!ZipNewFileMember reorganize!('initialization' close from: initialize)('testing' usesFileNamed:)('private' readRawChunk:)('private-writing' rewindData)!!ZipDirectoryMember reorganize!('accessing' desiredCompressionMethod: localFileName:)('initialization' initialize)('testing' isDirectory usesFileNamed:)('private' asDirectory rewindData)!!ZipFileMember reorganize!('initialization' close initialize stream:externalFileName:)('testing' looksLikeDirectory usesFileNamed:)('private' asDirectory)('private-reading' canonicalizeFileName readCentralDirectoryFileHeaderFrom: readFrom: readLocalDirectoryFileHeaderFrom: readRawChunk: rewindData skipLocalDirectoryFileHeaderFrom:)('private-writing' copyDataTo: localHeaderRelativeOffset uncompressDataTo: uncompressDataTo:from:to:)!!ZipEncoderTree reorganize!('accessing' bitLengthAt: bitLengths codeAt: codes maxCode maxCode:)('encoding' buildCodes:counts:maxDepth: buildHierarchyFrom: buildTree:maxDepth: buildTreeFrom:maxDepth: nodeSortBlock)('private' bitLengths:codes: reverseBits:length: setValuesFrom:)!!ZipEncoderNode reorganize!('accessing' bitLength code code: frequency frequency: height left left: parent parent: right right: value)('encoding' encodeBitLength:from: rotateToHeight:)('printing' printOn:)('testing' isLeaf)('private' computeHeight leafNodes setBitLengthTo: setValue:frequency:height:)!!ZipEncoder reorganize!('accessing' bitPosition encodedStream nextBits:put: nextBytePut:)('block encoding' sendBlock:with:with:with:)('initialize-release' close commit flush flushBits on:)('private' pastEndPut: privateSendBlock:with:with:with:)!!ZipArchiveMember reorganize!('accessing' centralDirectoryHeaderSize clearExtraFields compressedSize compressionMethod contentStream crc32 crc32String desiredCompressionLevel desiredCompressionLevel: desiredCompressionMethod desiredCompressionMethod: extractToFileNamed:inDirectory: fileComment fileComment: lastModTime localFileName setLastModFileDateTimeFrom: splitFileName uncompressedSize unixFileAttributes unixFileAttributes:)('extraction' extractInDirectory: extractInDirectory:overwrite: extractTo: extractTo:from:to: extractToFileNamed:)('initialization' initialize)('reading' contents contentsFrom:to:)('testing' hasDataDescriptor isDirectory isEncrypted isTextFile isTextFile: looksLikeDirectory)('writing' writeTo:)('private' asDirectory dosToUnixTime: endRead mapPermissionsFromUnix: mapPermissionsToUnix: readRawChunk: rewindData unixToDosTime: unixToSqueakTime:)('private-writing' compressDataTo: copyDataTo: copyDataWithCRCTo: copyRawDataTo: copyRawDataTo:from:to: refreshLocalFileHeaderTo: writeCentralDirectoryFileHeaderTo: writeDataDescriptorTo: writeDataTo: writeDataTo:from:to: writeLocalFileHeaderTo:)!!ZipArchive reorganize!('accessing' hasMemberSuchThat: prependedDataSize zipFileComment zipFileComment:)('archive operations' addDeflateString:as: extractAllTo: extractAllTo:informing: extractAllTo:informing:overwrite:)('initialization' close initialize)('reading' readFrom:)('writing' writeTo: writeTo:prepending: writeTo:prependingFileNamed: writeToFileNamed:prepending: writeToFileNamed:prependingFileNamed:)('private' memberClass readEndOfCentralDirectoryFrom: readMembersFrom:named: readSignatureFrom: writeCentralDirectoryTo: writeEndOfCentralDirectoryTo:)!!ZeroDivide reorganize!('*MinimalMorphic-exceptionDescription' dividend)('exceptionBuilder' dividend:)('exceptionDescription' isResumable)!!ZLibReadStream reorganize!('crc' updateCrc:from:to:in: verifyCrc)('initialize' on:from:to:)!!XTableForUnicodeFont reorganize!('*MinimalMorphic-as yet unclassified' ranges:)('as yet unclassified' at: at:put: size)!!XBMReadWriter class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' typicalFileExtensions)!!X11Encoding class reorganize!('*MinimalMorphic-as yet unclassified' getLocaleEncoding getPathEnc getTextEnc getXWinEnc requestUTF8 requestUTF8: setPathEnc: setPathEncToLocale setTextEnc: setTextEncToLocale setXWinEnc: setXWinEncToLocale useEncoding: useLocaleEncoding)('as yet unclassified' encoding getEncoding setEncoding: setEncodingToLocale)!!Transcripter class reorganize!('*MinimalMorphic-instance creation' startTranscriptProcess)('instance creation' newInFrame:)('utilities' emergencyEvaluator)!!TranscriptStream class reorganize!('*MinimalMorphic-as yet unclassified' openMorphicTranscript)('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-toolbuilder' buildWith:)('*MinimalMorphic-window color' windowColorSpecification)('as yet unclassified' new newTranscript:)('class initialization' initialize registerInFlapsRegistry)!!TranscriptStream reorganize!('*MinimalMorphic-initialization' closeAllViews open openAsMorph openAsMorphLabel: openLabel:)('*MinimalMorphic-model protocol' codePaneMenu:shifted:)('*MinimalMorphic-toolbuilder' buildWith:)('access' characterLimit)('model protocol' perform:orSendTo: release step)('stream extensions' bs clear endEntry flush pastEndPut: show:)('private' semaphore)!!TextStream reorganize!('*MinimalMorphic-as yet unclassified' applyAttribute:beginningAt:)('as yet unclassified' nextPutAll: withAttribute:do: withAttributes:do:)!!StandardFileStream class reorganize!('*MinimalMorphic-browser requests' privateCheckForBrowserPrimitives)('*MinimalMorphic-error handling' fileDoesNotExistUserHandling: fileExistsUserHandling: readOnlyFileDoesNotExistUserHandling:)('browser requests' isRunningAsBrowserPlugin)('file creation' fileNamed: forceNewFileNamed: isAFileNamed: newFileNamed: oldFileNamed: readOnlyFileNamed:)('registry' register: registry retryWithGC:until:forFileNamed: unregister:)!!MultiByteFileStream reorganize!('*MinimalMorphic-accessing' fileInEncodingName: lineEndConvention lineEndConvention:)('*MinimalMorphic-crlf private' convertStringToCr:)('*MinimalMorphic-fileIn/Out' fileInObjectAndCodeForProject fileInProject)('*MinimalMorphic-private' setConverterForCodeForProject)('*MinimalMorphic-private basic' basicNext: basicNext:into: basicNextInto: basicPeek basicPosition basicPosition: basicReadInto:startingAt:count: basicSetToEnd basicSkip: basicUpTo: basicVerbatim:)('*MinimalMorphic-remnant' accepts: filterFor:)('accessing' ascii binary converter converter: fileName wantsLineEndConversion:)('crlf private' bareNext convertStringFromCr: detectLineEndConvention doConversion next:innerFor: wantsLineEndConversion)('fileIn/Out' fileIn fileOutClass:andObject:)('open/close' open:forWrite: reset)('public' next next: nextDelimited: nextMatchAll: nextPut: nextPutAll: peek peekFor: skipSeparators skipSeparatorsAndPeekNext upTo: upToEnd)('private' setConverterForCode)('private basic' basicNextPut: basicNextPutAll:)!!HtmlFileStream reorganize!('HTML' command:)('fileIn/Out' copyMethodChunkFrom: nextChunk skipSeparators)('read, write, position' header nextPut: nextPutAll: trailer verbatim:)!!CrLfFileStream reorganize!('*MinimalMorphic-access' lineEndConvention)('*MinimalMorphic-private' convertStringToCr:)('*monticello' lineEndingConvention:)('access' ascii binary detectLineEndConvention next next: nextPut: nextPutAll: peek upTo: verbatim:)('open/close' open:forWrite:)('private' convertStringFromCr:)!!StandardFileStream reorganize!('*MinimalMorphic-access' directoryUrl)('*MinimalMorphic-browser requests' post:url:ifError: primURLPost:data:semaIndex: requestURLStream:)('*MinimalMorphic-properties-setting' getFileType insertLineFeeds)('*MinimalMorphic-read, write, position' compressFile)('access' directory file fullName isDirectory localName name peekFor: printOn: reset size)('browser requests' defaultBrowserReadyWait post:target:url:ifError: primBrowserReady primURLPost:target:data:semaIndex: primURLRequest:semaIndex: primURLRequest:target:semaIndex: primURLRequestDestroy: primURLRequestFileHandle: primURLRequestState: requestURL:target: requestURL:target:ifError: requestURLStream:ifError: waitBrowserReadyFor:ifFail:)('dnd requests' primDropRequestFileHandle: primDropRequestFileName: requestDropStream:)('finalization' actAsExecutor finalize)('open/close' close closed ensureOpen open open:forWrite: openReadOnly reopen)('primitives' primAtEnd: primClose: primCloseNoError: primFlush: primGetPosition: primOpen:writable: primRead:into:startingAt:count: primSetPosition:to: primSize: primSizeNoError: primTruncate:to: primWrite:from:startingAt:count:)('properties-setting' asHtml ascii binary isBinary isReadOnly readOnly readWrite setFileTypeToObject)('read, write, position' atEnd basicNext findString: findStringFromEnd: flush next next: next:into:startingAt: next:putAll:startingAt: nextPut: nextPutAll: nextWordsInto: padToEndWith: peek peekLast position position: readInto:startingAt:count: readOnlyCopy setToEnd skip: truncate truncate: upTo: upToEnd verbatim:)('registry' register unregister)!!RemoteFileStream reorganize!('*MinimalMorphic-*MorphicExtras-as yet unclassified' url)('as yet unclassified' close contentsOfEntireFile dataIsValid directory directoryUrl localName openReadOnly padToEndWith: readOnly remoteFile remoteFile: sleep)!!RWBinaryOrTextStream reorganize!('*MinimalMorphic-as yet unclassified' asBinaryOrTextStream)('as yet unclassified' ascii binary contents contentsOfEntireFile isBinary next next: next:into:startingAt: nextPut: padToEndWith: reset setFileTypeToObject text upToEnd)('writing' next:putAll:startingAt: nextPutAll:)!!MultiByteBinaryOrTextStream class reorganize!('*MinimalMorphic-instance creation' with:encoding:)('defaults' defaultConverter)('instance creation' on:encoding:)!!MultiByteBinaryOrTextStream reorganize!('*MinimalMorphic-converting' asBinaryOrTextStream)('*MinimalMorphic-fileIn/Out' setEncoderForSourceCodeNamed:)('*MinimalMorphic-private' guessConverter)('*MinimalMorphic-private basic' basicNext: basicNext:into: basicNextInto: basicPeek basicPosition basicPosition:)('accessing' ascii binary converter converter: isBinary text)('as yet unclassified' fileInObjectAndCodeForProject fileInProject setConverterForCodeForProject)('fileIn/Out' fileIn fileInObjectAndCode fileOutClass:andObject: setConverterForCode)('properties-setting' setFileTypeToObject)('public' contents next next: nextDelimited: nextMatchAll: nextPut: nextPutAll: padToEndWith: peek peekFor: reset skipSeparators skipSeparatorsAndPeekNext upTo: upToEnd)('private basic' basicNext basicNextPut: basicNextPutAll:)!!FileStream class reorganize!('*MinimalMorphic-browser requests' httpPostDocument:args: httpPostMultipart:args: post:target:url:ifError: post:url:ifError: requestURL:target: requestURLStream: requestURLStream:ifError:)('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-file reader services' fileIn:)('*MinimalMorphic-instance creation' fileNamed:do: forceNewFileNamed:do: newFileNamed:do: oldFileNamed:do: readOnlyFileNamed:do:)('*MinimalMorphicInitialization' initializeClass)('concrete classes' concreteStream)('dnd requests' requestDropStream:)('file reader services' cs fileReaderServicesForFile:suffix: isSourceFileSuffix: multiCs multiSt removeLineFeeds: serviceFileIn serviceRemoveLineFeeds services sourceFileSuffixes st writeSourceCodeFrom:baseName:isSt:useHtml:)('initialize-release' initialize)('instance creation' detectFile:do: fileNamed: forceNewFileNamed: fullName: isAFileNamed: new newFileNamed: oldFileNamed: oldFileOrNoneNamed: readOnlyFileNamed:)!!FileStream reorganize!('*MinimalMorphic-*MorphicExtras-file accessing' url)('*MinimalMorphic-converting' asBinaryOrTextStream)('*MinimalMorphic-editing' edit viewGZipContents)('*Network' asUrl)('*network-uri' uri)('accessing' contents contentsOfEntireFile directoryEntry mimeTypes next next: nextPut: nextPutAll: size)('file accessing' file localName name)('file modes' ascii binary readOnly readOnlyStream readWrite text)('file open/close' close closed flush reopen)('fileIn/Out' fileIn fileInObjectAndCode fileIntoNewChangeSet)('positioning' position position: reset setToEnd skip: truncate:)('printing' longPrintOn: longPrintOn:limitedTo:indent: printOn:)('remote file compatibility' dataIsValid)('testing' atEnd)!!Console reorganize!('accessing' clear delayActive delayActive: endEntry show:)('command line' confirm: confirm:orCancel: readEvalPrint request:)('initialization' cleanProcesses cleanProcessesBut: initInFrame: initInFrame:saveProcesses: initialize newBounds: newSize:)('private' black white)!!ReadWriteStream reorganize!('*MinimalMorphic-*packageinfo' untilEnd:displayingProgress:)('*MinimalMorphic-converting' asUnZippedStream)('*MinimalMorphic-fileIn/Out' fileNameEndsWith: fileOutClass:andObject:blocking:)('*MinimalMorphic-testing' isZipArchive)('accessing' contents name next next:)('converting' readStream)('file status' close closed)('fileIn/Out' fileInObjectAndCode fileOutChangeSet:andObject: fileOutChanges fileOutClass:andObject:)('testing' = hash)!!DeflateStream reorganize!('accessing' goodMatchLength hashChainLength next:putAll:startingAt: nextPutAll: pastEndPut:)('deflating' compare:with:min: deflateBlock deflateBlock:chainLength:goodMatch: findMatch:lastLength:lastMatch:chainLength:goodMatch: flushBlock insertStringAt: updateHash: updateHashAt: validateMatchAt:from:to:)('encoding' encodeLiteral: encodeMatch:distance:)('initialize-release' flush initialize initializeHashTables on: on:from:to:)('private' moveContentsToFront updateHashTable:delta:)!!WriteStream reorganize!('*MinimalMorphic-character writing' nextPutKeyword:withArg: space:)('accessing' contents next next:putAll:startingAt: nextPut: nextPutAll: size)('character writing' cr crtab crtab: ensureASpace ensureNoSpace peekLast space tab tab:)('file open/close' flush)('fileIn/Out' nextChunkPut: nextChunkPutWithStyle: timeStamp)('positioning' position: reset resetToStart setToEnd)('printing' store:)('private' braceArray braceArray: growTo: on: on:from:to: pastEndPut: with: withAttribute:do: withAttributes:do:)!!WorldWindow reorganize!('event handling' mouseUp:)('geometry' extent:)('initialization' openInWorld:)('layout' fullBounds)('menu' buildWindowMenu)('resize/collapse' collapseOrExpand)!!WorldViewModel reorganize!('as yet unclassified' initialExtent:)('user interface' fullScreenSize initialExtent)!!WorldState class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' classVersion deferredExecutionTimeLimit)('as yet unclassified' canSurrenderToOS: lastCycleTime)('class initialization' addDeferredUIMessage: deferredUIMessages)!!WorldState reorganize!('MorphicExtras-hands' activeHand:)('MorphicExtras-initialization' stepListSummary)('MorphicExtras-update cycle' displayWorldAsTwoTone:submorphs:color: doOneCycleInBackground startBackgroundProcess)('alarms' addAlarm:withArguments:for:at: adjustAlarmTimes: alarmSortBlock alarms removeAlarm:for: triggerAlarmsBefore:)('canvas' assuredCanvas canvas canvas: doFullRepaint recordDamagedRect: resetDamageRecorder viewBox viewBox:)('hands' activeHand addHand: hands handsDo: handsReverseDo: removeHand: selectHandsToDrawForDamage:)('initialization' initialize stepListSize stepListSortBlock)('object fileIn' convertAlarms convertStepList)('objects from disk' convertToCurrentVersion:refStream:)('stepping' adjustWakeupTimes: adjustWakeupTimesIfNecessary cleanseStepListForWorld: isStepping: isStepping:selector: listOfSteppingMorphs runLocalStepMethodsIn: runStepMethodsIn: startStepping:at:selector:arguments:stepTime: stopStepping: stopStepping:selector:)('undo' commandHistory)('undo support' clearCommandHistory)('update cycle' checkIfUpdateNeeded displayWorld:submorphs: displayWorldSafely: doDeferredUpdatingFor: doOneCycleFor: doOneCycleNowFor: doOneSubCycleFor: drawWorld:submorphs:invalidAreasOn: forceDamageToScreen: handleFatalDrawingError: interCyclePause:)!!WorldMenuProvider reorganize!('accessing' servicesHelpText)('saved preferences' browserMethodMenucreateNewService preferencesMenuhelpOnServices preferencesMenupreferencesBrowser preferencesMenurebuildRegistry preferencesMenuservicesBrowser preferencesMenushortcut worldpreferencesMenu worldshortcut)('service registering' convertOpenCommand:)('services' closeTopWindow createNewService helpOnServices nextWindow openMenu preferencesBrowser preferencesMenu rebuildRegistry servicesBrowser world)!!Workspace reorganize!('accessing' acceptAction acceptAction: acceptContents: mustDeclareVariables: setBindings:)('as yet unclassified' acceptDroppedMorphsWording saveContentsInFile)('binding' bindingOf: initializeBindings)('drag and drop' acceptDroppingMorph:event:inMorph: acceptsDroppingMorphForReference acceptsDroppingMorphForReference: toggleDroppingMorphForReference wantsDroppedMorph:event:inMorph:)('initialize-release' embeddedInMorphicWindowLabeled: initialExtent initialize)('menu commands' addModelItemsToWindowMenu: appendContentsOfFile)('object fileIn' convertToCurrentVersion:refStream:)('variable declarations' mustDeclareVariableWording toggleVariableDeclarationMode)!!WordArray reorganize!('*MinimalMorphic-array arithmetic' * + - /)('accessing' atAllPut: byteSize bytesPerElement defaultElement)('array arithmetic primitives' primAddArray:and:into: primAddScalar:and:into: primDivArray:and:into: primDivScalar:and:into: primMulArray:and:into: primMulScalar:and:into: primSubArray:and:into: primSubScalar:and:into:)('converting' asWordArray)('private' replaceFrom:to:with:startingAt:)!!WireMorph reorganize!('as yet unclassified' fromPin:toPin: otherPinFrom: pinMoved)('editing' addHandles)('event handling' handlesMouseDown: mouseUp:)('submorphs-add/remove' delete)!!WindowingTransformation reorganize!('applying transform' applyInverseTo: applyTo: compose:)('printing' printOn:)('scrolling' scrollBy:)('transforming' align:with: noScale scale scaleBy: translateBy: translation)('private' checkScale: setScale:translation:)!!WindowStub reorganize!('events' eventAccessors)('simulating' close)!!WindowColorRegistry class reorganize!('*MinimalMorphicInitialization' initializeClass)('registry' refresh registerColorSpecification:toClassNamed: registeredWindowColorSpecFor: registeredWindowColorSpecs registry unregisterColorSpecificationForClassNamed:)!!TreeStub reorganize!('events' eventAccessors update: updateRoots updateSelectedPath)('initialize-release' setSpec:)('simulating' select:)('private' openPath: roots:)!!TreeNodeStub reorganize!('events' openPath:)('initialize-release' setSpec:item:)('printing' printOn:)('simulating' children item label select)('private' matches: selectPath:)!!TextStub reorganize!('events' eventAccessors refresh refreshText update:)('simulating' accept: color text)!!ListStub reorganize!('events' eventAccessors refresh refreshIndex refreshList update:)('simulating' click: clickItemAt: list menu selectedIndex selectedItem)!!ButtonStub reorganize!('events' eventAccessors)('simulating' click color isEnabled)!!WidgetStub reorganize!('accessing' name spec widgetNamed:)('events' eventAccessors refresh update:)('initialize-release' setSpec:)('printing' printOn:)('simulating' model)!!WideString class reorganize!('*MinimalMorphic-enumeration' allMethodsWithEncodingTag: allMultiStringMethods allNonAsciiMethods)('*MinimalMorphic-instance creation' fromISO2022JPString:)('instance creation' fromByteArray: fromPacked: fromString: from:)!!WideString reorganize!('*MinimalMorphic-converting' asFourCode)('accessing' at: at:put: byteAt: byteAt:put: byteSize replaceFrom:to:with:startingAt: wordAt: wordAt:put:)('converting' asPacked copyFrom:to:)('testing' includesUnifiedCharacter isUnicodeStringWithCJK isWideString)('private' mutateJISX0208StringToUnicode)!!MVCWiWPasteUpMorph reorganize!('activation' becomeTheActiveWorldWith: revertToParentWorldWithEvent:)('as yet unclassified' worldUnderCursor)('change reporting' invalidRect:from:)('geometry' position: resetViewBox resetViewBoxForReal)('project' project)('project state' viewBox:)!!WiWPasteUpMorph reorganize!('WiW support' restartWorldCycleWithEvent: validateMouseEvent:)('activation' becomeTheActiveWorldWith: revertToParentWorldWithEvent:)('event handling' mouseDown:)('geometry' extent: resetViewBox resetViewBoxForReal)('initialization' hostWindow: initialize)('project state' viewBox:)('update cycle' doDeferredUpdating)('world state' displayWorld doOneCycle goBack jumpToProject restoreDisplay)!!WeakSet reorganize!('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-private' scanForLoadedSymbol:)('*MinimalMorphic-public' slowSize)('public' add: collect: do: do:after: includes: like: printElementsOn: remove:ifAbsent: size)('private' fixCollisionsFrom: grow growTo: initialize: rehash scanFor:)!!WeakMessageSend reorganize!('*MinimalMorphic-*eToys-tiles' asTilesIn: asTilesIn:globalNames:)('*MinimalMorphic-evaluating' valueWithEnoughArguments:)('*MinimalMorphic-private' ensureArguments)('*eToys-tiles' stringFor:)('accessing' arguments arguments: receiver receiver: selector selector:)('comparing' = hash)('converting' asMessageSend asMinimalRepresentation)('evaluating' value valueWithArguments:)('printing' printOn:)('testing' isMessageSend isValid)('private' collectArguments: ensureReceiver ensureReceiverAndArguments isAnyArgumentGarbage isReceiverGarbage isReceiverOrAnyArgumentGarbage)!!WarpBlt class reorganize!('*MinimalMorphic-examples' test1 test12 test4 test5)('examples' test3)('form rotation' rotate:degrees:center:scaleBy:smoothing:)('initialization' toForm:)('instance creation' current)!!WarpBlt reorganize!('*MinimalMorphic-system simulation' warpBitsSimulated)('primitives' copyQuad:toRect: deltaFrom:to:nSteps: sourceForm:destRect: sourceQuad:destRect: startFrom:to:offset: warpBits warpBitsSmoothing:sourceMap:)('setup' cellSize cellSize:)('smoothing' mixPix:sourceMap:destMap: rgbMap:from:to:)('system simulation' warpBitsSimulated:sourceMap:)!!Warning reorganize!('*MinimalMorphic-exceptionDescription' defaultAction)!!Vocabulary class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' embraceAddedTypeVocabularies initializeSilently initializeStandardVocabularies)('eToy vocabularies' gettersForbiddenFromWatchers newSystemVocabulary)('eToys-type vocabularies' newWonderlandVocabulary wonderlandVocabulary)('standard vocabulary access' addStandardVocabulary: allStandardVocabularies newTimeVocabulary vocabularyFrom: vocabularyNamed:)('testing and demo' newQuadVocabulary newTestVocabulary quadVocabulary testVocabulary)('type vocabularies' newNumberVocabulary numberVocabulary typeChoices vocabularyForClass: vocabularyForType:)('universal vocabularies' fullVocabulary newPublicVocabulary)!!ButtonPhaseType reorganize!('eToys-color' typeColor)('initialization' initialize)('queries' representsAType)!!SymbolListType reorganize!('eToys-tiles' affordsCoercionToBoolean)('initial value' initialValueForASlotFor:)('tiles' choices representsAType symbols:)!!StringType reorganize!('eToys-color' typeColor)('eToys-tiles' setFormatForDisplayer: wantsArrowsOnTiles)('initial value' initialValueForASlotFor:)('initialization' initialize)!!SoundType reorganize!('eToys-color' typeColor)('eToys-tiles' setFormatForDisplayer:)('initial value' initialValueForASlotFor:)('initialization' initialize)!!NumberType reorganize!('eToys-color' typeColor)('eToys-tiles' addExtraItemsToMenu:forSlotSymbol: addUserSlotItemsTo:slotSymbol: comparatorForSampleBoolean wantsAssignmentTileVariants wantsSuffixArrow)('initial value' initialValueForASlotFor:)('initialization' initialize)!!MenuType reorganize!('eToys-color' typeColor)('initialization' initialize)('tiles' representsAType)!!GraphicType reorganize!('eToys-color' typeColor)('initial value' initialValueForASlotFor:)('initialization' initialize)!!FullVocabulary reorganize!('category list' categoryListForInstance:ofClass:limitClass:)('eToys-initialization' typeColor)('initialization' initialize rigAFewCategories)('method list' allMethodsInCategory:forInstance:ofClass:)('queries' categoriesContaining:forClass: categoryWithNameIn:thatIncludesSelector:forInstance:ofClass: encompassesAPriori: includesDefinitionForSelector: includesSelector: includesSelector:forInstance:ofClass:limitClass: representsAType)!!ColorType reorganize!('eToys-color' typeColor)('initial value' initialValueForASlotFor:)('initialization' initialize)('tiles' wantsArrowsOnTiles)!!BooleanType reorganize!('eToys-color' typeColor)('initial value' initialValueForASlotFor:)('initialization' initialize)('tiles' setFormatForDisplayer:)!!DataType reorganize!('eToys-color' subduedColorFromTriplet:)('eToys-initialization' setFormatForDisplayer:)('eToys-tiles' addExtraItemsToMenu:forSlotSymbol: addUserSlotItemsTo:slotSymbol: addWatcherItemsToMenu:forGetter: affordsCoercionToBoolean comparatorForSampleBoolean wantsArrowsOnTiles wantsAssignmentTileVariants wantsSuffixArrow)('initial value' initialValueForASlotFor:)('queries' representsAType)!!Vocabulary reorganize!('eToys-color' subduedColorFrom:)('eToys-queries' tileWordingForSelector: typeColor)('flexibleVocabularies-flexibleVocabularies-testing' isEToyVocabulary)('initialization' addCategory: addCategoryNamed: addFromTable: initialize initializeFor: initializeFromTable: renameCategoryFrom:to: strings vocabularyName:)('method list' phraseSymbolsToSuppress)('printing' printOn:)('queries' allCategoryName allMethodsInCategory: allMethodsInCategory:forInstance:ofClass: allSelectorsInVocabulary asSymbol atKey:putMethodInterface: categories categoriesContaining:forClass: categoryAt: categoryCommentFor: categoryList categoryListForInstance:ofClass:limitClass: categoryWhoseTranslatedWordingIs: categoryWithNameIn:thatIncludesSelector:forInstance:ofClass: categoryWordingAt: classToUseFromInstance:ofClass: encompassesAPriori: includesDefinitionForSelector: includesSelector: includesSelector:forInstance:ofClass:limitClass: methodInterfaceAt:ifAbsent: methodInterfaceForSelector:class: methodInterfacesDo: methodInterfacesInCategory:forInstance:ofClass:limitClass: representsAType someCategoryThatIncludes: vocabularyName)('translation' translatedWordingFor: translatedWordingsFor: translationKeyFor: translationTable)('private' setCategoryStrings:)!!PluggableTextView reorganize!('controller access' selectionInterval)('initialization' defaultControllerClass initialize on:text:accept:readSelection:menu: setSelection:)('model access' getMenu: getSelection getText getTextSelector isReadOnlyView model: setText:from: updateDisplayContents)('object fileIn' convertToCurrentVersion:refStream:)('updating' hasEditingConflicts hasEditingConflicts: hasUnacceptedEdits: update:)!!StringHolderView reorganize!('controller access' defaultController defaultControllerClass displayContents)('deEmphasizing' deEmphasizeView)('displaying' display displayView lock positionDisplayContents)('initialize-release' initialize)('model access' editString: getMenu: model:)('updating' askBeforeDiscardingEdits: canDiscardEdits hasUnacceptedEdits hasUnacceptedEdits: promptForCancel update: updateDisplayContents)!!StandardSystemView class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' cachingBits doCacheBits dontCacheBits setLabelStyle)!!ModalSystemWindowView reorganize!('controller access' defaultControllerClass)('displaying' display displayBorder displayLabelBoxes)('initialize-release' borderWidth: initialize)('label access' backgroundColor)('modal dialog' doModalDialog)('model access' update:)!!StandardSystemView reorganize!('clipping box access' clippingBox constrainFrame:)('controller access' defaultControllerClass)('deEmphasizing' deEmphasizeView emphasizeView)('displaying' cacheBits cacheBitsAsIs cacheBitsAsTwoTone deEmphasizeForDebugger deEmphasizeLabel display displayDeEmphasized displayEmphasized displayLabelBackground: displayLabelBoxes displayLabelText displayOn: displayRacingStripes displayView emphasizeLabel erase makeMeVisible uncacheBits windowBits)('framing' chooseCollapsePoint chooseFrame chooseMoveRectangle collapse collapseToPoint: collapsedFrame expand expandedFrame fullScreen getFrame initialExtent initialFrame moved newFrame: reframePanesAdjoining:along:to: reframeTo: resize resizeInitially resizeMinimumCenteredAt: resizeTo: standardWindowOffset windowBox windowOrigin)('initialize-release' initialize model: release)('label access' closeBoxFrame growBoxFrame label label: labelColor labelDisplayBox labelFrame labelHeight labelOffset labelText labelTextRegion noLabel relabel: setLabel: setLabelRegion setLabelTo:)('object fileIn' convertToCurrentVersion:refStream:)('size' maximumSize maximumSize: minimumSize minimumSize:)('testing' containsPoint: isCollapsed labelContainsPoint:)('updating' setUpdatablePanesFrom: updatablePanes update:)('private' setTransformation: subviewWithLongestSide:near:)!!PluggableListViewOfMany reorganize!('controller access' defaultControllerClass)('displaying' deEmphasizeView highlightFrom:to: scrollBy:)('initialization' on:list:primarySelection:changePrimarySelection:listSelection:changeListSelection:menu:keystroke:)('selecting' listSelectionAt: listSelectionAt:put: moveSelectionBox: selection)('updating' update:)!!PluggableListView reorganize!('controller access' defaultControllerClass)('initialization' autoDeselect: font: list: menu: menuTitleSelector: on:list:selected:changeSelected:menu:keystroke:)('model access' changeModelSelection: getCurrentSelectionIndex getList getListSelector getMenu: handleKeystroke: setSelectionSelectorIs: specialKeyPressed:)('updating' update: verifyContents)!!PluggableButtonView reorganize!('accessing' action: askBeforeChanging askBeforeChanging: label label: shortcutCharacter shortcutCharacter: triggerOnMouseDown triggerOnMouseDown:)('controller access' defaultControllerClass)('displaying' deEmphasizeView display displayComplemented displayNormal displayView emphasizeView toggleMouseOverFeedback)('initialize-release' initialize on:getState:action:getArguments:from:label:menu: on:getState:action:label:menu:)('other' defaultWindow performAction update: window:)('private' centerAlignLabelWith: centerLabel getMenu: getModelState insetDisplayBox)!!MorphWorldView reorganize!('as yet unclassified' updateSubWindowExtent)('controller access' defaultControllerClass)('deEmphasizing' deEmphasizeView)('displaying' displayView)('updating' update:)('private' computeInsetDisplayBox)!!ListView reorganize!('clipping box access' clippingBox)('controller access' defaultControllerClass)('deEmphasizing' deEmphasizeView emphasizeView)('delimiters' bottomDelimiter bottomDelimiter: noBottomDelimiter noTopDelimiter topDelimiter topDelimiter:)('display box access' boundingBox isSelectionBoxClipped)('displaying' deEmphasizeSelectionBox display displaySelectionBox displayView scrollBy: scrollSelectionIntoView)('font access' font font:)('initialize-release' initialize)('list access' assuredTextStyle list list: reset resetAndDisplayView selection:)('lock access' lock)('selecting' deselect findSelection: maximumSelection minimumSelection moveSelectionBox: numSelectionsInView selection selectionBox selectionBoxOffset)('updating' update:)('private' firstShown lastShown positionList wrappingBox)!!FormHolderView reorganize!('displaying' displayView updateDisplay)('initialize-release' release)('menu messages' accept cancel)('model access' changeValueAt:put: model: workingForm)!!FormView reorganize!('accessing' fillColor fillColor: mask rule rule:)('controller access' defaultControllerClass)('displaying' displayOn: displayView uncacheBits updateDisplay)('menu messages' accept cancel)('model access' changeValueAt:put:)('updating' update:)('window access' defaultWindow windowBox)('private' defaultRule)!!FormMenuView class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' formButtons)('class initialization' fileOut)!!FormMenuView reorganize!('controller access' defaultControllerClass)('initialize-release' makeFormEditorMenu)('subView access' subViewContainingCharacter:)('private' makeButton: makeColorConnections: makeConnections: makeGridSwitch: makeSwitch: makeViews:for:)!!DisplayTextView reorganize!('accessing' centered fillColor fillColor: isCentered mask rule rule:)('controller access' defaultController defaultControllerClass)('deEmphasizing' deEmphasizeView)('displaying' display displayView uncacheBits)('initialize-release' initialize)('lock access' lock)('model access' model:)('window access' defaultWindow window:)('private' centerText defaultRule positionText)!!View reorganize!('basic control sequence' subViewWantingControl)('bordering' backgroundColor backgroundColor: borderWidth borderWidth: borderWidthLeft:right:top:bottom: foregroundColor foregroundColor: insideColor:)('clearing' clear clear: clearInside clearInside:)('controller access' controller controller: defaultController defaultControllerClass model:controller:)('deEmphasizing' deEmphasize deEmphasizeForDebugger deEmphasizeSubViews deEmphasizeView emphasize emphasizeSubViews emphasizeView)('display box access' apparentDisplayBox boundingBox computeBoundingBox displayBox insetDisplayBox)('display transformation' displayTransform: displayTransformation inverseDisplayTransform:)('displaying' clippingTo:do: display displayBorder displayClippingTo: displayDeEmphasized displaySubViews displayView displayViewDeEmphasized inspectFirstSubView inspectModel inspectView maximumSize minimumSize)('indicating' flash highlight)('initialize-release' initialize release setDefaultBackgroundColor)('lock access' isLocked isUnlocked lock unlock)('miscellaneous' clipRect clipRect: gridSpacing nestedViewport printViewSpecOn:nested: stretchFrame:startingWith:)('model access' model model:)('morphic compatibility' setBalloonText:)('scrolling' scrollBy:)('subView access' firstSubView lastSubView resetSubViews subViewContaining: subViewSatisfying: subViews textEditorView)('subView inserting' addSubView: addSubView:above: addSubView:align:with: addSubView:below: addSubView:ifCyclic: addSubView:toLeftOf: addSubView:toRightOf: addSubView:viewport: addSubView:window:viewport:)('subView removing' releaseSubView: releaseSubViews removeFromSuperView removeSubView: removeSubViews)('superView access' isTopView superView topView)('testing' canDiscardEdits containsPoint: hasUnacceptedEdits isObscured)('transforming' align:with: scale:translation: scaleBy: transform: transformation transformation: translateBy: window:viewport:)('updating' update update:)('viewport access' viewport)('window access' defaultWindow insetWindow window window:)('private' computeDisplayTransformation computeInsetDisplayBox getController getViewport getWindow isCyclic: setTransformation: setWindow: superView:)!!VeryPickyMorph reorganize!('as yet unclassified' passengerMorph:)('converting' complexContents)('drawing' drawOn:)('dropping/grabbing' justDroppedInto:event:)('initialization' initialize)('submorphs-add/remove' delete)!!ClassCommentVersionsBrowser reorganize!('basic function' diffedVersionContents reformulateList scanVersionsOf: updateListsAndCodeIn:)('menu' compareToCurrentVersion offerVersionsHelp openSingleMessageBrowser versionsMenu:)('misc' classCommentIndicated contentsSymbolQuints priorSourceOrNil selectedClass wantsPrettyDiffOption)!!VersionsBrowser reorganize!('init & update' addedChangeRecord addedChangeRecord: changeListButtonSpecs reformulateList scanVersionsOf:class:meta:category:selector: updateListsAndCodeIn:)('menu' changeListKey:from: compareToOtherVersion fileInSelections findOriginalChangeSet offerVersionsHelp removeMethodFromChanges versionFrom: versionsHelpString versionsMenu:)('misc' addPriorVersionsCountForSelector:ofClass:to: classCommentIndicated selectedClass selectedClassOrMetaClass selectedMessageName showsVersions)!!VersionNumber reorganize!('SqueakMap support' versionStringOn:)('accessing' branchNext commonBase: next numbers previous)('comparing' < = hash)('initialization' initializeNumbers:)('printing' printOn: storeOn:)('testing' inSameBranchAs:)!!VersionHistory reorganize!('accessing' allVersionsAfter: allVersionsBefore: firstVersion mainLineStartingAt: versionBefore: versionsAfter:)('adding' addNewVersionBasedOn:)('initialization' initializeVersionsAt:)('printing' treeString treeStringOn:startingAt: treeStringStartingAt:)('removing' remove: remove:ifAbsent: removeBranch: removeTrunk:)('testing' canRemove: includesVersion:)!!TempVariableNode reorganize!('*MinimalMorphic-*eToys-tiles' explanation)('*eToys-tiles' asMorphicSyntaxIn:)('initialize-release' isArg: name:index:type:scope: nowHasDef nowHasRef scope:)('printing' printOn:indent:)('testing' assignmentCheck:at: isArg isTemp isUndefTemp isUnusedTemp scope)!!VariableNode reorganize!('*MinimalMorphic-*eToys-tiles' currentValueIn: explanation variableGetterBlockIn:)('*eToys-tiles' asMorphicSyntaxIn:)('accessing' name)('code generation' emitForReturn:on: emitForValue:on: emitLoad:on: emitStore:on: emitStorePop:on: fieldOffset sizeForReturn: sizeForStore: sizeForStorePop:)('initialize-release' asStorableNode: name: name:index:type: name:key:code: name:key:index:type:)('printing' printOn:indent:)('testing' assignmentCheck:at: canBeSpecialArgument index isSelfPseudoVariable isVariableReference type)!!Variable reorganize!('name' name:type: printOn: variableName)('type' variableType variableType:)('value' defaultValue sample)!!Utilities class reorganize!('*39Deprecated' fileOutChangeSetsNamed:)('*MinimalMorphic-*39Deprecated' browseVersionsForClass:selector:)('*MinimalMorphic-*Tools' addSampleWindowsTo: browseRecentSubmissions closeAllDebuggers openRecentSubmissionsBrowser recentSubmissionsWindow)('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-common requests' appendToCommonRequests: commonRequestStrings: editCommonRequestStrings exportCommonRequests importCommonRequests initializeCommonRequestStrings offerCommonRequests offerCommonRequestsInMorphic)('*MinimalMorphic-debugging' inspectCollection:notifying:)('*MinimalMorphic-durable menus' windowFromMenu:target:title: windowFromMenu:target:title:colorPattern: windowMenuWithLabels:colorPattern:targets:selections:title: windowMenuWithLabels:colorPattern:targets:selections:wordingSelectors:title:)('*MinimalMorphic-fetching updates' applyUpdatesFromDisk assureAbsenceOfUnstableUpdateStream assureAvailabilityOfUnstableUpdateStream broadcastUpdatesFrom:to:except: chooseUpdateList fileInFromUpdatesFolder: lastUpdateNum: newUpdatesOn:special:throughNumber: objectStrmFromUpdates: position:atVersion: readNextUpdateFromServer readNextUpdatesFromDisk: readServer:special:updatesThrough:saveLocally:updateImage: readServerUpdatesSaveLocally:updateImage: readServerUpdatesThrough:saveLocally:updateImage: retrieveUrls:ontoQueue:withWaitSema: serverUrls setUpdateServer: summariesForUpdates:through: updateComment updateFromServerThroughUpdateNumber: updateUrlLists zapUpdateDownloader)('*MinimalMorphic-finding pointers' pointersToItem:of:)('*MinimalMorphic-graphical support' showFormsAcrossTopOfScreen: showFormsDictAcrossTopOfScreen:)('*MinimalMorphic-identification' copyrightNotice dateStamp)('*MinimalMorphic-investigations' reportSenderCountsFor:)('*MinimalMorphic-miscellaneous' cleanseOtherworldlySteppers convertCRtoLF: createPageTestWorkspace decommissionTheAllCategory emergencyCollapse instanceComparisonsBetween:and: methodDiffFor:class:selector:prettyDiffs: nextClockwiseSideAfter: openScratchWorkspaceLabeled:contents: oppositeCornerFrom: oppositeModeTo: reconstructTextWindowsFromFileNamed: steplistToolsWorkspace storeTextWindowContentsToFileNamed:)('*MinimalMorphic-recent method submissions' dumpAnyOldStyleRecentSubmissions)('*MinimalMorphic-summer97 additions' chooseFileWithSuffix: chooseFileWithSuffixFromList:withCaption: classCategoriesStartingWith:)('*MinimalMorphic-support windows' openCommandKeyHelp openStandardWorkspace standardWorkspaceContents)('*MinimalMorphic-user interface' informUser:during: informUserDuring:)('*MinimalMorphicInitialization' initializeClass)('class initialization' initialize registerInFlapsRegistry startUp)('common requests' eval:)('debugging' doesNotUnderstand:)('fetching updates' applyUpdatesFromDiskToUpdateNumber:stopIfGap: extractThisVersion: getUpdateDirectoryOrNil mmUpdates parseListContents: saveUpdate:onFile: slUpdates updateFromServer writeList:toStream:)('finding pointers' pointersTo: pointersTo:except:)('identification' authorInitials authorInitialsPerSe authorName authorName: authorNamePerSe changeStamp changeStampPerSe dateTimeSuffix fixStamp: methodsWithInitials: monthDayTime24StringFrom: monthDayTimeStringFrom: setAuthorInitials setAuthorInitials: setAuthorName)('miscellaneous' awaitMouseUpIn:repeating:ifSucceed: awaitMouseUpIn:whileMouseDownDo:whileMouseDownInsideDo:ifSucceed: decimalPlacesForFloatPrecision: deletingMacInvisiblesinOtherOS deletingThisFileOn: doesMethod:forClass:bearInitials: fixUpProblemsWithAllCategory floatPrecisionForDecimalPlaces: garbageCollectAndReport getterSelectorFor: inherentSelectorForGetter: keyLike:satisfying: keyLike:withTrailing:satisfying: oppositeSideTo: setClassAndSelectorFrom:in: setterSelectorFor: simpleSetterFor: timeStampForMethod:)('recent method submissions' assureMostRecentSubmissionExists event: mostRecentlySubmittedMessage noteMethodSubmission:forClass: numberOfRecentSubmissionsToStore numberOfRecentSubmissionsToStore: purgeFromRecentSubmissions: purgeRecentSubmissionsOfMissingMethods recentMethodSubmissions revertLastMethodSubmission)('scraps' addToTrash: emptyScrapsBook maybeEmptyTrash scrapsBook trashTitle)('summer97 additions' classFromPattern:withCaption: graphicsFileSuffixes)('support windows' commandKeyMappings)!!Utilities reorganize!('*MinimalMorphic-look in class' seeClassSide)!!MouseMoveEvent reorganize!('accessing' endPoint startPoint trail)('comparing' = hash)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' printOn: storeOn:)('testing' isMove)('transforming' transformBy: translateBy:)('private' setType:startPoint:endPoint:trail:buttons:hand:stamp:)!!MouseButtonEvent reorganize!('accessing' blueButtonChanged redButtonChanged whichButton yellowButtonChanged)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' storeOn:)('private' setType:position:which:buttons:hand:stamp:)!!MouseEvent reorganize!('accessing' cursorPoint)('button state' anyButtonPressed blueButtonPressed redButtonPressed targetPoint yellowButtonPressed)('comparing' = hash)('converting' asMouseEnter asMouseLeave asMouseMove asMouseOver)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' printOn: storeOn:)('testing' isDraggingEvent isMouse isMouseDown isMouseEnter isMouseLeave isMouseMove isMouseUp isMove)('private' setType: setType:position:buttons:hand:)!!KeyboardEvent reorganize!('comparing' = hash)('dispatching' sentTo:)('initialize' type:readFrom:)('keyboard' keyCharacter keyString keyValue)('printing' printKeyStringOn: printOn: storeOn:)('testing' isKeyDown isKeyUp isKeyboard isKeystroke isMouseMove)('private' setType:buttons:position:keyValue:hand:stamp:)!!UserInputEvent reorganize!('accessing' buttons handler handler: position type wasHandled wasHandled:)('initialize' copyHandlerState: resetHandlerFields)('modifier state' anyModifierKeyPressed commandKeyPressed controlKeyPressed shiftPressed)('printing' buttonString modifierString)('transforming' transformBy: transformedBy: translateBy: translatedBy:)('private' setPosition:)!!UrlArgumentList reorganize!('adding' add:value:)('enumerating' associationsDo:)('private' argumentNamed:)!!HttpUrl reorganize!('*MinimalMorphic-downloading' askNamePassword)('downloading' checkAuthorization:retry: loadRemoteObjects normalizeContents: postFormArgs: postMultipartFormArgs: privateInitializeFromText:relativeTo: realm retrieveContents retrieveContentsAccept: retrieveContentsArgs: retrieveContentsArgs:accept:)('testing' hasRemoteContents)!!FtpUrl reorganize!('*MinimalMorphic-downloading' retrieveContents)('access' pathString)('downloading' downloadUrl)('testing' hasRemoteContents)!!HierarchicalUrl reorganize!('access' authority directoryUrl fileName isAbsolute password path path: port query schemeName username)('classification' scheme)('copying' copy)('downloading' hasContents)('parsing' privateInitializeFromText: privateInitializeFromText:relativeTo: privateParsePath:relativeTo:)('printing' fullPath printOn:)('private' schemeName:authority:path:query:)!!GenericUrl class reorganize!('instance creation' schemeName:locator:)('parsing' absoluteFromText:)!!GenericUrl reorganize!('access' locator schemeName)('classification' scheme)('parsing' privateInitializeFromText: privateInitializeFromText:relativeTo:)('printing' printOn:)('private' schemeName:locator:)!!FileUrl class reorganize!('constants' schemeName)('instance creation' absoluteFromText: host:pathParts:isAbsolute: pathParts: pathParts:isAbsolute:)!!FileUrl reorganize!('access' directoryUrl fileName pathForFile)('accessing' host host: isAbsolute isAbsolute: path path:)('classification' scheme schemeName)('copying' copy)('downloading' default hasContents retrieveContents)('paths' pathDirString pathForDirectory pathString)('printing' printOn:)('testing' firstPartIsDriveLetter)('private-initialization' host:pathParts:isAbsolute: initializeFromPathString: pathParts:isAbsolute: privateInitializeFromText: privateInitializeFromText:relativeTo:)!!Url reorganize!('accessing' authority)('classification' hasRemoteContents scheme schemeName)('converting' asText asURI asUrl asUrlRelativeTo: downloadUrl)('downloading' activate hasContents retrieveContents retrieveContentsForBrowser:)('fragment' fragment privateFragment: withFragment: withoutFragment)('parsing' newFromRelativeText: privateInitializeFromText: privateInitializeFromText:relativeTo:)('printing' printOn: toText)!!UpdatingThreePhaseButtonMorph reorganize!('as yet unclassified' getSelector:)('button' doButtonAction)('event handling' mouseUp:)('stepping and presenter' step)('testing' wantsSteps)!!UpdatingTextMorph reorganize!('accessing' getSelector getSelector: target target:)('initialization' initialize)('stepping and presenter' step stepTime stepTime:)('target access' contentsFromTarget)!!UpdatingStringMorphWithArgument reorganize!('as yet unclassified' argumentTarget:argumentGetSelector:)('copying' veryDeepFixupWith: veryDeepInner:)('target access' readFromTarget)!!NameStringInHalo reorganize!('accessing' interimContents:)('as yet unclassified' placeContents)('drawing' drawOn:)('editing' cancelEdits)!!UpdatingStringMorph reorganize!('MorphicExtras-accessing' floatPrecision:)('accessing' autoAcceptOnFocusLoss autoAcceptOnFocusLoss: contents: decimalPlaces decimalPlaces: fitContents floatPrecision format getSelector getSelector: growable growable: maximumWidth minimumWidth minimumWidth: putSelector putSelector: pvtFloatPrecision: target target: valueFromContents)('copying' veryDeepFixupWith: veryDeepInner:)('eToys-card & stack' setNewContentsFrom:)('eToys-card in a stack' couldHoldSeparateDataForEachInstance)('eToys-player' currentDataValue)('editing' acceptContents acceptValue: addCustomMenuItems:hand: doneWithEdits lostFocusWithoutAccepting setDecimalPlaces: setFontSize setFontStyle setPrecision setToAllowTextEdit toggleGrowability userEditsAllowed)('event handling' handlesMouseDown: mouseDown: wouldAcceptKeyboardFocus)('events-processing' handlerForMouseDown:)('formats' useDefaultFormat useStringFormat useSymbolFormat)('initialization' initialize)('stepping' stepTime: updateContentsFrom:)('stepping and presenter' step)('target access' acceptValueFromTarget: checkTarget informTarget isEtoyReadout readFromTarget setDecimalPlacesFromTypeIn: stringForNumericValue:)('testing' stepTime)!!UpdatingSimpleButtonMorph reorganize!('as yet unclassified' wordingSelector:)('stepping and presenter' step)('testing' stepTime wantsSteps)!!UpdatingMenuMorph reorganize!('initialization' updater:updateSelector:)('update' updateMenu)!!UpdatingMenuItemMorph reorganize!('MorphicExtras-e-toy support' adaptToWorld:)('enablement' enablement enablementSelector:)('stepping and presenter' arrangeToStartSteppingIn: step)('testing' stepTime)('wording' wordingArgument: wordingProvider:wordingSelector:)('world' updateContents)!!Unicode class reorganize!('*MinimalMorphic-accessing - displaying' printingDirection)('*MinimalMorphic-class methods' compoundTextFinalChar compoundTextSequence generalCategory generalCategoryComment parseUnicodeDataFrom:)('*MinimalMorphic-comments' blocks320Comment blocks320Comment2)('*MinimalMorphic-subencodings' isJapanese: isKorean: isSimplifiedChinese: isTraditionalChinese:)('accessing - displaying' isBreakableAt:in: scanSelector)('character classification' isDigit: isLetter: isLowercase: isUppercase:)('class methods' digitValue: isCharset leadingChar nextPutValue:toStream:withShiftSequenceIfNeededForTextConverterState: ucsTable)('instance creation' charFromUnicode: value:)('subencodings' isUnifiedKanji:)!!UnhandledError reorganize!('*MinimalMorphic-priv handling' defaultAction)('as yet unclassified' exception exception:)('priv handling' isResumable)!!UndefinedObject reorganize!('*MinimalMorphic-*eToys-*Morphic-customevents-class initialization' initialize)('*MinimalMorphic-3ds parser support' from3DS:)('*MinimalMorphic-changeset utilities' basicNewChangeSet: changeSetNamed:)('*MinimalMorphic-testing' ifNotNilDo:ifNil:)('*eToys-printing' newTileMorphRepresentative)('bottom context' canHandleSignal: handleSignal:)('class hierarchy' addSubclass: allSuperclassesDo: environment literalScannedAs:notifying: removeObsoleteSubclass: removeSubclass: subclassDefinerClass subclasses subclassesDoGently: subclassesDo: subclass:instanceVariableNames:classVariableNames:poolDictionaries:category: typeOfClass)('compiling' parserClass)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('dependents access' addDependent: release suspend)('predefined flaps' newSuppliesFlapFromQuads:positioning:)('printing' printOn: storeOn:)('scripts' scripts)('testing' haltIfNil ifNil: ifNil:ifNotNilDo: ifNil:ifNotNil: ifNotNilDo: ifNotNil: ifNotNil:ifNil: isEmptyOrNil isLiteral isNil notNil)!!UVersion reorganize!('attributes' components)('comparing' < = hash)('printing' printOn:)!!UUIDGenerator class reorganize!('class initialization' initialize startUp)('instance creation' default generateDefault)!!UUIDGenerator reorganize!('*MinimalMorphic-random seed' makeSeedFromSound)('accessors and mutators' randomCounter randomCounter: randomGenerator randomGenerator: semaphoreForGenerator semaphoreForGenerator:)('generator' generateOneOrZero generateRandomBitsOfLength:)('instance creation' generateBytes:forVersion: generateFieldsVersion4 initialize placeFields: setupRandom)('random seed' makeSeed makeUnixSeed)!!UUID reorganize!('*smbase-macsafe' asString36)('comparing' < <= > >=)('converting' asString asUUID: createStringStartingAt:for: printHexAt:to:)('initalize-release' initialize)('printing' printOn: printString)('system primitives' primMakeUUID)('testing' isNilUUID)!!UTF8TextConverter reorganize!('*MinimalMorphic-accessing' forceToEncodingTag forceToEncodingTag:)('*MinimalMorphic-friend' currentCharSize)('conversion' errorMalformedInput nextFromStream: nextPut:toStream:)('friend' leadingChar)!!URIAuthority reorganize!('accessing' host port userInfo)('printing' printOn:)('private' fromString:)!!URI class reorganize!('class initialization' initialize)('instance creation' absoluteFromString:scheme: extractSchemeFrom: fromString:)!!HierarchicalURI reorganize!('accessing' absolutePath authority baseName extension host path pathComponents port query resolveRelativeURI: userInfo)('directory operations' assureExistance)('printing' printSchemeSpecificPartOn:)('private' absoluteFromString:scheme: buildAbsolutePath: extractAuthority: extractQuery: extractSchemeSpecificPartAndFragment: relativeFromString: removeComponentDotDotPairs:)!!URI reorganize!('accessing' fragment resolveRelativeURI: scheme)('converting' asText asURI asUrl downloadUrl)('printing' printOn: printSchemeSpecificPartOn:)('retrieval' contentStream retrieveContentStream retrieveContents retrieveMIMEDocument)('testing' = hasRemoteContents hash isAbsolute isOpaque isRelative)('private' absoluteFromString:scheme: clientClass extractSchemeSpecificPartAndFragment: schemeSpecificPart)!!ConsoleUIManager reorganize!('*MinimalMorphic-default actions' unhandledErrorDefaultAction:)('accessing' console console:)('as yet unclassified' chooseDirectory:from: chooseFrom:lines:title: chooseFrom:values:lines:title: confirm: confirm:orCancel: displayProgress:at:from:to:during: edit:label:accept: fontFromUser: inform: informUserDuring: multiLineRequest:centerAt:initialAnswer:answerHeight: progressInitiationExceptionDefaultAction: request:initialAnswer: requestPassword:)('default actions' fileDoesNotExistsDefaultAction: fileExistsDefaultAction: lowSpaceWatcherDefaultAction syntaxErrorNotificationDefaultAction:)('display' checkForNewDisplaySize newDisplayDepthNoRestore: restoreDisplay restoreDisplayAfter:)!!UIManager reorganize!('*MinimalMorphic-ui requests' chooseDirectory: chooseFileMatching: displayProgress:at:from:to:during:)('default actions' blockCannotReturnDefaultAction: fileDoesNotExistsDefaultAction: lowSpaceWatcherDefaultAction progressInitiationExceptionDefaultAction: syntaxErrorNotificationDefaultAction: unhandledErrorDefaultAction: userInterruptDefaultAction)('display' checkForNewDisplaySize newDisplayDepthNoRestore: restoreDisplay restoreDisplayAfter:)('displayText' composeFormFor:)('events' onDebug:context:title:full: onEventSensorStartup onPrimitiveError onSnapshot)('settings' interactiveParserFor:)('ui requests' chooseDirectory chooseDirectoryFrom: chooseDirectory:from: chooseFileMatching:label: chooseFrom: chooseFrom:lines: chooseFrom:lines:title: chooseFrom:title: chooseFrom:values: chooseFrom:values:lines: chooseFrom:values:lines:title: chooseFrom:values:title: confirm: confirm:orCancel: debugContext:label:contents: edit: edit:label: edit:label:accept: fontFromUser: informUserDuring: informUser:during: inform: multiLineRequest:centerAt:initialAnswer:answerHeight: requestPassword: request: request:initialAnswer:)!!UGlobalInstaller reorganize!('accessing' selectedPackageVersions)('accessing dynamic' allPackages allPossibleUpgrades installedPackageVersions)('actions' doInstall planToInstallPackage: planToInstallPackageNamed: selectAllUpgrades)('initialize-release' initialize initializeSelectedPackageVersions)('testing' anyPackageSelected)('private' configuration: universe:)('private - package selection' allPackagesNeededToInstall:orIfImpossible: orderPackagesByDependency:)!!True reorganize!('*MinimalMorphic-printing' asBit)('controlling' and: ifFalse: ifFalse:ifTrue: ifTrue: ifTrue:ifFalse: or:)('logical operations' & not |)('printing' printOn:)!!TranslucentProgessMorph reorganize!('WiW support' morphicLayerNumber)('as yet unclassified' opaqueBackgroundColor: revealingStyle)('drawing' drawOn:)!!TransitionMorph reorganize!('change reporting' invalidate:areasOutside:)('drawing' areasRemainingToFill: drawDissolveOn: drawFrenchDoorOn: drawOn: drawPageBackOn: drawPageForwardOn: drawSlideAwayOn: drawSlideBorderOn: drawSlideBothOn: drawSlideOverOn: drawZoomFrameOn: drawZoomOn:)('initialization' completeReplacement initiateReplacement nSteps:stepTime: showTransitionFrom:to:in:whenStart:whenDone: startMorph:endMorph:startBlock:completionBlock:)('stepping and presenter' step)('testing' stepTime)('updating' changed)('private' effect:direction: prevStepFrom:to: stepFrom:to:)!!BOBTransformationMorph reorganize!('as yet unclassified' changeWorldBoundsToShow: drawSubmorphsOnREAL: extentFromParent: recomputeExtent useRegularWarpBlt:)('drawing' drawSubmorphsOn:)('geometry' extent:)('layout' layoutChanged)('private' adjustAfter:)!!TransformationMorph reorganize!('accessing' forwardDirection hasNoScaleOrRotation rotationDegrees: scaleFactor scaleToMatch:)('classification' isFlexMorph isRenderer)('drawing' drawOn:)('dropping/grabbing' grabTransform)('eToys-geometry eToy' heading:)('geometry' computeBounds extent: transformedBy:)('geometry eToy' degreesOfFlex forwardDirection: heading referencePosition setDirectionFrom: simplySetVisible: visible:)('initialization' asFlexOf: flexing:byTransformation:)('layout' layoutChanged)('menu' removeFlexShell)('naming' innocuousName)('printing' printOn:)('rotate scale and flex' rotationDegrees)('submorphs-add/remove' replaceSubmorph:by:)('testing' stepTime)('private' adjustAfter: chooseSmoothing)!!TransformMorph reorganize!('MorphicExtras-accessing' quickAddAllMorphs:)('accessing' angle angle: colorForInsets offset offset: scale scale: setOffset:angle:scale: smoothing smoothing: smoothingOff smoothingOn transform transform:)('change reporting' invalidRect:from:)('drawing' drawSubmorphsOn:)('dropping/grabbing' grabTransform)('event handling' transformFrom:)('geometry' layoutChanged localSubmorphBounds localVisibleSubmorphBounds numberOfItemsInView numberOfItemsPotentiallyInView)('geometry testing' containsPoint:)('halos and balloon help' wantsHaloFromClick)('initialization' defaultColor initialize)('layout' fullBounds submorphBounds)('menu' addCustomMenuItems:hand:)('private' privateFullMoveBy:)!!TransferMorphAnimation reorganize!('accessing' transferMorph)('initialization' on:)('update' updateAnimation)('updating' update:)!!TransferMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' initIcons)('instance creation' withPassenger: withPassenger:from:)!!TransferMorph reorganize!('accessing' dragTransferType: draggedMorph draggedMorph: dropNotifyRecipient dropNotifyRecipient: move passenger passenger: shouldCopy shouldCopy: source source:)('drag and drop' dragTransferType)('dropping/grabbing' aboutToBeGrabbedBy: justDroppedInto:event: result: result:from: undoGrabCommand)('event handling' keyStroke:)('initialization' defaultColor initialize)('stepping and presenter' step stepTime)('submorphs-add/remove' delete)('private' animationForMoveSuccess: initDraggedMorph privateFullMoveBy: updateCopyIcon)!!TraitExclusion reorganize!('*MinimalMorphic-accessing' methodReferencesInCategory:)('accessing' exclusions exclusions:)('composition' addExclusionOf:)('copying' copy copyTraitExpression)('enquiries' allSelectors collectMethodsFor:into:)('printing' printOn:)('testing' isEmpty)!!TraitTransformation reorganize!('*MinimalMorphic-enquiries' traitTransformations)('accessing' normalized subject subject:)('accessing parallel hierarchy' isMeta theNonMetaClass)('browser support' sourceCodeTemplate)('composition' addExclusionOf: removeAlias: + - @)('converting' asTraitComposition)('copying' copy copyTraitExpression)('enquiries' aliasesForSelector: allAliasesDict allSelectors changedSelectorsComparedTo: collectMethodsFor:into: selectors trait)('printing' printOn:)('testing' isEmpty)('private' addCompositionOnLeft: addOnTheLeft:)!!Trait class reorganize!('*MinimalMorphic-instance creation' defaultEnvironment)('instance creation' named:uses:category: named:uses:category:env: new)('printing' newTemplateIn:)!!Trait reorganize!('*MinimalMorphic-accessing parallel hierarchy' classTrait:)('*monticello' asClassDefinition classDefinitions)('*ob-standard-converting' asClassSideNode asNode)('accessing' basicCategory basicCategory: environment environment: name name: requirements)('accessing parallel hierarchy' baseTrait classTrait hasClassTrait isBaseTrait isClassTrait)('compiling' binding)('copying' copy)('fileIn/Out' fileOutAsHtml: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing:)('initialize-release' initialize name:traitComposition:methodDict:localSelectors:organization: obsolete removeFromSystem removeFromSystem:)('organization' category category:)('testing' isObsolete)('private' applyChangesOfNewTraitCompositionReplacing: isValidTraitName: rename: setName:andRegisterInCategory:environment:)!!ClassTrait reorganize!('*MinimalMorphic-accessing parallel hierarchy' classTrait:)('*MinimalMorphic-initialize' baseClass:traitComposition:methodDict:localSelectors:organization:)('*monticello' asMCDefinition)('*ob-standard-converting' asClassSideNode asNode)('accessing' name)('accessing parallel hierarchy' baseTrait baseTrait: classTrait hasClassTrait isBaseTrait isClassTrait)('compiling' compile:classified:withStamp:notifying:logSource:)('composition' assertConsistantCompositionsForNew: noteNewBaseTraitCompositionApplied: uses:)('copying' copy)('enquiries' aliasesForSelector: allAliasesDict changedSelectorsComparedTo: collectMethodsFor:into: subject trait)('fileIn/Out' definitionST80)('initialize' initializeFrom: initializeWithBaseTrait: traitComposition:methodDict:localSelectors:organization:)!!TraitDescription reorganize!('*MinimalMorphic-accessing parallel hierarchy' isInstanceSide)('*MinimalMorphic-compiling' reformatAll)('*MinimalMorphic-copying' copy:from: copyAll:from:)('*MinimalMorphic-fileIn/Out' commentFollows methodsFor:priorSource:inFile: printCategoryChunk:on:)('*MinimalMorphic-organization' methodReferencesInCategory:)('*MinimalMorphic-private' logMethodSource:forMethodWithNode:inCategory:withStamp:notifying:)('*MinimalMorphic-testing' isTestCase)('*ob-standard-converting' asCommentNode)('accessing' traitVersion version)('accessing class hierarchy' subclasses)('accessing comment' classCommentBlank comment comment: comment:stamp: hasComment)('accessing method dictionary' addAndClassifySelector:withMethod:inProtocol:notifying: addSelectorSilently:withMethod: addSelector:withMethod:notifying: allMethodsInCategory: noteAddedSelector:meta: removeCategory: removeSelector:)('accessing parallel hierarchy' baseTrait classSide classTrait hasClassTrait instanceSide isBaseTrait isClassSide isClassTrait isMeta)('class compatibility' theMetaClass theNonMetaClass)('compiling' acceptsLoggingOfCompilation compileSilently:classified: compileSilently:classified:notifying: compile:classified: compile:classified:notifying: compile:classified:withStamp:notifying: compile:classified:withStamp:notifying:logSource: compile:notifying: doneCompiling noteCompilationOf:meta: reformatMethodAt: wantsChangeSetLogging wantsRecompilationProgressReported)('composition' addExclusionOf: + - @)('converting' asTraitComposition)('copying' copyAllCategoriesFrom: copyAll:from:classified: copyCategory:from: copyCategory:from:classified: copyMethodDictionaryFrom: copyTraitExpression copy:from:classified:)('enquiries' aliasesForSelector: allAliasesDict changedSelectorsComparedTo: collectMethodsFor:into: subject trait)('fileIn/Out' classComment: classComment:stamp: commentStamp: commentStamp:prior: definition definitionST80 fileOut fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on:moveSource:toFile: fileOutChangedMessages:on: fileOutChangedMessages:on:moveSource:toFile: fileOutMethod: fileOutMethod:asHtml: fileOutOn: fileOutOn:moveSource:toFile: fileOutOrganizationOn: methods methodsFor: methodsFor:stamp: methodsFor:stamp:prior: moveChangesTo: printCategoryChunk:on:priorMethod: printCategoryChunk:on:withStamp:priorMethod: printCategoryChunk:withStamp:on: printMethodChunk:withPreamble:on:moveSource:toFile: putClassCommentToCondensedChangesFile:)('initialize-release' forgetDoIts obsolete)('organization' category category: organization organization: reorganize whichCategoryIncludesSelector: zapOrganization)('organization updating' applyChangesOfNewTraitCompositionReplacing: noteRecategorizedSelectors:oldComposition: noteRecategorizedSelector:from:to: notifyOfRecategorizedSelector:from:to: updateOrganizationSelector:oldCategory:newCategory:)('printing' printOnStream: printOn: storeOn:)('testing' isUniClass)('users notification' notifyUsersOfChangedSelectors: notifyUsersOfRecategorizedSelector:from:to:)('private' addCompositionOnLeft: addOnTheLeft: errorCategoryName linesOfCode spaceUsed)!!TraitBehavior reorganize!('*MinimalMorphic-*tools-browser' browse)('*MinimalMorphic-accessing method dictionary' addSelectorSilently:withMethod: formalParametersAt:)('*MinimalMorphic-newcompiler' parseScope)('*MinimalMorphic-send caches' sendCaches: superRequirements)('*MinimalMorphic-testing method dictionary' fullyImplementsVocabulary: implementsVocabulary: isDisabledSelector: isProvidedSelector:)('*MinimalMorphic-traits' removeFromTraitCompositionOfUsers traitTransformations)('*Traits' providedSelectors)('accessing class hierarchy' withAllSuperclasses)('accessing method dictionary' allSelectors basicLocalSelectors basicLocalSelectors: changeRecordsAt: classAndMethodFor:do:ifAbsent: compiledMethodAt: compiledMethodAt:ifAbsent: compress compressedSourceCodeAt: deregisterLocalSelector: firstCommentAt: firstPrecodeCommentFor: formalHeaderPartsFor: lookupSelector: methodDict methodDictionary methodDictionary: methodDict: methodHeaderFor: methodsDo: precodeCommentOrInheritedCommentFor: registerLocalSelector: removeSelector: selectors selectorsAndMethodsDo: selectorsDo: selectorsWithArgs: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: standardMethodHeaderFor: ultimateSourceCodeAt:ifAbsent: zapAllMethods >>)('adding/removing methods' addSelector:withMethod: addSelector:withMethod:notifying: basicAddSelector:withMethod: basicRemoveSelector: localSelectors methodDictAddSelectorSilently:withMethod: pureAddSelectorSilently:withMethod: pureRemoveSelector: removeSelectorSilently:)('as yet unclassified' asCommentNode)('class compatibility' allInstVarNames allSubclassesDo: allSuperclasses allSuperclassesDo: inheritsFrom: instSize instVarNames subclassDefinerClass whichClassIncludesSelector:)('compiling' binding bindingOf: compileAll compileAllFrom: compilerClass compile: compile:classified:notifying:trailer:ifFail: compile:notifying: decompilerClass decompile: defaultMethodTrailer evaluatorClass parserClass recompileChanges recompileNonResidentMethod:atSelector:from: recompile: recompile:from: sourceCodeTemplate)('copying' copy copyOfMethodDictionary deepCopy)('initialization' emptyMethodDictionary obsolete)('initialize-release' forgetDoIts initialize)('naming' environment name)('printing' defaultNameStemForInstances literalScannedAs:notifying: longPrintOn: prettyPrinterClass storeLiteral:on:)('remove me later' classPool sharedPools)('send caches' clearSendCaches hasRequiredSelectors requiredSelectors requirements sendCaches setRequiredStatusOf:to: updateRequires)('testing' canZapMethodDictionary includesBehavior: isTrait)('testing method dictionary' canUnderstand: hasMethods includesLocalSelector: includesSelector: isAliasSelector: isLocalAliasSelector: thoroughWhichSelectorsReferTo:special:byte: whichSelectorsReferTo: whichSelectorsReferTo:special:byte:)('traits' addExclusionOf:to: addToComposition: addTraitSelector:withMethod: addUser: applyChangesOfNewTraitCompositionReplacing: classesComposedWithMe ensureLocalSelectors hasTraitComposition noteChangedSelectors: notifyUsersOfChangedSelectors: notifyUsersOfChangedSelector: purgeLocalSelectors removeAlias:of: removeFromComposition: removeTraitSelector: removeUser: selfSentSelectorsFromSelectors: setTraitCompositionFrom: setTraitComposition: traitComposition traitCompositionIncludes: traitCompositionString traitComposition: traitOrClassOfSelector: traitsProvidingSelector: updateMethodDictionarySelector: users)('user interface' crossReference)('private' spaceUsed)!!TopRightGripMorph reorganize!('accessing' gripLayoutFrame ptName resizeCursor)('drawing' drawOn:)('target resize' apply:)!!TopLeftGripMorph reorganize!('accessing' gripLayoutFrame resizeCursor)('drawing' drawOn:)('target resize' apply: ptName)!!ToolSet class reorganize!('accessing' askForDefault)('browsing' browse:selector: browseChangeSetsWithClass:selector: browseHierarchy:selector: browseMessageNames: browseMessageSet:name:autoSelect: browseVersionsOf:selector: openChangedMessageSet: openClassListBrowser:title:)('debugging' debug:context:label:contents:fullView: debugContext:label:contents: debugError: debugSyntaxError: interrupt:label:)('inspecting' basicInspect: explore: inspect: inspect:label: inspectorClassOf:)('menu' menuItems)!!PluggableWindowSpec reorganize!('accessing' closeAction closeAction: extent extent: label label:)('building' buildWith:)!!PluggableTextSpec reorganize!('accessing' color color: getText getText: menu menu: selection selection: setText setText:)('building' buildWith:)!!PluggableMultiSelectionListSpec reorganize!('accessing' getSelectionList getSelectionList: setSelectionList setSelectionList:)('building' buildWith:)!!PluggableMenuSpec reorganize!('accessing' items label label: model model:)('construction' add:action: add:target:selector:argumentList: addMenuItem addSeparator buildWith: newMenuItem)!!ToolBuilderSpec reorganize!('accessing' name name:)('building' buildWith:)!!ToolBuilder class reorganize!('accessing' default default: isActiveBuilder)('instance creation' build: open: open:label:)!!MorphicToolBuilder reorganize!('building' buildPluggableMenu: buildPluggableMenuItem:)('opening' close: open: open:label: runModal:)('pluggable widgets' buildPluggableActionButton: buildPluggableButton: buildPluggableInputField: buildPluggableList: buildPluggableMultiSelectionList: buildPluggablePanel: buildPluggableText: buildPluggableTree: buildPluggableWindow:)('private' add:to: asFrame: register:id: setFrame:in: setLayout:in: widgetAt:ifAbsent:)!!MVCToolBuilder reorganize!('defaults' pluggableTreeSpec)('opening' close: open: open:label: runModal:)('pluggable widgets' buildPluggableButton: buildPluggableList: buildPluggablePanel: buildPluggableText: buildPluggableWindow:)('private' asWindow: register:id: setFrame:in: setLayout:in: widgetAt:ifAbsent:)!!ToolBuilder reorganize!('accessing' parent parent: widgetAt: widgetAt:ifAbsent:)('building' build: buildAll:in:)('defaults' pluggableActionButtonSpec pluggableButtonSpec pluggableCheckBoxSpec pluggableInputFieldSpec pluggableListSpec pluggableMenuSpec pluggableMultiSelectionListSpec pluggablePanelSpec pluggableRadioButtonSpec pluggableTextSpec pluggableTreeSpec pluggableWindowSpec)('initialize' initialize)('opening' close: open: open:label: runModal:)('widgets optional' buildPluggableActionButton: buildPluggableCheckBox: buildPluggableInputField: buildPluggableMultiSelectionList: buildPluggableRadioButton:)('widgets required' buildPluggableButton: buildPluggableList: buildPluggablePanel: buildPluggableText: buildPluggableTree: buildPluggableWindow:)!!TinyPaint reorganize!('event handling' handlesMouseDown: mouseDown: mouseMove:)('initialization' defaultColor initialize)('menu' addCustomMenuItems:hand: brushColor: clear fill setPenColor: setPenSize)!!TimeStamp class reorganize!('*monticello-instance creation' fromMethodTimeStamp: fromString: readFrom:)('ansi protocol' now)('squeak protocol' current)!!TimeProfileBrowser reorganize!('accessing' selectedClass selectedClass: selectedSelector selectedSelector: tally tally:)('message list' selectedMessage)('private' initializeMessageList: messageListKey:from: messageListMenu:shifted: runBlock: runBlock:pollingEvery: runProcess:forMilliseconds:pollingEvery: setClassAndSelectorIn:)!!Time class reorganize!('*monticello' fromString:)('ansi protocol' now)('benchmarks' benchmarkMillisecondClock benchmarkPrimitiveResponseDelay)('clock' secondsWhenClockTicks)('general inquiries' condenseBunches: humanWordsForSecondsAgo: millisecondClockValue millisecondsToRun: namesForTimes:)('smalltalk-80' dateAndTimeFromSeconds: dateAndTimeNow fromSeconds: new primMillisecondClock primSecondsClock readFrom: totalSeconds)('squeak protocol' current hour:minute:second: hour:minute:second:nanoSecond: midnight milliseconds:since: millisecondsSince: noon seconds: seconds:nanoSeconds:)!!TickIndicatorMorph reorganize!('accessing' color: isTicking isTicking: stepTime:)('drawing' drawOn:)('geometry' extent:)('initialization' defaultBorderColor defaultColor initialize)('stepping and presenter' stepAt:)('testing' stepTime wantsSteps)('private' privateMoveBy:)!!ThumbnailImageMorph reorganize!('accessing' extent: newImage: newThumbnail: popupFeatureString target: togglePopupFeature yesNoStringFor:)('event handling' handlesMouseDown: mouseDown: mouseUp:)('initialization' initialize initializeWithDisplay)('menu commands' addCustomMenuItems:hand: addPopupMenuItems:hand:)!!ThreePhaseButtonMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' checkBox radioButton)!!ThreePhaseButtonMorph reorganize!('MorphicExtras-accessing' authorModeOwner: dragIfAuthoring:)('MorphicExtras-copying' updateReferencesUsing:)('MorphicExtras-e-toy support' adaptToWorld:)('accessing' actionSelector actionSelector: arguments arguments: offImage offImage: onImage onImage: pressedImage pressedImage: state: target target:)('button' doButtonAction)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('event handling' doButtonAction: handlesMouseDown: handlesMouseStillDown: mouseDown: mouseMove: mouseStillDown: mouseUp:)('geometry' extent:)('initialization' initialize)('printing' printOn:)('stepping and presenter' step)('submorphs-add/remove' actWhen:)('testing' isOn stepTime wantsSteps)!!ThirtyTwoBitRegister reorganize!('accessing' asInteger hi load: loadFrom:at: low)('accumulator ops' += bitAnd: bitInvert bitOr: bitXor: leftRotateBy:)('copying' copy)('printing' printOn:)!!TheWorldMenu reorganize!('MorphicExtras-*morphic-Postscript Canvases' printWorldOnFile)('MorphicExtras-action' toggleFlapSuppressionInProject)('MorphicExtras-construction' myMenuColor)('MorphicExtras-mechanics' adaptToWorld:)('Tools' browseRecentLog inspectWorldModel openChangeSorter1 openChangeSorter2 openMessageNames openProcessBrowser openSelectorBrowser startThenBrowseMessageTally)('action' commandKeyTypedIntoMenu: doMenuItem:with: menuColorString projectThumbnail roundedCornersString setGradientColor soundEnablingString staggerPolicyString toggleWindowPolicy)('commands' beIsolated changeBackgroundColor cleanUpWorld garbageCollect loadProject lookForSlips mvcProjectsAllowed newMorphOfClass:event: openBrowser openFileDirectly openFileList openMVCProject openMorphicProject openTranscript openWorkspace projectForMyWorld propagateChanges quitSession readMorphFromAFile saveAndQuit saveWorldInFile setDisplayDepth splitNewMorphList:depth: startMessageTally vmStatistics worldMenuHelp)('construction' alphabeticalMorphMenu appearanceMenu buildWorldMenu changesMenu colorForDebugging: debugMenu fillIn:from: helpMenu newMorph openMenu projectMenu remoteMenu)('eToys-action' uniTilesClassicString)('eToys-scripting' adaptedToWorld:)('mechanics' menu: world:project:hand:)('menu' addGestureHelpItemsTo:)('popups' appearanceDo changesDo debugDo doPopUp: helpDo openWindow projectDo remoteDo standardFontDo)('windows & flaps menu' suppressFlapsString windowsDo windowsMenu)!!TheWorldMainDockingBar class reorganize!('as yet unclassified' localeChanged)('class initialization' initialize)('events' updateInstances updateInstances:)('instance creation' instance new)('preferences' showWorldMainDockingBarPreferenceChanged)('timestamping' setTimeStamp timeStamp)!!TheWorldMainDockingBar reorganize!('construction' createDockingBar fillDockingBar: fillMenuItemsBar: fillNavigatorOn: openDockingBar)('construction - submenus' configurationMenu helpMenu projectMenu squeakMenu)('menu actions' activateObjectsTool appearance changeSoundVolume clearTurtleTrails doNewPainting eToyVocabularySummary exitFromFullScreen findAProject findAnyFile hideAllViewers hideAllViewersIn: importFile jumpToProject makeNewDrawing moveObjectsOnscreen newProject nextProject objectCatalog objectFromPasteBuffer open preferences previousProject publishProject publishStyle:forgetURL:withRename: purgeUndoRecords quit save saveAndQuit saveAs saveAsNewVersion setColorTheme setLanguage setWorldColor showAllViewers showWorldMainDockingBarString suppressFlapsString switchToExpertMode switchToFullScreen switchToNoviceMode toggleFullScreen toggleShowWorldMainDockingBar unhideHiddenObjects updateFromServer viewObjectsHierarchy viewSelectedObject windows)('private' createMenuItem:on: selectorForWording: updateIfNeeded: world worldMenu)('private - buttons' colorOffEvent:for: colorOnEvent:for: createButtonIcon:help:selector: createButtonIcon:selector: offColor onColor perform:event:for:)('private - icons' backIcon forwardIcon fullScreenIcon jumpIcon loadProjectIcon objectCatalogIcon objectsIcon openIcon paintIcon projectIcon publishIcon volumeIcon)!!TextSqkProjectLink reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor:)('as yet unclassified' analyze: writeScanOn:)!!TextSqkPageLink reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor:)('as yet unclassified' writeScanOn:)!!TextURL reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor:)('as yet unclassified' analyze: info url: writeScanOn:)!!TextStyle class reorganize!('*MinimalMorphic-TextConstants access' fontSizesFor: fontWidthsFor:)('*MinimalMorphic-instance creation' changeDefaultFontSizeBy: initDefaultFontsAndStyle)('*MinimalMorphic-mime file in/out' collectionFromCompressedMIMEString: replaceFontsIn:with: writeSF2FamilyNamed:inDirectory:toChangeSet: writeStyle:named:toChangeSet:)('*MinimalMorphic-user interface' chooseTTCFontSize: emphasisMenuForFont:target:selector:highlight: fontMenuForStyle:target:selector: fontMenuForStyle:target:selector:highlight: fontSizeSummary importFontsFromStyleFiles modalMVCStyleSelectorWithTitle: modalStyleSelectorWithTitle: mvcPromptForFont:andSendTo:withSelector: promptForFont:andSendTo:withSelector: promptForFont:andSendTo:withSelector:highlight:)('*MinimalMorphic-utilities' pixelsPerInch:)('TextConstants access' actualTextStyles defaultFamilyNames fontArrayForStyle: fontPointSizesFor: knownTextStyles knownTextStylesWithoutDefault pointSizesFor:)('class initialization' initialize initializeStyleDecoder styleDecoder)('constants' default defaultFont named: setDefault:)('instance creation' fontArray: new)('mime file in/out' looseFontsFromFamily: replaceStyle:with:)('utilities' decodeStyleName: pixelsPerInch pixelsToPoints: pointsToPixels:)!!TextStyle reorganize!('*MinimalMorphic-accessing' alignmentSymbol fontNamesAndSizes)('*MinimalMorphic-fonts and font indexes' addLinedIfTT addNewFontSize: addNewFontSizeDialog: consistOnlyOf: discardOtherSizes flushFonts)('*MinimalMorphic-make arrows' makeArrows)('*MinimalMorphic-mime file in/out' compressedMIMEEncodedStream)('*MinimalMorphic-private' consolidate marginTabAt:side:)('*MinimalMorphic-tabs and margins' clearIndents)('Disk I/O' storeDataOn: veryDeepCopyWith:)('accessing' alignment alignment: baseline baseline: centered defaultFont firstIndent firstIndent: fontNamed: fontNames fontNamesWithPointSizes fonts isTTCStyle justified leading leading: leftFlush lineGrid lineGrid: pointSizes printOn: restIndent restIndent: rightFlush rightIndent rightIndent:)('comparing' = hash species)('default font' defaultFontIndex defaultFontIndex:)('fonts and font indexes' collectionFromFileNamed: fontIndexOf: fontIndexOfPointSize: fontIndexOfSize: fontOfPointSize: fontOfSize:)('tabs and margins' leftMarginTabAt: nextTabXFrom:leftMargin:rightMargin: rightMarginTabAt: tabWidth)('private' fontArray fontAt: fontAt:put: gridForFont:withLead: newFontArray:)!!TextRequestor reorganize!('accessing' model:)('request' getCurrentText getModel)!!TextPrinter class reorganize!('*MinimalMorphic-paper sizes' paperSize10x14 paperSize11x17 paperSizeA3 paperSizeA5 paperSizeB4 paperSizeB5 paperSizeCSheet paperSizeDSheet paperSizeESheet paperSizeEnvelope10 paperSizeEnvelope11 paperSizeEnvelope12 paperSizeEnvelope14 paperSizeEnvelope9 paperSizeEnvelopeB4 paperSizeEnvelopeB5 paperSizeEnvelopeB6 paperSizeEnvelopeC3 paperSizeEnvelopeC4 paperSizeEnvelopeC5 paperSizeEnvelopeC6 paperSizeEnvelopeC65 paperSizeFanfoldGerman paperSizeFanfoldLegalGerman paperSizeFanfoldUS paperSizeFolio paperSizeLegal paperSizeLetter paperSizeNote paperSizeTabloid)('accessing' defaultPaperSize defaultPaperSize: defaultTextPrinter)('class initialization' initialize)('paper sizes' mm2in: paperSizeA4)!!TextPrinter reorganize!('*MinimalMorphic-accessing' bestColor goodColor)('*MinimalMorphic-other' mm2pix: pix2mm:)('accessing' blackAndWhite columns columns: documentTitle documentTitle: landscape landscape: noFooter noFooter: noHeader noHeader: offsetRect offsetRect: paperSize paperSize: resolution resolution:)('footer' footerHeight footerParagraph printFooter:)('formatting' columnRect: columnSkip columnWidth formatColumn:startingWith: formatPage:startingWith: textArea textWidth)('header' headerHeight headerParagraph printHeader:)('initialize' defaultPaperSize defaultResolution initialize)('other' in2mm: in2pix: mm2in: pix2in:)('printing' flushPage printParagraph printText:)('private' pixelSize realPaperSize)!!TextOnCurve reorganize!('access' extent textOwner:)('as yet unclassified' composeLinesFrom:withLines:atY: pointInLine:forDestPoint:segStart:segAngle: releaseCachedState textSegmentsDo: warpMapForDepth:withTransparentFor:)('composition' composeAll composeLinesFrom:to:delta:into:priorLines:atY:)('display' asParagraphForPostscript displayOn:using:at:)('selection' characterBlockAtPoint: containsPoint: selectionRectsFrom:to:)('private' moveBy:)!!TextMorphForEditView reorganize!('accept/cancel' acceptOnCR:)('debug and other' tempCommand)('drawing' drawNullTextOn:)('edit view' editView setEditView:)('editing' acceptContents acceptOnCR cancelEdits handleInteraction:fromEvent: hasUnacceptedEdits:)('event handling' autoScrollView: keyStroke: keyboardFocusChange: mouseDown: mouseMove: mouseUp: preferredKeyboardPosition wouldAcceptKeyboardFocusUponTab)('initialization' initialize)('macpal' flash)('miscellaneous' selectAll)('objects from disk' convertToCurrentVersion:refStream:)('private' updateFromParagraph)!!TextMorphEditor reorganize!('accessing' morph morph: setSearch: transformFrom: userHasEdited)('as yet unclassified' totalTextHeight visibleHeight)('attributes' changeEmphasisOrAlignment changeStyle changeTextFont offerFontMenu textAlignment textAlignmentSymbol)('binding' bindingOf:)('controlling' controlInitialize controlTerminate)('current selection' select selectAndScroll)('displaying' flash)('editing keys' changeEmphasis: chooseColor inspectIt: tempCommand:)('events' mouseDown: mouseMove: mouseUp:)('menu commands' offerMenuFromEsc:)('menu messages' accept align cancel find mvcRedisplay zapSelectionWith:)('multi level undo' addEditCommand: closeTypeIn editHistory isInTypeRun multiRedo multiRedo: multiRedoWithCount: multiUndo multiUndoError: multiUndoWithCount: noUndoReplace:with: undo)('mvc compatibility' selectAndScrollToTop selectForTopFrom:to: storeSelectionInParagraph userHasNotEdited)('new selection' selectFrom:to:)('nonediting/nontyping keys' raiseContextMenu:)('scrolling' scrollBy: updateMarker)('typing support' dispatchOnCharacter:with: readKeyboard)('private' againOrSame:)!!TextMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('connectorstext-parts bin' boldAuthoringPrototype)('eToys-parts bin' exampleBackgroundField)('new-morph participation' includeInNewMorphMenu)('parts bin' borderedPrototype exampleBackgroundLabel fancyPrototype)('scripting' authoringPrototype defaultNameStemForInstances)!!StringMorphEditor reorganize!('display' initialize)('drawing' drawOn:)('event handling' keyStroke: keyboardFocusChange:)!!TextMorph reorganize!('MorphicExtras-accessing' getCharacters)('MorphicExtras-copying' updateReferencesUsing:)('MorphicExtras-printing' fullPrintOn:)('accessing' asText autoFit: backgroundColor backgroundColor: borderWidth: contents contents: contents:wrappedTo: contentsAsIs: contentsWrapped: crAction crAction: cursor cursorWrapped: editor elementCount font: fontName:pointSize: fontName:size: getFirstCharacter getLastCharacter hasTranslucentColor isAutoFit isWrapped margins margins: newContents: selectAll selectFrom:to: selection setCharacters: setFirstCharacter: setLastCharacter: text textAlignment textAlignmentSymbol textColor textColor: textStyle userString wrapFlag:)('alignment' centered justified leftFlush rightFlush)('anchors' adjustTextAnchor: anchorMorph:at:type:)('caching' loadCachedState releaseCachedState)('change reporting' ownerChanged)('classification' isTextMorph)('containment' avoidsOcclusions fillingOnOff fillsOwner fillsOwner: occlusionsOnOff recognizerArena setContainer:)('copying' copy veryDeepFixupWith: veryDeepInner:)('drawing' areasRemainingToFill: debugDrawLineRectsOn: drawNullTextOn: drawOn: drawOnTest:)('eToys-card & stack' newContents:fromCard: setNewContentsFrom:)('eToys-card in a stack' couldHoldSeparateDataForEachInstance)('eToys-e-toy support' configureForKids getNumericValue setNumericValue:)('eToys-player' currentDataValue)('editing' acceptContents acceptOnCR cancelEdits chooseAlignment chooseEmphasis chooseEmphasisOrAlignment chooseFont chooseStyle enterClickableRegion: handleEdit: handleInteraction:fromEvent: hasUnacceptedEdits: passKeyboardFocusTo: preferredKeyboardPosition setCompositionWindow xeqLinkText:withParameter:)('event handling' getMenu: handlesKeyboard: handlesMouseDown: hasFocus keyStroke: keyboardFocusChange: mouseDown: mouseMove: mouseUp: wouldAcceptKeyboardFocusUponTab yellowButtonActivity yellowButtonActivity:)('events-processing' handleKeystroke: handleMouseMove:)('geometry' bounds container defaultLineHeight extent: minimumExtent privateMoveBy: textBounds)('geometry testing' containsPoint:)('initialization' beAllFont: defaultColor initialize setTextStyle: string:fontName:size: string:fontName:size:wrap:)('layout' acceptDroppingMorph:event:)('linked frames' addPredecessor: addSuccessor: firstCharacterIndex firstInChain isLinkedTo: lastCharacterIndex predecessor recomposeChain startingIndex successor withSuccessorsDo:)('menu' addCustomMenuItems:hand: autoFitOnOff autoFitString changeMargins: followCurve holderForCharacters reverseCurveDirection setCurveBaseline: shiftedYellowButtonActivity wrapOnOff wrapString)('multi level undo' editHistory editHistory:)('objects from disk' convertToCurrentVersion:refStream: fixUponLoad:seg:)('scripting access' getAllButFirstCharacter insertCharacters: setAllButFirstCharacter:)('submorphs-add/remove' addMorphFront:fromWorldPosition: delete goBehind)('testing' basicType)('visual properties' fillStyle fillStyle:)('private' adjustLineIndicesBy: clippingRectangle composeToBounds compositionRectangle editorClass fit installEditor installEditorToReplace: paragraph paragraphClass predecessor:successor: predecessorChanged privateOwner: releaseEditor releaseParagraph releaseParagraphReally removedMorph: selectionChanged setDefaultContentsIfNil setPredecessor: setSuccessor: text:textStyle: text:textStyle:wrap:color:predecessor:successor: updateFromParagraph)!!TextMessageLink reorganize!('*MinimalMorphic-acting' actOnClickFor:)('acting' mayActOnClick)('appearance' emphasizeScanner:)('initialization' initialize:)!!TextLink reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor:)('as yet unclassified' analyze: analyze:with: classAndMethod: info validate: writeScanOn:)!!TextLine reorganize!('accessing' baseline bottom bottomRight first internalSpaces internalSpaces: last left leftMargin leftMargin: leftMarginForAlignment: lineHeight paddingWidth paddingWidth: rectangle rectangle: right rightMargin setRight: stop: top topLeft width)('comparing' = hash)('printing' printOn:)('scanning' justifiedPadFor: justifiedTabDeltaFor:)('updating' moveBy: slide: slideIndexBy:andMoveTopTo:)('private' firstIndex:lastIndex: internalSpaces:paddingWidth: lineHeight:baseline:)!!TextFieldMorph class reorganize!('eToys-instance creation' exampleBackgroundField)('scripting' authoringPrototype)!!TextFieldMorph reorganize!('eToys-card & stack' setNewContentsFrom:)('eToys-card in a stack' couldHoldSeparateDataForEachInstance)('eToys-player' currentDataValue)('initialization' defaultColor initialize)('just like textMorph' append: contents contents: fit fontName:size: lineCount prepend:)!!TextDoIt reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor:)('as yet unclassified' analyze: evalString: info writeScanOn:)!!ClassDiffBuilder reorganize!('initialize' split:)('printing' printPatchSequence:on:)!!TextDiffBuilder reorganize!('*MinimalMorphic-creating patches' buildPatchSequence)('creating patches' buildDisplayPatch buildReferenceMap collectRunFrom:startingWith:into: detectShiftedRuns generatePatchSequence incorporateAddsInto: incorporateMatchesInto: incorporateRemovalsInto: processDiagonals processDiagonalsFrom: processShiftedRuns validateRuns:)('initialize' destString: formatLine: from:to: sourceString: split:)('printing' printPatchSequence:on:)('testing' hasMultipleMatches)('private' attributesOf: pointEqualBlock pointHashBlock remove:from: split:by: splitCharacter stringHashBlock)!!MacRomanTextConverter reorganize!('*MinimalMorphic-friend' currentCharSize)('conversion' nextFromStream: nextPut:toStream:)('friend' leadingChar)!!Latin1TextConverter reorganize!('*MinimalMorphic-friend' currentCharSize)('conversion' nextFromStream: nextPut:toStream:)!!CompoundTextConverter reorganize!('*MinimalMorphic-friend' currentCharSize)('*MinimalMorphic-query' accepts:)('conversion' nextFromStream: nextPut:toStream:)('friend' emitSequenceToResetStateIfNeededOn: restoreStateOf:with: saveStateOf:)('initialize-release' initialize)('private' nextPutValue:toStream:withShiftSequenceIfNeededForLeadingChar: parseShiftSeqFromStream:)!!TextConverter reorganize!('*MinimalMorphic-friend' currentCharSize)('*MinimalMorphic-query' accepts:)('conversion' nextFromStream: nextPut:toStream:)('friend' emitSequenceToResetStateIfNeededOn: restoreStateOf:with: saveStateOf:)!!TextColor reorganize!('accessing' color color:)('comparing' = hash)('html' closeHtmlOn: openHtmlOn:)('printing' printOn:)('scanning' dominates: emphasizeScanner: writeScanOn:)!!TextAnchor reorganize!('accessing' anchoredMorph anchoredMorph: couldDeriveFromPrettyPrinting mayBeExtended)('comparing' = hash)('visiting' emphasizeScanner:)!!TextAlignment class reorganize!('as yet unclassified' alignmentSymbol:)('instance creation' centered justified leftFlush rightFlush)!!PluggableTextAttribute reorganize!('*MinimalMorphic-clicking' actOnClickFor:)('initialization' evalBlock:)!!TextAttribute reorganize!('*MinimalMorphic-as yet unclassified' actOnClickFor: actOnClickFor:in: actOnClickFor:in:at: actOnClickFor:in:at:editor: oldEmphasisCode:)('as yet unclassified' anchoredMorph couldDeriveFromPrettyPrinting dominatedByCmd0 dominates: emphasisCode emphasizeScanner: forFontInStyle:do: mayActOnClick mayBeExtended reset set)('html' closeHtmlOn: openHtmlOn:)('testing' isKern)!!Text reorganize!('*MinimalMorphic-*Morphic-converting' asMorph asStringMorph asTextMorph)('*MinimalMorphic-accessing' embeddedMorphsFrom:to: runs:)('*MinimalMorphic-comparing' howManyMatch:)('*MinimalMorphic-converting' removeAttributesThat:replaceAttributesThat:by:)('*MinimalMorphic-emphasis' fontNumberAt:)('*Network' asUrl)('accessing' append: at: at:put: embeddedMorphs findString:startingAt: findString:startingAt:caseSensitive: lineCount prepend: rangeOf:startingAt: replaceFrom:to:with: size string)('attributes' askIfAddStyle:req: basicType couldDeriveFromPrettyPrinting unembellished)('comparing' hash isText =)('converting' asDisplayText asNumber asOctetStringText asParagraph asString asStringOrText asText asUrlRelativeTo: isoToSqueak macToSqueak replaceFrom:to:with:startingAt: reversed squeakToIso squeakToMac withSqueakLineEndings)('copying' copy copyFrom:to: copyReplaceFrom:to:with: copyReplaceTokens:with: deepCopy)('emphasis' addAttribute: addAttribute:from:to: alignmentAt:ifAbsent: allBold attributesAt: attributesAt:do: attributesAt:forStyle: emphasisAt: find: fontAt:withStyle: makeBoldFrom:to: makeSelectorBold makeSelectorBoldIn: removeAttribute:from:to: runLengthFor:)('html' closeHtmlAttributes:on: openHtmlAttributes:on: printHtmlOn: printHtmlString printStringHtml:on:)('printing' printOn: storeOn:)('private' runs setString:setRunsChecking: setString:setRuns:)!!SMTPClient class reorganize!('accessing' defaultPortNumber logFlag)('example' example example2)('instance creation' openOnHost:port:)('sending mail' deliverMailFrom:to:text:usingServer:)!!SMTPClient reorganize!('public protocol' mailFrom:to:text:)('utility' encodeString:)('private protocol' data: initiateSession login mailFrom: quit recipient:)!!TelnetProtocolClient reorganize!('accessing' responseCode)('private' determineResponseCode lastResponse:)('private protocol' fetchNextResponse lookForCode: lookForCode:ifDifferent:)('private testing' responseIsContinuation responseIsContinuation: responseIsError responseIsWarning)!!TableLayoutProperties reorganize!('accessing' cellInset: cellPositioning: cellSpacing: layoutInset: listCentering: listDirection: listSpacing: maxCellSize: minCellSize: reverseTableCells: rubberBandCells: wrapCentering: wrapDirection:)('initialize' initialize)('table defaults' cellInset cellPositioning cellSpacing layoutInset listCentering listDirection listSpacing maxCellSize minCellSize reverseTableCells rubberBandCells wrapCentering wrapDirection)('testing' includesTableProperties)!!TableLayout reorganize!('layout' computeCellArrangement:in:horizontal:target: computeCellSizes:in:horizontal: computeExtraSpacing:in:horizontal:target: computeGlobalCellArrangement:in:horizontal:wrap:spacing: flushLayoutCache layout:in: minExtentOf:in: placeCells:in:horizontal:target:)('optimized' layoutLeftToRight:in: layoutTopToBottom:in: minExtentHorizontal: minExtentVertical:)('testing' isTableLayout)('utilities' indexForInserting:at:in: indexForInserting:inList:horizontal:target:)!!TTSampleStringMorph reorganize!('accessing' font: string string:)('drawing' drawOn:)('geometry testing' containsPoint:)('halos and balloon help' addOptionalHandlesTo:box:)('initialization' defaultBorderWidth defaultColor)('initialize' initializeString)('menus' addCustomMenuItems:hand: edit howTo loadFromURL loadFromURL:)('parts bin' initializeToStandAlone)('printing' printOn:)('private' computeTransform)!!TTSampleFontMorph class reorganize!('connectors' fontWithoutString:)('instance creation' font:)!!TTSampleFontMorph reorganize!('accessing' doesBevels font font: smoothing smoothing: transform)('connectors' fontWithoutString: glyphAt: glyphIndexAt: printOn: selectGlyph selectGlyphAndSendTo: selectGlyphBlock:event:from:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' areasRemainingToFill: drawCharactersOn: drawOn:)('geometry' extent: position:)('halos and balloon help' addOptionalHandlesTo:box: balloonHelpTextForHandle:)('initialization' defaultBorderWidth defaultColor initialize openInWorld)('initialize' open)('menu' createSample getSmoothingLevel nextSmoothingLevel)('menus' addCustomMenuItems:hand:)('rotate scale and flex' newTransformationMorph)('testing' canDrawBorder:)('updating' changed)('private' computeTransform privateMoveBy:)!!TTPoint reorganize!('accessing' type type: x x: y y:)('converting' asPoint)('printing' printOn:)!!TTCompositeGlyph reorganize!('accessing' addGlyph:transformation: contours glyphs glyphsAndTransformationsDo:)('initialize' initialize)('testing' isComposite)('private' computeContours flipAroundY)!!TTGlyph reorganize!('accessing' advanceWidth advanceWidth: bounds bounds: contours contours: glyphIndex glyphIndex: glyphsAndTransformationsDo: leftSideBearing leftSideBearing: rightSideBearing rightSideBearing:)('converting' asFormWithScale:ascender:descender: asFormWithScale:ascender:descender:fgColor:bgColor:depth: asFormWithScale:ascender:descender:fgColor:bgColor:depth:replaceColor: asFormWithScale:ascender:descender:fgColor:bgColor:depth:replaceColor:lineGlyph:lingGlyphWidth:emphasis:)('initialize-release' initialize)('printing' printOn:)('testing' isComposite)('private' calculateWidth display flipAroundY)('private-initialization' buildContours initializeContours:with: updateRightSideBearing)!!TTFontReader class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' fileReaderServicesForFile:suffix: openTTFFile: serviceOpenTrueTypeFont services unload)('instance creation' installTTF:asTextStyle:sizes: parseFileNamed: readFrom: readTTFFrom:)!!TTFontReader reorganize!('processing' processCharMap: processCharacterMappingTable: processCompositeGlyph:contours:from: processFontHeaderTable: processGlyphDataTable:offsets: processHorizontalHeaderTable: processHorizontalMetricsTable:length: processIndexToLocationTable:format: processKerningTable: processMaximumProfileTable: processNamingTable: processSimpleGlyph:contours:from:)('public' readFrom:)('private' decodeCmapFmtTable: getGlyphFlagsFrom:size: getTableDirEntry:from: macToWin: readGlyphXCoords:glyph:nContours:flags:endPoints: readGlyphYCoords:glyph:nContours:flags:endPoints: warn: winToMac:)!!TTCFontDescription class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' addFromTTFile: clearDefault clearDescriptions default descriptionNamed: descriptionNamed:at: removeDescriptionNamed: setDefault)!!TTFontDescription class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creations' addFromTTFile: addFromTTStream: clearDefault clearDescriptions default descriptionFullNamed: descriptionNamed: removeDescriptionNamed: removeDescriptionNamed:subfamilyName: setDefault)!!TTFontDescription reorganize!('Morphic-TrueType' asMorph)('accessing' at: at:put: name size)('converting' asStrikeFontScale:)('copying' deepCopy objectForDataStream: veryDeepCopyWith:)('information' copyright familyName fullName postscriptName subfamilyName trademark uniqueName versionName)('migration' blankGlyphForSeparators)('printing' printOn:)('properties' ascender bounds descender lineGap unitsPerEm)('private-initialization' flipAroundY setAscender:descender:lineGap: setBounds:unitsPerEm: setGlyphs:mapping: setKernPairs: setStrings:)!!TTContourConstruction reorganize!('accessing' points points: segments)('converting' asCompressedPoints)('enumerating' segmentsDo:)('printing' printOn:)!!TTCFontSet class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' discardDefault familyName:pointSize: newFontArray: newTextStyleFromTT: newTextStyleFromTTFile: pointSizes register:at: registry removeStyleName: setDefault unregister:)!!TTCFont class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' shutDown unload)('file list services' fileReaderServicesForFile:suffix: serviceInstallTrueTypeFontStyle services)('instance creation' family:size: familyName:pointSize:emphasis: getExistings: newTextStyleFromTT: newTextStyleFromTTFile: newTextStyleFromTTStream: reorganizeForNewFontArray:name:)('objects from disk' classVersion)('other' isCacheAllNil pointSizes recreateCache register:at: registerAll registry removeAllDerivatives removeStyleName: repairBadSizes repairDerivativeFonts scale: unregister: version)!!TTCFont reorganize!('accessing' ascent ascentOf: descent descentKern descentOf: emphasis emphasis: emphasized: fallbackFont fallbackFont: familyName familySizeFace fontNameWithPointSize height lineGrid maxAscii minAscii name pixelSize pixelSize: pointSize pointSize: privatePointSize: textStyle)('as yet unclassified' setupDefaultFallbackFont)('caching' releaseCachedState reset)('character shapes' characterFormAt:)('copying' copy deepCopy veryDeepCopyWith:)('friend' cache derivativeFont: derivativeFont:at: derivativeFontArray derivativeFonts displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: flushCache initialize installOn: installOn:foregroundColor:backgroundColor: recreateCache setupDefaultFallbackFontTo: ttcDescription ttcDescription:)('html' closeHtmlOn: htmlSize openHtmlOn:)('objects from disk' convertToCurrentVersion:refStream: objectForDataStream:)('printing' printOn:)('public' depth foregroundColor size widthOf:)('testing' isRegular isTTCFont)('private' addLined addLined: at:put: computeForm: formOf: glyphInfoOf:into: hasGlyphOf: indexOfSubfamilyName: scale subfamilyName)!!ArchiveViewer class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' deleteTemporaryDirectory serviceOpenInZipViewer shutDown:)('file list services' extractAllFrom: serviceAddToNewZip serviceExtractAll)('fileIn/Out' fileReaderServicesForFile:suffix: services temporaryDirectory)('initialize-release' unload)('instance creation' addFileToNewZip: open openOn:)!!SystemWindow class reorganize!('*MinimalMorphicInitialization' initializeClass)('*services-base' topWindow)('initializing' borderWidth classVersion closeBoxImage collapseBoxImage expandBoxImage menuBoxImage)('instance creation' labelled:)('new-morph participation' includeInNewMorphMenu)('top window' clearTopWindow closeTopWindow noteTopWindowIn: sendTopWindowToBack wakeUpTopWindowUponStartup windowsIn:satisfying:)!!NewWorldWindow reorganize!('color' setWindowColor:)('initialization' openInWorld:)('label' setStripeColorsFrom:)('panes' addMorph:frame: updatePaneColors)('stepping' amendSteppingStatus)('testing' wantsSteps)!!CollapsedMorph reorganize!('collapse/expand' beReplacementFor: uncollapseToHand)('eToys-queries' isMyUncollapsedMorph:)('menu' buildWindowMenu)('resize/collapse' collapseOrExpand wantsExpandBox)!!ArchiveViewer reorganize!('accessing' archive directory fileName fullName members readOnlyStream selectedMember)('archive operations' canCreateNewArchive canExtractAll canOpenNewArchive canSaveArchive commentArchive createNewArchive extractAll extractAllPossibleInDirectory: extractDirectoriesIntoDirectory: extractFilesIntoDirectory: openNewArchive saveArchive writePrependingFile)('initialization' archive: briefContents buttonColor buttonOffColor buttonOnColor contents contents: createButtonBar createListHeadingUsingFont: createWindow fileName: initialize stream: windowIsClosing)('member list' displayLineFor: highlightMemberList:with: memberIndex memberIndex: memberList memberMenu:shifted:)('member operations' addDirectory addMember addMemberFromClipboard canAddMember canDeleteMember canExtractMember canRenameMember canViewAllContents changeViewAllContents commentMember deleteMember extractMember inspectMember renameMember)('member order' downMember toIndexPlace upMember)('menu' buildWindowMenu)('message handling' perform:orSendTo:)('parts bin' initializeToStandAlone)!!SystemWindow reorganize!('*services-base' requestor topWindow)('drawing' areasRemainingToFill: colorForInsets makeMeVisible raisedColor scrollBarColor wantsRoundedCorners)('events' doFastFrameDrag: handleListenEvent: handlesMouseDown: handlesMouseOverDragging: isCandidateForAutomaticViewing mouseDown: mouseEnterDragging: mouseLeaveDragging: mouseMove: mouseUp: paneTransition: secondaryPaneTransition:divider: wantsHalo wantsToBeDroppedInto:)('geometry' extent: justDroppedInto:event: labelRect paneMorphs panelRect position: removeMenuBox setPaneRectsFromBounds)('initialization' addCloseBox addExpandBox addLabelArea addMenuControl addPaneHSplitters addPaneSplitters addPaneVSplitters applyModelExtent boxExtent createBox createCloseBox createCollapseBox createExpandBox createMenuBox defaultBorderColor defaultBorderWidth defaultColor gradientWithColor: initialize initializeLabelArea maximumExtent maximumExtent: model: replaceBoxes setFramesForLabelArea)('label' externalName getRawLabel label labelHeight labelWidgetAllowance relabel relabelEvent: setLabel: setLabelFont: setLabelWidgetAllowance setStripeColorsFrom: tryToRenameTo: update: widthOfFullLabelText)('layout' convertAlignment layoutBounds putLabelItemsInLabelArea)('menu' addCustomMenuItems:hand: buildWindowMenu changeColor deleteCloseBox fullScreen fullScreenMaximumExtent makeClosable makeSecondTopmost makeUnclosable offerWindowMenu sendToBack setWindowColor setWindowColor: takeOutOfWindow wantsYellowButtonMenu)('object fileIn' convertToCurrentVersion:refStream:)('open/close' closeBoxHit delete initialExtent mustNotClose openAsIs openAsIsIn: openInMVC openInMVCExtent: openInWorld: openInWorld:extent: openInWorldExtent: positionSubmorphs)('panes' addMorph:frame: addMorph:fullFrame: existingPaneColor holdsTranscript paneColor paneColor: paneColorToUse paneMorphSatisfying: replacePane:with: restoreDefaultPaneColor setUpdatablePanesFrom: titleAndPaneText updatablePanes updateBox:color: updateBoxesColor: updatePaneColors)('resize/collapse' allowReframeHandles allowReframeHandles: collapse collapseOrExpand collapsedFrame doFastWindowReframe: expand expandBoxHit fastFramingOn fullFrame getBoundsWithFlex getCollapsedFrame isCollapsed mouseLeaveEvent:fromPane: paneWithLongestSide:near: reframePanesAdjoining:along:to: setBoundsWithFlex: unexpandedFrame unexpandedFrame: wantsExpandBox)('stepping' amendSteppingStatus stepAt: stepTime wantsSteps wantsStepsWhenCollapsed)('testing' isSystemWindow shouldDropOnMouseUp wantsToBeCachedByHand)('thumbnail' icon)('top window' activate activateAndForceLabelToShow activeOnlyOnTop activeOnlyOnTop: adjustBorderUponActivationWhenLabeless adjustBorderUponDeactivationWhenLabeless extantSketchEditor isActive lockInactivePortions passivate updatePanesFromSubmorphs)!!SystemVersion class reorganize!('*MinimalMorphic-class initialization' setVersion)('*MinimalMorphic-updating' check:andRequestPluginUpdate: checkAndApplyUpdates:)('accessing' current parseVersionString: pluginVersion:newerThan:)('instance creation' newVersion:)('updating' currentPluginVersion)!!SystemVersion reorganize!('*MinimalMorphic-accessing' date: includesUpdate:)('*smbase-extension' majorMinorVersion)('accessing' date datedVersion highestUpdate highestUpdate: registerUpdate: resetHighestUpdate unregisterUpdate: updates version version:)('initialize' initialize)('printing' printOn:)!!SystemProgressMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('examples' example)('instance creation' close: label:min:max: new reset)!!SystemProgressMorph reorganize!('dropping/grabbing' slideToTrash:)('initialization' close: initialize morphicLayerNumber setDefaultParameters updateColor:color:intensity:)('submorphs-add/remove' dismissViaHalo)('private' freeSlot: label:min:max: nextSlotFor:)!!SystemOrganizer reorganize!('*MinimalMorphic-fileIn/Out' fileOutCategory:on:)('*MinimalMorphic-private' ifClassOrganizerDo:)('*MinimalMorphic-query' uncommentedClassesIn:)('*ob-standard-testing' isClassOrganizer)('accessing' addCategory: removeCategory: renameCategory:toBe:)('fileIn/Out' fileOut fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on:initializing: objectForDataStream: orderedTraitsIn: superclassOrder:)('query' commentInventory:)('remove' categoriesMatching: removeCategoriesMatching: removeMissingClasses removeSystemCategory:)!!SystemNavigation reorganize!('*MinimalMorphic-*tools-browser' browserClass browserClass: defaultBrowserClass defaultHierarchyBrowserClass hierarchyBrowserClass hierarchyBrowserClass:)('*MinimalMorphic-browse' browseAllAccessesTo:from: browseAllCallsOn: browseAllCallsOn:and: browseAllCallsOn:from: browseAllCallsOn:localTo: browseAllCallsOnClass: browseAllImplementorsOf: browseAllImplementorsOf:localTo: browseAllImplementorsOfList: browseAllImplementorsOfList:title: browseAllMethodsInCategory: browseAllObjectReferencesTo:except:ifNone: browseAllReferencesToPool:from: browseAllSelect: browseAllSelect:name:autoSelect: browseAllStoresInto:from: browseAllUnSentMessages browseAllUnimplementedCalls browseClass: browseClassCommentsWithString: browseClassVarRefs: browseClassVariables: browseClassesWithNamesContaining:caseSensitive: browseHierarchy: browseInstVarDefs: browseInstVarRefs: browseMessageList:name: browseMessageList:name:autoSelect: browseMethodsWhoseNamesContain: browseMethodsWithLiteral: browseMethodsWithSourceString: browseMethodsWithString: browseMethodsWithString:matchCase: browseObsoleteMethodReferences browseObsoleteReferences browseUncommentedMethodsWithInitials: methodHierarchyBrowserForClass:selector: spawnHierarchyForClass:selector:)('*MinimalMorphic-query' allGlobalRefs allObjectsSelect: allPrimitiveMethods allPrimitiveMethodsInCategories: isThereAnImplementorOf: selectAllMethods: selectAllMethodsNoDoits: unimplemented)('*Multilingual-Editor' allSelect:)('browse' allMethodsInCategory:)('query' allBehaviorsDo: allCallsOn: allCallsOn:and: allCallsOn:from: allClasses allClassesAndTraits allClassesDo: allClassesImplementing: allGlobalRefsWithout: allImplementedMessages allImplementedMessagesWithout: allImplementorsOf: allImplementorsOf:localTo: allMethodsNoDoitsSelect: allMethodsSelect: allMethodsWithSourceString:matchCase: allObjectsDo: allReferencesToPool:from: allSelectorsWithAnyImplementorsIn: allSentMessages allSentMessagesWithout: allUnSentMessages allUnSentMessagesIn: allUnSentMessagesWithout: allUnimplementedCalls allUnimplementedNonPrimitiveCalls allUnreferencedClassVariablesOf: allUnusedClassesWithout: hierarchyOfClassesSurrounding: hierarchyOfImplementorsOf:forClass: numberOfImplementorsOf: obsoleteBehaviors obsoleteClasses obsoleteMethodReferences)('ui' confirmRemovalOf:on: showMenuOf:withFirstItem:ifChosenDo: showMenuOf:withFirstItem:ifChosenDo:withCaption:)!!SystemDictionary reorganize!('*39Deprecated' getFileNameFromUser vmParameterAt:)('*MinimalMorphic-*39Deprecated' associationAtOrAbove:ifAbsent: atOrAbove:ifAbsent: atOrBelow:ifAbsent: environmentForCategory: includesKeyOrAbove: scopeFor:from:envtAndPathIfFound:)('*MinimalMorphic-*eToys-copying' vocabularyDemanded)('*MinimalMorphic-housekeeping' compressSources condenseSources makeExternalRelease makeInternalRelease reconstructChanges reformatChangesToUTF8 removeAllLineFeeds removeAllLineFeedsQuietly removeAllLineFeedsQuietlyCalling: testFormatter testFormatter2 verifyChanges)('*MinimalMorphic-memory space' createStackOverflow forceTenure isRoot: isYoung: lowSpaceWatcher rootTable rootTableAt: setGCBiasToGrow: setGCBiasToGrowGCLimit: setGCSemaphore: useUpMemory useUpMemoryWithArrays useUpMemoryWithContexts useUpMemoryWithTinyObjects)('*MinimalMorphic-miscellaneous' exitToDebugger handleUserInterrupt m17nVersion nihongoVersion)('*MinimalMorphic-retrieving' poolUsers)('*MinimalMorphic-shrinking' cleanUpUndoCommands computeImageSegmentation discardDiscards discardFFI discardMVC discardSoundSynthesis presumedSentMessages removeAllUnSentMessages reportClassAndMethodRemovalsFor: writeImageSegmentsFrom:withKernel: zapAllOtherProjects zapMVCprojects)('*MinimalMorphic-snapshot and quit' isMorphic shutDownSound unbindExternalPrimitives)('*MinimalMorphic-sources, change log' copyright externalizeSources internalizeChangeLog internalizeSources recover: wordSize)('*MinimalMorphic-special objects' specialSelectors)('*MinimalMorphic-ui' inspectGlobals)('*eToys-copying' assureUniClass)('accessing' organization)('class and trait names' allClassesAndTraits allClassesAndTraitsDo: classNamed: classNames classOrTraitNamed: flushClassNameCache forgetClass:logged: hasClassNamed: removeClassNamed: renameClassNamed:as: renameClass:as: traitNames)('class names' renameClass:from:)('copying' veryDeepCopyWith:)('dictionary access' associationOrUndeclaredAt: at:put:)('housekeeping' cleanOutUndeclared condenseChanges forgetDoIts reclaimDependents removeEmptyMessageCategories)('image, changes name' primImageName primImageName: primVmPath)('memory space' bytesLeft bytesLeftString bytesLeft: garbageCollect garbageCollectMost installLowSpaceWatcher lowSpaceThreshold lowSpaceWatcherProcess memoryHogs okayToProceedEvenIfSpaceIsLow primBytesLeft primitiveGarbageCollect primLowSpaceSemaphore: primSignalAtBytesLeft: signalLowSpace)('miscellaneous' hasMorphic logError:inContext:to: setMacFileInfoOn: verifyMorphicAvailability)('objects from disk' objectForDataStream: storeDataOn:)('printing' printElementsOn:)('retrieving' allClasses allClassesDo: allTraits)('shrinking' abandonSources abandonTempNames discardFlash discardMIDI discardMorphic discardNetworking discardOddsAndEnds discardSpeech discardSUnit discardTrueType lastRemoval majorShrink removeNormalCruft removeSelector: unusedClasses unusedClassesAndMethodsWithout:)('snapshot and quit' addToShutDownList: addToShutDownList:after: addToStartUpList: addToStartUpList:after: add:toList:after: processShutDownList: processStartUpList: quitPrimitive removeFromShutDownList: removeFromStartUpList: send:toClassesNamedIn:with: setGCParameters shutDown snapshotEmbeddedPrimitive snapshotPrimitive)('sources, change log' currentChangeSetString currentProjectDo: forceChangesToDisk version writeRecentCharacters:toFileNamed: writeRecentToFile)('special objects' clearExternalObjects compactClassesArray externalObjects hasSpecialSelector:ifTrueSetByte: recreateSpecialObjectsArray registerExternalObject: specialNargsAt: specialObjectsArray specialSelectorAt: specialSelectorSize unregisterExternalObject:)!!SystemChangeNotifier class reorganize!('*MinimalMorphic-private' resetUniqueInstance)('instance creation' new)('item kinds' categoryKind classKind expressionKind methodKind protocolKind)('public' uniqueInstance)('private' createInstance instanceCreationErrorString)!!SystemChangeNotifier reorganize!('*MinimalMorphic-private' setBroadcasting)('*MinimalMorphic-public' notify:ofSystemChangesOfChange:using:)('*MinimalMorphic-system triggers' evaluated: methodRemoved:selector:class:)('initialize' initialize)('public' doSilently: isBroadcasting noMoreNotificationsFor: notify:ofAllSystemChangesUsing: notify:ofSystemChangesOfItem:change:using: notify:ofSystemChangesOfItem:using:)('system triggers' classCategoryAdded: classCategoryRemoved: classCategoryRenamedFrom:to: class:recategorizedFrom:to: classAdded:inCategory: classCommented: classCommented:inCategory: classDefinitionChangedFrom:to: classRemoved:fromCategory: classRenamed:from:to:inCategory: classReorganized: evaluated:context: methodAdded:selector:inClass: methodAdded:selector:inClass:requestor: methodAdded:selector:inProtocol:class: methodAdded:selector:inProtocol:class:requestor: methodChangedFrom:to:selector:inClass: methodChangedFrom:to:selector:inClass:requestor: methodRemoved:selector:inProtocol:class: selector:recategorizedFrom:to:inClass: traitDefinitionChangedFrom:to:)('private' notify:ofEvents:using: releaseAll trigger:)('private-event lists' allSystemEvents systemEventsForChange: systemEventsForItem: systemEventsForItem:change:)!!SystemBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('events' packagePanePreferenceChanged)('initialize-release' unload)('instance creation' defaultOpenBrowser)('registration' addRegistryMenuItemsTo:inAccountOf:)!!SyntaxErrorNotification reorganize!('*MinimalMorphic-exceptionDescription' defaultAction)('accessing' category doitFlag errorClass errorCode messageText setClass:category:code:doitFlag:)!!SyntaxError reorganize!('initialization' category: setClass:code:debugger:doitFlag:)('menu' debug listMenu: proceed)('message list' list listIndex)('other' contents:notifying: notify:at:in:)('text menu support' selectedClass selectedClassOrMetaClass selectedMessageName)!!SyntaxAttribute reorganize!('*MinimalMorphic-accessing' attributeList)('accessing' color color: emphasis emphasis:)!!Symbol class reorganize!('*MinimalMorphic-access' thatStartsCaseSensitive:skipping:)('*MinimalMorphic-instance creation' findInterned:)('access' allSymbols selectorsContaining: thatStarts:skipping:)('class initialization' allSymbolTablesDo: allSymbolTablesDo:after: compactSymbolTable initialize)('instance creation' internCharacter: intern: lookup: newFrom: readFrom:)('private' hasInterned:ifTrue: possibleSelectorsFor: rehash shutDown:)!!Symbol reorganize!('accessing' at:put: precedence replaceFrom:to:with:startingAt:)('comparing' =)('converting' asMutator asString asSymbol capitalized withFirstCharacterDownshifted)('copying' clone copy shallowCopy veryDeepCopyWith:)('evaluating' value:)('filter streaming' byteEncode:)('printing' isOrientedFill storeOn:)('system primitives' flushCache numArgs:)('testing' includesKey: isDoIt isInfix isKeyword isLiteral isPvtSelector isSymbol isUnary)('user interface' asExplorerString)('private' errorNoModification string:)!!Switch reorganize!('action' doAction: offAction: onAction:)('converting' printOn:)('state' clear isOff isOn set switch turnOff turnOn)('private' initializeOff initializeOn)!!SuperSwikiServer reorganize!('*MinimalMorphic-for real' directoryWrapperClass updateProjectInfoFor:)('*MinimalMorphic-testing' queryProjectsAndShow queryProjectsAndShow: showQueryAsPVM:)('accessing' encodingName typeForPrefs)('for real' allEntries directoryNames entries fastParseEntriesFrom: fileNames getOnly:from: matchingEntries: oldFileNamed: oldFileOrNoneNamed: putFile:named: readOnlyFileNamed: sendToSwikiProjectServer:)('squeaklets' upLoadProject:members:retry:)('testing' isSearchable parseQueryResult: queryAllProjects queryProjects: queryPythagoras speedTest1 speedTest2 test1)('private' parseListEntries:)!!SunAudioFileWriter class reorganize!('instance creation' onFileNamed: onStream:)('sound storing' codecForFormatCode: formatCodeForCompressionType: storeSampledSound:onFileNamed:compressionType:)!!SunAudioFileWriter reorganize!('initialization' setStream:)('other' appendBytes: appendSamples: closeFile ensureOpen updateHeaderDataSize writeHeaderSamplingRate: writeHeaderSamplingRate:format:)!!StringMorphAttributeScanner reorganize!('accessing' actualFont alignment emphasis font fontNumber indent kern textColor textStyle)('initialize-release' initialize)('scanning' addEmphasis: addKern: indentationLevel: setActualFont: setAlignment: setFont: textColor:)('string morph' initializeFromStringMorph:)!!MenuItemMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('eToys-scripting' additionsToViewerCategories)!!InfoMorph class reorganize!('as yet unclassified' doSystemMapFrom:)('parts bin' authoringPrototype descriptionForPartsBin)!!StringMorph class reorganize!('instance creation' contents: contents:font: contents:font:emphasis:)('scripting' authoringPrototype)('testing' test test2)!!StringButtonMorph reorganize!('accessing' actionSelector actionSelector: arguments arguments: target target:)('button' doButtonAction)('copying' updateReferencesUsing: veryDeepFixupWith: veryDeepInner:)('e-toy support' adaptToWorld:)('event handling' handlesMouseDown: handlesMouseStillDown: mouseDown: mouseMove: mouseStillDown: mouseUp:)('initialization' initialize)('menu' addCustomMenuItems:hand: addTargetingMenuItems:hand: clearTarget setActWhen setActionSelector setArguments setLabel setTarget:)('submorphs-add/remove' actWhen:)!!DropDownChoiceMorph reorganize!('accessing' border border: items items:)('copying' veryDeepInner:)('drawing' drawOn: maxExtent:)('event handling' mouseDown:)('list access' getCurrentSelectionIndex selection:)!!PopUpChoiceMorph reorganize!('as yet unclassified' actionSelector actionSelector: arguments arguments: getItemsArgs getItemsArgs: getItemsSelector getItemsSelector: target target:)('copying' veryDeepFixupWith: veryDeepInner:)('event handling' handlesMouseDown: mouseDown:)('initialization' initialize)!!MenuItemMorph reorganize!('accessing' adaptToWorld: allWordingsNotInSubMenus: arguments arguments: contentString contentString: contents: contents:withMarkers: contents:withMarkers:inverse: hasIcon hasIconOrMarker hasMarker hasSubMenu hasSubMenu: icon icon: isEnabled isEnabled: isStayUpItem itemWithWording: selector selector: subMenu subMenu: target target:)('change reporting' ownerChanged)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('events' activateOwnerMenu: activateSubmenu: deselectTimeOut: doButtonAction handleMouseUp: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: invokeWithEvent: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseUp:)('grabbing' aboutToBeGrabbedBy: duplicateMorph:)('initialization' defaultBounds deleteIfPopUp: initialize)('layout' minHeight minWidth)('layout-properties' hResizing vResizing)('meta actions' wantsHaloFromClick)('rounding' roundedCorners wantsRoundedCorners)('selecting' adjacentTo deselect: isSelected isSelected: select:)('submorphs-accessing' noteNewOwner:)('private' bottomArrow deselectItem iconForm leftArrow notObsolete offImage onImage rightArrow selectionFillStyle subMenuMarker upArrow updateLayoutInDockingBar)!!LabelStringMorph reorganize!('accessing' mySystemWindow mySystemWindow:)('event handling' mouseDown:)!!InfoMorph reorganize!('as yet unclassified' cambio:)('initialization' initialize initializeToStandAlone)('step' step stepTime)!!IndentingListItemMorph reorganize!('accessing' balloonText canExpand children firstChild hasIcon icon indentLevel isExpanded isExpanded: isFirstItem isSoleItem nextSibling nextSibling: userString)('converting' withoutListWrapper)('drag and drop' acceptDroppingMorph:event:)('drawing' drawLineToggleToTextOn:lineColor:hasToggle: drawLinesOn:lineColor: drawLinesToFirstChildOn:lineColor: drawLinesToNextSiblingOn:lineColor:hasToggle: drawOn: drawToggleOn:in: unhighlight)('enumeration' childrenDo:)('halos and balloon help' boundsForBalloon)('initialization' initWithContents:prior:forList:indentLevel: initialize)('layout' minHeight minWidth)('mouse events' inToggleArea:)('private' hasToggle toggleBounds toggleRectangle withSiblingsDo:)('private-container protocol' addChildrenForList:addingTo:withExpandedItems: complexContents highlight openPath: recursiveAddTo: recursiveDelete toggleExpandedState)!!BorderedStringMorph reorganize!('accessing' measureContents)('drawing' drawOn:)('initialization' initWithContents:font:emphasis: initialize)!!StringMorph reorganize!('MorphicExtras-accessing' getCharacters handsWithMeForKeyboardFocus)('MorphicExtras-printing' fullPrintOn:)('Tools' balloonTextForClassAndMethodString balloonTextForLexiconString balloonTextForMethodString)('accessing' contents contents: contentsClipped: fitContents font font:emphasis: fontName:size: fontToUse interimContents: measureContents minimumWidth setWidth: userString valueFromContents)('connectors-layout' minHeight)('drawing' drawOn: lookTranslucent)('editing' acceptContents acceptValue: cancelEdits doneWithEdits launchMiniEditor: lostFocusWithoutAccepting wantsKeyboardFocusOnShiftClick)('event handling' handlesMouseDown: hasFocus mouseDown: wouldAcceptKeyboardFocus)('font' emphasis:)('halos and balloon help' addOptionalHandlesTo:box: boundsForBalloon)('initialization' defaultColor initWithContents:font:emphasis: initialize)('layout' fullBounds)('menu' addCustomMenuItems:hand: changeEmphasis changeFont)('objects from disk' fixUponLoad:seg:)('parts bin' initializeToStandAlone)('printing' font: printOn:)!!PluggableTextController reorganize!('accessing-selection' selectForTopFrom:to: selectFrom:to: selectFrom:to:scroll:)('as yet unclassified' accept userHasEdited userHasNotEdited)('transcript' appendEntry bsText changeText: doOccluded: scrollIn: visibleAreas)!!FillInTheBlankController reorganize!('basic control sequence' controlInitialize controlTerminate)('control defaults' isControlActive isControlWanted)('other' accept cancel dispatchOnCharacter:with: processYellowButton)!!StringHolderController reorganize!('accessing' changeText: model:)('compiler access' bindingOf:)('edit flag' hasUnacceptedEdits: userHasEdited userHasNotEdited)('menu messages' accept cancel performMenuMessage:)('private' closeTypeIn zapSelectionWith:)!!PluggableFileList class reorganize!('StandardFileMenu' newFileMenu: oldFileMenu:)('canAcceptBlocks' alwaysAcceptBlock fileNameSelectedAcceptBlock)('fileFilterBlocks' allFilesAndFoldersFileFilter allFoldersFileFilter)('instance creation' getFilePathNameDialog getFilePathNameDialogWithExistenceCheck getFolderDialog open)('resultBlocks' directoryResultBlock fileNameResultBlock pathNameResultBlock sfmResultBlock)('standard dialog operations' getFile getFilePathName getFilePathNameWithExistenceCheck getFolder putFile)('validateBlocks' alwaysValidateBlock checkExistingFileValidateBlock existingFileValidateBlock okToOpen:without: okToOverwrite:)!!PackagePaneBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('MorphicExtras-class initialization' unload)('class initialization' registerInAppRegistry)('instance creation' prototypicalToolWindow)('window color' windowColorSpecification)!!MessageNames class reorganize!('MorphicExtras-class initialization' unload)('instance creation' methodBrowserSearchingFor: openMessageNames prototypicalToolWindow)('window color' windowColorSpecification)!!MessageSet class reorganize!('instance creation' messageList: open:name: openAsMorph:name: openAsMorph:name:inWorld: openMessageList:name: openMessageList:name:autoSelect:)('utilities' extantMethodsIn: isPseudoSelector: parse:toClassAndSelector:)('window color' windowColorSpecification)!!FillInTheBlank class reorganize!('instance creation' multiLineRequest:centerAt:initialAnswer:answerHeight: request: request:initialAnswer: request:initialAnswer:centerAt: requestPassword:)('private' fillInTheBlankMorphClass fillInTheBlankViewClass)!!FileList2 class reorganize!('accessing' lastSelDir lastSelDir:)('as yet unclassified' hideSqueakletDirectoryBlock projectOnlySelectionBlock projectOnlySelectionMethod: selectionBlockForSuffixes:)('blue ui' blueButtonText:textColor:color:inWindow: blueButtonText:textColor:color:inWindow:balloonText:selector:recipient: blueButtonText:textColor:inWindow: blueButtonText:textColor:inWindow:balloonText:selector:recipient: enableTypeButtons:info:forDir: endingSpecs morphicViewGeneralLoaderInWorld: morphicViewProjectLoader2InWorld: morphicViewProjectLoader2InWorld:reallyLoad: morphicViewProjectLoader2InWorld:reallyLoad:dirFilterType: morphicViewProjectSaverFor:)('from SMLoader' morphicView morphicViewOnDirectory:)('instance creation' openMorphicViewInWorld prototypicalToolWindow)('modal dialogs' modalFileSelector modalFileSelectorForSuffixes: modalFileSelectorForSuffixes:directory: modalFolderSelector modalFolderSelector: modalFolderSelectorForProject: modalFolderSelectorForProjectLoad)('morphic ui' morphicViewFileSelector morphicViewFileSelectorForSuffixes: morphicViewFileSelectorForSuffixes:directory: morphicViewFolderSelector morphicViewFolderSelector: morphicViewImageViewer morphicViewNoFile morphicViewProjectLoader update:in:fileTypeRow:morphUp:)('utility' addFullPanesTo:from: modalLoopOn: textRow:)!!FileList class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' removeObsolete)('file reader registration' allRegisteredServices detectService:ifNone: isReaderNamedRegistered: itemsForDirectory: itemsForFile: registerFileReader: registeredFileReaderClasses suffixOf: unregisterFileReader:)('instance creation' addButtonsAndFileListPanesTo:at:plus:forFileList: addVolumesAndPatternPanesTo:at:plus:forFileList: defaultButtonPaneHeight open openAsMorph openEditorOn:editString: openFileDirectly openMorphOn:editString: prototypicalToolWindow)('window color' windowColorSpecification)!!FileContentsBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' unload)('file list services' fileReaderServicesForDirectory: fileReaderServicesForFile:suffix: selectAndBrowseFile: serviceBrowseCode serviceBrowseCodeFiles serviceBrowseCompressedCode services)('instance creation' browseCompressedCodeStream: browseFile: browseFiles: browseStream: browseStream:named:)('window color' windowColorSpecification)!!Debugger class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' openContext:label:contents:)('instance creation' context: context:isolationHead: informExistingDebugger:label:)('opening' openInterrupt:onProcess: openOn:context:label:contents:fullView:)('window color' windowColorSpecification)!!ClassListBrowser class reorganize!('examples' example1 example2 example3 example4 example5 example6)('instance creation' browseClassesSatisfying:title:)!!ChangeSorter class reorganize!('*MinimalMorphicInitialization' initializeClass)('browse' browseChangeSetsWithClass:selector: browseChangeSetsWithSelector: prototypicalToolWindow)('deprecated' allChangeSetNames allChangeSets allChangeSetsWithClass:selector: assuredChangeSetNamed: basicNewChangeSet: belongsInAdditions: belongsInAll: belongsInMyInitials: belongsInNumbered: belongsInProjectChangeSets: belongsInProjectsInRelease: belongsInRecentUpdates: buildAggregateChangeSet changeSet:containsClass: changeSetCategoryNamed: changeSetNamed: changeSetNamesInReleaseImage changeSetNamesInThreeOh changeSetsNamedSuchThat: countOfChangeSetsWithClass:andSelector: deleteChangeSetsNumberedLowerThan: doesAnyChangeSetHaveClass:andSelector: existingOrNewChangeSetNamed: fileOutChangeSetsNamed: gatherChangeSets highestNumberedChangeSet initializeChangeSetCategories mostRecentChangeSetWithChangeForClass:selector: newChangeSet newChangeSet: newChangesFromStream:named: noteChangeSetsInRelease promoteToTop: recentUpdateMarker recentUpdateMarker: removeChangeSet: removeChangeSetsNamedSuchThat: removeEmptyUnnamedChangeSets reorderChangeSets secondaryChangeSet unload)('window color' windowColorSpecification)!!ChangeList class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' unload)('fileIn/Out' browseChangesFile: browseCompressedChangesFile: fileReaderServicesForFile:suffix: serviceBrowseChangeFile serviceBrowseCompressedChangeFile serviceBrowseDotChangesFile services)('instance creation' open:name:multiSelect: openAsMorph:name:multiSelect:)('monticello' recent:on: recentLogOn:startingFrom:)('public access' browseFile: browseRecent: browseRecent:on: browseRecentLog browseRecentLogOn: browseRecentLogOn:startingFrom: browseRecentLogOnPath: browseStream: getRecentLocatorWithPrompt:)('window color' windowColorSpecification)!!Browser class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' registerInAppRegistry unload)('instance creation' fullOnClass: fullOnClass:selector: new newOnCategory: newOnClass: newOnClass:label: newOnClass:selector: open openBrowser openBrowserView:label: openMessageBrowserForClass:selector:editString: prototypicalToolWindow systemOrganizer:)('window color' windowColorSpecification)!!StringHolder class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' open openLabel:)('window color' windowColorSpecification)!!SetInspector reorganize!('accessing' fieldList)('menu' fieldListMenu: removeSelection)('menu commands' copyName)('selecting' arrayIndexForSelection replaceSelectionValue: selection)!!RecentMessageSet reorganize!('contents' contents:notifying:)('message functions' messageListMenu:shifted: removeFromRecentSubmissions)('message list' addExtraShiftedItemsTo: setRecentHistorySize)('selection' maybeSetSelection)('update' growable reformulateList updateListsAndCodeIn:)!!InstanceBrowser reorganize!('initialization' desiredWindowLabelHeightIn: openOnObject:inWorld:showingSelector: windowWithLabel:)('menu commands' inspectViewee offerMenu)('target-object access' targetObject)('window title' startingWindowTitle)!!Lexicon reorganize!('basic operation' annotation displaySelector: messageListIndex:)('category list' categoriesPane categoryDefiningSelector: categoryList categoryListIndex categoryListIndex: categoryListKey:from: categoryListMenu:shifted: categoryListMenuTitle categoryWithNameSpecifiedBy: chooseCategory: newCategoryPane reformulateCategoryList selectWithinCurrentCategoryIfPossible: selectedCategoryName selectorsReferringToClassVar showCategoriesPane)('contents' contents)('control buttons' customButtonRow customButtonSpecs homeCategoryButton mostGenericButton searchToggleButton)('controls' addOptionalButtonsTo:at:plus:)('history' navigateToNextMethod navigateToPreviousMethod navigateToRecentMethod removeFromSelectorsVisited removeFromSelectorsVisited: selectorsVisited updateSelectorsVisitedfrom:to:)('initialization' initListFrom:highlighting: openOnClass:inWorld:showingSelector: openWithSearchPaneOn:inWorld: wantsAnnotationPane windowWithLabel:)('limit class' chooseLimitClass initialLimitClass limitClass limitClass: limitClassString setLimitClass:)('menu commands' offerMenu removeMessage showCategory showHomeCategory showMainCategory)('message category functions' canShowMultipleMessageCategories)('message list menu' messageListKey:from:)('model glue' doItReceiver okayToAccept targetObject)('new-window queries' browseClassVarRefs browseInstVarDefs browseInstVarRefs)('search' hasSearchPane lastSearchString lastSearchString: lastSendersSearchSelector methodListFromSearchString: obtainNewSearchString selectorsMatching setMethodListFromSearchString showSearchPane toggleSearch)('selection' categoryOfSelector: selectImplementedMessageAndEvaluate: selectSelectorItsNaturalCategory: selectWithinCurrentCategory: selectedClassOrMetaClass selectedMessage setClassAndSelectorIn: setToShowSelector:)('senders' navigateToASender selectorsSendingSelectedSelector setSendersSearch)('transition' maybeReselectClass:selector: noteAcceptanceOfCodeFor: preserveSelectorIfPossibleSurrounding: reformulateList reformulateListNoting: retainMethodSelectionWhileSwitchingToCategory:)('vocabulary' chooseVocabulary switchToVocabulary: useVocabulary:)('window title' addModelItemsToWindowMenu: adjustWindowTitle startingWindowTitle)('within-tool queries' currentQueryParameter methodsWithInitials methodsWithInitials: queryCharacterization seeAlso seeAlso: selectorsChanged selectorsDefiningInstVar selectorsReferringToInstVar selectorsRetrieved setLocalClassVarRefs setLocalInstVarDefs setLocalInstVarRefs showMethodsInCurrentChangeSet showMethodsWithInitials showMethodsWithInitials: showQueryResultsCategory)!!ProtocolBrowser reorganize!('accessing' getList growable list selector selector: setSelector:)('class list' selectedClassOrMetaClass)('private' initListFrom:highlighting: on: onSubProtocolOf: setClassAndSelectorIn:)!!PluggableFileList reorganize!('StandardFileMenu' startUpWithCaption: startUpWithCaption:at:)('accepting/cancelling' leftButtonPressed leftButtonState result rightButtonPressed rightButtonState)('accessing' beAccepted canAccept canAcceptBlock: fileFilterBlock: fileListIndex fileVolumeIndex prompt: resultBlock: validate validateBlock:)('file list menu' addNew:byEvaluating: fileSelectedMenu: listForPattern:)('file string' fileString fileString:)('initialize-release' defaultBackgroundColor initialize open openAsMorphLabel:inWorld: openLabel:)!!PackagePaneBrowser reorganize!('class list' classList packageClasses selectedClass)('dragNDrop' changeCategoryForClass:srcSystemCategory:atListMorph:internal:copy:)('dragNDrop util' dstCategoryDstListMorph:internal:)('initialize-release' defaultBrowserTitle openAsMorphEditing: systemOrganizer:)('package list' categoryExistsForPackage hasPackageSelected openEditString: package packageList packageListIndex packageListIndex: packageMenu: updatePackages)('system category list' hasSystemCategorySelected selectCategoryForClass: selectedSystemCategoryName systemCategoryList)!!MethodHolder reorganize!('contents' contents contents:notifying:)('menu' doItReceiver)('miscellaneous' changeMethodSelectorTo: compiledMethod methodClass:methodSelector: versions)('selection' selectedClass selectedClassOrMetaClass selectedMessageCategoryName selectedMessageName)!!MessageNames reorganize!('initialization' inMorphicWindowLabeled: inMorphicWindowWithInitialSearchString: selectorListKey:from:)('message list menu' copyName)('search' computeSelectorListFromSearchString doSearchFrom: searchString searchString:notifying: showOnlyImplementedSelectors)('selection' selection)('selector list' messageList selectorList selectorListIndex selectorListIndex: selectorListMenu: selectorListMenuTitle)!!ChangedMessageSet reorganize!('acceptance' contents:notifying:)('initialization' changeSet:)('message list' growable)('reformulation' reformulateList)!!MessageSet reorganize!('*services-base' browseReference: selectReference:)('class list' metaClassIndicated selectedClass selectedClassName selectedClassOrMetaClass selectedMessageCategoryName)('contents' contents selectedMessage setContentsToForceRefetch)('drag and drop' dragPassengerFor:inMorph:)('filtering' augmentMessageList filterFrom: filterMessageList filterToAnyChangeSet filterToCommentedMethods filterToCurrentAuthor filterToCurrentChangeSet filterToImplementorsOf filterToMessagesInChangesFile filterToMessagesInSourcesFile filterToMessagesThat filterToMessagesWithPriorVersions filterToMessagesWithoutPriorVersions filterToNotAnyChangeSet filterToNotCurrentAuthor filterToNotCurrentChangeSet filterToNotImplementorsOf filterToNotSendersOf filterToSendersOf filterToUncommentedMethods filterToUnsentMessages)('message category functions' canShowMultipleMessageCategories)('message functions' deleteFromMessageList: methodCategoryChanged reformulateList removeMessage removeMessageFromBrowser)('message list' addExtraShiftedItemsTo: addItem: growable growable: messageList messageListIndex: optionalButtonHeight selectedMessageName sortByDate)('metaclass' classCommentIndicated)('toolbuilder' buildWith:)('private' adjustWindowTitleAfterFiltering autoSelectString autoSelectString: buildMorphicMessageList contents:notifying: inMorphicWindowLabeled: initializeMessageList: openAsMorphNamed:inWorld: selection setClassAndSelectorIn: setFilteredList:)!!DictionaryInspector reorganize!('accessing' fieldList)('initialize-release' initialize)('menu' addEntry copyName fieldListMenu: removeSelection renameEntry selectionReferences sendersOfSelectedKey)('selecting' addEntry: calculateKeyArray contentsIsString refreshView replaceSelectionValue: selection)('private' numberOfFixedFields)!!ContextVariablesInspector reorganize!('accessing' fieldList inspect:)('code' doItContext doItReceiver)('selecting' replaceSelectionValue: selection)!!CompiledMethodInspector reorganize!('accessing' fieldList)('selecting' contentsIsString selection selectionUnmodifiable)!!Inspector reorganize!('accessing' baseFieldList context: fieldList i1 i2 initialExtent modelWakeUpIn: noteSelectionIndex:for: object object: selectedClass stepTimeIn: timeOfLastListUpdate trash trash: update wantsSteps)('code' doItReceiver)('initialize-release' initialize inspect:)('menu commands' addCollectionItemsTo: browseFullProtocol chasePointers classOfSelection classVarRefs copyName defsOfSelection explorePointers exploreSelection fieldListMenu: inspectBasic inspectElement inspectSelection inspectorKey:from: objectReferencesToSelection referencesToSelection spawnFullProtocol spawnProtocol)('object fileIn' convertToCurrentVersion:refStream:)('selecting' accept: contentsIsString replaceSelectionValue: selectedSlotName selection selectionIndex selectionPrintString selectionUnmodifiable toggleIndex:)('stepping' stepAt:in:)('private' printStringErrorText)!!ClassListBrowser reorganize!('initialization' initForClassesNamed:title:)('title' defaultTitle: labelString)!!HierarchyBrowser reorganize!('class list' assureSelectionsShow classList)('initialization' changed: classListIndex: defaultBrowserTitle initAlphabeticListing initHierarchyForClass: openEditString: potentialClassNames selectClass: selectedClassName systemCategorySingleton updateAfterClassChange)('menu messages' buildClassBrowserEditString: removeSystemCategory systemCatSingletonKey:from: systemCatSingletonMenu:)!!FillInTheBlank reorganize!('accessing' acceptOnCR acceptOnCR: done done: responseUponCancel: setResponseForCancel)('initialize-release' initialize)('object fileIn' convertToCurrentVersion:refStream:)('private' show:)!!FileChooser reorganize!('accessing' buttonPane cancelButton caption captionPane directory directoryPane filePane morphicView okButton)('initialization' initalizeAsDialogBox initalizeAsSystemWindow initalizeAsSystemWindowWithCaptionPane initalizeBasicParameters setDirectory: setMorphicView: setSuffixes: showShortFileNames:)('open' open)('ui creation' addFullPanesTo:from: centerMorphicView createCancelButton createDialogBoxButtonPane createDialogBoxCaptionPane createDialogBoxLayout createDialogBoxMorphicView createDialogBoxUI createDirectoryPane createFilePane createOkButton createSystemWindowButtonPane createSystemWindowCaptionPane createSystemWindowLayout createSystemWindowLayoutWithCaptionPane createSystemWindowMorphicView createSystemWindowUI createSystemWindowUIWithCaptionPane setButtonColor: setCaption: setCaptionColor: setCaptionFont: setPaneColor:)('updating' fileNameFormattedFrom:sizePad: updateButtonRow)!!FileList reorganize!('drag''n''drop' acceptDroppingMorph:event:inMorph: dragPassengerFor:inMorph: dragTransferTypeForMorph: dropDestinationDirectory:event: isDirectoryList: primitiveCopyFileNamed:to: wantsDroppedMorph:event:inMorph:)('file list' fileList fileListIndex fileListIndex: fileName readOnlyStream)('file list menu' dirAndFileName fileContentsMenu:shifted: fileListMenu: fileSelectedMenu: fullFileListMenu:shifted: itemsForAnyFile itemsForDirectory: itemsForFile: itemsForNoFile myServicesForFile:suffix: noFileSelectedMenu: offerAllFileOptions openMorphFromFile suffixOfSelectedFile)('file menu action' addNew:byEvaluating: addNewDirectory addNewFile compressFile deleteFile get getEncodedText getHex renameFile sortByDate sortByName sortBySize spawn:)('initialization' buttonSelectorsToSuppress directory: dynamicButtonServices labelString modelSleep modelWakeUp optionalButtonHeight optionalButtonRow optionalButtonSpecs optionalButtonView release setFileStream: universalButtonServices updateButtonRow)('menu messages' copyName perform:orSendTo:)('own services' serviceAddNewDirectory serviceAddNewFile serviceAllFileOptions serviceBroadcastUpdate serviceCompressFile serviceCopyName serviceDeleteFile serviceGet serviceGetEncodedText serviceGetHex serviceRenameFile serviceSortByDate serviceSortByName serviceSortBySize serviceViewContentsInWorkspace servicesFromSelectorSpecs: viewContentsInWorkspace)('server list' askServerInfo putUpdate: removeServer)('updating' update:)('volume list and pattern' deleteDirectory directory fileNameFormattedFrom:sizePad: listForPattern: pattern pattern: veryDeepFixupWith: volumeList volumeListIndex volumeListIndex:)('volume menu' volumeMenu:)('private' addPath: contents defaultContents defaultEncoderFor: entriesMatching: fileNameFromFormattedItem: folderString fullName isFileSelected listForPatterns: put: readContentsAsEncoding: readContentsBrief: readContentsCNGB readContentsEUCJP readContentsEUCKR readContentsHex: readContentsShiftJIS readContentsUTF8 readServerBrief recentDirs registeredFileReaderClasses resort: selectEncoding sortBlock sortingByDate sortingByName sortingBySize updateFileList)!!FileContentsBrowser reorganize!('accessing' contents contents:notifying: packages packages: selectedPackage)('class list' browseMethodFull classList findClass renameClass selectedClass)('creation' addLowerPanesTo:at:with: createViews openAsMorph)('diffs' methodDiffFor:class:selector:meta: modifiedClassDefinition)('edit pane' selectedBytecodes selectedMessage)('fileIn/fileOut' fileInClass fileInMessage fileInMessageCategories fileInPackage fileIntoNewChangeSet fileOutClass fileOutMessage fileOutMessageCategories fileOutPackage)('infoView' extraInfo infoString infoViewContents packageInfo: updateInfoView)('initialize-release' defaultBrowserTitle)('keys' classListKey:from: messageListKey:from: packageListKey:from:)('menus' classListMenu: classListMenu:shifted: contentsSymbolQuints messageCategoryMenu: messageListMenu: packageListMenu:)('metaclass' selectedClassOrMetaClass setClassOrganizer)('other' browseSenders browseVersions changeMessageCategories: didCodeChangeElsewhere labelString methodHierarchy)('removing' removeClass removeMessage removeMessageCategory removePackage removeUnmodifiedCategories removeUnmodifiedClasses removeUnmodifiedMethods)('toolbuilder' buildWith:)!!Debugger reorganize!('accessing' contents contextVariablesInspector doNothing: interruptedContext interruptedProcess isNotifier labelString labelString: proceedValue proceedValue: receiver receiverInspector receiverInspectorObject:context:)('as yet unclassified' codePaneMenu:shifted: runToSelection:)('breakpoints' toggleBreakOnEntry)('class list' selectedClass selectedClassOrMetaClass)('code pane' contentsSelection doItContext doItReceiver pc pcRange)('code pane menu' perform:orSendTo:)('context stack (message list)' contextStackIndex contextStackList expandStack fullyExpandStack messageListIndex selectedMessage selectedMessageName toggleContextStackIndex:)('context stack menu' abandon abandon: askForCategoryIn:default: browseMessages browseSendersOfMessages browseVersions buildMessageBrowser close: contextStackKey:from: contextStackMenu:shifted: debugProceedMenu: doStep down fullStack implement:inClass: mailOutBugReport messageListMenu:shifted: peelToFirst populateImplementInMenu: proceed proceed: restart returnValue selectPC send stepIntoBlock up where)('dependents access' step updateInspectors wantsSteps)('eToys-code pane' toggleSyntaxMorph)('initialize' addOptionalButtonsTo:at:plus: buildMVCDebuggerViewLabel:minSize: buildMVCNotifierButtonView buildMVCNotifierViewLabel:message:minSize: buildMVCOptionalButtonsButtonsView buildMorphicNotifierLabelled:message: buttonRowForPreDebugWindow: customButtonRow customButtonSpecs debugAt: errorWasInUIProcess: initialExtent notifierButtonHeight openFullMorphicLabel: openFullNoSuspendLabel: openNotifierContents:label: optionalAnnotationHeight optionalButtonHeight optionalButtonPairs optionalButtonRow preDebugButtonQuads preDebugNotifierContentsFrom: release wantsOptionalButtons windowIsClosing)('message category list' selectedMessageCategoryName)('notifier menu' debug storeLog)('toolbuilder' buildFullWith: buildNotifierWith:label:message: buildWith: preDebugMessageString)('traits' contents:notifying:)('private' askForSuperclassOf:toImplement:ifCancel: checkContextSelection contextStackIndex:oldContextWas: createMethod externalInterrupt: isolationRecoveryAdvice lowSpaceChoices newStack: process:controller:context: process:controller:context:isolationHead: resetContext: resumeProcess: selectedContext)!!ChangeSorter reorganize!('access' changeSet changeSetCategory changeSetCurrentlyDisplayed label labelString modelWakeUp myChangeSet: parent parent: parenthesizedCategoryName showChangeSet: showChangeSetNamed:)('annotation' addPriorVersionsCountForSelector:ofClass:to:)('changeSet menu' addPreamble addToCategoryOpposite browseChangeSet browseMethodConflicts categorySubmenu:shifted: changeSetCategories changeSetList changeSetListKey:from: changeSetMenu:shifted: checkForAlienAuthorship checkForAnyAlienAuthorship checkForUnclassifiedMethods checkForUncommentedClasses checkForUncommentedMethods checkForUnsentMessages checkThatSidesDiffer: chooseChangeSetCategory chooseChangeSetCategoryInMorphic chooseCngSet clearChangeSet copyAllToOther currentCngSet editPostscript editPreamble expungeUniclasses fileIntoNewChangeSet fileOut fileOutAllChangeSets fileOutCompressed fillAggregateChangeSet findCngSet goToChangeSetsProject inspectChangeSet lookForSlips mailOut mainButtonName makeNewCategory makeNewCategoryShowingClassChanges methodConflictsWithOppositeCategory methodConflictsWithOtherSide newCurrent newSet offerCategorySubmenu offerShiftedChangeSetMenu offerUnshiftedChangeSetMenu openChangeSetBrowser promoteToTopChangeSet remove removeCategory removeContainedInClassCategories removeFromCategory removePostscript removePreamble removePrompting: rename renameCategory reorderChangeSets setRecentUpdatesMarker shiftedChangeSetMenu: showCategoriesOfChangeSet showChangeSetCategory: submergeIntoOtherSide subtractOtherSide trimHistory uninstallChangeSet update updateIfNecessary)('class list' classList classListKey:from: classListMenu:shifted: classMenu: classMenu:shifted: copyClassToOther currentClassName currentClassName: fileOutClass forgetClass messageListKey:from: moveClassToOther selectedClass)('code pane' contents:notifying: setContents toggleDiffing wantsOptionalButtons)('creation' morphicWindow open openAsMorph openAsMorphIn:rect: openView:offsetBy: setDefaultChangeSetCategory veryDeepFixupWith: veryDeepInner:)('message list' browseVersions copyMethodToOther currentSelector currentSelector: forget messageList messageListMenu:shifted: messageMenu:shifted: moveMethodToOther removeFromCurrentChanges removeMessage selectedMessageName shiftedMessageMenu:)('toolbuilder' buildWith: buildWith:in:rect:)('traits' selectedClassOrMetaClass)!!ChangeList reorganize!('accessing' changeList changes:file: currentChange file listHasSingleEntry listSelections setLostMethodPointer: showsVersions)('initialization-release' addItem:text: changeListButtonSpecs initialize openAsMorphName:multiSelect: optionalButtonHeight optionalButtonRow optionalButtonsView wantsPrettyDiffOption)('menu actions' acceptFrom: browseAllVersionsOfSelections browseCurrentVersionsOfSelections browseVersions buildMorphicCodePaneWith: changeListKey:from: changeListMenu: compareToCurrentVersion deselectAll destroyCurrentCodeOfSelections fileInSelections fileOutSelections invertSelections perform:orSendTo: removeDoIts removeExistingMethodVersions removeNonSelections removeOlderMethodVersions removeSelections selectAll selectAllConflicts selectConflicts selectConflicts: selectConflictsWith selectMethodsForThisClass selectNewMethods selectSuchThat selectSuchThat: selectUnchangedMethods)('monticello' changeTo:)('scanning' scanCategory scanCategory:class:meta:stamp: scanFile:from:to:)('toolbuilder' buildWith: buildWith:multiSelect:)('viewing access' annotation contents contents: contentsDiffedFromCurrent contentsSymbolQuints diffedVersionContents list listIndex listSelectionAt: listSelectionAt:put: restoreDeletedMethod selectedClass selectedClassOrMetaClass selectedMessageName toggleListIndex: undiffedContents)!!Browser reorganize!('*services-base' browseReference: methodReference optionalButtonRow selectReference:)('accessing' contents contents:notifying: contentsSelection couldBrowseAnyClass doItReceiver editSelection editSelection: noteSelectionIndex:for: request:initialAnswer: spawn: suggestCategoryToSpawnedBrowser:)('annotation' annotation)('breakpoints' toggleBreakOnEntry)('class comment pane' buildMorphicCommentPane classComment:notifying: noCommentNagString)('class functions' addAllMethodsToCurrentChangeSet buildClassBrowser classCommentText classDefinitionText classListMenu: classListMenu:shifted: copyClass createInstVarAccessors defineClass:notifying: editClass editComment explainSpecial: fileOutClass findMethod findMethodWithWildcard hierarchy makeNewSubclass plusButtonHit printOutClass removeClass renameClass shiftedClassListMenu:)('class list' classList classListIndex classListIndex: classListSingleton recent selectClass: selectedClass selectedClassName toggleClassListIndex:)('code pane' codePaneMenu:shifted: compileMessage:notifying: showBytecodes)('construction' addLowerPanesTo:at:with:)('copying' veryDeepInner:)('drag and drop' acceptDroppingMorph:event:inMorph: acceptMethod:dstMessageCategory:srcMessageCategory:dstClass:dstClassOrMeta:srcClassOrMeta:internal:copySemantic: acceptMethod:messageCategory:class:atListMorph:internal:copy: changeCategoryForClass:srcSystemCategory:atListMorph:internal:copy: changeMessageCategoryForMethod:dstMessageCategory:srcMessageCategory:insideClassOrMeta:internal:copySemantic: codeTextMorph dragAnimationFor:transferMorph: dragPassengerFor:inMorph: dragTransferTypeForMorph: dstCategoryDstListMorph: dstClassDstListMorph: dstMessageCategoryDstListMorph: message:compileInClass:fromClass:dstMessageCategory:srcMessageCategory:internal:copySemantic: overwriteDialogHierarchyChange:higher:sourceClassName:destinationClassName:methodSelector: wantsDroppedMorph:event:inMorph:)('initialize-release' addAListPane:to:at:plus: addClassAndSwitchesTo:at:plus: addMorphicSwitchesTo:at: browseSelectionInPlace browserWindowActivated buildClassSwitchView buildCommentSwitchView buildInstanceClassSwitchView buildInstanceSwitchView buildMorphicClassList buildMorphicMessageCatList buildMorphicMessageList buildMorphicSwitches buildMorphicSystemCatList buildOptionalButtonsView defaultBrowserTitle highlightClassList:with: highlightMessageCategoryList:with: highlightSystemCategoryList:with: labelString methodCategoryChanged openAsMorphClassEditing: openAsMorphEditing: openAsMorphMessageEditing: openAsMorphMsgCatEditing: openAsMorphSysCatEditing: openEditString: openMessageCatEditString: openMessageEditString: openOnClassWithEditString: openSystemCatEditString: optionalAnnotationHeight optionalButtonHeight setClass:selector: setSelector: systemCatSingletonKey:from: systemOrganizer:)('message category functions' addCategory alphabetizeMessageCategories buildMessageCategoryBrowser buildMessageCategoryBrowserEditString: canShowMultipleMessageCategories categoryOfCurrentMethod changeMessageCategories: editMessageCategories fileOutMessageCategories highlightMessageList:with: messageCategoryMenu: printOutMessageCategories removeEmptyCategories removeMessageCategory renameCategory showHomeCategory)('message category list' categorizeAllUncategorizedMethods messageCatListSingleton messageCategoryList messageCategoryListIndex messageCategoryListIndex: messageCategoryListSelection rawMessageCategoryList recategorizeMethodSelector: selectMessageCategoryNamed: selectOriginalCategoryForCurrentMethod selectedMessageCategoryName setOriginalCategoryIndexForCurrentMethod toggleMessageCategoryListIndex:)('message functions' addExtraShiftedItemsTo: buildMessageBrowser buildMessageBrowserEditString: defineMessage:notifying: defineMessageFrom:notifying: inspectInstances inspectSubInstances messageListMenu:shifted: removeMessage removeMessageFromBrowser shiftedMessageListMenu:)('message list' messageList messageListIndex messageListIndex: messageListSingleton reformulateList selectedMessage selectedMessageName selectedMessageName: toggleMessageListIndex:)('metaclass' classCommentIndicated classMessagesIndicated classOrMetaClassOrganizer indicateClassMessages indicateInstanceMessages instanceMessagesIndicated metaClassIndicated metaClassIndicated: selectedClassOrMetaClass selectedClassOrMetaClassName setClassOrganizer)('system category functions' addSystemCategory alphabetizeSystemCategories browseAllClasses buildSystemCategoryBrowser buildSystemCategoryBrowserEditString: changeSystemCategories: classNotFound editSystemCategories fileOutSystemCategory findClass potentialClassNames printOutSystemCategory removeSystemCategory renameSystemCategory systemCatSingletonMenu: systemCategoryMenu: updateSystemCategories)('system category list' indexIsOne indexIsOne: selectCategoryForClass: selectedEnvironment selectedSystemCategoryName systemCategoryList systemCategoryListIndex systemCategoryListIndex: systemCategorySingleton toggleSystemCategoryListIndex:)('toolbuilder' buildWith:)('traits' addSpecialMenu: addTrait defineTrait:notifying: newClass newTrait removeNonLocalSelector:)('user interface' addModelItemsToWindowMenu:)!!CodeHolder reorganize!('*services-base' requestor)('annotation' addOptionalAnnotationsTo:at:plus: addPriorVersionsCountForSelector:ofClass:to: annotation annotationForClassCommentFor: annotationForClassDefinitionFor: annotationForHierarchyFor: annotationForSelector:ofClass: annotationPaneMenu:shifted: annotationRequests annotationSeparator defaultAnnotationPaneHeight defaultButtonPaneHeight)('categories' categoryFromUserWithPrompt:for: categoryOfCurrentMethod changeCategory letUserReclassify:in: methodCategoryChanged selectedMessageCategoryName)('categories & search pane' listPaneWithSelector: newSearchPane searchPane textPaneWithSelector:)('commands' abbreviatedWordingFor: adoptMessageInCurrentChangeset browseImplementors browseSenders copyUpOrCopyDown offerMenu offerShiftedClassListMenu offerUnshiftedClassListMenu removeClass shiftedYellowButtonActivity spawn: spawnFullProtocol spawnProtocol spawnToClass: spawnToCollidingClass: unshiftedYellowButtonActivity)('construction' addLowerPanesTo:at:with: buildClassBrowserEditString: buildMorphicCodePaneWith:)('contents' commentContents contents contentsChanged contentsSymbol contentsSymbol:)('controls' addOptionalButtonsTo:at:plus: buttonWithSelector: codePaneProvenanceButton codePaneProvenanceString contentsSymbolQuints decorateButtons decorateForInheritance inheritanceButton optionalButtonPairs optionalButtonRow sourceAndDiffsQuintsOnly)('diffs' defaultDiffsSymbol diffButton diffFromPriorSourceFor: prettyDiffButton regularDiffButton restoreTextualCodingPane showDiffs showDiffs: showPrettyDiffs: showRegularDiffs: showingAnyKindOfDiffs showingDiffsString showingPrettyDiffs showingPrettyDiffsString showingRegularDiffs showingRegularDiffsString toggleColorPrint toggleDiff toggleDiffing togglePlainSource togglePrettyDiffing togglePrettyPrint toggleRegularDiffing wantsDiffFeedback)('eToys-tiles' showTiles: showingTiles showingTilesString)('message category functions' canShowMultipleMessageCategories)('message list' decompiledSourceIntoContents selectedBytecodes selectedMessage sourceStringPrettifiedAndDiffed validateMessageSource:forSelector:)('message list menu' messageListKey:from:)('misc' getSelectorAndSendQuery:to: getSelectorAndSendQuery:to:with: isThereAnOverride isThisAnOverride menuButton modelWakeUpIn: okayToAccept priorSourceOrNil refreshAnnotation refusesToAcceptCode releaseCachedState sampleInstanceOfSelectedClass sendQuery:to: setClassAndSelectorIn: suggestCategoryToSpawnedBrowser: useSelector:orGetSelectorAndSendQuery:to:)('self-updating' didCodeChangeElsewhere stepIn: updateCodePaneIfNeeded updateListsAndCodeIn: wantsStepsIn:)('tiles' addModelItemsToWindowMenu: installTextualCodingPane)('toolbuilder' buildCodeProvenanceButtonWith: buildOptionalButtonsWith: inheritanceButtonColor)('traits' makeSampleInstance showUnreferencedClassVars showUnreferencedInstVars spawnHierarchy)('what to show' addContentsTogglesTo: colorPrintString offerWhatToShowMenu prettyPrintString setContentsToForceRefetch showByteCodes: showComment showDecompile: showDocumentation: showingByteCodes showingByteCodesString showingColorPrint showingDecompile showingDecompileString showingDocumentation showingDocumentationString showingPlainSource showingPlainSourceString showingPrettyPrint showingSource toggleDecompile toggleShowDocumentation toggleShowingByteCodes)!!StringHolder reorganize!('*Tools' copySelector fileOutMessage)('*services-base' codeTextMorph requestor selectedInterval)('Tools' browseAllMessages browseClass browseLocalImplementors browseLocalSendersOfMessages browseMessages browseMethodFull browseSendersOfMessages browseUnusedMethods browseVersions buildMessageBrowser classHierarchy classListKey:from: copyName findMethodInChangeSets inspectInstances inspectSubInstances messageListKey:from: messageListSelectorTitle methodHierarchy offerMenuFrom:shifted: openSingleMessageBrowser packageListKey:from: printOutMessage removeFromCurrentChanges revertAndForget revertToPreviousVersion selectMessageAndEvaluate: systemCatListKey:from: timeStamp)('Tools-traits' browseClassRefs browseClassVarRefs browseClassVariables browseFullProtocol browseInstVarDefs browseInstVarRefs)('accessing' acceptContents: classCommentIndicated contents contents: contentsSelection noteAcceptanceOfCodeFor: reformulateList reformulateListNoting: selectedClassName selectedClassOrMetaClass selectedMessageName textContents:)('code pane menu' codePaneMenu:shifted: perform:orSendTo: showBytecodes spawn:)('evaluation' doItContext doItReceiver)('initialize-release' defaultContents embeddedInMorphicWindowLabeled: initialize openAsMorphLabel: openLabel: openLabel:andTerminate:)('message list menu' offerDurableMenuFrom:shifted:)('optional panes' wantsAnnotationPane wantsOptionalButtons)('toolbuilder' buildWith:)('user edits' clearUserEditFlag okToChange)!!String class reorganize!('*MinimalMorphic-formatting' expandMacro:argument:withExpansions:)('*MinimalMorphic-initialization' initializeHtmlEntities)('accessing' noSeparatorMap separatorMap)('examples' example)('initialization' initialize)('instance creation' cr crlf crlfcrlf fromByteArray: fromPacked: fromString: lf new: readFrom: tab value: with:)('primitives' compare:with:collated: findFirstInString:inSet:startingAt: indexOfAscii:inString:startingAt: stringHash:initialHash: translate:from:to:table:)!!String reorganize!('*MinimalMorphic-*Morphic' asMorph asStringMorph)('*MinimalMorphic-*Morphic-converting' openAsMorph)('*MinimalMorphic-*MorphicExtras-*morphic-Postscript Canvases' asPostscript)('*MinimalMorphic-*versionnumber' asVersion)('*MinimalMorphic-accessing' indexOfSubCollection: leadingCharRunLengthAt: tabDelimitedFieldsDo:)('*MinimalMorphic-comparing' howManyMatch:)('*MinimalMorphic-converting' asAlphaNumeric:extraChars:mergeUID: asByteString asDefaultDecodedString asFourCode convertFromSuperSwikiServerString convertToSuperSwikiServerString encodeForHTTPWithTextEncoding: onlyLetters romanNumber subStrings unparenthetically unzipped withoutLeadingBlanks)('*MinimalMorphic-formatting' expandMacros expandMacrosWith:with: expandMacrosWith:with:with: expandMacrosWith:with:with:with:)('*MinimalMorphic-internet' isoToUtf8 utf8ToIso)('*MinimalMorphic-private' stringhash)('*Network' asUrl)('*eToys-*Morphic' newTileMorphRepresentative)('*monticello' extractNumber)('*network-uri' asURI)('*packageinfo-base' escapeEntities)('*services-base' service serviceOrNil)('*universes-model' uversionEqual: uversionLessThan:)('accessing' byteAt: byteAt:put: byteSize do:toFieldNumber: endsWithDigit findAnySubStr:startingAt: findBetweenSubStrs: findCloseParenthesisFor: findDelimiters:startingAt: findLastOccuranceOfString:startingAt: findString: findString:startingAt: findString:startingAt:caseSensitive: findTokens: findTokens:escapedBy: findTokens:includes: findTokens:keep: findWordStart:startingAt: includesSubString: includesSubstring:caseSensitive: indexOf: indexOf:startingAt: indexOf:startingAt:ifAbsent: indexOfAnyOf: indexOfAnyOf:ifAbsent: indexOfAnyOf:startingAt: indexOfAnyOf:startingAt:ifAbsent: indexOfSubCollection:startingAt:ifAbsent: lastIndexOfPKSignature: lineCorrespondingToIndex: lineCount lineNumber: linesDo: skipAnySubStr:startingAt: skipDelimiters:startingAt: startsWithDigit string)('arithmetic' * + - / // \\)('comparing' < <= = > >= alike: beginsWith: caseInsensitiveLessOrEqual: caseSensitiveLessOrEqual: charactersExactlyMatching: compare: compare:caseSensitive: compare:with:collated: crc16 endsWith: endsWithAnyOf: hash hashMappedBy: match: sameAs: startingAt:match:startingAt:)('converting' adaptToCollection:andSend: adaptToNumber:andSend: adaptToPoint:andSend: adaptToString:andSend: asByteArray asCharacter asDate asDateAndTime asDisplayText asDuration asFileName asHex asHtml asIRCLowercase asIdentifier: asInteger asLegalSelector asLowercase asNumber asOctetString asPacked asParagraph asPluralBasedOn: asSignedInteger asSmalltalkComment asSqueakPathName asString asStringOrText asSymbol asText asTime asTimeStamp asUnHtml asUnsignedInteger asUppercase asUrlRelativeTo: asVmPathName askIfAddStyle:req: asWideString capitalized compressWithTable: contractTo: convertFromEncoding: convertFromWithConverter: convertToEncoding: convertToSystemString convertToWithConverter: correctAgainst: correctAgainst:continuedFrom: correctAgainstDictionary:continuedFrom: encodeForHTTP encodeForHTTPWithTextEncoding:conditionBlock: findSelector initialIntegerOrNil keywords numericSuffix sansPeriodSuffix splitInteger squeakToUtf8 stemAndNumericSuffix subStrings: substrings surroundedBySingleQuotes translateFrom:to:table: translateToLowercase translateToUppercase translateWith: truncateTo: truncateWithElipsisTo: unescapePercents unescapePercentsWithTextEncoding: utf8ToSqueak withBlanksCondensed withBlanksTrimmed withFirstCharacterDownshifted withNoLineLongerThan: withSeparatorsCompacted withoutLeadingDigits withoutTrailingBlanks withoutTrailingDigits)('copying' copyReplaceTokens:with: deepCopy padded:to:with:)('displaying' displayAt: displayOn: displayOn:at: displayOn:at:textColor: displayProgressAt:from:to:during:)('encoding' getInteger32: putInteger32:at: writeLeadingCharRunsOn:)('filter streaming' byteEncode: putOn:)('formatting' expandMacrosWithArguments: expandMacrosWith: format: withCRs)('internet' decodeMimeHeader decodeQuotedPrintable isoToSqueak macToSqueak squeakToIso squeakToMac withInternetLineEndings withSqueakLineEndings withoutQuoting)('paragraph support' indentationIfBlank:)('printing' basicType encodeDoublingQuoteOn: isLiteral printOn: storeOn: stringRepresentation)('system primitives' endsWithAColon findSubstring:in:startingAt:matchTable: numArgs)('testing' hasContentsInExplorer includesUnifiedCharacter isAllDigits isAllSeparators isAsciiString isByteString isOctetString isString isWideString lastPositionOf: lastSpacePosition)('translating' translated translatedIfCorresponds translatedTo:)('user interface' asExplorerString openInWorkspaceWithTitle:)('private' correctAgainstEnumerator:continuedFrom: evaluateExpression:parameters: getEnclosedExpressionFrom: replaceFrom:to:with:startingAt:)!!StrikeFontSet class reorganize!('*MinimalMorphic-as yet unclassified' createExternalFontFileForLatin2: createExternalFontFileForUnicodeJapanese: createExternalFontFileForUnicodeKorean: duplicateArrayElementsForLeadingCharShift)('*MinimalMorphic-fileIn/Out' installExternalFontFileName6:encoding:encodingName:textStyleName: installExternalFontOn:forLocale: installNewFontAtIndex:fromOld:)('as yet unclassified' decodedFromRemoteCanvas: familyName:size: familyName:size:emphasized: findMaximumLessThan:in: newFontArray:)('fileIn/Out' installExternalFontFileName6:inDir:encoding:encodingName:textStyleName: installExternalFontFileName:encoding:encodingName:textStyleName: installExternalFontFileName:inDir:encoding:encodingName:textStyleName: installExternalFontOn:encoding:encodingName:textStyleName: removeFontsForEncoding:encodingName:)!!StrikeFontSet reorganize!('*MinimalMorphic-accessing' descentOf: heightOf: latin1)('*MinimalMorphic-as yet unclassified' ascentKern glyphsEncoding: maxEncoding subscript superscript xTableEncoding:)('*MinimalMorphic-displaying' displayStringR2L:on:from:to:at:kern: fontDisplay)('*nebraska-as yet unclassified' encodedForRemoteCanvas)('accessing' ascentOf: fontArray fontOf: fontOf:ifAbsent: maxAsciiFor: textStyle widthOf:)('as yet unclassified' ascent baseKern bonk:with:at: copy derivativeFonts descent descentKern displayLine:at: emphasis emphasis: emphasized: familyName familySizeFace fontArray: fontNameWithPointSize glyphs height initializeWithFontArray: installOn: installOn:foregroundColor:backgroundColor: lineGrid maxWidth name name: objectForDataStream: pointSize printOn: reset widthOfString: widthOfString:from:to: xTable)('character shapes' characterFormAt: characterFormAt:put:)('displaying' characters:in:displayAt:clippedBy:rule:fillColor:kernDelta:on: displayMultiString:on:from:to:at:kern:baselineY: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: displayString:on:from:to:at:kern:from:baselineY:)('emphasis' makeBoldGlyphs makeItalicGlyphs makeStruckOutGlyphs makeUnderlinedGlyphs)('testing' isFontSet)('private' addNewFont:at: glyphInfoOf:into: questionGlyphInfoInto:)!!StrikeFontFixer reorganize!('*MinimalMorphic-as yet unclassified' characterFormAt:at: displayOn:at:magnifyBy: storeEditedGlyphsOn:)('as yet unclassified' font: forms initialize mappingTable)!!HostFont class reorganize!('*MinimalMorphic-accessing' textStyleFrom: textStyleFromUser)('*MinimalMorphic-system defaults' initForSubtitles initWin32 unloadAsianTT)('accessing' defaultRanges fontNameFromUser listFontName: listFontNames rangesForJapanese textStyleFrom:sizes: textStyleFrom:sizes:ranges:)('instance creation' fontName:size:emphasis: fontName:size:emphasis:rangesArray:)!!StrikeFont class reorganize!('*MinimalMorphic-accessing' familyName:size: setupDefaultFallbackFont)('*MinimalMorphic-examples' convertFontsNamed:)('*MinimalMorphic-font creation' fromHostFont:size:flags:weight: hostFontFromUser)('*MinimalMorphic-instance creation' familyName:pointSize:emphasized: fixAccuISO8859From: fixForISO8859From: fromStrike: fromUser fromUser: fromUser:allowKeyboard: newForJapaneseFromEFontBDFFile:name:overrideWith: newForKoreanFromEFontBDFFile:name:overrideWith: newFromBDFFile:name: newFromEFontBDFFile:name:ranges: newFromEFontBDFFile:name:startRange:endRange: newFromF12File:)('*nebraska-instance creation' decodedFromRemoteCanvas:)('accessing' actualFamilyNames familyName:pointSize: familyNames)('derivative font caching' shutDown)('examples' example readStrikeFont2Family: readStrikeFont2Family:fromDirectory:)('font creation' listFont: listFontNames localeChanged primitiveCreateFont:size:flags:weight: primitiveDestroyFont: primitiveFont:glyphOfChar:into: primitiveFont:widthOfChar: primitiveFontAscent: primitiveFontDescent: primitiveFontEncoding:)('instance creation' familyName:size:emphasized: passwordFontSize:)!!HostFont reorganize!('*MinimalMorphic-accessing' getFontData testEmbeddingFlags)('accessing' baseKern createCharacterToGlyphMap descentKern displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: widthOfString:from:to:)('emphasis' emphasized: makeBoldGlyphs makeItalicGlyphs makeStruckOutGlyphs makeUnderlinedGlyphs)('primitives' primitiveCreateFont:size:emphasis: primitiveDestroyFont: primitiveFont:fullWidthOfChar: primitiveFont:getData: primitiveFont:getKernPair: primitiveFont:glyphOfChar:into: primitiveFont:widthOfChar: primitiveFontAscent: primitiveFontDataSize: primitiveFontDescent: primitiveFontEmbeddingFlags: primitiveFontEncoding: primitiveFontNumKernPairs:)('private-creation' fontName:size:emphasis: fontName:size:emphasis:rangesArray: isoToSqueakMap)!!StrikeFont reorganize!('*MinimalMorphic-Mac reader' aComment readMacFontHex:)('*MinimalMorphic-accessing' ascentKern characterToGlyphMap: descentOf: glyphOf: heightOf: raster subscript superscript xTable:)('*MinimalMorphic-character shapes' characterForm:pixelValueAt:put: characterFormAtMulti: edit: fixOneWideChars makeCarriageReturnsWhite widen:by:)('*MinimalMorphic-displaying' displayStringR2L:on:from:to:at:kern: fontDisplay)('*MinimalMorphic-file in/out' buildfontNamed:fromForms:startingAtAscii:ascent:descent:maxWid: readBDFFromFile:name: readEFontBDFForJapaneseFromFile:name:overrideWith: readEFontBDFForKoreanFromFile:name:overrideWith: readEFontBDFFromFile:name:rangeFrom:to: readEFontBDFFromFile:name:ranges:)('*MinimalMorphic-make arrows' makeAssignArrow makeReturnArrow)('*MinimalMorphic-multibyte character methods' fixAccuISO8859From: fixForISO8859From: fixXTable)('*MinimalMorphic-private' leftAndRighOrNilFor:)('*MinimalMorphic-testing' checkCharacter:)('*nebraska-file in/out' encodedForRemoteCanvas)('Mac reader' fixKerning: strikeFromHex:width:height: xTableFromHex:)('accessing' ascent ascentOf: baseKern characterToGlyphMap derivativeFonts descent descentKern fallbackFont fallbackFont: familyName familySizeFace fontNameWithPointSize glyphInfoOf:into: glyphs height lineGrid maxAscii maxWidth minAscii name name: pointSize pointSize: setGlyphs: textStyle widthOf: xTable)('character shapes' alter:formBlock: characterFormAt: characterFormAt:put: ensureCleanBold extendMaxAsciiTo: fillZeroWidthSlots)('copying' deepCopy postCopy veryDeepCopyWith:)('displaying' characters:in:displayAt:clippedBy:rule:fillColor:kernDelta:on: displayLine:at: displayMultiString:on:from:to:at:kern:baselineY: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: installOn: installOn:foregroundColor:backgroundColor: widthOfString:from:to:)('emphasis' bonk:with: emphasis emphasis: emphasized: makeBoldGlyphs makeCondensedGlyphs makeItalicGlyphs makeStruckOutGlyphs makeUnderlinedGlyphs releaseCachedState reset)('file in/out' displayChar:form: newFromStrike: objectForDataStream: printOn: readBFHeaderFrom: readF12FromStream: readFromBitFont: readFromStrike2Stream: readFromStrike2: restOfLine:from: writeAsStrike2named: writeAsStrike2On:)('multibyte character methods' fixAscent:andDescent:head: hasGlyphOf: readCharacter:from: setupDefaultFallbackFont)('private' createCharacterToGlyphMap)!!StreamingMonoSound reorganize!('accessing' duration repeat repeat: soundPosition soundPosition: streamSamplingRate volume volume:)('converting' saveAsFileNamed:compressionType: storeSunAudioOn:compressionType:)('initialization' initStream:headerStart:)('other' closeFile extractFrom:to:)('playing' millisecondsSinceStart playSampleCount:into:startingAt: reset samplesRemaining)('private' createMixer currentSampleIndex loadBuffer:compressedSampleCount: loadBuffer:uncompressedSampleCount: loadBuffersForSampleCount: loadFromLeftovers:sampleCount: positionCodecTo: readAIFFHeader readHeader readSunAudioHeader startOver)!!SmartRefStream class reorganize!('*MinimalMorphic-accessing' subObjects:ofClass:)('*MinimalMorphic-initialize-release' cleanUpCategories)('*MinimalMorphic-utilities' statsOfSubObjects: tallyOfSubObjects:)('accessing' scannedObject scannedObject:)('i/o' objectFromStreamedRepresentation: read:withClasses: scanFrom:)('utilities' streamedRepresentationOf:)!!SmartRefStream reorganize!('*MinimalMorphic-class changed shape' writeConversionMethod:class:was:fromInstVars:to:)('*MinimalMorphic-conversion' abstractStringx0 bookPageMorphbosfcepcbbfgcc0 clippingMorphbosfcep0 clippingMorphbosfcepc0 dropShadowMorphbosfces0 gradientFillbosfcepbbfgcc0 layoutMorphbosfcepbbochvimol0 layoutMorphbosfcepcbbochvimol0 morphicEventtcbks0 morphicSoundEventtcbkss0 multiStringx0 multiSymbolx0 myMorphbosfce0 newMorphicEventts0 scrollControllermvslrrsmsms0 transparentColorrcc0 worldMorphbosfcebbfgccpmcpbttloiairfidcuwhavcdsll0)('*MinimalMorphic-read write' nextPutObjOnly: restoreClassInstVars)('*starSqueak-*starSqueak' starLogoAntColonybosfcedppplppppttwssdlgrstta0 starLogoMorphbosfcedppplppppttwssdlgrstt0 starLogoTreesbosfcedppplppppttwssdlgrsttdt0 starLogoTurtlewwxywwhcpn0)('accessing' structures: superclasses:)('class changed shape' catalogValues:size: conversionMethodsFor: storeInstVarsIn:from: writeClassRename:was: writeClassRenameMethod:was:fromInstVars: writeConversionMethodIn:fromInstVars:to:renamedFrom:)('conversion' alansTextPlusMorphbosfcebbmsopssrsggshtt0)('import image segment' applyConversionMethodsTo:className:varMap: checkFatalReshape: convert1:to:allVarMaps: convert2:allVarMaps: mapClass:origName: reshapedClassesIn:)('read write' appendClassDefns checkCrLf initKnownRenames initShapeDicts instVarInfo: mapClass: moreObjects next nextAndClose nextPut: noHeader readInstance readInstanceSize:clsname:refPosn: readShortInst readWordLike recordImageSegment: renamed renamedConv saveClassInstVars scanFrom: setStream: setStream:reading: structures superclasses uniClasesDo: uniClassInstVarsRefs: verifyStructure versionSymbol:)!!SharedQueue2 reorganize!('*39Deprecated' flush flushAllSuchThat: removeAll removeAllSuchThat:)('accessing' next nextOrNil nextOrNilSuchThat: nextPut: peek)('initializing' initialize)('printing' printOn:)('size' isEmpty size)!!JPEGReadStream reorganize!('accessing' fillBuffer getBits: nextByte nextBytes: reset resetBitBuffer)('huffman trees' buildLookupTable:counts: createHuffmanTables:counts:from:to: decodeValueFrom: growHuffmanTable:)!!GZipReadStream class reorganize!('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-fileIn/Out' fileIntoNewChangeSet: fileReaderServicesForFile:suffix: services)('fileIn/Out' fileIn: saveContents: serviceDecompressToFile serviceFileIn serviceFileIntoNewChangeSet serviceViewDecompress uncompressedFileName: viewContents:)!!GZipReadStream reorganize!('crc' updateCrc:from:to:in: verifyCrc)('initialize' on:from:to:)!!FastInflateStream class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' initialize)!!FastInflateStream reorganize!('bit access' nextSingleBits:)('huffman trees' distanceMap increment:bits: literalLengthMap)('inflating' decompressBlock:with: processFixedBlock)!!InflateStream reorganize!('*MinimalMorphic-private' profile)('accessing' close contents next next: next:into:startingAt: size sourceLimit sourcePosition sourceStream upTo: upToEnd)('bit access' bitPosition nextBits: nextByte nextSingleBits:)('crc' crcError: updateCrc:from:to:in: verifyCrc)('huffman trees' computeHuffmanValues:counts:from:to: createHuffmanTables:counts:from:to: decodeDynamicTable:from: distanceMap growHuffmanTable: huffmanTableFrom:mappedBy: increment:bits: literalLengthMap mapValues:by:)('inflating' decodeValueFrom: decompressBlock:with: proceedDynamicBlock proceedFixedBlock proceedStoredBlock processDynamicBlock processFixedBlock processStoredBlock)('initialize' on: on:from:to: reset)('testing' atEnd)('private' decompressAll getFirstBuffer getNextBlock moveContentsToFront moveSourceToFront pastEndRead)!!ReadStream reorganize!('*packageinfo-base' untilEnd:displayingProgress:)('accessing' ascii binary next next: next:into:startingAt: nextFloat nextPut: readStream size upTo: upToEnd)('file stream compatibility' localName openReadOnly readOnly)('private' on:from:to:)!!PositionableStream reorganize!('*MinimalMorphic-accessing' nextInto:startingAt:)('*MinimalMorphic-converting' asBinaryOrTextStream asZLibReadStream)('*MinimalMorphic-data get/put' boolean boolean: int32 int32: uint24 uint24:)('*MinimalMorphic-fileIn/Out' decodeStyle:version: fileInSilentlyAnnouncing:)('*MinimalMorphic-positioning' backUpTo: padTo:put: padToNextLongPut: pushBack:)('*packageinfo-base' untilEnd:displayingProgress:)('accessing' back contents contentsOfEntireFile last nextDelimited: nextInto: nextLine nextWordsInto: next: next:into: next:into:startingAt: next:putAll: next:putAll:startingAt: originalContents peek peekBack peekFor: upToAll: upToEnd upTo:)('data get/put' int16 int16: string string: uint16 uint16: uint32 uint32:)('fileIn/Out' backChunk basicNextChunk checkForPreamble: command: copyMethodChunkFrom: copyMethodChunkFrom:at: copyPreamble:from:at: decodeString:andRuns: fileIn fileInAnnouncing: fileInFor:announcing: header nextChunk nextChunkText parseLangTagFor: skipSeparators skipSeparatorsAndPeekNext skipStyleChunk trailer unCommand verbatim:)('nonhomogeneous accessing' nextInt32 nextInt32Put: nextLittleEndianNumber: nextLittleEndianNumber:put: nextNumber: nextNumber:put: nextString nextStringOld nextStringPut: nextWord nextWordPut:)('positioning' match: position positionOfSubCollection: positionOfSubCollection:ifAbsent: position: reset resetContents setToEnd skipTo: skip: untilEndWithFork:displayingProgress:)('testing' atEnd isBinary isEmpty)('private' on: positionError setFrom:to:)!!MailAddressTokenizer class reorganize!('class initialization' initialize)('instance creation' forString: tokensIn:)!!MailAddressTokenizer reorganize!('initialization' initialize:)('stream protocol' atEnd next peek)('tokenizing' atEndOfChars nextAtom nextChar nextComment nextDomainLiteral nextQuotedString nextSpecial nextToken peekChar skipSeparators)!!DataStream class reorganize!('*MinimalMorphic-as yet unclassified' exampleWithPictures)('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' example fileNamed: initialize new newFileNamed: oldFileNamed: on: streamedRepresentationOf: testWith: unStream:)!!DataStream reorganize!('*MinimalMorphic-write and read' readBoolean readFloatString writeBoolean: writeFloatString:)('other' atEnd byteStream close contents errorWriteReference: flush next: nextAndClose project reset rootObject rootObject: setStream: setStream:reading: size vacantRef)('write and read' beginInstance:size: beginReference: getCurrentReference maybeBeginReference: next nextPut: nextPutAll: noteCurrentReference: objectAt: objectIfBlocked: outputReference: readArray readBitmap readByteArray readClass readFalse readFloat readInstance readInteger readMethod readNil readRectangle readReference readShortInst readShortRef readString readStringOld readSymbol readTrue readUser readWordArray readWordArrayForSegment readWordLike replace:with: setCurrentReference: tryToPutReference:typeID: typeIDFor: writeArray: writeBitmap: writeByteArray: writeClass: writeFalse: writeFloat: writeInstance: writeInteger: writeNil: writeRectangle: writeString: writeStringOld: writeSymbol: writeTrue: writeUser: writeWordLike:)!!AttributedTextStream reorganize!('*MinimalMorphic-access' currentAttributes)('access' currentAttributes: size)('retrieving the text' contents)('stream protocol' nextPut: nextPutAll:)('private-initialization' initialize)!!Stream reorganize!('*MinimalMorphic-alternate syntax' dialect)('*monticello' isMessageStream)('accessing' basicNext basicNextPut: basicNextPutAll: binary contents flush localName next next: next:put: nextMatchAll: nextMatchFor: nextPut: nextPutAll: openReadOnly printOn: readOnly upToEnd)('alternate syntax' withStyleFor:do:)('as yet unclassified' sleep)('enumerating' do:)('file open/close' close)('filter streaming' write:)('printing' print: printHtml:)('testing' atEnd closed isStream isTypeHTTP nextWordsPutAll:)!!StepMessage reorganize!('accessing' stepTime:)('printing' printOn:)('testing' stepTime)!!StarMorph reorganize!('access' skipRatios starRatio)('accessing' starRatio:)('editing' addHandles addStarHandles changeVertices:event:fromHandle: dragVertex:event:fromHandle: placeHandles updateHandles withCenterOuterHandles withUpDownLeftRightHandlesAround:center:)('geometry' nextSkip nextTwinkleSkip prevSkip prevTwinkleSkip)('initialization' defaultBorderColor defaultBorderWidth defaultCenter defaultColor defaultFirstVertex defaultSides defaultStarRatio initialize insureCompatability makeVertices: makeVertices:starRatio: makeVertices:starRatio:withCenter:withPoint:)('menu' addChangeSidesMenuItems:hand: addCustomMenuItems:hand: addTwinkleMenuItems:hand: oneLessVertex oneMoreVertex)('menus' lessVertices moreVertices nextTwinkle prevTwinkle updateFormFromUser)('parts bin' initializeToStandAlone)!!StandardToolSet class reorganize!('*MinimalMorphicInitialization' initializeClass)('browsing' browse:selector: browseChangeSetsWithClass:selector: browseHierarchy:selector: browseMessageNames: browseMessageSet:name:autoSelect: browseVersionsOf:selector: openChangedMessageSet: openClassListBrowser:title:)('class initialization' unload)('debugging' debug:context:label:contents:fullView: debugContext:label:contents: debugError: debugSyntaxError: interrupt:label:)('inspecting' basicInspect: explore: inspect: inspect:label: inspectorClassOf:)('menu' menuItems openChangeSorter openClassBrowser openDualChangeSorter openFileList openMessageNames openPackagePaneBrowser openProcessBrowser openSelectorBrowser openWorkspace)!!StandardSystemController reorganize!('basic control sequence' controlInitialize controlTerminate)('borders' adjustPaneBorders adjustWindowBorders adjustWindowCorners checkForReframe cursorOnBorder fullScreen)('control defaults' blueButtonActivity controlActivity isControlActive redButtonActivity)('cursor' labelHasCursor)('initialize-release' initialize)('menu messages' chooseColor close collapse expand label move reframe toggleTwoTone under)('pluggable menus' getPluggableYellowButtonMenu:)('scheduling' closeAndUnschedule closeAndUnscheduleNoErase closeAndUnscheduleNoTerminate open openDisplayAt: openNoTerminate openNoTerminateDisplayAt: status:)!!StandardScriptingSystem class reorganize!('*MinimalMorphicInitialization' initializeClass)('flexibleVocabularies-flexibleVocabularies' noteAddedSelector:meta: noteCompilationOf:meta:)!!StandardScriptingSystem reorganize!('eToys-customevents-custom events' addCustomEventFor:named:help:targetMorphClass: customEventStati customEventsRegistry globalCustomEventNames removeCustomEventNamed:for: standardEventStati userCustomEventNames)('eToys-font & color choices' colorBehindTiles fontForNameEditingInScriptor fontForTiles smallBoldFont statusColorSymbolFor: uniformTileInteriorColor)('eToys-form dictionary' installSolidMenuForm mergeGraphicsFrom: patchInNewStandardPlayerForm readFormsFromFileNamed: readFormsFromFileNamed:andStoreIntoGlobal: restorePrivateGraphics saveFormsToFileNamed: standardForms)('eToys-parts bin' prototypicalHolder resetStandardPartsBin)('eToys-script-control' stepStillDown:with: stepUp:with:)('eToys-tile colors' colorForType: colorFudge standardTileBorderColor)('eToys-universal slots & scripts' acceptableSlotNameFrom:forSlotCurrentlyNamed:asSlotNameIn:world: doesOperatorWantArrows:)('eToys-utilities' allKnownClassVariableNames arithmeticalOperatorsAndHelpStrings helpStringForOperator: helpStringOrNilForOperator: informScriptingUser: nameForInstanceVariablesCategory nameForScriptsCategory numericComparitorsAndHelpStrings reportToUser: resetAllScriptingReferences restoreClassicEToyLook setterSelectorForGetter: tryButtonFor:)('form dictionary' deletePrivateGraphics deletePrivateGraphics:afterStoringToFileNamed: formAtKey: formAtKey:extent:depth: formDictionary inspectFormDictionary privateGraphics saveForm:atKey: squeakyMouseForm)('help dictionary' helpStringOrNilFor:)('utilities' allClassVarNamesInSystem customizeForEToyUsers: soundNamesToSuppress stripGraphicsForExternalRelease)!!StandardFileMenuResult reorganize!('accessing' directory directory: name name: printOn:)('testing' isCommand isDirectory)('private' directory:name:)!!StandardFileMenu class reorganize!('instance creation' newFileMenu: newFileMenu:withPattern: newFileMenu:withPatternList: oldFileMenu: oldFileMenu:withPattern: oldFileMenu:withPatternList:)('standard file operations' newFile newFileFrom: newFileStream newFileStreamFrom: oldFile oldFileFrom: oldFileFrom:withPattern: oldFileStream oldFileStreamFrom:)!!StandardFileMenu reorganize!('basic control sequences' confirmExistingFiles: getTypedFileName: startUpWithCaption:at:)('menu building' directoryNamesString: fileNamesString: makeFileMenuFor: menuLabelsString: menuLinesArray: menuSelectionsArray: pathPartsString:)('private' advance:containingDirectoriesFrom: computeLabelParagraph newFileFrom: newFileFrom:withPattern: newFileFrom:withPatternList: oldFileFrom: oldFileFrom:withPattern: oldFileFrom:withPatternList: pattern: patternList:)!!SqNumberParser reorganize!('accessing' exponentLetters failBlock: requestor:)('error' expected: fail)('initialize-release' on:)('parsing-private' makeFloatFromMantissa:exponent:base: makeIntegerOrScaledInteger readExponent readScale)('parsing-public' nextIntegerBase: nextIntegerBase:ifFail: nextNumber nextUnsignedIntegerBase: nextUnsignedIntegerBase:ifFail:)!!SparseLargeTable class reorganize!('*MinimalMorphic-accessing' defaultChunkSizeForFiles)('accessing' defaultChunkSize)('instance creation' new: new:chunkSize: new:chunkSize:arrayClass: new:chunkSize:arrayClass:base: new:chunkSize:arrayClass:base:defaultValue:)!!SparseLargeTable reorganize!('*MinimalMorphic-private' analyzeSpaceSaving similarSpeciesInstance similarSpeciesInstance: speciesNew)('accessing' arrayClass at: at:put: base chunkSize noCheckAt: noCheckAt:put: size zapDefaultOnlyEntries)('initialization' initChunkSize:size:arrayClass:base:defaultValue:)('printing' printElementsOn: printOn: storeOn:)('private' allDefaultValueSubtableAt: copyEmpty findLastNonNilSubTable privateSize: pvtCheckIndex: similarInstance similarInstance: speciesNew:)!!SpaceTally reorganize!('accessing' results)('class analysis' computeSpaceUsage preAllocateResultsFor: spaceTally: systemWideSpaceTally)('fileOut' compareTallyIn:to: printSpaceAnalysis printSpaceAnalysis:on: printSpaceDifferenceFrom:to: saveTo:)('instance size' spaceForInstancesOf:withInstanceCount:)!!SoundRecorder class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' anyActive canRecordWhilePlaying)!!SoundInputStream reorganize!('accessing' bufferCount bufferSize bufferSize: isRecording nextBufferOrNil)('initialization' initialize)('recording controls' startRecording stopRecording)('private' allocateBuffer emitBuffer:)!!SoundRecorder reorganize!('accessing' codec: desiredSampleRate: isActive isPaused meterLevel recordLevel recordLevel: samplingRate samplingRate:)('initialization' initialize initializeRecordingState)('primitives' primGetActualRecordingSampleRate primRecordSamplesInto:startingAt: primSetRecordLevel: primStartRecordingDesiredSampleRate:stereo:semaIndex: primStopRecording)('recording controls' clearRecordedSound hasRecordedSound pause playback resumeRecording startRecording stopRecording verifyExistenceOfRecordedSound)('results' condensedSamples condensedStereoSound recordedSound soundSegments)('trimming' copyFrom:to:normalize:dcOffset: copyTo:from:to:from:startingAt:normalize:dcOffset: endPlace firstSampleOverThreshold:dcOffset:startingAt: normalizeFactorFor:min:max:dcOffset: place:plus: scanForEndThreshold:dcOffset:minLull:startingAt: scanForStartThreshold:dcOffset:minDur:startingAt: segmentsAbove:normalizedVolume: suppressSilence trim:normalizedVolume:)('private' allocateBuffer emitBuffer: emitPartialBuffer meterFrom:count:in: recordLoop samplesPerFrame)!!SoundPlayer class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' bufferMSecs reverbState samplingRate setVolumeLeft:volumeRight: soundVolume stereo)('initialization' useLastBuffer useLastBuffer: useShortBuffer)('player process' isReverbOn lastPlayBuffer oldStylePlayLoop playLoop playerProcess startPlayerProcessBufferSize:rate:stereo: startPlayerProcessBufferSize:rate:stereo:sound: startReverb stopPlayerProcess stopReverb)('playing' canStartPlayer isPlaying: pauseSound: playSound: resumePlaying: resumePlaying:quickStart: stopPlayingAll waitUntilDonePlaying:)('primitive test' boinkPitch:dur:loudness:waveTable:pan: boinkScale playTestSample:pan: sineTable:)('snapshotting' shutDown startUp startUpWithSound:)('private' isAllSilence:size: primSoundAvailableBytes primSoundGetVolume primSoundInsertSamples:from:samplesOfLeadTime: primSoundPlaySamples:from:startingAt: primSoundSetVolumeLeft:volumeRight: primSoundStartBufferSize:rate:stereo: primSoundStartBufferSize:rate:stereo:semaIndex: primSoundStop startPlayingImmediately:)!!MuLawCodec reorganize!('external access' uLawDecodeSample: uLawEncodeSample:)('subclass responsibility' bytesPerEncodedFrame decodeFrames:from:at:into:at: encodeFrames:from:at:into:at: samplesPerFrame)('private' uLawEncode12Bits:)!!GSMCodec reorganize!('primitives' primDecode:frames:from:at:into:at: primEncode:frames:from:at:into:at: primNewState)('subclass responsibilities' bytesPerEncodedFrame decodeFrames:from:at:into:at: encodeFrames:from:at:into:at: reset samplesPerFrame)!!ADPCMCodec reorganize!('bit streaming' nextBits: nextBits:put:)('codec stuff' bytesPerEncodedFrame compressAndDecompress: decodeFrames:from:at:into:at: encodeFrames:from:at:into:at: reset resetForMono resetForStereo samplesPerFrame)('private' decode:bitsPerSample: decode:sampleCount:bitsPerSample:frameSize:stereo: decodeFlash:sampleCount:stereo: encode:bitsPerSample: encodeFlashLeft:right:bitsPerSample: encodeLeft:right:bitsPerSample:frameSize:forFlash: headerBitsForSampleCount:stereoFlag: indexForDeltaFrom:to: initializeForBitsPerSample:samplesPerFrame: privateDecodeMono: privateDecodeStereo: privateEncodeMono: privateEncodeStereo:)!!SoundCodec reorganize!('compress/decompress' compressAndDecompress: compressSound: compressSound:atRate: decompressSound:)('subclass responsibilities' bytesPerEncodedFrame decodeFrames:from:at:into:at: encodeFrames:from:at:into:at: reset samplesPerFrame)('private' decodeCompressedData: encodeSoundBuffer: frameCount:)!!SoundBuffer class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' sineTable)('instance creation' averageEvery:from:upTo: fromArray: fromByteArray: new: newMonoSampleCount: newStereoSampleCount:)('objects from disk' startUp startUpFrom:)!!SoundBuffer reorganize!('accessing' bytesPerElement monoSampleCount size stereoSampleCount)('as yet unclassified' writeOnGZIPByteStream:)('objects from disk' restoreEndianness reverseEndianness)('primitives' at: at:put: primFill:)('utilities' asByteArray averageEvery:from:upTo: downSampledLowPassFiltering: extractLeftChannel extractRightChannel indexOfFirstSampleOver: indexOfLastSampleOver: lowPassFiltered mergeStereo normalized: saveAsAIFFFileSamplingRate:on: splitStereo storeExtendedFloat:on: trimmedThreshold:)!!Sonogram reorganize!('all' extent:minVal:maxVal:scrollDelta: plotColumn: scroll)('geometry' extent:)!!SolidFillStyle reorganize!('accessing' color: display scaledPixelValue32)('converting' asColor)('printing' printOn:)('testing' isSolidFill isTranslucent isTransparent)!!SocksSocket reorganize!('connection open/close' connectTo:port: connectToHostNamed:port:)('initialize' socks4 socks5)('methods' noAutorizationMethod)('socks4' connectSocks4 sendSocks4ConnectionRequestUserId: waitForSocks4ConnectionReply)('socks5' connectSocks5 hostIP6Code hostIPCode qualifiedHostNameCode sendSocks5ConnectionRequest skipQualifiedHostName socks5MethodSelection socks5RequestReply)('private' connectCommandCode defaultTimeOutDuration dstIP dstPort requestGrantedCode shouldUseSocks socksError: waitForReply:for:)!!SocketStream reorganize!('configuration' ascii autoFlush autoFlush: binary bufferSize bufferSize: inBufferSize noTimeout outBufferSize shouldSignal shouldSignal: socket socket: timeout timeout:)('control' close flush receiveData: recentlyRead)('initialize-release' initialize)('printing' debug print: printOn:)('stream in' next next: nextAllInBuffer nextAvailable nextAvailable: nextInBuffer: nextLine nextLineCrLf nextLineLf peek peek: peekFor: peekForAll: skip: upTo: upToAll: upToEnd)('stream out' cr crlf nextPut: nextPutAll: nextPutAllFlush: sendCommand: space)('testing' atEnd isBinary isConnected isDataAvailable isEmpty isInBufferEmpty isOtherEndConnected shouldTimeout)('private' adjustInBuffer: adjustOutBuffer: checkFlush growInBuffer moveInBufferDown resetBuffers resizeInBuffer: streamBuffer:)('private-socket' receiveAvailableData receiveData receiveDataIfAvailable)!!Socket class reorganize!('class initialization' initialize)('instance creation' acceptFrom: createIfFail: new newTCP newUDP tcpCreateIfFail: udpCreateIfFail:)('network initialization' initializeNetwork primInitializeNetwork:)('registry' register: registry registryThreshold registryThreshold: unregister:)('tests' loopbackTest newAcceptCheck sendTest)('utilities' deadServer deadServer: deadlineSecs: nameForWellKnownTCPPort: ping: pingPorts:on:timeOutSecs: pingPortsOn: standardDeadline standardTimeout wildcardAddress wildcardPort)!!Socket reorganize!('accessing' address localAddress localPort peerName port primitiveOnlySupportsOneSemaphore readSemaphore remoteAddress remotePort semaphore socketHandle writeSemaphore)('connection open/close' accept close closeAndDestroy closeAndDestroy: connectNonBlockingTo:port: connectTo:port: connectTo:port:waitForConnectionFor: connectToHostNamed:port: disconnect listenOn: listenOn:backlogSize: listenOn:backlogSize:interface:)('datagrams' receiveDataInto:fromHost:port: receiveUDPDataInto: sendData:toHost:port: sendUDPData:toHost:port: setPeer:port: setPort:)('finalization' finalize)('initialize-destroy' acceptFrom: destroy initialize: initializeNetwork)('other' getOption: setOption:value:)('primitives' primAcceptFrom:receiveBufferSize:sendBufSize:semaIndex: primAcceptFrom:receiveBufferSize:sendBufSize:semaIndex:readSemaIndex:writeSemaIndex: primSocket:connectTo:port: primSocket:getOption: primSocket:listenOn: primSocket:listenOn:backlogSize: primSocket:listenOn:backlogSize:interface: primSocket:receiveDataInto:startingAt:count: primSocket:receiveUDPDataInto:startingAt:count: primSocket:sendData:startIndex:count: primSocket:sendUDPData:toHost:port:startIndex:count: primSocket:setOption:value: primSocket:setPort: primSocketAbortConnection: primSocketCloseConnection: primSocketConnectionStatus: primSocketCreateNetwork:type:receiveBufferSize:sendBufSize:semaIndex: primSocketCreateNetwork:type:receiveBufferSize:sendBufSize:semaIndex:readSemaIndex:writeSemaIndex: primSocketDestroy: primSocketDestroyGently: primSocketError: primSocketLocalAddress: primSocketLocalPort: primSocketReceiveDataAvailable: primSocketRemoteAddress: primSocketRemotePort: primSocketSendDone:)('printing' printOn:)('queries' dataAvailable isConnected isOtherEndClosed isThisEndClosed isUnconnected isUnconnectedOrInvalid isValid isWaitingForConnection sendDone socketError statusString)('receiving' discardReceivedData receiveAvailableData receiveAvailableDataInto: receiveAvailableDataInto:startingAt: receiveAvailableDataIntoBuffer: receiveData receiveDataInto: receiveDataInto:startingAt: receiveDataSignallingClosedInto:startingAt: receiveDataSignallingTimeout:into:startingAt: receiveDataTimeout: receiveDataTimeout:into: receiveDataTimeout:into:startingAt: receiveDataWithTimeout receiveDataWithTimeoutInto: receiveDataWithTimeoutInto:startingAt: receiveSomeData receiveSomeDataInto: receiveSomeDataInto:startingAt:)('registry' register unregister)('sending' sendData: sendData:count: sendSomeData: sendSomeData:startIndex: sendSomeData:startIndex:count: sendStreamContents: sendStreamContents:checkBlock:)('waiting' waitForAcceptFor: waitForAcceptFor:ifTimedOut: waitForConnectionFor: waitForConnectionFor:ifTimedOut: waitForData waitForDataFor: waitForDataFor:ifClosed:ifTimedOut: waitForDataIfClosed: waitForDisconnectionFor: waitForSendDoneFor:)!!SmalltalkImage reorganize!('*MinimalMorphic-external' exitToDebugger unbindExternalPrimitives)('*MinimalMorphic-housekeeping' reconstructChanges2)('*MinimalMorphic-image cleanup' fixObsoleteReferences)('*MinimalMorphic-modules' forgetModule: unloadModule:)('*MinimalMorphic-snapshot and quit' snapshot:andQuit:embedded:)('*MinimalMorphic-sources, changes log' saveAsEmbeddedImage)('*MinimalMorphic-vm parameters' extraVMMemory:)('*MinimalMorphic-vm profiling' profile:)('*MinimalMorphic-vm statistics' vmStatisticsShortString)('endian' calcEndianness endianness isBigEndian isLittleEndian)('image cleanup' cleanup)('image, changes names' changeImageNameTo: changesName currentChangeSetString fullNameForChangesNamed: fullNameForImageNamed: imageName imageName: imagePath primImageName primImageName: primVmPath sourceFileVersionString sourcesName vmPath)('modules' listBuiltinModule: listBuiltinModules listLoadedModule: listLoadedModules)('preferences' setPlatformPreferences)('quit' quitPrimitive)('snapshot and quit' getFileNameFromUser recordStartupStamp saveSession shutDown snapshot:andQuit: snapshotEmbeddedPrimitive snapshotPrimitive)('sources, change log' logChange:)('sources, changes log' aboutThisSystem assureStartupStampLogged closeSourceFiles datedVersion event: forceChangesToDisk lastQuitLogPosition lastQuitLogPosition: lastUpdateString openSourceFiles saveAs saveAsNewVersion saveChangesInFileNamed: saveImageInFileNamed: saveImageSegments systemInformationString timeStamp:)('system attribute' extractParameters getSystemAttribute: osVersion platformName platformSubtype vmVersion)('utilities' stripMethods:messageCode:)('vm parameters' extraVMMemory getVMParameters vmParameterAt: vmParameterAt:put:)('vm profiling' clearProfile dumpProfile startProfiling stopProfiling)('vm statistics' textMarkerForShortReport vmStatisticsReportString)('private source file' sourceFileVersionString:)!!SmallLandColorTheme reorganize!('applying' apply updateTopProject)('initialization' baseColors initialize)('printing' printOn:)('theme' balloonColor cancelColor defaultWorldColor helpColor insertionPointColor keyboardFocusColor okColor textHighlightColor)('theme - dialogs' dialog3DTitles dialogBorderColor dialogBorderWidth dialogButtonBorderWidth dialogColor dialogPaneBorderColor dialogPaneBorderWidth dialogPaneRampOrColor dialogRampOrColor dialogTextBoxBorderColor dialogTextBoxColor)('theme - dockingbar' dockingBarAutoGradient dockingBarColor dockingBarGradientRamp)('theme - menus' menuBorderColor menuBorderWidth menuColor menuLineColor menuSelectionColor menuTitleBorderColor menuTitleBorderWidth menuTitleColor)('private - colors' dark: labelForColor: light: normal: rowOf: showColors)!!SmallInteger class reorganize!('*MinimalMorphic-documentation' guideToDivision)('*MinimalMorphic-plugin generation' ccg:generateCoerceToOopFrom:on: ccg:generateCoerceToValueFrom:on: ccg:prolog:expr:index: ccgCanConvertFrom:)('constants' maxVal minVal)('instance creation' basicNew new)!!SmallInteger reorganize!('*MinimalMorphic-printing' destinationBuffer:)('*eToys-printing' uniqueNameForReference)('arithmetic' * + - / // \\ gcd: quo:)('bit manipulation' bitAnd: bitOr: bitShift: bitXor: hashMultiply highBit highBitOfMagnitude lowBit)('comparing' < <= = > >= hash identityHash identityHashMappedBy: ~=)('converting' as31BitSmallInt asFloat)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('printing' threeDigitName)('system primitives' asOop digitAt: digitAt:put: digitLength instVarAt: nextInstance nextObject)('testing' even odd)('private' fromString:radix: highBitOfPositiveReceiver)!!SimpleSliderMorph class reorganize!('eToys-scripting' additionsToViewerCategories)('printing' defaultNameStemForInstances)('scripting' authoringPrototype)!!SimpleSliderMorph reorganize!('accessing' actionSelector actionSelector: arguments arguments: maxVal maxVal: minVal minVal: target target:)('copying' updateReferencesUsing: veryDeepFixupWith: veryDeepInner:)('e-toy support' isLikelyRecipientForMouseOverHalos)('eToys-e-toy support' arrowDeltaFor: getNumericValue setNumericValue:)('initialization' initialize)('menu' addCustomMenuItems:hand: addSliderMenuItems:hand: addTargetingMenuItems:hand: clearTarget descendingString setActionSelector setArguments setLabel setMaxVal setMinVal setMinVal: setTarget: toggleDescending toggleTruncate truncateString)('model access' setValue:)('parts bin' initializeToStandAlone)('private' adjustToValue: getScaledValue setMaxVal: setScaledValue: truncate truncate:)!!ScrollBar class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' alwaysShowFlatScrollbarForAlternativeLook)('class initialization' createArrowImagesCache createBoxImagesCache initializeImagesCache)('coloring morphs' updateScrollBarButtonAspect:color: updateScrollBarButtonsAspect:color:)('images' arrowOfDirection:size:color: boxOfSize:color: changesInPreferences createArrowOfDirection:in: createArrowOfDirection:size:color: createBoxIn: createBoxOfSize:color: verticesForComplexArrow: verticesForSimpleArrow:)('images - samples' arrowSamples boxSamples sampleColors sampleSizes)!!ScrollBar reorganize!('access' adoptPaneColor: interval: pagingArea roundedScrollbarLook scrollDelta scrollDelta:pageDelta: sliderColor: sliderShadowColor thumbColor)('geometry' buttonExtent expandSlider extent: sliderExtent sliderThickness totalSliderArea)('initialize' downImage initialize initializeDownButton initializeEmbedded: initializeMenuButton initializePagingArea initializeSlider initializeUpButton menuImage upArrow8Bit upImage updateDownButtonImage updateMenuButtonImage updateUpButtonImage)('model access' setValue:)('other events' menuButtonMouseDown: mouseDownInSlider:)('scroll timing' resetTimer waitForDelay1:delay2:)('scrolling' doScrollByPage doScrollDown doScrollUp finishedScrolling scrollBarAction scrollBarAction: scrollDown scrollDown: scrollDownInit scrollPageInit: scrollUp scrollUp: scrollUpInit setNextDirectionFromEvent:)('stepping and presenter' step)('testing' stepTime wantsSteps)!!Slider reorganize!('access' descending descending: pagingArea sliderColor sliderColor: sliderShadowColor thumbColor value wantsSlot)('geometry' computeSlider extent: roomToMove sliderExtent sliderThickness totalSliderArea)('initialization' defaultBorderColor defaultBorderWidth defaultBounds defaultColor initialize initializeSlider)('model access' setValue: value:)('other events' mouseDownInSlider: mouseUpInSlider:)('scrolling' scrollAbsolute:)!!SkipListNode class reorganize!('*MinimalMorphic-instance creation' tailOfLevel:)('instance creation' key:value:level: new: on:level:)!!SkipList class reorganize!('*MinimalMorphic-instance creation' maxLevel:sortBlock: new:sortBlock:)('instance creation' maxLevel: new new: newFrom: sortBlock:)!!JoystickMorph class reorganize!('new-morph participation' includeInNewMorphMenu)('scripting' additionsToViewerCategories authoringPrototype)!!ColorPickerMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' perniciousBorderColor)('class initialization' colorPaletteForDepth:extent: localeChanged noColorCaption)!!SketchMorph class reorganize!('eToys-instance creation' exampleBackgroundSketch)('eToys-scripting' additionsToViewerCategories)('instance creation' fromFile: fromStream: openEditor withForm:)('new-morph participation' includeInNewMorphMenu)('scripting' defaultNameStemForInstances)('testing' isSketchMorphClass)!!MultiuserTinyPaint reorganize!('event handling' handlesMouseDown: mouseDown: mouseMove:)('initialization' defaultColor initialize)('menu' addCustomMenuItems:hand: brushColor:hand: clear fill: penSize:hand: setPenColor: setPenSize:)('private' createDrawStateFor:)!!JoystickMorph reorganize!('accessing' amount angle button1 button2 leftRight upDown)('event handling' handlesMouseDown: mouseMove: mouseUp:)('halos and balloon help' isLikelyRecipientForMouseOverHalos)('initialization' initialize)('menu' addCustomMenuItems:hand: autoCenterString chooseJoystickNumber joystickNumberString lastRealJoystickIndex realJoystickInUse realJoystickString setXRange setYRange stopTrackingJoystick toggleAutoCenter toggleRealJoystick trackRealJoystick)('other' moveHandleToCenter)('parts bin' initializeToStandAlone)('stepping and presenter' step stepTime)!!FlexMorph reorganize!('accessing' borderColor: borderWidth: form)('as yet unclassified' changeBorderColor: changeBorderWidth: loadOriginalForm originalMorph originalMorph: updateFromOriginal)('caching' releaseCachedState)('drawing' drawOn: generateRotatedForm)('geometry' extent:)('initialization' initialize)('layout' layoutChanged)('menus' addCustomMenuItems:hand:)!!FatBitsPaint reorganize!('drawing' drawOn:)('event handling' handlesMouseDown: mouseDown: mouseMove:)('events' mouseDownDefault: mouseDownSelection: mouseMovePaintBrushMode: pointGriddedFromEvent: toolMenu:)('geometry testing' containsPoint:)('initialization' defaultColor editForm: initialize openWith: setCurrentToolTo: toolsForPaintBrush toolsForSelection)('menu' accept addCustomMenuItems:hand: backgroundColor: brushColor: copySelection cutSelection editSelection fileOut fill inspectForm magnification: mouseMoveSelectionMode: pasteSelection penSize: revert selectionAsForm selectionMenu: setBackgroundColor: setMagnification: setPenColor: setPenSize: unmagnifiedForm)!!ColorPickerMorph reorganize!('accessing' argument argument: deleteOnMouseUp deleteOnMouseUp: locationIndicator originalColor: selectedColor selector selector: sourceHand sourceHand: target target: updateContinuously updateContinuously:)('drawing' drawOn:)('eToys-e-toy support' isCandidateForAutomaticViewing)('event handling' handlesMouseDown: inhibitDragging mouseDown: mouseUp:)('geometry testing' containsPoint:)('halos and balloon help' isLikelyRecipientForMouseOverHalos)('initialization' buildChartForm choseModalityFromPreference initialize initializeForPropertiesPanel initializeModal: updateSelectorDisplay)('menu' addCustomMenuItems:hand: pickUpColorFor: toggleDeleteOnMouseUp toggleUpdateContinuously)('other' addToWorld:near: bestPositionNear:inWorld: indicateColorUnderMouse putUpFor:near: trackColorUnderMouse)('stepping and presenter' step)('submorphs-add/remove' delete)('testing' stepTime)('private' anchorAndRunModeless: argumentsWith: deleteAllBalloons modalBalloonHelpAtPoint: pickColorAt: positionOfColor: trackColorAt: updateAlpha: updateColor:feedbackColor: updateTargetColor updateTargetColorWith:)!!SketchMorph reorganize!('MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)('MorphicExtras-testing' canDrawAtHigherResolution)('accessing' form form: framesToDwell framesToDwell: nominalForm: originalForm: rotatedForm scaleFactor scalePoint scalePoint: setNewFormFrom: useInterpolation useInterpolation: wantsSimpleSketchMorphHandles)('caching' releaseCachedState)('drawing' canBeEnlargedWithB3D drawHighResolutionOn:in: drawInterpolatedImage:on: drawOn: generateInterpolatedForm generateRotatedForm)('e-toy support' baseGraphic baseGraphic: flipHorizontal flipVertical rotationStyle rotationStyle: wantsRecolorHandle)('eToys-accessing' wearCostume:)('eToys-card in a stack' couldHoldSeparateDataForEachInstance)('eToys-e-toy support' appearsToBeSameCostumeAs: asWearableCostume)('eToys-geometry eToy' heading:)('eToys-player' currentDataValue)('geometry' extent: firstIntersectionWithLineFrom:to:)('geometry eToy' forwardDirection:)('geometry testing' containsPoint:)('halos and balloon help' isLikelyRecipientForMouseOverHalos wantsDirectionHandles wantsDirectionHandles:)('initialization' initialize initializeWith:)('layout' layoutChanged)('menu' addBorderToShape: addCustomMenuItems:hand: callThisBaseGraphic editDrawing editDrawingIn:forBackground: erasePixelsOfColor: insertIntoMovie: recolorPixelsOfColor: reduceColorPalette: restoreBaseGraphic restoreBaseGraphicFromMenu setRotationStyle toggleInterpolation useInterpolationString)('menus' addFillStyleMenuItems:hand: addToggleItemsToHaloMenu: changePixelsOfColor:toColor: collapse)('objects from disk' convertToCurrentVersion:refStream:)('other' newForm: replaceSelfWithMovie)('parts bin' initializeToStandAlone)('pen support' clearExtent:fillColor: penOnMyForm revealPenStrokes)('testing' basicType)!!SketchEditorMorph reorganize!('Nebraska support' get:for: getActionFor: getBrushFor: getColorFor: getCursorFor: getNibFor: set:for:to: valuesForHand: valuesForHandIfPresent:)('WiW support' morphicLayerNumber)('access' enclosingPasteUpMorph hostView painting palette registrationPoint registrationPoint: ticksToDwell ticksToDwell:)('accessing' forwardDirection)('actions & preps' clear ellipse: erase: erasePrep: fill: flipHoriz: flipVert: forward:direction: line: notes paint: pickup: pickupMouseUp: polyEdit: polyEditing polyEditing: polyFreeze polyNew: polygon: rect: render: replaceOnly: restoreRect: rotateBy: rotateDone: rotateScalePrep: scaleBy: shiftConstrainPoint: showDirType stamp: star: toggleDirType:in:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('e-toy support' rotationStyle wantsHaloFromClick)('event handling' handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseUp:)('initialization' defaultColor initializeFor:inBounds:pasteUpMorph: initializeFor:inBounds:pasteUpMorph:paintBoxPosition:)('morphic' mouseDown:)('palette handling' cancelPainting:evt: clearPainting: dimTheWindow paintBoxChanged: paletteAttached: paletteDetached: savePainting:evt: undoPainting:evt:)('start & finish' addRotationScaleHandles afterNewPicDo:ifNoBits: cancel: cancelOutOfPainting deleteSelfAndSubordinates deliverPainting:evt: prepareToPaint: save: setRotations: undo: verifyState:)!!SimpleSwitchMorph reorganize!('button' doButtonAction)('copying' updateReferencesUsing:)('event handling' mouseDown: mouseMove: mouseUp:)('initialization' initialize initializeWithLabel:)('switching' isOff isOn offColor offColor: onColor onColor: setSwitchState: toggleState turnOff turnOn)!!SimpleServiceEntry reorganize!('*MinimalMorphic-extra' requestExtraSelector)('*MinimalMorphic-performing service' buttonToTriggerIn:)('*MinimalMorphic-toolbuilder' buildWith:in:)('accessing' argumentGetter: buttonLabel buttonLabel: description description: extraSelector extraSelector: label provider provider:label:selector: selector)('extra' performExtraFor:)('performing service' getArgumentsFrom: performServiceFor: provider:label:selector:description: requestSelector)('printing' printOn:)('services menu' addServiceFor:toMenu: useLineAfter useLineAfter:)!!SimpleMIDIPort class reorganize!('*MinimalMorphicInitialization' initializeClass)('examples' examplePlayNoteNamedVelocityOnChannel)('instance creation' openDefault openOnPortNumber:)('primitives' primPortCount primPortDirectionalityOf: primPortNameOf:)('utilities' closeAllPorts inputPortNumFromUser midiInstruments midiIsSupported outputPortNumFromUser percussionInstruments portDescription:)!!SimpleHierarchicalListMorph class reorganize!('examples' submorphsExample)('instance creation' expandedForm notExpandedForm on:list:selected:changeSelected: on:list:selected:changeSelected:menu: on:list:selected:changeSelected:menu:keystroke:)!!PluggableTreeMorph reorganize!('accessing' dropItemSelector dropItemSelector: getChildrenSelector getChildrenSelector: getHelpSelector getHelpSelector: getIconSelector getIconSelector: getLabelSelector getLabelSelector: getMenuSelector getMenuSelector: getRootsSelector getRootsSelector: getSelectedPathSelector getSelectedPathSelector: hasChildrenSelector hasChildrenSelector: keystrokeActionSelector keystrokeActionSelector: roots roots: setSelectedSelector setSelectedSelector: wantsDropSelector wantsDropSelector:)('node access' balloonTextForNode: contentsOfNode: dropNode:on: hasNodeContents: iconOfNode: isDraggableNode: printNode: wantsDroppedNode:on:)('selection' setSelectedMorph:)('updating' selectPath:in: update:)!!MorphHierarchyListMorph reorganize!('initialization' on:list:selected:changeSelected:menu:keystroke:)('selection' setSelectedMorph:)('private' createContainer inAContainer)!!SimpleHierarchicalListMorph reorganize!('accessing' columns columns: lineColor lineColor: roots sortingSelector:)('debug and other' installModelIn:)('drawing' drawLinesOn: drawOn: expandedForm highlightSelection notExpandedForm unhighlightSelection)('dropping/grabbing' acceptDroppingMorph:event: potentialDropMorph potentialDropMorph: resetPotentialDropMorph wantsDroppedMorph:event:)('event handling' handlesKeyboard: handlesMouseOverDragging: itemFromPoint: keyStroke: mouseDown: mouseEnter: mouseEnterDragging: mouseLeaveDragging: mouseMove: mouseUp: startDrag:)('events' expand:to: expandAll expandAll: expandAll:except: expandRoots toggleExpandedState:event:)('events-processing' handleMouseMove:)('geometry' extent: scrollDeltaHeight scrollDeltaWidth)('initialization' autoDeselect: currentlyExpanded indentingItemClass initialize list: listItemHeight on:list:selected:changeSelected:menu:keystroke:)('keyboard navigation' arrowKey: getSelectionIndex setSelectionIndex: toggleExpandedState:)('model access' getList)('obsolete' mouseDown:onItem: mouseEnterDragging:onItem: mouseLeaveDragging:onItem: removeObsoleteEventHandlers startDrag:onItem:)('scrolling' hExtraScrollRange hUnadjustedScrollRange vUnadjustedScrollRange)('selection' getCurrentSelectionItem maximumSelection minimumSelection selectedMorph selectedMorph: selection: selectionIndex: selectionOneOf: setSelectedMorph:)('updating' update:)('private' addMorphsTo:from:allowSorting:withExpandedItems:atLevel: addSubmorphsAfter:fromCollection:allowSorting: adjustSubmorphPositions insertNewMorphs: noteRemovalOfAll:)!!SimpleButtonMorph class reorganize!('as yet unclassified' newWithLabel:)('eToys-scripting' additionsToViewerCategories)('printing' defaultNameStemForInstances)('scripting' authoringPrototype)!!IconicButton reorganize!('MorphicExtras-initialization' initializeToShow:withLabel:andSend:to:)('accessing' borderInset borderRaised)('as yet unclassified' labelFromString: labelGraphic: shedSelvedge)('events' mouseEnter: mouseLeave:)('initialization' borderNormal borderThick buttonSetup initialize initializeWithThumbnail:withLabel:andColor:andSend:to: initializeWithThumbnail:withLabel:andSend:to: setDefaultLabel stationarySetup)('menu' addLabelItemsTo:hand:)!!SimpleButtonMorph reorganize!('MorphicExtras-copying' updateReferencesUsing:)('MorphicExtras-e-toy support' adaptToWorld:)('accessing' actionSelector actionSelector: arguments arguments: fitContents label label: label:font: labelString: target target:)('button' doButtonAction)('copying' recolor: veryDeepFixupWith: veryDeepInner:)('event handling' handlesMouseDown: handlesMouseStillDown: mouseDown: mouseMove: mouseStillDown: mouseUp:)('events-processing' mouseStillDownStepRate)('geometry' extent:)('initialization' initialize initializeAllButLabel initializeWithLabel: setDefaultLabel)('menu' addCustomMenuItems:hand: addLabelItemsTo:hand: addTargetingMenuItems:hand: clearTarget setActWhen setActionSelector setArguments setLabel setTarget setTarget:)('objects from disk' objectForDataStream:)('submorphs-add/remove' actWhen actWhen:)('visual properties' updateVisualState:)!!ShortRunArray class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' startUp startUpFrom: swapRuns)('instance creation' new: newFrom: runs:values:)!!ShortRunArray reorganize!('accessing' at: at:put: bytesPerElement compressionRatio lengthAtRun: runSize size species valueAtRun:)('enumerating' do: lengthsAndValuesDo: runsAndValuesDo: valuesCollect: valuesDo:)('objects from disk' restoreEndianness)('printing' printOn:)('private' pvtAt: pvtAt:put: setRunAt:toLength:value: setRuns:values: swapRuns)!!ShortIntegerArray class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' startUp startUpFrom: swapShortObjects)('instance creation' new:)!!BalloonEngineConstants class reorganize!('*MinimalMorphicInitialization' initializeClass)('pool definition' initEdgeConstants initFillConstants initPrimitiveConstants initStateConstants initWorkBufferConstants initializeInstVarNames:prefixedBy:)!!SharedPool class reorganize!('*MinimalMorphic-name lookup' hasBindingThatBeginsWith:)('enumerating' keysDo:)('name lookup' bindingOf: bindingsDo: classBindingOf: includesKey:)!!ShadowDrawingCanvas reorganize!('accessing' shadowColor shadowColor:)('initialization' on:)('testing' isShadowDrawing)('private' image:at:sourceRect:rule: mapColor:)!!Set class reorganize!('*MinimalMorphic-initialization' quickRehashAllSets)('initialization' rehashAllSets)('instance creation' new new: newFrom: sizeFor:)!!MethodDictionary reorganize!('*MinimalMorphic-accessing' at:putNoBecome:)('*MinimalMorphic-private' methodArray)('*MinimalMorphic-removing' removeKeyNoBecome:)('accessing' add: at:ifAbsent: at:put: includesKey: keyAtIdentityValue:ifAbsent: keyAtValue:ifAbsent: keys)('enumeration' associationsDo: do: keysAndValuesDo: keysDo: valuesDo:)('removing' removeKey:ifAbsent:)('private' copy fullCheckNoBecome grow growNoBecome keyAt: rehash rehashWithoutBecome removeDangerouslyKey:ifAbsent: scanFor: swap:with:)!!KeyedSet reorganize!('*MinimalMorphic-accessing' keysSorted)('accessing' at: at:ifAbsent: at:ifAbsentPut: at:ifPresent: keys keysDo:)('adding' add: addAll: member:)('copying' copy postCopyBlocks)('initialize' keyBlock:)('removing' remove:ifAbsent: removeKey: removeKey:ifAbsent:)('testing' includes: includesKey:)('private' errorKeyNotFound fixCollisionsFrom: initialize: noCheckAdd: rehash scanFor:)!!Dictionary reorganize!('*Compiler' bindingOf: bindingsDo:)('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-private' valueAtNewKey:put:atIndex:declareFrom:)('*MinimalMorphic-testing' hasBindingThatBeginsWith: includesIdentity: isDictionary keyForIdentity:)('*MinimalMorphic-user interface' explorerContents)('accessing' associationAt: associationAt:ifAbsent: associationDeclareAt: associations at: at:ifAbsentPut: at:ifAbsent: at:ifPresentAndInMemory: at:ifPresent: at:put: keyAtIdentityValue: keyAtIdentityValue:ifAbsent: keyAtValue: keyAtValue:ifAbsent: keys keysSortedSafely values)('adding' addAll: add: declare:from:)('comparing' =)('enumerating' associationsDo: associationsSelect: collect: do: keysAndValuesDo: keysDo: select: valuesDo:)('printing' flattenOnStream: printElementsOn: storeOn:)('removing' keysAndValuesRemove: removeKey: removeKey:ifAbsent: removeUnreferencedKeys remove: remove:ifAbsent: unreferencedKeys)('testing' hasContentsInExplorer includesAssociation: includesKey: includes: occurrencesOf:)('private' copy errorKeyNotFound errorValueNotFound keyAt: noCheckAdd: rehash scanFor:)!!Set reorganize!('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-explorer' explorerContents)('accessing' atRandom: capacity like: size someElement)('adding' add: add:withOccurrences:)('converting' asSet)('copying' copy)('enumerating' collect: do: doWithIndex: union:)('explorer' hasContentsInExplorer)('objects from disk' comeFullyUpOnReload:)('removing' copyWithout: remove:ifAbsent:)('testing' = includes: occurrencesOf:)('private' array atNewIndex:put: findElementOrNil: fixCollisionsFrom: fullCheck grow growSize initialize: keyAt: noCheckAdd: rehash scanFor: swap:with: withArray:)!!ServiceRegistry class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' current ifInteractiveDo: initialize methodChanged: rebuild)!!ServiceRegistry reorganize!('accessing' categories isInteractive serviceCollection serviceWithId: services)('building' addService:provider: beNotInteractiveDuring: build buildProvider:)('initialize-release' initialize)!!ServiceProvider class reorganize!('accessing' registeredProviders)('provider creation' newProviderFor:)!!ServiceGui class reorganize!('*MinimalMorphicInitialization' initializeClass)('hooks' browser:classCategoryMenu: browser:classMenu: browser:codePaneMenu: browser:messageCategoryMenu: browser:messageListMenu: browserButtonRow: browserButtonRow:inlinedIn: updateMenu:forModel:selector: worldMenu:)('opening menus' openMenuFor:)('preferences' buttonBarServices inlineServices onlyServices)('registering button bars' bars initialize registerBar:for: updateBar: updateBars)!!ServiceGui reorganize!('accessing' bar menu)('building' buildButtonBar inlineInMenu:)('initialize-release' for:id: initialize)('serviceactions' buttonForAction: menuItemForAction:)('servicecategory' buttonBarFor: buttonForCategory: inlineInMenu:for: menuFor: menuItemForCategory: n n: popMenu pushMenu subMenuFor:)('services' buttonFor: menuItemFor:)('styling' styleBar: styleButton: styleMenu:)!!ServiceCategory reorganize!('accessing' enabledServices requestor: services)('executing' execute)('initialize-release' initialize)('preferences' childrenPreferences externalPreferences insertPreferences newChildren newChildrenValid prefServices replaceChildren updateChildren)('testing' isCategory)!!ServiceAction class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' initialize)('instance creation' id:text:button:description:action: id:text:button:description:action:condition: text:button:description:action: text:button:description:action:condition: text:description:action:)!!ServiceAction reorganize!('accessing' action: buttonLabel buttonLabel: categories condition: description description: id id: menuLabel menuLabelNumbered: provider provider: requestor requestor: text text:)('executing' condExecuteWith: execute executeCondition perform:orSendTo:)('initialize-release' initialize)('preferences' addPreference:category:selector: insertPreferences preferences providerCategory shortcut shortcutPreference updateEnable)('testing' isCategory isEnabled)('updating' updateShortcut)!!ServerDirectory class reorganize!('*MinimalMorphic-*eToys-school support' eToyBaseFolderSpecForFileDirectory: eToyBaseFolderSpecForFileDirectory:put: eToyUserListForFileDirectory: eToyUserListUrlForFileDirectory: eToyUserListUrlForFileDirectory:put: localEToyBaseFolderSpecs localEToyUserListUrls parseEToyUserListFrom:)('available servers' addLocalProjectDirectory: addServer:named: localProjectDirectories nameForServer: projectServers removeServerNamed: removeServerNamed:ifAbsent: resetLocalProjectDirectories resetServers serverForURL: serverNamed: serverNamed:ifAbsent: serverNames servers serversFrom:)('class initialization' initialize)('misc' defaultStemUrl newFrom: on: parseFTPEntry: secondsForDay:month:yearOrTime:thisMonth:thisYear:)('school support' projectDefaultDirectory)('server groups' convertGroupNames groupNames serverInGroupNamed: serversInGroupNamed:)('server prefs' determineLocalServerDirectory: fetchExternalSettingsIn: parseServerEntryFrom: releaseExternalSettings serverConfDirectoryName storeCurrentServersIn: transferServerDefinitionsToExternal)!!ProjectSwikiServer reorganize!('accessing' acceptsUploads:)('initialize' wakeUp)('testing' acceptsUploads isProjectSwiki)!!ServerDirectory reorganize!('*MinimalMorphic-*MorphicExtras-accessing' url)('*MinimalMorphic-*eToys-school support' eToyUserList eToyUserList: eToyUserListUrl eToyUserListUrl: eToyUserName: hasEToyUserList)('*MinimalMorphic-squeaklets' directoryWrapperClass upLoadProject:named:resourceUrl:retry: updateProjectInfoFor:)('*MinimalMorphic-updates' updateInstallVersion:)('accessing' acceptsUploads: altUrl altUrl: bareDirectory copy directory directory: directoryObject downloadUrl encodingName encodingName: fullPath: isTypeFTP isTypeFile isTypeHTTP keepAlive: loaderUrl loaderUrl: moniker moniker: password password: passwordSequence passwordSequence: printOn: realUrl server server: slashDirectory type: typeForPrefs typeWithDefault url: urlObject urlObject: user user:)('dis/connect' openFTPClient quit quitClient)('file directory' asServerFileNamed: assureExistence assureExistenceOfPath: containingDirectory createDirectory: deleteDirectory: deleteFileNamed: directoryNamed: directoryNames entries exists fileAndDirectoryNames fileNamed: fileNames fullNameFor: getOnly:from: includesKey: localName localNameFor: localPathExists: matchingEntries: newFileNamed: oldFileNamed: oldFileOrNoneNamed: on: pathName pathNameDelimiter pathParts readOnlyFileNamed: rename:toBe: serverDelimiter splitName:to: streamOnBeginningOf:)('file-in/out' storeServerEntryOn:)('initialize' fromUser)('multi-action sessions' reset sleep wakeUp)('server groups' closeGroup convertGroupName groupName groupName: openGroup serversInGroup)('squeaklets' moveAllButYoungest:in:to: upLoadProject:members:retry: writeProject:inFileNamed:fromDirectory:)('testing' acceptsUploads isProjectSwiki isRemoteDirectory isRoot isSearchable keepAlive)('up/download' fileExists: getDirectory getFileList getFileNamed: getFileNamed:into: getFileNamed:into:httpRequest: getOnlyBuffer:from: putFile:named: putFile:named:retry: putFileSavingOldVersion:named:)('updates' checkNames: checkServersWithPrefix:andParseListInto: copyUpdatesNumbered:toVersion: exportUpdatesExcept: outOfDate: putUpdate: putUpdateMulti:fromDirectory:)!!SerialPort reorganize!('initialization' initialize)('input/output' nextPutAll: readByteArray readInto:startingAt: readString)('open/close' close openPort:)('primitives' primClosePort: primOpenPort:baudRate:stopBitsType:parityType:dataBits:inFlowControlType:outFlowControlType:xOnByte:xOffByte: primReadPort:into:startingAt:count: primWritePort:from:startingAt:count:)('printing' printOn:)('settings' baudRate baudRate: dataBits dataBits: inputFlowControlType inputFlowControlType: outputFlowControlType outputFlowControlType: parityType parityType: stopBitsType stopBitsType: xOffByte xOffByte: xOnByte xOnByte:)!!SequentialSound reorganize!('accessing' duration sounds)('composition' , add: compressWith: compressWith:atRate: pruneFinishedSounds removeFirstCompleteSoundOrNil)('copying' copy copySounds transformSounds:)('initialization' initialize)('sound generation' doControl mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining)!!Semaphore reorganize!('*MinimalMorphic-communication' waitTimeoutSeconds:)('communication' signal wait waitTimeoutMSecs:)('comparing' = hash)('initialize-release' initSignals resumeProcess: terminateProcess)('mutual exclusion' critical: critical:ifError:)('testing' isSignaled)!!PointArray reorganize!('accessing' at: at:put: bounds defaultElement size)('converting' asPointArray)!!OrderedCollection reorganize!('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-private' errorConditionNotSatisfied)('accessing' at: at:put: capacity size)('adding' add: add:after: add:afterIndex: add:before: add:beforeIndex: addAll: addAllFirst: addAllFirstUnlessAlreadyPresent: addAllLast: addFirst: addLast: at:ifAbsentPut: grow growSize)('copying' copyEmpty copyFrom:to: copyReplaceFrom:to:with: copyWith: reversed)('enumerating' collect: collect:from:to: do: reverseDo: select: with:collect: withIndexCollect:)('removing' remove:ifAbsent: removeAllSuchThat: removeAt: removeFirst removeFirst: removeLast removeLast:)('testing' hasContentsInExplorer)('private' collector errorNoSuchElement find: insert:before: makeRoomAtFirst makeRoomAtLast removeIndex: reset resetTo: setCollection: setContents:)!!Heap class reorganize!('*MinimalMorphic-instance creation' withAll:sortBlock:)('instance creation' new new: sortBlock: withAll:)!!FloatArray reorganize!('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-arithmetic' \\=)('accessing' at: at:put: defaultElement length squaredLength)('arithmetic' adaptToNumber:andSend: dot: negated * *= + += - -= / /=)('comparing' hash =)('converting' asFloatArray)('primitives-plugin' primAddArray: primAddScalar: primDivArray: primDivScalar: primMulArray: primMulScalar: primSubArray: primSubScalar: sum)('private' replaceFrom:to:with:startingAt:)!!FixedIdentitySet class reorganize!('*MinimalMorphic-instance creation' withAll:notIn:)('constants' arraySizeForCapacity: defaultSize new new:)('instance creation' readonlyWithAll:notIn: withAll: with: with:with: with:with:with: with:with:with:with: with:with:with:with:with: with:with:with:with:with:with:)('private' sizeFor:)!!FixedIdentitySet reorganize!('*MinimalMorphic-accessing' destructiveAdd:)('*MinimalMorphic-private' arraySize)('*MinimalMorphic-testing' notFull)('accessing' addAll: addAll:notIn: add: at: at:put: capacity includes: remove:ifAbsent: size)('comparing' hash =)('enumerating' do: select:)('initialize-release' initializeCapacity:)('printing' printOn:)('testing' isFull)('private' indexOf:)!!CompiledMethod class reorganize!('*MinimalMorphic-class initialization' fullFrameSize smallFrameSize)('*MinimalMorphic-instance creation' primitive:numArgs:numTemps:stackSize:literals:bytecodes:trailer:)('class initialization' initialize)('constants' abstractMarkers conflictMarker disabledMarker explicitRequirementMarker implicitRequirementMarker subclassResponsibilityMarker)('instance creation' basicNew: new newFrom: newInstanceFrom:variable:size:map: new: newBytes:trailerBytes:nArgs:nTemps:nStack:nLits:primitive: newBytes:trailerBytes:nArgs:nTemps:nStack:nLits:primitive:flag: newMethod:header: toReturnConstant:trailerBytes: toReturnField:trailerBytes: toReturnSelf toReturnSelfTrailerBytes:)!!CompiledMethod reorganize!('*39Deprecated' who)('*MinimalMorphic-*39Deprecated' decompileClass:selector: decompileTree)('*MinimalMorphic-*Tools-Inspector' inspectorClass)('*MinimalMorphic-closures' containsBlockClosures createBlock: isBlockMethod: isClosureCompiled: searchImageForHomeMethod)('*MinimalMorphic-comparing' equivalentTo:)('*MinimalMorphic-decompiling' primitiveNode)('*MinimalMorphic-literals' literalsDo: refersToLiteral: sendsSelector:)('*MinimalMorphic-printing' storeLiteralsOn:forClass:)('*MinimalMorphic-scanning' messagesDo: readsRef: writesRef:)('*MinimalMorphic-testing' hasBreakpoint isImplicitlyRequired)('accessing' allLiterals defaultSelector endPC flag flushCache frameSize initialPC methodClass methodClass: methodReference numArgs numLiterals numTemps pragmas primitive properties returnField scanner searchForClass searchForSelector selector selector: trailer)('closures' allEmbeddedBlockMethods embeddedBlockMethods isBlockMethod isClosureCompiled method remoteReturns)('comparing' =)('decompiling' compilerClass decompile decompilerClass decompileString decompileWithTemps methodNode methodNodeFormattedAndDecorated: parserClass)('evaluating' valueWithReceiver:arguments:)('file in/out' hasReportableSlip objectForDataStream: readDataFrom:size: storeDataOn: veryDeepCopyWith: zapSourcePointer)('initialize-release' copyWithTrailerBytes: needsFrameSize: properties:)('literals' hasLiteral: hasLiteralSuchThat: hasLiteralThorough: header headerDescription literalAt: literalAt:put: literalStrings literals objectAt: objectAt:put:)('printing' author dateMethodLastSubmitted longPrintOn: longPrintOn:indent: printOn: printOnStream: printPrimitiveOn: storeOn: symbolic timeStamp)('scanning' hasInstVarRef messages readsField: scanFor: scanLongLoad: scanLongStore: scanVeryLongLoad:offset: scanVeryLongStore:offset: sendsToSuper writesField:)('source code management' checkOKToAdd:at: copyWithTempNames: fileIndex filePosition getPreambleFrom:at: getSource getSourceFor:in: getSourceFromFile holdsTempNames linesOfCode putSource:fromParseNode:class:category:inFile:priorMethod: putSource:fromParseNode:class:category:withStamp:inFile:priorMethod: putSource:fromParseNode:inFile:withPreamble: qCompress:firstTry: qDecompress: setMySourcePointer: setSourcePointer: setSourcePosition:inFile: sourceClass sourceFileStream sourcePointer sourceSelector tempNames)('testing' hasNewPropertyFormat isAbstract isCompiledMethod isConflict isDisabled isDisabled: isExplicitlyRequired isExplicitlyRequired: isImplicitlyRequired: isInstalled isProvided isProvided: isQuick isRequired isRequired: isReturnField isReturnSelf isReturnSpecial isSubclassResponsibility isSubclassResponsibility:)('private' markerOrNil replace:with:in:)!!ByteArray reorganize!('accessing' asWideString atAllPut: byteAt: byteAt:put: byteSize bytesPerElement)('comparing' hash)('converting' asByteArray asString)('platform independent access' doubleAt:bigEndian: doubleAt:put:bigEndian: longAt:bigEndian: longAt:put:bigEndian: shortAt:bigEndian: shortAt:put:bigEndian: unsignedLongAt:bigEndian: unsignedLongAt:put:bigEndian: unsignedShortAt:bigEndian: unsignedShortAt:put:bigEndian:)('zip archive' lastIndexOfPKSignature:)('private' asByteArrayPointer defaultElement replaceFrom:to:with:startingAt:)!!Bitmap reorganize!('*MinimalMorphic-accessing' integerAt: integerAt:put:)('*MinimalMorphic-filing' compressGZip)('accessing' atAllPut: bitPatternForDepth: byteAt: byteAt:put: byteSize copyFromByteArray: defaultElement pixelValueForDepth: primFill: replaceFrom:to:with:startingAt:)('as yet unclassified' asByteArray copy)('filing' compress:toByteArray: compressToByteArray decompress:fromByteArray:at: encodeBytesOf:in:at: encodeInt: encodeInt:in:at: readCompressedFrom: restoreEndianness storeBits:to:on: writeOn: writeUncompressedOn:)('initialize-release' fromByteStream:)('printing' printOn: printOnStream:)('testing' isColormap)!!ArrayedCollection class reorganize!('*MinimalMorphic-plugin generation' ccg:generateCoerceToOopFrom:on: ccg:generateCoerceToValueFrom:on:)('instance creation' new new:withAll: newFrom: newFromStream: with: with:with: with:with:with: with:with:with:with: with:with:with:with:with: with:with:with:with:with:with: withAll:)!!SequenceableCollection reorganize!('*MinimalMorphic-*Morphic-NewCurves-cubic support' asCubic changeInSlopes: changeOfChangesInSlopes: closedCubicSlopes closedCubicSlopes: cubicPointPolynomialAt: naturalCubicSlopes naturalCubicSlopes: naturalFillinList nilTransitions segmentedSlopes transitions transitions:)('*MinimalMorphic-*Morphic-fliprotate' flipRotated:)('*MinimalMorphic-accessing' atLast: atLast:put: integerAt: integerAt:put:)('*MinimalMorphic-converting' asPointArray concatenation)('*MinimalMorphic-enumerating' allButFirstDo: allButLastDo: findBinary: findBinaryIndex: groupsOf:atATimeCollect: nextToLast overlappingPairsCollect: overlappingPairsDo: overlappingPairsWithIndexDo: paddedWith:do:)('*MinimalMorphic-explorer' explorerContents)('*MinimalMorphic-private' checkedAt: errorFirstObject: errorLastObject:)('*Morphic-NewCurves-cubic support' assertSlopesClampedWith:from:to: assertSlopesWith:from:to: clampedCubicSlopes: clampedNaturalCubicSlopes: closedFillinList slopesClampedWith:from:to: slopesWith:from:to:)('*Traits' asTraitComposition)('*services-base' startsWith:)('accessing' after: after:ifAbsent: allButFirst allButFirst: allButLast allButLast: anyOne atAllPut: atAll: atAll:putAll: atAll:put: atLast:ifAbsent: atPin: atRandom: atWrap: atWrap:put: at:ifAbsent: at:incrementBy: before: before:ifAbsent: eighth fifth first first: fourth from:to:put: identityIndexOf: identityIndexOf:ifAbsent: indexOfSubCollection:startingAt: indexOfSubCollection:startingAt:ifAbsent: indexOf: indexOf:ifAbsent: indexOf:startingAt:ifAbsent: last lastIndexOf: lastIndexOf:ifAbsent: lastIndexOf:startingAt:ifAbsent: last: middle ninth replaceAll:with: replaceFrom:to:with: replaceFrom:to:with:startingAt: second seventh sixth swap:with: third)('comparing' hasEqualElements: hash =)('converting' asArray asByteArray asColorArray asFloatArray asIntegerArray asStringWithCr asWordArray isSequenceable readStream reverse reversed writeStream @)('copying' copyAfterLast: copyAfter: copyEmpty copyFrom:to: copyLast: copyReplaceAll:with: copyReplaceFrom:to:with: copyUpToLast: copyUpTo: copyWithFirst: copyWithoutFirst copyWithoutIndex: copyWith: forceTo:paddingStartWith: forceTo:paddingWith: shallowCopy shuffled shuffledBy: sortBy: ,)('enumerating' asDigitsToPower:do: collectWithIndex: collect: collect:from:to: combinations:atATimeDo: doWithIndex: do: do:displayingProgress: do:separatedBy: do:without: findBinaryIndex:ifNone: findBinary:ifNone: findFirst: findLast: from:to:do: groupsOf:atATimeDo: keysAndValuesDo: pairsCollect: pairsDo: permutationsDo: polynomialEval: reverseDo: reverseWith:do: select: upTo: withIndexCollect: withIndexDo: with:collect: with:do:)('removing' remove:ifAbsent:)('testing' beginsWith: endsWith: includes:)('private' asDigitsAt:in:do: combinationsAt:in:after:do: copyReplaceAll:with:asTokens: errorOutOfBounds permutationsStartingAt:do:)!!SendInfo reorganize!('*MinimalMorphic-stack manipulation' blockReturn)('accessing' classSentSelectors home method selfSentSelectors superSentSelectors)('initialization' collectSends method:pc: prepareState)('instruction decoding' blockReturnTop doDup doPop interpretNextInstructionFor: jump: jump:if: methodReturnConstant: methodReturnReceiver methodReturnTop popIntoLiteralVariable: popIntoReceiverVariable: popIntoTemporaryVariable: pushActiveContext pushConstant: pushLiteralVariable: pushReceiver pushReceiverVariable: pushTemporaryVariable: send:super:numArgs: storeIntoLiteralVariable: storeIntoReceiverVariable: storeIntoTemporaryVariable:)('printing' printOn:)('stack manipulation' atMergePoint emptyStack mergeStacks newEmptyStack pop pop: push: top)('private' addClassSentSelector: addSelfSentSelector: addSuperSentSelector: assert:because: tallySelfSendsFor:)!!SendCaches reorganize!('*MinimalMorphic-accessing' classSendersOf: selfSenders: superSenders superSenders:)('*MinimalMorphic-accessing-specific' allSentSelectorsAndSendersDo: superSendersOf:)('accessing' initialize selfSenders)('accessing-specific' classSentSelectorsAndSendersDo: selfSendersOf: selfSentSelectorsAndSendersDo: superSentSelectorsAndSendersDo:)('fixup' printOn: properlyInitialize)('updates' addClassSender:of: addSelfSender:of: addSuperSender:of:)!!SelectionMorph reorganize!('WiW support' morphicLayerNumber)('accessing' borderColor: borderWidth: wantsToBeTopmost)('drawing' drawOn:)('dropping/grabbing' aboutToBeGrabbedBy: justDroppedInto:event: slideToTrash:)('geometry' bounds: extent:)('halo commands' addCustomMenuItems:hand: addOrRemoveItems: alignBottomEdges alignCentersHorizontally alignCentersVertically alignLeftEdges alignRightEdges alignTopEdges distributeHorizontally distributeVertically doDup:fromHalo:handle: duplicate organizeIntoColumn organizeIntoRow)('halos and balloon help' addHandlesTo:box: addOptionalHandlesTo:box: balloonHelpTextForHandle: hasHalo:)('initialization' defaultBorderColor defaultBorderWidth defaultColor extendByHand: initialize)('menus' maybeAddCollapseItemTo:)('submorphs-add/remove' delete dismissViaHalo)('testing' couldMakeSibling preferredDuplicationHandleSelector)('undo' borderColorForItems: borderWidthForItems: fillStyleForItems: refineUndoTarget:selector:arguments:in: undoMove:redo:owner:bounds:predecessor:)('viewer' externalName)('visual properties' fillStyle:)('private' doneExtending privateFullMoveBy: selectSubmorphsOf: selectedItems setOtherSelection: setSelectedItems:)!!EmphasizedMenu reorganize!('display' startUpWithCaption:)('emphasis' emphases: onlyBoldItem:)('private' setEmphasis)!!CustomMenu reorganize!('Morphic-invocation' startUp:withCaption:at: startUpWithCaption:at:)('compatibility' add:subMenu:target:selector:argumentList: add:target:selector:argument: add:target:selector:argumentList: addService:for: addServices2:for:extraLines: addServices:for:extraLines: arguments targets)('construction' add:action: addLine addList: addStayUpItem addTranslatedList: balloonTextForLastItem: labels:font:lines: labels:lines:selections:)('initialize-release' initialize title:)('invocation' invokeOn: invokeOn:defaultSelection: invokeOn:orSendTo: startUp startUp: startUp:withCaption: startUpWithCaption:)('private' build preSelect:)!!SelectionMenu reorganize!('accessing' selections selections:)('basic control sequence' invokeOn: startUpWithCaption:at:allowKeyboard:)('invocation' invokeOn:orSendTo:)!!SelectedObjectThumbnail reorganize!('accessing' noSelectedBalloonText: noSelectedThumbnail:)('initialization' initialize initializeExtent:noSelectedThumbnail:noSelectedBalloonText:)('stepping and presenter' step stepTime)('private' makeEmptyThumbnail makeErrorThumbnail makeThumbnailFrom: makeThumbnailOfColor:)!!SecurityManager reorganize!('*MinimalMorphic-accessing' addTrustedKey: keysFileName:)('*MinimalMorphic-private' generateKeyPairInBackground generateLocalKeyPair)('*MinimalMorphic-security operations' disableSocketAccess fileInObjectAndCode: positionToSecureContentsOf: signFile:directory:)('accessing' keysFileName primSecureUserDirectory secureUserDirectory signingKey trustedKeys untrustedUserDirectory)('fileIn/out' loadSecurityKeys storeSecurityKeys)('initialize-release' flushSecurityKey: flushSecurityKeys initialize shutDown startUp)('security operations' disableFileAccess disableImageWrite enterRestrictedMode)('testing' canWriteImage hasFileAccess hasSocketAccess isInRestrictedMode)('private' primUntrustedUserDirectory printStateOn:)!!SecureHashAlgorithm reorganize!('primitives' primExpandBlock:into: primHasSecureHashPrimitive primHashBlock:using:)('public' hashInteger: hashInteger:seed: hashMessage: hashStream:)('private' constantForStep: expandedBlock: finalHash hashFunction:of:with:with: initializeTotals initializeTotalsArray processBuffer: processBufferUsingPrimitives: processFinalBuffer:bitLength: storeLength:in:)!!PrintComponent reorganize!('components' initPinSpecs)('menu commands' accept)('model access' getText)!!PluggableTextMorphPlus reorganize!('accessing' acceptAction acceptAction: getColorSelector getColorSelector:)('updating' accept update:)!!FunctionComponent reorganize!('as yet unclassified' addPin headerString)('button' fire)('components' initFromPinSpecs initPinSpecs)('menu' addCustomMenuItems:hand:)('menu commands' accept)('model access' getText)('updating' update:)!!BrowserCommentTextMorph reorganize!('accessing' lowerPane window)('displaying' hideOrShowPane hidePane showPane)('updating' noteNewOwner: update:)!!PluggableTextMorph reorganize!('*services-base' textMorph)('accessing' getTextSelector)('debug and other' installModelIn:)('dependents access' canDiscardEdits hasUnacceptedEdits)('drawing' drawOn: wantsFrameAdornments wantsFrameAdornments:)('dropping/grabbing' wantsDroppedMorph:event:)('eToys-model access' eToyGetMainFont)('eToys-transcript' appendTextEtoy:)('editor access' handleEdit: scrollSelectionIntoView scrollSelectionIntoView: selectAll setTextMorphToSelectAllOnMouseEnter)('event handling' handlesKeyboard: keyStroke: mouseEnter: mouseLeave: onKeyStrokeSend:to:)('geometry' extent: extraScrollRange resetExtent scrollDeltaHeight)('html' copyHtml)('initialization' acceptOnCR: editString: font: initialize on:text:accept:readSelection:menu:)('interactive error protocol' correctFrom:to:with: correctSelectionWithString: deselect nextTokenFrom:direction: notify:at:in: select selectFrom:to: selectInvisiblyFrom:to: selectionInterval)('layout' acceptDroppingMorph:event:)('menu commands' accept acceptTextInModel again browseChangeSetsWithSelector browseIt cancel changeStyle chooseAlignment classCommentsContainingIt classNamesContainingIt copySelection cut debugIt doIt explain exploreIt fileItIn find findAgain implementorsOfIt inspectIt methodNamesContainingIt methodSourceContainingIt methodStringsContainingit offerFontMenu paste pasteRecent presentSpecialMenu prettyPrint prettyPrintWithColor printIt printerSetup referencesToIt saveContentsInFile sendContentsToPrinter sendersOfIt setSearchString spawn tallyIt toggleAnnotationPaneSize undo yellowButtonActivity yellowButtonActivity:)('model access' getSelection getText selectionInterval: setSelection: setText: setTextColor: text)('scroll bar events' scrollBarMenuButtonPressed:)('scrolling' hUnadjustedScrollRange)('transcript' appendEntry bsText changeText: replaceSelectionWith:)('unaccepted edits' askBeforeDiscardingEdits: hasEditingConflicts hasEditingConflicts: hasUnacceptedEdits: promptForCancel)('updating' update:)('private' textMorphClass)!!PluggableMultiColumnListMorphByItem reorganize!('initialization' list:)('model access' changeModelSelection: getCurrentSelectionIndex)!!PluggableMultiColumnListMorph reorganize!('accessing' getListRow: getListSize itemFromPoint: listMorphClass)('initialization' calculateColumnOffsetsFrom: calculateColumnWidthsFrom: createMorphicListsFrom: layoutMorphicLists: list:)('model access' basicKeyPressed: getList)('selection' highlightSelection unhighlightSelection)!!PluggableMessageCategoryListMorph reorganize!('as yet unclassified' on:list:selected:changeSelected:menu:keystroke:getRawListSelector:)('model access' getList)('updating' verifyContents)!!PluggableListMorphByItemPlus reorganize!('as yet unclassified' getList)('initialization' list:)('model access' changeModelSelection: getCurrentSelectionIndex)!!PluggableListMorphPlus reorganize!('accessing' dragItemSelector dragItemSelector: dropItemSelector dropItemSelector: wantsDropSelector wantsDropSelector:)('drag and drop' acceptDroppingMorph:event: startDrag: wantsDroppedMorph:event:)!!PluggableListMorphOfMany reorganize!('drawing' listSelectionAt: listSelectionAt:put:)('event handling' mouseDown: mouseMove: mouseUp:)('initialization' list: on:list:primarySelection:changePrimarySelection:listSelection:changeListSelection:menu:keystroke:)('model access' itemSelectedAmongMultiple:)('updating' update:)!!PluggableListMorphByItem reorganize!('as yet unclassified' getList)('initialization' list:)('model access' changeModelSelection: getCurrentSelectionIndex)!!ListComponent reorganize!('components' initFromPinSpecs initPinSpecs)('initialization' list:)('model access' changeModelSelection:)!!PluggableListMorph reorganize!('accessing' highlightSelector highlightSelector: itemFromPoint: rowAtLocation:)('as yet unclassified' listMorph listMorphClass)('debug and other' installModelIn: userString)('drag and drop' acceptDroppingMorph:event: potentialDropItem potentialDropRow resetPotentialDropRow startDrag:)('drawing' highlightSelection superDrawOn: unhighlightSelection)('dropping/grabbing' wantsDroppedMorph:event:)('event handling' handlesKeyboard: handlesMouseOverDragging: keyStroke: keyboardFocusChange: mouseEnter:)('events' doubleClick: handleBasicKeys: handlesBasicKeys mouseDown: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseUp:)('events-processing' handleMouseMove:)('geometry' extent: scrollDeltaHeight scrollDeltaWidth)('initialization' autoDeselect: doubleClickSelector: font font: getListElementSelector: getListSelector: getListSizeSelector: initForKeystrokes keystrokeActionSelector: list: listItemHeight on:list:selected:changeSelected:menu:keystroke: textColor textColor: textHighlightColor textHighlightColor:)('menu' getMenu:)('menus' addCustomMenuItems:hand: copyListToClipboard copySelectionToClipboard setListFont)('model access' basicKeyPressed: changeModelSelection: commandKeyTypedIntoMenu: getCurrentSelectionIndex getList getListItem: getListSize itemSelectedAmongMultiple: modifierKeyPressed: specialKeyPressed:)('obsolete' doubleClick:onItem: mouseDown:onItem: mouseEnterDragging:onItem: mouseLeaveDragging:onItem: mouseUp:onItem: removeObsoleteEventHandlers startDrag:onItem:)('scroll cache' deriveHScrollRange hTotalScrollRange hUnadjustedScrollRange resetHScrollRange resetHScrollRangeIfNecessary resizeScrollBars)('scrolling' hExtraScrollRange vUnadjustedScrollRange)('selection' getListSelector maximumSelection minimumSelection scrollSelectionIntoView selectedMorph selectedMorph: selection selection: selectionIndex selectionIndex: setGetListSelector: setSelectedMorph:)('submorphs-accessing' allSubmorphNamesDo:)('updating' update: updateList verifyContents)!!ScrollPane reorganize!('access' adoptPaneColor: flatColoredScrollBarLook hMargin hasFocus retractableScrollBar scrollBarOnLeft scroller scroller: wantsSlot)('access options' alwaysShowHScrollBar: alwaysShowScrollBars: alwaysShowVScrollBar: hideHScrollBarIndefinitely: hideScrollBarsIndefinitely hideScrollBarsIndefinitely: hideVScrollBarIndefinitely: showHScrollBarOnlyWhenNeeded: showScrollBarsOnlyWhenNeeded: showVScrollBarOnlyWhenNeeded:)('accessing' borderStyle: borderWidth: numSelectionsInView)('event handling' handlesMouseDown: handlesMouseOver: keyStroke: mouseDown: mouseEnter: mouseLeave: mouseMove: mouseUp: scrollByKeyboard:)('geometry' extent: extraScrollRange hExtraScrollRange hLeftoverScrollRange hResizeScrollBar hScrollBarWidth hSetScrollDelta hTotalScrollRange hUnadjustedScrollRange innerBounds resetExtent resizeScrollBars resizeScroller scrollBarThickness scrollDeltaHeight scrollDeltaWidth setScrollDeltas vExtraScrollRange vLeftoverScrollRange vResizeScrollBar vScrollBarHeight vSetScrollDelta vTotalScrollRange vUnadjustedScrollRange)('geometry testing' containsPoint: hIsScrollable hIsScrollbarShowing hIsScrolled isAScrollbarShowing isScrolledFromTop scrollBarFills: vIsScrollable vIsScrollbarShowing vIsScrolled)('initialization' defaultBorderColor defaultExtent hInitScrollBarTEMPORARY initialize initializePreferences initializeScrollBars)('menu' addCustomMenuItems:hand: getMenu: leftOrRight menuTitleSelector: retractable: retractableOrNot scrollBarOnLeft: wantsYellowButtonMenu)('scroll bar events' hScrollBarMenuButtonPressed: scrollBarMenuButtonPressed: shiftedTextPaneMenuRequest shiftedYellowButtonActivity unshiftedYellowButtonActivity vScrollBarMenuButtonPressed: yellowButtonActivity:)('scrolling' hHideOrShowScrollBar hHideScrollBar hIsScrollbarNeeded hScrollBarValue: hShowScrollBar hideOrShowScrollBar hideOrShowScrollBars hideScrollBars scrollBy: scrollToShow: showScrollBars vHideOrShowScrollBar vHideScrollBar vIsScrollbarNeeded vScrollBarValue: vShowScrollBar)!!PluggableListController reorganize!('control defaults' redButtonActivity)('initialization' initialize)('private' changeModelSelection: processKeyboard terminateDuringSelect:)!!ParagraphEditor class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' abandonChangeText shiftedYellowButtonMenu yellowButtonExpertMenu yellowButtonMenu yellowButtonNoviceMenu)('instance creation' new newParagraph:)('keyboard shortcut tables' initializeCmdKeyShortcuts initializeShiftCmdKeyShortcuts multiRedoOverride specialShiftCmdKeys)!!ParagraphEditor reorganize!('Tools' browseChangeSetsWithSelector browseItHere debug:receiver:in: debugIt)('accessing' initialText replace:with:and: replaceSelectionWith: setSearch: text userHasEdited)('accessing-selection' hasCaret hasSelection mark markBlock markBlock: markIndex pointBlock pointBlock: pointIndex selection selectionAsStream selectionInterval setMark: setPoint: startBlock startBlock: startIndex stopBlock stopBlock: stopIndex unselect zapSelectionWith:)('as yet unclassified' activateTextActions offerMenuFromEsc: totalTextHeight visibleHeight)('controlling' controlInitialize controlTerminate normalActivity)('current selection' deselect initializeSelection recomputeInterval recomputeSelection reverseSelection select selectAndScroll selectAndScrollToTop)('displaying' display flash)('do-its' compileSelectionFor:in: doIt evaluateSelection exploreIt inspectIt objectsReferencingIt printIt tallyIt tallySelection)('editing keys' align: browseIt: browseItHere: cancel: changeEmphasis: changeLfToCr: chooseColor compareToClipboard: copyHiddenInfo copySelection: cut: doIt: duplicate: enclose: exchange: exploreIt: fileItIn: hiddenInfo implementorsOfIt: inOutdent:delta: indent: inspectIt: makeCapitalized: makeLowercase: makeProjectLink: makeUppercase: methodNamesContainingIt: methodStringsContainingIt: noop: offerFontMenu offerFontMenu: outdent: paste: pasteInitials: printIt: referencesToIt: save: sendersOfIt: setEmphasis: shiftEnclose: spawnIt: swapChars: tempCommand: undo:)('explain' explainAnySel: explainChar: explainClass: explainCtxt: explainGlobal: explainInst: explainMySel: explainNumber: explainPartSel: explainScan: explainTemp:)('initialize-release' changeParagraph: resetState stateArray stateArrayPut:)('menu messages' accept again align browseClassFromIt browseIt cancel changeAlignment changeEmphasis changeEmphasisOrAlignment changeStyle changeStyleTo: chooseAlignment classCommentsContainingIt classNamesContainingIt clipboardText clipboardText: clipboardTextPut: compareToClipboard copySelection cut exchange experimentalCommand explain fileItIn find findAgain fit implementorsOfIt lineSelectAndEmptyCheck: makeProjectLink methodNamesContainingIt methodSourceContainingIt methodStringsContainingit mvcRedisplay paste pasteRecent performMenuMessage: presentSpecialMenu prettyPrint prettyPrint: prettyPrintWithColor printerSetup referencesToIt saveContentsInFile selectedSelector selectedSymbol sendContentsToPrinter sendersOfIt setAlignment: setSearchString spawn spawnWorkspace specialMenuItems undo)('new selection' adjustSelection: afterSelectionInsertAndSelect: computeIntervalFrom:to: correctFrom:to:with: encompassLine: insertAndSelect:at: nextTokenFrom:direction: notify:at:in: selectAt: selectFrom:to: selectInterval: selectInvisiblyFrom:to: selectInvisiblyMark:point: selectLine selectMark:point: selectPrecedingIdentifier selectWord)('nonediting/nontyping keys' comment cursorDown: cursorEnd: cursorHome: cursorLeft: cursorPageDown: cursorPageUp: cursorRight: cursorUp: escapeToDesktop: raiseContextMenu: selectCurrentTypeIn: selectWord: setSearchString:)('parenblinking' blinkParenAt: blinkPrevParen clearParens dispatchOnCharacter:with:)('scrolling' computeMarkerRegion markerDelta scrollAmount scrollBar scrollBy: scrollRectangleHeight scrollToBottom scrollToTop scrollView: updateMarker viewDelta)('sensor access' processBlueButton processKeyboard processMouseButtons processRedButton processYellowButton)('typing support' backTo: closeTypeIn closeTypeIn: dispatchOnEnterWith: doneTyping insertTypeAhead: openTypeIn readKeyboard setEmphasisHere simulatedKeystroke: startOfTyping)('typing/selecting keys' argAdvance: backWord: backspace: changeStyle: crWithIndent: cursorTopHome: displayIfFalse: displayIfTrue: doAgainMany: doAgainOnce: find: findAgain: forwardDelete: normalCharacter: querySymbol: search: selectAll selectAll: simulatedBackspace)('undo support' isDoing isRedoing isUndoing noUndoer undoMessage:forRedo: undoer: undoer:with: undoer:with:with: undoer:with:with:with:)('undoers' undoAgain:andReselect:typedKey: undoAndReselect:redoAndReselect: undoCutCopy: undoQuery:lastOffering: undoReplace)('private' againOnce: againOrSame: againOrSame:many: completeSymbol:lastOffering: exchangeWith: explainDelimitor: getPluggableYellowButtonMenu: indent:fromStream:toStream: isDisjointFrom: lines moveCursor:forward:specialBlock: nextWord: nullText pageHeight previousWord: sameColumn:newLine:forward: setIndices:forward:)!!ListController reorganize!('control defaults' controlActivity)('marker adjustment' computeMarkerRegion markerDelta)('menu messages' processKeyboard)('scrolling' scrollAmount scrollView: viewDelta)('selecting' redButtonActivity)('private' changeModelSelection:)!!ScrollController reorganize!('basic control sequence' controlInitialize controlTerminate)('control defaults' controlActivity isControlActive isControlWanted normalActivity)('cursor' changeCursor: markerContainsCursor menuBarContainsCursor scrollBarContainsCursor)('initialize-release' initialize)('marker adjustment' computeMarkerRegion markerDelta markerRegion: moveMarker moveMarker:anchorMarker: moveMarkerTo:)('scrolling' anyButtonActivity downLine scroll scrollAmount scrollByKeyboard scrollView scrollView: scrollViewDown scrollViewUp upDownLine upLine viewDelta yellowLine)('private' scrollAbsolute scrollDown scrollUp)!!ScreenController reorganize!('Tools' browseRecentLog chooseDirtyBrowser openChangeManager openFile openFileList openPackageBrowser openSelectorBrowser openSimpleChangeSorter)('control defaults' controlActivity isControlActive isControlWanted)('cursor' centerCursorInView)('file in/out' objectForDataStream:)('menu messages' aboutThisSystem absorbUpdatesFromServer beIsolated bitCachingString browseChangedMessages browseRecentSubmissions changeWindowPolicy chooseDirtyWindow closeUnchangedWindows collapseAll commonRequests configureFonts durableChangesMenu durableHelpMenu durableOpenMenu durableScreenMenu durableWindowMenu emergencyCollapse exitProject expandAll fastWindows fileForRecentLog fileOutChanges findWindow fontSizeSummary fullScreenOff fullScreenOn garbageCollect jumpToProject lookForSlips newChangeSet openBrowser openCommandKeyHelp openMorphicProject openMorphicWorld openProject openStandardWorkspace openTranscript openWorkspace propagateChanges quit restoreDisplay returnToPreviousProject saveAs setAuthorInitials setDesktopColor setDisplayDepth snapshot snapshotAndQuit soundEnablingString soundOnOrOff staggerPolicyString standardGraphicsLibrary viewImageImports vmStatistics windowSpecificationPanel)('nested menus' appearanceMenu changesMenu helpMenu openMenu popUpMenuFor: presentAppearanceMenu presentChangesMenu presentHelpMenu presentOpenMenu presentWindowMenu projectScreenMenu windowMenu)!!ScorePlayer reorganize!('accessing' duration durationInTicks infoForTrack: instrumentForTrack: instrumentForTrack:put: isStereo midiPort millisecondsSinceStart mutedForTrack: mutedForTrack:put: mutedState overallVolume overallVolume: panForTrack: panForTrack:put: positionInScore positionInScore: rate rate: repeat repeat: score secsPerTick settingsString tempo ticksForMSecs: ticksSinceStart ticksSinceStart: trackCount volumeForTrack: volumeForTrack:put:)('copying' copy copySounds)('initialization' initialize onScore: updateDuration)('midi output' closeMIDIPort midiPlayLoop openMIDIPort: processMIDIEventsAtTick: startMIDIPlaying stopMIDIPlaying turnOffActiveMIDINotesAt:)('operating' disableReverb: pause resumePlaying tempoOrRateChanged)('sound generation' doControl isDone isPlaying jumpToTick: mixSampleCount:into:startingAt:leftVol:rightVol: processAllAtTick: processAmbientEventsAtTick: processNoteEventsAtTick: processTempoMapAtTick: reset samplesRemaining skipAmbientEventsThruTick: skipNoteEventsThruTick: startNote:forStartTick:trackIndex:)('volume' adjustVolumeTo:overMSecs:)!!Parser reorganize!('*MinimalMorphic-error handling' interactive)('*MinimalMorphic-expression types' keylessMessagePartTest:repeat: temporaries)('*MinimalMorphic-public access' parse:class:noPattern:context:notifying:ifFail: parse:class:noPattern:notifying:ifFail: parseMethodComment:setPattern:)('error correction' correctSelector:wordIntervals:exprInterval:ifAbort: correctVariable:interval: declareClassVar: declareGlobal: declareInstVar: declareTempAndPaste: defineClass: queryUndefined removeUnusedTemps substituteSelector:wordIntervals: substituteWord:wordInterval:offset:)('error handling' expected: fail notify: notify:at: offEnd:)('expression types' argumentName assignment: blockExpression braceExpression cascade expression messagePart:repeat: method:context:encoder: newMethodNode pattern:inContext: primaryExpression statements:innerBlock: temporariesIn: temporaryBlockVariables variable)('pragmas' addPragma: pragmaLiteral pragmaPrimitives pragmaSequence pragmaStatement)('primitives' allocateLiteral: externalFunctionDeclaration externalType: primitive: primitive:module:)('properties' properties)('public access' encoder parse:class: parse:class:category:noPattern:context:notifying:ifFail: parseArgsAndTemps:notifying: parseSelector:)('scanning' advance endOfLastToken match: matchReturn matchToken: startOfNextToken)('temps' bindArg: bindTemp: bindTemp:in:)('private' addComment init:notifying:failBlock: initPattern:notifying:return:)!!Scanner reorganize!('*MinimalMorphic-error handling' errorMultibyteCharacter)('*MinimalMorphic-expression types' checkpoint nextLiteral)('*MinimalMorphic-public access' scanStringStruct:)('error handling' notify: offEnd:)('expression types' advance revertToCheckpoint: scanLitVec scanLitWord scanStringStruct scanToken step)('initialize-release' initScanner scan:)('multi-character scans' xBinary xColon xDelimiter xDigit xDollar xDoubleQuote xLetter xLitQuote xSingleQuote)('public access' scanFieldNames: scanMessageParts: scanTokens:)!!ScaledDecimal reorganize!('*MinimalMorphic-converting' asSpecies:)('*MinimalMorphic-testing' isScaledDecimal)('arithmetic' * + - / // negated reciprocal)('comparing' < = hash isZero)('converting' adaptToFraction:andSend: adaptToInteger:andSend: asFloat asFraction asScaledDecimal:)('mathematical functions' squared)('printing' printOn: printString)('truncation and round off' fractionPart integerPart truncated)('private' denominator numerator scale setFraction:scale:)!!ScaleMorph reorganize!('accessing' caption caption: captionAbove: labelsAbove: majorTickLength: minorTickLength: start: stop: tickPrintBlock:)('drawing' buildLabels drawMajorTicksOn: drawMinorTicksOn: drawOn: drawTicksOn:)('geometry' checkExtent: extent:)('initialization' defaultBorderWidth defaultColor initialize start:stop:minorTick:minorTickLength:majorTick:majorTickLength: start:stop:minorTick:minorTickLength:majorTick:majorTickLength:caption:tickPrintBlock: start:stop:minorTick:minorTickLength:majorTick:majorTickLength:caption:tickPrintBlock:labelsAbove:captionAbove:)('objects from disk' convertToCurrentVersion:refStream:)('stepping and presenter' start stop)!!SampledSound class reorganize!('*MinimalMorphicInitialization' initializeClass)('WAV reading' next16BitWord:from: next32BitWord:from: readWaveChunk:inRIFF:)('coffee cup clink' coffeeCupClink initializeCoffeeCupClink)('default sound' defaultSampleTable: defaultSamples:repeated: nominalSamplePitch: useCoffeeCupClink)('instance creation' beep fromAIFFfileNamed: fromWaveFileNamed: fromWaveStream: samples:samplingRate:)('sound library' addLibrarySoundNamed:fromAIFFfileNamed: addLibrarySoundNamed:samples:samplingRate: assimilateSoundsFrom: playSoundNamed: putCoffeeCupClinkInSoundLibrary removeSoundNamed: soundLibrary soundNamed: soundNamed:ifAbsent: soundNames universalSoundKeys unusedSoundNameLike:)('utilities' convert8bitSignedFrom:to16Bit: convert8bitSignedTo16Bit: convert8bitUnsignedTo16Bit: convertBytesTo16BitSamples:mostSignificantByteFirst: uLawDecode: uLawDecodeTable uLawEncode: uLawEncodeSample:)!!SampledSound reorganize!('accessing' compressWith: compressWith:atRate: duration duration: originalSamplingRate samples)('file i/o' storeSampleCount:bigEndian:on:)('initialization' pitch: setPitch:dur:loudness: setSamples:samplingRate:)('playing' endGracefully mixSampleCount:into:startingAt:leftVol:rightVol: playSilentlyUntil: reset samplesRemaining setScaledIncrement: stopAfterMSecs:)('sound tracks' sonogramMorph:from:to:nPoints: volumeForm:from:to:nSamplesPerPixel:)!!SampledInstrument reorganize!('accessing' allSampleSets: initialize loudThreshold loudThreshold: staccatoLoudAndSoftSampleSet: staccatoLoudSampleSet: staccatoSoftSampleSet: sustainedLoudSampleSet: sustainedSoftSampleSet: sustainedThreshold sustainedThreshold:)('other' allNotes chooseSamplesForPitch:from: memorySpace midiKeyMapFor: playChromaticRunFrom:to: pruneNoteList:notesPerOctave: pruneToNotesPerOctave: pruneToSingleNote: readSampleSetFrom: readSampleSetInfoFrom: testAtPitch: trimAttackOf:threshold: trimAttacks:)('playing' soundForMidiKey:dur:loudness: soundForPitch:dur:loudness:)!!SARInstaller class reorganize!('*MinimalMorphicInitialization' initializeClass)('SqueakMap' squeakMapPackageID squeakMapPackageVersion)('change set utilities' basicNewChangeSet: changeSetNamed: currentChangeSet fileIntoChangeSetNamed:fromStream: newChanges: withCurrentChangeSetNamed:do:)('class initialization' fileReaderServicesForFile:suffix: installSAR: serviceFileInSAR services unload)('instance creation' directory:fileName:)('package format support' ensurePackageWithId: loadDVS loadMonticello loadMonticelloCVS squeakMapDo:)!!SARInstaller reorganize!('accessing' directory directory: fileName fileName: installedMemberNames installedMembers memberNames uninstalledMemberNames uninstalledMembers zip zip:)('client services' extractMember: extractMember:toFileNamed: extractMemberWithoutPath: extractMemberWithoutPath:inDirectory: fileInGenieDictionaryNamed: fileInMemberNamed: fileInMonticelloPackageNamed: fileInMonticelloVersionNamed: fileInMonticelloZipVersionNamed: fileInMorphsNamed:addToWorld: fileInPackageNamed: fileInProjectNamed:createView: fileInTrueTypeFontNamed: getMCBootstrapLoaderClass importImage: installMember: memberNameForProjectNamed: memberNamed: membersMatching: openGraphicsFile: openTextFile: prependedDataSize zipFileComment)('fileIn' fileIn fileInCompressedCodeNamed: fileInFrom: fileIntoChangeSetNamed:fromStream: installAllMembers)('initialization' initialize)('private' errorNoSuchMember: fileInMCVersion:withBootstrap: installed:)!!RulerMorph reorganize!('drawing' drawOn:)('initialization' defaultBorderWidth defaultColor)!!ReverbSound reorganize!('accessing' sound sound: tapDelays:gains:)('copying' copy copySound)('sound generation' doControl mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining)('private' applyReverbTo:startingAt:count:)!!ReturnNode reorganize!('*MinimalMorphic-*eToys-tiles' explanation)('*eToys-tiles' asMorphicSyntaxIn:)('code generation' code emitForReturn:on: emitForValue:on: sizeForReturn: sizeForValue:)('converting' asReturnNode)('initialize-release' expr: expr:encoder:sourceRange:)('printing' expr printOn:indent:)('testing' isReturnSelf isSpecialConstant isVariableReference)!!RestSound reorganize!('accessing' duration duration: samples)('initialization' setDur:)('sound generation' mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining)!!ResourceManager class reorganize!('resource caching' cacheResource:inArchive: cacheResource:stream: lookupCachedResource:ifPresentDo: lookupCachedResource:in:ifPresentDo: lookupOriginalResourceCacheEntry:for: reloadCachedResources renameCachedResource:to: renameCachedResource:to:external: resourceCache resourceCacheName)('private-resources' addCacheLocation:for: loadResource:fromCacheFileNamed:in: localizedExternalResources relocatedExternalResource: relocatedExternalResource:to:)!!ResourceManager reorganize!('accessing' addResource:locator: addResource:url: adjustToDownloadUrl: adjustToNewServer:from: adjustToRename:from: makeAllProjectResourcesLocalTo: resourceMap)('backward-compatibility' convertMapNameForBackwardcompatibilityFrom:)('initialize' initialize initializeFrom: reset)('loading' installResource:from:locator: loadCachedResources loaderProcess preLoadFromArchive:cacheName: prioritizedUnloadedResources registerUnloadedResources startDownload stopDownload updateResourcesFrom:)('private' abandonResourcesThat: fixJISX0208Resource formChangedReminder hackURL: localizeAllExternalResources)!!ResourceLocator reorganize!('accessing' adjustToDownloadUrl: adjustToRename:from: localFileName localFileName: resourceFileSize resourceFileSize: urlString urlString:)('comparing' = hash species)('printing' printOn:)('testing' hasRemoteContents)!!RequirementsCache reorganize!('*MinimalMorphic-accessing' superRequirements)('accessing' newRequirementsObject requirements)('updates' addRequirement: removeRequirement:)!!RequiredSelectorsChangesCalculator reorganize!('*MinimalMorphic-accessing' classesToUpdate: modifiedBehaviors rootClasses: traitsToUpdate:)('*MinimalMorphic-calculating' removeRequirements:thatAreNotIn:)('accessing' classesToUpdate modifiedBehaviors: rootClasses targetBehaviors targetBehaviors: traitsToUpdate)('as yet unclassified' addUpdatePathTo:from: sinsIn:)('calculating' decideParameters doWork findAffectedTraitsFrom: findOriginalSins findRootsAndRoutes initialize noteRoot:possiblyAffected: possiblyAffectedForRoot: removeRequirements:thatAreNotIn:ifIn: selectorsToUpdateIn: setFoundRequirements: shouldProcess:forSinsIn: storeOldRequirementsUnder:into:ignoreSet: storeRequirementsUnder:for:in:)!!RequiredSelectors reorganize!('*MinimalMorphic-access to cache' registerLifelongInterestOf:inAll:)('*MinimalMorphic-accessing' newlyInterestingClasses newlyInterestingClasses:)('access to cache' calculateForClass: for: lostInterest:inAll: lostOneInterestIn: newCacheFor: noteInterestOf:inAll:)('accessing' dirtyClasses)('as yet unclassified' classesOfInterest dirtyWithChange: ensureClean newlyInteresting:)('invalidation' classChanged:)!!RepeatingSound reorganize!('accessing' iterationCount iterationCount: sound sound:)('copying' copy copySound)('initialization' setPitch:dur:loudness: setSound:iterations:)('sound generation' doControl mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining)!!RemoteHandMorph reorganize!('connections' lastEventTransmitted lastEventTransmitted: lastWorldExtent lastWorldExtent: readyToTransmit remoteHostAddress startListening startTransmittingEvents startTransmittingEventsTo: stopListening stopTransmittingEvents)('drawing' drawOn: needsToBeDrawn)('event handling' processEvents transmitEvent:)('events-processing' handleListenEvent:)('geometry' worldBounds)('initialization' initialize)('other' withdrawFromWorld)('private' appendNewDataToReceiveBuffer getNextRemoteEvent receiveData)!!ReleaseBuilderFor3dot11 reorganize!('cleaning' cleanupPhaseFinal cleanupPhasePrepare)('sources managment' createCompressedSources createDirIfnotExists:)('squeakThreeEleven' makeSqueakThreeTenEleven)('unloadPackages' groupingTests prepareforUnloadEtoys unloadSomeMore3)('updates' installtrunk loadLastVersion: repository)!!MenuMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('example' example)('images' closeBoxImage pushPinImage)('instance creation' entitled: fromArray:)!!EventRecorderMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('fileIn/Out' fileReaderServicesForFile:suffix: services)('initialize-release' unload)('instance creation' fromFileNamed: openTapeFromFile: readFrom:)!!DockingBarMorph class reorganize!('samples' example3 squeakMenu)('scripting' defaultNameStemForInstances)!!RectangleMorph class reorganize!('as yet unclassified' roundRectPrototype)('parts bin' diagonalPrototype gradientPrototype)!!ProgressMorph reorganize!('accessing' done done: incrDone: label label: progress subLabel subLabel:)('initialization' initLabelMorph initProgressMorph initSubLabelMorph initialize setupMorphs)('private' fontOfPointSize: labelMorph subLabelMorph)!!PluggableButtonMorphPlus reorganize!('accessing' action action: enabled enabled: getColorSelector getColorSelector: getEnabledSelector getEnabledSelector: onColor:offColor:)('action' mouseDown: mouseMove: mouseUp: performAction)('initialize-release' beActionButton initialize)('updating' update:)!!PluggableButtonMorph reorganize!('accessing' action: actionSelector askBeforeChanging askBeforeChanging: feedbackColor: label label: label:font: model: offColor offColor: onColor:offColor: performAction shortcutCharacter shortcutCharacter: triggerOnMouseDown triggerOnMouseDown:)('arguments' arguments: argumentsProvider:argumentsSelector:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('event handling' handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: mouseDown: mouseEnter: mouseLeave: mouseLeaveDragging: mouseMove: mouseUp:)('events' updateFeedbackForEvt:)('initialization' defaultBorderWidth defaultColor)('initialize-release' initialize on:getState:action:label:menu:)('updating' update:)('private' getMenu: getModelState invokeMenu:)!!PianoRollScoreMorph reorganize!('accessing' beatsPerMeasure: movieClipPlayer movieClipPlayer: notePerBeat: score scorePlayer selection selection: timeScale timeSignature:over:)('drawing' addNotes drawMeasureLinesOn: drawOn: drawStaffOn: isBlackKey: rebuildFromScore)('editing' appendEvent:fullDuration: copySelection cutSelection deleteSelection insertSelection insertTransposed)('event handling' handlesMouseDown: mouseDown: mouseMove: mouseUp:)('geometry' contractTime expandTime extent: midiKeyForY: tickTimeAtCursor timeForX: xForTime: yForMidiKey:)('initialization' defaultBorderWidth defaultColor initialize on: updateLowestNote)('layout' acceptDroppingMorph:event: fullBounds layoutChanged)('menu' addCustomMenuItems:hand: beatLinesOnOff invokeScoreMenu: measureLinesOnOff)('scrolling' autoScrollForX: goToTime: moveCursorToTime: notesInRect:)('stepping and presenter' step)('testing' stepTime)('private' removedMorph:)!!ObjectsTool reorganize!('alphabetic' alphabeticTabs installQuads:fromButton: showAlphabeticTabs)('categories' showCategories showCategory:fromButton: tabsForCategories)('initialization' initializeForFlap initializeToStandAlone tweakAppearanceAfterModeShift)('layout' extent: fixLayoutFrames minimizePartsBinSize minimumBottom minimumHeight minimumWidth position: setExtentFromHalo:)('major modes' modeSymbol modeSymbol: modeTabs)('menu' addCustomMenuItems:hand: resetThumbnails)('search' newSearchPane searchPaneCharacter: setSearchStringFromSearchPane showMorphsMatchingSearchString showSearchPane)('submorph access' buttonPane partsBin searchPane showAlphabeticCategory:fromButton: tabsPane)('tabs' initializeWithTabs: paneForTabs: presentHelp)('thumbnail' icon)!!MVCMenuMorph reorganize!('WiW support' morphicLayerNumber)('initializing' initialize)('invoking' displayAt:during: informUserAt:during: invokeAt:in: invokeAt:in:allowKeyboard:)('private' cancelValue: selectMVCItem:)!!MenuMorph reorganize!('MorphicExtras-accessing' allWordings allWordingsNotInSubMenus:)('accessing' activatedFromDockingBar: addBlankIconsIfNecessary: commandKeyHandler commandKeyHandler: defaultTarget hasItems hasSubMenu: itemWithWording: items lastItem lastSelection popUpOwner popUpOwner: rootMenu stayUp stayUp: wasActivatedFromDockingBar)('construction' add:action: add:help:action: add:icon:help:subMenu: add:icon:subMenu: add:selector:argument: add:subMenu: add:subMenu:target:selector:argumentList: add:target:action: add:target:selector: add:target:selector:argument: add:target:selector:argumentList: addAllFrom: addLine addList: addService:for: addServices2:for:extraLines: addServices:for:extraLines: addStayUpIcons addStayUpItem addStayUpItemSpecial addTitle: addTitle:icon: addTitle:icon:updatingSelector:updateTarget: addTitle:updatingSelector:updateTarget: addTranslatedList: addUpdating:action: addUpdating:enablement:action: addUpdating:enablementSelector:target:selector:argumentList: addUpdating:target:action: addUpdating:target:selector:argumentList: addWithLabel:enablement:action: addWithLabel:enablementSelector:target:selector:argumentList: balloonTextForLastItem: defaultTarget: labels:lines:selections: title:)('control' activeSubmenu: deleteIfPopUp deleteIfPopUp: popUpAdjacentTo:forHand:from: popUpAt:forHand:in: popUpAt:forHand:in:allowKeyboard: popUpEvent:in: popUpForHand:in: popUpInWorld popUpInWorld: popUpNoKeyboard selectItem:event: updateColor wantsToBeDroppedInto:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('dropping/grabbing' justDroppedInto:event: undoGrabCommand)('eToys-control' isCandidateForAutomaticViewing)('events' activate: handleFocusEvent: handlesMouseDown: mouseDown: mouseUp:)('initialization' delete initialize setDefaultParameters setTitleParametersFor:)('keyboard control' displayFiltered: filterListWith: handlesKeyboard: keyStroke: keyboardFocusChange: moveDown: moveRightOrDown: moveSelectionDown:event: moveUp: removeMatchString selectCurrentItem: selectMoreItem: unfilterOrEscape:)('menu' addCustomMenuItems:hand: addItem addTitle detachSubMenu: doButtonAction removeStayUpBox removeStayUpItems setInvokingView: setTarget: target: toggleStayUp: toggleStayUpIgnore:evt: updateItemsWithTarget:orWithHand:)('modal control' invokeModal invokeModal: invokeModalAt:in:allowKeyboard: isModalInvokationDone isModalInvokationDone: modalSelection modalSelection:)('rounding' roundedCorners)('private' invokeMetaMenu: morphicLayerNumber positionAt:relativeTo:inWorld: selectedItem)!!GraphicalMenu reorganize!('as yet unclassified' argument argument: cancel downArrowHit okay selector selector: upArrowHit)('event handling' updateThumbnail)('initialization' defaultBorderColor defaultBorderWidth defaultColor initialize initializeFor:withForms:coexist:)!!GraphMorph reorganize!('accessing' color: cursorAtEnd cursorColor cursorColor: cursorColorAtZeroCrossing cursorColorAtZeroCrossings: cursorWrapped: data data: dataColor dataColor: interpolatedValueAtCursor lastValue lastValue: startIndex startIndex: valueAtCursor:)('commands' appendValue: centerCursor clear loadSineWave loadSound: loadSoundData: playOnce reverse)('drawing' drawOn:)('e-toy support' cursor cursor:)('event handling' handlesMouseDown: mouseMove:)('initialization' defaultColor initialize)('layout' layoutChanged)('objects from disk' convertToCurrentVersion:refStream:)('sound' addCustomMenuItems:hand: readDataFromFile)('stepping and presenter' step)('private' drawCursorOn: drawDataOn: flushCachedForm keepIndexInView:)!!GradientFillMorph reorganize!('accessing' hasTranslucentColor)('as yet unclassified' gradientFillColor: setGradientColor:)('drawing' drawOn:)('initialization' initialize)('menu' addCustomMenuItems:hand: beHorizontal beVertical)('updating' changed)!!FloatingBookControlsMorph reorganize!('WiW support' morphicLayerNumber)('initialization' defaultBorderWidth initialize)('stepping and presenter' step)('testing' stepTime wantsSteps)!!FillInTheBlankMorph reorganize!('*services-base' selection)('accessing' response response: selectionInterval)('event handling' handlesMouseDown: mouseDown:)('geometry' extent:)('grabbing/dropping' undoGrabCommand)('initialization' createAcceptButton createCancelButton createQueryTextMorph: createTextPaneExtent:acceptBoolean:topOffset:buttonAreaHeight: defaultColor delete initialize responseUponCancel: setDefaultParameters setPasswordQuery:initialAnswer:answerHeight:acceptOnCR: setQuery:initialAnswer:answerExtent:acceptOnCR: setQuery:initialAnswer:answerHeight:acceptOnCR: updateColor updateColor:color:intensity:)('invoking' getUserResponse morphicLayerNumber)('menu' accept cancel codePaneMenu:shifted:)('object fileIn' convertToCurrentVersion:refStream:)!!EventRecorderMorph reorganize!('accessing' button:)('commands' button condense play record setStatusLight: shrink)('event handling' nextEventToPlay synchronize)('events-processing' handleListenEvent:)('fileIn/Out' checkTape convertV0Tape: readFrom: readFromV0: readFromV1: readTape readTape: writeCheck writeFileNamed: writeTape writeTape:)('initialization' addButtons addCustomMenuItems:hand: addJournalFile buttonFor: caption:voiceRecorder:tape: defaultBorderColor defaultBorderWidth defaultColor initialize makeARowForButtons makeASpacer makeStatusLight)('pause/resume' pauseIn: resumeIn: resumePlayIn: resumeRecordIn:)('sound' addVoiceControls)('sound-piano rolls' addMorphsTo:pianoRoll:eventTime:betweenTime:and: encounteredAtTime:inScorePlayer:atIndex:inEventTrack:secsPerTick: myDurationInMS)('stepping and presenter' step stop)('testing' stepTime wantsSteps)!!EmbeddedWorldBorderMorph reorganize!('WiW support' morphicLayerNumber)('as yet unclassified' goAppView goFactoryView goFullView goNormalProjectEntry myTransformation myWorldChanged toggleZoom worldIEnclose)('boxes' appViewBoxArea boxesAndColorsAndSelectors factoryViewBoxArea fullViewBoxArea genericBoxArea: normalEntryBoxArea zoomBoxArea)('drawing' drawOn:)('event handling' handlesMouseDown: mouseDown:)('geometry' extent:)('initialization' initialize)('layout' minHeight: minWidth:)('menus' addCustomMenuItems:hand:)!!EToyProjectDetailsMorph reorganize!('as yet unclassified' copyOutDetails doExpand doOK expandButton expandedFormat expandedFormat: fieldToDetailsMappings fillInDetails project:actionBlock: projectDetails:)('initialization' rebuild space)!!EToyGenericDialogMorph reorganize!('as yet unclassified' genericTextFieldNamed: inAColumnForText: lockedString: lockedString:font: myFont rightLockedString: rightLockedString:font:)('initialization' defaultBorderColor defaultBorderWidth initialize rebuild)!!DockingBarMorph reorganize!('WiW support' morphicLayerNumber)('accessing' addBlankIconsIfNecessary: adhereToBottom adhereToLeft adhereToRight adhereToTop autoGradient autoGradient: avoidVisibleBordersAtEdge avoidVisibleBordersAtEdge: beFloating color: fillsOwner fillsOwner: isAdheringToBottom isAdheringToLeft isAdheringToRight isAdheringToTop isFloating isHorizontal isSticky isVertical resistsRemoval rootMenu stayUp wantsToBeTopmost)('change reporting' ownerChanged)('construction' add:icon:help:subMenu: add:icon:subMenu: add:subMenu: addDefaultSpace addLine addSpace: addSpacer)('control' activeSubmenu: deleteIfPopUp: selectItem:event:)('dropping/grabbing' aboutToBeGrabbedBy: justDroppedInto:event:)('events' activate:)('events-processing' handleFocusEvent:)('geometry' extent:)('initialization' initialize setDefaultParameters)('menu' addCustomMenuItems:hand: autoGradientString avoidVisibleBordersAtEdgeString fillsOwnerString toggleAutoGradient toggleAvoidVisibleBordersAtEdge toggleFillsOwner wantsYellowButtonMenu)('menus' snapToEdgeIfAppropriate)('meta-actions' blueButtonDown:)('rounding' roundedCorners)('submorphs-accessing' noteNewOwner:)('submorphs-add/remove' delete)('testing' isDockingBar)('private' selectedItem)('private - accessing' adhereTo: edgeToAdhereTo predominantDockingBarsOfChastes: usedHeightByPredominantDockingBarsOfChastes: usedWidthByPredominantDockingBarsOfChastes:)('private - layout' gradientRamp gradientRamp: updateBounds updateColor updateExtent updateLayoutProperties updatePosition)!!ClickExerciser reorganize!('accessing' allSelectors alternateBorderColor alternateColor balloonText defaultBorderColor defaultColor selectors)('event handling' click: doubleClick: doubleClickTimeout: handlesMouseDown: mouseDown: startDrag:)('initialization' alternateSide defaultSide initButtons initialize)!!BasicButton reorganize!('as yet unclassified' label label: label:font: setLabel)('initialization' defaultBorderColor defaultBorderWidth defaultColor initialize)('menus' addCustomMenuItems:hand:)!!BalloonRectangleMorph reorganize!('accessing' doesBevels)('drawing' drawOn:)('initialization' defaultBorderColor defaultBorderWidth defaultColor initialize)('rotate scale and flex' newTransformationMorph)('testing' canDrawBorder:)!!AlignmentMorph reorganize!('MorphicExtras-initialization' basicInitialize)('classification' isAlignmentMorph)('eToys-e-toy support' configureForKids)('event handling' wantsKeyboardFocusFor:)('initialization' defaultBorderWidth defaultColor initialize openInWindowLabeled:inWorld:)('object fileIn' convertOldAlignmentsNov2000:using:)('objects from disk' convertToCurrentVersion:refStream:)('visual properties' canHaveFillStyles)!!RectangleMorph reorganize!('accessing' wantsToBeCachedByHand)('initialization' defaultColor)('visual properties' canHaveFillStyles)!!Rectangle class reorganize!('*MinimalMorphic-instance creation' fromUser fromUser: originFromUser: originFromUser:grid:)('instance creation' center:extent: encompassing: left:right:top:bottom: merging: origin:corner: origin:extent:)!!Quadrangle reorganize!('*MinimalMorphic-*eToys-vocabulary' vocabularyDemanded)('*MinimalMorphic-bordering' setHeight: setLeft:)('*MinimalMorphic-displaying-Display' displayAlign:with:clippingBox: displayTransformation:clippingBox:)('bordering' borderColor borderColor: borderWidth borderWidth: borderWidthLeft:right:top:bottom: inside insideColor insideColor: region region: setRight: setWidth:)('displaying-Display' display)('displaying-generic' displayOn: displayOn:align:with:clippingBox: displayOn:transformation:clippingBox: displayOnPort:at:)('initialize-release' initialize)('rectangle functions' intersect:)('transforming' align:with: alignedTo: scaleBy: translateBy:)('private' setRegion:borderWidth:borderColor:insideColor:)!!Rectangle reorganize!('*MinimalMorphic-*Morphic-Truncation and Roundoff' compressTo: compressed expandTo:)('*MinimalMorphic-rectangle functions' withSideOrCorner:setToPoint:)('*MinimalMorphic-transforming' newRectButtonPressedDo: newRectFrom:)('*Morphic-Truncation and Roundoff' ceiling expanded floor isIntegerRectangle roundTo:)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas encodeForRemoteCanvasB)('FMP' deltaToEnsureInOrCentered:extra:)('accessing' aboveCenter area bottom bottom: bottomCenter bottomLeft bottomRight boundingBox center corner corners extent height innerCorners left left: leftCenter origin right right: rightCenter top top: topCenter topLeft topRight width)('comparing' = hash hashMappedBy:)('printing' printOn: propertyListOn: storeOn:)('rectangle functions' adjustTo:along: allAreasOutsideList:do: allAreasOutsideList:startingAt:do: amountToTranslateWithin: areasOutside: bordersOn:along: encompass: expandBy: extendBy: forPoint:closestSideDistLen: insetBy: insetOriginBy:cornerBy: intersect: merge: outsetBy: pointNearestTo: quickMerge: rectanglesAt:height: sideNearestTo: translatedToBeWithin: withBottom: withHeight: withLeft: withRight: withSide:setTo: withSideOrCorner:setToPoint:minExtent: withSideOrCorner:setToPoint:minExtent:limit: withTop: withWidth:)('self evaluating' isSelfEvaluating)('testing' containsPoint: containsRect: hasPositiveExtent intersects: isRectangle isTall isWide isZero)('transforming' align:with: centeredBeneath: flipBy:centerAt: rotateBy:centerAt: scaleBy: scaleFrom:to: squishedWithin: translateBy: translatedAndSquishedToBeWithin:)('truncation and round off' rounded truncateTo: truncated)('private' setOrigin:corner:)!!RealEstateAgent class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' maximumUsableArea maximumUsableAreaInWorld: standardPositions standardPositionsInWorld:)('framing' initialFrameFor: initialFrameFor:initialExtent: initialFrameFor:initialExtent:world: initialFrameFor:world: strictlyStaggeredInitialFrameFor:initialExtent: strictlyStaggeredInitialFrameFor:initialExtent:world:)('settings' screenTopSetback scrollBarSetback standardWindowExtent windowColumnsDesired windowRowsDesired)('utilities' assignCollapseFrameFor: assignCollapsePointFor:)!!ReadOnlyVariableBinding reorganize!('*MinimalMorphic-accessing' canAssign)('accessing' value value:)('testing' isSpecialWriteBinding)('private' privateSetKey:value:)!!RandomEnvelope reorganize!('accessing' centerPitch: delta delta: highLimit highLimit: lowLimit lowLimit: volume:)('applying' updateTargetAt:)('envelope compatibility' duration duration: name sustainEnd:)('envelopeEditor compatibility' points setPoints:loopStart:loopEnd:)('initialization' initialize)!!Random class reorganize!('*MinimalMorphic-testing' bucketTest: theItsCompletelyBrokenTest)('instance creation' seed:)!!Random reorganize!('*MinimalMorphic-die rolling' check: check:against: roll:)('*MinimalMorphic-private' seed)('accessing' next next: next:into: nextInt:)('die rolling' check:against:difficulty: check:difficulty: diceToken:)('initialization' initialize seed:)('private' nextValue)!!RFC2047MimeConverter reorganize!('*MinimalMorphic-private-encoding' encodeWord: isStructuredField:)('conversion' mimeDecode mimeEncode)('private-encoding' encodeChar:to: readWord)!!QueueSound reorganize!('accessing' add: currentSound currentSound: done: sounds startTime startTime:)('initialization' initialize)('sound generation' doControl mixSampleCount:into:startingAt:leftVol:rightVol: nextSound reset samplesRemaining)!!PseudoPoolVariable reorganize!('*MinimalMorphic-as yet unclassified' canAssign getter: setter:)('as yet unclassified' name name: value value:)!!PseudoMetaclass reorganize!('*monticello-override' isMeta)('accessing' fullName realClass theNonMetaClass)!!PseudoContext class reorganize!('*MinimalMorphic-filing out' definition)('*MinimalMorphic-private' contextCacheDepth contextCacheDepth:)('*MinimalMorphicInitialization' initializeClass)('class initialization' initialize)!!PseudoClassOrganizer reorganize!('accessing' setDefaultList:)('comment accessing' classComment classComment:)!!PseudoClass reorganize!('*monticello' asClassDefinition)('*monticello-override' isMeta)('accessing' allCallsOn allInstVarNames allSuperclasses compilerClass fullName instVarNames name name: organization prettyPrinterClass realClass theMetaClass theNonMetaClass)('categories' removeCategory: removedCategoryName whichCategoryIncludesSelector:)('class' classComment: classPool comment comment: commentString commentString: definition definition: metaClass renameTo: sharedPools)('errors' classNotDefined)('fileIn/fileOut' fileIn fileInCategory: fileInDefinition fileInMethod: fileInMethods fileInMethods: fileOut fileOutCategory: fileOutDefinitionOn: fileOutMethod: fileOutMethods:on: fileOutMethodsOn: fileOutOn:)('methods' addMethodChange: methodChange: removeMethod: removeSelector: selectors sourceCode sourceCodeAt: sourceCodeAt:put: sourceCodeTemplate stampAt:)('printing' literalScannedAs:notifying: printOn:)('removing' removeAllUnmodified removeUnmodifiedMethods:)('testing' exists hasChanges hasComment hasDefinition hasMetaclass isTrait nameExists needsInitialize)('testing method dictionary' bindingOf:)('private' allSubclassesWithLevelDo:startingLevel: confirmRemovalOf: evaluate: makeSureClassExists: makeSureSuperClassExists: parserClass)!!POP3Client reorganize!('public protocol' apopLoginUser:password: deleteMessage: loginUser:password: loginUser:password:loginMethod: messageCount quit retrieveMessage:)('private' loginMethod loginMethod:)('private protocol' apopLogin clearTextLogin getMultilineResponse login)('private testing' responseIsError responseIsWarning)!!ProtocolClient reorganize!('accessing' logProgressToTranscript messageText response stream stream:)('actions' close reopen)('testing' isConnected)('private' connectionInfo defaultPortNumber ensureConnection host host: lastResponse lastResponse: logFlag logProgress: openOnHost:port: password password: pendingResponses popResponse port port: progressObservers pushResponse: resetConnectionInfo user user:)('private protocol' checkForPendingError checkResponse checkResponse:onError:onWarning: checkResponseOnError:onWarning: fetchNextResponse fetchPendingResponse sendCommand: sendStreamContents:)('private testing' responseIsError responseIsWarning)!!ProportionalSplitterMorph class reorganize!('as yet unclassified' splitterWidth)('preferences' fastSplitterResize showSplitterHandles)!!ProportionalLayout reorganize!('layout' layout:in: minExtentOf:in:)('testing' isProportionalLayout)!!ProjectViewMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('fileIn/Out' fileReaderServicesForFile:suffix: services)('initialize-release' unload)('instance creation' on:)('project window creation' newMVCProject newMorphicProject newMorphicProjectOn: newProjectViewInAWindowFor: openFromDirectory:andFileName: openFromDirectoryAndFileName: openFromFile: openFromFileList: serviceOpenProjectFromFile)('scripting' defaultNameStemForInstances)!!ProjectViewMorph reorganize!('MorphicExtras-*morphic-Postscript Canvases' fullDrawPostscriptOn:)('MorphicExtras-event handling' handlesMouseStillDown: mouseStillDown:)('MorphicExtras-events' enterAsActiveSubproject)('accessing' borderWidthForRounding project thumbnail)('as yet unclassified' addProjectNameMorph addProjectNameMorphFiller editTheName: expungeProject)('caching' releaseCachedState)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' colorAroundName drawOn: ensureImageReady fontForName isEditingName isTheRealProjectPresent safeProjectName safeProjectName: showBorderAs: updateImageFrom: updateNamePosition)('dropping/grabbing' wantsDroppedMorph:event:)('event handling' handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: mouseDown: mouseEnter: mouseLeave: mouseLeaveDragging: mouseUp: wantsKeyboardFocusFor:)('events' balloonText checkForNewerVersionAndLoad deletingProject: doButtonAction enter enterWhenNotPresent lastProjectThumbnail: on: project: seeIfNameChanged showMenuForProjectView showMouseState: withProgressDo:)('fileIn/out' storeSegment)('geometry' extent:)('initialization' dismissViaHalo initialize)('layout' acceptDroppingMorph:event:)('objects from disk' objectForDataStream:)('rounding' wantsRoundedCorners)('sound-piano rolls' triggerActionFromPianoRoll)('stepping and presenter' step)('submorphs-add/remove' abandon)('testing' stepTime)!!ProjectLoading class reorganize!('accessing' projectStreamFromArchive: thumbnailFromUrl:)('loading' installRemoteNamed:from:named:in: openFromDirectory:andFileName: openFromFile:fromDirectory:withProjectView: openName:stream:fromDirectory:withProjectView:)('utilities' bestAccessToFileName:andDirectory: useTempChangeSet)!!ProjectLauncher reorganize!('eToy login' cancelLogin loginAs: prepareForLogin proceedWithLogin)('initialization' initialize setupFromParameters)('running' hideSplashMorph installProjectFrom: showSplashMorph startUp startUpAfterLogin)('private' showSplash)!!ProjectHistory reorganize!('accessing' mostRecentCopy mostRecentNames mostRecentThread)('initialize-release' initialize)('project lifetime' cleanUp forget: remember:)('updating' changed)!!Project class reorganize!('*MinimalMorphic-class initialization' rebuildAllProjects)('*MinimalMorphic-instance creation' new newMorphic newMorphicOn: uiProcess)('*MinimalMorphic-squeaklet on server' enterIfThereOrFind: fromUrl: isBadNameForStoring: loaderUrl mostRecent:onServer: namedUrl: openBlankProjectNamed: parseProjectFileName: projectExtension serverDirectoryFromURL: serverFileFromURL: spawnNewProcessIfThisIsUI: squeakletDirectory sweep:)('*MinimalMorphic-utilities' addItem:toMenu:selection: addItem:toMenu:selection:project: addingProject: advanceToNextProject allMorphicProjects allNamesAndProjects allProjects allProjectsOrdered buildJumpToMenu: canWeLoadAProjectNow chooseNaturalLanguage deletingProject: enter: forget: hierarchyOfNamesAndProjects interruptName: interruptName:preemptedProcess: jumpToProject jumpToSelection: maybeForkInterrupt named:in: namedWithDepth: ofWorld: projectHierarchy removeAll: removeAllButCurrent resumeProcess: returnToPreviousProject showProjectHierarchyInWindow spawnNewProcess spawnNewProcessAndTerminateOld: storeAllInSegments topProject versionForFileName:)('*MinimalMorphicInitialization' initializeClass)('class initialization' initialize localeChanged)('constants' current)('utilities' allNames named:)!!Project reorganize!('*MinimalMorphic-*sound' beep)('*MinimalMorphic-accessing' addGuard: addSubProjectNamesTo:indentation: children currentStack: displayDepth: findProjectView: forgetExistingURL isMorphic isTopProject lastSavedAtSeconds nextProject parent previousProject renameTo: setParent: setThumbnail: setViewSize: storeNewPrimaryURL: thumbnail urlList viewSize withChildrenDo: world)('*MinimalMorphic-active process' depth)('*MinimalMorphic-displaying' createViewIfAppropriate displayZoom: imageForm imageFormOfSize:depth: showZoom)('*MinimalMorphic-docking bars support' createOrUpdateMainDockingBar removeMainDockingBar showWorldMainDockingBar showWorldMainDockingBarString)('*MinimalMorphic-file in/out' armsLengthCommand:withDescription: assureIntegerVersion bumpVersion: compressFilesIn:to:in:resources: couldBeSwappedOut currentVersionNumber decideAboutCreatingBlank: doArmsLengthCommand: downloadUrl ensureChangeSetNameUnique exportSegmentFileName:directory: exportSegmentWithChangeSet:fileName:directory: findAFolderToLoadProjectFrom findAFolderToStoreProjectIn fromMyServerLoad: hasBadNameForStoring htmlPagePrototype loadFromServer loadFromServer: objectForDataStream: primaryServer primaryServerIfNil: projectExtension revert saveAs saveForRevert serverList squeakletDirectory storeAttributeKey:value:on: storeAttributesOn: storeDataOn: storeHtmlPageIn: storeManifestFileIn: storeOnServer storeOnServerAssumingNameValid storeOnServerInnards storeOnServerShowProgressOn:forgetURL: storeOnServerWithProgressInfo storeOnServerWithProgressInfoOn: storeSegment storeSomeSegment storeToMakeRoom tryToFindAServerWithMe url urlForLoading versionForFileName versionFrom: versionedFileName writeFileNamed:fromDirectory:toServer:)('*MinimalMorphic-flaps support' enableDisableGlobalFlap: flapsSuppressed isFlapIDEnabled: showSharedFlaps suppressFlapsString)('*MinimalMorphic-initialization' backgroundColorForMorphicProject backgroundColorForMvcProject defaultBackgroundColor initMorphic initialExtent initialProject initialize installNewDisplay:depth: installPasteUpAsWorld: setChangeSet: setProjectHolder: setServer windowActiveOnFirstClick windowReqNewLabel:)('*MinimalMorphic-isolation layers' beIsolated compileAll:from: invoke invokeFrom: isIsolated isolationHead isolationSet layersToTop propagateChanges revoke)('*MinimalMorphic-language' chooseNaturalLanguage setPaletteFor: updateLocaleDependents)('*MinimalMorphic-menu messages' displayFontProgress doWeWantToRename enter enter: enterAsActiveSubprojectWithin: enterForEmergencyRecovery exit finalEnterActions finalExitActions makeThumbnail saveState validateProjectNameIfOK: viewLocFor:)('*MinimalMorphic-object fileIn' convertToCurrentVersion:refStream:)('*MinimalMorphic-project parameters' initializeProjectPreferences)('*MinimalMorphic-release' deletingProject: okToChange release subProjects)('*MinimalMorphic-resources' abortResourceLoading resourceManager resourceManager: startResourceLoading storeResourceList:in:)('OBSOLETE' obsolete)('SuperSwiki' tellAFriend tellAFriend:)('accessing' changeSet isCurrentProject labelString lastDirectory: name nameAdjustedForDepth projectChangeSet)('docking bars support' assureMainDockingBarPresenceMatchesPreference showWorldMainDockingBar: toggleShowWorldMainDockingBar)('file in/out' exportSegmentWithCatagories:classes:fileName:directory: restoreReferences storeSegmentNoFile writeStackText:in:registerIn:)('flaps support' assureFlapIntegrity cleanseDisabledGlobalFlapIDsList flapsSuppressed: globalFlapEnabledString: globalFlapWithIDEnabledString: isFlapEnabled: toggleFlapsSuppressed)('isolation layers' compileAllIsolated:from:)('language' localeChanged localeID naturalLanguage setFlaps)('menu messages' assureNavigatorPresenceMatchesPreference enter:revert:saveForRevert: fileOut installProjectPreferences navigatorFlapVisible saveProjectPreferences)('printing' printOn:)('project parameters' currentStack initializeProjectParameters noteThatParameter:justChangedTo: parameterAt: parameterAt:ifAbsent: projectParameterAt: projectParameterAt:ifAbsent: projectParameterAt:ifAbsentPut: projectParameterAt:put: projectParameters projectPreferenceAt: projectPreferenceAt:ifAbsent: projectPreferenceFlagDictionary rawParameters removeParameter:)('release' addDependent: canDiscardEdits removeChangeSetIfPossible)('resources' resourceDirectoryName resourceUrl)!!ProgressInitiationException class reorganize!('*MinimalMorphic-examples and tests' testWith)('examples and tests' testInnermost testWithAdditionalInfo testWithout)('signalling' display:at:from:to:during:)!!ProgressInitiationException reorganize!('*MinimalMorphic-as yet unclassified' defaultAction defaultMVCAction defaultMorphicAction)('as yet unclassified' aPoint display:at:from:to:during: isResumable maxVal minVal progressTitle sendNotificationsTo: workBlock)!!ProgressBarMorph reorganize!('accessing' progressColor progressColor: value value:)('drawing' drawOn:)('initialization' initialize)('menu' addCustomMenuItems:hand: changeProgressColor: changeProgressValue:)('updating' update:)!!ProcessorScheduler class reorganize!('*MinimalMorphic-background process' sweepHandIdleProcess)('background process' idleProcess relinquishProcessorForMicroseconds: startUp)('class initialization' initialize)('instance creation' new)!!ProcessorScheduler reorganize!('*MinimalMorphic-CPU usage tally' tallyCPUUsageFor:)('*MinimalMorphic-accessing' highestPriority: waitingProcessesAt:)('*MinimalMorphic-priority names' systemBackgroundPriority)('*MinimalMorphic-process state change' suspendFirstAt:)('CPU usage tally' nextReadyProcess tallyCPUUsageFor:every:)('accessing' activePriority activeProcess backgroundProcess highestPriority preemptedProcess)('objects from disk' objectForDataStream:)('priority names' highIOPriority lowIOPriority lowestPriority timingPriority userBackgroundPriority userInterruptPriority userSchedulingPriority)('process state change' suspendFirstAt:ifNone: terminateActive yield)('removing' remove:ifAbsent:)('private' anyProcessesAbove:)!!ProcessBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('CPU utilization' dumpTallyOnTranscript: tallyCPUUsageFor: tallyCPUUsageFor:every:)('as yet unclassified' shutDown startUp)('class initialization' registerWellKnownProcesses)('instance creation' open prototypicalToolWindow)('process control' debugProcess: isUIProcess: nameAndRulesFor: registerWellKnownProcess:label:allowStop:allowDebug: resumeProcess: setProcess:toPriority: suspendProcess: suspendedProcesses terminateProcess: unregisterWellKnownProcess: wasProcessSuspendedByProcessBrowser:)!!ProcessBrowser reorganize!('accessing' processList processListIndex processListIndex: selectedClass selectedMethod selectedSelector stackList stackListIndex stackListIndex: text)('initialize-release' initialize startCPUWatcher stopCPUWatcher windowIsClosing)('message handling' perform:orSendTo:)('process actions' changePriority chasePointers debugProcess inspectPointers nameAndRulesFor: nameAndRulesForSelectedProcess resumeProcess signalSemaphore suspendProcess terminateProcess wasProcessSuspendedByProcessBrowser:)('process list' exploreProcess findContext inspectProcess nextContext notify:at:in: prettyNameForProcess: processListKey:from: processListMenu: processNameList updateProcessList)('stack list' browseContext changeStackListTo: exploreContext exploreReceiver inspectContext inspectReceiver messageTally moreStack pcRange stackListMenu: stackNameList updateStackList updateStackList:)('toolbuilder' buildWith:)('updating' isAutoUpdating isAutoUpdatingPaused pauseAutoUpdate setUpdateCallbackAfter: startAutoUpdate stopAutoUpdate toggleAutoUpdate)('views' asPrototypeInWindow hasView openAsMVC openAsMorph stackListKey:from:)!!Process reorganize!('*MinimalMorphic-changing suspended state' completeTo:)('*MinimalMorphic-debugging' debug:title:full:)('*MinimalMorphic-error handling' errorHandler errorHandler:)('accessing' calleeOf: copyStack isActiveProcess isSuspended isTerminated name name: offList priority priority: suspendedContext suspendingList)('changing process state' primitiveResume primitiveSuspend resume run suspend terminate)('changing suspended state' activateReturn:value: complete: completeStep: install: popTo: popTo:value: restartTop restartTopWith: return:value: step step: stepToCallee stepToHome: stepToSendOrReturn)('debugging' debug debug:title: debugWithTitle:)('objects from disk' objectForDataStream:)('printing' browserPrintString browserPrintStringWith: longPrintOn: printOn:)('signaling' pvtSignal:list: signalException:)('private' suspendedContext:)!!PrimitiveNode reorganize!('*MinimalMorphic-as yet unclassified' num spec)('as yet unclassified' num: printOn: printPrimitiveOn: sourceText spec:)!!Presenter reorganize!('access' associatedMorph associatedMorph: world)('button creation' addTrashCan)('intialize' allExtantPlayers)('misc' currentlyViewing: drawingJustCompleted: morph:droppedIntoPasteUpMorph: standardPlayfield: tempCommand)('palette & parts bin' ownStandardPalette standardPalette: systemQueryPhraseWithActionString:labelled:)('playerList' allCurrentlyTickingScriptInstantiations allKnownScriptSelectors allKnownUnaryScriptSelectors allPlayersWithUniclasses browseAllScriptsTextually flushPlayerListCache hasAnyTextuallyCodedScripts reinvigorateAllScriptsTool: reinvigoratePlayersTool: reportPlayersAndScripts toolToViewScriptInstantiations uniclassesAndCounts)('printing' printOn:)('scripting' adaptedToWorld:)('standardPlayer etc' createStandardPlayer positionStandardPlayer standardPlayer)('stop-step-go buttons' allGoButtons allStepButtons allStopButtons goButtonState: goUp:with: startRunningScripts startRunningScriptsFrom: stepButtonState: stepDown:with: stepStillDown:with: stepUp:with: stopButtonState: stopRunningScripts stopRunningScriptsFrom: stopUp:with:)('tile support' booleanTiles constantTile: phraseForReceiver:op:arg:resultType: typeForConstant: valueTiles)('viewer' cacheSpecs: nascentPartsViewer nascentPartsViewerFor: updateViewer: updateViewer:forceToShow: viewMorph: viewObject: viewObjectDirectly:)!!Preferences class reorganize!('*MinimalMorphic-add preferences' addBooleanPreference:categories:default:balloonHelp: addBooleanPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector: addBooleanPreference:category:default:balloonHelp: addColorPreference:categories:default:balloonHelp: addColorPreference:category:default:balloonHelp: addFontPreference:categories:default:balloonHelp: addFontPreference:category:default:balloonHelp: addNumericPreference:categories:default:balloonHelp: addPreference:categories:default:balloonHelp: addPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector: addTextPreference:categories:default:balloonHelp:)('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-fonts' attemptToRestoreClassicFonts chooseBalloonHelpFont chooseCodeFont chooseEToysFont chooseEToysTitleFont chooseFontWithPrompt:andSendTo:withSelector: chooseFontWithPrompt:andSendTo:withSelector:highlight: chooseHaloLabelFont chooseListFont chooseMenuFont chooseStandardButtonFont chooseSystemFont chooseWindowTitleFont fontConfigurationMenu printStandardSystemFonts refreshFontSettings restoreDefaultFonts restoreDefaultFontsForJapanese setBalloonHelpFontTo: setButtonFontTo: setCodeFontTo: setDefaultFonts: setDemoFonts setEToysFontTo: setEToysTitleFontTo: setHaloLabelFontTo: setListFontTo: setMenuFontTo: setPaintBoxButtonFontTo: setSystemFontTo: setWindowTitleFontTo: standardBalloonHelpFont standardButtonFont standardCodeFont standardDefaultTextFont standardEToysFont standardEToysTitleFont standardFlapFont standardHaloLabelFont standardListFont standardMenuFont standardPaintBoxButtonFont windowTitleFont windowTitleStyle)('*MinimalMorphic-get/set' automaticFlapLayoutString disableGently: enableGently:)('*MinimalMorphic-halos' classicHaloSpecs classicHalosInForce customHaloSpecs customHalosInForce editCustomHalos haloSpecifications haloSpecificationsForWorld iconicHaloSpecifications iconicHalosInForce installClassicHaloSpecs installCustomHaloSpecs installHaloSpecsFromArray: installHaloTheme: installIconicHaloSpecs installSimpleHaloSpecs resetHaloSpecifications showChooseGraphicHaloHandle simpleFullHaloSpecifications simpleHalosInForce)('*MinimalMorphic-hard-coded prefs' browseToolClass cmdKeysInText debugMenuItemsInvokableFromScripts desktopMenuTitle messengersInViewers metaMenuDisabled preserveCommandExcursions suppressWindowTitlesInInstanceBrowsers useCategoryListsInViewers)('*MinimalMorphic-menu parameters' defaultWorldColor menuBorderColor menuBorderWidth menuColor menuLineColor menuSelectionColor menuTitleBorderColor menuTitleBorderWidth menuTitleColor restoreDefaultMenuParameters)('*MinimalMorphic-misc' addModelItemsToWindowMenu: balloonHelpDelayTime browseThemes offerThemesMenu setArrowheads themeChoiceButtonOfColor:font:)('*MinimalMorphic-paintbox' useFormsInPaintBox:)('*MinimalMorphic-parameters' annotationEditingWindow borderColorWhenRunning editAnnotations expungeParameter: initializeParameters inspectParameters parameterAt:default:)('*MinimalMorphic-personalization' disableProgrammerFacilities enableProgrammerFacilities letUserPersonalizeMenu loadPreferencesFrom: personalizeUserMenu: restorePreferencesFromDisk storePreferencesIn: storePreferencesToDisk)('*MinimalMorphic-preferences panel' categoryNames initialExtent inspectPreferences listOfCategories)('*MinimalMorphic-reacting to change' annotationPanesChanged eToyFriendlyChanged infiniteUndoChanged mouseOverHalosChanged optionalButtonsChanged roundedWindowCornersChanged setNotificationParametersForStandardPreferences smartUpdatingChanged)('*MinimalMorphic-scrollbar parameters' fontFactor)('*MinimalMorphic-standard queries' alternateHandlesLook bigDisplay cmdGesturesEnabled defaultFileOutFormatMacRoman fenceSoundEnabled: generalizedYellowButtonMenu keepTickingWhilePainting maintainHalos packageLoaderWindowColor preferencesPanelWindowColor purgeUndoOnQuit readOnlyMode showAdvancedNavigatorButtons testRunnerWindowColor tinyDisplay useSmartLabels useVectorVocabulary visualExplorer)('*MinimalMorphic-text highlighting' caretWidth caretWidth: chooseInsertionPointColor chooseKeyboardFocusColor chooseTextHighlightColor initializeTextHighlightingParameters)('*MinimalMorphic-themes' outOfTheBox personal)('*MinimalMorphic-themes - small-land' smallLandPreferences)('*MinimalMorphic-window colors' checkForWindowColors darkenStandardWindowPreferences installBrightWindowColors installPastelWindowColors installUniformWindowColors installWindowColorsVia: lightenStandardWindowPreferences setWindowColorFor:to: windowColorFor: windowColorHelp windowColorPreferenceForClassNamed: windowColorTable windowSpecificationPanel)('*eToys-customevents-preferences' allowEtoyUserCustomEvents)('accessing' dictionaryOfPreferences dictionaryOfPreferences:)('add preferences' addNumericPreference:category:default:balloonHelp: addPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector:viewRegistry: addPreference:category:default:balloonHelp: addTextPreference:category:default:balloonHelp:)('class initialization' initialize registerInFlapsRegistry)('factored pref panel' categoriesContainingPreference:)('fonts' chooseFlapsFont setFlapsFontTo:)('get/set' disable: doesNotUnderstand: enableOrDisable:asPer: enableProjectNavigator enable: navigatorShowingString setPreference:toValue: togglePreference: valueOfFlag: valueOfFlag:ifAbsent: valueOfPreference: valueOfPreference:ifAbsent:)('initialization' chooseInitialSettings compileAccessMethodForPreference: initializeDictionaryOfPreferences localeChanged removeObsolete removePreference: setPreferencesFrom:)('misc' defaultValueTableForCurrentRelease giveHelpWithPreferences installTheme: menuColorString okayToChangeProjectLocalnessOf: roundedCornersString setFlag:toValue:during: soundEnablingString staggerPolicyString toggleMenuColorPolicy toggleRoundedCorners toggleSoundEnabling toggleWindowPolicy wantsChangeSetLogging)('parameters' acceptAnnotationsFrom: annotationInfo defaultAnnotationRequests defaultAnnotationRequests: defaultAuthorName defaultPaintingExtent desktopColor desktopColor: maxBalloonHelpLineLength parameterAt: parameterAt:ifAbsentPut: parameterAt:ifAbsent: scrollBarColor scrollBarWidth setDefaultAnnotationInfo setParameter:to:)('personalization' compileHardCodedPref:enable: restorePersonalPreferences savePersonalPreferences)('preference-object access' allPreferenceObjects preferenceAt: preferenceAt:ifAbsent:)('preferences panel' initializePreferencePanel:in: openFactoredPanel openFactoredPanelWithWidth: openNewPreferencesPanel openPreferencesControlPanel openPreferencesInspector preferenceObjectsInCategory: preferencesControlPanel)('reacting to change' classicTilesSettingToggled displaySizeChanged largeTilesSettingToggled noviceModeSettingChanged sharedFlapsSettingChanged showProjectNavigatorChanged universalTilesSettingToggled vectorVocabularySettingChanged)('standard queries' Curvier abbreviatedBrowserButtons alphabeticalProjectMenu alternativeBrowseIt alternativeButtonsInScrollBars alternativeWindowBoxesLook alwaysHideHScrollbar alwaysShowConnectionVocabulary alwaysShowHScrollbar alwaysShowVScrollbar annotationPanes areaFillsAreTolerant areaFillsAreVeryTolerant autoIndent automaticFlapLayout automaticKeyGeneration automaticPlatformSettings automaticViewerPlacement balloonHelpEnabled balloonHelpInMessageLists batchPenTrails biggerHandles browserShowsPackagePane browseWithDragNDrop browseWithPrettyPrint browserWindowColor canRecordWhilePlaying capitalizedReferences caseSensitiveFinds cautionBeforeClosing changeListWindowColor changeSetVersionNumbers changeSorterWindowColor checkForSlips checkForUnsavedProjects classCommentVersionsBrowserWindowColor classicNavigatorEnabled clickOnLabelToEdit cmdDotEnabled collapseWindowsInPlace colorWhenPrettyPrinting compactViewerFlaps compressFlashImages confirmFirstUseOfStyle conversionMethodsAtFileOut cpuWatcherEnabled debugHaloHandle debugLogTimestamp debugPrintSpaceLog debugShowDamage debuggerWindowColor decorateBrowserButtons defaultWindowColor diffsInChangeList diffsWithPrettyPrint dismissAllOnOptionClose dragNDropWithAnimation dropProducesWatcher dualChangeSorterWindowColor duplicateAllControlAndAltKeys duplicateControlAndAltKeys easySelection enableLocalSave eToyFriendly eToyLoginEnabled expandedPublishing extractFlashInHighestQuality extractFlashInHighQuality extraDebuggerButtons fastDragWindowForMorphic fenceEnabled fenceSoundEnabled fileContentsBrowserWindowColor fileListWindowColor fullScreenLeavesDeskMargins gradientMenu gradientScrollBars haloEnclosesFullBounds haloTheme haloTransitions higherPerformance honorDesktopCmdKeys httpProxyPort httpProxyServer ignoreStyleIfOnlyBold includeSoundControlInNavigator infiniteUndo inlineServicesInMenu instanceBrowserWindowColor lexiconWindowColor logDebuggerStackToFile magicHalos menuAppearance3d menuButtonInToolPane menuColorFromWorld menuKeyboardControl menuWithIcons messageListWindowColor messageNamesWindowColor methodFinderWindowColor modalColorPickers mouseOverForKeyboardFocus mouseOverHalos multipleTextUndo mvcProjectsAllowed navigatorOnLeftEdge noviceMode okToReinitializeFlaps oliveHandleForScriptedObjects optionalButtons packageBrowserWindowColor passwordsOnPublish personalizedWorldMenu postscriptStoredAsEPS preferenceBrowserWindowColor preserveTrash projectsSentToDisk projectViewsInWindows projectZoom promptForUpdateServer propertySheetFromHalo readDocumentAtStartup restartAlsoProceeds reverseWindowStagger roundedMenuCorners roundedWindowCorners scrollBarsNarrow scrollBarsOnRight scrollBarsWithoutMenuButton securityChecksEnabled selectiveHalos showBoundsInHalo showDeprecationWarnings showDirectionForSketches showDirectionHandles showFlapsWhenPublishing showProjectNavigator showSecurityStatus showSharedFlaps showSplitterHandles showWorldMainDockingBar signProjectFiles simpleMenus slideDismissalsToTrash smartUpdating soundQuickStart soundStopWhenDone soundsEnabled standaloneSecurityChecksEnabled startInUntrustedDirectory swapControlAndAltKeys swapMouseButtons systemWindowEmbedOK tabAmongFields thoroughSenders tileTranslucentDrag timeStampsInMenuTitles transcriptWindowColor turnOffPowerManager twentyFourHourFileStamps typeCheckingInTileScripting uniqueNamesInHalos uniTilesClassic universalTiles unlimitedPaintArea updateFromServerAtStartup updateSavesFile upgradeIsMerge useButtonProprtiesToFire useFormsInPaintBox useLocale useOnlyServicesInMenu useServicesInBrowserButtonBar useUndo versionsBrowserWindowColor viewersInFlaps warnAboutInsecureContent warnIfNoChangesFile warnIfNoSourcesFile wordStyleCursorMovement workspaceWindowColor)('text highlighting' insertionPointColor insertionPointColor: keyboardFocusColor keyboardFocusColor: textHighlightColor textHighlightColor:)('themes' smallLand)('themes - small-land' smallLandBigFonts smallLandFonts smallLandSmallFonts smallLandTinyFonts)('window colors' installMissingWindowColors)!!Preferences reorganize!('*MinimalMorphic-look in class' seeClassSide)!!PreferenceBrowser class reorganize!('*services-base' openForServices)('class initialization' initialize registerInFlaps registerInOpenMenu registerWindowColor unload unregisterFromFlaps unregisterFromOpenMenu)('instance creation' open prototypicalToolWindow)('window color' windowColorSpecification)!!PreferenceBrowser reorganize!('*services-base' initializeForServices)('accessing' allCategorySelected allPreferences categoryList lastExecutedSearch lastExecutedSearch: nonSpecialCategorySelected preferences preferencesInCategory: searchFieldLegend searchPattern searchPattern: searchResults searchResultsCategorySelected selectFirstPreferenceOrNil selectSearchResultsCategory selectedCategory selectedCategory: selectedCategoryIndex selectedCategoryIndex: selectedCategoryPreferences selectedPreference selectedPreference: selectedPreferenceHelpText selectedPreferenceIndex selectedPreferenceIndex:)('buttons callbacks' searchSelected)('find' findCategoryFromPreference:)('initialize-release' initialize)('preferences search' defaultSelected helpSelected helpText loadFromDiskSelected loadSelected saveSelected saveToDiskSelected searchPreferencesFor: themeSelected)('stepping' stepAt:in: wantsStepsIn:)('user interface' allCategoryLabel initialExtent searchResultsCategoryLabel windowTitle)!!Preference reorganize!('*MinimalMorphic-user interface' viewRegistry:)('*MinimalMorphic-value' defaultValue:)('change notification' changeInformee:changeSelector: notifyInformeeOfChange)('debugging' printOn:)('initialization' categoryList: name:defaultValue:helpString:localToProject:categoryList:changeInformee:changeSelector:viewRegistry:)('local to project' isProjectLocalString localToProject toggleProjectLocalness)('menu' categoryList copyName helpString name)('testing' isObsolete)('user interface' representativeButtonWithColor:inPanel: viewClassForPanel: viewForPanel: viewRegistry)('value' defaultValue preferenceValue preferenceValue: rawValue: restoreDefaultValue togglePreferenceValue)!!PowerManagement class reorganize!('*MinimalMorphicInitialization' initializeClass)('computing' itsyVoltage)('power management' disablePowerManager disablePowerManager: enablePowerManager)('startup logic' deinstall startUp)!!PopUpMenu class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' alignment alignment: leftFlush setMenuFontTo:)('dialogs' confirm: confirm:orCancel: confirm:trueChoice:falseChoice: inform: notify:)('instance creation' labelArray: labelArray:lines: labels: labels:lines: withCaption:chooseFrom:)!!PopUpMenu reorganize!('accessing' center frameHeight labelString lineArray nItems startUpLeftFlush)('basic control sequence' controlActivity readKeyboard startUp startUpCenteredWithCaption: startUpSegmented:withCaption:at: startUpSegmented:withCaption:at:allowKeyboard: startUpWithCaption: startUpWithCaption:at: startUpWithCaption:at:allowKeyboard: startUpWithCaption:icon: startUpWithCaption:icon:at: startUpWithCaption:icon:at:allowKeyboard: startUpWithoutKeyboard)('displaying' displayAt:withCaption:during:)('marker adjustment' manageMarker markerOff markerOn: markerTop: scrollIntoView:)('selecting' selection setSelection:)('private' computeForm computeLabelParagraph labels:font:lines: menuForm rescan)!!BalloonMorph class reorganize!('instance creation' string:for: string:for:corner:)('utility' balloonColor balloonFont chooseBalloonFont setBalloonColorTo: setBalloonFontTo:)('private' getBestLocation:for:corner: getTextMorph:for: getVertices:)!!BalloonMorph reorganize!('MorphicExtras-classification' isBalloonHelp)('WiW support' morphicLayerNumber)('accessing' balloonOwner)('initialization' defaultBorderColor defaultBorderWidth defaultColor initialize popUpFor:hand: popUpForHand:)('menus' adjustedCenter)('stepping and presenter' step)('testing' stepTime)('private' setTarget:)!!PolygonMorph reorganize!('MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)('MorphicExtras-geometry eToy' scale:)('access' borderColor: isClosed isCurve isOpen makeOpenOrClosed midVertices openOrClosePhrase smoothOrSegmentedPhrase vertices)('accessing' borderWidth: couldHaveRoundedCorners)('attachments' boundsSignatureHash defaultAttachmentPointSpecs endShapeColor: endShapeWidth: firstVertex lastVertex midpoint nudgeForLabel: totalLength)('caching' loadCachedState releaseCachedState)('dashes' borderDashOffset dashedBorder dashedBorder: removeVertex: vertexAt:)('debug and other' installModelIn: rotateTestFlip:)('drawing' areasRemainingToFill: drawArrowOn:at:from: drawArrowsOn: drawBorderOn: drawBorderOn:usingEnds: drawClippedBorderOn:usingEnds: drawDashedBorderOn: drawDashedBorderOn:usingEnds: drawOn: drawOnFormCanvas:)('dropping/grabbing' justDroppedInto:event:)('eToys-geometry eToy' heading:)('editing' addHandles clickVertex:event:fromHandle: deleteVertexAt: dragVertex:event:fromHandle: dragVertex:fromHandle:vertIndex: dropVertex:event:fromHandle: dropVertex:fromHandle:vertIndex: handleColorAt: insertVertexAt:put: newVertex:event:fromHandle: newVertex:fromHandle:afterVert: updateHandles verticesAt:put:)('event handling' handlesMouseDown: mouseDown:)('geometry' arrowsContainPoint: closestPointTo: closestSegmentTo: extent: flipHAroundX: flipVAroundY: intersectionWithLineSegmentFromCenterTo: intersectionsWith: intersects: isBordered lineBorderColor lineBorderColor: lineBorderWidth lineBorderWidth: lineColor lineColor: lineWidth lineWidth: merge: mergeDropThird:in:from: nextDuplicateVertexIndex reduceVertices straighten transformedBy:)('geometry eToy' referencePosition rotationCenter rotationCenter:)('geometry testing' containsPoint:)('halo control' rotationDegrees:)('initialization' beSmoothCurve beStraightSegments defaultBorderColor defaultColor initialize vertices:color:borderWidth:borderColor:)('menu' addCustomMenuItems:hand: addPolyArrowMenuItems:hand: addPolyLIneCurveMenuItems:hand: addPolyShapingMenuItems:hand: arrowLength: arrowSpec: arrows customizeArrows: handlesShowingPhrase makeBackArrow makeBothArrows makeClosed makeForwardArrow makeNoArrows makeOpen quickFill: removeHandles setRotationCenterFrom: showOrHideHandles showingHandles specifyDashedLine standardArrows toggleHandles toggleSmoothing unrotatedLength unrotatedLength: unrotatedWidth unrotatedWidth:)('objects from disk' convertToCurrentVersion:refStream:)('rotate scale and flex' addFlexShellIfNecessary rotationDegrees)('rounding' cornerStyle:)('shaping' diamondOval rectOval)('smoothing' coefficients computeNextToEndPoints derivs:first:second:third: lineSegmentsDo: nextToFirstPoint nextToLastPoint slopes: straightLineSegmentsDo:)('stepping and presenter' step)('testing' hasArrows isCurvier isCurvy isLineMorph stepTime wantsSteps)('visual properties' canHaveFillStyles fillStyle fillStyle:)('private' arrowBoundsAt:from: arrowForms borderForm computeArrowFormAt:from: computeBounds curveBounds filledForm getVertices includesHandle: lineSegments privateMoveBy: setVertices: transformVerticesFrom:to:)!!PointerFinder reorganize!('application' buildList follow:from: followObject: goal: initialize isLiteral search update)('morphic ui' arrowKey:from: initialExtent inspectObject menu:shifted: open perform:orSendTo: pointerList pointerListIndex pointerListIndex: searchAgain)('self evaluating' isSelfEvaluating)!!Point class reorganize!('*MinimalMorphic-instance creation' fromUserWithCursor:)('instance creation' fromUser r:degrees: x:y:)!!Point reorganize!('*MinimalMorphic-geometry' isInsideCircle:with:with: to:intersects:to:)('*MinimalMorphic-point functions' insideTriangle:with:with: squaredDistanceTo:)('*MinimalMorphic-private' bitShiftPoint:)('*Morphic-Truncation and Roundoff' ceiling floor isIntegerPoint roundDownTo: roundUpTo:)('*Morphic-extent functions' guarded scaleTo:)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' x y)('arithmetic' * + - / // \\ abs reciprocal)('comparing' < <= = > >= hash hashMappedBy: max: min: min:max:)('converting' adaptToCollection:andSend: adaptToNumber:andSend: adaptToString:andSend: asFloatPoint asIntegerPoint asNonFractionalPoint asPoint corner: extent: isPoint rect:)('copying' deepCopy veryDeepCopyWith:)('geometry' sideOf: to:sideOf: triangleArea:with:)('interpolating' interpolateTo:at:)('point functions' bearingToPoint: crossProduct: dist: dotProduct: eightNeighbors flipBy:centerAt: fourNeighbors grid: nearestPointAlongLineFrom:to: nearestPointOnLineFrom:to: normal normalized octantOf: onLineFrom:to: onLineFrom:to:within: quadrantOf: rotateBy:centerAt: sortsBefore: transposed)('polar coordinates' degrees r theta)('printing' basicType printOn: storeOn:)('self evaluating' isSelfEvaluating)('testing' isZero)('transforming' adhereTo: negated rotateBy:about: scaleBy: scaleFrom:to: translateBy:)('truncation and round off' rounded roundTo: truncateTo: truncated)('private' setR:degrees: setX:setY:)!!PluggableTest reorganize!('artist pane' artist artist: artistKeystroke: artistList artistName)('initialization' initialize)('menu commands' earlyCmd flashCmd grungeCmd perform:orSendTo: reggaeCmd)('music type pane' musicType musicType: musicTypeKeystroke: musicTypeList musicTypeListTitle musicTypeMenu: musicTypeName)!!PluggableTabButtonMorph reorganize!('access' active active: innerExtent: model model: outerGap textSelector textSelector:)('actions' toggle)('drawing' drawOn: drawSubMorphOn: drawTabOn:)('initialization' initialize)('precalculations' calculateArcLengths)('stepping' step stepTime wantsSteps)('updating' update:)('private - access' arcLengths arcLengths: cornerRadius subMorph subMorph: topInactiveGap)!!PluggableTabBarMorph reorganize!('access' addTab:withAction: color: target:)('actions' handlesMouseDown: layoutChanged mouseDown: performActiveTabAction)('drawing' drawOn:)('private - access' activeTab activeTab: tabs target)!!NullCanvas reorganize!('accessing' clipRect extent form origin)('copying' copyClipRect:)('drawing-support' clipBy:during: transformBy:clippingTo:during:smoothing: translateBy:during:)!!ClippingCanvas reorganize!('accessing' clipRect contentsOfArea:into: form shadowColor)('initialization' canvas:clipRect:)('testing' isBalloonCanvas isShadowDrawing)('private' apply:)!!CachingCanvas reorganize!('accessing' contentsOfArea:into: form)('canvas methods' allocateForm: showAt:invalidRects:)('initialization' mainCanvas:)('private' apply:)!!PluggableCanvas reorganize!('accessing' clipRect contentsOfArea:into: extent origin shadowColor:)('canvas methods' balloonFillOval:fillStyle:borderWidth:borderColor: balloonFillRectangle:fillStyle: infiniteFillRectangle:fillStyle: showAt:invalidRects:)('drawing' line:to:brushForm: line:to:width:color: paragraph:bounds:color: render:)('drawing-general' roundCornersOf:in:during:)('drawing-images' paintImage:at: paintImage:at:sourceRect: stencil:at:sourceRect:color:)('drawing-ovals' fillOval:color:borderWidth:borderColor: fillOval:fillStyle:borderWidth:borderColor:)('drawing-polygons' drawPolygon:color:borderWidth:borderColor:)('drawing-rectangles' fillRectangle:fillStyle: frameAndFillRectangle:fillColor:borderWidth:borderColor:)('drawing-support' clipBy:during: transformBy:clippingTo:during:smoothing: translateBy:during:)('drawing-text' drawString:from:to:in:font:color:)('initialization' flush)('other' flushDisplay forceToScreen: translateBy:clippingTo:during:)('private' apply: image:at:sourceRect:rule:)!!PluggableButtonController reorganize!('basic control sequence' controlInitialize controlTerminate)('button activity' yellowButtonActivity)('control defaults' controlActivity isControlActive isControlWanted)!!PluckedSound reorganize!('accessing' duration duration:)('copying' copy copyRing)('initialization' setPitch:dur:loudness:)('sound generation' mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining stopAfterMSecs:)!!PinSpec reorganize!('accessing' defaultValue isInput isInputOnly isInputOutput isOutput isOutputOnly localReadSelector localWriteSelector modelReadSelector modelReadSelector:modelWriteSelector: modelWriteSelector pinLoc pinLoc: pinName)('initialization' pinName:direction:localReadSelector:localWriteSelector:modelReadSelector:modelWriteSelector:defaultValue:pinLoc:)('variables' hasVariable variableName)!!PinMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('new-morph participation' includeInNewMorphMenu)!!PinMorph reorganize!('accessing' pinSpec)('event handling' handlesMouseDown: mouseDown: mouseMove:)('geometry' placeFromSpec position: updateImage wiringEndPoint)('initialization' component:pinSpec: initialize)('submorphs-add/remove' delete)('variables' addModelVariable hasVariable mergeVariableWith: removeModelVariable removeVariableAccess shareVariableOf:)('wires' addWire: canDockWith: connectedPins isIsolated removeWire: startWiring: unwire wireTo:)!!PianoRollNoteMorph reorganize!('accessing' indexInTrack trackIndex)('drawing' drawOn:)('editing' editPitch: gridToNextQuarter gridToPrevQuarter)('event handling' handlesMouseDown: mouseDown: mouseMove: mouseUp:)('initialization' trackIndex:indexInTrack:)('layout' fullBounds)('menu' invokeNoteMenu:)('note playing' noteInScore noteOfDuration: playSound playSound: soundOfDuration:)('selecting' deselect select selectFrom: selectNotes: selected)!!PenPointRecorder reorganize!('accessing' points)('line drawing' drawFrom:to:)!!Pen class reorganize!('examples' example)('instance creation' new newOnForm:)('tablet drawing examples' feltTip:cellSize: inkBrush simplePressurePen tabletScaleFactor testMouseTracking testTabletTracking)!!Pen reorganize!('accessing' direction location)('geometric designs' dragon: filberts:side: hilbert:side: hilberts: mandala: spiral:angle: web)('initialize-release' defaultNib: roundNib: squareNib:)('operations' arrowHead arrowHeadForArrowSpec: arrowHeadFrom:to:arrowSpec: arrowHeadFrom:to:forPlayer: color: down fill:color: go: goto: home north place: print:withFont: putDotOfDiameter:at: turn: up)('private' location:direction:penDown: sourceForm:)!!Path reorganize!('accessing' at: at:put: first firstPoint firstPoint: form form: last offset secondPoint secondPoint: size thirdPoint thirdPoint:)('adding' add:)('display box access' computeBoundingBox)('displaying' displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:rule:fillColor:)('enumerating' collect: select:)('removing' removeAllSuchThat:)('testing' isEmpty)('transforming' scaleBy: translateBy:)('private' initializeCollectionOfPoints initializeCollectionOfPoints:)!!PasteUpMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('eToys-scripting' additionsToViewerCategoryInput)('printing' defaultNameStemForInstances)('project' MinCycleLapse: disableDeferredUpdates disableDeferredUpdates: newWorldForProject:)('scripting' authoringPrototype)('system startup' shutDown startUp)!!ComponentLayout reorganize!('Tools' inspectModelInMorphic)('initialization' initialize)('layout' acceptDroppingMorph:event:)('menus' addCustomMenuItems:hand:)('model' createCustomModel)('submorphs-accessing' allKnownNames)!!PasteUpMorph reorganize!('*services-base' openWorldMenu requestor topRequestor worldMenu)('39Deprecated' bringFlapTabsToFront)('MorphicExtras-flaps' deleteAllFlapArtifacts)('MorphicExtras-misc' roundUpStrays)('Nebraska' hasRemoteServer releaseRemoteServer remoteServer remoteServer:)('Tools' defaultDesktopCommandKeyTriplets)('WiW support' addMorphInLayer: morphicLayerNumber restartWorldCycleWithEvent: shouldGetStepsFrom: validateMouseEvent:)('accessing' modalWindow: modelOrNil presenter removeModalWindow useRoundedCorners)('alarms-scheduler' addAlarm:withArguments:for:at: removeAlarm:for:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('classification' isPlayfieldLike isWorldMorph)('copying' veryDeepCopyWith:)('cursor' cursorWrapped: numberAtCursor rectifyCursor selectedRect)('display' gradientFillColor: setGradientColor:)('drawing' drawOn:)('dropping/grabbing' acceptDroppingMorph:event: automaticPhraseExpansion dropEnabled justDroppedInto:event: morphToDropFrom: originAtCenter positionNear:forExtent:adjustmentSuggestion: repelsMorph:event: wantsDroppedMorph:event:)('e-toy support' automaticViewing cursor cursor: fenceEnabled isCandidateForAutomaticViewing referencePlayfield)('eToys-customevents-scripting' addUserCustomEventNamed:help: removeUserCustomEventNamed: userCustomEventNames userCustomEventsRegistry)('eToys-e-toy support' lastKeystroke lastKeystroke:)('event handling' dropFiles: handlesKeyboard: handlesMouseDown: keyStroke: morphToGrab: mouseDown: mouseUp: wantsDropFiles: wantsEasySelection wantsKeyboardFocusFor:)('events-processing' processEvent:using:)('flaps' bringTopmostsToFront flapTabs offsetForAccommodating:onEdge: releaseViewers)('geometry' extent: gridPoint: position:)('geometry testing' fullContainsPoint:)('gridding' gridModulus gridModulus: gridOrigin gridOrigin: gridSpec gridSpecPut: gridVisible gridVisibleOnOff gridVisibleString griddingOn griddingOnOff griddingString setGridSpec)('halos and balloon help' defersHaloOnClickTo: wantsDirectionHandles wantsHaloFor: wantsHaloFromClick)('initialization' becomeActiveDuring: defaultBorderColor defaultBorderWidth defaultColor initialize newResourceLoaded)('interaction loop' doOneCycleNow)('layout' addCenteredAtBottom:offset: convertAlignment laySubpartsOutInOneRow)('macpal' currentVocabulary)('menu & halo' addCustomMenuItems:hand: addPenMenuItems:hand: addScalingMenuItems:hand: addWorldHaloMenuItemsTo:hand: addWorldToggleItemsToHaloMenu: autoExpansionString autoLineLayoutString autoViewingString batchPenTrailsString currentlyUsingVectorVocabulary defineApplicationView defineFactoryView deleteBalloonTarget: fenceEnabledString indicateCursorString isOpenForDragNDropString isPartsBinString mouseOverHalosString originAtCenterString putUpPenTrailsSubmenu reformulateUpdatingMenus showApplicationView showExpandedView showFactoryView showFullView showReducedView showThumbnailString showWorldMainDockingBarString transformToShow:)('misc' allScriptors alwaysShowThumbnail cartesianOrigin heightForThumbnails innocuousName maxHeightToAvoidThumbnailing maximumThumbnailWidth mouseX mouseY nameForCopyIfAlreadyNamed: padding: prepareToBeSaved stepAll unhideHiddenObjects)('model' createCustomModel model setModel:)('name' unusedMorphNameLike:)('objects from disk' convertToCurrentVersion:refStream: fixUponLoad:seg: saveOnFile)('options' autoLineLayout autoLineLayout: automaticViewing: batchPenTrails batchPenTrails: becomeLikeAHolder behaveLikeAHolderString behaveLikeHolder behaveLikeHolder: behavingLikeAHolder fenceEnabled: indicateCursor indicateCursor: isPartsBin: resizeToFit resizeToFitString setPartsBinStatusTo: toggleAutoLineLayout toggleAutomaticPhraseExpansion toggleAutomaticViewing toggleBatchPenTrails toggleBehaveLikeAHolder toggleFenceEnabled toggleIndicateCursor toggleIsPartsBin toggleMouseOverHalos toggleOriginAtCenter toggleResizeToFit wantsMouseOverHalos wantsMouseOverHalos:)('painting' backgroundForm backgroundSketch deleteBackgroundPainting drawSubmorphsOn: paintingBoundsAround: prepareToPaint prepareToPaint: reasonablePaintingExtent)('parts bin' initializeToStandAlone isPartsBin residesInPartsBin)('pen' addImageToPenTrailsFor: clearTurtleTrails createOrResizeTrailsForm liftAllPens lowerAllPens noteNewLocation:forPlayer: trailMorph)('printing' printOn:)('project' project storeProjectsAsSegments)('project state' canvas firstHand hands handsDo: handsReverseDo: isStepping: isStepping:selector: listOfSteppingMorphs stepListSize stepListSummary steppingMorphsNotInWorld viewBox viewBox:)('scripting' adaptedToWorld: currentVocabularyFor: elementCount getCharacters)('stepping' cleanseStepList runLocalStepMethods runStepMethods startStepping: startStepping:at:selector:arguments:stepTime: stopStepping: stopStepping:selector:)('stepping and presenter' step)('structure' activeHand world)('submorphs-accessing' allMorphsDo: morphsInFrontOf:overlapping:do:)('submorphs-add/remove' addAllMorphs: addMorphFront:)('testing' isEasySelecting stepTime)('thumbnail' icon)('undo' clearCommandHistory commandHistory onceAgainDismiss: reintroduceIntoWorld:)('update cycle' startBackgroundProcess)('user interface' modelWakeUp)('viewer' defaultNameStemForInstances)('viewing' restoreBoundsOfSubmorphs saveBoundsOfSubmorphs showingListView sortSubmorphsBy: viewByIcon viewNonOverlapping viewingByIconString viewingByNameString viewingBySizeString viewingNonOverlappingString viewingNormally)('visual properties' canHaveFillStyles)('world menu' addUndoItemsTo: bringWindowsFullOnscreen browseAllScriptsTextually buildWorldMenu: closeUnchangedWindows collapseAll collapseAllWindows collapseNonWindows commandKeySelectors connectRemoteUser connectRemoteUserWithName:picture:andIPAddress: delayedInvokeWorldMenu: deleteNonWindows disconnectAllRemoteUsers disconnectRemoteUser dispatchCommandKeyInWorld:event: drawingClass expandAll extractScreenRegion:andPutSketchInHand: findAChangeSorter: findAFileList: findAMessageNamesWindow: findATranscript: findAWindowSatisfying:orMakeOneUsing: findDirtyBrowsers: findDirtyWindows: findWindow: getPublicIP getWorldMenu: grabDrawingFromScreen: grabFloodFromScreen: grabLassoFromScreen: grabRubberBandFromScreen: initializeDesktopCommandKeySelectors invokeWorldMenu: keyboardNavigationHandler keyboardNavigationHandler: keystrokeInWorld: openRecentSubmissionsBrowser: putUpNewMorphMenu putUpWorldMenu: putUpWorldMenuFromEscapeKey reportLocalAddress reportPublicIP respondToCommand:bySending:to: toggleClassicNavigatorIfAppropriate undoOrRedoCommand yellowButtonClickOnDesktopWithEvent:)('world state' abandonAllHalos activeHand: addHand: addMorph:centeredNear: addMorphsAndModel: allNonFlapRelatedSubmorphs assureNotPaintingElse: assureNotPaintingEvent: assuredCanvas beWorldForProject: checkCurrentHandForObjectToPaste checkCurrentHandForObjectToPaste2 chooseClickTarget colorAt:belowMorph: deEmphasizeViewMVC: deleteAllHalos displayWorld displayWorldAsTwoTone displayWorldNonIncrementally displayWorldSafely doOneCycle doOneCycleInBackground doOneSubCycle dragThroughOnDesktop: embeddedProjectDisplayMode endDrawing: exit flashRects:color: fullRepaintNeeded goBack haloMorphs handleFatalDrawingError: initForProject: install installAsActiveSubprojectIn:at:titled: installAsActiveSubprojectIn:titled: jumpToProject nextPage open openWithTitle:cautionOnClose: optimumExtentFromAuthor paintArea paintAreaFor: paintBox paintBoxOrNil patchAt:without:andNothingAbove: pauseEventRecorder previousPage privateOuterDisplayWorld removeHand: repairEmbeddedWorlds restoreDisplay restoreMainDockingBarDisplay restoreMorphicDisplay saveAsWorld sketchEditorOrNil sleep someHalo specialNameInModelFor: standardPlayerHit standardSystemController startSteppingSubmorphsOf: triggerClosingScripts)('private' privateFullMoveBy: privateMoveBy: privateRemoveMorph:)!!MethodNode reorganize!('*MinimalMorphic-accessing' body)('*eToys-tiles' asMorphicSyntaxIn: asMorphicSyntaxUsing:)('code generation' encoder generate generateWith:using: generate: generate:ifQuick: parserClass properties selector sourceMap)('initialize-release' block selector: selector:arguments:precedence:temporaries:block:encoder:primitive:properties: sourceText:)('printing' decompileString decompileText methodClass printOn: printPrimitiveOn: sourceText tempNames)('tiles' rawSourceRanges)!!MessageNode reorganize!('*MinimalMorphic-printing' printParenReceiver:on:indent:)('*MinimalMorphic-testing' isMessage)('*eToys-tiles' asMorphicSyntaxIn:)('cascading' cascadeReceiver)('code generation' emitCase:on:value: emitForEffect:on: emitForValue:on: emitIf:on:value: emitIfNil:on:value: emitToDo:on:value: emitWhile:on:value: sizeCase:value: sizeForEffect: sizeForValue: sizeIf:value: sizeIfNil:value: sizeToDo:value: sizeWhile:value:)('equation translation' arguments arguments: eval receiver receiver: selector)('initialize-release' receiver:selector:arguments:precedence: receiver:selector:arguments:precedence:from: receiver:selector:arguments:precedence:from:sourceRange: selector:)('macro transformations' noteSpecialSelector: toDoFromWhileWithInit: transform: transformAnd: transformBoolean: transformIfFalse: transformIfFalseIfTrue: transformIfNil: transformIfNilIfNotNil: transformIfNotNilIfNil: transformIfTrue: transformIfTrueIfFalse: transformOr: transformToDo: transformWhile:)('printing' asMorphicCaseOn:indent: macroPrinter precedence printCaseOn:indent: printIfNil:indent: printIfNilNotNil:indent: printIfOn:indent: printKeywords:arguments:on:indent: printKeywords:arguments:on:indent:prefix: printOn:indent: printOn:indent:precedence: printReceiver:on:indent: printToDoOn:indent: printWhileOn:indent: test)('testing' canCascade isComplex isMessage:receiver:arguments: isReturningIf toDoIncrement: toDoLimit:)('tiles' morphFromKeywords:arguments:on:indent:)('private' checkBlock:as:from: ifNilReceiver pvtCheckForPvtSelector: receiver:arguments:precedence: transformCase:)!!LiteralNode reorganize!('*MinimalMorphic-*eToys-tiles' explanation)('*eToys-tiles' asMorphicSyntaxIn:)('code generation' emitForValue:on:)('evaluation' eval)('printing' printOn:indent:)('testing' isConstantNumber isLiteral isSpecialConstant literalValue)!!Encoder reorganize!('*MinimalMorphic-encoding' encodeVariable:ifUnknown:)('*MinimalMorphic-initialize-release' nTemps:literals:class:)('*MinimalMorphic-private' possibleNamesFor:)('*MinimalMorphic-results' tempsAndBlockArgs)('*MinimalMorphic-source mapping' globalSourceRanges)('encoding' cantStoreInto: encodeLiteral: encodeSelector: encodeVariable: encodeVariable:sourceRange:ifUnknown: litIndex: sharableLitIndex: undeclared:)('error handling' notify: notify:at: requestor:)('initialize-release' fillDict:with:mapping:to: init:context:notifying: initScopeAndLiteralTables noteSuper release temps:literals:class:)('results' allLiterals literals tempNames tempNodes unusedTempNames)('source mapping' noteSourceRange:forNode: rawSourceRanges sourceMap)('temps' autoBind: bindAndJuggle: bindArg: bindBlockTemp: bindTemp: bindTemp:in: maxTemp newTemp:)('private' classEncoding global:name: lookupInPools:ifFound: name:key:class:type:set: possibleVariablesFor: reallyBind:)!!DecompilerConstructor reorganize!('*MinimalMorphic-constructor' codeEmptyBlock)('constructor' codeAnyLitInd: codeAnyLiteral: codeAnySelector: codeArguments:block: codeAssignTo:value: codeBlock:returns: codeBrace: codeCascade:messages: codeCascadedMessage:arguments: codeConstants codeInst: codeMessage:selector:arguments: codeMethod:block:tempVars:primitive:class: codeSelector:code: codeSuper codeTemp: codeTemp:named: codeThisContext decodeIfNilWithReceiver:selector:arguments:)('initialize-release' method:class:literals:)!!CascadeNode reorganize!('*eToys-tiles' asMorphicSyntaxIn:)('accessing' receiver)('code generation' emitForValue:on: sizeForValue:)('initialize-release' receiver:messages:)('printing' printOn:indent: printOn:indent:precedence:)!!BraceNode reorganize!('*eToys-tiles' asMorphicSyntaxIn:)('code generation' emitForValue:on: selectorForShortForm: sizeForValue:)('enumerating' casesForwardDo: casesReverseDo:)('initialize-release' elements: elements:sourceLocations: matchBraceStreamReceiver:messages: matchBraceWithReceiver:selector:arguments:)('printing' printOn:indent:)('testing' blockAssociationCheck: numElements)!!BlockNode reorganize!('*MinimalMorphic-initialize-release' arguments:statements:returns:from:sourceRange:)('*eToys-tiles' asMorphicCollectSyntaxIn: asMorphicSyntaxIn:)('accessing' arguments: block firstArgument numberOfArguments returnLast returnSelfIfNoOther temporaries:)('code generation' code emitExceptLast:on: emitForEvaluatedEffect:on: emitForEvaluatedValue:on: emitForValue:on: sizeExceptLast: sizeForEvaluatedEffect: sizeForEvaluatedValue: sizeForValue:)('equation translation' statements statements:)('initialize-release' arguments:statements:returns:from: statements:returns:)('printing' decompileString decompileText printArgumentsOn:indent: printOn:indent: printStatementsOn:indent: printTemporariesOn:indent:)('testing' canBeSpecialArgument isComplex isJust: isJustCaseError isQuick returns)!!AssignmentNode reorganize!('*MinimalMorphic-*eToys-tiles' explanation)('*eToys-tiles' asMorphicSyntaxIn:)('code generation' emitForEffect:on: emitForValue:on: sizeForEffect: sizeForValue:)('equation translation' variable)('initialize-release' toDoIncrement: value variable:value: variable:value:from: variable:value:from:sourceRange:)('printing' printOn:indent: printOn:indent:precedence:)!!ParseNode reorganize!('*MinimalMorphic-*eToys-tiles' currentValueIn: explanation)('*MinimalMorphic-printing' nodePrintOn:indent: shortPrintOn:)('*MinimalMorphic-testing' isMessage)('*eToys-tiles' addCommentToMorph: asMorphicSyntaxIn:)('code generation' emitBranchOn:dist:pop:on: emitForEffect:on: emitForReturn:on: emitJump:on: emitLong:code:on: emitShortOrLong:code:on: pc sizeBranchOn:dist: sizeForEffect: sizeForReturn: sizeJump: sizeShortOrLong:)('comment' comment comment:)('converting' asReturnNode)('encoding' encodeSelector:)('printing' printCommentOn:indent: printOn: printOn:indent: printOn:indent:precedence:)('testing' assignmentCheck:at: canBeSpecialArgument canCascade isArg isComplex isConstantNumber isDoIt isJust: isLiteral isMessage:receiver:arguments: isReturnSelf isReturningIf isSelfPseudoVariable isSpecialConstant isTemp isUndefTemp isUnusedTemp isVariableReference nowHasDef nowHasRef toDoIncrement:)('private' ifNilReceiver nextWordFrom:setCharacter: printSingleComment:on:indent:)!!ListParagraph class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' withArray:style:)('style' standardListStyle)!!Paragraph reorganize!('*MinimalMorphic-accessing' mask)('*MinimalMorphic-private' compositionRectangleDelta)('*MinimalMorphic-selecting' clickAt:for:controller: extendSelectionAt:endBlock: mouseSelect)('accessing' backgroundColor clippingRectangle clippingRectangle: compositionRectangle compositionRectangle: destinationForm fillColor fillColor: height indentationOfLineIndex:ifBlank: numberOfLines replaceFrom:to:with:displaying: rule rule: stringAtLineNumber: text:)('alignment' centered justified leftFlush rightFlush toggleAlignment)('character location' characterBlockAtPoint: characterBlockForIndex: defaultCharacterBlock)('composition' composeAll wrappingBox:clippingBox:)('converting' asForm asString asText)('display box access' boundingBox computeBoundingBox)('displaying' displayOn: displayOn:at: displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:align:with:rule:fillColor:)('indicating' flash outline)('scrolling' scrollBy: scrollBy:withSelectionFrom:to: scrollDelta scrollUncheckedBy:withSelectionFrom:to:)('selecting' caretFormForDepth: extendSelectionMark:pointBlock: hiliteRect: mouseMovedFrom:pivotBlock:showingCaret: mouseSelect: reverseFrom:to: selectionRectsFrom:to:)('utilities' clearVisibleRectangle deepCopy destinationForm: fit lines: visibleRectangle)('private' bottomAtLineIndex: compositionRectangle:text:style:offset: displayLines: displayLines:affectedRectangle: displayOn:lines: leftMarginForCompositionForLine: leftMarginForDisplayForLine:alignment: lineAt:put: lineIndexOfCharacterIndex: lineIndexOfTop: lines moveBy: rightMarginForComposition rightMarginForDisplay setWithText:style: setWithText:style:compositionRectangle:clippingRectangle: setWithText:style:compositionRectangle:clippingRectangle:foreColor:backColor: topAtLineIndex: topAtLineIndex:using:and: trimLinesTo: updateCompositionHeight withClippingRectangle:do:)!!PaintBoxMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' fixUpPrototype initializeColorChart prototype)('instance creation' new)('notification' localeChanged)!!PaintBoxMorph reorganize!('actions' action actionCursor brush:action:nib:evt: brushable clear:with:evt: colorable currentColor:evt: cursorFor:oldCursor:currentNib:color: deleteCurrentStamp: eyedropper:action:cursor:evt: getColor getNib getSpecial grabFromScreen: indicateColorUnderMouse keep:with:evt: notCurrentlyPainting pickup:action:cursor:evt: pickupForm: pickupForm:evt: plainCursor plainCursor:event: ringColor ringColorFor: scrollStamps:action:evt: setAction:evt: showColor showColorPalette: stampCursorBeCursorFor: stampDeEmphasize stampForm stampHolder stampHolder: takeColor:event: takeColorEvt:from: toggleShapes toggleStamps tool tool:action:cursor:evt: toss:with:evt: undo:with:evt:)('copying' updateReferencesUsing:)('eToys-e-toy support' isCandidateForAutomaticViewing)('initialization' addWeakDependent: beStatic createButtons fixupButtons init3 init4 initialize loadColorChooser loadCursors loadJapanesePaintBoxBitmaps loadOffForm: loadOnImage: loadPressedForm: loadPressedImage: loadoffImage: moveButtons noVeneer notifyWeakDependentsWith:)('other' addCustomMenuItems:hand: addGraphicLabels addLabels addTextualLabels colorMemory colorMemory: colorPatch focusMorph focusMorph: maxBounds offsetFromMaxBounds rotationTabForm scaleTabForm)('recent colors' fixUpColorPicker fixUpRecentColors mouseDownRecent:with: mouseStillDownRecent:with: mouseUpRecent:with: recentColor:)('user interface' mouseUpBalk:)!!PaintBoxColorPicker reorganize!('accessing' currentColor currentColor:)('drawing' drawOn: ringColor)('event handling' endColorSelection: initMouseHandlers selectColor: startColorSelection:)('initialization' beStatic initialize)!!PackageResources reorganize!('accessing' resources resourcesListIndex resourcesListIndex: thisPackage thisPackage: viewResources)('as yet unclassified' buildWith: resourcesListMenu:)('initialize-release' initialize wantsOptionalButtons)!!PackageOrganizer reorganize!('accessing' packageNames packages)('initializing' initialize)('registering' registerPackage: registerPackageNamed: unregisterPackage: unregisterPackageNamed:)('searching' noPackageFound packageNamed:ifAbsent: packageOfClass: packageOfClass:ifNone: packageOfMethod: packageOfMethod:ifNone:)!!PackageInfo class reorganize!('class initialization' initialize)('compatibility' default)('packages access' allPackages named: registerPackageName:)!!PRServerDirectory reorganize!('accessing' directories directory directoryWrapperClass downloadUrl moniker realUrl server)('file directory' createDirectory: deleteFileNamed: directoryNamed: directoryNames entries fileNames fullNameFor: getOnly:from: oldFileNamed: oldFileOrNoneNamed: on: pathName pathParts readOnlyFileNamed: rename:toBe: sleep wakeUp)('initialization' initializeServer:directories:)('path access' pathNameDelimiter slash)('squeaklets' writeProject:inFileNamed:fromDirectory:)('testing' acceptsUploads isProjectSwiki isRemoteDirectory isSearchable queryProjectsAndShow:)('private' getFullProjectContents: getLines getOnly:ofProjectContents: getPostArgsFromProject:fileNamed:fromDirectory: getPostArgsFromThingsToSearchFor: getProjectThumbnail: parseLine: parseLines: putProjectDetailsFrom:to: putSmalltalkInfoInto: urlFromServer:directories:)!!PNMReadWriter class reorganize!('image reading/writing' typicalFileExtensions)('testing' testFromSEFile: testFromString testMultiFile: testToSEFile:)!!PNMReadWriter reorganize!('accessing' origin pragma: stream: tupleType)('reading' cleanLine getTokenPbm: nextImage pbmGetLine pbmParam: r:g:b:for: readBWreverse: readData readGray readHeader readHeaderPAM readPlainBW readPlainGray readPlainRGB readRGB)('testing' understandsImageFormat)('writing' nextPutBW:reverse: nextPutGray: nextPutImage: nextPutRGB: writeHeader:)!!PNGReadWriter class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' computeSwizzleMapForDepth: createAFormFrom: debugging:)('image reading/writing' typicalFileExtensions)!!PNGReadWriter reorganize!('accessing' debugging nextImage understandsImageFormat)('chunks' processBackgroundChunk processIDATChunk processIHDRChunk processInterlaced processNextChunk processNonInterlaced processPLTEChunk processPhysicalPixelChunk processSBITChunk processTransparencyChunk)('filtering' filterAverage: filterHorizontal: filterNone: filterPaeth: filterScanline:count: filterVertical: paethPredictLeft:above:aboveLeft:)('miscellaneous' doPass: grayColorsFor:)('pixel copies' copyPixels: copyPixels:at:by: copyPixelsGray: copyPixelsGray:at:by: copyPixelsGrayAlpha: copyPixelsGrayAlpha:at:by: copyPixelsIndexed: copyPixelsIndexed:at:by: copyPixelsRGB: copyPixelsRGB:at:by: copyPixelsRGBA: copyPixelsRGBA:at:by: rgbaDecoderMapForDepth:)('writing' nextPutImage: nextPutImage:interlace:filter: updateCrc:from:to:in: writeChunk: writeFileSignature writeIDATChunkOn: writeIENDChunkOn: writeIHDRChunkOn: writePLTEChunkOn: writeSBITChunkOn: writeTRNSChunkOn: writeType3DataOn: writeType6DataOn:)!!HTTPSocket class reorganize!('*MinimalMorphic-get the page' httpGif: httpJpeg: httpShowChunk: httpShowGif: httpShowJpeg:)('*MinimalMorphic-utilities' retry:asking:ifGiveUp: showImage:named:)('*MinimalMorphicInitialization' initializeClass)('class initialization' blabEmail: initialize)('get the page' httpFileIn: httpFileInNewChangeSet: httpGet: httpGet:accept: httpGet:args:accept: httpGet:args:accept:request: httpGet:args:user:passwd: httpGetDocument: httpGetDocument:accept: httpGetDocument:args: httpGetDocument:args:accept: httpGetDocument:args:accept:request: httpGetNoError:args:accept: httpPost:args:accept: httpPost:args:user:passwd: httpPostDocument:args: httpPostDocument:args:accept: httpPostDocument:args:accept:request: httpPostMultipart:args:accept:request: httpPostToSuperSwiki:args:accept:request: httpPut:to:user:passwd: httpShowPage:)('magic numbers' defaultPort)('proxy settings' addHTTPProxyPreferences addProxyException: checkHTTPProxyPreferences fetchExternalSettingsIn: httpProxyExceptions httpProxyPort httpProxyPort: httpProxyServer httpProxyServer: proxySettingsFileName proxyTestingComment proxyUser:password: removeProxyException: stopUsingProxyServer useProxyServerNamed:port: useProxyServerNamed:port:proxyUser:password:)('utilities' argString: argStringUnencoded: expandUrl:ip:port: initHTTPSocket:ifError: initHTTPSocket:wait:ifError: shouldUseProxy: userAgentString)!!OldSimpleClientSocket class reorganize!('*MinimalMorphic-net news example' nntpTest)('*MinimalMorphic-other examples' httpTestHost:port:url:)('POP mail example' extractDateFromAndSubjectFromHeader: popTest simpleDateString:)('class initialization' initialize)('net news example' parseHeaderList: parseIntegerList: parseNTTPMsgList:)('other examples' finger: timeTest)('queries' crLf)('remote cursor example' forkingRemoteCursorSender parseSensorStateString: remoteCursorReceiver remoteCursorTest sensorStateString)!!OldSocket class reorganize!('class initialization' initialize)('examples' clientServerTestUDP clientServerTestUDP2 remoteTestClientTCP remoteTestClientTCPOpenClose1000 remoteTestClientTCPOpenClosePutGet remoteTestClientUDP remoteTestServerTCP remoteTestServerTCPOpenClose1000 remoteTestServerTCPOpenClosePutGet remoteTestServerTCPUsingAccept remoteTestServerUDP remoteTestServerUDP2 remoteTestSinkTCP timeTest timeTestUDP timeTestUDP2 timeTestUDP3)('instance creation' acceptFrom: createIfFail: new newTCP newUDP tcpCreateIfFail: udpCreateIfFail:)('network initialization' ensureNetworkConnected initializeNetwork initializeNetworkIfFail:)('registry' register: registry registryThreshold registryThreshold: unregister:)('utilities' deadServer deadServer: deadlineSecs: nameForWellKnownTCPPort: ping: pingPorts:on:timeOutSecs: pingPortsOn: standardDeadline wildcardAddress wildcardPort)!!OldSocket reorganize!('accessing' address localAddress localPort peerName port primitiveOnlySupportsOneSemaphore readSemaphore remoteAddress remotePort semaphore socketHandle writeSemaphore)('connection open/close' accept close closeAndDestroy closeAndDestroy: connectTo:port: disconnect listenOn: listenOn:backlogSize: listenOn:backlogSize:interface:)('datagrams' receiveDataInto:fromHost:port: receiveUDPDataInto: sendData:toHost:port: sendUDPData:toHost:port: setPeer:port: setPort:)('finalization' finalize)('initialize-destroy' acceptFrom: destroy initialize:)('other' getOption: getResponseNoLF setOption:value:)('primitives' primAcceptFrom:receiveBufferSize:sendBufSize:semaIndex: primAcceptFrom:receiveBufferSize:sendBufSize:semaIndex:readSemaIndex:writeSemaIndex: primSocket:connectTo:port: primSocket:getOption: primSocket:listenOn: primSocket:listenOn:backlogSize: primSocket:listenOn:backlogSize:interface: primSocket:receiveDataInto:startingAt:count: primSocket:receiveUDPDataInto:startingAt:count: primSocket:sendData:startIndex:count: primSocket:sendUDPData:toHost:port:startIndex:count: primSocket:setOption:value: primSocket:setPort: primSocketAbortConnection: primSocketCloseConnection: primSocketConnectionStatus: primSocketCreateNetwork:type:receiveBufferSize:sendBufSize:semaIndex: primSocketCreateNetwork:type:receiveBufferSize:sendBufSize:semaIndex:readSemaIndex:writeSemaIndex: primSocketDestroy: primSocketDestroyGently: primSocketError: primSocketLocalAddress: primSocketLocalPort: primSocketReceiveDataAvailable: primSocketRemoteAddress: primSocketRemotePort: primSocketSendDone:)('printing' printOn:)('queries' dataAvailable isConnected isOtherEndClosed isThisEndClosed isUnconnected isUnconnectedOrInvalid isValid isWaitingForConnection sendDone socketError statusString)('registry' register unregister)('sending-receiving' discardReceivedData getData readInto:startingAt: receiveDataInto: sendData: sendData:count: sendSomeData: sendSomeData:startIndex: sendSomeData:startIndex:count:)('waiting' waitForAcceptUntil: waitForConnectionUntil: waitForDataUntil: waitForDisconnectionUntil: waitForSendDoneUntil:)!!MethodInterface reorganize!('access' companionSetterSelector elementSymbol receiverType resultType selector typeForArgumentNumber: wantsReadoutInViewer)('attribute keywords' attributeKeywords flagAttribute: flagAttributes: isFlaggedAs: selector:type:setter:)('initialization' argumentVariables argumentVariables: conjuredUpFor:class: initialize initializeFor: initializeSetterFromEToySlotSpec: receiverType: resultType: setNotToRefresh setToRefetch)('initialize-release' releaseCachedState)('printing' printOn:)('status' defaultStatus defaultStatus:)!!ChangeSetCategory reorganize!('*MinimalMorphic-services' fileOutAllChangeSets fillAggregateChangeSet)('initialization' membershipSelector:)('miscellaneous' defaultChangeSetToShow reconstituteList)('queries' acceptsManualAdditions changeSetList hasChangeForClassName:selector:otherThanIn: includesChangeSet:)!!ElementCategory reorganize!('*MinimalMorphic-elements' placeKey:afterKey: placeKey:beforeKey:)('category name' categoryName categoryName:)('copying' copy copyFrom: copyOfElementDictionary)('elements' elementAt: elementAt:put: elementSymbol elementsInOrder fasterElementAt:put: removeElementAt:)('initialization' addCategoryItem: clear initialize)('keys' includesKey: keysInOrder)('printing' printOn:)('translation' translated)('private' initWordingAndDocumentation)!!ObjectWithDocumentation reorganize!('*MinimalMorphic-accessing' untranslatedHelpMessage untranslatedWording)('*MinimalMorphic-migration' migrateWordAndHelpMessage)('accessing' documentation documentation: helpMessage helpMessage: legacyHelpMessage wording wording:)('documentation' editDescription)('initialization' initialize)('miscellaneous' elementSymbol naturalLanguageTranslations)('private' getterSetterHelpMessage getterSetterHelpMessage: initWordingAndDocumentation properties propertyAt: propertyAt:ifAbsent: propertyAt:put:)!!ObjectViewer class reorganize!('*MinimalMorphic-instance creation' on:evaluate:wheneverChangeIn:)!!ObjectTracer class reorganize!('*MinimalMorphic-instance creation' on:)!!ObjectScanner reorganize!('*MinimalMorphic-accessing' smartRefStream)('initialize-release' clear initialize)('scanning' lookAhead: scanFrom:)('utilities' rename:toBe:)!!ObjectOut reorganize!('MorphicExtras-access' sqkPage url)('access' url: xxxReset)('basics' isInMemory xxxClass xxxClone xxxInstVarAt: xxxInstVarAt:put:)('fetch from disk' doesNotUnderstand: xxxFetch xxxSetUrl:page:)('object storage' comeFullyUpOnReload: objectForDataStream: readDataFrom:size: storeDataOn: veryDeepCopyWith:)!!ObjectExplorerWrapper reorganize!('accessing' contents hasContents icon)('as yet unclassified' canBeDragged parent parent: selector setItem:name:model: setItem:name:model:parent:)('converting' asString itemName)('monitoring' refresh)!!ObjectExplorer reorganize!('accessing' contentsSelection doItContext doItReceiver explorerFor: getList label object parentObject selector)('error handling' doesNotUnderstand:)('menus' chasePointers codePaneMenu:shifted: defsOfSelection exploreSelection explorerKey:from: genericMenu: inspectSelection objectReferencesToSelection referencesToSelection selectedClass trash trash:)('monitoring' monitor: monitorList release shouldGetStepsFrom: step stopMonitoring world)('user interface' explorerFor:withLabel: initialExtent openBrowser: openExplorerFor: openExplorerFor:withLabel:)!!Integer class reorganize!('*MinimalMorphic-compatibility' readFrom:radix:)('*MinimalMorphic-prime numbers' largePrimesUpTo: verbosePrimesUpTo:)('constants' one)('instance creation' basicNew byte1:byte2:byte3:byte4: initializedInstance new new:neg: readFrom: readFrom:base:)('prime numbers' largePrimesUpTo:do: primesUpTo: primesUpTo:do: verbosePrimesUpTo:do:)!!Integer reorganize!('*MinimalMorphic-benchmarks' tinyBenchmarks)('*MinimalMorphic-explorer' explorerContents)('*MinimalMorphic-printing' destinationBuffer: digitBuffer: printPaddedWith:to:)('*MinimalMorphic-printing-numerative' printStringLength: printStringPadded:)('*MinimalMorphic-tiles' asPrecedenceName)('*MinimalMorphic-truncation and round off' asPowerOfTwo)('*universes-model' uversionEqual: uversionLessThan:)('arithmetic' * + - / // \\\ alignedTo: crossSumBase: quo:)('benchmarks' benchFib benchmark)('bit manipulation' << >> allMask: anyBitOfMagnitudeFrom:to: anyMask: bitAnd: bitClear: bitInvert bitInvert32 bitOr: bitShift: bitShiftMagnitude: bitXor: highBit highBitOfMagnitude lowBit noMask:)('comparing' < = > hash)('converting' adaptToComplex:andSend: adaptToFraction:andSend: adaptToScaledDecimal:andSend: asCharacter asColorOfDepth: asComplex asFloat asFloatSimply asFraction asHexDigit asInteger asScaledDecimal: asYear)('enumerating' timesRepeat:)('explorer' hasContentsInExplorer)('mathematical functions' factorial gcd: lcm: raisedToInteger:modulo: raisedTo:modulo: take:)('printing' asStringWithCommas asStringWithCommasSigned asTwoCharacterString asWords isLiteral printOn:base:showRadix: printPaddedWith:to:base: printStringRadix:)('printing-numerative' byteEncode:base: printOn:base: printOn:base:length:padded: printStringBase: printStringBase:length:padded: printStringHex printStringLength:padded: printStringRoman radix: storeOn:base: storeOn:base:length:padded: storeStringBase:length:padded: storeStringHex)('system primitives' lastDigit replaceFrom:to:with:startingAt:)('testing' even isInteger isPowerOfTwo isPrime)('truncation and round off' asLargerPowerOfTwo asSmallerPowerOfTwo atRandom atRandom: ceiling floor normalize rounded truncated)('private' copyto: digitAdd: digitCompare: digitDiv:neg: digitLogic:op:length: digitLshift: digitMultiply:neg: digitRshift:bytes:lookfirst: digitSubtract: growby: growto: isProbablyPrimeWithK:andQ: print:on:prefix:length:padded: romanDigits:for:on:)!!Fraction reorganize!('arithmetic' * + - / negated reciprocal)('comparing' < = hash)('converting' adaptToComplex:andSend: adaptToInteger:andSend: adaptToScaledDecimal:andSend: asComplex asFloat asFraction isFraction)('mathematical functions' raisedToInteger: squared)('printing' printOn: printOn:base: storeOn:base:)('self evaluating' isSelfEvaluating)('truncation and round off' truncated)('private' denominator numerator reduced setNumerator:denominator:)!!Float reorganize!('*MinimalMorphic-mathematical functions' safeArcCos)('*MinimalMorphic-printing' absPrintExactlyOn:base: printPaddedWith:to:)('*MinimalMorphic-private' absPrintOn:base:digitCount:)('arithmetic' * + - / abs negated reciprocal)('comparing' < <= = > >= closeTo: hash ~=)('converting' adaptToComplex:andSend: adaptToFraction:andSend: adaptToInteger:andSend: adaptToScaledDecimal:andSend: asApproximateFraction asApproximateFractionAtOrder: asComplex asFloat asFraction asIEEE32BitWord asTrueFraction degreesToRadians isInf radiansToDegrees)('copying' deepCopy shallowCopy veryDeepCopyWith:)('mathematical functions' arcCos arcSin arcTan arcTan: cos degreeCos degreeSin exp floorLog: ln log raisedTo: reciprocalFloorLog: reciprocalLogBase2 sin sqrt tan timesTwoPower:)('printing' absByteEncode:base: absPrintOn:base: byteEncode:base: hex printOn:base:)('testing' hasContentsInExplorer isFloat isInfinite isLiteral isNaN isPowerOfTwo isZero sign)('truncation and round off' exponent fractionPart integerPart reduce rounded significand significandAsInteger truncated)!!Number reorganize!('*MinimalMorphic-*Morphic-NewCurve-testing' isNonZero)('*MinimalMorphic-*eToys-vocabulary' vocabularyDemanded)('*MinimalMorphic-converting' asB3DVector3 asFloatD asFloatE asFloatQ asScaledDecimal)('*MinimalMorphic-printing' isOrAreStringWith:)('*eToys-printing' newTileMorphRepresentative)('arithmetic' * + - / // \\ abs arg negated quo: reciprocal rem:)('comparing' closeTo:)('converting' @ adaptToCollection:andSend: adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend: adaptToPoint:andSend: adaptToScaledDecimal:andSend: adaptToString:andSend: asDuration asInteger asNumber asPoint asScaledDecimal: asSmallAngleDegrees asSmallPositiveDegrees day days degreesToRadians hour hours i milliSecond milliSeconds minute minutes nanoSecond nanoSeconds radiansToDegrees second seconds sign: week weeks)('filter streaming' byteEncode:)('intervals' to: to:by: to:by:do: to:do:)('mathematical functions' arcCos arcSin arcTan arcTan: cos degreeCos degreeSin exp floorLog: interpolateTo:at: ln log log: raisedTo: raisedToInteger: sin sqrt squared tan)('printing' defaultLabelForInspector printOn: printOn:base: printShowingDecimalPlaces: printString printStringBase: storeOn: storeOn:base: storeStringBase: stringForReadout)('testing' basicType even isDivisibleBy: isInf isInfinite isNaN isNumber isZero negative odd positive sign strictlyPositive)('truncation and round off' ceiling detentBy:atMultiplesOf:snap: floor fractionPart integerPart reduce roundTo: roundUpTo: rounded truncateTo: truncated)!!NullEncoder class reorganize!('configuring' defaultTarget filterSelector)('creation' stream stream: streamOn: streamOnFile:)('processing' process:)!!ColorPatchCanvas reorganize!('accessing' doStop doStop: foundMorph foundMorph: stopMorph stopMorph:)('drawing-general' fullDrawMorph:)('drawing-support' clipBy:during: preserveStateDuring: transformBy:clippingTo:during:smoothing: translateBy:during: translateTo:clippingTo:during:)('initialization' reset)('other' translateBy:clippingTo:during:)('private' setForm:)!!BalloonCanvas reorganize!('TODO' drawString:from:to:in:font:color: line:to:brushForm: paragraph:bounds:color:)('accessing' aaLevel aaLevel: deferred deferred: ensuredEngine)('balloon drawing' drawBezier3Shape:color:borderWidth:borderColor: drawBezierShape:color:borderWidth:borderColor: drawCompressedShape: drawGeneralBezier3Shape:color:borderWidth:borderColor: drawGeneralBezierShape:color:borderWidth:borderColor: drawGeneralPolygon:color:borderWidth:borderColor: drawOval:color:borderWidth:borderColor: drawRectangle:color:borderWidth:borderColor:)('converting' asBalloonCanvas)('copying' copy)('drawing' fillColor: fillOval:color:borderWidth:borderColor: fillRectangle:color: frameAndFillRectangle:fillColor:borderWidth:borderColor: frameAndFillRectangle:fillColor:borderWidth:topLeftColor:bottomRightColor: frameRectangle:width:color: line:to:width:color: point:color:)('drawing-ovals' fillOval:fillStyle:borderWidth:borderColor:)('drawing-polygons' drawPolygon:fillStyle: drawPolygon:fillStyle:borderWidth:borderColor:)('drawing-rectangles' fillRectangle:fillStyle:)('initialize' flush initialize resetEngine)('testing' isBalloonCanvas isVisible:)('transforming' colorTransformBy: preserveStateDuring: transformBy: transformBy:during:)('private' ifNoTransformWithIn: image:at:sourceRect:rule:)!!FormCanvas reorganize!('accessing' allocateForm: clipRect contentsOfArea:into: depth extent form origin shadowColor shadowColor:)('converting' asShadowDrawingCanvas asShadowDrawingCanvas:)('copying' copy copyClipRect: copyOffset: copyOffset:clipRect: copyOrigin:clipRect:)('drawing' fillColor: line:to:brushForm: line:to:width:color: paragraph3:bounds:color: paragraph:bounds:color: point:color: render:)('drawing-general' roundCornersOf:in:during:)('drawing-images' stencil:at:sourceRect:color: warpImage:transform:at:sourceRect:cellSize:)('drawing-ovals' balloonFillOval:fillStyle:borderWidth:borderColor: fillOval:color:borderWidth:borderColor: fillOval:fillStyle:borderWidth:borderColor:)('drawing-polygons' drawPolygon:color:borderWidth:borderColor: drawPolygon:fillStyle:borderWidth:borderColor:)('drawing-rectangles' balloonFillRectangle:fillStyle: fillRectangle:fillStyle: frameAndFillRectangle:fillColor:borderWidth:borderColor: frameAndFillRectangle:fillColor:borderWidth:topLeftColor:bottomRightColor: infiniteFillRectangle:fillStyle:)('drawing-support' clipBy:during: transformBy:clippingTo:during:smoothing: translateBy:during: translateTo:clippingTo:during:)('drawing-text' drawString:from:to:at:font:color: drawString:from:to:in:font:color:)('initialization' finish reset)('other' asBalloonCanvas flushDisplay forceToScreen: showAt: showAt:invalidRects: warpFrom:toRect:)('printing' printOn:)('testing' isShadowDrawing isVisible:)('private' image:at:sourceRect:rule: image:at:sourceRect:rule:alpha: portClass privateClipRect privatePort privateWarp:transform:at:sourceRect:cellSize: resetGrafPort setClearColor: setFillColor: setForm: setOrigin:clipRect: setPaintColor:)!!AlphaBlendingCanvas reorganize!('accessing' alpha alpha:)('initialization' on:)('private' image:at:sourceRect:rule: mapColor:)!!ColorMappingCanvas reorganize!('accessing' clipRect depth extent form origin)('drawing' line:to:width:color: paragraph:bounds:color:)('drawing-images' stencil:at:color: stencil:at:sourceRect:color:)('drawing-ovals' fillOval:color:borderWidth:borderColor:)('drawing-polygons' drawPolygon:color:borderWidth:borderColor:)('drawing-rectangles' frameAndFillRectangle:fillColor:borderWidth:borderColor: frameAndFillRectangle:fillColor:borderWidth:topLeftColor:bottomRightColor:)('drawing-support' clipBy:during: preserveStateDuring: transformBy:clippingTo:during:smoothing: translateBy:during: translateTo:clippingTo:during:)('drawing-text' drawString:from:to:in:font:color:)('initialization' flush on: reset)('other' translateBy:clippingTo:during:)('testing' isShadowDrawing)('private' image:at:sourceRect:rule: mapColor:)!!Canvas reorganize!('MorphicExtras-drawing' paragraph2:bounds:color:)('Nebraska/embeddedWorlds' transform2By:clippingTo:during:smoothing:)('accessing' clipRect contentsOfArea: contentsOfArea:into: depth extent form origin shadowColor shadowColor:)('converting' asAlphaBlendingCanvas: asShadowDrawingCanvas asShadowDrawingCanvas:)('copying' copy copyClipRect:)('drawing' fillColor: line:to:brushForm: line:to:color: line:to:width:color: line:to:width:color:dashLength:secondColor:secondDashLength:startingOffset: line:to:width:color:stepWidth:secondWidth:secondColor:secondStepWidth: paragraph:bounds:color: point:color: render:)('drawing-general' draw: drawMorph: fullDraw: fullDrawMorph: roundCornersOf:during: roundCornersOf:in:during:)('drawing-images' drawImage:at: drawImage:at:sourceRect: paintImage:at: paintImage:at:sourceRect: stencil:at:color: stencil:at:sourceRect:color: translucentImage:at: translucentImage:at:sourceRect: warpImage:transform: warpImage:transform:at: warpImage:transform:at:sourceRect:cellSize:)('drawing-obsolete' image:at: image:at:rule: imageWithOpaqueWhite:at:)('drawing-ovals' fillOval:color: fillOval:color:borderWidth:borderColor: fillOval:fillStyle: fillOval:fillStyle:borderWidth:borderColor: frameOval:color: frameOval:width:color:)('drawing-polygons' drawPolygon:color:borderWidth:borderColor: drawPolygon:fillStyle: drawPolygon:fillStyle:borderWidth:borderColor:)('drawing-rectangles' fillRectangle:color: fillRectangle:fillStyle: fillRectangle:fillStyle:borderStyle: frameAndFillRectangle:fillColor:borderWidth:borderColor: frameAndFillRectangle:fillColor:borderWidth:topLeftColor:bottomRightColor: frameRectangle:color: frameRectangle:width:color:)('drawing-support' cache:using:during: clipBy:during: preserveStateDuring: transformBy:clippingTo:during: transformBy:clippingTo:during:smoothing: translateBy:during: translateTo:clippingTo:during:)('drawing-text' drawString:at: drawString:at:font:color: drawString:from:to:at:font:color: drawString:from:to:in:font:color: drawString:in: drawString:in:font:color: text:at:font:color: text:bounds:font:color:)('initialization' finish flush reset)('other' flushDisplay forceToScreen: translateBy:clippingTo:during:)('testing' doesRoundedCorners isBalloonCanvas isPostscriptCanvas isShadowDrawing isVisible: seesNothingOutside:)('private' image:at:sourceRect:rule: image:at:sourceRect:rule:alpha:)!!FlattenEncoder reorganize!('filter streaming' elementSeparator)('writing' cr writeArrayedCollection: writeCollection: writeCollectionContents: writeCollectionContents:separator: writeCollectionContents:separator:iterationMessage: writeDictionary: writeDictionaryContents:separator:)!!NullEncoder reorganize!('accessing' close contents target)('initialization' initWithTarget:)('processing' process:)('writing' forward: write: writeObject:)!!NoteEvent reorganize!('accessing' channel channel: duration duration: endTime key:velocity:channel: midiKey midiKey: pitch velocity velocity:)('classification' isNoteEvent)('midi' endNoteOnMidiPort: startNoteOnMidiPort:)('printing' keyName printOn:)!!NoController reorganize!('basic control sequence' startUp)('control defaults' isControlActive isControlWanted)!!NewParagraph reorganize!('access' adjustedFirstCharacterIndex extent firstCharacterIndex focused focused: lastCharacterIndex numberOfLines string text textOwner: textStyle textStyle: wantsColumnBreaks wantsColumnBreaks:)('alignment' centered justified leftFlush rightFlush)('composition' OLDcomposeLinesFrom:to:delta:into:priorLines:atY: compose:style:from:in: composeAll composeAllStartingAt: composeLinesFrom:to:delta:into:priorLines:atY: compositionRectangle fixLastWithHeight: multiComposeLinesFrom:to:delta:into:priorLines:atY: recomposeFrom:to:delta: testNewComposeAll testNewComposeAll2 testNewComposeAll3)('copying' deepCopy)('display' asParagraphForPostscript caretWidth displaySelectionInLine:on: insertionPointColor selectionColor)('editing' clickAt:for:controller: replaceFrom:to:with:displaying:)('fonts-display' displayOn:using:at:)('initialize-release' initialize)('selection' characterBlockAtPoint: characterBlockForIndex: containsPoint: defaultCharacterBlock selectionRects selectionRectsFrom:to: selectionStart:selectionStop:)('private' adjustLineIndicesBy: adjustRightX fastFindFirstLineSuchThat: indentationOfLineIndex:ifBlank: lineIndexForCharacter: lineIndexForPoint: lineIndexOfCharacterIndex: lines moveBy: positionWhenComposed: textStyle:lines:text:)!!NewHandleMorph reorganize!('WiW support' morphicLayerNumber)('all' followHand:forEachPointDo:lastPointDo: followHand:forEachPointDo:lastPointDo:withCursor: sensorMode sensorMode:)('dropping/grabbing' justDroppedInto:event: undoGrabCommand)('initialization' initialize)('stepping and presenter' step)('submorphs-add/remove' delete)!!NetNameResolver class reorganize!('address string utils' addressFromString: stringFromAddress:)('class initialization' initialize)('lookups' addressForName: addressForName:timeout: localAddressString localHostAddress localHostName nameForAddress:timeout: promptUserForHostAddress promptUserForHostAddressDefault: resolverError resolverStatus)('network initialization' initializeNetwork primInitializeNetwork:)('primitives' primAbortLookup primAddressLookupResult primLocalAddress primNameLookupResult primNameResolverError primNameResolverStatus primStartLookupOfAddress: primStartLookupOfName:)('private' readDecimalByteFrom: resolverMutex waitForCompletionUntil: waitForResolverReadyUntil:)!!NaturalLanguageTranslator class reorganize!('*MinimalMorphic-class initialization' resetCaches)('*MinimalMorphic-file-services' loadForLocaleIsoString:fromGzippedMimeLiteral:)('*MinimalMorphic-private' cleanUpCache)('*MinimalMorphicInitialization' initializeClass)('accessing' availableLanguageLocaleIDs current default isoLanguage: isoLanguage:isoCountry: localeID:)('class initialization' initialize startUp:)('file-services' fileReaderServicesForFile:suffix: mergeTranslationFileNamed: serviceMergeLanguageTranslations services)('private' allKnownPhrases cachedTranslations registerPhrase: registeredPhraseFor: translationSuffix)('private loading' directoryForLanguage:country:create: directoryForLocaleID:create: loadAvailableExternalLocales loadExternalTranslationsFor: loadTranslatorForIsoLanguage:isoCountry: localeDirCreate:)!!NaturalLanguageTranslator reorganize!('*MinimalMorphic-fileIn/fileOut' writeAsMimeString)('*MinimalMorphic-translation' rawRemoveUntranslated: translate:in:)('accessing' displayLanguage displayName isoCountry isoLanguage localeID translations untranslated)('fileIn/fileOut' fileOutHeader fileOutHeaderOn: fileOutOn: fileOutOn:keys: nextChunkPut:on: scanFrom:)('initialize-release' localeID:)('printing' printOn:)('translation' checkPhrase:translation: phrase:translation: rawPhrase:translation: removeTranslationFor: removeUntranslated: translate: translationFor:)('user interface' defaultBackgroundColor)('private' generics)('private store-retrieve' loadFromFileNamed: loadFromRefStream: loadFromStream: mergeTranslations: processExternalObject: saveToFileNamed:)!!NaturalLanguageFormTranslator class reorganize!('*MinimalMorphic-i/o' loadFormsFrom:)('accessing' cachedTranslations isoLanguage: isoLanguage:isoCountry: localeID:)!!NaturalLanguageFormTranslator reorganize!('*MinimalMorphic-i/o' saveFormsOn:)('accessing' generics localeID localeID: name:form:)('utilities' translate:)!!MutexSet reorganize!('initialize' withAll:)('mutual exclusion' critical:)('private' pvtCritical:startingAt:)!!Mutex reorganize!('initialize' initialize)('mutual exclusion' critical:)!!MulticolumnLazyListMorph reorganize!('as yet unclassified' getListItem: listChanged)('drawing' display:atRow:on: drawOn: setColumnWidthsFor:)('scroll range' hUnadjustedScrollRange widthToDisplayItem:)!!MultiDisplayScanner reorganize!('*MinimalMorphic-MVC-compatibility' initializeFromParagraph:clippedBy:)('*MinimalMorphic-multilingual scanning' scanMultiCharactersCombiningFrom:to:in:rightX:stopConditions:kern:)('*MinimalMorphic-private' presentationText:)('MVC-compatibility' displayLines:in:clippedBy:)('multilingual scanning' isBreakableAt:in:in:)('scanning' displayLine:offset:leftInRun: placeEmbeddedObject:)('stop conditions' cr crossedX endOfRun paddedSpace plainTab setStopConditions tab)('private' setDestForm: setFont setPort: text:textStyle:foreground:background:fillBlt:ignoreColorChanges: textColor:)!!MultiCompositionScanner reorganize!('*MinimalMorphic-accessing' presentation presentationLine)('*MinimalMorphic-scanning' composeFrom:inRectangle:firstLine:leftSide:rightSide:)('*MinimalMorphic-stop conditions' setFont)('accessing' rightX)('intialize-release' forParagraph:)('multilingual scanning' addCharToPresentation: getPresentation getPresentationLine isBreakableAt:in:in: registerBreakableIndex removeLastCharFromPresentation)('scanning' composeLine:fromCharacterIndex:inParagraph: crossedX setActualFont:)('stop conditions' columnBreak cr endOfRun placeEmbeddedObject: setStopConditions tab)!!MultiCharacterBlockScanner reorganize!('*MinimalMorphic-scanning' scanMultiCharactersCombiningFrom:to:in:rightX:stopConditions:kern:)('scanning' characterBlockAtPoint:in: characterBlockAtPoint:index:in: characterBlockForIndex:in: indentationLevel: placeEmbeddedObject:)('stop conditions' cr crossedX endOfRun paddedSpace setFont setStopConditions tab)('private' buildCharacterBlockIn: characterPointSetX: lastCharacterExtentSetX: lastSpaceOrTabExtentSetX:)!!MultiCanvasCharacterScanner reorganize!('*MinimalMorphic-private' doesDisplaying)('accessing' canvas:)('scanning' displayLine:offset:leftInRun:)('stop conditions' cr crossedX endOfRun paddedSpace setStopConditions tab)('private' setFont textColor:)!!MultiCharacterScanner reorganize!('*MinimalMorphic-initialize' initializeStringMeasurer)('*MinimalMorphic-scanner methods' combinableChar:for: scanJapaneseCharactersFrom:to:in:rightX:stopConditions:kern: scanMultiCharactersCombiningFrom:to:in:rightX:stopConditions:kern: scanMultiCharactersFrom:to:in:rightX:stopConditions:kern: scanMultiCharactersR2LFrom:to:in:rightX:stopConditions:kern:)('*MinimalMorphic-scanning' measureString:inFont:from:to:)('initialize' initialize wantsColumnBreaks:)('multilingual scanning' addCharToPresentation: registerBreakableIndex removeLastCharFromPresentation widthOf:inFont:)('scanner methods' basicScanCharactersFrom:to:in:rightX:stopConditions:kern: isBreakableAt:in:in:)('scanning' columnBreak embeddedObject handleIndentation indentationLevel indentationLevel: leadingTab placeEmbeddedObject: plainTab scanCharactersFrom:to:in:rightX:stopConditions:kern:)('private' addEmphasis: addKern: initializeFromParagraph:clippedBy: setActualFont: setAlignment: setConditionArray: setFont setFont: text:textStyle: textColor:)!!MovieMorph reorganize!('accessing' form scalePoint scalePoint:)('drawing' drawOn:)('geometry testing' containsPoint:)('initialization' defaultColor initialize)('menu' addCustomMenuItems:hand: advanceFrame editDrawing extractFrame: insertIntoMovie: nextFrame playLoop playOnce previousFrame stopPlaying)('rotate scale and flex' rotationDegrees)('stepping and presenter' step)('testing' stepTime)('private' currentFrame insertFrames: setFrame:)!!MouseOverHandler reorganize!('event handling' noticeMouseOver:event: processMouseOver:)('initialize-release' initialize)!!FormEditor class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' flashCursor:)('examples' formFromDisplay fullScreen newForm)('instance creation' openFullScreenForm openOnForm:)('private' createFullScreenForm createOnForm: setKeyboardMap)!!FormEditor reorganize!('basic control sequence' controlInitialize controlTerminate)('control defaults' controlActivity isControlActive)('cursor' cursorPoint)('editing tools' block changeGridding changeTool: colorBlack colorDarkGray colorGray colorLightGray colorWhite curve eraseMode fileInForm fileOutForm line magnify newSourceForm overMode repeatCopy reverseMode setColor: singleCopy togglexGridding toggleyGridding underMode)('initialize-release' initialize release)('menu messages' accept cancel edit fileOut redButtonActivity)('pluggable menus' getPluggableYellowButtonMenu:)('window support' okToChange)('private' deleteRubberBandFrom:to: dragForm normalizeColor: rubberBandFrom:until: selectTool: setVariables trackFormUntil:)!!BitEditor class reorganize!('*MinimalMorphicInitialization' initializeClass)('examples' magnifyOnScreen magnifyWithSmall)('instance creation' openOnForm: openOnForm:at: openOnForm:at:scale: openScreenViewOnForm:at:magnifiedAt:scale:)('private' bitEdit:at:scale:remoteView: buildColorMenu:colorCount: locateMagnifiedView:scale:)!!BitEditor reorganize!('basic control sequence' controlInitialize controlTerminate)('control defaults' isControlActive redButtonActivity)('initialize-release' release)('menu messages' accept cancel fileOut getCurrentColor setColor: setTransparentColor test)('pluggable menus' getPluggableYellowButtonMenu:)('view access' view:)!!MouseMenuController reorganize!('control defaults' controlActivity isControlActive)('initialize-release' release reset)('menu messages' blueButtonActivity performMenuMessage: redButtonActivity yellowButtonActivity)('menu setup' redButtonMenu:redButtonMessages:)('pluggable menus' getPluggableYellowButtonMenu: pluggableYellowButtonActivity: shiftedTextPaneMenuRequest shiftedYellowButtonActivity unshiftedYellowButtonActivity)!!MouseClickState reorganize!('as yet unclassified' printOn:)('event handling' click doubleClick doubleClickTimeout drag: handleEvent:from:)('initialize' client:click:dblClick:dblClickTime:dblClickTimeout:drag:threshold:event:)!!MorphicUnknownEvent reorganize!('accessing' argument argument: position type)('initialize' type:readFrom:)('objects from disk' convertToCurrentVersion:refStream:)('printing' storeOn:)('private' setType:argument: setType:argument:hand:stamp:)!!MorphicTransform class reorganize!('*nebraska-instance creation' fromRemoteCanvasEncoding:)('instance creation' identity new offset: offset:angle:scale:)!!MorphicTransform reorganize!('*MinimalMorphic-initialize' setIdentiy)('*MinimalMorphic-transformations' invertRect: transformBoundsRect:)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' angle inverseTransformation offset scale withAngle: withOffset: withScale:)('composing' composedWithLocal:)('converting' asMatrixTransform2x3 asMorphicTransform)('printing' printOn:)('testing' isIdentity isMorphicTransform isPureTranslation)('transformations' composedWith: invert: invertBoundsRect: transform:)('transforming points' globalPointToLocal: localPointToGlobal:)('private' setAngle: setOffset: setOffset:angle:scale: setScale:)!!MorphicModel class reorganize!('compilation' categoryForSubclasses chooseNewName compileAccessorsFor: compilePropagationForVarName:slotName:)('compiling' acceptsLoggingOfCompilation wantsChangeSetLogging)('eToys-queries' baseUniclass)('housekeeping' removeUninstantiatedModels)('instance creation' new newBounds:model:slotName:)('new-morph participation' includeInNewMorphMenu)('prototype access' prototype prototype:)('queries' hasPrototype)('subclass creation' newSubclass)('testing' officialClass)!!ComponentLikeModel reorganize!('components' addPinFromSpec: deleteComponent initComponentIn: initFromPinSpecs initPinSpecs nameMeIn: pinSpecs pinsDo: renameMe showPins)('dropping/grabbing' justDroppedInto:event:)('geometry' extent:)('initialization' duplicate:from:)('naming' choosePartName)('submorphs-add/remove' delete)!!MorphicModel reorganize!('MorphicExtras-compilation' compileInitMethods)('access' model slotName wantsSlot)('accessing' modelOrNil)('caching' releaseCachedState)('classification' isMorphicModel)('compilation' addPartNameLike:withValue: compileAccessForSlot: compilePropagationMethods nameFor: propagate:as: removeAll slotSelectorFor: use:orMakeModelSelectorFor:in:)('debug and other' installModelIn:)('drag and drop' allowSubmorphExtraction isOpen)('geometry' newBounds: recomputeBounds)('initialization' defaultBorderColor defaultBounds defaultColor duplicate:from: initialize model: model:slotName:)('menu' addCustomMenuItems:hand: closeToEdits openToEdits)('naming' choosePartName)('printing' initString)('submorphs-accessing' allKnownNames)('submorphs-add/remove' delete)!!DropFilesEvent reorganize!('accessing' type)('dispatching' sentTo:)!!DropEvent reorganize!('accessing' contents cursorPoint position type wasHandled wasHandled:)('dispatching' sentTo:)('initialize' copyHandlerState: resetHandlerFields)('printing' printOn:)('testing' isDropEvent)('transforming' transformBy: transformedBy:)('private' setPosition:contents:hand:)!!MorphicEvent reorganize!('accessing' cursorPoint hand position timeStamp type wasHandled wasHandled:)('comparing' = hash)('dispatching' sentTo:)('initialize' copyHandlerState: resetHandlerFields type:readFrom:)('object fileIn' convertOctober2000:using:)('objects from disk' convertToCurrentVersion:refStream:)('testing' isDraggingEvent isDropEvent isKeyboard isKeystroke isMorphicEvent isMouse isMouseOver)('transforming' transformedBy:)('private' setHand: setTimeStamp:)!!MorphWorldController reorganize!('basic control sequence' controlInitialize controlLoop controlTerminate)('control defaults' controlActivity isControlActive)!!MorphListItemWrapper reorganize!('accessing' contents icon)('converting' asString)!!MorphHierarchy reorganize!('accessing' roots selected:)('private' asMorph)!!MorphExtension reorganize!('*MorphicExtras-accessing' player)('MorphicExtras-accessing' isPartsDonor isPartsDonor:)('MorphicExtras-copying' updateReferencesUsing:)('accessing' balloonText balloonText: balloonTextSelector balloonTextSelector: eventHandler eventHandler: externalName: locked locked: sticky sticky: visible visible:)('accessing - layout properties' layoutFrame layoutFrame: layoutPolicy layoutPolicy: layoutProperties layoutProperties:)('accessing - other properties' assureOtherProperties hasOtherProperties hasProperty: initializeOtherProperties otherProperties privateOtherProperties: removeOtherProperties removeProperty: setProperty:toValue: sortedPropertyNames valueOfProperty: valueOfProperty:ifAbsent: valueOfProperty:ifAbsentPut:)('connectors-copying' copyWeakly propertyNamesNotCopied veryDeepFixupWith: veryDeepInner:)('eToys-accessing' actorState actorState: player:)('initialization' initialize)('object fileIn' convertProperty:toValue:)('objects from disk' comeFullyUpOnReload:)('other' inspectElement isDefault)('printing' printOn:)('viewer' externalName)!!LedDigitMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('new-morph participation' includeInNewMorphMenu)!!LedCharacterMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('new-morph participation' includeInNewMorphMenu)!!AnimatedImageMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' unload)('fileIn/Out' fileReaderServicesForFile:suffix: serviceOpenGIFInWindow services)('instance creation' fromGIFFileNamed: fromStream: openGIFInWindow:)!!ImageMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' defaultForm)('instance creation' fromString: fromString:font:)('scripting' authoringPrototype)!!HandMorph class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' compositionWindowManager doubleClickTime doubleClickTime:)('initialization' clearCompositionWindowManager clearInterpreters startUp)('new-morph participation' includeInNewMorphMenu)('utilities' attach: newEventRules: showEvents:)!!Morph class reorganize!('*MinimalMorphicInitialization' initializeClass)('MorphicExtras-arrow head size' defaultArrowheadSize obtainArrowheadFor:defaultValue:)('connectors-scripting' additionsToViewerCategoryConnection)('eToys-scripting' additionsToViewerCategoryBasic additionsToViewerCategoryDragAndDrop additionsToViewerCategoryGeometry additionsToViewerCategoryLayout additionsToViewerCategoryMotion additionsToViewerCategoryObservation additionsToViewerCategoryPenUse additionsToViewerCategoryScripting additionsToViewerCategoryScripts additionsToViewerCategoryTests vectorAdditions)('fileIn/Out' fileReaderServicesForFile:suffix: fromFileName: fromStream: serviceLoadMorphFromFile services)('flexibleVocabularies-flexibleVocabularies' noteAddedSelector:meta: noteCompilationOf:meta:)('flexibleVocabularies-flexiblevocabularies-scripting' additionToViewerCategorySelectors additionsToViewerCategories)('initialize-release' unload)('instance creation' initializedInstance newBounds: newBounds:color: newSticky)('misc' morphsUnknownToTheirOwners)('new-morph participation' includeInNewMorphMenu newStandAlone)('scripting' authoringPrototype)('testing' allSketchMorphClasses allSketchMorphForms isSketchMorphClass)!!MenuLineMorph reorganize!('change reporting' ownerChanged)('drawing' drawOn:)('initialization' initialize)('layout' minHeight minWidth)('submorphs-accessing' noteNewOwner:)('private' updateLayoutInDockingBar)!!MatrixTransformMorph reorganize!('accessing' transform:)('change reporting' invalidRect:from:)('drawing' drawOn: drawSubmorphsOn: visible:)('eToys-geometry eToy' heading:)('event handling' transformFrom:)('flexing' changeRotationCenter:with: hasNoScaleOrRotation innerAngle lastRotationDegrees lastRotationDegrees: removeFlexShell rotateBy: rotationDegrees: transform)('geometry' boundsChangedFrom:to: computeBounds extent: handleBoundsChange: transformedBy:)('geometry eToy' heading rotationCenter rotationCenter: setDirectionFrom:)('geometry testing' containsPoint: fullContainsPoint:)('halos and balloon help' balloonHelpTextForHandle:)('initialization' initialize)('initialize' asFlexOf:)('layout' fullBounds)('menus' setRotationCenterFrom:)('rotate scale and flex' addFlexShell)('updating' changed)('private' privateFullMoveBy:)!!LedTimerMorph reorganize!('accessing' continue pause reset resume)('initialization' initialize)('stepping' updateTime)('stepping and presenter' start step stop)('testing' stepTime)!!LedMorph reorganize!('accessing' chars chars: color: digits digits: flash: highlighted: scrollLoop scrollLoop: string string: stringToLed value value:)('drawing' drawOn:)('initialization' defaultColor initialize scrollInit)('layout' layoutChanged)('macpal' flash)('stepping and presenter' step)('testing' stepTime)!!LedDigitMorph reorganize!('accessing' digit digit: highlighted highlighted:)('drawing' drawOn: drawOnFills:)('initialization' defaultColor initialize)!!LedCharacterMorph reorganize!('accessing' char char: highlighted highlighted:)('drawing' drawOn: drawOnFills:)('initialization' defaultColor initialize)!!LazyListMorph reorganize!('accessing' userString)('drawing' adjustHeight adjustWidth bottomVisibleRowForCanvas: colorForRow: display:atRow:on: drawBackgroundForMulti:on: drawBackgroundForPotentialDrop:on: drawOn: drawSelectionOn: font font: highlightPotentialDropRow:on: topVisibleRowForCanvas:)('initialization' initialize listSource:)('list access' getListItem: getListSize item:)('list management' drawBoundsForRow: listChanged rowAtLocation: selectRow: selectedRow selectedRow: unselectRow:)('scroll range' hUnadjustedScrollRange widthToDisplayItem:)!!LassoPatchMorph reorganize!('dropping' justDroppedInto:event: wantsToBeDroppedInto:)('eToys-misc' isCandidateForAutomaticViewing)('initialization' initialize initializeToStandAlone)!!GrabPatchMorph reorganize!('dropping' justDroppedInto:event: wantsToBeDroppedInto:)('eToys-misc' isCandidateForAutomaticViewing)('initialization' initialize initializeToStandAlone)!!AnimatedImageMorph reorganize!('stepping and presenter' step stepTime stepTime: wantsSteps)('private' fromGIFFileNamed: fromReader: fromStream: images initialize)!!ImageMorph reorganize!('MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)('accessing' borderStyle: borderWidth: color: form image image: isOpaque isOpaque: setNewImageFrom: withSnapshotBorder)('as yet unclassified' wantsRecolorHandle)('caching' releaseCachedState)('drawing' drawOn:)('eToys-card in a stack' couldHoldSeparateDataForEachInstance)('eToys-other' wearCostume:)('eToys-player' currentDataValue)('geometry' extent:)('initialization' initialize)('menu' changeOpacity opacityString)('menu commands' grabFromScreen readFromFile)('menus' addCustomMenuItems:hand:)('other' newForm:)('parts bin' initializeToStandAlone)('testing' basicType)!!HandleMorph reorganize!('dropping/grabbing' justDroppedInto:event:)('eToys-e-toy support' isCandidateForAutomaticViewing)('event handling' keyStroke:)('initialization' initialize)('initialize' forEachPointDo: forEachPointDo:lastPointDo:)('stepping and presenter' startStepping step)('testing' stepTime)!!HandMorphForReplay reorganize!('copying' veryDeepCopyWith:)('cursor' showTemporaryCursor:hotSpotOffset:)('drawing' needsToBeDrawn)('event handling' pauseEventRecorderIn: processEvents)('initialization' initialize recorder:)!!HandMorph reorganize!('accessing' anyButtonPressed colorForInsets lastEvent mouseOverHandler noButtonPressed targetOffset userInitials userPicture userPicture:)('balloon help' balloonHelp balloonHelp: deleteBalloonTarget: removePendingBalloonFor: spawnBalloonFor: triggerBalloonFor:after:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('classification' isHandMorph)('copying' veryDeepCopyWith:)('cursor' cursorBounds showTemporaryCursor: showTemporaryCursor:hotSpotOffset: temporaryCursor)('double click support' resetClickState waitForClicksOrDrag:event: waitForClicksOrDrag:event:selectors:threshold:)('drawing' drawOn: fullDrawOn: hasChanged hasUserInformation needsToBeDrawn nonCachingFullDrawOn: restoreSavedPatchOn: savePatchFrom: shadowForm updateCacheCanvas: visible:)('drop shadows' shadowOffset)('eToys-pen' trailMorph)('eToys-scripting' adaptedToWorld:)('event handling' checkForMoreKeyboard cursorPoint flushEvents noticeMouseOver:event: pauseEventRecorderIn: processEvents)('events-processing' handleEvent: isCapturingGesturePoints)('focus handling' compositionWindowManager keyboardFocus keyboardFocus: mouseFocus mouseFocus: newKeyboardFocus: newMouseFocus: newMouseFocus:event: releaseAllFoci releaseKeyboardFocus releaseKeyboardFocus: releaseMouseFocus releaseMouseFocus:)('genie-stubs' autoFocusRectangleBoundsFor: disableGenieFocus enableGenie focusStartEvent genieGestureProcessor isGenieAvailable isGenieEnabled isGenieFocused)('geometry' position position: userInitials:andPicture:)('grabbing/dropping' attachMorph: dropMorph:event: dropMorphs dropMorphs: grabMorph:from: targetOffset:)('halo handling' halo: obtainHalo: releaseHalo: removeHalo removeHaloFromClick:on: removePendingHaloFor: spawnMagicHaloFor: triggerHaloFor:after:)('halos and balloon help' halo)('initialization' initForEvents initialize interrupted resourceJustLoaded)('layout' fullBounds)('listeners' addEventListener: addKeyboardListener: addListener:to: addMouseListener: eventListeners eventListeners: keyboardListeners keyboardListeners: mouseListeners mouseListeners: removeEventListener: removeKeyboardListener: removeListener:from: removeMouseListener:)('meta-actions' copyToPasteBuffer: grabMorph:)('multilingual' clearKeyboardInterpreter keyboardInterpreter)('objects from disk' objectForDataStream:)('paste buffer' objectToPaste pasteBuffer pasteBuffer: pasteMorph)('selected object' selectedObject)('updating' changed)('private events' generateDropFilesEvent: generateKeyboardEvent: generateMouseEvent: mouseTrailFrom: moveToEvent: sendEvent:focus: sendEvent:focus:clear: sendFocusEvent:to:clear: sendKeyboardEvent: sendListenEvent:to: sendMouseEvent:)!!HaloMorph reorganize!('WiW support' morphicLayerNumber)('accessing' haloBox: innerTarget isMagicHalo isMagicHalo: magicAlpha magicAlpha: setTarget: target target: wantsToBeTopmost)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn: drawSubmorphsOn:)('dropping/grabbing' startDrag:with:)('eToys-handles' doDupOrMakeSibling:with: doMakeSiblingOrDup:with:)('event handling' mouseMove: wantsKeyboardFocusFor:)('events' dragTarget: popUpFor:event: popUpMagicallyFor:hand: staysUpWhenMouseIsDownIn: transferHalo:)('events-processing' containsPoint:event: handleListenEvent: rejectsEvent:)('geometry' position:)('geometry testing' containsPoint:)('halos and balloon help' addSimpleHandlesTo:box:)('handles' addChooseGraphicHandle: addCollapseHandle: addDebugHandle: addDismissHandle: addDragHandle: addDupHandle: addFewerHandlesHandle: addFontEmphHandle: addFontSizeHandle: addFontStyleHandle: addGrabHandle: addGrowHandle: addHelpHandle: addMakeSiblingHandle: addMenuHandle: addPoohHandle: addRepaintHandle: addRotateHandle: addScaleHandle: addScriptHandle: positionIn:horizontalPlacement:verticalPlacement:)('initialization' acceptNameEdit defaultColor initialize)('menu' wantsYellowButtonMenu)('meta-actions' blueButtonDown: handlerForBlueButtonDown:)('objects from disk' convertToCurrentVersion:refStream:)('stepping' fadeIn fadeInInitially fadeOut fadeOutFinally handleEntered handleLeft localHaloBoundsFor: step)('submorphs-add/remove' delete)('testing' stepTime)('updating' changed)('private' addCircleHandles addDirectionHandles addFullHandles addGraphicalHandle:at:on:send:to: addGraphicalHandleFrom:at: addHandle:on:send:to: addHandleAt:color:icon:on:send:to: addHandleAt:color:on:send:to: addHandles addHandlesForWorldHalos addName addNameBeneath:string: addSimpleHandles addSimpleHandlesForWorldHalos addSimpleSketchMorphHandlesInBox: basicBox basicBoxForSimpleHalos createHandleAt:color:iconName: directionArrowLength dismiss doDebug:with: doDirection:with: doDrag:with: doDup:with: doGrab:with: doGrow:with: doMenu:with: doRot:with: doScale:with: endInteraction handleAllowanceForIconicHalos handleSize maybeCollapse:with: maybeDismiss:with: maybeDoDup:with: mouseDownInCollapseHandle:with: mouseDownInDimissHandle:with: obtainHaloForEvent:andRemoveAllHandlesBut: positionDirectionShaft: prepareToTrackCenterOfRotation:with: removeAllHandlesBut: setCenterOfRotation:with: setColor:toHandle: setDirection:with: setDismissColor:with: showDirectionHandles: showDirectionHandles:addHandles: showingDirectionHandles simpleFudgeOffset startGrow:with: startRot:with: startScale:with: trackCenterOfRotation:with: trackDirectionArrow:with:)!!CircleMorph reorganize!('geometry' bounds: extent: transformedBy:)('geometry eToy' heading: referencePosition rotationCenter rotationCenter:)('menus' setRotationCenterFrom:)('parts bin' initializeToStandAlone)('rotate scale and flex' addFlexShellIfNecessary privateMoveBy: rotationDegrees rotationDegrees:)!!EllipseMorph reorganize!('accessing' couldHaveRoundedCorners doesBevels)('drawing' areasRemainingToFill: drawOn:)('geometry' bottomLeftCorner bottomRightCorner closestPointTo: intersectionWithLineSegmentFromCenterTo: topLeftCorner topRightCorner)('geometry testing' containsPoint:)('initialization' defaultBorderWidth defaultColor)('rounding' cornerStyle:)('testing' canDrawBorder:)('visual properties' canHaveFillStyles)!!CachingMorph reorganize!('as yet unclassified' updateCacheCanvas:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('drawing' drawOn: fullDrawOn: imageForm)('initialization' defaultColor initialize)!!BottomRightGripMorph reorganize!('accessing' gripLayoutFrame ptName resizeCursor)('drawing' drawOn:)('target resize' apply:)!!BottomLeftGripMorph reorganize!('accessing' gripLayoutFrame ptName resizeCursor)('drawing' drawOn:)('target resize' apply:)!!BorderedSubpaneDividerMorph reorganize!('as yet unclassified' firstEnter: horizontal resizingEdge resizingEdge: vertical)('initialization' defaultBorderWidth defaultColor initialize)!!BorderedMorph reorganize!('MorphicExtras-initialization' basicInitialize)('MorphicExtras-printing' fullPrintOn:)('accessing' borderColor borderColor: borderInset borderRaised borderStyle borderStyle: borderWidth borderWidth: doesBevels hasTranslucentColor useRoundedCorners useSquareCorners)('drawing' areasRemainingToFill:)('flexibleVocabularies-scripting' understandsBorderVocabulary)('geometry' acquireBorderWidth: closestPointTo: intersectionWithLineSegmentFromCenterTo:)('initialization' borderInitialize defaultBorderColor defaultBorderWidth initialize)('lookenhancements' addCornerGrips addPaneHSplitterBetween:and: addPaneSplitters addPaneVSplitterBetween:and: linkSubmorphsToSplitters removeCornerGrips removePaneSplitters splitters)('menu' addBorderStyleMenuItems:hand: changeBorderColor: changeBorderWidth:)('private' setBorderWidth:borderColor: setColor:borderWidth:borderColor:)!!BackgroundMorph reorganize!('accessing' delta delta: offset offset: slideBy: startRunning stopRunning subBounds)('drawing' drawOn: fullDrawOn:)('initialization' initialize)('layout' fullBounds layoutChanged)('menus' addCustomMenuItems:hand:)('stepping and presenter' step)('testing' stepTime)!!Morph reorganize!('*services-base' requestor)('MorphicExtras-accessing' highlightOnlySubmorph:)('MorphicExtras-geometry' shiftSubmorphsBy:)('MorphicExtras-menus' dismissButton)('WiW support' addMorphInFrontOfLayer: addMorphInLayer: eToyRejectDropMorph:event: morphicLayerNumber morphicLayerNumberWithin: randomBoundsFor: shouldGetStepsFrom:)('accessing' actorState actorState: actorStateOrNil adoptPaneColor: balloonText balloonTextSelector balloonTextSelector: beFlap: beSticky beUnsticky borderColor borderColor: borderStyle borderStyle: borderStyleForSymbol: borderWidth borderWidth: borderWidthForRounding clearArea color color: colorForInsets connections couldHaveRoundedCorners doesBevels eventHandler eventHandler: forwardDirection hasTranslucentColor highlight highlightColor highlightColor: insetColor isFlap isLocked isShared isSticky lock lock: modelOrNil player player: presenter raisedColor regularColor regularColor: rememberedColor rememberedColor: resistsRemoval resistsRemoval: scaleFactor setBorderStyle: sqkPage sticky: toggleLocked toggleResistsRemoval toggleStickiness unHighlight unlock unlockContents url userString viewBox visibleClearArea wantsEmbeddingsVocabulary wantsToBeCachedByHand wantsToBeTopmost)('accessing - extension' assureExtension extension hasExtension initializeExtension privateExtension: resetExtension)('accessing - properties' hasProperty: otherProperties removeProperty: setProperties: setProperty:toValue: valueOfProperty: valueOfProperty:ifAbsent: valueOfProperty:ifAbsentPut: valueOfProperty:ifPresentDo:)('accessing-backstop' target:)('button' doButtonAction fire firedMouseUpCode)('button properties' buttonProperties buttonProperties: hasButtonProperties)('caching' fullLoadCachedState fullReleaseCachedState loadCachedState releaseCachedState)('card in a stack' couldHoldSeparateDataForEachInstance holdsSeparateDataForEachInstance setAsDefaultValueForNewCard tabHitWithEvent:)('change reporting' addedMorph: colorChangedForSubmorph: invalidRect: invalidRect:from: ownerChanged privateInvalidateMorph: userSelectedColor:)('classification' demandsBoolean isAlignmentMorph isBalloonHelp isFlapOrTab isFlapTab isFlexMorph isHandMorph isModalShell isPlayfieldLike isRenderer isStandardViewer isSyntaxMorph isTextMorph isWorldMorph isWorldOrHandMorph)('connectors-scripting' wantsConnectorVocabulary)('converting' asDraggableMorph asSnapshotThumbnail)('copying' copy deepCopy duplicate duplicateMorphCollection: fullCopy updateReferencesUsing: veryDeepCopyWith: veryDeepFixupWith: veryDeepInner:)('creation' asMorph)('debug and other' addDebuggingItemsTo:hand: addMouseActionIndicatorsWidth:color: addMouseUpAction addMouseUpActionWith: addViewingItemsTo: allStringsAfter: altSpecialCursor0 altSpecialCursor1 altSpecialCursor2 altSpecialCursor3 altSpecialCursor3: buildDebugMenu: defineTempCommand deleteAnyMouseActionIndicators inspectOwnerChain installModelIn: mouseUpCodeOrNil ownerChain programmedMouseDown:for: programmedMouseEnter:for: programmedMouseLeave:for: programmedMouseUp:for: removeMouseUpAction resumeAfterDrawError resumeAfterStepError tempCommand)('dispatching' disableSubmorphFocusForHand:)('drawing' areasRemainingToFill: boundingBoxOfSubmorphs boundsWithinCorners changeClipSubmorphs clipLayoutCells clipLayoutCells: clipSubmorphs clipSubmorphs: clippingBounds doesOwnRotation drawDropHighlightOn: drawDropShadowOn: drawErrorOn: drawMouseDownHighlightOn: drawOn: drawRolloverBorderOn: drawSubmorphsOn: expandFullBoundsForDropShadow: expandFullBoundsForRolloverBorder: flashBounds fullDrawOn: hasClipSubmorphsString hide highlightForMouseDown highlightForMouseDown: highlightedForMouseDown imageForm imageForm:backgroundColor:forRectangle: imageForm:forRectangle: imageFormDepth: imageFormForRectangle: imageFormWithout:andStopThere: refreshWorld shadowForm show visible visible:)('drop shadows' addDropShadow addDropShadowMenuItems:hand: changeShadowColor hasDropShadow hasDropShadow: hasDropShadowString hasRolloverBorder hasRolloverBorder: removeDropShadow setShadowOffset: shadowColor shadowColor: shadowOffset shadowOffset: shadowPoint: toggleDropShadow)('dropping/grabbing' aboutToBeGrabbedBy: disableDragNDrop dragEnabled dragEnabled: dragNDropEnabled dragSelectionColor dropEnabled dropEnabled: dropHighlightColor dropSuccessColor enableDrag: enableDragNDrop enableDragNDrop: enableDrop: formerOwner formerOwner: formerPosition formerPosition: grabTransform highlightForDrop highlightForDrop: highlightedForDrop justDroppedInto:event: justGrabbedFrom: nameForUndoWording rejectDropMorphEvent: repelsMorph:event: resetHighlightForDrop separateDragAndDrop slideBackToFormerSituation: startDrag:with: toggleDragNDrop transportedMorph undoGrabCommand vanishAfterSlidingTo:event: wantsDroppedMorph:event: wantsToBeDroppedInto: wantsToBeOpenedInWorld willingToBeDiscarded)('e-toy support' adaptToWorld: adoptVocabulary: appearsToBeSameCostumeAs: asNumber: asWearableCostume asWearableCostumeOfExtent: automaticViewing changeAllBorderColorsFrom:to: configureForKids containingWindow copyCostumeStateFrom: currentPlayerDo: cursor cursor: decimalPlacesForGetter: defaultValueOrNil defaultVariableName definePath deletePath embedInWindow embeddedInMorphicWindowLabeled: enclosingEditor fenceEnabled followPath getCharacters getNumericValue gridFormOrigin:grid:background:line: isAViewer isCandidateForAutomaticViewing isTileEditor makeGraphPaper makeGraphPaperGrid:background:line: mustBeBackmost noteDecimalPlaces:forGetter: noteNegotiatedName:for: pinkXButton referencePlayfield rotationStyle rotationStyle: setAsActionInButtonProperties: setNumericValue: setStandardTexture slotSpecifications tanOButton textureParameters topEditor unlockOneSubpart wantsRecolorHandle wrappedInWindow: wrappedInWindowWithTitle:)('event handling' click click: cursorPoint doubleClick: doubleClickTimeout: dropFiles: firstClickTimedOut: handlerForYellowButtonDown: handlesKeyboard: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: handlesMouseStillDown: hasFocus keyDown: keyStroke: keyUp: keyboardFocusChange: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseStillDown: mouseStillDownThreshold mouseUp: moveOrResizeFromKeystroke: on:send:to: on:send:to:withValue: preferredKeyboardBounds preferredKeyboardPosition removeLink: restoreSuspendedEventHandler startDrag: suspendEventHandler tabAmongFields transformFrom: transformFromOutermostWorld transformFromWorld wantsDropFiles: wantsEveryMouseMove wantsKeyboardFocusFor: wouldAcceptKeyboardFocus wouldAcceptKeyboardFocusUponTab yellowButtonActivity:)('event handling-override' handlerForMouseDown:)('events-accessing' actionMap updateableActionMap)('events-alarms' addAlarm:after: addAlarm:at: addAlarm:with:after: addAlarm:with:at: addAlarm:with:with:after: addAlarm:with:with:at: addAlarm:withArguments:after: addAlarm:withArguments:at: alarmScheduler removeAlarm: removeAlarm:at:)('events-processing' containsPoint:event: defaultEventDispatcher handleDropFiles: handleDropMorph: handleEvent: handleFocusEvent: handleKeyDown: handleKeyUp: handleKeystroke: handleListenEvent: handleMouseDown: handleMouseEnter: handleMouseLeave: handleMouseMove: handleMouseOver: handleMouseStillDown: handleMouseUp: handleUnknownEvent: mouseDownPriority processEvent: processEvent:using: rejectDropEvent: rejectsEvent: transformedFrom:)('events-removing' releaseActionMap)('fileIn/out' attachToResource prepareToBeSaved saveAsResource saveOnFile updateAllFromResources updateFromResource)('filter streaming' drawOnCanvas:)('flexiblevocabularies-scripting' understandsBorderVocabulary)('geniestubs' allowsGestureStart: isGestureStart: mouseStillDownStepRate redButtonGestureDictionaryOrName: yellowButtonGestureDictionaryOrName:)('geometry' align:with: bottom bottom: bottomCenter bottomLeft bottomLeft: bottomRight bottomRight: bounds bounds: bounds:from: bounds:in: boundsIn: boundsInWorld center center: extent extent: fullBoundsInWorld globalPointToLocal: gridPoint: griddedPoint: height height: innerBounds left left: leftCenter localPointToGlobal: minimumExtent minimumExtent: outerBounds overlapsShadowForm:bounds: point:from: point:in: pointFromWorld: pointInWorld: position position: positionInWorld positionSubmorphs right right: rightCenter screenLocation screenRectangle setConstrainedPosition:hangOut: shift: shiftSubmorphsOtherThan:by: top top: topCenter topLeft topLeft: topRight topRight: transformedBy: width width: worldBounds worldBoundsForHalo)('geometry eToy' addTransparentSpacerOfSize: beTransparent cartesianBoundsTopLeft cartesianXY: color:sees: colorUnder degreesOfFlex forwardDirection: getIndexInOwner goHome heading heading: move:toPosition: referencePosition referencePosition: referencePositionInWorld referencePositionInWorld: rotationCenter rotationCenter: scale: scaleFactor: setDirectionFrom: setIndexInOwner: simplySetVisible: touchesColor: transparentSpacerOfSize: wrap x x: x:y: y y:)('geometry testing' containsPoint: fullContainsPoint: obtrudesBeyondContainer)('halos and balloon help' addHalo addHalo: addHalo:from: addHandlesTo:box: addMagicHaloFor: addOptionalHandlesTo:box: addSimpleHandlesTo:box: addWorldHandlesTo:box: balloonColor balloonColor: balloonFont balloonFont: balloonHelpAligner balloonHelpDelayTime balloonHelpTextForHandle: boundsForBalloon comeToFrontAndAddHalo defaultBalloonColor defaultBalloonFont defersHaloOnClickTo: deleteBalloon editBalloonHelpContent: editBalloonHelpText halo haloClass haloDelayTime hasHalo hasHalo: isLikelyRecipientForMouseOverHalos mouseDownOnHelpHandle: noHelpString okayToAddDismissHandle okayToAddGrabHandle okayToBrownDragEasily okayToExtractEasily okayToResizeEasily okayToRotateEasily preferredDuplicationHandleSelector removeHalo setBalloonText: setBalloonText:maxLineLength: setCenteredBalloonText: showBalloon: showBalloon:hand: transferHalo:from: wantsBalloon wantsDirectionHandles wantsDirectionHandles: wantsHalo wantsHaloFor: wantsHaloFromClick wantsHaloHandleWithSelector:inHalo: wantsScriptorHaloHandle wantsSimpleSketchMorphHandles)('initialization' basicInitialize defaultBounds defaultColor inAScrollPane inATwoWayScrollPane initialize intoWorld: openCenteredInWorld openInHand openInMVC openInWindow openInWindowLabeled: openInWindowLabeled:inWorld: openInWorld openInWorld: outOfWorld: resourceJustLoaded standardPalette)('latter day support' isEtoyReadout)('layout' acceptDroppingMorph:event: adjustLayoutBounds doLayoutIn: fullBounds layoutBounds layoutBounds: layoutChanged layoutInBounds: layoutProportionallyIn: minExtent minHeight minHeight: minWidth minWidth: privateFullBounds submorphBounds)('layout-menu' addCellLayoutMenuItems:hand: addLayoutMenuItems:hand: addTableLayoutMenuItems:hand: changeCellInset: changeClipLayoutCells changeDisableTableLayout changeLayoutInset: changeListDirection: changeMaxCellSize: changeMinCellSize: changeNoLayout changeProportionalLayout changeReverseCells changeRubberBandCells changeTableLayout hasClipLayoutCellsString hasDisableTableLayoutString hasNoLayoutString hasProportionalLayoutString hasReverseCellsString hasRubberBandCellsString hasTableLayoutString layoutMenuPropertyString:from:)('layout-properties' assureLayoutProperties assureTableProperties cellInset cellInset: cellPositioning cellPositioning: cellPositioningString: cellSpacing cellSpacing: cellSpacingString: disableTableLayout disableTableLayout: hResizing hResizing: hResizingString: layoutFrame layoutFrame: layoutInset layoutInset: layoutPolicy layoutPolicy: layoutProperties layoutProperties: listCentering listCentering: listCenteringString: listDirection listDirection: listDirectionString: listSpacing listSpacing: listSpacingString: maxCellSize maxCellSize: minCellSize minCellSize: reverseTableCells reverseTableCells: rubberBandCells rubberBandCells: spaceFillWeight spaceFillWeight: vResizeToFit: vResizing vResizing: vResizingString: wrapCentering wrapCentering: wrapCenteringString: wrapDirection wrapDirection: wrapDirectionString:)('macpal' currentVocabulary flash)('menu' addBorderStyleMenuItems:hand: addGestureMenuItems:hand: addGraphModelYellowButtonItemsTo:event: addModelYellowButtonItemsTo:event: addMyYellowButtonMenuItemsToSubmorphMenus addNestedYellowButtonItemsTo:event: addTitleForHaloMenu: addYellowButtonMenuItemsTo:event: buildYellowButtonMenu: hasYellowButtonMenu offerCostumeViewerMenu: outermostOwnerWithYellowButtonMenu startWiring wantsYellowButtonMenu wantsYellowButtonMenu:)('menus' absorbStateFromRenderer: addAddHandMenuItemsForHalo:hand: addCopyItemsTo: addCustomHaloMenuItems:hand: addCustomMenuItems:hand: addExportMenuItems:hand: addFillStyleMenuItems:hand: addHaloActionsTo: addPaintingItemsTo:hand: addStandardHaloMenuItemsTo:hand: addToggleItemsToHaloMenu: addWorldTargetSightingItems:hand: adhereToEdge adhereToEdge: adjustedCenter adjustedCenter: allMenuWordings changeColor changeDirectionHandles changeDragAndDrop chooseNewGraphic chooseNewGraphicCoexisting: chooseNewGraphicFromHalo collapse defaultArrowheadSize exportAsBMP exportAsGIF exportAsJPEG exportAsPNG hasDirectionHandlesString hasDragAndDropEnabledString helpButton inspectInMorphic inspectInMorphic: lockUnlockMorph lockedString makeNascentScript maybeAddCollapseItemTo: menuItemAfter: menuItemBefore: model presentHelp printPSToFileNamed: reasonableBitmapFillForms reasonableForms resetForwardDirection resistsRemovalString setArrowheads setRotationCenter setRotationCenterFrom: setToAdhereToEdge: snapToEdgeIfAppropriate stickinessString transferStateToRenderer: uncollapseSketch)('messenger' affiliatedSelector)('meta-actions' addEmbeddingMenuItemsTo:hand: beThisWorldsModel blueButtonDown: blueButtonUp: buildHandleMenu: buildMetaMenu: changeColorTarget:selector:originalColor:hand: copyToPasteBuffer: dismissMorph dismissMorph: duplicateMorph: duplicateMorphImage: embedInto: grabMorph: handlerForBlueButtonDown: handlerForMetaMenu: inspectAt:event: invokeMetaMenu: invokeMetaMenuAt:event: maybeDuplicateMorph maybeDuplicateMorph: potentialEmbeddingTargets potentialTargets potentialTargetsAt: resizeFromMenu resizeMorph: saveAsPrototype showActions showHiders sightTargets: sightWorldTargets: subclassMorph targetFromMenu: targetFromMenu:popupAt: targetWith:)('miscellaneous' roundUpStrays setExtentFromHalo: setFlexExtentFromHalo:)('model access' models)('morphic-Postscript Canvases' asEPS asPostscript asPostscriptPrintJob clipPostscript drawPostscriptOn: fullDrawPostscriptOn: printPSToFile)('naming' choosePartName downshiftedNameOfObjectRepresented innocuousName name: nameForFindWindowFeature nameInModel nameOfObjectRepresented setNamePropertyTo: setNameTo: specialNameInModel tryToRenameTo:)('object fileIn' convertAugust1998:using: convertNovember2000DropShadow:using:)('objects from disk' convertToCurrentVersion:refStream: objectForDataStream: storeDataOn:)('other' removeAllButFirstSubmorph)('other events' menuButtonMouseEnter: menuButtonMouseLeave:)('parts bin' inPartsBin initializeToStandAlone isPartsBin isPartsDonor isPartsDonor: markAsPartsDonor partRepresented residesInPartsBin)('pen' choosePenColor: choosePenSize getPenColor getPenDown getPenSize liftPen lowerPen penColor: penUpWhile: trailMorph)('player' assureExternalName assuredPlayer currentDataValue okayToDuplicate shouldRememberCostumes variableDocks)('player commands' beep: jumpTo: makeFenceSound playSoundNamed: set:)('player viewer' updateLiteralLabel)('printing' clipText colorString: constructorString fullPrintOn: initString morphReport morphReportFor: morphReportFor:on:indent: pagesHandledAutomatically printConstructorOn:indent: printConstructorOn:indent:nodeDict: printOn: printStructureOn:indent: reportableSize structureString textToPaste)('rotate scale and flex' addFlexShell addFlexShellIfNecessary keepsTransform newTransformationMorph removeFlexShell rotationDegrees)('rounding' cornerStyle: roundedCorners roundedCornersString toggleCornerRounding wantsRoundedCorners)('scripting' arrowDeltaFor: bringTileScriptingElementsUpToDate bringUpToDate defaultFloatPrecisionFor: isTileLike isTileScriptingElement scriptEditorFor: wantsConnectionVocabulary)('selected object' selectedObject)('sound-piano rolls' addMorphsTo:pianoRoll:eventTime:betweenTime:and: encounteredAtTime:inScorePlayer:atIndex:inEventTrack:secsPerTick: pauseFrom: resetFrom: resumeFrom: triggerActionFromPianoRoll)('stepping and presenter' arrangeToStartStepping arrangeToStartSteppingIn: isStepping isSteppingSelector: start startStepping startStepping:at:arguments:stepTime: startSteppingIn: startSteppingSelector: step stepAt: stop stopStepping stopSteppingSelector: stopSteppingSelfAndSubmorphs)('structure' activeHand allOwners allOwnersDo: firstOwnerSuchThat: hasOwner: isInDockingBar isInSystemWindow isInWorld morphPreceding: nearestOwnerThat: orOwnerSuchThat: outermostMorphThat: outermostWorldMorph owner ownerThatIsA: ownerThatIsA:orA: pasteUpMorph pasteUpMorphHandlingTabAmongFields primaryHand renderedMorph root rootAt: topPasteUp topRendererOrSelf withAllOwners withAllOwnersDo: world)('submorphs-accessing' allKnownNames allMorphs allMorphsDo: allNonSubmorphMorphs allSubmorphNamesDo: dockingBars findA: findDeepSubmorphThat:ifAbsent: findDeeplyA: findSubmorphBinary: firstSubmorph hasSubmorphWithProperty: hasSubmorphs indexOfMorphAbove: lastSubmorph mainDockingBars morphsAt: morphsAt:behind:unlocked: morphsAt:unlocked: morphsAt:unlocked:do: morphsInFrontOf:overlapping:do: morphsInFrontOverlapping: morphsInFrontOverlapping:do: noteNewOwner: rootMorphsAt: rootMorphsAtGlobal: shuffleSubmorphs submorphAfter submorphBefore submorphCount submorphNamed: submorphNamed:ifNone: submorphOfClass: submorphThat:ifNone: submorphWithProperty: submorphs submorphsBehind:do: submorphsDo: submorphsInFrontOf:do: submorphsReverseDo: submorphsSatisfying:)('submorphs-add/remove' abandon actWhen actWhen: addAllMorphs: addAllMorphs:after: addMorph: addMorph:after: addMorph:asElementNumber: addMorph:behind: addMorph:fullFrame: addMorph:inFrontOf: addMorphBack: addMorphCentered: addMorphFront: addMorphFront:fromWorldPosition: addMorphFrontFromWorldPosition: addMorphNearBack: comeToFront copyWithoutSubmorph: delete deleteDockingBars deleteSubmorphsWithProperty: dismissViaHalo goBehind privateDelete removeAllMorphs removeAllMorphsIn: removeMorph: removedMorph: replaceSubmorph:by: submorphIndexOf:)('system primitives' creationStamp)('testing' canDrawAtHigherResolution canDrawBorder: completeModificationHash couldMakeSibling isDockingBar isFlexed isFullOnScreen isLineMorph isMorph isSketchMorph knownName modificationHash renameInternal: renameTo: shouldDropOnMouseUp stepTime wantsSteps)('text-anchor' addTextAnchorMenuItems:hand: changeDocumentAnchor changeInlineAnchor changeParagraphAnchor hasDocumentAnchorString hasInlineAnchorString hasParagraphAnchorString relativeTextAnchorPosition relativeTextAnchorPosition: textAnchorType textAnchorType:)('texture support' isValidWonderlandTexture)('thumbnail' demandsThumbnailing icon iconOrThumbnail iconOrThumbnailOfSize: morphRepresented permitsThumbnailing readoutForField:)('translation' isPlayer:ofReferencingTile:)('undo' commandHistory undoMove:redo:owner:bounds:predecessor:)('updating' changed)('user interface' becomeModal defaultLabelForInspector doCancel initialExtent)('viewer' externalName)('visual properties' canHaveFillStyles cornerStyle defaultBitmapFillForm fillStyle fillStyle: fillWithRamp:oriented: useBitmapFill useDefaultFill useGradientFill useSolidFill)('private' privateAddAllMorphs:atIndex: privateAddMorph:atIndex: privateBounds: privateColor: privateDeleteWithAbsolutelyNoSideEffects privateFullBounds: privateFullMoveBy: privateMoveBy: privateOwner: privateRemove: privateRemoveMorphWithAbsolutelyNoSideEffects: privateSubmorphs privateSubmorphs:)!!Monitor reorganize!('*MinimalMorphic-signaling-specific' signalReallyAll)('*MinimalMorphic-waiting-specific' waitFor:)('*MinimalMorphic-waiting-timeout' waitFor:maxSeconds: waitMaxSeconds: waitUntil:for:maxSeconds: waitUntil:maxSeconds: waitWhile:for:maxSeconds: waitWhile:maxSeconds:)('accessing' cleanup)('initialize-release' initialize)('signaling-default' signal signalAll)('signaling-specific' signal: signalAll:)('synchronization' critical:)('waiting-basic' wait waitUntil: waitWhile:)('waiting-specific' waitUntil:for: waitWhile:for:)('waiting-timeout' waitFor:maxMilliseconds: waitMaxMilliseconds: waitUntil:for:maxMilliseconds: waitUntil:maxMilliseconds: waitWhile:for:maxMilliseconds: waitWhile:maxMilliseconds:)('private' checkOwnerProcess defaultQueue enter exit exitAndWaitInQueue:maxMilliseconds: isOwnerProcess privateCleanup queueDict queueFor: signalAllInQueue: signalLock:inQueue: signalQueue: waitInQueue:maxMilliseconds: waitWhile:inQueue:maxMilliseconds:)!!ModifiedTraitDefinitionEvent reorganize!('accessing' oldTraitComposition traitComposition)('printing' printOn:)('testing' anyChanges isTraitCompositionModified)!!ModifiedClassDefinitionEvent reorganize!('*Kernel-Classes' anyChanges isTraitCompositionModified oldTraitComposition printOn: traitComposition)('*MinimalMorphic-accessing' oldSuperclass)('accessing' classVarNames instVarNames oldClassVarNames oldInstVarNames oldSharedPools sharedPools superclass)('testing' areClassVarsModified areInstVarsModified areSharedPoolsModified isSuperclassModified)!!MailComposition class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' sendMailMessage: unload)!!CPUWatcher class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' current currentWatcherProcess dumpTallyOnTranscript isMonitoring monitorPreferenceChanged shutDown startMonitoring startMonitoringPeriod:rate:threshold: startUp stopMonitoring)!!Model class reorganize!('*MinimalMorphic-toolbuilder' buildWith:)!!MailComposition reorganize!('MorphicExtras-interface' openInMVC)('access' messageText messageText: smtpServer submit)('interface' addAttachment menuGet:shifted: open openInMorphic saveContentsInFile sendMailMessage:)('private' breakLines:atWidth: breakLinesInMessage: perform:orSendTo:)!!DualChangeSorter reorganize!('initialization' morphicWindow okToChange open openAsMorph release)('other' isLeftSide: labelString modelWakeUp other:)('toolbuilder' buildWith:)!!CPUWatcher reorganize!('accessing' isMonitoring tally threshold threshold: watcherProcess)('porcine capture' catchThePig: findThePig openMVCWindowForSuspendedProcess: openMorphicWindowForSuspendedProcess: openWindowForSuspendedProcess:)('process operations' debugProcess: debugProcess:fromMenu: resumeProcess:fromMenu: terminateProcess:fromMenu:)('startup-shutdown' monitorProcessPeriod:sampleRate: startMonitoring stopMonitoring)!!Model reorganize!('*MinimalMorphic-*Tools' addItem:)('*MinimalMorphic-dependents' containingWindow topView)('*services-base' requestor)('copying' veryDeepFixupWith: veryDeepInner:)('dependents' canDiscardEdits hasUnacceptedEdits myDependents myDependents:)('keyboard' arrowKey:from:)('menus' perform:orSendTo: selectedClass step trash trash:)!!MixedSound reorganize!('accessing' duration isStereo sounds)('composition' + add: add:pan: add:pan:volume:)('copying' copy copySounds)('initialization' initialize)('sound generation' doControl mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining stopGracefully)!!MimeConverter class reorganize!('*MinimalMorphic-convenience' forEncoding:)('convenience' mimeDecode:as: mimeDecode:to: mimeEncode: mimeEncode:to:)!!MidiPrimTester reorganize!('primitives' primMIDIClosePort: primMIDIGetClock primMIDIGetPortCount primMIDIGetPortDirectionality: primMIDIGetPortName: primMIDIOpenPort:readSemaIndex:interfaceClockRate: primMIDIParameterGet: primMIDIParameterSet:to: primMIDIReadPort:into: primMIDIWritePort:from:at:)('tests' getDriverParameters getInputForSeconds:onPort: getPortList playDrumRoll:count:onPort: playNoteOnPort: playScale:onPort:)('private' bufferTimeStampFrom: canTurnOnParameter: openPort:andDo:)!!MethodReference reorganize!('*Kernel-Traits' actualClass)('*OB-Standard' asNode)('*fixUnderscores' fixUnderscores)('*monticello' asMethodDefinition category compiledMethod isLocalSelector source timeStamp)('*packageinfo-base' sourceCode)('comparisons' hash <= =)('queries' asStringOrText classIsMeta classSymbol isValid methodSymbol printOn: sourceString)('setting' setClassAndSelectorIn: setClassSymbol:classIsMeta:methodSymbol:stringVersion: setClass:methodSymbol:stringVersion: setStandardClass:methodSymbol:)('string version' stringVersion stringVersion:)!!MethodProperties reorganize!('accessing' pragmas selector selector:)('copying' postCopy)('initialization' initialize)('properties' at: at:ifAbsentPut: at:ifAbsent: at:put: includesKey: removeKey: removeKey:ifAbsent:)('testing' isMethodProperties)('private' addPragma:)!!MethodFinder reorganize!('access' answers data expressions selectors)('arg maps' argMap makeAllMaps mapData permuteArgs thisData)('find a constant' allNumbers const constDiv constEquiv constLinear constMod constMult constPlus constUsingData1Value)('initialize' cleanInputs: copy:addArg: initialize initialize2 initialize3 load: noteDangerous organizationFiltered: test2: test3 testFromTuple: testRandom verify)('search' exceptions findMessage insertConstants search: searchForOne simpleSearch testPerfect:)!!MethodContext class reorganize!('*MinimalMorphic-closure support' myEnvFieldIndex)('instance creation' sender:receiver:method:arguments:)!!MethodContext reorganize!('*39Deprecated' answer: who)('*MinimalMorphic-accessing' removeSelf)('*MinimalMorphic-closure support' doItScope freeNamesAndValues isClosureContext myEnv:)('*MinimalMorphic-printing' printString)('*MinimalMorphic-private-exceptions' cannotReturn:)('accessing' blockHome finalBlockHome hasInstVarRef home isMethodContext method receiver tempAt: tempAt:put:)('closure support' asContext capturedTempNames contextTag freeNames isExecutingBlock myEnv tempsAndValues)('initialize-release' privRefresh privRefreshWith:)('printing' printDetails: printOn:)('private' instVarAt:put: setSender:receiver:method:arguments: startpc)('private-debugger' cachedStackTop cachesStack hideFromDebugger)('private-exceptions' isHandlerContext isUnwindContext receiver: restartWithNewReceiver: swapReceiver:)!!MethodCall reorganize!('argument access' setArgumentNamed:toValue:)('evaluation' evaluate everEvaluated lastValue)('initialization' receiver:methodInterface: receiver:methodInterface:initialArguments: valueOfArgumentNamed:)('method interface' ephemeralMethodInterface methodInterface methodInterface: methodInterfaceOrNil)!!Metaclass reorganize!('*MinimalMorphic-enumerating' allInstancesEverywhereDo:)('*MinimalMorphic-private' replaceObsoleteInstanceWith:)('*ob-standard-converting' asClassSideNode asNode)('accessing' allInstances basicLocalSelectors basicLocalSelectors: environment hasTraitComposition isSystemDefined name soleInstance traitComposition traitComposition:)('accessing parallel hierarchy' theMetaClass theNonMetaClass)('class hierarchy' addObsoleteSubclass: addSubclass: obsoleteSubclasses removeObsoleteSubclass: removeSubclass: subclasses subclassesDo: subclassesDoGently:)('compiling' acceptsLoggingOfCompilation bindingOf: possibleVariablesFor:continuedFrom: wantsChangeSetLogging wantsRecompilationProgressReported)('composition' assertConsistantCompositionsForNew: noteNewBaseTraitCompositionApplied:)('copying' copy veryDeepCopyWith:)('enumerating' allInstancesDo:)('fileIn/Out' definitionST80 fileOutInitializerOn: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing: nonTrivial objectForDataStream: storeDataOn:)('initialize-release' adoptInstance:from: instanceVariableNames: uses:instanceVariableNames:)('instance creation' new)('instance variables' addInstVarName: removeInstVarName:)('pool variables' classPool)('testing' canZapMethodDictionary isMeta isObsolete)!!MessageTally reorganize!('collecting leaves' bump: bump:fromSender: into:fromSender: leavesInto:fromSender:)('comparing' < = > hash isPrimitives sonsOver: species)('initialize-release' close initialize spyEvery:on: spyEvery:onProcess:forMilliseconds:)('printing' fullPrintOn:tallyExact:orThreshold: leavesPrintOn:tallyExact:orThreshold: printOn: printOn:total:totalTime:tallyExact: printSenderCountsOn: treePrintOn:tabs:thisTab:total:totalTime:tallyExact:orThreshold:)('printing format' maxClassNameSize maxClassNameSize: maxClassPlusSelectorSize maxClassPlusSelectorSize: maxTabs maxTabs:)('reporting' report: report:cutoff: reportGCStatsOn: tally time)('tallying' bumpBy: tally:by: tallyPath:by:)('private' class:method: copyWithTally: method primitives:)!!MessageSend reorganize!('*MinimalMorphic-evaluating' valueWithEnoughArguments:)('*eToys-tiles' asTilesIn: asTilesIn:globalNames: stringFor:)('*omnibrowser-evaluating' valueWithPossibleArgs:)('accessing' arguments arguments: receiver receiver: selector selector:)('comparing' = hash)('converting' asMinimalRepresentation)('evaluating' value valueWithArguments:)('printing' printOn:)('testing' isMessageSend isValid)('private' collectArguments:)!!Message reorganize!('*MinimalMorphic-private' lookupClass:)('accessing' argument argument: arguments lookupClass selector sends:)('as yet unclassified' pushReceiver)('printing' printOn: storeOn:)('sending' sendTo: sentTo:)('stub creation' createStubMethod)('private' setSelector: setSelector:arguments:)!!MenuIcons class reorganize!('*MinimalMorphicInitialization' initializeClass)('MorphicExtras-accessing - icons' backIcon forwardIcon helpIcon openIcon)('accessing - icons' blankIcon)('class initialization' initializeIcons initializeTranslations startUp:)('icons creation' base64ContentsOfFileNamed: createIconMethodsFromDirectory:)('import/export' exportAllIconsAsGif exportAllIconsAsPNG exportIcon:asGifNamed: exportIcon:asPNGNamed: importAllIconNamed: importAllIcons importIconNamed: methodEnd methodStart:)('menu decoration' decorateMenu: iconForMenuItem: itemsIcons)('private - icons' backIconContents blankIconOfWidth: configurationIcon configurationIconContents confirmIcon confirmIconContents forwardIconContents fullScreenIcon fullScreenIconContents helpIconContents homeIcon homeIconContents jumpIcon jumpIconContents loadProjectIcon loadProjectIconContents objectCatalogIcon objectCatalogIconContents objectsIcon objectsIconContents openIconContents paintIcon paintIconContents projectIcon projectIconContents publishIcon publishIconContents smallAuthoringToolsIcon smallAuthoringToolsIconContents smallBackIcon smallBackIconContents smallCancelIcon smallCancelIconContents smallCenteredIcon smallCenteredIconContents smallConfigurationIcon smallConfigurationIconContents smallCopyIcon smallCopyIconContents smallCutIcon smallCutIconContents smallDebugIcon smallDebugIconContents smallDeleteIcon smallDeleteIconContents smallDoItIcon smallDoItIconContents smallExpertIcon smallExpertIconContents smallExportIcon smallExportIconContents smallFindIcon smallFindIconContents smallFontsIcon smallFontsIconContents smallForwardIcon smallForwardIconContents smallFullScreenIcon smallFullScreenIconContents smallHelpIcon smallHelpIconContents smallHomeIcon smallHomeIconContents smallInspectItIcon smallInspectItIconContents smallJumpIcon smallJumpIconContents smallJustifiedIcon smallJustifiedIconContents smallLanguageIcon smallLanguageIconContents smallLeftFlushIcon smallLeftFlushIconContents smallLoadProjectIcon smallLoadProjectIconContents smallNewIcon smallNewIconContents smallObjectCatalogIcon smallObjectCatalogIconContents smallObjectsIcon smallObjectsIconContents smallOkIcon smallOkIconContents smallOpenIcon smallOpenIconContents smallPaintIcon smallPaintIconContents smallPasteIcon smallPasteIconContents smallPrintIcon smallPrintIconContents smallProjectIcon smallProjectIconContents smallPublishIcon smallPublishIconContents smallQuitIcon smallQuitIconContents smallRedoIcon smallRedoIconContents smallRemoteOpenIcon smallRemoteOpenIconContents smallRightFlushIcon smallRightFlushIconContents smallSaveAsIcon smallSaveAsIconContents smallSaveIcon smallSaveIconContents smallSelectIcon smallSelectIconContents smallSqueakIcon smallSqueakIconContents smallUndoIcon smallUndoIconContents smallUpdateIcon smallUpdateIconContents smallVolumeIcon smallVolumeIconContents smallWindowIcon smallWindowIconContents squeakIcon squeakIconContents volumeIcon volumeIconContents windowIcon windowIconContents)!!MatrixTransform2x3 class reorganize!('*nebraska-instance creation' fromRemoteCanvasEncoding:)('instance creation' identity new newFromStream: transformFromLocal:toGlobal: withAngle: withOffset: withRotation: withScale:)!!MatrixTransform2x3 reorganize!('*MinimalMorphic-initialize' setIdentiy)('*MinimalMorphic-transforming points' transformDirection:)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' at: at:put: inverseTransformation offset offset:)('comparing' hash =)('composing' composedWithLocal: composedWithLocal:into:)('converting' asMatrixTransform2x3)('element access' a11 a11: a12 a12: a13 a13: a21 a21: a22 a22: a23 a23:)('objects from disk' byteSize bytesPerBasicElement bytesPerElement restoreEndianness writeOn:)('printing' printOn:)('testing' isIdentity isMatrixTransform2x3 isPureTranslation)('transforming points' globalPointToLocal: invertPoint: localPointToGlobal: transformPoint:)('transforming rects' globalBoundsToLocal: globalBounds:toLocal: localBoundsToGlobal: localBounds:toGlobal:)('private' setAngle: setOffset: setScale:)!!Matrix class reorganize!('*MinimalMorphic-instance creation' column: diagonal: identity: new:tabulate: ones: row:)('instance creation' new: new:element: rows:columns: rows:columns:element: rows:columns:tabulate: zeros:)('private' rows:columns:contents:)!!Matrix reorganize!('*MinimalMorphic-accessing' at:at:incrementBy: swap:at:with:at:)('*MinimalMorphic-accessing rows/columns' atColumn: atColumn:put: diagonal swapColumn:withColumn: swapRow:withRow:)('*MinimalMorphic-accessing submatrices' atRows:columns: atRows:to:columns:to: atRows:to:columns:to:ifInvalid: atRows:to:columns:to:put:)('*MinimalMorphic-copying' ,,)('*MinimalMorphic-enumerating' indicesDo: indicesInject:into: with:inject:into:)('accessing' anyOne at:at: at:at:ifInvalid: at:at:put: atAllPut: atRandom atRandom: columnCount identityIndexOf: identityIndexOf:ifAbsent: indexOf: indexOf:ifAbsent: replaceAll:with: rowCount size)('accessing rows/columns' atRow: atRow:put: transposed)('adding' add:)('arithmetic' +* preMultiplyByArray: preMultiplyByMatrix:)('comparing' = hash)('converting' asArray asBag asByteArray asCharacterSet asFloatArray asIdentitySet asIntegerArray asOrderedCollection asSet asSortedArray asSortedCollection asSortedCollection: asWordArray readStream)('copying' , copy shallowCopy shuffled shuffledBy:)('enumerating' collect: difference: do: indicesCollect: intersection: reject: select: with:collect: with:do: withIndicesCollect: withIndicesDo: withIndicesInject:into:)('printing' storeOn:)('removing' remove:ifAbsent:)('testing' identityIncludes: includes: includesAllOf: includesAnyOf: isSequenceable occurrencesOf:)('private' indexForRow:andColumn: privateContents rowAndColumnForIndex: rows:columns:contents:)!!MailSender class reorganize!('accessing' smtpServer userName)('communication' sendMessage:)('settings' setSmtpServer setUserName)('testing' isSmtpServerSet)!!MailMessage class reorganize!('instance creation' empty from:)('preferences' omittedHeaderFields)('testing' selfTest)('utilities' dateStampNow generateSeparator)!!MailMessage reorganize!('*MinimalMorphic-printing/formatting' viewBody viewImageInBody)('access' body bodyText cc date fields from name subject text time to)('fields' canonicalFields fieldNamed:ifAbsent: fieldsNamed:ifAbsent: fieldsNamed:separatedBy: hasFieldNamed: removeFieldNamed: rewriteFields:append:)('initialize-release' body: from: initialize setField:to: setField:toString:)('multipart' addAttachmentFrom:withName: atomicParts attachmentSeparator decoderClass makeMultipart parseParts parts save)('parsing' fieldsFrom:do: headerFieldsNamed:do: readDateFrom: readStringLineFrom: reportField:to: skipWeekdayName: timeFrom:)('printing/formatting' asSendableText bodyTextFormatted cleanedHeader excerpt format formattedText printOn: regenerateBodyFromParts regenerateText)('testing' containsViewableImage selfTest)!!MailAddressToken reorganize!('access' text type)('printing' printOn:)('private' type:text:)!!MacUnicodeInputInterpreter reorganize!('accessing' keyValueIndex)('conversion' japaneseSpecialMark:)('initialization' initialize)('keyboard' nextCharFrom:firstEvt:)('version check' majorMinorBuildFrom:satisfies:)!!MacFileDirectory class reorganize!('*MinimalMorphic-class initialization' initializeTypeToMimeMappings)('*network-uri' privateFullPathForURI:)('class initialization' isAbsolute:)('platform specific' isActiveDirectoryClass isCaseSensitive makeAbsolute: makeRelative: maxFileNameLength pathNameDelimiter)!!MIMEHeaderValue reorganize!('accessing' mainValue mainValue: parameterAt:put: parameters parameters:)('printing' asHeaderValue printOn:)!!MIMEDocument class reorganize!('content-types' contentTypeFormData contentTypeHtml contentTypeMultipart contentTypePlainText contentTypeXml guessTypeFromExtension: guessTypeFromName: linkExtension:toType: resetMIMEdatabase)('initialize-release' defaultMIMEdatabase extendedMIMEdatabase readMIMEdatabaseFrom:)('instance creation' content: contentType:content: contentType:content:url: defaultContentType)!!MIMEDocument reorganize!('*MinimalMorphic-*MorphicExtras-accessing' url)('accessing' content contentStream contentType contents mainType parts subType type)('as yet unclassified' isMultipartAlternative)('converting' withUrl:)('printing' printOn:)('testing' isGif isJpeg isMultipart isPng isPnm)('private' privateContent: privateMainType: privateSubType: privateUrl:)!!MIDISynthChannel reorganize!('accessing' instrument instrument: masterVolume masterVolume: muted muted: pan pan:)('initialization' initialize)('midi dispatching' channelPressure: control:value: doChannelCmd:byte1:byte2: key:pressure: keyDown:vel: keyUp:vel: pitchBend: programChange:)('other' adjustPitch: convertVelocity: newVolume:)!!MIDIScore reorganize!('accessing' durationInTicks tempoMap tempoMap: ticksPerQuarterNote ticksPerQuarterNote: trackInfo trackInfo: tracks tracks:)('ambient track' addAmbientEvent: ambientEventAfter:ticks: ambientTrack eventMorphsDo: eventMorphsWithTimeDo: removeAmbientEventWithMorph:)('editing' appendEvent:fullDuration:at: cutSelection: eventForTrack:after:ticks: gridToNextQuarterNote: gridToQuarterNote: gridTrack:toQuarter:at: insertEvents:at: jitterStartAndEndTimesBy:)('initialization' initialize)('playing' pauseFrom: resetFrom: resumeFrom:)!!MIDIInputParser class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' on:)!!MIDIInputParser reorganize!('accessing' midiPort midiPort:)('midi filtering' ignoreChannel: ignoreCommand: ignoreSysEx: ignoreTuneAndRealTimeCommands noFiltering recordOnlyChannels:)('midi monitor' monitor printCmd:with:with:)('real-time processing' midiDo: midiDoUntilMouseDown:)('recording' clearBuffers processMIDIData received)('private-other' setMIDIPort:)('private-state machine' endSysExclusive: ignoreOne: ignoreTwo: ignoreZero: processByte: recordOne: recordTwo: recordZero: startSysExclusive: undefined:)!!MCWriteOnlyRepository reorganize!('*MinimalMorphic-as yet unclassified' morphicOpen:)('as yet unclassified' includesVersionNamed: versionWithInfo:ifAbsent:)!!MCWorkingCopyBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' new open)!!MCWorkingCopy reorganize!('accessing' ancestors ancestry clearRequiredPackages currentVersionInfo description needsSaving requirePackage: requiredPackages versionInfo:)('migration' updateInstVars)('operations' adopt: backportChangesTo: changesRelativeToRepository: loaded: merge: merged: newVersion newVersionWithName:message: notifyNoCommonAncestorWith: unload)('repositories' repositoryGroup repositoryGroup:)('private' findSnapshotWithVersionInfo: initialize nextVersionName possiblyNewerVersions possiblyNewerVersionsIn: requestVersionNameAndMessageWithSuggestion: uniqueVersionName versionSeparator)!!MCVersionReader class reorganize!('*MinimalMorphic-*monticello-file services' mergeVersionStream: openVersionFromStream:)('*MinimalMorphic-file services' openVersionFile: unload)('*MinimalMorphicInitialization' initializeClass)('*monticello-file services' loadVersionStream:fromDirectory:)('*monticello-file services-override-override' serviceLoadVersion serviceMergeVersion serviceOpenVersion)('file services' fileReaderServicesForFile:suffix: loadVersionFile: mergeVersionFile: services)('reading' file:streamDo: on:fileName: versionFromFile: versionFromStream: versionInfoFromStream:)('testing' canReadFileNamed:)!!MCVersionNotification reorganize!('*MinimalMorphic-as yet unclassified' notify:)('as yet unclassified' fromAddress initializeWithVersion:repository: messageText messageTo:)!!MCVersionNameAndMessageRequest reorganize!('*MinimalMorphic-as yet unclassified' defaultAction)('as yet unclassified' suggestedName suggestedName:)!!MCVersionLoader reorganize!('checking' checkForModifications checkIfDepIsOlder: confirmMissingDependency: depAgeIsOk: warnAboutLosingChangesTo:)('initialize-release' initialize)('loading' addDependency: addVersion: load)!!MCVersionInfo reorganize!('accessing' message name summary summaryHeader timeStamp timeString)('comparing' = hash)('converting' asDictionary)('initialize-release' initializeWithName:id:message:date:time:author:ancestors:stepChildren:)('pillaging' author date id time)('printing' printOn:)('private' hasID:)!!MCVersionDependency reorganize!('accessing' package repositoryGroup versionInfo)('comparing' = hash)('initialize-release' initializeWithPackage:info:)('resolving' resolve)('testing' isCurrent isFulfilled isFulfilledBy: isFulfilledByAncestors isFulfilledByAncestorsOf: isOlder)!!MCDiffyVersion class reorganize!('instance creation' package:info:dependencies:baseInfo:patch: package:info:snapshot:dependencies:baseVersion:)('name utilities' baseNameFrom: canonicalNameFor: nameForVer:base: verNameFrom:)!!MCVersion reorganize!('*MinimalMorphic-actions' browse open)('accessing' changes dependencies fileName info package snapshot summary workingCopy writerClass)('actions' addToCache adopt fileOutOn: load load:fromDirectory: merge)('converting' asDiffAgainst:)('enumerating' allAvailableDependenciesDo: allDependenciesDo: allDependenciesDo:ifUnresolved: allDependenciesNotIn:do:ifUnresolved: withAllDependenciesDo: withAllDependenciesDo:ifUnresolved:)('initialize-release' initializeWithPackage:info:snapshot:dependencies: setPackage:info:snapshot:dependencies:)('printing' printOn:)('testing' canOptimizeLoading hasPostscript hasPreamble isCacheable isDiffy)!!MCVariableDefinition reorganize!('accessing' name name:)('as yet unclassified' printOn:)('comparing' = hash)('testing' isClassInstanceVariable isClassInstanceVariableDefinition isClassVariable isInstanceVariable isInstanceVariableDefinition isPoolImport)!!MCTraitDefinition reorganize!('accessing' classTraitCompositionString traitComposition)('comparing' hash requirements)('initializing' initializeWithName:traitComposition:category:comment:commentStamp:)('installing' load)('printing' printDefinitionOn:)('testing' hasClassInstanceVariables hasTraitComposition)('visiting' = accept: createClass)!!MCSubDirectoryRepository reorganize!('as yet unclassified' findFullNameForReading: findFullNameForWriting: readStreamForFileNamed:do: writeStreamForFileNamed:replace:do:)('enumeration' allDirectories allFileNames)('user interface' description)!!MCStWriter reorganize!('visiting' visitClassDefinition: visitClassTraitDefinition: visitMetaclassDefinition: visitMethodDefinition: visitOrganizationDefinition: visitTraitDefinition:)('writing' chunkContents: writeCategory: writeClassComment: writeClassDefinition: writeDefinitions: writeMetaclassDefinition: writeMethodInitializer: writeMethodPostscript writeMethodPreamble: writeMethodSource: writeSnapshot:)!!MCSnapshotBrowser reorganize!('accessing' allClassNames extensionClassNames extensionsCategory methodsForSelectedClass methodsForSelectedClassCategory methodsForSelectedProtocol packageClassNames packageClasses selectedClass selectedClassOrMetaClass selectedMessageCategoryName selectedMessageName snapshot:)('listing' categoryList classList methodList protocolList visibleCategories visibleClasses visibleMethods visibleProtocols)('menus' categoryListMenu: classListMenu: inspectSelection loadCategorySelection loadClassSelection loadMethodSelection loadProtocolSelection methodListMenu: protocolListMenu:)('morphic ui' buttonSpecs defaultExtent defaultLabel widgetSpecs)('selecting' categorySelection categorySelection: classSelection classSelection: methodSelection methodSelection: protocolSelection protocolSelection:)('switch' signalSwitchChanged switchBeClass switchBeComment switchBeInstance switchIsClass switchIsComment switchIsInstance)('text' annotations annotations: classCommentString classDefinitionString text text:)!!MCRepositoryInspector reorganize!('as yet unclassified' hasVersion load refresh setRepository:workingCopy: summary version)('morphic ui' buttonSpecs defaultExtent defaultLabel packageList packageListMenu: packageSelection packageSelection: sortedVersions versionList versionListMenu: versionSelection versionSelection: widgetSpecs)!!MCHttpRepository class reorganize!('*MinimalMorphic-as yet unclassified' fillInTheBlankRequest morphicConfigure)('as yet unclassified' creationTemplate creationTemplateLocation:user:password: description location:user:password:)('class initialization' clearPasswords)!!MCGOODSRepository class reorganize!('*MinimalMorphic-as yet unclassified' fillInTheBlankRequest morphicConfigure)('as yet unclassified' creationTemplate description host:port:)!!MCFtpRepository class reorganize!('*MinimalMorphic-as yet unclassified' fillInTheBlankRequest morphicConfigure)('as yet unclassified' creationTemplate description host:directory:user:password: templateCreationSelector)!!MCDirectoryRepository class reorganize!('*MinimalMorphic-instance creation' morphicConfigure)('instance creation' description)!!MCRepository class reorganize!('*MinimalMorphic-as yet unclassified' fillInTheBlankConfigure fillInTheBlankConfigure: fillInTheBlankRequest morphicConfigure)('as yet unclassified' allConcreteSubclasses creationTemplate description isAbstract new)('class initialization' initialize)('external settings' fetchExternalSettingsIn: releaseExternalSettings settingsFileName)!!MCHttpRepository reorganize!('*MinimalMorphic-as yet unclassified' password)('as yet unclassified' asCreationTemplate location: locationWithTrailingSlash parseFileNamesFromStream: password: urlForFileNamed: user user: userAndPasswordFromSettingsDo: versionReaderForFileNamed: versionReaderForFileNamed:do:)('required' allFileNames description flushCache readStreamForFileNamed:do: writeStreamForFileNamed:replace:do:)!!MCGOODSRepository reorganize!('*MinimalMorphic-as yet unclassified' morphicOpen:)('as yet unclassified' basicStoreVersion: db description host: packages port: root versionWithInfo:ifAbsent: versionsAvailableForPackage:)!!MCFtpRepository reorganize!('as yet unclassified' clientDo: directory: host: parseDirectoryListing: password: user:)('required' allFileNames description readStreamForFileNamed:do: writeStreamForFileNamed:replace:do:)!!MCFileBasedRepository reorganize!('*MinimalMorphic-as yet unclassified' morphicOpen:)('as yet unclassified' allFileNames allFileNamesForVersionNamed: allFileNamesOrCache allVersionNames basicStoreVersion: cache cacheAllFileNamesDuring: cachedFileNames canReadFileNamed: closestAncestorVersionFor:ifNone: filterFileNames:forVersionNamed: flushCache includesVersionNamed: loadVersionFromFileNamed: loadVersionInfoFromFileNamed: maxCacheSize notifyList possiblyNewerVersionsOfAnyOf: readableFileNames resizeCache: versionFromFileNamed: versionInfoFromFileNamed: versionNameFromFileName: versionReaderForFileNamed:do: versionWithInfo:ifAbsent: writeStreamForFileNamed:do:)!!MCDictionaryRepository reorganize!('*MinimalMorphic-as yet unclassified' morphicOpen:)('as yet unclassified' = allVersionInfos basicStoreVersion: closestAncestorVersionFor:ifNone: description description: dictionary dictionary: includesVersionNamed: includesVersionWithInfo: initialize sortedVersionInfos versionWithInfo:ifAbsent:)!!MCRepository reorganize!('*MinimalMorphic-interface' morphicOpen morphicOpen: openAndEditTemplateCopy)('as yet unclassified' = alwaysStoreDiffs asCreationTemplate basicStoreVersion: closestAncestorVersionFor:ifNone: creationTemplate creationTemplate: description doAlwaysStoreDiffs doNotAlwaysStoreDiffs hash initialize notificationForVersion: notifyList possiblyNewerVersionsOfAnyOf: prepareVersionForStorage: printOn: sendNotificationsForVersion: storeVersion:)('interface' includesVersionNamed: versionWithInfo: versionWithInfo:ifAbsent:)('testing' isValid)!!MCRemoval reorganize!('accessing' applyTo: baseDefinition definition fromSource sourceString summary summarySuffix targetClass targetDefinition toSource)('as yet unclassified' inverse isClassPatch)('initializing' intializeWithDefinition:)('testing' isRemoval)!!MCReader class reorganize!('instance creation' new on: on:name:)('testing' canReadFileNamed: concreteSubclasses isAbstract readerClassForFileNamed:)!!MCReader reorganize!('accessing' stream:)('lifecycle' initialize)!!MCModification reorganize!('accessing' applyTo: baseDefinition definition fromSource modification obsoletion summarySuffix targetClass targetDefinition toSource)('as yet unclassified' inverse isClassPatch printAnnotations:on:)('initializing' initializeWithBase:target:)('testing' isModification)!!MCAddition reorganize!('accessing' applyTo: baseDefinition definition fromSource sourceString summary targetClass targetDefinition toSource)('as yet unclassified' inverse isClassPatch)('initializing' intializeWithDefinition:)('testing' isAddition)!!MCPatchOperation reorganize!('accessing' annotations annotations: definition inverse prefixForOperation: printAnnotations:on: source sourceString sourceText summary summarySuffix)('as yet unclassified' isClassPatch targetClass)('comparing' <=)('testing' isAddition isModification isRemoval)!!MCPatchBrowser reorganize!('accessing' items list patch:)('as yet unclassified' annotations changeSetNameForInstall installSelection)('menus' methodListMenu:)('morphic ui' buttonSpecs defaultLabel perform:orSendTo: widgetSpecs)('selecting' invert selection selection:)('subclassResponsibility' selectedClass selectedClassOrMetaClass selectedMessageCategoryName selectedMessageName)('text' text text:)!!MCPatch reorganize!('*MinimalMorphic-ui' browse)('accessing' operations)('applying' applyTo:)('intializing' initializeWithBase:target: initializeWithOperations:)('querying' isEmpty)!!MCPackageManager reorganize!('accessing' modified modified: package packageInfo packageName packageNameWithStar)('initialize-release' initialize initializeWithPackage:)('operations' unregister)('system changes' classModified: classMoved: classRemoved: methodModified: methodMoved: methodRemoved: registerForNotifications registerForNotificationsFrom: systemChange: update:)!!MCPackageLoader reorganize!('patch ops' addDefinition: modifyDefinition:to: removeDefinition:)('public' installSnapshot: load loadWithName: loadWithNameLike: unloadPackage: updatePackage:withSnapshot:)('private' analyze basicLoad dependencyWarning errorDefinitionWarning flushChangesFile initialize obsoletionFor: orderDefinitionsForLoading: orderedAdditions provisions shouldWarnAboutErrors sorterForItems: tryToLoad: useChangeSetNamed:during: useNewChangeSetDuring: useNewChangeSetNamedLike:during: warnAboutDependencies warnAboutErrors)!!MCMockDependency reorganize!('accessing' children initializeWithTree: name)('comparing' = hash)('mocks' mockVersionInfo uuidForName:)('resolving' hasResolution resolve)!!MCMockClassA reorganize!('as yet classified' d)('boolean' falsehood moreTruth truth)('drag''n''drop' q)('numeric' a b c one two)!!MCMethodDefinition reorganize!('accessing' actualClass category classIsMeta className fullTimeStamp load selector source timeStamp)('annotations' printAnnotations:on:)('comparing' = hash requirements sortKey)('installing' isExtensionMethod isOverrideMethod postload scanForPreviousVersion unload)('printing' description fullClassName summary)('serializing' initializeWithClassName:classIsMeta:selector:category:timeStamp:source:)('testing' isCodeDefinition isInitializer isMethodDefinition)('visiting' accept:)!!MCMergeResolutionRequest reorganize!('*MinimalMorphic-as yet unclassified' defaultAction)('as yet unclassified' merger merger:)!!MCMczWriter reorganize!('accessing' format snapshotWriterClass zip)('initializing' initialize)('serializing' serializeDefinitions: serializeInBinary: serializePackage: serializeVersionInfo:)('visiting' writeDefinitions: writeFormat writePackage: writePostscript: writePreamble: writeResources: writeSnapshot: writeVersion: writeVersionDependency: writeVersionInfo:)('writing' addString:at: flush)!!MCMcmWriter class reorganize!('accessing' readerClass)('writing' fileOut:on:)!!MCFrontier reorganize!('accessing' frontier)('advancing' remove: removeAll:)('initialization' frontier:bag:)!!MCFileRepositoryInspector class reorganize!('*MinimalMorphicInitialization' initializeClass)('as yet unclassified' order order: repository:workingCopy:)('class initialization' migrateInstances)!!MCFileRepositoryInspector reorganize!('as yet unclassified' load merge refresh repository setRepository:workingCopy:)('morphic ui' buttonSpecs defaultExtent defaultLabel hasVersion order: orderSpecs orderString: packageHighlight: packageList packageListMenu: packageSelection packageSelection: version versionHighlight: versionInfo versionList versionListMenu: versionSelection versionSelection: versionSummary widgetSpecs)!!MCDependencySorter reorganize!('accessing' externalRequirements itemsWithMissingRequirements)('building' add: addAll: addExternalProvisions:)('initialize-release' initialize)('sorting' orderedItems)('private' addProvision: addRequirement:for: addRequirements:for: addToOrder: ignoreTest itemsRequiring: removeRequirement: unresolvedRequirementsFor:)!!MCClassDefinition class reorganize!('instance creation' name:superclassName:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:type:comment:commentStamp: name:superclassName:traitComposition:classTraitComposition:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:type:comment:commentStamp:)('obsolete' name:superclassName:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:comment: name:superclassName:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:type:comment: name:superclassName:category:instVarNames:comment:)!!MCClassDefinition reorganize!('accessing' actualClass category classInstVarNames className classTraitComposition classTraitCompositionString classVarNames comment commentStamp description instVarNames poolDictionaries selectVariables: sortKey superclassName traitComposition traitCompositionString type variables)('annotations' printAnnotations:on:)('comparing' hash provisions requirements)('initializing' addVariables:ofType: defaultCommentStamp)('installing' createClass load stringForVariablesOfType: unload)('printing' classInstanceVariablesString classVariablesString definitionString instanceVariablesString kindOfSubclass printDefinitionOn: sharedPoolsString source summary)('serializing' initializeWithName:superclassName:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:type:comment:commentStamp: storeDataOn:)('testing' hasClassInstanceVariables hasClassTraitComposition hasComment hasTraitComposition isClassDefinition isCodeDefinition)('visiting' = accept: initializeWithName:superclassName:traitComposition:classTraitComposition:category:instVarNames:classVarNames:poolDictionaryNames:classInstVarNames:type:comment:commentStamp:)!!MCDefinition reorganize!('accessing' provisions requirements)('annotations' annotations annotations: printAnnotations:on:)('comparing' <= = description fullTimeStamp hash isRevisionOf: isSameRevisionAs: sortKey)('installing' load loadOver: postload postloadOver: unload)('printing' printOn: summary)('testing' isClassDefinition isClassDefinitionExtension isMethodDefinition isOrganizationDefinition)!!MCConfigurationBrowser class reorganize!('*MinimalMorphicInitialization' initializeClass)('opening' open)!!MCConfigurationBrowser reorganize!('accessing' configuration configuration: dependencies dependencies: repositories repositories:)('actions' add down installMenu load loadMenu merge post remove store up updateMenu upgrade)('dependencies' addDependency checkDependencies checkMissing checkModified dependencyList selectedDependency selectedPackage)('description' description description:)('morphic ui' buttonSpecs defaultExtent dependencyMenu: pickName pickRepository pickRepositorySatisfying: pickWorkingCopiesSatisfying: repositoryMenu: widgetSpecs)('repositories' addRepository checkRepositories checkRepositoryTemplates repositoryList selectedRepository)('selection' changedButtons changedList dependencyIndex dependencyIndex: index index: list maxIndex repositoryIndex repositoryIndex: selectDependency: selectRepository: updateIndex)('testing' canMoveDown canMoveUp canRemove includesPackage:)('updating' updateFromImage updateFromRepositories)!!MCConfiguration class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' defaultLog defaultLog:)('converting' dependencyFromArray: dependencyToArray: repositoryFromArray: repositoryToArray:)('instance creation' fromArray:)('preferences' logToFile)!!MCConfiguration reorganize!('accessing' dependencies dependencies: fileName log log: name name: repositories repositories: summary writerClass)('actions' browse fileOutOn: load merge upgrade)('faking' changes info)('initialize' initialize)('testing' isCacheable)('updating' updateFromImage updateFromRepositories)('private' depsSatisfying:versionDo:displayingProgress: diffBaseFor: logError: logUpdate:with: logWarning: mustMerge: versionNamed:for:from:)!!MCChangeSelectionRequest reorganize!('*MinimalMorphic-as yet unclassified' defaultAction)('as yet unclassified' label label: patch patch:)!!LoopedSampledSound class reorganize!('*MinimalMorphicInitialization' initializeClass)('instance creation' fromAIFFFileNamed:mergeIfStereo: samples:loopEnd:loopLength:pitch:samplingRate: unloopedSamples:pitch:samplingRate:)!!LoopedSampledSound reorganize!('accessing' beUnlooped duration duration: firstSample firstSample: gain gain: isLooped isStereo leftSamples leftSamples: loopEnd loopLength originalSamplingRate perceivedPitch pitch pitch: rightSamples rightSamples: samples)('disk i/o' comeFullyUpOnReload: objectForDataStream:)('file i/o' storeSampleCount:bigEndian:on:)('initialization' addReleaseEnvelope computeSampleCountForRelease fromAIFFFileNamed:mergeIfStereo: fromAIFFFileReader:mergeIfStereo: initialize samples:loopEnd:loopLength:pitch:samplingRate: setPitch:dur:loudness: unloopedSamples:pitch:samplingRate:)('other' copyDownSampledLowPassFiltering: fftAt: findStartPointAfter: findStartPointForThreshold: highestSignificantFrequencyAt: indexOfFirstPointOverThreshold:)('sound generation' mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining stopAfterMSecs:)('private' downSampleLowPassFiltering: fftWindowSize:startingAt: normalizedResultsFromFFT:)!!Association reorganize!('*services-base-preferences' serviceUpdate)('accessing' key:value: value value:)('comparing' = hash)('filter streaming' byteEncode:)('objects from disk' objectForDataStream:)('printing' printOn: propertyListOn: storeOn:)('self evaluating' isSelfEvaluating)('testing' isSpecialWriteBinding isVariableBinding)!!LookupKey reorganize!('*MinimalMorphic-accessing' canAssign)('*MinimalMorphic-bindings' beReadOnlyBinding beReadWriteBinding)('accessing' key key: name)('bindings' beBindingOfType:announcing: beReadOnlyBindingAnnouncing: beReadWriteBindingAnnouncing: recompileBindingsAnnouncing:)('comparing' < = hash hashMappedBy: identityHashMappedBy:)('filter streaming' writeOnFilterStream:)('printing' printOn:)('testing' isVariableBinding)!!Locale class reorganize!('*MinimalMorphic-accessing' clipboadInterpreter currentPlatform:during: isoLocale: languageSymbol: switchAndInstallFontToID:)('*MinimalMorphic-notification' localeChanged)('*MinimalMorphic-platform specific' defaultEncodingName:)('accessing' current currentPlatform currentPlatform: isoLanguage: isoLanguage:isoCountry: localeID: stringForLanguageNameIs: switchTo: switchToID:)('class initialization' initialize initializePlatformEncodings platformEncodings)('notification' addLocalChangedListener: localeChangedListeners)('platform specific' defaultInputInterpreter)('system startUp' startUp:)('private' determineCurrentLocale initKnownLocales knownLocales migrateSystem)!!Locale reorganize!('*MinimalMorphic-accessing' isoLocale)('*MinimalMorphic-system primitives' primCurrencyNotation primCurrencySymbol primDST primDecimalSymbol primDigitGrouping primLongDateFormat primMeasurement primShortDateFormat primTimeFormat primTimezone primVMOffsetToUTC)('accessing' determineLocale determineLocaleID isoCountry isoLanguage languageEnvironment localeID localeID: printOn:)('system primitives' primCountry primLanguage)('private' fetchISO2Language)!!FileDirectoryWrapper reorganize!('accessing' balloonText contents hasContents icon)('as yet unclassified' balloonText: directoryNamesFor: setItem:name:model: settingSelector)('converting' asString)!!ListItemWrapper reorganize!('accessing' balloonText contents hasContents highlightingColor icon preferredColor setItem: setItem:model:)('as yet unclassified' acceptDroppingObject: canBeDragged handlesMouseOver: hasEquivalentIn: sendSettingMessageTo: settingSelector wantsDroppedObject:)('converting' asString withoutListWrapper)!!Bezier3Segment class reorganize!('examples' example1 example2)('instance creation' from:to: from:via:and:to:)('utilities' convertBezier3ToBezier2: makeEllipseSegments: makeEllipseSegments:count: makePieSegment:from:to: makePieSegments:from:to: makeUnitPieSegmentFrom:to: makeUnitPieSegmentWith:and:)!!LineSegment class reorganize!('geometry' from:to:via: fromPoints:)('instance creation' controlPoints: from:to:)('utilities' intersectFrom:with:to:with:)!!Bezier3Segment reorganize!('accessing' bounds degree length valueAt: via1 via1: via2 via2:)('bezier clipping' bezierClipHeight:)('converting' asBezier2Points: asBezier2Segments asBezierShape asBezierShape: asPointArray asTangentSegment bezier2SegmentCount:)('initialization' from:via:and:to: initializeFrom:)('vector functions' controlPoints controlPointsDo: lineSegments:do: lineSegmentsDo: outlineSegment: tangentAt: tangentAtEnd tangentAtMid tangentAtStart)('private' bezier2SegmentCount)!!Bezier2Segment reorganize!('accessing' bounds degree via)('bezier clipping' bezierClipHeight:)('converting' asBezier2Points: asBezier2Segment asBezier3Segment asIntegerSegment asTangentSegment)('initialize' from:to: from:to:via: from:to:withMidPoint: from:to:withMidPoint:at: initializeFrom:)('printing' printOn: printOnStream:)('testing' hasZeroLength isBezier2Segment isStraight)('vector functions' controlPoints controlPointsDo: curveFrom:to: end: length lineSegments:do: lineSegmentsDo: outlineSegment: parameterAtExtreme: parameterAtExtremeX parameterAtExtremeY roundTo: start: tangentAt: tangentAtEnd tangentAtMid tangentAtStart valueAt:)!!LineSegment reorganize!('accessing' bounds degree direction end end: start start:)('bezier clipping' bezierClipCurve: bezierClipCurve:epsilon: bezierClipInterval:)('converting' asBezier2Points: asBezier2Segment asBezier2Segments: asIntegerSegment asLineSegment asTangentSegment reversed)('initialize' from:to: initializeFrom:)('intersection' intersectionWith: roundTo:)('printing' printOn:)('testing' hasZeroLength isArcSegment isBezier2Segment isLineSegment isStraight)('vector functions' asBezier2Curves: controlPoints controlPointsDo: curveFrom:to: length lineSegments:do: lineSegmentsDo: sideOfPoint: tangentAt: tangentAtEnd tangentAtMid tangentAtStart valueAt: valueAtEnd valueAtStart)('private' debugDraw debugDrawAt:)!!LimitingLineStreamWrapper reorganize!('*MinimalMorphic-accessing' lastLineRead peekLine)('accessing' delimiter: limitingBlock: linesUpToEnd next nextLine skipThisLine upToEnd updatePosition)('printing' printOn:)('stream protocol' close)('testing' atEnd)('private' setStream:delimiter:)!!LayoutProperties reorganize!('accessing' disableTableLayout disableTableLayout: hResizing hResizing: vResizing vResizing:)('converting' asTableLayoutProperties)('initialize' initialize initializeFrom:)('table defaults' cellInset cellPositioning cellSpacing layoutInset listCentering listDirection listSpacing maxCellSize minCellSize reverseTableCells rubberBandCells wrapCentering wrapDirection)('testing' includesTableProperties)!!LayoutPolicy reorganize!('layout' flushLayoutCache layout:in: minExtentOf:in:)('testing' isProportionalLayout isTableLayout)('utilities' indexForInserting:at:in:)!!LayoutFrame reorganize!('accessing' bottomFraction bottomFraction: bottomFraction:offset: bottomOffset bottomOffset: leftFraction leftFraction: leftFraction:offset: leftOffset leftOffset: rightFraction rightFraction: rightFraction:offset: rightOffset rightOffset: topFraction topFraction: topFraction:offset: topOffset topOffset:)('layout' layout:in: minExtentFrom:)('objects from disk' convertToCurrentVersion:refStream: negateBottomRightOffsets)!!Latin2Environment class reorganize!('rendering support' flapTabTextFor: flapTabTextFor:in: isBreakableAt:in:)('subclass responsibilities' clipboardInterpreterClass defaultEncodingName fileNameConverterClass inputInterpreterClass leadingChar supportedLanguages systemConverterClass)!!Latin1 class reorganize!('*MinimalMorphic-accessing - displaying' printingDirection)('accessing - displaying' isBreakableAt:in:)('character classification' isLetter:)('class methods' emitSequenceToResetStateIfNeededOn:forState: initialize leadingChar nextPutValue:toStream:withShiftSequenceIfNeededForTextConverterState:)('private' nextPutRightHalfValue:toStream:withShiftSequenceIfNeededForTextConverterState:)!!LanguageEnvironment class reorganize!('*MinimalMorphic-class initialization' startUp)('accessing' canBeGlobalVarInitial: canBeNonGlobalVarInitial: currentPlatform digitValue: isCharset isDigit: isLetter: isLowercase: isUppercase: localeID:)('class initialization' clearDefault initialize localeChanged resetKnownEnvironments)('language methods' scanSelector)('public query' defaultClipboardInterpreter defaultEncodingName defaultFileNameConverter defaultInputInterpreter defaultSystemConverter)('rendering support' flapTabTextFor: flapTabTextFor:in: isBreakableAt:in:)('subclass responsibilities' clipboardInterpreterClass fileNameConverterClass inputInterpreterClass leadingChar supportedLanguages systemConverterClass)('private' initKnownEnvironments knownEnvironments)!!LanguageEnvironment reorganize!('*MinimalMorphic-fonts support' fontDownload fontDownloadUrls installFont)('*MinimalMorphic-utilities' setupSqueaklandSpecifics)('accessing' fontEncodingName isoCountry isoLanguage leadingChar localeID)('fonts support' fontFileName fontFullName isFontAvailable removeFonts)('initialize-release' localeID:)('utilities' checkPhrase:translation:)!!LRUCache class reorganize!('*MinimalMorphic-testing' test2)('instance creation' size:factory:)('testing' test)!!JPEGReadWriter2 reorganize!('primitives' primImageHeight: primImageWidth: primJPEGCompressStructSize primJPEGDecompressStructSize primJPEGErrorMgr2StructSize primJPEGPluginIsPresent primJPEGReadHeader:fromByteArray:errorMgr: primJPEGReadImage:fromByteArray:onForm:doDithering:errorMgr: primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr:)('public access' compress:quality: imageExtent: nextImage nextImageSuggestedDepth: nextPutImage: nextPutImage:quality:progressiveJPEG: uncompress:into: uncompress:into:doDithering:)('testing' isPluginPresent understandsImageFormat)!!JPEGReadWriter class reorganize!('*MinimalMorphicInitialization' initializeClass)('image reading/writing' typicalFileExtensions understandsImageFormat:)!!JPEGReadWriter reorganize!('accessing' hACTable hDCTable qTable)('colorspace conversion' colorConvertFloatYCbCrMCU colorConvertGrayscaleMCU colorConvertIntYCbCrMCU colorConvertMCU primColorConvertGrayscaleMCU primColorConvertGrayscaleMCU:bits:residuals:ditherMask: primColorConvertIntYCbCrMCU primColorConvertYCbCrMCU:bits:residuals:ditherMask: sampleFloatRangeLimit: sampleRangeLimit:)('dct' dctFloatRangeLimit: idctBlockFloat:component: idctBlockInt:component: idctBlockInt:qt: idctMCU primIdctBlockInt:component: primIdctInt:qt: scaleQuantizationTable:)('error handling' notSupported:)('huffman encoding' decodeBlockInto:component:dcTable:acTable: decodeMCU getBits: primDecodeBlockInto:component:dcTable:acTable:stream: processRestart scaleAndSignExtend:inFieldWidth:)('marker parsing' initialSOSSetup okToIgnoreMarker: parseAPPn parseDecoderRestartInterval parseFirstMarker parseHuffmanTable parseNOP parseNextMarker parseQuantizationTable parseStartOfFile parseStartOfInput parseStartOfScan perScanSetup skipMarker)('preferences' useFloatingPoint)('public access' decompressionTest nextImage nextImageDitheredToDepth: setStream:)('testing' understandsImageFormat)('private' on:)!!JPEGHuffmanTable class reorganize!('*MinimalMorphicInitialization' initializeClass)('constants' lookahead)!!InternetConfiguration class reorganize!('initialize-release' initialize)('lookups' getArchiePreferred getDownloadPath getEmail getFTPHost getFTPProxyAccount getFTPProxyHost getFTPProxyPassword getFTPProxyUser getFingerHost getGopherHost getGopherProxy getHTTPProxyHost getIRCHost getLDAPSearchbase getLDAPServer getMacintoshFileTypeAndCreatorFrom: getMailAccount getMailPassword getNNTPHost getNTPHost getNewsAuthPassword getNewsAuthUsername getNoProxyDomains getOrganization getPhHost getRealName getSMTPHost getSocksHost getTelnetHost getWAISGateway getWWWHomePage getWhoisHost)('system primitives' primitiveGetMacintoshFileTypeAndCreatorFrom: primitiveGetStringKeyedBy:)('system startup' shutDown startUp)('tests' useFTPProxy useGopherProxy useHTTPProxy usePassiveFTP useSocks)!!Decompiler class reorganize!('*MinimalMorphic-testing' recompileAllTest)('class initialization' initialize)!!ContextPart class reorganize!('*MinimalMorphic-examples' trace:onFileNamed:)('examples' tallyInstructions: tallyMethods: trace: trace:on:)('instance creation' basicNew: initializedInstance new new: newForMethod:)('simulation' initialize primitiveFailToken runSimulated:)('special context creation' contextEnsure: contextOn:do: theReturnMethod)('private' carefullyPrint:on:)!!BlockContext reorganize!('*MinimalMorphic-accessing' argumentCount reentrant)('*MinimalMorphic-controlling' doWhileFalse: doWhileTrue:)('*MinimalMorphic-evaluating' bench valueWithEnoughArguments:)('*MinimalMorphic-exceptions' onDNU:do: valueUninterruptably)('*MinimalMorphic-private' valueError)('*MinimalMorphic-private-exceptions' ifProperUnwindSupportedElseSignalAboutToReturn)('*MinimalMorphic-scheduling' forkAndWait newProcessWith:)('*services-base' valueWithRequestor:)('accessing' blockHome copyForSaving finalBlockHome fixTemps hasInstVarRef hasMethodReturn home isBlock isExecutingBlock isMethodContext method numArgs receiver tempAt: tempAt:put:)('controlling' repeat repeatWithGCIf: whileFalse whileFalse: whileTrue whileTrue:)('evaluating' durationToRun ifError: timeToRun value valueWithExit value: value:value: value:value:value: value:value:value:value: valueSupplyingAnswer: valueSupplyingAnswers: valueSuppressingAllMessages valueSuppressingMessages: valueSuppressingMessages:supplyingAnswers: valueWithArguments: valueWithPossibleArgs: valueWithPossibleArgument: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do:)('initialize-release' home:startpc:nargs: privRefresh)('instruction decoding' blockReturnTop)('printing' decompile decompileString fullPrintOn: printOn: printOnStream:)('scheduling' asContext fork forkAt: forkAt:named: forkNamed: newProcess valueAt:)('system simulation' pushArgs:from: stepToSendOrReturn)('private' aboutToReturn:through: cannotReturn: copyTo:blocks: endPC hideFromDebugger instVarAt:put: myEnv privHome: startpc valueUnpreemptively)!!ContextPart reorganize!('*39Deprecated' methodSelector)('*MinimalMorphic-*39Deprecated' mclass)('*MinimalMorphic-controlling' return:to:)('*MinimalMorphic-private' doPrimitive:method:receiver:args: stackPtr)('*MinimalMorphic-private-exceptions' unwindTo:)('*MinimalMorphic-query' isClosureContext)('*MinimalMorphic-system simulation' completeCallee:)('accessing' client home method methodNode methodNodeFormattedAndDecorated: receiver tempAt: tempAt:put:)('controlling' activateMethod:withArgs:receiver:class: blockCopy: hasSender: jump pop push: quickSend:to:with:super: restart resume resume: return return: runUntilErrorOrReturnFrom: send:to:with:super: terminate terminateTo: top)('debugger access' contextStack depthBelow: errorReportOn: longStack methodClass pc release releaseTo: selector sender shortStack singleRelease sourceCode stack stackOfSize: swapSender: tempNames tempsAndValues tempsAndValuesLimitedTo:indent:)('instruction decoding' doDup doPop jump: jump:if: methodReturnConstant: methodReturnReceiver methodReturnTop popIntoLiteralVariable: popIntoReceiverVariable: popIntoTemporaryVariable: pushActiveContext pushConstant: pushLiteralVariable: pushReceiver pushReceiverVariable: pushTemporaryVariable: return:from: send:super:numArgs: storeIntoLiteralVariable: storeIntoReceiverVariable: storeIntoTemporaryVariable:)('objects from disk' storeDataOn:)('printing' printDetails: printOn:)('query' blockHome bottomContext copyStack copyTo: findContextSuchThat: findSecondToOldestSimilarSender findSimilarSender hasContext: isDead secondFromBottom)('system simulation' quickStep runSimulated:contextAtEachStep: step stepToCallee stepToSendOrReturn)('private' activateReturn:value: cannotReturn:to: copyTo:blocks: cut: insertSender: privSender: push:fromIndexable: stackp: tryNamedPrimitiveIn:for:withArgs: tryPrimitiveFor:receiver:args:)('private-debugger' cachesStack)('private-exceptions' canHandleSignal: findNextHandlerContextStarting findNextUnwindContextUpTo: handleSignal: isHandlerContext isUnwindContext nextHandlerContext)!!InstructionStream reorganize!('*MinimalMorphic-decoding' interpret)('*MinimalMorphic-scanning' peekInstruction)('*MinimalMorphic-testing' willBlockReturn willJump willJustPop willSend)('decoding' atEnd interpretJump interpretNextInstructionFor:)('scanning' addSelectorTo: followingByte method nextByte nextInstruction pc previousPc scanFor: skipBackBeforeJump thirdByte)('testing' willJumpIfFalse willJumpIfTrue willReallySend willReturn willStore willStorePop)('private' interpretExtension:in:for: method:pc: pc:)!!InstructionPrinter class reorganize!('*MinimalMorphic-printing' printClass:)('printing' on:)!!EventSensor class reorganize!('*MinimalMorphic-class initialization' eventPollPeriod:)('class initialization' eventPollPeriod install)!!InputSensor class reorganize!('*MinimalMorphic-preference change notification' duplicateAllControlAndAltKeysChanged)('*MinimalMorphic-public' duplicateControlAndAltKeys: keyDecodeTable swapControlAndAltKeys: swapMouseButtons:)('class initialization' defaultCrossPlatformKeys installKeyDecodeTable installMouseDecodeTable)('preference change notification' duplicateControlAndAltKeysChanged swapControlAndAltKeysChanged)('public' default installDuplicateKeyEntryFor: installSwappedKeyEntryFor:)('system startup' shutDown startUp)!!EventSensor reorganize!('*MinimalMorphic-accessing' peekButtons peekPosition)('*MinimalMorphic-initialize' startUp)('*MinimalMorphic-private' wait2ms)('accessing' eventQueue eventTicklerProcess flushAllButDandDEvents flushEvents nextEvent peekEvent peekKeyboardEvent peekMousePt)('initialize' initialize shutDown)('mouse' createMouseEvent)('private' eventTickler flushNonKbdEvents installEventTickler isKbdEvent: lastEventPoll nextEventFromQueue nextEventSynthesized primInterruptSemaphore: primKbdNext primKbdPeek primMouseButtons primMousePt primSetInterruptKey:)('private-I/O' fetchMoreEvents mapButtons:modifiers: primGetNextEvent: primSetInputSemaphore: processEvent: processKeyboardEvent: processMouseEvent: queueEvent:)!!InputSensor reorganize!('*MinimalMorphic-accessing' eventQueue:)('*MinimalMorphic-cursor' peekPosition)('*MinimalMorphic-joystick' joystickOn: testJoystick:)('*MinimalMorphic-keyboard' kbdTest)('*MinimalMorphic-mouse' mouseButtons peekButtons)('*MinimalMorphic-tablet' hasTablet tabletTimestamp)('*MinimalMorphic-user interrupts' inputProcess userInterruptWatcher)('accessing' eventQueue flushAllButDandDEvents)('buttons' buttons)('cursor' currentCursor currentCursor: cursorPoint cursorPoint:)('initialize' flushEvents shutDown startUp)('joystick' joystickButtons: joystickXY:)('keyboard' flushKeyboard keyboard keyboardPeek keyboardPressed)('modifier keys' anyModifierKeyPressed commandKeyPressed controlKeyPressed leftShiftDown rawMacOptionKeyPressed shiftPressed)('mouse' anyButtonPressed blueButtonPressed mousePoint noButtonPressed peekMousePt redButtonPressed waitButton waitButtonOrKeyboard waitClickButton waitNoButton yellowButtonPressed)('tablet' tabletExtent tabletPoint tabletPressure)('user interrupts' eventTicklerProcess installInterruptWatcher interruptWatcherProcess setInterruptKey:)('private' characterForKeycode: primCursorLocPut: primCursorLocPutAgain: primInterruptSemaphore: primKbdNext primKbdPeek primMouseButtons primMousePt primReadJoystick: primSetInterruptKey: primTabletGetParameters: primTabletRead:)!!InfiniteForm reorganize!('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' asColor asForm dominantColor offset)('as yet unclassified' addFillStyleMenuItems:hand:from:)('display box access' computeBoundingBox)('displaying' colorForInsets displayOn:at:clippingBox:rule:fillColor: displayOnPort:at: displayOnPort:offsetBy: raisedColor)('fillstyle protocol' bitPatternForDepth: direction form isBitmapFill isGradientFill isOrientedFill isSolidFill isTiled isTranslucent normal origin origin:)('private' form:)!!Imports reorganize!('icons' importImageDirectory: importImageDirectoryWithSubdirectories: importImageFromFileNamed:)('images' images importImage:named: imports namesAndImagesDo: viewImages)('initialize' initialize)!!ImageSegmentRootStub class reorganize!('*MinimalMorphic-accessing' faultLogs)('*MinimalMorphic-settings' doLogFaults dontLogFaults startLoggingFaults stopLoggingFaults)!!ImageSegment class reorganize!('*MinimalMorphic-testing' activeClassesByCategory discoverActiveClasses swapOutInactiveClasses swapOutProjects testClassFaultOn:)('accessing' compressedFileExtension fileExtension)('fileIn/Out' folder reclaimObsoleteSegmentFiles segmentDirectory shutDown startUp uniqueFileNameFor:)('testing' activeClasses)!!ImageSegment reorganize!('*MinimalMorphic-compact classes' aComment)('*MinimalMorphic-fileIn/Out' acceptSingleMethodSource: declareAndPossiblyRename: prepareToBeSaved rehashSets)('*MinimalMorphic-read/write segment' copyFromRootsForExport: copyFromRootsLocalFileFor:sizeHint: copySmartRootsExport: extractThenInstall segmentName: smartFillRoots: writeForExportWithSources:inDirectory: writeForExportWithSources:inDirectory:changeSet: writeForExportWithSourcesGZ:inDirectory: writeToFileWithSymbols:)('*MinimalMorphic-testing' deepCopyTest: findInOut: findOwnerMap: findOwnersOutPtrs findRogueRootsImSeg: findRogueRootsPrep findRogueRootsRefStrm: isOnFile verifyCopy)('*SMBase-export' writeForExportOn:)('access' allObjectsDo: arrayOfRoots arrayOfRoots: originalRoots outPointers segment state)('compact classes' cc:new:current:fake:refStrm: compactClassesArray compactIndexAt: objectAfter: remapCompactClasses:refStrm:)('fileIn/Out' comeFullyUpOnReload: declare: endianness fixCapitalizationOfSymbols reshapeClasses:refStream: restoreEndianness scanFrom: storeDataOn:)('instance change shape' allInstancesOf:do: ifOutPointer:thenAllObjectsDo: segUpdateInstancesOf:toBe:isMeta:)('primitives' loadSegmentFrom:outPointers: storeSegmentFor:into:outPointers:)('read/write segment' copyFromRoots:sizeHint: copyFromRoots:sizeHint:areUnique: dependentsCancel: dependentsRestore: dependentsSave: extract findStacks install localName readFromFile revert rootsIncludingBlockMethods rootsIncludingBlocks rootsIncludingPlayers savePlayerReferences: segmentCopy segmentName writeForExport: writeToFile writeToFile: writeToFileWithSymbols)('statistics' classNameAt: doSpaceAnalysis printSpaceAnalysisOn:)('testing' errorWrongState findRogueRootsAllMorphs: verify:matches:knowing:)!!GIFReadWriter class reorganize!('*MinimalMorphicInitialization' initializeClass)('examples' exampleAnim grabScreenAndSaveOnDisk)('image reading/writing' typicalFileExtensions wantsToHandleGIFs)!!GIFReadWriter reorganize!('accessing' delay: loopCount: nextImage nextPutImage: setStream: understandsImageFormat)('stream access' close)('private' checkCodeSize setParameters: updatePixelPosition)('private-bits access' flushBits nextBits nextBitsPut:)('private-decoding' readBitData readBody readCode readColorTable: readHeader readWord skipBitData)('private-encoding' flushCode readPixelFrom: writeBitData: writeCode: writeCodeAndCheckCodeSize: writeHeader writeWord:)('private-packing' fillBuffer flushBuffer nextByte nextBytePut: peekByte)!!BMPReadWriter class reorganize!('image reading/writing' typicalFileExtensions)('testing' displayAllFrom: readAllFrom:)!!BMPReadWriter reorganize!('reading' nextImage read24BmpFile read24BmpLine:into:startingAt:width: readColorMap readHeader readIndexedBmpFile:)('testing' understandsImageFormat)('writing' nextPutImage:)!!ImageReadWriter reorganize!('accessing' nextImage nextPutImage:)('stream access' atEnd close contents cr lf next next: nextLong nextLongPut: nextPut: nextPutAll: nextWord nextWordPut: peekFor: position position: size skip: space tab)('testing' understandsImageFormat)('private' changePadOfBits:width:height:depth:from:to: hasMagicNumber: on: unpackBits:depthTo8From:with:height:pad:)!!IllegalResumeAttempt reorganize!('*MinimalMorphic-comment' readMe)('comment' defaultAction isResumable)!!ISOLanguageDefinition class reorganize!('*MinimalMorphic-private' iso3Countries)('accessing' iso2LanguageDefinition: iso3LanguageDefinition:)('class initialization' initialize)('private' buildIso3166CodesTables extraCountryDefinitions extraISO3Definitions initISO3LanguageTable initISOCountries iso2Countries iso2LanguageTable iso3166Codes iso3LanguageTable isoLanguages readISOLanguagesFrom:)!!ISOLanguageDefinition reorganize!('*MinimalMorphic-accessing' iso3Alternate)('accessing' iso2 iso3 language)('initialize' iso2: iso3: iso3Alternate: language:)!!HttpResponse class reorganize!('accessing' statusCodeFor: statusDescriptionFor: statusSymbolFor:)('bindings' current current:)('initialization' initialize initializeStatusCodes)('instance creation' fromFileStream: fromMIMEDocument: fromStream: fromStream:contentType: fromString: fromString:contentType: fromUrl: new redirectTo: status:contents:)('preferences' responseChunkSize responseChunkSize:)!!HttpResponse reorganize!('accessing' contentLength contentType contentType: contents contents: fieldAt: fieldAt:ifAbsent: fieldAt:ifAbsentPut: fieldAt:put: fields httpVersion isPersistent responseChunkSize status status: statusCode statusCodeAndReason)('accessing-cookies' addCookies: cookies setCookieName:value:expiresDate:expiresTime:path:domain:secure: setCookieName:value:path:)('authentication' hashPassword: secretWord setUsername: setUsername:password:)('comanche processing' asHttpPartialResponseBlock: asHttpResponseTo:)('defaults' defaultContentType)('initialize-release' destroy)('responding' pvtWriteContentLengthOn: pvtWriteContentTypeOn: pvtWriteContentsOn: pvtWriteCookiesOn: pvtWriteFieldsOn: pvtWriteStatusOn: writeHeadersOn: writeOn:)!!HTTPLoader reorganize!('initialize/release' initialize release)('requests' abort retrieveContentsFor: retrieveObjectsFor:)('private' addRequest: maxNrOfConnections nextRequest removeProcess: removeRequest: startDownload)!!HTTPDownloadRequest reorganize!('*MinimalMorphic-*MorphicExtras-accessing' url)('accessing' content: contentStream contents process: signalAbort startRetrieval)('initialize' for:in:)('testing' isSemaphoreSignaled)('private' httpEncodeSafely:)!!HTTPClient class reorganize!('*MinimalMorphic-testing' isRunningInBrowser: shouldUsePluginAPI)('class initialization' browserSupportsAPI browserSupportsAPI: determineIfRunningInBrowser)('examples' exampleMailTo examplePostArgs examplePostMultipart)('post/get' httpGet: httpGetDocument: httpPostDocument:args: httpPostDocument:target:args: httpPostMultipart:args: requestURL:target:)('testing' isRunningInBrowser)('utilities' composeMailTo:subject:body: getDirectoryListing: mailTo:message: uploadFileNamed:to:user:passwd:)('private' pluginHttpPostMultipart:args:)!!GraphicSymbolInstance reorganize!('accessing' graphicSymbol graphicSymbol:)('displaying' displayOn:transformation:clippingBox:rule:fillColor: displayTransformation:clippingBox:rule:fillColor:)('transforming' transformation transformation:)!!GradientFillStyle class reorganize!('class initialization' initPixelRampCache pixelRampCache)('instance creation' colors: ramp: sample)!!GradientFillStyle reorganize!('Morphic-Balloon' addFillStyleMenuItems:hand:from: addNewColorIn:event: beLinearGradientIn: beRadialGradientIn: changeColorSelector:hand:morph:originalColor: changeFirstColorIn:event: changeSecondColorIn:event: firstColor:forMorph:hand: lastColor:forMorph:hand:)('accessing' colorRamp colorRamp: pixelRamp pixelRamp: radial radial:)('converting' asColor mixed:with:)('testing' isGradientFill isRadialFill isSolidFill isTranslucent)('private' checkTranslucency computePixelRampOfSize: display scaledAlphaMix:of:with:)!!DisplayScreen class reorganize!('*MinimalMorphic-display box access' checkForNewScreenSize depth:width:height:fullscreen:)('*MinimalMorphic-snapshots' actualScreenDepth)('display box access' boundingBox)('snapshots' actualScreenSize shutDown startUp)!!Cursor class reorganize!('*MinimalMorphic-constants' marker resizeBottom resizeBottomLeft resizeBottomRight resizeRight)('class initialization' initBottomLeft initBottomRight initCorner initCrossHair initDown initMarker initMenu initMove initNormal initNormalWithMask initOrigin initRead initResizeLeft initResizeTop initResizeTopLeft initResizeTopRight initRightArrow initSquare initTarget initTopLeft initTopRight initUp initWait initWrite initXeq initialize makeCursorsWithMask startUp)('constants' blank bottomLeft bottomRight corner crossHair down execute menu move normal origin read resizeLeft resizeTop resizeTopLeft resizeTopRight rightArrow square target topLeft topRight up wait webLink write)('current cursor' currentCursor currentCursor:)('instance creation' extent:fromArray:offset: new resizeForEdge:)!!Form class reorganize!('*MinimalMorphic-BMP file reading' fromBMPFile: fromBMPFileNamed:)('*MinimalMorphic-class initialization' unload)('*MinimalMorphic-examples' exampleBorder exampleEdits exampleMagnify exampleShrink exampleSketch exampleSpaceFill makeStar toothpaste: xorHack:)('*MinimalMorphic-file list services' fileReaderServicesForDirectory: fileReaderServicesForFile:suffix: openAsBackground: openImageInWindow: serviceImageAsBackground serviceImageImportDirectory serviceImageImportDirectoryWithSubdirectories serviceImageImports serviceOpenImageInWindow services)('*MinimalMorphic-fileIn/Out' importImage: importImageDirectory: importImageDirectoryWithSubdirectories:)('*MinimalMorphic-instance creation' fromBinaryStream: fromFileNamed: fromUser fromUser: fromUserWithExtent:)('*MinimalMorphic-mode constants' rgbMul)('*MinimalMorphicInitialization' initializeClass)('initialize-release' initialize)('instance creation' dotOfSize: extent: extent:depth: extent:depth:bits: extent:depth:fromArray:offset: extent:fromArray:offset: extent:fromStipple: extent:offset: fromDisplay: fromDisplay:using:)('mode constants' and blend blendAlpha erase erase1bitShape oldErase1bitShape oldPaint over paint paintAlpha reverse under)('shut down' shutDown)!!DisplayScreen reorganize!('*MinimalMorphic-blitter defaults' defaultCanvasClass)('*MinimalMorphic-displaying' addExtraRegion:for:)('*MinimalMorphic-other' clippingTo:do: fullBoundingBox restore restoreAfter:)('*MinimalMorphic-private' newDepthNoRestore:)('*MinimalMorphic-testing' isDisplayScreen)('blitter defaults' defaultBitBltClass defaultWarpBltClass)('disk I/O' objectForDataStream:)('displaying' copyBits:from:at:clippingBox:rule:fillColor: copyBits:from:at:clippingBox:rule:fillColor:map: flash: flash:andWait: flashAll:andWait: forceDamageToScreen:)('initialize-release' release shutDown)('other' boundingBox deferUpdates: deferUpdatesIn:while: displayChangeSignature forceDisplayUpdate forceToScreen forceToScreen: fullScreen fullScreenMode: height newDepth: primitiveDeferUpdates: replacedBy:do: supportedDisplayDepths supportsDisplayDepth: usableArea width)('private' beDisplay copyFrom: findAnyDisplayDepth findAnyDisplayDepthIfNone: primRetryShowRectLeft:right:top:bottom: primShowRectLeft:right:top:bottom: setExtent:depth:)!!CursorWithMask reorganize!('*MinimalMorphic-mask' maskForm)('converting' asCursorForm)('mask' hasMask setMaskForm: storeOn:base: withMask)('primitives' beCursor)!!Cursor reorganize!('*MinimalMorphic-displaying' showGridded:)('converting' asCursorForm withMask)('displaying' show showWhile:)('primitives' beCursor beCursorWithMask:)('printing' printOn:)('testing' hasMask)('updating' changed:)!!ColorForm reorganize!('*MinimalMorphic-*MorphicExtras-*morphic-Postscript Canvases' printPostscript:)('*MinimalMorphic-color manipulation' ensureTransparentColor replaceColorAtIndex:with: transparentAllPixelsLike:)('*MinimalMorphic-postscript generation' getTransparencyUnificationLUT)('*MinimalMorphic-private' setColors:cachedColormap:depth:)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' colors colors: colorsFromArray:)('color manipulation' asGrayScale colormapIfNeededForDepth: colorsUsed indexOfColor: mapColor:to: replaceColor:with: replaceColorAt:with: transparentColor: twoToneFromDisplay:backgroundColor:)('color mapping' colormapIfNeededFor:)('copying' asCursorForm blankCopyOf:scaledBy: copy: deepCopy)('displaying' displayOn:at:clippingBox:rule:fillColor: displayOnPort:at: maskingMap)('fileIn/Out' hibernate readAttributesFrom: storeOn: unhibernate writeAttributesOn:)('pixel accessing' colorAt: colorAt:put: isTransparentAt: pixelValueAt:)('postscript generation' asFormWithSingleTransparentColors decodeArray mapTransparencies: setColorspaceOn: transparentColorIndexes)('scaling, rotation' flipBy:centerAt: scaledToSize:)('testing' isColorForm isTranslucent)('private' clearColormapCache depth: ensureColorArrayExists setExtent:depth: unusedColormapEntry)!!Form reorganize!('*MinimalMorphic-*Morphic' iconOrThumbnailOfSize:)('*MinimalMorphic-accessing' defaultCanvasClass displayScreen getCanvas hasBeenModified hasBeenModified:)('*MinimalMorphic-analyzing' cgForPixelValue:orNot: innerPixelRectFor:orNot: pixelCompare:with:at: primCountBits)('*MinimalMorphic-bordering' borderWidth:color: borderWidth:fillColor:)('*MinimalMorphic-color mapping' colormapToARGB)('*MinimalMorphic-converting' asMorph orderedDither32To16)('*MinimalMorphic-displaying' displayInterpolatedOn: displayResourceFormOn: paintBits:at:translucent:)('*MinimalMorphic-editing' bitEdit bitEditAt:scale: edit morphEdit)('*MinimalMorphic-fileIn/Out' comeFullyUpOnReload: objectForDataStream: unhibernate writeBMPfileNamed: writeJPEGfileNamed: writeJPEGfileNamed:progressive: writeOnMovie:)('*MinimalMorphic-filling' fillFromXColorBlock: fillFromXYColorBlock: fillFromYColorBlock: floodFill2:at: floodFill:at: floodFill:at:tolerance:)('*MinimalMorphic-image manipulation' stencil)('*MinimalMorphic-other' setAsBackground)('*MinimalMorphic-resources' readNativeResourceFrom: readResourceFrom:)('*MinimalMorphic-testing' isBltAccelerated:for: isDisplayScreen isExternalForm isFillAccelerated:for:)('*MinimalMorphic-transitions' fadeImageCoarse:at: fadeImageFine:at: fadeImageHor:at: fadeImageHorFine:at: fadeImageSquares:at: fadeImageVert:at: pageImage:at:corner: pageWarp:at:forward: slideImage:at:delta: wipeImage:at:delta: zoomInTo:at: zoomOutTo:at:)('*Morphic' scaledIntoFormOfSize:)('*MorphicExtras-other' graphicForViewerTab)('*MorphicExtras-postscript generation' encodePostscriptOn:)('*eToys-testing' appearsToBeSameCostumeAs:)('*nebraska-encoding' addDeltasFrom: deltaFrom: deltaFrom:at: encodeForRemoteCanvas)('accessing' bits bitsSize bits: center depth depth: extent form height nativeDepth offset offset: size width)('analyzing' colorsUsed dominantColor rectangleEnclosingPixelsNotOfColor: tallyPixelValues tallyPixelValuesInRect:into: xTallyPixelValue:orNot: yTallyPixelValue:orNot:)('bordering' borderFormOfWidth:sharpCorners: borderWidth: border:width:rule:fillColor: shapeBorder:width: shapeBorder:width:interiorPoint:sharpCorners:internal:)('color mapping' balancedPatternFor: bitPatternFor: colormapFromARGB colormapIfNeededForDepth: colormapIfNeededFor: makeBWForm: mapColors:to: mapColor:to: maskingMap newColorMap pixelValueFor: pixelWordFor: reducedPaletteOfSize: rgbaBitMasks)('converting' as8BitColorForm asCursorForm asFormOfDepth: asGrayScale asSourceForm colorReduced copyWithColorsReducedTo:)('copying' blankCopyOf:scaledBy: contentsOfArea: contentsOfArea:into: copyBits:at:translucent: copyBits:from:at:clippingBox:rule:fillColor: copyBits:from:at:clippingBox:rule:fillColor:map: copyBits:from:at:colorMap: copy: copy:from:in:rule: copy:from:to:rule: deepCopy veryDeepCopyWith:)('display box access' boundingBox computeBoundingBox)('displaying' displayInterpolatedIn:on: displayOnPort:at: displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:align:with:rule:fillColor: displayScaledOn: drawLine:from:to:clippingBox:rule:fillColor:)('fileIn/Out' hibernate printOn: readAttributesFrom: readBitsFrom: readFromOldFormat: readFrom: replaceByResource: store15To24HexBitsOn: store32To24HexBitsOn: storeBitsOn:base: storeBits:to:on: storeHexBitsOn: storeOn: storeOn:base: writeAttributesOn: writeBitsOn: writeOn: writeUncompressedOn:)('filling' anyShapeFill bitPatternForDepth: convexShapeFill: eraseShape: fill:rule:fillColor: findShapeAroundSeedBlock: floodFillMapFrom:to:mappingColorsWithin:to: shapeFill:interiorPoint: shapeFill:seedBlock:)('image manipulation' replaceColor:withColor: smear:distance: trimBordersOfColor:)('initialize-release' allocateForm: finish flush fromDisplay: shutDown swapEndianness)('other' fixAlpha formForColorCount: primPrintHScale:vScale:landscape: relativeTextAnchorPosition)('pixel access' colorAt: colorAt:put: isTransparentAt: pixelValueAt: pixelValueAt:put:)('postscript generation' bitsPerComponent bytesPerRow decodeArray numComponents paddedWidth printPostscript:operator: rowPadding setColorspaceOn: storePostscriptHexOn:)('resources' resourceTag storeResourceOn:)('scaling, rotation' flipBy:centerAt: magnifyBy: magnify:by: magnify:by:smoothing: rotateBy: rotateBy:centerAt: rotateBy:magnify:smoothing: rotateBy:smoothing: scaledToSize: shrink:by:)('testing' hasNonStandardPalette isAllWhite isBigEndian isForm isLittleEndian isStatic isTranslucent shouldPreserveContents)('transitions' fadeImage:at:indexAndMaskDo: wipeImage:at:clippingBox:rectForIndex: wipeImage:at:delta:clippingBox: zoomIn:orOutTo:at:vanishingPoint:)('private' hackBits: initFromArray: privateFloodFillValue: setExtent:depth: setExtent:depth:bits: setResourceBits:)!!FontSet class reorganize!('*MinimalMorphic-as yet unclassified' convertFontsNamed:)('*MinimalMorphic-compiling' compileFont:)('*MinimalMorphic-converting' convertTextStyleNamed:)('*MinimalMorphic-installing' fontNamed:fromLiteral: fontNamed:fromMimeLiteral: installAsDefault size:fromLiteral:)('compiling' acceptsLoggingOfCompilation)('converting' convertFontsNamed:inDirectoryNamed:)('filein/out' fileOut)('installing' installAsTextStyle)('private' fontCategory fontName fontSetClass:)!!FixedFaceFont reorganize!('*MinimalMorphic-accessing' baseFont descentOf: passwordCharacter)('*MinimalMorphic-displaying' displayErrorOn:length:at:kern: displayPasswordOn:length:at:kern: displayString:on:from:to:at:kern:from:)('accessing' ascent ascentOf: baseFont: baseKern characterFormAt: descent descentKern emphasized: familyName fontSize: height lineGrid maxAscii pointSize)('caching' releaseCachedState)('displaying' displayErrorOn:length:at:kern:baselineY: displayPasswordOn:length:at:kern:baselineY: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: displayString:on:from:to:at:kern:from:baselineY: installOn:foregroundColor:backgroundColor:)('initialize-release' errorFont initialize passwordFont)('measuring' widthOf:)('private' glyphInfoOf:into:)!!BitmapFillStyle reorganize!('Morphic-Balloon' addFillStyleMenuItems:hand:from: chooseNewGraphicIn:event: grabNewGraphicIn:event: newForm:forMorph:)('accessing' direction form form: normal tileFlag tileFlag:)('converting' asColor)('testing' isBitmapFill isTiled isTranslucent)!!FillStyle reorganize!('accessing' scaledPixelValue32)('converting' asColor mixed:with:)('testing' isBitmapFill isGradientFill isOrientedFill isSolidFill isTranslucent isTransparent)!!FileServices class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' allRegisteredServices isReaderNamedRegistered: itemsForDirectory: itemsForFile: registerFileReader: registeredFileReaderClasses removeObsolete unregisterFileReader:)!!FilePath reorganize!('*MinimalMorphic-conversion' coverter:)('*MinimalMorphic-file in/out' copySystemToVm)('conversion' asSqueakPathName asString asVmPathName pathName pathName:isEncoded: printOn:)('file in/out' convertToCurrentVersion:refStream:)('testing' isNullPath)!!FilePackage class reorganize!('*MinimalMorphic-instance creation' conflictsWithUpdatedMethods:)('*MinimalMorphic-reader service' serviceConflictsWithUpdatedMethods services)('conflict checker logging' closeLog log: logCr logFileStream)('conflict checker preferences' showIdenticalConflicts verboseConflicts)('instance creation' fromFileNamed:)('reader service' fileReaderServicesForFile:suffix:)!!FilePackage reorganize!('*MinimalMorphic-conflict checker' conflictsWithUpdatedMethods)('*MinimalMorphic-fileIn/fileOut' askForDoits)('*monticello' classDefinition:with: doIts)('accessing' classAt: classes fixClassOrder fullName: fullPackageName packageInfo packageName removeClass: removeDoIts renameClass:to:)('change record types' classComment: doIt: method: preamble:)('conflict checker' checkForMoreRecentUpdateThanChangeSet:pseudoClass:selector: findUpdateChangeSetMatching:)('fileIn/fileOut' fileIn fileInDoits fileOut fileOutDoits: fileOutOn:)('initialize' fromFileNamed: fromFileNamed:encoding: initialize)('reading' fileInFrom:)('private' getClass: metaClassDefinition:with: msgClassComment:with: possibleSystemSource: removedMethod:with: sampleMethod)!!FileExistsException reorganize!('*MinimalMorphic-exceptionDescription' defaultAction)('accessing' fileClass fileClass:)!!FileDoesNotExistException reorganize!('*MinimalMorphic-exceptionDescription' defaultAction)('accessing' readOnly readOnly:)!!DosFileDirectory class reorganize!('*network-uri' privateFullPathForURI:)('platform specific' isCaseSensitive isDrive: maxFileNameLength pathNameDelimiter splitName:to:)!!AcornFileDirectory class reorganize!('*network-uri' privateFullPathForURI:)('class initialization' initialize)('platform specific' isActiveDirectoryClass isCaseSensitive maxFileNameLength pathNameDelimiter)!!FileDirectory class reorganize!('*MinimalMorphic-class initialization' initializeStandardMIMETypes)('*MinimalMorphic-name utilities' isLegalFileName: searchAllFilesForAString urlForFileNamed:)('*MinimalMorphic-system start up' openSources:forImage: setDefaultDirectoryFrom:)('*network-uri' contentStreamForURI: directoryEntryForURI: fullPathForURI: privateFullPathForURI: retrieveMIMEDocument: uri:)('create/delete file' deleteFilePath: lookInUsualPlaces:)('instance creation' default forFileName: on: root)('name utilities' baseNameFor: changeSuffix checkName:fixErrors: dirPathFor: directoryEntryFor: extensionFor: fileName:extension: imageSuffix localNameFor: splitName:to: startUp)('platform specific' dot extensionDelimiter isCaseSensitive makeAbsolute: makeRelative: maxFileNameLength pathNameDelimiter slash)('system start up' openChanges:forImage: openSources:andChanges:forImage: setDefaultDirectory: setDefaultDirectoryClass shutDown)('private' activeDirectoryClass isActiveDirectoryClass primPathNameDelimiter)!!FileDirectory reorganize!('*MinimalMorphic-*MorphicExtras-file name utilities' url)('*MinimalMorphic-enumeration' fullNamesOfAllFilesInSubtree statsForDirectoryTree:)('*MinimalMorphic-file name utilities' isLegalFileName: realUrl)('*MinimalMorphic-file operations' rename:toBe:)('*MinimalMorphic-school support' eToyBaseFolderSpec eToyBaseFolderSpec: eToyUserList eToyUserListUrl eToyUserListUrl: eToyUserName: hasEToyUserList)('*MinimalMorphic-squeaklets' directoryObject)('*Network' asUrl)('*network-uri' uri)('enumeration' containingDirectory directoryEntry directoryEntryFor: directoryNamed: directoryNames entries fileAndDirectoryNames fileNames fullName keysDo: localName matchingEntries: withAllSubdirectoriesCollect:)('file directory' assureExistence assureExistenceOfPath: localNameFor: sleep wakeUp)('file name utilities' checkName:fixErrors: fileNamesMatching: fullNameFor: isTypeFile lastNameFor:extension: nextNameFor:extension: relativeNameFor: splitNameVersionExtensionFor:)('file operations' copyFileNamed:toFileNamed: copyFileWithoutOverwriteConfirmationNamed:toFileNamed: copyFile:toFile: createDirectory: deleteDirectory: deleteFileNamed: deleteFileNamed:ifAbsent: deleteLocalFiles fileOrDirectoryExists: getMacFileTypeAndCreator: mimeTypesFor: putFile:named: putFile:named:retry: recursiveDelete setMacFileNamed:type:creator: upLoadProject:named:resourceUrl:retry:)('file status' entryAt: entryAt:ifAbsent:)('file stream creation' fileNamed: forceNewFileNamed: newFileNamed: oldFileNamed: oldFileOrNoneNamed: readOnlyFileNamed:)('path access' fullPathFor: on: pathFromUrl: pathName pathNameDelimiter pathParts slash)('printing' printOn:)('searching' filesContaining:caseSensitive: withAllFilesDo:andDirectoriesDo:)('squeaklets' downloadUrl updateProjectInfoFor: writeProject:inFileNamed:fromDirectory:)('testing' acceptsUploads directoryExists: exists fileExists: includesKey: isAFileNamed: isCaseSensitive isRemoteDirectory)('private' directoryContentsFor: primCreateDirectory: primDeleteDirectory: primDeleteFileNamed: primGetMacFileNamed:type:creator: primLookupEntryIn:index: primRename:to: primSetMacFileNamed:type:creator: setPathName: storeServerEntryOn:)!!False reorganize!('*MinimalMorphic-printing' asBit)('controlling' and: ifFalse: ifFalse:ifTrue: ifTrue: ifTrue:ifFalse: or:)('logical operations' & not |)('printing' printOn:)!!FWT reorganize!('access' coeffs coeffs: samples samples:)('computation' convolveAndDec:dataLen:filter:out: convolveAndInt:dataLen:filter:sumOutput:into: dotpData:endIndex:filter:start:stop:inc: transformForward:)('initialization' nSamples:nLevels: setAlpha:beta:)('testing' doWaveDemo meanSquareError: viewPhiAndPsi)!!FMSound class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' sineTable)('instruments' bass1 bassoon1 brass1 brass2 clarinet clarinet2 default flute1 flute2 marimba mellowBrass oboe1 oboe2 organ1 pluckedElecBass randomWeird1 randomWeird2)!!FFT reorganize!('bulk processing' initializeHammingWindow: initializeTriangularWindow setSize: transformDataFrom:startingAt:)('initialization' n nu: realData: realData:imagData:)('plugin-testing' pluginPrepareData pluginTest pluginTransformData:)('testing' imagData plot:in: realData samplesPerCycleForIndex: test)('transforming' permuteData scaleData transformForward:)!!ExternalDropHandler class reorganize!('*MinimalMorphic-accessing' lookupExternalDropHandler: lookupServiceBasedHandler:)('*MinimalMorphic-class initialization' registerStandardExternalDropHandlers)('*MinimalMorphic-private' chooseServiceFrom: defaultGZipHandler defaultImageHandler defaultProjectHandler)('*MinimalMorphicInitialization' initializeClass)('accessing' defaultHandler defaultHandler: registerHandler:)('class initialization' initialize)('instance creation' type:extension:action:)('private' registeredHandlers resetRegisteredHandlers unwantedSelectors)!!BlockCannotReturn reorganize!('*MinimalMorphic-accessing' deadHome)('accessing' deadHome: result result:)('exceptionDescription' defaultAction isResumable)!!Exception reorganize!('*MinimalMorphic-handling' searchFrom:)('exceptionBuilder' tag:)('exceptionDescription' tag)('handling' isNested outer pass resignalAs: resume resumeUnchecked: resume: retry retryUsing: return return:)('printing' description messageText printOn: receiver signalerContext)('priv handling' defaultAction isResumable privHandlerContext:)('signaling' messageText: signal signal:)!!EventHandler reorganize!('MorphicExtras-initialization' adaptToWorld:)('access' allRecipients firstMouseSelector messageList methodRefList mouseDownSelector mouseStillDownRecipient mouseStillDownSelector mouseUpSelector)('copying' veryDeepFixupWith: veryDeepInner:)('eToys-initialization' forgetDispatchesTo:)('events' click:fromMorph: doubleClick:fromMorph: doubleClickTimeout:fromMorph: keyStroke:fromMorph: mouseDown:fromMorph: mouseEnter:fromMorph: mouseEnterDragging:fromMorph: mouseLeave:fromMorph: mouseLeaveDragging:fromMorph: mouseMove:fromMorph: mouseStillDown:fromMorph: mouseUp:fromMorph: send:to:withEvent:fromMorph: startDrag:fromMorph:)('fixups' fixReversedValueMessages replaceSendsIn:with:)('initialization' on:send:to: on:send:to:withValue: onGestureSend:to:)('objects from disk' convertToCurrentVersion:refStream:)('printing' printOn:)('testing' handlesClickOrDrag: handlesGestureStart: handlesKeyboard: handlesMouseDown: handlesMouseMove: handlesMouseOver: handlesMouseOverDragging: handlesMouseStillDown:)!!Envelope reorganize!('accessing' attackTime centerPitch: decayEndIndex decayTime duration duration: loopEndIndex loopStartIndex name points scale scale: target target: updateSelector updateSelector: volume:)('applying' computeValueAtMSecs: reset sustainEnd: updateTargetAt: valueAtMSecs:)('storing' storeOn:)('private' checkParameters computeIncrementAt:between:and:scale: incrementalComputeValueAtMSecs: indexOfPointAfterMSecs:startingAt: interpolate:between:and: setPoints:loopStart:loopEnd:)!EncodedCharSet initialize!!EncodedCharSet class reorganize!('*MinimalMorphic-accessing - displaying' printingDirection)('accessing - displaying' isBreakableAt:in:)('character classification' canBeGlobalVarInitial: canBeNonGlobalVarInitial: isDigit: isLetter: isLowercase: isUppercase:)('class methods' charFromUnicode: charsetAt: digitValue: initialize isCharset leadingChar nextPutValue:toStream:withShiftSequenceIfNeededForTextConverterState: ucsTable)!!EllipseMidpointTracer reorganize!('computing' stepInY)('initialize' on:)!!EditCommand reorganize!('accessors' iEditCommand lastSelectionInterval newText newText: newTextInterval newTextInterval: pEditor phase phase: printOn: replacedText replacedText: replacedTextInterval replacedTextInterval: textMorphEditor textMorphString textMorphStringSize)('command execution' doCommand redoCommand undoCommand)('initialization' textMorph:replacedText:replacedTextInterval:newText:newTextInterval:)('selection' doSelectionInterval redoSelectionInterval undoSelection undoSelectionInterval)!!Duration reorganize!('ansi protocol' * + - / < = abs asDuration asSeconds days hash hours minutes negated negative positive seconds)('initialize-release' initialize)('squeak protocol' // \\ asDelay asMilliSeconds asNanoSeconds nanoSeconds printOn: roundTo: truncateTo:)('testing' isZero)('private' seconds:nanoSeconds: storeOn: ticks)!!DummySoundSystem class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' unload)!!DummySoundSystem reorganize!('misc' randomBitsFromSoundInput: sampledSoundChoices soundNamed:)('playing' beep playSampledSound:rate: playSoundNamed: playSoundNamed:ifAbsentReadFrom: playSoundNamedOrBeep:)!!CompositeTransform class reorganize!('*nebraska-instance creation' fromRemoteCanvasEncoding:)('instance creation' globalTransform:localTransform:)!!DisplayTransform class reorganize!('*nebraska-instance creation' fromRemoteCanvasEncoding:)('instance creation' identity)!!CompositeTransform reorganize!('*MinimalMorphic-converting' asCompositeTransform)('*MinimalMorphic-testing' isCompositeTransform)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' angle inverseTransformation offset scale)('converting' asMatrixTransform2x3 asMorphicTransform)('initialization' composedWith: globalTransform:localTransform:)('testing' isIdentity isPureTranslation)('transformations' invert: transform:)('transforming points' globalPointToLocal: localPointToGlobal:)!!DisplayTransform reorganize!('*MinimalMorphic-converting' asCompositeTransform)('*MinimalMorphic-testing' isCompositeTransform)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('accessing' inverseTransformation)('composing' composedWithGlobal: composedWithLocal:)('converting' asMatrixTransform2x3)('initialize' setIdentity)('testing' isIdentity isMatrixTransform2x3 isMorphicTransform isPureTranslation)('transforming points' globalPointToLocal: globalPointsToLocal: invertBoundsRect: localPointToGlobal: localPointsToGlobal:)('transforming rects' globalBoundsToLocal: localBoundsToGlobal: sourceQuadFor:)!!DisplayText class reorganize!('*MinimalMorphic-instance creation' text:textStyle:offset:)('examples' example)('instance creation' text: text:textStyle:)!!DisplayText reorganize!('*MinimalMorphic-accessing' fontsUsed)('*MinimalMorphic-private' composeForm)('accessing' alignedTo: form lineGrid numberOfLines offset offset: string text text: textStyle textStyle:)('color' backgroundColor foregroundColor foregroundColor:backgroundColor:)('converting' asParagraph)('display box access' boundingBox computeBoundingBox)('displaying' displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:align:with:rule:fillColor: displayOnPort:at:)('private' setText:textStyle:offset:)!!DisplayScanner reorganize!('*MinimalMorphic-MVC-compatibility' initializeFromParagraph:clippedBy:)('MVC-compatibility' displayLines:in:clippedBy:)('scanning' displayLine:offset:leftInRun: placeEmbeddedObject:)('stop conditions' cr crossedX endOfRun paddedSpace plainTab setStopConditions tab)('private' setDestForm: setFont setPort: text:textStyle:foreground:background:fillBlt:ignoreColorChanges: textColor:)!!DisplayObject class reorganize!('*MinimalMorphic-fileIn/Out' writeCollection:onFileNamed:)('fileIn/Out' collectionFromFileNamed:)!!DisplayObject reorganize!('*MinimalMorphic-display box access' initialExtent)('*MinimalMorphic-displaying-generic' displayOn:transformation:clippingBox:align:with: displayOnPort: followCursor)('*MinimalMorphic-fileIn/Out' writeUncompressedOnFileNamed:)('accessing' extent height offset offset: relativeRectangle width)('display box access' boundingBox center computeBoundingBox)('displaying-Display' display follow:while: follow:while:bitsBehind:startingLoc: isTransparent slideFrom:to:nSteps: slideFrom:to:nSteps:delay: slideFrom:to:nSteps:delay:andStay: slideWithFirstFrom:to:nSteps:delay:)('displaying-generic' displayAt: displayOn: displayOn:at: displayOn:at:clippingBox: displayOn:at:clippingBox:rule:fillColor: displayOn:at:rule: displayOn:transformation:clippingBox: displayOn:transformation:clippingBox:align:with:rule:fillColor: displayOn:transformation:clippingBox:fixedPoint: displayOn:transformation:clippingBox:rule:fillColor: displayOnPort:at:rule:)('fileIn/Out' writeOnFileNamed:)('transforming' align:with: scaleBy: translateBy:)('truncation and round off' rounded)!!DiskProxy reorganize!('*MinimalMorphic-accessing' preSelector preSelector:)('accessing' constructorArgs constructorSelector globalObjectName simpleGlobalOrNil)('exceptions' enter enter:revert:saveForRevert: loadFromServer)('i/o' comeFullyUpOnReload: storeDataOn:)('initialize-release' global:preSelector:selector:args: global:selector:args:)('printing' printOn:)!!DigitalSignatureAlgorithm class reorganize!('*MinimalMorphicInitialization' initializeClass)('examples' example testExamplesFromDisk testKeySet timeDecode: writeExamplesToDisk)('public' generateKeySet sign:privateKey: sign:privateKey:dsa: verify:isSignatureOf:publicKey:)('testing' runTiming time:as:count: timeDirect:as:count: timeMultiply:mode: timeRemainder:mode: timeToDivide:mode:)!!DigitalSignatureAlgorithm reorganize!('initialization' initRandom: initRandomFromString: initRandomFromUser initRandomNonInteractively)('large integer arithmetic' inverseOf:mod: isProbablyPrime:)('public' computeSignatureForMessageHash:privateKey: generateKeySet signatureToString: stringToSignature: verifySignature:ofMessageHash:publicKey:)('private' generateQandP generateRandomLength:s:n: generateSandQ logOfLargestPowerOfTwoDividing: nextRandom160)!!Delay class reorganize!('*MinimalMorphic-example' testDelayOf:for:rect:)('*MinimalMorphic-instance creation' timeoutSemaphore:afterMSecs:)('*MinimalMorphic-testing' nextWakeUpTime)('instance creation' forDuration: forMilliseconds: forSeconds: guardianDelay)('snapshotting' restoreResumptionTimes saveResumptionTimes shutDown startUp)('testing' anyActive primSignal:atMilliseconds:)('timer process' startTimerInterruptWatcher timerInterruptWatcher)!!DefaultExternalDropHandler reorganize!('*MinimalMorphic-event handling' handle:in:dropEvent:)('*MinimalMorphic-private' chooseServiceFrom: servicesForFileNamed:)('private' unwantedSelectors)!!DeepCopier reorganize!('*MinimalMorphic-like fullCopy' checkDeep checkVariables mapUniClasses warnIverNotCopiedIn:sel:)('like fullCopy' checkBasicClasses checkClass: fixDependents initialize initialize: intervalForChecks isItTimeToCheckVariables newUniClasses newUniClasses: objInMemory: references uniClasses)!!DateAndTime class reorganize!('accessing' localTimeZone)('ansi protocol' clockPrecision now year:day:hour:minute:second: year:day:hour:minute:second:offset: year:month:day:hour:minute:second: year:month:day:hour:minute:second:offset:)('clock provider' clock)('initialize-release' initialize initializeOffsets startUp:)('smalltalk-80' fromSeconds: millisecondClockValue totalSeconds)('squeak protocol' current date:time: epoch fromString: julianDayNumber: localOffset localTimeZone: midnight milliSecondsSinceMidnight new noon readFrom: today todayAtMilliSeconds: todayAtNanoSeconds: tomorrow year:day: year:month:day: year:month:day:hour:minute: year:month:day:hour:minute:second:nanoSecond:offset: yesterday)!!DateAndTime reorganize!('*MinimalMorphic-squeak protocol' printYMDOn:)('ansi protocol' + - < = asLocal asUTC dayOfMonth dayOfWeek dayOfWeekAbbreviation dayOfWeekName dayOfYear hash hour hour12 hour24 isLeapYear meridianAbbreviation minute month monthAbbreviation monthName offset offset: second timeZoneAbbreviation timeZoneName year)('smalltalk-80' asSeconds day daysInMonth daysInYear daysLeftInYear firstDayOfMonth hours minutes monthIndex seconds)('squeak protocol' asDate asDateAndTime asDuration asMonth asNanoSeconds asTime asTimeStamp asWeek asYear dayMonthYearDo: duration julianDayNumber middleOf: midnight nanoSecond noon printHMSOn: printOn: printOn:withLeadingSpace: printYMDOn:withLeadingSpace: setJdn:seconds:nano:offset: to: to:by: to:by:do: utcOffset:)('private' hasEqualTicks: normalize:ticks:base: secondsSinceMidnight ticks ticks:offset:)!!Date class reorganize!('*MinimalMorphic-general inquiries' easterDateFor: orthodoxEasterDateFor:)('smalltalk-80' dateAndTimeNow dayOfWeek: daysInMonth:forYear: daysInYear: firstWeekdayOfMonth:year: fromDays: fromSeconds: indexOfMonth: leapYear: nameOfDay: nameOfMonth: newDay:month:year: newDay:year: today)('squeak protocol' fromString: julianDayNumber: readFrom: starting: tomorrow year:day: year:month:day: yesterday)!!Date reorganize!('*MinimalMorphic-utils' onNextMonth onPreviousMonth)('printing' mmddyyyy printFormat: printOn: printOn:format: storeOn: yyyymmdd)('smalltalk-80' addDays: asSeconds leap previous: subtractDate: subtractDays: weekday weekdayIndex)('squeak protocol' asDate dayMonthYearDo: month monthIndex)('utils' addMonths:)!!DamageRecorder reorganize!('initialization' reset)('recording' doFullRepaint invalidRectsFullBounds: recordInvalidRect:)('testing' updateIsNeeded)!!CurrentProjectRefactoring class reorganize!('flaps' showSharedFlaps suppressFlapsString)('miscellaneous' exitCurrentProject newProcessIfUI: projectWithNameOrCurrent:)('revectoring to current' currentAddGuard: currentBeIsolated currentBeParentTo: currentBeParentToCurrent currentFlapsSuppressed currentFromMyServerLoad: currentInterruptName: currentInterruptName:preemptedProcess: currentIsolationHead currentProjectName currentPropagateChanges currentSpawnNewProcessAndTerminateOld: xxxCurrent)!!CornerRounder class reorganize!('*MinimalMorphicInitialization' initializeClass)('all' rectWithinCornersOf: roundCornersOf:on:in:displayBlock:borderWidth:corners:)!!Controller class reorganize!('*MinimalMorphicInitialization' initializeClass)('initialization' MinActivityLapse:)!!Controller reorganize!('basic control sequence' controlInitialize controlLoop controlTerminate interActivityPause startUp terminateAndInitializeAround:)('control defaults' controlActivity controlToNextLevel isControlActive isControlWanted)('cursor' centerCursorInView viewHasCursor)('initialize-release' initialize release)('model access' model model:)('sensor access' sensor sensor:)('view access' inspectView view view:)!!ControlManager reorganize!('accessing' activeController activeController: activeControllerNoTerminate:andProcess: activeControllerProcess controllerSatisfying: controllerWhoseModelSatisfies: controllersSatisfying: includes: noteNewTop scheduledControllers scheduledWindowControllers screenController windowOriginsInUse)('displaying' backgroundForm: restore restore: restore:below:without: restore:without: updateGray)('initialize-release' initialize release)('scheduling' activateController: activateTranscript findWindow findWindowSatisfying: inActiveControllerProcess interruptName: interruptName:preemptedProcess: promote: resetActiveController scheduleActive: scheduleActiveNoTerminate: scheduleOnBottom: schedulePassive: searchForActiveController spawnNewProcess unschedule: windowFromUser)('private' nextActiveController scheduled:from: unCacheWindows)!!CompressedSoundData reorganize!('accessing' channels channels: codecName codecName: firstSample firstSample: gain gain: loopEnd loopEnd: loopLength loopLength: perceivedPitch perceivedPitch: samplingRate samplingRate: soundClassName soundClassName:)('as yet unclassified' compressWith: compressWith:atRate: withEToySound:samplingRate:)('asSound' asSound doControl mixSampleCount:into:startingAt:leftVol:rightVol: reset samples samplesRemaining)!!CompressedBoundaryShape reorganize!('accessing' bounds fillStyles leftFills lineFills lineWidths numSegments points rightFills segments)('editing' collectFills: copyAndCollectFills:)('enumerating' segmentsDo:)('morphing' morphFrom:to:at:)('private' setPoints:leftFills:rightFills:fillStyles:lineWidths:lineFills:)!!CompositionScanner reorganize!('*MinimalMorphic-scanning' composeFrom:inRectangle:firstLine:leftSide:rightSide:)('*MinimalMorphic-stop conditions' setFont)('accessing' rightX)('intialize-release' forParagraph:)('scanning' composeLine:fromCharacterIndex:inParagraph: setActualFont:)('stop conditions' columnBreak cr crossedX endOfRun placeEmbeddedObject: setStopConditions space tab)!!Component class reorganize!('as yet unclassified' addSlotNamed: includeInNewMorphMenu)('compiling' acceptsLoggingOfCompilation wantsChangeSetLogging)!!ComplexBorder reorganize!('accessing' colors style style: widthForRounding)('color tracking' trackColorFrom:)('drawing' drawLineFrom:to:on: drawPolyPatchFrom:to:on:usingEnds: framePolygon2:on: framePolygon:on: frameRectangle:on:)('initialize' releaseCachedState)('testing' isComplex)('private' colorsForDirection: computeAltFramedColors computeAltInsetColors computeAltRaisedColors computeColors computeFramedColors computeInsetColors computeRaisedColors fillStyleForDirection: intersectFrom:with:to:with:)!!Complex reorganize!('*MinimalMorphic-mathematical functions' cosh sinh)('accessing' imaginary real)('arithmetic' * + - / abs arg divideFastAndSecureBy: divideSecureBy: negated reciprocal)('comparing' = hash)('converting' adaptToCollection:andSend: adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend:)('mathematical functions' cos exp ln log: sin squared tan)('printing' printOn:)('testing' isComplex isNumber isZero)('private' imaginary: real:)!!Compiler reorganize!('*MinimalMorphic-private' interactive)('*MinimalMorphic-public access' translate:noPattern:ifFail:parser:)('error handling' notify: notify:at:)('public access' compile:in:classified:notifying:ifFail: compile:in:notifying:ifFail: compileNoPattern:in:context:notifying:ifFail: evaluate:in:to: evaluate:in:to:notifying:ifFail: evaluate:in:to:notifying:ifFail:logged: format:in:notifying:contentsSymbol: format:in:notifying:decorated: parse:in:notifying:)('private' format:noPattern:ifFail: from:class:classified:context:notifying: from:class:context:notifying: parserClass parserClass: translate:noPattern:ifFail:)!!CommandHistory class reorganize!('*MinimalMorphicInitialization' initializeClass)('system startup' forgetAllGrabCommandsFrom: resetAllHistory shutDown: startUp:)!!Command class reorganize!('class initialization' zapObsolete)('dog simple ui' redoEnabled redoNextCommand undoEnabled undoLastCommand undoRedoButtons)!!Command reorganize!('command execution' doCommand redoCommand stillValid undoCommand)('copying' veryDeepFixupWith: veryDeepInner:)('initialization' cmdWording: phase: redoTarget:selector:argument: redoTarget:selector:arguments: undoTarget:selector:argument: undoTarget:selector:arguments:)('parameters' parameterAt: parameterAt:ifAbsent: parameterAt:put:)('printing' printOn:)('private' assuredParameterDictionary cmdWording phase undoTarget)!!ColorTheme class reorganize!('accessing' current current: defaultTheme)('applying' apply applyTheme:)!!ColorMap class reorganize!('*MinimalMorphic-instance creation' mappingToARGB:)('instance creation' colors: mapBitsFrom:to: mappingFrom:to: mappingFromARGB: masks:shifts: shifts:masks: shifts:masks:colors:)!!ColorMap reorganize!('*MinimalMorphic-accessing' alphaMask: alphaShift: blueMask: blueShift: greenMask: greenShift: redMask: redShift:)('accessing' alphaMask alphaShift at: at:put: blueMask blueShift colors greenMask greenShift inverseMap masks redMask redShift rgbaBitMasks shifts)('comparing' = hash)('pixel mapping' mapPixel: mappingTo: pixelMap:)('testing' isColormap isFixed isIndexed)('private' setShifts:masks:colors:)!!Color class reorganize!('*MinimalMorphic-class initialization' initializeTranslucentPatterns)('*MinimalMorphic-color from user' colorTest:extent:colorMapper:)('*MinimalMorphic-examples' colorRampForDepth:extent: hotColdShades: showColorCube showHSVPalettes showHuesInteractively)('class initialization' initialize initializeGrayToIndexMap initializeHighLights initializeIndexedColors initializeNames named:put:)('color from user' fromUser oldColorPaletteForDepth:extent:)('colormaps' cachedColormapFrom:to: colorMapIfNeededFrom:to: computeColormapFrom:to: computeRGBColormapFor:bitsPerColor:)('examples' showColors: wheel: wheel:saturation:brightness:)('instance creation' colorFrom: colorFromPixelValue:depth: fromArray: fromRgbTriplet: fromString: gray: h:s:v: h:s:v:alpha: new r:g:b: r:g:b:alpha: r:g:b:range: random)('named colors' black blue brown cyan darkGray gray green lightBlue lightBrown lightCyan lightGray lightGreen lightMagenta lightOrange lightRed lightYellow magenta orange paleBlue paleBuff paleGreen paleMagenta paleOrange palePeach paleRed paleTan paleYellow red tan transparent veryDarkGray veryLightGray veryPaleRed veryVeryDarkGray veryVeryLightGray white yellow)('other' colorNames hex: indexedColors maskingMap: pixelScreenForDepth: quickHighLight: shutDown translucentMaskFor:depth:)!!Color reorganize!('*MinimalMorphic-*Morphic' iconOrThumbnailOfSize:)('*MinimalMorphic-conversions' pixelValue32)('*MinimalMorphic-transformations' paler slightlyWhiter)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('*eToys-other' newTileMorphRepresentative)('*nebraska-*nebraska-Morphic-Remote' encodeForRemoteCanvas)('Morphic menu' addFillStyleMenuItems:hand:from: changeColorIn:event:)('access' alpha blue brightness green hue luminance red saturation)('conversions' asColor asColorref asHTMLColor asNontranslucentColor balancedPatternForDepth: bitPatternForDepth: closestPixelValue1 closestPixelValue2 closestPixelValue4 closestPixelValue8 dominantColor halfTonePattern1 halfTonePattern2 indexInMap: makeForegroundColor pixelValueForDepth: pixelWordFor:filledWith: pixelWordForDepth: scaledPixelValue32)('copying' veryDeepCopyWith:)('equality' = diff: hash)('groups of shades' darkShades: lightShades: mix:shades: wheel:)('html' printHtmlString)('other' colorForInsets display name raisedColor rgbTriplet)('printing' byteEncode: printOn: shortPrintString storeArrayOn: storeArrayValuesOn: storeOn:)('queries' basicType isBitmapFill isBlack isColor isGradientFill isGray isOpaque isOrientedFill isSolidFill isTranslucent isTranslucentColor isTransparent)('self evaluating' isSelfEvaluating)('transformations' * + - / adjustBrightness: adjustSaturation:brightness: alpha: alphaMixed:with: atLeastAsLuminentAs: atMostAsLuminentAs: blacker dansDarker darker duller lighter mixed:with: muchDarker muchLighter negated orColorUnlike: slightlyDarker slightlyLighter twiceDarker twiceLighter veryMuchLighter whiter)('private' attemptToMutateError flushCache privateAlpha privateBlue privateGreen privateRGB privateRed setHue:saturation:brightness: setPrivateRed:green:blue: setRGB: setRed:green:blue: setRed:green:blue:range:)!!CharacterSet class reorganize!('*MinimalMorphic-instance creation' nonSeparators)('instance creation' allCharacters empty newFrom: separators)!!Bag reorganize!('*MinimalMorphic-accessing' valuesAndCounts)('accessing' at: at:put: cumulativeCounts size sortedCounts sortedElements)('adding' add: add:withOccurrences:)('comparing' =)('converting' asBag asSet)('copying' copy)('enumerating' do:)('removing' remove:ifAbsent:)('testing' includes: occurrencesOf:)('private' setContents:)!!Collection reorganize!('*MinimalMorphic-*Morphic-objectMenu' asKnownNameMenu)('*MinimalMorphic-converting' asIdentitySkipList asSkipList)('*MinimalMorphic-enumerating' collect:thenDo:)('*MinimalMorphic-testing' contains: ifNotEmpty:ifEmpty:)('*packageinfo-base' gather:)('*services-base' chooseOne:)('accessing' anyOne atRandom capacity size)('adapting' adaptToCollection:andSend: adaptToComplex:andSend: adaptToNumber:andSend: adaptToPoint:andSend: adaptToString:andSend:)('adding' add: add:withOccurrences: addAll: addIfNotPresent:)('arithmetic' * + - / // \\ raisedTo:)('comparing' hash)('converting' asArray asBag asByteArray asCharacterSet asIdentitySet asOrderedCollection asSet asSkipList: asSortedArray asSortedCollection asSortedCollection: topologicallySortedUsing:)('copying' , copyWith: copyWithDependent: copyWithout: copyWithoutAll:)('enumerating' allSatisfy: anySatisfy: associationsDo: collect: collect:thenSelect: count: detect: detect:ifNone: detectMax: detectMin: detectSum: difference: do: do:displayingProgress: do:separatedBy: do:without: groupBy:having: inject:into: intersection: noneSatisfy: reject: reject:thenDo: select: select:thenCollect: select:thenDo: union:)('filter streaming' contents flattenOnStream: write:)('math functions' abs arcCos arcSin arcTan average ceiling cos degreeCos degreeSin exp floor ln log max median min negated range reciprocal roundTo: rounded sign sin sqrt squared sum tan truncated)('printing' asCommaString asCommaStringAnd asStringOn:delimiter: asStringOn:delimiter:last: printElementsOn: printNameOn: printOn: printOn:delimiter: printOn:delimiter:last: storeOn:)('removing' remove: remove:ifAbsent: removeAll: removeAllFoundIn: removeAllSuchThat:)('testing' identityIncludes: ifEmpty: ifEmpty:ifNotEmpty: ifEmpty:ifNotEmptyDo: ifNotEmpty: ifNotEmptyDo: ifNotEmptyDo:ifEmpty: includes: includesAllOf: includesAnyOf: includesSubstringAnywhere: isCollection isEmpty isEmptyOrNil isSequenceable isZero notEmpty occurrencesOf:)('private' emptyCheck errorEmptyCollection errorNoMatch errorNotFound: errorNotKeyed toBraceStack:)!!CodeLoader class reorganize!('accessing' defaultBaseURL defaultBaseURL: defaultKey defaultKey: tryHttpURL:)('utilities' compressFileNamed: compressFileNamed:in: exportCategories:to: exportCategoryNamed: exportClassesNamed:to: exportCodeSegment:classes:keepSource: loadCode:from:ifClassNotLoaded: loadCodeSegment: signFile:renameAs:key:dsa: signFiles:in:key: signFiles:key: signFilesFrom:to:key: verifySignedFileNamed:)!!CodeLoader reorganize!('accessing' baseURL baseURL: publicKey publicKey: segments)('debugging' tryVersion:)('initialize-release' initialize)('installing' installLastMonticelloFor: installMonticelloFor: installProject installSegment: installSegments installSourceFile: installSourceFiles lookLastVersion: lookMonticelloVersion: readObject:)('loading' loadSegments: loadSourceFiles:)('private' createRequestFor:in: httpRequestClass)!!Clipboard class reorganize!('*MinimalMorphic-accessing' chooseRecentClipping)('accessing' clipboardText clipboardText: default default:)('class initialization' clearInterpreters startUp)!!Clipboard reorganize!('*MinimalMorphic-accessing' chooseRecentClipping)('accessing' clearInterpreter clipboardText clipboardText: interpreter setInterpreter)('initialize' initialize)('primitives' primitiveClipboardText primitiveClipboardText:)('private' noteRecentClipping:)!!ClassOrganizer reorganize!('*ob-standard-testing' isClassOrganizer)('accessing' addCategory:before: changeFromCategorySpecs: classify:under:suppressIfDefault: removeCategory: removeElement: removeEmptyCategories renameCategory:toBe: setDefaultList: sortCategories)('private' notifyOfChangedCategoriesFrom:to: notifyOfChangedCategoryFrom:to: notifyOfChangedSelector:from:to: notifyOfChangedSelectorsOldDict:newDict:)!!ClassBuilder class reorganize!('*MinimalMorphic-accessing' beSilentDuring:)('*MinimalMorphic-cleanup obsolete classes' checkClassHierarchyConsistency cleanupAndCheckClassHierarchy cleanupClassHierarchy)('accessing' beSilent: isSilent)('cleanup obsolete classes' checkClassHierarchyConsistency: checkClassHierarchyConsistencyFor: cleanupAndCheckClassHierarchy: cleanupClassHierarchy: cleanupClassHierarchyFor: countReallyObsoleteClassesAndMetaclasses isReallyObsolete: reallyObsoleteClasses reallyObsoleteMetaclasses)!!Class class reorganize!('*MinimalMorphic-fileIn/Out' fileOutPool:)('inquiries' rootsOfTheWorld)('instance creation' template: templateForSubclassOf:category:)!!Character class reorganize!('*MinimalMorphic-class initialization' initializeClassificationTable)('accessing untypeable characters' arrowDown arrowLeft arrowRight arrowUp backspace cr delete end enter escape euro home insert lf linefeed nbsp newPage pageDown pageUp space tab)('class initialization' initialize)('constants' alphabet characterTable)('instance creation' allByteCharacters allCharacters codePoint: digitValue: leadingChar:code: new separators value:)('private' constantNameFor: constantNames)!!ChangesOrganizer class reorganize!('*MinimalMorphic-class initialization' belongsInNumbered: noteChangeSetsInRelease unload)('*MinimalMorphic-removing' deleteChangeSetsNumberedLowerThan: removeEmptyUnnamedChangeSets)('*MinimalMorphic-services' buildAggregateChangeSet reorderChangeSets)('*MinimalMorphicInitialization' initializeClass)('adding' basicNewChangeSet: newChangeSet newChangeSet: newChangesFromStream:named:)('class initialization' belongsInAdditions: belongsInAll: belongsInMyInitials: belongsInProjectChangeSets: belongsInProjectsInRelease: belongsInRecentUpdates: changeSetCategoryNamed: changeSetNamesInReleaseImage changeSetNamesInThreeOh initialize initializeChangeSetCategories)('enumerating' allChangeSetNames allChangeSets allChangeSetsWithClass:selector: changeSet:containsClass: changeSetNamed: changeSetsNamedSuchThat: existingOrNewChangeSetNamed: gatherChangeSets highestNumberedChangeSet mostRecentChangeSetWithChangeForClass:selector: promoteToTop:)('removing' removeChangeSet: removeChangeSetsNamedSuchThat:)('services' assuredChangeSetNamed: countOfChangeSetsWithClass:andSelector: doesAnyChangeSetHaveClass:andSelector: recentUpdateMarker recentUpdateMarker: secondaryChangeSet)('utilities' fileOutChangeSetsNamed:)!!ChangeSet class reorganize!('*MinimalMorphic-current changeset' browseChangedMessages resetCurrentToNewUnnamedChangeSet)('*MinimalMorphic-defaults' promptForDefaultChangeSetDirectoryIfNecessary)('*MinimalMorphic-enumerating' deleteChangeSetsNumberedLowerThan: removeEmptyUnnamedChangeSets)('*MinimalMorphic-services' buildAggregateChangeSet)('*MinimalMorphicInitialization' initializeClass)('*services-extras' fileReaderServicesForFile:suffix: installCompressedCodeStream:named: newChangeSet serviceFileIntoNewChangeSet serviceInstallCompressedCode services)('class initialization' initialize)('current changeset' current currentChangeSetString newChanges: noChanges)('defaults' defaultChangeSetDirectory defaultChangeSetDirectory: defaultName uniqueNameLike:)('enumerating' allChangeSetNames allChangeSets allChangeSetsWithClass:selector: allChangeSets: basicNewChangeSet: changeSetsNamedSuchThat: changeSet:containsClass: existingOrNewChangeSetNamed: gatherChangeSets highestNumberedChangeSet mostRecentChangeSetWithChangeForClass:selector: named: promoteToTop: removeChangeSetsNamedSuchThat: removeChangeSet: secondaryChangeSet)('fileIn/Out' doWeFileOut:given:cache: superclassOrder: traitsOrder:)('instance creation' basicNewNamed: new)('scanning' getRecentLocatorWithPrompt: scanCategory: scanFile:category:class:meta:stamp: scanFile:from:to: scanVersionsOf:class:meta:category:selector:)('services' assuredChangeSetNamed: countOfChangeSetsWithClass:andSelector: doesAnyChangeSetHaveClass:andSelector: fileIntoNewChangeSet: fileOutChangeSetsNamed: newChangeSet: newChangesFromStream:named:)!!BasicClassOrganizer class reorganize!('*MinimalMorphic-instance creation' class:defaultList:)('constants' ambiguous)('instance creation' class:)!!Categorizer class reorganize!('*MinimalMorphic-housekeeping' sortAllCategories)('class initialization' allCategory default initialize nullCategory)('documentation' documentation)('instance creation' defaultList:)!!BreakpointManager class reorganize!('examples' testBreakpoint)('install-uninstall' installInClass:selector: unInstall:)('intialization-release' clear)('testing' methodHasBreakpoint:)('private' breakpointMethodSourceFor:in: compilePrototype:in: installed)!!Boolean class reorganize!('*MinimalMorphic-plugin generation' ccg:emitLoadFor:from:on: ccg:generateCoerceToOopFrom:on: ccg:generateCoerceToValueFrom:on: ccg:prolog:expr:index:)('instance creation' initializedInstance new)!!BitBlt class reorganize!('*MinimalMorphic-benchmarks' benchDiffsFrom:to: benchmark2 benchmark3)('*MinimalMorphic-examples' alphaBlendDemo antiAliasDemo exampleColorMap exampleOne exampleTwo)('*MinimalMorphic-instance creation' asGrafPort)('benchmarks' benchmark)('instance creation' bitPeekerFromForm: bitPokerToForm: current destForm:sourceForm:fillColor:combinationRule:destOrigin:sourceOrigin:extent:clipRect: destForm:sourceForm:halftoneForm:combinationRule:destOrigin:sourceOrigin:extent:clipRect: toForm:)('private' exampleAt:rule:fillColor:)!!Behavior class reorganize!('class initialization' flushObsoleteSubclasses initialize initializeObsoleteSubclasses)('testing' canZapMethodDictionary)!!Beeper class reorganize!('*MinimalMorphic-beeping' beep beepPrimitive)('*MinimalMorphic-customize' clearDefault default newDefault setDefault:)('private' primitiveBeep)!!BaseSoundSystem class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' unload)!!BalloonEngine class reorganize!('*MinimalMorphicInitialization' initializeClass)('accessing' debug: doProfileStats: printBezierStats printStat:count:string: printStats resetBezierStats resetStats)('private' allocateOrRecycleBuffer: primitiveSetBitBltPlugin: recycleBuffer:)!!BDFFontReader class reorganize!('*MinimalMorphic-documentation' gettingAndInstallingTheFonts x11FontLegalNotices)('*MinimalMorphic-file creation' convertFilesNamed:toFamilyNamed:inDirectoryNamed:)('*MinimalMorphic-resource download' convertX11FontsToStrike2 downloadFonts installX11Fonts)('file creation' new openFileNamed:)!!AutoStart class reorganize!('*MinimalMorphic-accessing' addLauncherFirst:)('*MinimalMorphic-class initialization' startUp:)('*MinimalMorphic-updating' checkForPluginUpdate checkForUpdates)('accessing' addLauncher: removeLauncher:)('class initialization' deinstall initialize shutDown:)('updating' processUpdates)('private' active active: installedLaunchers)!!AbstractSound class reorganize!('*MinimalMorphicInitialization' initializeClass)('class initialization' scaleFactor)('examples' chromaticPitchesFrom: chromaticRunFrom:to:on: chromaticScale chromaticScaleOn: hiMajorScale hiMajorScaleOn: lowMajorScale lowMajorScaleOn: majorChord majorChordOn:from: majorPitchesFrom: majorScale majorScaleOn: majorScaleOn:from: majorScaleOn:from:octaves: scaleTest testFMInteractively)('examples-bach fugue' bachFugue bachFugueOn: bachFugueVoice1On: bachFugueVoice2On: bachFugueVoice3On: bachFugueVoice4On: stereoBachFugue)('instance creation' default dur: noteSequenceOn:from: pitch:dur:loudness:)('primitive generation' translatedPrimitives)('sound library' initSounds soundNamed: soundNamed:ifAbsent: soundNamed:put: soundNames sounds updateFMSounds)('sound library-file in/out' fileInSoundLibrary fileInSoundLibraryNamed: fileOutSoundLibrary fileOutSoundLibrary: storeFiledInSound:named: unloadSampledTimbres unloadSoundNamed: unloadedSound)('utilities' busySignal: dial: dialTone: hangUpWarning: indexOfBottomOctavePitch: midiKeyForPitch: pitchForMIDIKey: pitchForName: pitchTable)!!AbstractEvent class reorganize!('*MinimalMorphic-temporary' comment1 comment2 comment3 saveChangeNotificationAsSARFileWithNumber:)('accessing' allChangeKinds allItemKinds changeKind eventSelectorBlock itemChangeCombinations supportedKinds systemEvents)('instance creation' classCategory: class: class:category: item:kind: method:class: method:protocol:class: method:selector:class: method:selector:class:requestor: method:selector:protocol:class: method:selector:protocol:class:requestor: new)('item kinds' categoryKind classKind expressionKind methodKind protocolKind)!!Class reorganize!('*MinimalMorphic-accessing' classPoolFrom:)('*MinimalMorphic-compiling' canFindWithoutEnvironment:)('*MinimalMorphic-fileIn/Out' reformatAll)('*MinimalMorphic-initialize-release' sharing:)('*MinimalMorphic-pool variables' addSharedPool: removeSharedPool:)('*MinimalMorphic-subclass creation' variableByteSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableWordSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: weakSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category:)('*eToys-class name' uniqueNameForReference)('*monticello' asClassDefinition classDefinitions poolDictionaryNames)('*ob-standard-converting' asClassSideNode asNode)('accessing' basicCategory basicCategory: basicLocalSelectors basicLocalSelectors: classPool classPool: hasTraitComposition name traitComposition traitComposition:)('accessing class hierarchy' addSubclass: removeSubclass: subclasses subclassesDoGently: subclassesDo:)('class name' externalName nameForViewer rename:)('class variables' addClassVarName: allClassVarNames classVarNames ensureClassPool removeClassVarName:)('compiling' binding bindingOf: compileAll compileAllFrom: possibleVariablesFor:continuedFrom:)('copying' copy)('fileIn/Out' fileOut fileOutAsHtml: fileOutInitializerOn: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing: fileOutPool:onFileStream: fileOutSharedPoolsOn: objectForDataStream: removeFromChanges shouldFileOutPools shouldFileOutPool: storeDataOn: withClassVersion:)('initialize-release' deactivate declare: obsolete removeFromSystem removeFromSystemUnlogged removeFromSystem: superclass:methodDictionary:format: superclass:methodDict:format:name:organization:instVarNames:classPool:sharedPools: unload)('instance variables' addInstVarName: removeInstVarName:)('organization' category category: environment environment:)('pool variables' allSharedPools sharedPools sharedPools:)('self evaluating' isSelfEvaluating)('subclass creation' newSubclass subclass:instanceVariableNames:classVariableNames:poolDictionaries:category: subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableByteSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: variableSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: variableWordSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: weakSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category:)('testing' hasMethods isObsolete isSystemDefined officialClass)('traits' applyChangesOfNewTraitCompositionReplacing:)('private' setName: spaceUsed)!!ClassDescription reorganize!('*39Deprecated' methods)('*MinimalMorphic-*39Deprecated' categoryFromUserWithPrompt: letUserReclassify:)('*MinimalMorphic-*system-support' allUnreferencedClassVariables)('*MinimalMorphic-accessing class hierarchy' classesThatImplementAllOf: commentInventory)('*MinimalMorphic-accessing parallel hierarchy' isInstanceSide)('*MinimalMorphic-compiling' moveInstVarNamed:to:after: reformatAll)('*MinimalMorphic-copying' copy:from: copyAll:from:)('*MinimalMorphic-fileIn/Out' commentFollows methodsFor:priorSource:inFile: printCategoryChunk:on:)('*MinimalMorphic-instance variables' chooseClassVarName forceNewFrom: renameInstVar:to:)('*MinimalMorphic-organization' methodReferencesInCategory:)('*MinimalMorphic-private' logMethodSource:forMethodWithNode:inCategory:withStamp:notifying:)('*eToys-accessing method dictionary' namedTileScriptSelectors)('*ob-standard-converting' asCommentNode)('accessing' classVersion version)('accessing class hierarchy' printSubclassesOn:level: removeUninstantiatedSubclassesSilently subclasses subclassesDo:)('accessing comment' classCommentBlank comment comment: comment:stamp: hasComment)('accessing method dictionary' addAndClassifySelector:withMethod:inProtocol:notifying: addSelectorSilently:withMethod: addSelector:withMethod:notifying: allMethodCategoriesIntegratedThrough: allMethodsInCategory: induceMDFault isUniClass noteAddedSelector:meta: recoverFromMDFault recoverFromMDFaultWithTrace removeCategory: removeSelector:)('accessing parallel hierarchy' classSide instanceSide isClassSide isMeta theMetaClass theNonMetaClass)('compiling' acceptsLoggingOfCompilation compile:classified: compile:classified:notifying: compile:classified:withStamp:notifying: compile:classified:withStamp:notifying:logSource: compile:notifying: compileSilently:classified: compileSilently:classified:notifying: doneCompiling noteCompilationOf:meta: reformatMethodAt: wantsChangeSetLogging wantsRecompilationProgressReported)('copying' copyAllCategoriesUnobtrusivelyFrom: copyAllUnobtrusively:from:classified: copyCategoryUnobtrusively:from: copyUnobtrusivelyCategory:from:classified: copyUnobtrusively:from:classified: copy:from:classified: copyAll:from:classified: copyAllCategoriesFrom: copyCategory:from: copyCategory:from:classified: copyMethodDictionaryFrom:)('fileIn/Out' classComment: classComment:stamp: commentStamp: commentStamp:prior: definition definitionST80 fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on:moveSource:toFile: fileOutChangedMessages:on: fileOutChangedMessages:on:moveSource:toFile: fileOutChangedMessagesHistorically:on:moveSource:toFile: fileOutMethod: fileOutMethod:asHtml: fileOutOn: fileOutOn:moveSource:toFile: fileOutOrganizationOn: methodsFor: methodsFor:stamp: methodsFor:stamp:prior: moveChangesTo: moveChangesWithVersionsTo: printCategoryChunk:on:priorMethod: printCategoryChunk:on:withStamp:priorMethod: printCategoryChunk:withStamp:on: printMethodChunk:withPreamble:on:moveSource:toFile: printMethodChunkHistorically:on:moveSource:toFile: putClassCommentToCondensedChangesFile:)('initialize-release' forgetDoIts obsolete superclass:methodDictionary:format: updateInstances:from:isMeta: updateInstancesFrom:)('instance variables' addInstVarName: allInstVarNamesEverywhere checkForInstVarsOK: chooseInstVarAlphabeticallyThenDo: chooseInstVarThenDo: classThatDefinesClassVariable: classThatDefinesInstanceVariable: instVarNames removeInstVarName: renameSilentlyInstVar:to: replaceSilently:to:)('organization' organization organization: reorganize whichCategoryIncludesSelector: zapOrganization)('organization updating' applyChangesOfNewTraitCompositionReplacing: noteRecategorizedSelectors:oldComposition: noteRecategorizedSelector:from:to: notifyOfRecategorizedSelector:from:to: updateOrganizationSelector:oldCategory:newCategory:)('printing' classVariablesString instanceVariablesString printOn: printOnStream: sharedPoolsString storeOn:)('private' errorCategoryName instVarMappingFrom: linesOfCode newInstanceFrom:variable:size:map: setInstVarNames:)!!ClassChangeRecord reorganize!('*MinimalMorphic-initialization' zapHistory)('*MinimalMorphic-removal' forgetClassRemoval)('all changes' allChangeTypes assimilateAllChangesIn: hasNoChanges includesChangeType: noteChangeType: noteChangeType:fromClass: trimHistory)('definition' checkCoherence notePriorDefinition: priorDefinition)('initialization' initFor:revertable:)('isolation layers' invokePhase1 invokePhase2 realClass revokePhase1 revokePhase2)('method changes' atSelector:ifAbsent: atSelector:put: changedSelectors compileAll:from: findOrMakeMethodChangeAt:priorMethod: infoFromRemoval: methodChangeTypes methodChanges noteNewMethod:selector:priorMethod: noteRemoveSelector:priorMethod:lastMethodInfo: removeSelector:)('removal' forgetChangesIn: isClassRemoval)('rename' noteNewName: priorName thisName)!!CanvasCharacterScanner reorganize!('accessing' canvas:)('object fileIn' convertToCurrentVersion:refStream:)('scanning' displayLine:offset:leftInRun:)('stop conditions' cr crossedX endOfRun paddedSpace setStopConditions tab)('private' defaultTextColor defaultTextColor: doesDisplaying setFont textColor:)!!CharacterScanner reorganize!('*MinimalMorphic-initialize' initializeStringMeasurer)('*MinimalMorphic-scanner methods' isBreakableAtIndex: scanJapaneseCharactersFrom:to:in:rightX:stopConditions:kern: scanMultiCharactersFrom:to:in:rightX:stopConditions:kern:)('*MinimalMorphic-scanning' measureString:inFont:from:to:)('initialize' initialize wantsColumnBreaks:)('scanning' basicScanCharactersFrom:to:in:rightX:stopConditions:kern: columnBreak embeddedObject handleIndentation indentationLevel indentationLevel: leadingTab placeEmbeddedObject: plainTab scanCharactersFrom:to:in:rightX:stopConditions:kern:)('private' addEmphasis: addKern: initializeFromParagraph:clippedBy: setActualFont: setAlignment: setConditionArray: setFont setFont: text:textStyle: textColor:)!!Character reorganize!('*packageinfo-base' escapeEntities)('accessing' asciiValue charCode codePoint digitValue leadingChar)('comparing' sameAs: < = > hash)('converting' asCharacter asIRCLowercase asInteger asLowercase asString asSymbol asText asUnicode asUnicodeChar asUppercase basicSqueakToIso isoToSqueak macToSqueak squeakToIso squeakToMac to:)('copying' clone copy deepCopy veryDeepCopyWith:)('object fileIn' comeFullyUpOnReload: objectForDataStream:)('printing' hex isLiteral printOn: printOnStream: storeBinaryOn: storeOn:)('testing' canBeGlobalVarInitial canBeNonGlobalVarInitial isAlphaNumeric isCharacter isDigit isLetter isLowercase isOctetCharacter isSafeForHTTP isSeparator isSpecial isTraditionalDomestic isUppercase isVowel tokenish)('private' setValue:)!!ChangeSet reorganize!('*MinimalMorphic-fileIn/Out' askRenames:addTo:using: buildMessageForMailOutWithUser: checkForConversionMethods checkForUncommentedClasses mailOut)('*MinimalMorphic-initialize-release' zapHistory)('*MinimalMorphic-isolation layers' isolatedProject)('*MinimalMorphic-moving changes' editPreamble)('*MinimalMorphic-private' changed:with:)('accessing' author classRemoves editPostscript hasPostscript methodChanges methodInfoFromRemoval: name name: postscriptHasDependents printOn: printOnStream: removePostscript structures superclasses)('change logging' addClass: changeClass:from: event: noteNewMethod:forClass:selector:priorMethod: removeSelector:class:priorMethod:lastMethodInfo: renameClass:from:to:)('class changes' changedClassNames changedClasses classChangeAt: commentClass: containsClass: fatDefForClass: noteClassForgotten: noteClassStructure: noteRemovalOf: reorganizeClass: trimHistory)('converting' convertApril2000:using: convertToCurrentVersion:refStream:)('fileIn/Out' askAddedInstVars: askRemovedInstVars: assurePostscriptExists assurePreambleExists checkForAlienAuthorship checkForAnyAlienAuthorship checkForSlips checkForUnclassifiedMethods checkForUncommentedMethods checkForUnsentMessages chooseSubjectPrefixForEmail defaultChangeSetDirectory fileOut fileOutChangesFor:on: fileOutCompressed fileOutOn: fileOutPSFor:on: fileOutPostscriptOn: fileOutPreambleOn: lookForSlips objectForDataStream: postscript postscriptString postscriptString: postscript: preamble preambleString preambleString: preambleTemplate preamble: setPreambleToSay: summaryString summaryStringDelta: verboseFileOut)('initialize-release' beIsolationSetFor: clear initialize isMoribund veryDeepCopyWith: wither)('isolation layers' compileAll:from: invoke isolationSet: revoke uninstall)('method changes' adoptSelector:forClass: atSelector:class:put: changedMessageList changedMessageListAugmented hasAnyChangeForSelector: messageListForChangesWhich:ifNone: methodChangesAtClass: removeSelectorChanges:class: selectorsInClass:)('moving changes' absorbClass:from: absorbMethod:class:from: absorbStructureOfClass:from: assimilateAllChangesFoundIn: expungeEmptyClassChangeEntries expungeUniclasses forgetAllChangesFoundIn: forgetChangesForClass:in: hasPreamble methodsWithAnyInitialsOtherThan: methodsWithInitialsOtherThan: methodsWithoutComments removeClassAndMetaClassChanges: removeClassChanges: removePreamble)('testing' belongsToAProject containsMethodAtPosition: correspondingProject isEmpty methodsWithoutClassifications okayToRemove okayToRemoveInforming: projectsBelongedTo)('private' addCoherency: atClass:add: atClass:includes: atSelector:class: changeRecorderFor: fileOutClassDefinition:on: oldNameFor:)!!ChangeRecord reorganize!('*MinimalMorphic-access' headerFor:)('*monticello' asMethodDefinition)('access' category fileIndex fileName fileOutOn: isMetaClassChange methodClass methodClassName methodSelector originalChangeSetForSelector: position prior readStamp stamp stamp: string text timeStamp type)('initialization' class:category:method:sourceFiles: file:position:type: file:position:type:class:category:meta:stamp: fileIn)!!BrowserProvider reorganize!('saved preferences' browserClassMenushortcut browserMethodMenushortcut)('services' browser browserButtonBar browserClassCategoryMenu browserClassMenu browserCodePaneMenu browserMethodCategoryMenu browserMethodMenu)!!BorderStyle reorganize!('accessing' baseColor baseColor: color color: colorsAtCorners dotOfSize:forDirection: style width width: widthForRounding)('color tracking' trackColorFrom:)('comparing' = hash)('drawing' drawLineFrom:to:on: frameOval:on: framePolygon:on: framePolyline:on: frameRectangle:on:)('initialize' releaseCachedState)('testing' isBorderStyle isComplex)!!Boolean reorganize!('*MinimalMorphic-logical operations' ==>)('*eToys-*morphic' newTileMorphRepresentative)('controlling' and: and:and: and:and:and: and:and:and:and: ifFalse: ifFalse:ifTrue: ifTrue: ifTrue:ifFalse: or: or:or: or:or:or: or:or:or:or: or:or:or:or:or:)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('logical operations' & eqv: not xor: |)('printing' basicType isLiteral storeOn:)('self evaluating' isSelfEvaluating)!!BlockClosure reorganize!('*MinimalMorphic-controlling' doWhileFalse: doWhileTrue:)('*MinimalMorphic-evaluating' bench)('*MinimalMorphic-exceptions' onDNU:do: valueUninterruptably)('*MinimalMorphic-private' reentrant valueError)('*MinimalMorphic-scheduling' callCC forkAndWait simulate)('accessing' env hasLiteralSuchThat: hasLiteralThorough: hasMethodReturn isBlock method numArgs)('comparing' = hash)('controlling' repeat repeatWithGCIf: whileFalse whileFalse: whileTrue whileTrue:)('evaluating' durationToRun ifError: timeToRun value valueWithExit value: value:value: value:value:value: value:value:value:value: valueWithArguments: valueWithPossibleArgs: valueWithPossibleArgument: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do:)('initializing' env: method:)('printing' printOn:)('scheduling' asContext fork forkAt: forkAt:named: forkNamed: newProcess)('private' copyForSaving fixTemps valueUnpreemptively veryDeepInner:)!!BitBlt reorganize!('*MinimalMorphic-accessing' clipHeight clipHeight: clipWidth clipWidth: clipX clipX: clipY clipY: destRect halftoneForm tallyMap)('*MinimalMorphic-copying' copy:from:in:halftoneForm:rule: copyForm:to:rule:color:)('*MinimalMorphic-private' copyBitsFrom:to:at:)('*MinimalMorphic-text display' displayString:from:to:at:kern:baselineY:font: displayString:from:to:at:kern:font: installFont:foregroundColor:backgroundColor:)('accessing' clipBy: clipByX1:y1:x2:y2: clipRect clipRect: color colorMap colorMap: combinationRule: destForm destOrigin: destRect: destX: destX:destY:width:height: destY: fillColor fillColor: halftoneForm: height: sourceForm sourceForm: sourceOrigin: sourceRect: sourceX: sourceY: tallyMap: width:)('copying' copy:from:in: copy:from:in:fillColor:rule: copyBits copyBitsSimulated copyBitsTranslucent: copyForm:to:rule: copyForm:to:rule:colorMap: copyForm:to:rule:fillColor: copyFrom:in:to: displayString:from:to:at:strikeFont:kern: fill:fillColor:rule: pixelAt: pixelAt:put:)('line drawing' drawFrom:to: drawFrom:to:withFirstPoint: drawLoopX:Y:)('private' cachedFontColormapFrom:to: clipRange copyBitsAgain eraseBits getPluginName installStrikeFont:foregroundColor:backgroundColor: installTTCFont:foregroundColor:backgroundColor: paintBits primDisplayString:from:to:map:xTable:kern: roundVariables setDestForm: setDestForm:sourceForm:fillColor:combinationRule:destOrigin:sourceOrigin:extent:clipRect:)!!Behavior reorganize!('*39Deprecated' selectorAtMethod:setClass:)('*MinimalMorphic-*39Deprecated' scopeHas:ifTrue:)('*MinimalMorphic-*Traits-requires' updateRequiredStatusFor:inSubclasses:parentSelfSenders:providedInParent:noInheritedSelfSenders: withInheritanceTraitCompositionIncludes:)('*MinimalMorphic-*system-support' allUnsentMessages)('*MinimalMorphic-accessing' classDepth)('*MinimalMorphic-accessing instances and variables' inspectAllInstances inspectSubInstances)('*MinimalMorphic-accessing method dictionary' formalParametersAt:)('*MinimalMorphic-enumerating' allInstancesEverywhereDo:)('*MinimalMorphic-initialize-release' nonObsoleteClass)('*MinimalMorphic-newcompiler' parseScope)('*MinimalMorphic-obsolete subclasses' removeAllObsoleteSubclasses)('*MinimalMorphic-printing' formatterClass)('*MinimalMorphic-queries' whichClassDefinesClassVar: whichClassDefinesInstVar: whichSelectorsAssign: whichSelectorsRead:)('*MinimalMorphic-send caches' sendCaches: superRequirements)('*MinimalMorphic-testing method dictionary' canPerform: fullyImplementsVocabulary: implementsVocabulary: isDisabledSelector: isProvidedSelector:)('*MinimalMorphic-traits' addTraitSelector:withMethod: traitTransformations)('*Traits' providedSelectors)('*Traits-requires' classAndMethodFor:do:ifAbsent: classesComposedWithMe computeSelfSendersFromInheritedSelfSenders:localSelfSenders: computeTranslationsAndUpdateUnreachableSet: findSelfSendersOf:unreachable:noInheritedSelfSenders: requiredSelectors requiredSelectorsCache sendCaches translateReachableSelfSenders:translations: updateRequiredStatusFor:inSubclasses: updateRequiredStatusFor:inSubclasses:parentSelfSenders:providedInParent:noInheritedSelfSenders:accumulatingInto:)('*omnibrowser-converting' asAnnouncement)('*system-support' allCallsOn allCallsOn:)('accessing' format methodDict name subclassDefinerClass typeOfClass)('accessing class hierarchy' allSubclasses allSubclassesWithLevelDo:startingLevel: allSuperclasses subclasses superclass superclass: withAllSubclasses withAllSuperclasses)('accessing instances and variables' allClassVarNames allInstances allInstVarNames allowsSubInstVars allSharedPools allSubInstances classVarNames instanceCount instVarNames sharedPools someInstance subclassInstVarNames)('accessing method dictionary' allSelectors basicLocalSelectors basicLocalSelectors: changeRecordsAt: commentsAt: commentsIn: compiledMethodAt: compiledMethodAt:ifAbsent: compress compressedSourceCodeAt: deregisterLocalSelector: firstCommentAt: firstPrecodeCommentFor: formalHeaderPartsFor: lookupSelector: methodDictionary methodDictionary: methodDict: methodHeaderFor: methodsDo: nextQuotePosIn:startingFrom: precodeCommentOrInheritedCommentFor: registerLocalSelector: rootStubInImageSegment: selectors selectorsAndMethodsDo: selectorsDo: selectorsWithArgs: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: standardMethodHeaderFor: supermostPrecodeCommentFor: ultimateSourceCodeAt:ifAbsent: zapAllMethods >>)('adding/removing methods' addSelectorSilently:withMethod: addSelector:withMethod: addSelector:withMethod:notifying: basicAddSelector:withMethod: basicRemoveSelector: localSelectors methodDictAddSelectorSilently:withMethod: removeSelectorSilently: removeSelector:)('as yet unclassified' asCommentNode hash)('compiling' binding compileAll compileAllFrom: compilerClass compile: compile:classified:notifying:trailer:ifFail: compile:notifying: decompilerClass decompile: defaultMethodTrailer evaluatorClass parserClass recompileChanges recompileNonResidentMethod:atSelector:from: recompile: recompile:from: sourceCodeTemplate)('copying' copy copyOfMethodDictionary deepCopy)('enumerating' allInstancesDo: allSubclassesDoGently: allSubclassesDo: allSubInstancesDo: allSuperclassesDo: selectSubclasses: selectSuperclasses: withAllSubclassesDo: withAllSuperAndSubclassesDoGently: withAllSuperclassesDo:)('initialization' emptyMethodDictionary obsolete)('initialize-release' forgetDoIts initialize superclass:methodDictionary:format:)('instance creation' basicNew basicNew: initializedInstance new new:)('naming' environment)('obsolete subclasses' addObsoleteSubclass: obsoleteSubclasses removeObsoleteSubclass:)('printing' defaultNameStemForInstances literalScannedAs:notifying: longPrintOn: prettyPrinterClass printHierarchy printOnStream: printOn: storeLiteral:on:)('queries' whichSuperclassSatisfies:)('send caches' clearSendCaches hasRequiredSelectors requirements setRequiredStatusOf:to:)('system startup' shutDown shutDown: startUp startUpFrom: startUp:)('testing' canZapMethodDictionary instSize instSpec isBehavior isBits isBytes isFixed isMeta isObsolete isPointers isVariable isWeak isWords shouldNotBeRedefined)('testing class hierarchy' includesBehavior: inheritsFrom: kindOfSubclass)('testing method dictionary' bindingOf: canUnderstand: classBindingOf: hasMethods includesLocalSelector: includesSelector: isAliasSelector: isLocalAliasSelector: thoroughWhichSelectorsReferTo:special:byte: whichClassIncludesSelector: whichSelectorsAccess: whichSelectorsReferTo: whichSelectorsReferTo:special:byte: whichSelectorsStoreInto:)('traits' addExclusionOf:to: addToComposition: applyChangesOfNewTraitCompositionReplacing: basicAddTraitSelector:withMethod: ensureLocalSelectors hasTraitComposition noteChangedSelectors: notifyUsersOfChangedSelectors: notifyUsersOfChangedSelector: purgeLocalSelectors removeAlias:of: removeFromComposition: removeTraitSelector: selfSentSelectorsFromSelectors: setTraitCompositionFrom: setTraitComposition: traitComposition traitCompositionIncludes: traitCompositionString traitComposition: traitOrClassOfSelector: traitsProvidingSelector: updateMethodDictionarySelector:)('user interface' allLocalCallsOn: allUnreferencedInstanceVariables crossReference unreferencedInstanceVariables withAllSubAndSuperclassesDo:)('private' becomeCompact becomeCompactSimplyAt: becomeUncompact flushCache indexIfCompact setFormat: spaceUsed)!!Beeper reorganize!('*MinimalMorphic-play interface' play)!!BasicRequestor reorganize!('executing' get:)('generic requests' caption: getString getStringCollection getSymbol getSymbolCollection newCaption)('initialize-release' initialize)!!BasicClassOrganizer reorganize!('*MinimalMorphic-fileIn/Out' moveChangedCommentToFile:numbered:)('accessing' classComment classComment: classComment:stamp: commentRemoteStr commentStamp commentStamp: dateCommentLastSubmitted hasNoComment hasSubject subject)('fileIn/Out' fileOutCommentOn:moveSource:toFile: objectForDataStream: putCommentOnFile:numbered:moveSource:forClass:)('private' setSubject:)!!BaseSoundSystem reorganize!('misc' randomBitsFromSoundInput: sampledSoundChoices shutDown soundNamed:)('playing' beep playSampledSound:rate: playSoundNamed: playSoundNamed:ifAbsentReadFrom: playSoundNamedOrBeep:)!!BalloonLineSimulation reorganize!('accessing' end end: initialX initialY initialZ start start:)('computing' computeInitialStateFrom:with: stepToFirstScanLineAt:in: stepToNextScanLineAt:in: subdivide)('printing' printOn: printOnStream:)!!BalloonFillData reorganize!('accessing' destForm destForm: index index: maxX maxX: minX minX: source source: width yValue yValue:)('computing' computeFill)!!BalloonEngine reorganize!('accessing' aaLevel aaLevel: aaTransform bitBlt bitBlt: clipRect clipRect: colorTransform colorTransform: deferred deferred: destOffset destOffset: edgeTransform edgeTransform: fullTransformFrom:)('copying' canProceedAfter: copyBits copyLoop copyLoopFaster copyLoopFastest processStopReason:edge:fill:)('drawing' drawBezierShape:fill:borderWidth:borderColor:transform: drawCompressedShape:transform: drawGeneralBezierShape:fill:borderWidth:borderColor:transform: drawGeneralPolygon:fill:borderWidth:borderColor:transform: drawOval:fill:borderWidth:borderColor:transform: drawPolygon:fill:borderWidth:borderColor:transform: drawRectangle:fill:borderWidth:borderColor:transform: isAlphaTransformregisterFills: registerFill: registerFill:and: registerFill:transform: registerFills:)('experimental' registerBezier:transformation: registerBoundary:transformation: registerExternalEdge:from: registerLine:transformation: subdivideExternalEdge:from:)('initialize' flush initialize postFlushIfNeeded preFlushIfNeeded release reset resetIfNeeded)('primitives-access' primClipRectInto: primFlushNeeded primFlushNeeded: primGetAALevel primGetBezierStats: primGetClipRect: primGetCounts: primGetDepth primGetFailureReason primGetOffset primGetTimes: primSetAALevel: primSetClipRect: primSetColorTransform: primSetDepth: primSetEdgeTransform: primSetOffset:)('primitives-adding' primAddBezierFrom:to:via:leftFillIndex:rightFillIndex: primAddBezierShape:segments:fill:lineWidth:lineFill: primAddBitmapFill:colormap:tile:from:along:normal:xIndex: primAddCompressedShape:segments:leftFills:rightFills:lineWidths:lineFills:fillIndexList: primAddExternalEdge:initialX:initialY:initialZ:leftFillIndex:rightFillIndex: primAddExternalFill: primAddGradientFill:from:along:normal:radial: primAddLineFrom:to:leftFillIndex:rightFillIndex: primAddOvalFrom:to:fillIndex:borderWidth:borderColor: primAddPolygon:segments:fill:lineWidth:lineFill: primAddRectFrom:to:fillIndex:borderWidth:borderColor:)('primitives-incremental' primAddActiveEdgeTableEntryFrom: primChangeActiveEdgeTableEntryFrom: primDisplaySpanBuffer primFinishedProcessing primInitializeProcessing primMergeFill:from: primNextActiveEdgeEntryInto: primNextFillEntryInto: primNextGlobalEdgeEntryInto: primRenderImage:with: primRenderScanline:with:)('primitives-misc' primCopyBufferFrom:to: primInitializeBuffer:)('profiling' doAddCompressedShape:segments:leftFills:rightFills:lineWidths:lineFills:fillIndexList:matrix:)!!BalloonBezierSimulation reorganize!('accessing' end end: inTangent initialX initialY initialZ outTangent start start: via via:)('computing' computeInitialStateFrom:with: computeSplitAt: floatStepToFirstScanLineAt:in: floatStepToNextScanLineAt:in: intStepToFirstScanLineAt:in: intStepToNextScanLineAt:in: isMonoton stepToFirstScanLineAt:in: stepToNextScanLineAt:in: subdivide subdivideAt: subdivideToBeLine subdivideToBeMonoton)('private' absoluteSquared8Dot24: debugDraw debugDraw2 debugDrawWide: printOn: printOnStream: quickPrint: quickPrint:first: stepToFirst stepToFirstInt stepToNext stepToNextInt validateIntegerRange valueAt:)!!BDFFontReader reorganize!('*MinimalMorphic-reading' errorUnsupported)('initialize' initialize openFileNamed:)('reading' errorFileFormat getLine read readAttributes readChars readOneCharacter)!!AsyncFile reorganize!('*MinimalMorphic-as yet unclassified' readByteCount:fromFilePosition:onCompletionDo: test:fileName: writeBuffer:atFilePosition:onCompletionDo:)('as yet unclassified' close fileHandle open:forWrite: waitForCompletion)('primitives' primClose: primOpen:forWrite:semaIndex: primReadResult:intoBuffer:at:count: primReadStart:fPosition:count: primWriteResult: primWriteStart:fPosition:fromBuffer:at:count:)!!ArchiveMember reorganize!('accessing' fileName fileName: isCorrupt isCorrupt: localFileName:)('initialization' close initialize)('printing' printOn:)('testing' usesFileNamed:)!!AbstractSoundSystem reorganize!('misc' randomBitsFromSoundInput: sampledSoundChoices shutDown soundNamed:)('playing' beep playSampledSound:rate: playSoundNamed: playSoundNamed:ifAbsentReadFrom: playSoundNamedOrBeep:)!!AbstractSound reorganize!('accessing' isStereo)('composition' + , asSound delayedBy:)('conversion' asSampledSound)('copying' copy copyEnvelopes sounds)('envelopes' addEnvelope: envelopes removeAllEnvelopes removeEnvelope:)('file i/o' storeAIFFOnFileNamed: storeAIFFSamplesOn: storeExtendedFloat:on: storeSampleCount:bigEndian:on: storeSunAudioOnFileNamed: storeSunAudioSamplesOn: storeWAVOnFileNamed: storeWAVSamplesOn:)('initialization' duration: initialize loudness: nameOrNumberToPitch: setPitch:dur:loudness: soundForMidiKey:dur:loudness: soundForPitch:dur:loudness:)('playing' computeSamplesForSeconds: isPlaying millisecondsSinceStart pause play playAndWaitUntilDone playChromaticRunFrom:to: playSampleCount:into:startingAt: playSilently playSilentlyUntil: resumePlaying samples)('sampling rates' controlRate originalSamplingRate samplingRate)('sound generation' doControl internalizeModulationAndRatio mixSampleCount:into:startingAt:leftVol:rightVol: reset samplesRemaining stopAfterMSecs: stopGracefully storeSample:in:at:leftVol:rightVol: updateVolume)('volume' adjustVolumeTo:overMSecs: initialVolume: loudness volumeEnvelopeScaledTo:)!!AbstractFont reorganize!('*MinimalMorphic-accessing' basicAscentOf: basicDescentOf: descentOf:)('accessing' ascent ascentOf: baseKern characterToGlyphMap derivativeFonts descent familyName height isRegular lineGrid pixelSize pointSize textStyle textStyleName xTable)('caching' releaseCachedState)('displaying' displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: installOn:foregroundColor:backgroundColor:)('measuring' approxWidthOfText: widthOf: widthOfString: widthOfString:from:to: widthOfStringOrText:)('notifications' pixelsPerInchChanged)('testing' isFontSet isTTCFont)!!AbstractEvent reorganize!('*MinimalMorphic-private-accessing' itemExpression: itemMethod:)('*MinimalMorphic-testing' isCategoryKnown isProtocolKnown)('accessing' item itemCategory itemClass itemExpression itemKind itemMethod itemProtocol itemRequestor itemSelector)('printing' printOn:)('testing' isAdded isCommented isDoIt isModified isRecategorized isRemoved isRenamed isReorganized)('triggering' trigger:)('private-accessing' changeKind environmentAt: eventSelector item:kind: itemCategory: itemClass: itemProtocol: itemRequestor: itemSelector:)!!AIFFFileReader reorganize!('accessing' bitsPerSample channelCount channelData channelDataOffset frameCount gain isLooped isStereo leftSamples loopEnd loopLength markers pitch rightSamples samplingRate)('other' pitchForKey: sound)('reading' readFromFile: readFromFile:mergeIfStereo:skipDataChunk: readFromStream:mergeIfStereo:skipDataChunk:)('private' readChunk:size: readCommonChunk: readExtendedFloat readFrom: readInstrumentChunk: readMarkerChunk: readMergedStereoChannelDataFrom: readMonoChannelDataFrom: readMultiChannelDataFrom: readSamplesChunk: readStereoChannelDataFrom:)!!Object reorganize!('*39Deprecated' beep beepPrimitive)('*MinimalMorphic-*39Deprecated' beep: contentsGetz: deprecated:explanation: deprecatedExplanation: doIfNotNil: ifKindOf:thenDo: playSoundNamed:)('*MinimalMorphic-*Morphic-NewCurve-testing''' isNonZero)('*MinimalMorphic-*Tools-Explorer' exploreAndYourself exploreWithLabel:)('*MinimalMorphic-accessing' ifNotNilDo:ifNil: presenter)('*MinimalMorphic-breakpoint' break)('*MinimalMorphic-converting' asDraggableMorph)('*MinimalMorphic-copying' veryDeepCopyUsing: veryDeepCopyWith:)('*MinimalMorphic-creation' asMorph asStringMorph asTextMorph openAsMorph)('*MinimalMorphic-debugging' needsWork)('*MinimalMorphic-debugging-haltOnce' doExpiredInspectCount halt:onCount: haltOnCount: inspectOnCount: inspectOnce inspectUntilCount: toggleHaltOnce)('*MinimalMorphic-error handling' assert:descriptionBlock: dpsTrace: dpsTrace:levels: notifyWithLabel:)('*MinimalMorphic-events' actionsWithReceiver:forEvent: renameActionsWithReceiver:forEvent:toEvent:)('*MinimalMorphic-events-accessing' actionsDo:)('*MinimalMorphic-events-removing' removeAction:forEvent:)('*MinimalMorphic-graph model' addModelYellowButtonMenuItemsTo:forMorph:hand: hasModelYellowButtonMenuItems)('*MinimalMorphic-inspecting' basicInspect inspect inspectorClass)('*MinimalMorphic-macpal' currentEvent currentHand currentVocabulary currentWorld isUniversalTiles)('*MinimalMorphic-message handling' perform:withEnoughArguments:)('*MinimalMorphic-printing' nominallyUnsent: propertyList)('*MinimalMorphic-private' primitiveError:)('*MinimalMorphic-scripting' adaptedToWorld: evaluateUnloggedForSelf: methodInterfacesForCategory:inVocabulary:limitClass: methodInterfacesForInstanceVariablesCategoryIn: methodInterfacesForScriptsCategoryIn: selfWrittenAsIll selfWrittenAsIm selfWrittenAsMe selfWrittenAsMy selfWrittenAsThis)('*MinimalMorphic-system primitives' creationStamp)('*MinimalMorphic-testing' costumes haveFullProtocolBrowsed haveFullProtocolBrowsedShowingSelector: isDictionary knownName nameForViewer vocabularyDemanded)('*MinimalMorphic-thumbnail' iconOrThumbnailOfSize:)('*MinimalMorphic-undo' commandHistory purgeAllCommands rememberUndoableAction:named:)('*MinimalMorphic-updating' changed:with: handledListVerification)('*MinimalMorphic-user interface' explore initialExtent inspectWithLabel: launchPartVia: launchPartVia:label:)('*MinimalMorphic-viewer' assureUniClass belongsToUniClass browseOwnClassSubProtocol categoriesForViewer: categoriesForVocabulary:limitClass: defaultLimitClassForVocabulary: defaultNameStemForInstances elementTypeFor:vocabulary: externalName graphicForViewerTab hasUserDefinedSlots initialTypeForSlotNamed: isPlayerLike newScriptorAround: renameScript: uniqueInstanceVariableNameLike:excluding: uniqueNameForReferenceFrom: uniqueNameForReferenceOrNil updateThresholdForGraphicInViewerTab usableMethodInterfacesIn:)('*MinimalMorphic-world hacking' couldOpenInMorphic)('*monticello' isConflict)('*omnibrowser-converting' asAnnouncement)('*services-base' requestor)('*system-support' systemNavigation)('*tools-browser' browse browseHierarchy)('accessing' addInstanceVarNamed:withValue: at: at:modify: at:put: basicAddInstanceVarNamed:withValue: basicAt: basicAt:put: basicSize bindWithTemp: ifNil:ifNotNilDo: ifNotNilDo: in: readFromString: size yourself)('associating' ->)('binding' bindingOf:)('casing' caseOf: caseOf:otherwise:)('class membership' class inheritsFromAnyIn: isKindOf: isKindOf:orOf: isMemberOf: respondsTo: xxxClass)('comparing' closeTo: hash hashMappedBy: identityHashMappedBy: identityHashPrintString literalEqual: = ~=)('converting' adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend: asActionSequence asActionSequenceTrappingErrors asOrderedCollection asString asStringOrText as: complexContents mustBeBoolean mustBeBooleanIn: printDirectlyToDisplay withoutListWrapper)('copying' clone copy copyAddedStateFrom: copyFrom: copySameFrom: copyTwoLevel deepCopy initialDeepCopierSize postCopy shallowCopy veryDeepCopy veryDeepCopySibling veryDeepFixupWith: veryDeepInner:)('debugging' haltIf:)('debugging-haltOnce' checkHaltCountExpired clearHaltOnce decrementAndCheckHaltCount decrementHaltCount doExpiredHaltCount doExpiredHaltCount: haltOnce haltOnceEnabled haltOnce: hasHaltCount removeHaltCount setHaltCountTo: setHaltOnce)('dependents access' addDependent: breakDependents canDiscardEdits dependents evaluate:wheneverChangeIn: hasUnacceptedEdits myDependents myDependents: release removeDependent:)('drag and drop' acceptDroppingMorph:event:inMorph: dragAnimationFor:transferMorph: dragPassengerFor:inMorph: dragTransferType dragTransferTypeForMorph: wantsDroppedMorph:event:inMorph:)('error handling' assert: assert:description: backwardCompatibilityOnly: caseError confirm: confirm:orCancel: deprecated: deprecated:block: doesNotUnderstand: dpsTrace:levels:withContext: dpsTraceUntilRoot: error error: explicitRequirement halt halt: handles: notify: notify:at: primitiveFailed requirement shouldBeImplemented shouldNotImplement subclassResponsibility traitConflict)('evaluating' ancestors othersClassList value valueWithArguments:)('events-accessing' actionForEvent: actionForEvent:ifAbsent: actionMap actionSequenceForEvent: createActionMap hasActionForEvent: setActionSequence:forEvent: updateableActionMap)('events-registering' when:evaluate: when:send:to: when:send:to:withArguments: when:send:to:with:)('events-removing' releaseActionMap removeActionsForEvent: removeActionsSatisfying: removeActionsSatisfying:forEvent: removeActionsWithReceiver: removeActionsWithReceiver:forEvent:)('events-triggering' triggerEvent: triggerEvent:ifNotHandled: triggerEvent:withArguments: triggerEvent:withArguments:ifNotHandled: triggerEvent:with: triggerEvent:with:ifNotHandled:)('filter streaming' byteEncode: drawOnCanvas: elementSeparator encodePostscriptOn: flattenOnStream: fullDrawPostscriptOn: printOnStream: putOn: storeOnStream: writeOnFilterStream:)('finalization' actAsExecutor executor finalizationRegistry finalize retryWithGC:until: toFinalizeSend:to:with:)('flagging' isThisEverCalled isThisEverCalled: logEntry logExecution logExit)('locales' localeChanged)('macpal' codeStrippedOut: contentsChanged flash instanceVariableValues objectRepresented refusesToAcceptCode scriptPerformer slotInfo)('message handling' executeMethod: perform: perform:orSendTo: perform:withArguments: perform:withArguments:inSuperclass: perform:with: perform:with:with: perform:with:with:with: withArgs:executeMethod: with:executeMethod: with:with:executeMethod: with:with:with:executeMethod: with:with:with:with:executeMethod:)('objects from disk' comeFullyUpOnReload: convertToCurrentVersion:refStream: fileOutCompressed fixUponLoad:seg: indexIfCompact objectForDataStream: readDataFrom:size: saveOnFile saveOnFileNamed: storeDataOn:)('parts bin' descriptionForPartsBin)('printing' fullPrintString isLiteral longPrintOn: longPrintOn:limitedTo:indent: longPrintString longPrintStringLimitedTo: printOn: printString printStringLimitedTo: reportableSize storeOn: storeString stringForReadout stringRepresentation)('scripting' defaultFloatPrecisionFor:)('scripts-kernel' universalTilesForGetterOf: universalTilesForInterface:)('self evaluating' isSelfEvaluating)('system primitives' asOop becomeForward: becomeForward:copyHash: className instVarAt: instVarAt:put: instVarNamed: instVarNamed:put: oopString primitiveChangeClassTo: rootStubInImageSegment: someObject)('testing' basicType beViewed haltIfNil hasLiteralSuchThat: hasLiteralThorough: isArray isBehavior isBlock isBlockClosure isCharacter isCollection isColor isColorForm isCompiledMethod isComplex isFloat isForm isFraction isHeap isInteger isInterval isMessageSend isMethodProperties isMorph isMorphicEvent isMorphicModel isNumber isPoint isPseudoContext isRectangle isSketchMorph isStream isString isSymbol isSystemWindow isText isTrait isTransparent isVariableBinding isWebBrowser name notNil openInstanceBrowserWithTiles renameInternal: renameTo: showDiffs stepAt:in: stepIn: stepTime stepTimeIn: wantsDiffFeedback wantsSteps wantsStepsIn:)('translation support' inline: var:declareC:)('undo' capturedState redoFromCapturedState: refineRedoTarget:selector:arguments:in: refineUndoTarget:selector:arguments:in: rememberCommand: undoFromCapturedState:)('updating' changed changed: noteSelectionIndex:for: okToChange updateListsAndCodeIn: update: update:with: windowIsClosing)('user interface' addModelItemsToWindowMenu: addModelMenuItemsTo:forMorph:hand: asExplorerString defaultBackgroundColor defaultLabelForInspector eToyStreamedRepresentationNotifying: fullScreenSize hasContentsInExplorer inform: launchTileToRefer modelSleep modelWakeUp modelWakeUpIn: mouseUpBalk: newTileMorphRepresentative notYetImplemented windowActiveOnFirstClick windowReqNewLabel:)('viewer' chooseNewNameForReference infoFor:inViewer: methodInterfacesInPresentationOrderFrom:forCategory: offerViewerMenuForEvt:morph: offerViewerMenuFor:event: tilePhrasesForCategory:inViewer: tilePhrasesForMethodInterfaces:inViewer: tilePhrasesForSelectorList:inViewer: tileToRefer uniqueNameForReference)('private' errorImproperStore errorNonIntegerIndex errorNotIndexable errorSubscriptBounds: species storeAt:inTempFrame:)!!MessageCatcher reorganize!('*MinimalMorphic-as yet unclassified' privAccumulator privAccumulator:)('as yet unclassified' doesNotUnderstand:)!!Component reorganize!('drag and drop' justDroppedInto:event:)('initialize' initComponentIn:)('naming' chooseNameLike: nameMeIn: renameMe)('variables' addVariableNamed: removeVariableNamed:)('viewer' externalName)!!TTestingDescription reorganize!('*MinimalMorphic-accessing parallel hierarchy' isInstanceSide)('accessing parallel hierarchy' isClassSide isMeta)!!TPureBehavior reorganize!('*MinimalMorphic-accessing method dictionary' formalParametersAt:)('*MinimalMorphic-newcompiler' parseScope)('*MinimalMorphic-send caches' sendCaches: superRequirements)('*MinimalMorphic-testing method dictionary' fullyImplementsVocabulary: implementsVocabulary: isDisabledSelector: isProvidedSelector:)('*MinimalMorphic-traits' traitTransformations)('*Traits' providedSelectors)('accessing class hierarchy' withAllSuperclasses)('accessing method dictionary' allSelectors basicLocalSelectors basicLocalSelectors: changeRecordsAt: classAndMethodFor:do:ifAbsent: compiledMethodAt: compiledMethodAt:ifAbsent: compress compressedSourceCodeAt: deregisterLocalSelector: firstCommentAt: firstPrecodeCommentFor: formalHeaderPartsFor: lookupSelector: methodDict methodDictionary methodDictionary: methodDict: methodHeaderFor: methodsDo: registerLocalSelector: selectors selectorsAndMethodsDo: selectorsDo: selectorsWithArgs: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: standardMethodHeaderFor: ultimateSourceCodeAt:ifAbsent: >>)('adding/removing methods' addSelectorSilently:withMethod: addSelector:withMethod: addSelector:withMethod:notifying: basicAddSelector:withMethod: basicRemoveSelector: localSelectors methodDictAddSelectorSilently:withMethod: removeSelectorSilently: removeSelector:)('as yet unclassified' asCommentNode)('compiling' binding bindingOf: compileAll compileAllFrom: compilerClass compile: compile:classified:notifying:trailer:ifFail: compile:notifying: decompilerClass decompile: defaultMethodTrailer evaluatorClass parserClass recompileChanges recompileNonResidentMethod:atSelector:from: recompile: recompile:from: sourceCodeTemplate)('copying' copy copyOfMethodDictionary deepCopy)('initialization' emptyMethodDictionary obsolete)('naming' environment name)('printing' defaultNameStemForInstances literalScannedAs:notifying: longPrintOn: prettyPrinterClass storeLiteral:on:)('send caches' clearSendCaches hasRequiredSelectors requirements sendCaches setRequiredStatusOf:to:)('testing' canZapMethodDictionary includesBehavior:)('testing method dictionary' canUnderstand: hasMethods includesLocalSelector: includesSelector: isAliasSelector: isLocalAliasSelector: thoroughWhichSelectorsReferTo:special:byte: whichSelectorsReferTo: whichSelectorsReferTo:special:byte:)('traits' addExclusionOf:to: addToComposition: addTraitSelector:withMethod: applyChangesOfNewTraitCompositionReplacing: ensureLocalSelectors hasTraitComposition noteChangedSelectors: notifyUsersOfChangedSelectors: notifyUsersOfChangedSelector: purgeLocalSelectors removeAlias:of: removeFromComposition: removeTraitSelector: selfSentSelectorsFromSelectors: setTraitCompositionFrom: setTraitComposition: traitComposition traitCompositionIncludes: traitCompositionString traitComposition: traitOrClassOfSelector: traitsProvidingSelector: updateMethodDictionarySelector:)('user interface' crossReference)('private' spaceUsed)!!TFileInOutDescription reorganize!('*MinimalMorphic-fileIn/Out' methodsFor:priorSource:inFile: printCategoryChunk:on:)('fileIn/Out' definition fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on:moveSource:toFile: fileOutChangedMessages:on: fileOutChangedMessages:on:moveSource:toFile: fileOutMethod: fileOutMethod:asHtml: fileOutOn: fileOutOn:moveSource:toFile: fileOutOrganizationOn: methods methodsFor: methodsFor:stamp: methodsFor:stamp:prior: moveChangesTo: printCategoryChunk:on:priorMethod: printCategoryChunk:on:withStamp:priorMethod: printCategoryChunk:withStamp:on: printMethodChunk:withPreamble:on:moveSource:toFile: putClassCommentToCondensedChangesFile:)!!TCopyingDescription reorganize!('*MinimalMorphic-copying' copy:from: copyAll:from:)('copying' copyAllCategoriesFrom: copyAll:from:classified: copyCategory:from: copyCategory:from:classified: copyMethodDictionaryFrom: copy:from:classified:)!!TComposingDescription reorganize!('composition' + - @)('converting' asTraitComposition)('private' addCompositionOnLeft: addOnTheLeft:)!!TCompilingDescription reorganize!('*MinimalMorphic-compiling' reformatAll)('compiling' acceptsLoggingOfCompilation compileSilently:classified: compileSilently:classified:notifying: compile:classified: compile:classified:notifying: compile:classified:withStamp:notifying: compile:classified:withStamp:notifying:logSource: compile:notifying: doneCompiling noteCompilationOf:meta: reformatMethodAt: wantsChangeSetLogging wantsRecompilationProgressReported)!!TCompilingBehavior reorganize!('*MinimalMorphic-newcompiler' parseScope)('*MinimalMorphic-testing method dictionary' fullyImplementsVocabulary: implementsVocabulary:)('accessing method dictionary' compiledMethodAt: compiledMethodAt:ifAbsent: compress compressedSourceCodeAt: firstCommentAt: firstPrecodeCommentFor: methodDictionary methodDictionary: methodsDo: selectors selectorsAndMethodsDo: selectorsDo: selectorsWithArgs: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: >>)('adding/removing methods' addSelectorSilently:withMethod: addSelector:withMethod: addSelector:withMethod:notifying: basicAddSelector:withMethod: basicRemoveSelector: removeSelectorSilently: removeSelector:)('as yet unclassified' asCommentNode)('compiling' binding bindingOf: compileAll compileAllFrom: compilerClass compile: compile:classified:notifying:trailer:ifFail: compile:notifying: decompilerClass decompile: defaultMethodTrailer evaluatorClass parserClass recompileChanges recompileNonResidentMethod:atSelector:from: recompile: recompile:from:)('copying' copyOfMethodDictionary)('testing method dictionary' hasMethods includesSelector: thoroughWhichSelectorsReferTo:special:byte: whichSelectorsReferTo: whichSelectorsReferTo:special:byte:)('user interface' crossReference)('private' spaceUsed)!!TCommentDescription reorganize!('*MinimalMorphic-fileIn/Out' commentFollows)('*ob-standard-converting' asCommentNode)('accessing comment' comment comment: comment:stamp: hasComment)('fileIn/Out' classComment: classComment:stamp: commentStamp: commentStamp:prior:)!!TBasicCategorisingDescription reorganize!('*MinimalMorphic-organization' methodReferencesInCategory:)('accessing method dictionary' removeCategory:)('organization' reorganize whichCategoryIncludesSelector: zapOrganization)('private' errorCategoryName)!!TAccessingTraitCompositionBehavior reorganize!('testing method dictionary' isAliasSelector: isLocalAliasSelector:)('traits' addExclusionOf:to: addToComposition: removeAlias:of: removeFromComposition: traitOrClassOfSelector: traitsProvidingSelector:)!