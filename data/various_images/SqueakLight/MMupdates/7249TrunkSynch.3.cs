'From MinimalMorphic of 8 December 2006 [latest update: #7249] on 9 December 2009 at 7:44:06 am'!"Change Set:		7249TrunkSynchDate:			9 December 2009Author:			Edgar J. De CleeneExperiment for try to synch this with trunk"	MCWorkingCopy allManagers		do: [:each | each repositoryGroup addRepository: (MCHttpRepository new location: 'http://source.squeak.org/trunk';					 user: 'squeak';					 password: 'squeak')]!!MCConfiguration methodsFor: 'private' stamp: 'edc 8/27/2009 07:28'!depsSatisfying: selectBlock versionDo: verBlock displayingProgress: progressString 	| repoMap count packagesInThis existe |	repoMap := Dictionary new.	packagesInThis := #('39Deprecated' 'Balloon' 'Collections' 'Compiler' 'Compression' 'Exceptions' 'Files' 'Graphics' 'Kernel' 'MonticelloConfigurations' 'Morphic' 'MorphicExtras' 'Multilingual' 'Network'  'PreferenceBrowser' 'Protocols' 'ReleaseBuilder' 'ST80' 'Services' 'Sound' 'System' 'SUnit' 'ToolBuilder' 'Tools' 'TrueType' 'VersionNumber').	self repositories		do: [:repo | 			MCRepositoryGroup default addRepository: repo.			repo allVersionNames				ifEmpty: [self logWarning: 'cannot read from ' , repo description]				ifNotEmptyDo: [:all | all						do: [:ver | repoMap at: ver put: repo]]].	count := 0.	self dependencies		do: [:dep | 			| ver repo | 			existe := packagesInThis includes: dep package name.			existe				ifTrue: [ver := dep versionInfo name.					repo := repoMap								at: ver								ifAbsent: [self logError: 'Version ' , ver , ' not found in any repository'.									self logError: 'Aborting'.									^ count].					(selectBlock value: dep)						ifTrue: [| new | 							new := self										versionNamed: ver										for: dep										from: repo.							new								ifNil: [self logError: 'Could not download version ' , ver , ' from ' , repo description.									self logError: 'Aborting'.									^ count]								ifNotNil: [self logUpdate: dep package with: new.									ProgressNotification signal: '' extra: 'Installing ' , ver.									verBlock value: new.									count := count + 1]].					dep package workingCopy repositoryGroup addRepository: repo]				ifFalse: [self logWarning: 'NOT LOADING ' , dep package name printString]]		displayingProgress: progressString.	^ count! !!MCPackageLoader methodsFor: 'private' stamp: 'edc 9/1/2009 03:37'!useChangeSetNamed: baseName during: aBlock    "Use the named change set, or create one with the given name."    | changeHolder oldChanges newChanges csName |    changeHolder := (ChangeSet respondsTo: #newChanges:)                        ifTrue: [ChangeSet]                        ifFalse: [Smalltalk].    oldChanges := (ChangeSet respondsTo: #current)                        ifTrue: [ChangeSet current]                        ifFalse: [Smalltalk changes].csName := (SystemVersion current highestUpdate + 1) asString,baseName.    newChanges := (ChangesOrganizer changeSetNamed: csName) ifNil: [ ChangeSet new name: csName ].    changeHolder newChanges: newChanges.    [aBlock value] ensure: [changeHolder newChanges: oldChanges].SystemVersion current registerUpdate: SystemVersion current highestUpdate + 1! !