'From MinimalMorphic of 8 December 2006 [latest update: #7230] on 24 June 2009 at 8:16:33 am'!!Morph methodsFor: 'accessing' stamp: 'md 2/27/2006 09:54'!player	"answer the receiver's player"	^ extension ifNotNil: [extension player]! !!MorphExtension methodsFor: '*MorphicExtras-accessing' stamp: 'dgd 2/16/2003 21:42'!player	"answer the receiver's player"	^ player! !!PasteUpMorph methodsFor: 'world state' stamp: 'di 7/15/1999 09:51'!triggerClosingScripts	"If the receiver has any scripts set to run on closing, run them now"	| aPlayer |	(aPlayer _ self player) ifNotNil:		[aPlayer runAllClosingScripts]! !!Project methodsFor: 'file in/out' stamp: 'tk 7/28/2005 04:58'!restoreReferences	| key newKey extName |	"I just came in from an exported segment.  Take all my players that were in References, and reinstall them."	"*** Note that (world valueOfProperty: #References) is temporary during loading and is not the same as the global References dictionary (in Smalltalk)."	(world valueOfProperty: #References ifAbsent: [#()]) do: [:assoc | "just came in"		key _ assoc key.		(References includesKey: key) 			ifTrue: ["must rename" 				extName _ assoc value externalName.	"what user sees"				(References at: key) == assoc value ifTrue: [					self error: 'why is this object already present?'].				newKey _ assoc value uniqueNameForReference.				References removeKey: newKey.				assoc key: newKey.				References add: assoc.	"use the known association"				Preferences universalTiles					ifTrue: [assoc value renameTo: newKey] 	"change names in scripts"					ifFalse: [(assoc value renameInternal: extName)	"keep externalName the same"								ifNil: [assoc value renameTo: newKey]].									"rename Project itself.  Ignore others"				]			ifFalse: [References add: assoc]].	world removeProperty: #References.! !