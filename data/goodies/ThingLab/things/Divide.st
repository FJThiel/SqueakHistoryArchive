ThingLabObject subclass: #Divide	instanceVariableNames: 'num den quotient center'	classVariableNames: ''	poolDictionaries: ''	category: 'Prototypes'!Divide prototype parts: 'num den quotient center'.Divide prototype field: 'num' replaceWith: #Node clonePrototype.Divide prototype field: 'den' replaceWith: #Node clonePrototype.Divide prototype field: 'quotient' replaceWith: #Node clonePrototype.Divide prototype field: 'center' replaceWith: 100@100.Divide prototype num primitiveSet.location: 60@70.Divide prototype den primitiveSet.location: 60@130.Divide prototype quotient primitiveSet.location: 140@100!Divide prototype inserters:  #('quotient'  'center'  'num'  'den')!Constraint owner: Divide prototype	rule: 'quotient value = (num value/den value)'	methods:  #('quotient primitiveSet.value: num value/den value'		'num primitiveSet.value: quotient value*den value'		'den primitiveSet.value: num value/quotient value')!Divide quickCompile:'showPicture: medium		| p |	p _ ConstraintPicture new 		center: center		name: ''/''		leftNodes: (Array with: num with: den)		rightNodes: (Array with: quotient)		topNodes: #()		bottomNodes: #().	p showPicture: medium.'!