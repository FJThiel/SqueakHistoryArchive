"DigitalAmmeter""make sure the superclass exists"#Meter lookupClass!Meter subclass: #DigitalAmmeter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Prototypes'!Constraint owner: DigitalAmmeter prototype	rule: 'lead1 node voltage=lead2 node voltage'	methods: #('lead1 node primitiveSet.voltage: lead2 node voltage'		'lead2 node primitiveSet.voltage: lead1 node voltage')!DigitalAmmeter compile: 'showPicture: medium	| center |	super showPicture: medium.	center_lead1 node location+lead2 node location//2.	((lead1 current asFloat fixedPrintString: 3) , ''amps'') asDisplayText displayOn: medium at: center-(15@15) rule: Form paint'classified: 'showing'!