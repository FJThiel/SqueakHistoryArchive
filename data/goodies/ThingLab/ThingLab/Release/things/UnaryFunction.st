ThingLabObject subclass: #UnaryFunction	instanceVariableNames: 'arg1 result enabled text '	classVariableNames: ''	poolDictionaries: ''	category: 'Prototypes'!UnaryFunction prototype parts: 'arg1 result enabled text'.UnaryFunction prototype inserters:  #('arg1'  'result').UnaryFunction prototype constrainers: #( () ).UnaryFunction prototype field: 'arg1' replaceWith: #Node clonePrototype.UnaryFunction prototype field: 'result' replaceWith: #Node clonePrototype.UnaryFunction prototype field: 'enabled' replaceWith: #Node clonePrototype.UnaryFunction prototype field: 'text' replaceWith: #TextThing clonePrototype.	UnaryFunction prototype text primitiveSet.frame: (50@50 corner: 70@70).UnaryFunction prototype arg1 primitiveSet.location: 20@60.UnaryFunction prototype result primitiveSet.location: 100@60.UnaryFunction prototype enabled primitiveSet.location: 60@48.UnaryFunction prototype text primitiveSet.text:  'F' asText.UnaryFunction prototype text center!"prevent infinite recursion when satisfying constraints for recursive definitions"UnaryFunction quickCompile: 	'constraintEnabled ^enabled node value'!UnaryFunction quickCompile:'printOn: strm	strm nextPutAll: self class name; nextPutAll: '' (''.	arg1 value printOn: strm.	strm nextPut: $,.	result value printOn: strm.	strm nextPut: $)'!UnaryFunction quickCompile:'showPicture: medium		| p |	p _ ConstraintPicture new 		center: text frame center		name: text text asString		leftNodes: (Array with: arg1)		rightNodes: (Array with: result)		topNodes: (Array with: enabled)		bottomNodes: #().	p showPicture: medium.'!