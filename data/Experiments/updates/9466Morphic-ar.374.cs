'From Squeak3.11alpha of 13 February 2010 [latest update: #9483] on 9 March 2010 at 11:11:23 am'!!MorphicProject methodsFor: 'enter' stamp: 'ar 3/5/2010 20:32'!pauseSoundPlayers	"Pause sound players, subject to preference settings"	(world hasProperty: #letTheMusicPlay)		ifTrue: [world removeProperty: #letTheMusicPlay]		ifFalse: [Smalltalk at: #ScorePlayer ifPresent:					[:playerClass | playerClass allSubInstancesDo:						[:player | player pause]]]! !!TextEditor methodsFor: 'menu messages' stamp: 'ar 3/5/2010 20:26'!referencesToIt	"Open a references browser on the selected symbol"	| aSymbol |	self selectLine.	((aSymbol := self selectedSymbol) == nil or:		[(Smalltalk globals includesKey: aSymbol) not])			ifTrue: [^ morph flash].	self systemNavigation browseAllCallsOn: (Smalltalk globals associationAt: self selectedSymbol)! !!TextEditor methodsFor: 'explain' stamp: 'ar 3/5/2010 20:42'!explainClass: symbol 	"Is symbol a class variable or a pool variable?"	| class reply classes |	(model respondsTo: #selectedClassOrMetaClass)		ifFalse: [^ nil].	(class := model selectedClassOrMetaClass) ifNil: [^ nil].	"no class is selected"	(class isKindOf: Metaclass)		ifTrue: [class := class soleInstance].	classes := class withAllSuperclasses.	"class variables"	reply := classes detect: [:each | each classVarNames anySatisfy: [:name | symbol = name]]				ifNone: [].	reply == nil ifFalse: [^ '"is a class variable, defined in class ' , reply printString , '"\' withCRs , 'SystemNavigation new browseAllCallsOn: (' , reply printString , ' classPool associationAt: #' , symbol , ').'].	"pool variables"	classes do: [:each | each sharedPools			anySatisfy: [:pool | (pool includesKey: symbol)					and: 						[reply := pool.						true]]].	reply		ifNil: [(Undeclared includesKey: symbol)				ifTrue: [^ '"is an undeclared variable.' , '"\' withCRs , 'SystemNavigation new browseAllCallsOn: (Undeclared associationAt: #' , symbol , ').']]		ifNotNil: 			[classes := WriteStream on: Array new.			self systemNavigation				allBehaviorsDo: [:each | (each sharedPools						detect: 							[:pool | 							pool == reply]						ifNone: [])						~~ nil ifTrue: [classes nextPut: each]].			"Perhaps not print whole list of classes if too long. (unlikely)"			^ '"is a pool variable from the pool ' , (Smalltalk globals keyAtIdentityValue: reply) asString , ', which is used by the following classes ' , classes contents printString , '"\' withCRs , 'SystemNavigation new browseAllCallsOn: (' , (Smalltalk globals keyAtIdentityValue: reply) asString , ' bindingOf: #' , symbol , ').'].	^ nil! !