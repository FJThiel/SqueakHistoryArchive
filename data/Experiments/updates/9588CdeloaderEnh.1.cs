'From Squeak3.11alpha of 13 February 2010 [latest update: #9587] on 15 April 2010 at 9:34:55 am'!!CodeLoader methodsFor: 'accessing' stamp: 'edc 7/2/2008 10:37'!segments^ segments! !!CodeLoader methodsFor: 'installing' stamp: 'edc 12/24/2008 08:15'!installLastMonticelloFor: aList	"Install the previously loaded source files"	aList		do: [:packName | 								self lookLastVersion: packName].	sourceFiles := nil! !!CodeLoader methodsFor: 'installing' stamp: 'edc 3/6/2010 19:12'!installSourceFiles	"Install the previously loaded source files"	| aSuffix | 	sourceFiles == nil		ifTrue: [^ self].	sourceFiles		do: [:req | aSuffix :=  (req url  findTokens: '.') last..			aSuffix caseOf: {			[ 'mcz'] -> [MczInstaller installStream: req contentStream].				['sar'] ->[ SARInstaller new fileInFrom: req contentStream]}				otherwise: [self installSourceFile: req contentStream]].	sourceFiles := nil! !!CodeLoader methodsFor: 'installing' stamp: 'edc 12/24/2008 10:26'!lookLastVersion: packageName 	| mcw montiNames package version |	mcw := MCWorkingCopyBrowser new				repository: (MCHttpRepository						location: baseURL						user: 'squeak'						password: 'squeak').	mcw repository		ifNotNilDo: [:repos | montiNames := repos readableFileNames].	package := montiNames				detect: [:any | any beginsWith: packageName]				ifNone: [].	package		ifNotNil: [Utilities				informUser: 'Installing ' , packageName printString				during: [version := mcw repository loadVersionFromFileNamed: package.					version load]].	MCPackageManager		managersForCategory: packageName		do: [:wc | wc repositoryGroup				addRepository: (MCHttpRepository new location: baseURL)]! !!CodeLoader methodsFor: 'debugging' stamp: 'edc 7/10/2008 06:09'!tryVersion: packageName | mcw montiNames package version |mcw := MCWorkingCopyBrowser new repository: (MCHttpRepository				location: baseURL				user: ''				password: '').mcw repository ifNotNilDo: [:repos | montiNames := repos readableFileNames ].				package := (montiNames detect:[:ea| ea beginsWith: packageName] ifNone:[] ) .	package ifNotNil: [MCWorkingCopy allManagers do: [:each | 		each  repositoryGroup			addRepository: (MCHttpRepository new location: baseURL)]..	version := mcw repository loadVersionFromFileNamed: package.	version load].^version! !