'From Squeak3.11alpha of 13 February 2010 [latest update: #9483] on 9 March 2010 at 11:11:23 am'!!ChangeRecord methodsFor: 'access' stamp: 'ar 3/5/2010 20:40'!methodClass 	| methodClass |	type == #method ifFalse: [^ nil].	(Smalltalk globals includesKey: class asSymbol) ifFalse: [^ nil].	methodClass := Smalltalk at: class asSymbol.	meta ifTrue: [^ methodClass class]		ifFalse: [^ methodClass]! !!ImageSegment methodsFor: 'fileIn/Out' stamp: 'ar 3/5/2010 20:43'!prepareToBeSaved	"Prepare objects in outPointers to be written on the disk.  They must be able to match up with existing objects in their new system.  outPointers is already a copy.	Classes are already converted to a DiskProxy.  	Associations in outPointers:1) in Smalltalk.2) in a classPool.3) in a shared pool.4) A pool dict pointed at directly"| left myClasses outIndexes |myClasses := Set new.arrayOfRoots do: [:aRoot | aRoot class class == Metaclass ifTrue: [myClasses add: aRoot]].outIndexes := IdentityDictionary new.outPointers withIndexDo: [:anOut :ind | | key | 	anOut isVariableBinding ifTrue: [		(myClasses includes: anOut value)			ifFalse: [outIndexes at: anOut put: ind]			ifTrue: [(Smalltalk globals associationAt: anOut key ifAbsent: [3]) == anOut 				ifTrue: [outPointers at: ind put: 					(DiskProxy global: #Smalltalk selector: #associationDeclareAt: 						args: (Array with: anOut key))]				ifFalse: [outIndexes at: anOut put: ind]				]].	(anOut isKindOf: Dictionary) ifTrue: ["Pools pointed at directly"		(key := Smalltalk globals keyAtIdentityValue: anOut ifAbsent: [nil]) ifNotNil: [			outPointers at: ind put: 				(DiskProxy global: key selector: #yourself args: #())]].	anOut isMorph ifTrue: [outPointers at: ind put: 		(StringMorph contents: anOut printString, ' that was not counted')]	].left := outIndexes keys asSet.left size > 0 ifTrue: ["Globals"	(left copy) do: [:assoc |	"stay stable while delete items"		(Smalltalk globals associationAt: assoc key ifAbsent: [3]) == assoc ifTrue: [			outPointers at: (outIndexes at: assoc) put: 				(DiskProxy global: #Smalltalk selector: #associationAt: 					args: (Array with: assoc key)).			left remove: assoc]]].left size > 0 ifTrue: ["Class variables"	Smalltalk allClassesDo: [:cls | cls classPool size > 0 ifTrue: [		(left copy) do: [:assoc |	"stay stable while delete items"			(cls classPool associationAt: assoc key ifAbsent: [3]) == assoc ifTrue: [				outPointers at: (outIndexes at: assoc) put: 					(DiskProxy new global: cls name						preSelector: #classPool						selector: #associationAt: 						args: (Array with: assoc key)).				left remove: assoc]]]]].left size > 0 ifTrue: ["Pool variables"	Smalltalk globals associationsDo: [:poolAssoc | | pool |		poolAssoc value class == Dictionary ifTrue: ["a pool"			pool := poolAssoc value.			(left copy) do: [:assoc |	"stay stable while delete items"				(pool associationAt: assoc key ifAbsent: [3]) == assoc ifTrue: [					outPointers at: (outIndexes at: assoc) put: 						(DiskProxy global: poolAssoc key selector: #associationAt: 							args: (Array with: assoc key)).					left remove: assoc]]]]].left size > 0 ifTrue: [	"If points to class in arrayOfRoots, must deal with it separately"	"OK to have obsolete associations that just get moved to the new system"	self inform: 'extra associations'.	left inspect].! !!PseudoClass methodsFor: 'testing' stamp: 'ar 3/5/2010 20:40'!nameExists	^Smalltalk globals includesKey: self name asSymbol! !!SARInstaller class methodsFor: 'change set utilities' stamp: 'ar 3/5/2010 20:33'!basicNewChangeSet: newName	Smalltalk at: #ChangesOrganizer ifPresent: [ :cs | ^cs basicNewChangeSet: newName ].	(self changeSetNamed: newName) ifNotNil: [ self inform: 'Sorry that name is already used'. ^nil ].	^ChangeSet basicNewNamed: newName.! !!SARInstaller class methodsFor: 'change set utilities' stamp: 'ar 3/5/2010 20:33'!changeSetNamed: newName	Smalltalk at: #ChangesOrganizer ifPresent: [ :cs | ^cs changeSetNamed: newName ].	^ChangeSet allInstances detect: [ :cs | cs name = newName ] ifNone: [ nil ].! !!SmalltalkImage methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:36'!classNamed: className 	"Answer the global with the given name."	^globals classNamed: className! !!SmalltalkImage methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 19:58'!forgetClass: aClass logged: aBool 	"Delete the class, aClass, from the system."	^globals forgetClass: aClass logged: aBool! !!SmalltalkImage methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:02'!renameClass: aClass as: newName 	"Rename the class, aClass, to have the title newName."	^globals renameClass: aClass as: newName! !!SmalltalkImage methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:10'!renameClass: aClass from: oldName	"Rename the class, aClass, to have the title newName."	^globals renameClass: aClass from: oldName! !!SmalltalkImage methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:00'!renamedClass: aClass from: oldName to: newName	"Inform Smalltalk that aClass has been renamed"	(Array with: StartUpList with: ShutDownList) do:[:list | | index |  		index := list indexOf: oldName ifAbsent: [0].		index > 0 ifTrue: [list at: index put: newName].	].! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:18'!associationAt: aKey	"DO NOT DEPRECATE - used by ImageSegments"	^globals associationAt: aKey! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!associationAt: key ifAbsent: aBlock	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals associationAt: key ifAbsent: aBlock! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:19'!associationDeclareAt: aKey	"DO NOT DEPRECATE - used by ImageSegments"	^globals associationDeclareAt: aKey! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:19'!associationOrUndeclaredAt: aKey	"DO NOT DEPRECATE - used by binary storage"	^globals associationOrUndeclaredAt: aKey! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!do: aBlock	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals do: aBlock! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!includes: element	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals includes: element! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:21'!includesKey: key	"Answer whether the receiver has a key equal to the argument, key."	^globals includesKey: key! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!keyAtIdentityValue: anObject ifAbsent: aBlock	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals keyAtIdentityValue: anObject ifAbsent: aBlock! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!keys	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals keys! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!removeKey: key	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals removeKey: key! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:17'!removeKey: key ifAbsent: aBlock	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals removeKey: key ifAbsent: aBlock! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:22'!scopeFor: varName from: lower envtAndPathIfFound: envtAndPathBlock	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	(globals includesKey: varName)		ifTrue: [^ envtAndPathBlock value: self value: String new]		ifFalse: [^ nil]! !!SmalltalkImage methodsFor: 'dictionary access' stamp: 'ar 3/5/2010 21:18'!size	"Obsoleted."	self deprecated: 'Use Smalltalk globals'.	^globals size! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:19'!at: aKey	"Answer the global associated with the key."	^globals at: aKey! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:20'!at: key ifAbsent: aBlock	"Answer the global associated with the key or, if key isn't found,	answer the result of evaluating aBlock."	^globals at: key ifAbsent: aBlock! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:20'!at: key ifPresent: aBlock	"Lookup the given key in the globals. If it is present, answer the value of evaluating the given block with the value associated with the key. Otherwise, answer nil."	^globals at: key ifPresent: aBlock! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:21'!at: aKey put: anObject 	"Set the global at key to be anObject.  If key is not found, create a	new entry for key and set is value to anObject. Answer anObject."	^globals at: aKey put: anObject! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 20:34'!bindingOf: varName	"Answer the binding of some variable resolved in the scope of the receiver"	^globals bindingOf: varName! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:21'!environment	"For conversion from Smalltalk to SystemDictionary"	^globals! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:39'!globals	"Answer the global SystemDictionary"	^globals! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:40'!globals: aSystemDictionary	"Sets the system-wide globals"	globals ifNotNil:[self error: 'Cannot overwrite existing globals'].	globals := aSystemDictionary! !!SmalltalkImage methodsFor: 'accessing' stamp: 'ar 3/5/2010 21:40'!organization	"Return the organizer for the receiver"	^globals organization! !!SmalltalkImage class methodsFor: 'class initialization' stamp: 'ar 3/5/2010 21:52'!initialize	"SmalltalkImage initialize"	self initializeStartUpList.	self initializeShutDownList.! !!SystemDictionary methodsFor: 'accessing' stamp: 'nice 10/20/2009 23:58'!poolUsers	"Answer a dictionary of pool name -> classes that refer to it.	Also includes any globally know dictionaries (such as	Smalltalk, Undeclared etc) which although not strictly	accurate is potentially useful information"	"Smalltalk poolUsers"	| poolUsers |	poolUsers := Dictionary new.	self keys		do: [:k | "yes, using isKindOf: is tacky but for reflective code like			this it is very useful. If you really object you can:-			a) go boil your head.			b) provide a better answer.			your choice."			| pool refs |			(((pool := self at: k) isKindOf: Dictionary)					or: [pool isKindOf: SharedPool class])				ifTrue: [refs := self systemNavigation allClasses								select: [:c | c sharedPools identityIncludes: pool]								thenCollect: [:c | c name].					refs						add: (self systemNavigation								allCallsOn: (self associationAt: k)).					poolUsers at: k put: refs]].	^ poolUsers! !!SystemDictionary methodsFor: 'objects from disk' stamp: 'ar 3/5/2010 21:25'!objectForDataStream: refStrm	| dp |	"I am about to be written on an object file.  Write a reference to Smalltalk instead."	dp := DiskProxy global: #Smalltalk selector: #globals			args: #().	refStrm replace: self with: dp.	^ dp! !!SystemDictionary methodsFor: 'printing' stamp: 'ar 3/5/2010 21:25'!printOn: aStream	self == Smalltalk globals		ifTrue: [aStream nextPutAll: 'Smalltalk globals'.			aStream nextPutAll:' "a SystemDictionary with lots of globals"']		ifFalse: [super printOn: aStream]! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'sd 4/17/2003 21:15'!allClasses  	"Return all the class defines in the Smalltalk SystemDictionary"	"Smalltalk allClasses"	^ self classNames collect: [:name | self at: name]! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 1/12/2006 23:59'!allClassesAndTraits	"Return all the classes and traits defined in the Smalltalk SystemDictionary"	^ self classNames , self traitNames collect: [:each | self at: each]! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 1/13/2006 00:15'!allClassesAndTraitsDo: aBlock	^self allClassesAndTraits do: aBlock! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'sd 4/17/2003 21:18'!allClassesDo: aBlock	"Evaluate the argument, aBlock, for each class in the system."	(self classNames collect: [:name | self at: name]) do: aBlock! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 2/23/2006 21:39'!allTraits	"Return all traits defined in the Smalltalk SystemDictionary"	^ self traitNames collect: [:each | self at: each]! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 18:09'!allTraitsDo: aBlock	"Evaluate the argument, aBlock, for each trait in the system."	(self traitNames collect: [:name | self at: name]) do: aBlock! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 1/12/2006 23:57'!classNamed: className 	^self classOrTraitNamed: className.! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 1/13/2006 00:51'!classNames	"Answer a SortedCollection of all class names."	| names |	cachedClassNames == nil ifTrue:		[names := OrderedCollection new: self size.		self do: 			[:cl | (cl isInMemory				and: [(cl isKindOf: Class)					and: [(cl name beginsWith: 'AnObsolete') not]])				ifTrue: [names add: cl name]].		cachedClassNames := names asSortedCollection].	^ cachedClassNames! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'al 1/12/2006 23:56'!classOrTraitNamed: aString 	"aString is either a class or trait name or a class or trait name followed by ' class' or 'classTrait' respectively.	Answer the class or metaclass it names."	| meta baseName baseClass |	(aString endsWith: ' class')		ifTrue: [meta := true.				baseName := aString copyFrom: 1 to: aString size - 6]		ifFalse: [			(aString endsWith: ' classTrait')				ifTrue: [					meta := true.					baseName := aString copyFrom: 1 to: aString size - 11]				ifFalse: [					meta := false.					baseName := aString]].	baseClass := Smalltalk at: baseName asSymbol ifAbsent: [^ nil].	meta		ifTrue: [^ baseClass classSide]		ifFalse: [^ baseClass]! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'di 2/16/2000 10:28'!flushClassNameCache	"Smalltalk flushClassNameCache"	"Forse recomputation of the cached list of class names."	cachedClassNames := nil! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 19:58'!forgetClass: aClass logged: aBool 	"Delete the class, aClass, from the system.	Note that this doesn't do everything required to dispose of a class - to do that use Class>>removeFromSystem."	aBool ifTrue: [SystemChangeNotifier uniqueInstance classRemoved: aClass fromCategory: aClass category].	self organization removeElement: aClass name.	Smalltalk removeFromStartUpList: aClass.	Smalltalk removeFromShutDownList: aClass.	self removeKey: aClass name ifAbsent: [].	self flushClassNameCache.! !!SystemDictionary methodsFor: 'classes and traits'!hasClassNamed: aString	"Answer whether there is a class of the given name, but don't intern aString if it's not alrady interned.  4/29/96 sw"	Symbol hasInterned: aString ifTrue: 		[:aSymbol | ^ (self at: aSymbol ifAbsent: [nil]) isKindOf: Class].	^ false! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'sw 9/5/97 18:30'!removeClassNamed: aName	"Invoked from fileouts:  if there is currently a class in the system named aName, then remove it.  If anything untoward happens, report it in the Transcript.  "	| oldClass |	(oldClass := self at: aName asSymbol ifAbsent: [nil]) == nil		ifTrue:			[Transcript cr; show: 'Removal of class named ', aName, ' ignored because ', aName, ' does not exist.'.			^ self].	oldClass removeFromSystem! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:17'!renameClass: aClass as: newName 	"Rename the class, aClass, to have the title newName."	^self renameClass: aClass from: aClass name to: newName! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:16'!renameClass: aClass from: oldName 	"Rename the class, aClass, to have the title newName."	^self renameClass: aClass from: oldName to: aClass name! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 3/5/2010 20:15'!renameClass: aClass from: oldName to: newName	"Rename the class, aClass, to have the title newName."	| oldref category |	category := SystemOrganization categoryOfElement: oldName.	self organization classify: newName under: category.	self organization removeElement: oldName.	oldref := self associationAt: oldName.	self removeKey: oldName.	oldref key: newName.	self add: oldref.  "Old association preserves old refs"	Smalltalk renamedClass: aClass from: oldName to: newName.	self flushClassNameCache.	SystemChangeNotifier uniqueInstance classRenamed: aClass from: oldName to: newName inCategory: category! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'sw 10/28/96'!renameClassNamed: oldName as: newName	"Invoked from fileouts:  if there is currently a class in the system named oldName, then rename it to newName.  If anything untoward happens, report it in the Transcript.  "	| oldClass |	(oldClass := self at: oldName asSymbol ifAbsent: [nil]) == nil		ifTrue:			[Transcript cr; show: 'Class-rename for ', oldName, ' ignored because ', oldName, ' does not exist.'.			^ self].	oldClass rename: newName! !!SystemDictionary methodsFor: 'classes and traits' stamp: 'ar 12/20/2009 14:21'!traitNames	"Answer a SortedCollection of all traits (not including class-traits) names."	| names |	names := OrderedCollection new.	self do: 		[:cl | (cl isInMemory			and: [(cl isTrait)			and: [(cl name beginsWith: 'AnObsolete') not]])				ifTrue: [names add: cl name]].	^ names! !!SystemOrganizer methodsFor: 'fileIn/Out' stamp: 'ar 3/5/2010 20:42'!fileOutCategory: category on: aFileStream initializing: aBool	"Store on the file associated with aFileStream, all the traits and classes associated 	with the category and any requested shared pools in the right order."	| first poolSet tempClass classes traits |	traits := self orderedTraitsIn: category.	classes := self superclassOrder: category.	poolSet := Set new.	classes do:  [:class | class sharedPools do: [:eachPool | poolSet add: eachPool]].	poolSet size > 0 ifTrue: [		tempClass := Class new.		tempClass shouldFileOutPools ifTrue: [			poolSet := poolSet select: [:aPool |				tempClass shouldFileOutPool: (Smalltalk globals keyAtIdentityValue: aPool)].			poolSet do: [:aPool | tempClass fileOutPool: aPool onFileStream: aFileStream]]].	first := true.	traits, classes do: [:each | 		first			ifTrue: [first := false]			ifFalse: [aFileStream cr; nextPut: Character newPage; cr].		each			fileOutOn: aFileStream			moveSource: false			toFile: 0			initializing: false].	aBool ifTrue: [classes do: [:cls | cls fileOutInitializerOn: aFileStream]].! !!ZoomAndScrollControllerMorph class reorganize!('as yet unclassified')!!WorldState reorganize!('alarms' addAlarm:withArguments:for:at: adjustAlarmTimes: alarms lockAlarmsDuring: removeAlarm:for: triggerAlarmsBefore:)('canvas' assuredCanvas canvas canvas: doFullRepaint recordDamagedRect: resetDamageRecorder viewBox viewBox:)('hands' activeHand addHand: hands handsDo: handsReverseDo: removeHand: selectHandsToDrawForDamage:)('initialization' initialize stepListSize stepListSortBlock)('object fileIn' convertAlarms convertStepList)('objects from disk' convertToCurrentVersion:refStream:)('stepping' adjustWakeupTimes: adjustWakeupTimesIfNecessary cleanseStepListForWorld: isStepping: isStepping:selector: listOfSteppingMorphs runLocalStepMethodsIn: runStepMethodsIn: startStepping:at:selector:arguments:stepTime: stopStepping: stopStepping:selector:)('undo' commandHistory)('undo support' clearCommandHistory)('update cycle' checkIfUpdateNeeded displayWorld:submorphs: displayWorldSafely: doDeferredUpdatingFor: doOneCycleFor: doOneCycleNowFor: doOneSubCycleFor: drawWorld:submorphs:invalidAreasOn: forceDamageToScreen: handleFatalDrawingError: interCyclePause:)('*MorphicExtras-hands' activeHand:)('*MorphicExtras-initialization' stepListSummary)('*MorphicExtras-update cycle' displayWorldAsTwoTone:submorphs:color: doOneCycleInBackground startBackgroundProcess)('Nebraska support' addRemoteCanvas: assuredRemoteCanvas releaseRemoteServer remoteCanvasesDo: remoteServer remoteServer: removeRemoteCanvas:)!!WordArray reorganize!('accessing' atAllPut: byteSize bytesPerElement defaultElement)('converting' asWordArray)('private' replaceFrom:to:with:startingAt:)!!WindowColorRegistry reorganize!('as yet unclassified')!!WideCharacterSet class reorganize!('instance creation' newFrom:)!!WeakMessageSend reorganize!('accessing' arguments arguments: receiver receiver: selector selector:)('comparing' = hash)('converting' asMessageSend asMinimalRepresentation)('evaluating' value valueWithArguments: valueWithEnoughArguments:)('printing' printOn:)('testing' isMessageSend isValid)('private' collectArguments: ensureArguments ensureReceiver ensureReceiverAndArguments isAnyArgumentGarbage isReceiverGarbage isReceiverOrAnyArgumentGarbage)!!RemoteTempVectorNode reorganize!('visiting' accept:)('code generation (closures)' addRemoteTemp:encoder: emitCodeForIndexOf:stack:encoder: emitCodeForLoadFor:stack:encoder: emitCodeForStoreInto:stack:encoder: emitCodeForStorePopInto:stack:encoder: emitCodeForValueOf:stack:encoder: isIndirectTempVector nodeToInitialize: referenceScopesAndIndicesDo: scope sizeCodeForIndexOf:encoder: sizeCodeForLoadFor:encoder: sizeCodeForStoreInto:encoder: sizeCodeForStorePopInto:encoder: sizeCodeForValueOf:encoder:)('printing' printDefinitionForClosureAnalysisOn:)('accessing' remoteTemps)('decompiler' remoteTemps:)!!TempVariableNode reorganize!('initialize-release' name:index:type:scope: nowHasDef nowHasRef scope:)('printing' printDefinitionForClosureAnalysisOn: printOn:indent: printWithClosureAnalysisOn:indent:)('testing' assignmentCheck:at: beBlockArg beMethodArg isArg isBlockArg isMethodArg isRemote isTemp isUndefTemp isUnusedTemp remoteNode scope)('visiting' accept:)('code generation (closures)' addReadWithin:at: addWriteWithin:at: analyseClosure: analyseTempsWithin:rootNode:assignmentPools: beingAssignedToAnalyseTempsWithin:rootNode:assignmentPools: definingScope definingScope: index: isDefinedWithinBlockExtent: isIndirectTempVector isReferencedWithinBlockExtent: referenceScopesAndIndicesDo:)('debugger access' cleanUpForRegeneration)('code generation (new scheme)' emitCodeForLoad:encoder: emitCodeForStore:encoder: emitCodeForStorePop:encoder: emitCodeForValue:encoder: sizeCodeForLoad: sizeCodeForStore: sizeCodeForStorePop: sizeCodeForValue:)('decompiler' remoteNode:)!!VariableNode reorganize!('accessing' name)('code generation' emitForReturn:on: emitForValue:on: emitLoad:on: emitStore:on: emitStorePop:on: fieldOffset sizeForReturn: sizeForStore: sizeForStorePop:)('initialize-release' asStorableNode: name: name:index:type: name:key:code: name:key:index:type:)('printing' printOn:indent: printWithClosureAnalysisOn:indent:)('testing' assignmentCheck:at: canBeSpecialArgument index isSelfPseudoVariable isVariableNode isVariableReference type)('visiting' accept:)('tiles' currentValueIn: variableGetterBlockIn:)('code generation (closures)' beingAssignedToAnalyseTempsWithin:rootNode:assignmentPools:)('code generation (new scheme)' emitCodeForLoad:encoder: emitCodeForReturn:encoder: emitCodeForStore:encoder: emitCodeForStorePop:encoder: emitCodeForValue:encoder: sizeCodeForReturn: sizeCodeForStore: sizeCodeForStorePop: sizeCodeForValue:)!!Utilities class reorganize!('class initialization' cleanUp: initialize registerInFlapsRegistry startUp unload)('common requests' appendToCommonRequests: commonRequestStrings: editCommonRequestStrings eval: initializeCommonRequestStrings offerCommonRequests offerCommonRequestsInMorphic)('debugging' doesNotUnderstand: inspectCollection:notifying:)('fetching updates' applyUpdatesFromDisk applyUpdatesFromDiskToUpdateNumber:stopIfGap: assureAbsenceOfUnstableUpdateStream assureAvailabilityOfUnstableUpdateStream broadcastUpdatesFrom:to:except: chooseUpdateList exportingCs extractThisVersion: fileInFromUpdatesFolder: getUpdateDirectoryOrNil lastUpdateNum: newUpdatesOn:special:throughNumber: objectStrmFromUpdates: parseListContents: position:atVersion: readNextUpdateFromServer readNextUpdatesFromDisk: readServer:special:updatesThrough:saveLocally:updateImage: readServerUpdatesSaveLocally:updateImage: readServerUpdatesThrough:saveLocally:updateImage: reloadLastTraits retrieveUrls:ontoQueue:withWaitSema: saveUpdate:onFile: serverUrls setSystemVersionFromConfig: setUpdateServer: slUpdates summariesForUpdates:through: updateComment updateFromServer updateFromServerThroughUpdateNumber: updateUrlLists writeList:toStream: zapUpdateDownloader)('finding pointers' pointersToItem:of: pointersTo: pointersTo:except:)('graphical support' showFormsAcrossTopOfScreen: showFormsDictAcrossTopOfScreen:)('identification' authorInitials authorInitialsPerSe authorName authorName: authorNamePerSe changeStamp changeStampPerSe copyrightNotice dateStamp dateTimeSuffix fixStamp: methodsWithInitials: methodsWithInitials:inClass: monthDayTime24StringFrom: monthDayTimeStringFrom: setAuthorInitials setAuthorInitials: setAuthorName)('investigations' reportSenderCountsFor:)('miscellaneous' awaitMouseUpIn:repeating:ifSucceed: awaitMouseUpIn:whileMouseDownDo:whileMouseDownInsideDo:ifSucceed: cleanseOtherworldlySteppers convertCRtoLF: createPageTestWorkspace decimalPlacesForFloatPrecision: decommissionTheAllCategory doesMethod:forClass:bearInitials: emergencyCollapse fixUpProblemsWithAllCategory floatPrecisionForDecimalPlaces: garbageCollectAndReport getterSelectorFor: inherentSelectorForGetter: instanceComparisonsBetween:and: keyLike:satisfying: keyLike:withTrailing:satisfying: methodDiffFor:class:selector:prettyDiffs: nextClockwiseSideAfter: oppositeCornerFrom: oppositeModeTo: oppositeSideTo: setClassAndSelectorFrom:in: setterSelectorFor: simpleSetterFor: steplistToolsWorkspace storeTextWindowContentsToFileNamed: timeStampForMethod:)('recent method submissions' assureMostRecentSubmissionExists dumpAnyOldStyleRecentSubmissions event: mostRecentlySubmittedMessage noteMethodSubmission:forClass: numberOfRecentSubmissionsToStore numberOfRecentSubmissionsToStore: purgeFromRecentSubmissions: purgeRecentSubmissionsOfMissingMethods recentMethodSubmissions revertLastMethodSubmission)('scraps' addToTrash: emptyScrapsBook maybeEmptyTrash scrapsBook trashTitle)('summer97 additions' chooseFileWithSuffix: chooseFileWithSuffixFromList:withCaption: classCategoriesStartingWith: classFromPattern:withCaption: graphicsFileSuffixes)('support windows' commandKeyMappings openCommandKeyHelp openStandardWorkspace standardWorkspaceContents)('user interface' informUser:during: informUserDuring: openUpdateButton)('*Tools' browseRecentSubmissions closeAllDebuggers openRecentSubmissionsBrowser recentSubmissionsWindow)('closure support' compileUsingClosures initializeClosures postRecompileCleanup)('*ST80-Support' openScratchWorkspaceLabeled:contents:)!!Utilities reorganize!('as yet unclassified')!!MouseMoveEvent reorganize!('accessing' endPoint startPoint trail)('comparing' = hash)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' printOn: storeOn:)('testing' isMove)('transforming' transformBy: translateBy:)('private' setType:startPoint:endPoint:trail:buttons:hand:stamp:)!!MouseButtonEvent reorganize!('accessing' blueButtonChanged redButtonChanged whichButton yellowButtonChanged)('dispatching' sentTo:)('initialize' type:readFrom:)('printing' storeOn:)('private' setType:position:which:buttons:hand:stamp:)!!KeyboardEvent reorganize!('comparing' = hash)('dispatching' sentTo:)('initialize' type:readFrom:)('keyboard' keyCharacter keyString keyValue)('printing' printKeyStringOn: printOn: storeOn:)('testing' isKeyDown isKeyUp isKeyboard isKeystroke isMouseMove)('private' setType:buttons:position:keyValue:hand:stamp:)!!UserInputEvent reorganize!('accessing' buttons handler handler: position type wasHandled wasHandled:)('initialize' copyHandlerState: resetHandlerFields)('modifier state' anyModifierKeyPressed commandKeyPressed controlKeyPressed shiftPressed)('printing' buttonString modifierString)('transforming' transformBy: transformedBy: translateBy: translatedBy:)('private' setPosition:)!!UpdatingStringMorph reorganize!('accessing' autoAcceptOnFocusLoss autoAcceptOnFocusLoss: contents: decimalPlaces decimalPlaces: fitContents floatPrecision format getSelector getSelector: growable growable: maximumWidth minimumWidth minimumWidth: putSelector putSelector: pvtFloatPrecision: target target: valueFromContents)('copying' veryDeepFixupWith: veryDeepInner:)('editing' acceptContents acceptValue: addCustomMenuItems:hand: doneWithEdits lostFocusWithoutAccepting setDecimalPlaces: setFontSize setFontStyle setPrecision setToAllowTextEdit toggleGrowability userEditsAllowed)('event handling' handlesMouseDown: mouseDown: wouldAcceptKeyboardFocus)('events-processing' handlerForMouseDown:)('formats' useDefaultFormat useStringFormat useSymbolFormat)('initialization' initialize)('stepping' stepTime: updateContentsFrom:)('stepping and presenter' step)('target access' acceptValueFromTarget: checkTarget informTarget isEtoyReadout readFromTarget setDecimalPlacesFromTypeIn: stringForNumericValue:)('testing' stepTime)('*MorphicExtras-accessing' floatPrecision:)!!UndefinedObject reorganize!('3ds parser support' from3DS:)('bottom context' canHandleSignal: handleSignal:)('class hierarchy' addSubclass: allSuperclassesDo: environment literalScannedAs:notifying: removeObsoleteSubclass: removeSubclass: subclassDefinerClass subclasses subclassesDoGently: subclassesDo: subclass:instanceVariableNames:classVariableNames:poolDictionaries:category: typeOfClass)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('dependents access' addDependent: release suspend)('printing' printOn: storeOn:)('testing' haltIfNil ifNil: ifNil:ifNotNilDo: ifNil:ifNotNil: ifNotNilDo: ifNotNilDo:ifNil: ifNotNil: ifNotNil:ifNil: isEmptyOrNil isLiteral isNil notNil)('compiling' parserClass)('sets support' asSetElement)!!UUID class reorganize!('instance creation' fromString: new nilUUID)!!UUID reorganize!('comparing' < <= > >=)('converting' asString asUUID: createStringStartingAt:for: printHexAt:to:)('initalize-release' initialize)('printing' printOn: printString)('system primitives' primMakeUUID)('testing' isNilUUID)!!TwoWayScrollPane reorganize!('access' scroller wantsSlot)('accessing' colorForInsets)('event handling' handlesMouseDown: handlesMouseOver: keyStroke: mouseDown: mouseEnter: mouseLeave: mouseMove: mouseUp:)('events-processing' rejectsEvent:)('geometry' extent: fitContents leftoverScrollRange resizeScrollBar resizeScroller scrollBarFills: scrollBy: scrollIntoView:extra: setScrollDeltas totalScrollRange)('geometry testing' containsPoint:)('initialization' createScrollBarNamed: createScroller defaultBorderColor initialize)('layout' doLayoutIn:)('menu' getMenu: leftOrRight menuSelector: menuTitleSelector: retractableOrNot scrollBarOnLeft: wantsYellowButtonMenu)('retractable scroll bar' hideOrShowScrollBar hideOrShowScrollBar:forRange: xScrollerHeight)('scroll bar events' scrollBarMenuButtonPressed: shiftedYellowButtonActivity unshiftedYellowButtonActivity xScrollBarMenuButtonPressed: xScrollBarValue: yellowButtonActivity: yScrollBarMenuButtonPressed: yScrollBarValue:)!!TransformationMorph reorganize!('accessing' forwardDirection hasNoScaleOrRotation rotationDegrees: scaleFactor scaleToMatch:)('classification' isFlexMorph isRenderer renderedMorph)('drawing' drawOn:)('dropping/grabbing' grabTransform)('geometry' computeBounds extent: transformedBy:)('geometry eToy' degreesOfFlex forwardDirection: heading heading: referencePosition setDirectionFrom: simplySetVisible: visible:)('initialization' asFlexOf: flexing:byTransformation:)('layout' layoutChanged)('menu' removeFlexShell)('naming' innocuousName)('printing' printOn:)('rotate scale and flex' rotationDegrees)('submorphs-add/remove' replaceSubmorph:by:)('testing' isSticky stepTime)('private' adjustAfter: chooseSmoothing)!!TopRightGripMorph reorganize!('target resize' apply:)('accessing' gripLayoutFrame ptName resizeCursor)('layout' layoutProportionallyIn:)('private' borderOffset handleOrigin)!!TopLeftGripMorph reorganize!('target resize' apply: ptName)('accessing' gripLayoutFrame resizeCursor)('layout' layoutProportionallyIn:)('private' borderOffset handleOrigin)!!ThumbnailMorph reorganize!('accessing' getSelector getSelector: putSelector target)('caching' releaseCachedState)('copying' veryDeepFixupWith: veryDeepInner:)('display' drawForForm:on: drawMeOn: scaleFor:in:)('drawing' drawOn:)('initialization' defaultBorderWidth defaultColor initialize objectToView: objectToView:viewSelector:)('scripting' isEtoyReadout)('stepping and presenter' step)('testing' stepTime)('texture support' installAsWonderlandTextureOn:)('what to view' actualViewee formOrMorphToView morphToView)!!TheWorldMenu reorganize!('action' commandKeyTypedIntoMenu: doMenuItem:with: menuColorString projectThumbnail roundedCornersString setGradientColor soundEnablingString staggerPolicyString toggleWindowPolicy)('commands' changeBackgroundColor cleanUpWorld garbageCollect loadProject lookForSlips mvcProjectsAllowed newMorphOfClass:event: openBrowser openFileDirectly openFileList openMorphicProject openMVCProject openPreferencesBrowser openTranscript openWorkspace projectForMyWorld quitSession readMorphFromAFile saveAndQuit saveWorldInFile setDisplayDepth splitNewMorphList:depth: startMessageTally vmStatistics worldMenuHelp)('construction' addObjectsAndTools: addPrintAndDebug: addProjectEntries: addRestoreDisplay: addSaveAndQuit: addUtilities: alphabeticalMorphMenu appearanceMenu buildWorldMenu changesMenu colorForDebugging: debugMenu fillIn:from: helpMenu makeConvenient: newMorph openMenu projectMenu remoteMenu)('mechanics' menu: world:project:hand:)('menu' addGestureHelpItemsTo:)('popups' appearanceDo changesDo debugDo doPopUp: helpDo openWindow projectDo remoteDo standardFontDo)('windows & flaps menu' suppressFlapsString windowsDo windowsMenu)('*MorphicExtras-action' createStandardPartsBin launchCustomPartsBin toggleFlapSuppressionInProject)('*MorphicExtras-construction' myMenuColor)('*MorphicExtras-mechanics' adaptToWorld:)('*MorphicExtras-windows & flaps menu' flapsDo flapsMenu formulateFlapsMenu: globalFlapsEnabled newGlobalFlapString)('*MorphicExtras-*morphic-Postscript Canvases' printWorldOnFile)('*Tools' browseRecentLog inspectWorldModel openChangeSorter1 openChangeSorter2 openMessageNames openProcessBrowser openSelectorBrowser startThenBrowseMessageTally)!!TheWorldMainDockingBar reorganize!('menu actions' aboutSqueak loadProject newProject: quitSqueak save saveAndQuitSqueak saveAsNewVersion saveImage saveImageAs showSqueakResources startMessageTally updateSqueak vmStatistics)('construction' createDockingBar extrasMenuOn: fillDockingBar: helpMenuOn: menusOn: projectsMenuOn: squeakMenuOn: toolsMenuOn: windowsMenuOn:)('private' colorIcon: gradientRamp updateIfNeeded:)('submenu - squeak' aboutMenuItemOn: quitMenuItemOn: saveAndQuitMenuItemOn: saveAsMenuItemOn: saveAsNewVersionMenuItemOn: saveMenuItemOn: updateMenuItemOn:)('submenu - tools' browserMenuItemOn: dualChangeSorterMenuItemOn: fileListMenuItemOn: monticelloBrowserMenuItemOn: monticelloConfigurationsMenuItemOn: preferenceBrowserMenuItemOn: processBrowserMenuItemOn: simpleChangeSorterMenuItemOn: testRunnerMenuItemOn: transcriptMenuItemOn: workspaceMenuItemOn:)('submenu - projects' jumpToProjectMenuItemOn: loadProjectMenuItemOn: newProjectMenuItemOn: previousProjectMenuItemOn: saveProjectMenuItemOn: updateJumpToProjectSubMenu: updateNewProjectSubMenu:)('submenu - windows' allOtherWindowsLike: allVisibleWindows allWindowsLike: closeAllWindowsBut: closeAllWindowsLike: listWindowsOn: windowMenuFor:on: windowMenuItemLabelFor:)!!TextMorph class reorganize!('class initialization' defaultEditorClass defaultEditorClass: initialize registerInFlapsRegistry unload)('connectorstext-parts bin' boldAuthoringPrototype)('new-morph participation' includeInNewMorphMenu)('parts bin' borderedPrototype exampleBackgroundLabel fancyPrototype)('scripting' authoringPrototype defaultNameStemForInstances)('*MorphicExtras-parts bin' supplementaryPartsDescriptions)!!TextMorph reorganize!('accessing' asText autoFit: backgroundColor backgroundColor: borderWidth: contents contentsAsIs: contentsWrapped: contents: contents:wrappedTo: crAction crAction: cursor cursorWrapped: editor elementCount fontName:pointSize: fontName:size: font: getFirstCharacter getLastCharacter hasTranslucentColor isAutoFit isWrapped margins margins: newContents: selectAll selectFrom:to: selection setCharacters: setFirstCharacter: setLastCharacter: text textAlignment textAlignmentSymbol textColor textColor: textStyle userString wrapFlag:)('alignment' centered justified leftFlush rightFlush)('anchors' adjustTextAnchor: anchorMorph:at:type:)('caching' loadCachedState releaseCachedState)('change reporting' ownerChanged)('classification' isTextMorph)('containment' avoidsOcclusions fillingOnOff fillsOwner fillsOwner: occlusionsOnOff recognizerArena setContainer:)('copying' copy veryDeepFixupWith: veryDeepInner:)('drawing' areasRemainingToFill: debugDrawLineRectsOn: drawNullTextOn: drawOnTest: drawOn:)('editing' acceptContents acceptOnCR cancelEdits chooseAlignment chooseEmphasis chooseEmphasisOrAlignment chooseFont chooseStyle enterClickableRegion: handleEdit: handleInteraction:fromEvent: hasUnacceptedEdits: passKeyboardFocusTo: preferredKeyboardPosition setCompositionWindow xeqLinkText:withParameter:)('event handling' getMenu: handlesKeyboard: handlesMouseDown: hasFocus keyboardFocusChange: keyStroke: mouseDown: mouseMove: mouseUp: wouldAcceptKeyboardFocusUponTab yellowButtonActivity:)('events-processing' handleKeystroke: handleMouseMove:)('geometry' bounds container defaultLineHeight extent: minimumExtent privateMoveBy: textBounds)('geometry testing' containsPoint:)('initialization' beAllFont: defaultColor initialize setTextStyle: string:fontName:size: string:fontName:size:wrap:)('layout' acceptDroppingMorph:event:)('linked frames' addPredecessor: addSuccessor: firstCharacterIndex firstInChain isLinkedTo: lastCharacterIndex predecessor recomposeChain startingIndex successor withSuccessorsDo:)('menu' addCustomMenuItems:hand: autoFitOnOff autoFitString changeMargins: changeTextColor followCurve holderForCharacters reverseCurveDirection setCurveBaseline: wrapOnOff wrapString)('multi level undo' editHistory editHistory:)('objects from disk' convertToCurrentVersion:refStream: fixUponLoad:seg:)('scripting access' getAllButFirstCharacter insertCharacters: insertContentsOf: setAllButFirstCharacter:)('submorphs-add/remove' addMorphFront:fromWorldPosition: delete goBehind)('visual properties' fillStyle fillStyle:)('*MorphicExtras-accessing' getCharacters)('*MorphicExtras-copying' updateReferencesUsing:)('*MorphicExtras-printing' fullPrintOn:)('private' adjustLineIndicesBy: clippingRectangle composeToBounds compositionRectangle editorClass fit installEditor installEditorToReplace: paragraph paragraphClass predecessorChanged predecessor:successor: privateOwner: releaseEditor releaseParagraph releaseParagraphReally removedMorph: selectionChanged setDefaultContentsIfNil setPredecessor: setSuccessor: text:textStyle: text:textStyle:wrap:color:predecessor:successor: updateFromParagraph)('blinking' blinkStart blinkStart: onBlinkCursor resetBlinkCursor startBlinking stopBlinking)!!TextFieldMorph class reorganize!('class initialization' initialize registerInFlapsRegistry unload)('scripting' authoringPrototype)!!TextFieldMorph reorganize!('initialization' defaultColor initialize)('just like textMorph' append: contents contents: fit fontName:size: lineCount prepend:)!!TextEditor reorganize!('menu messages' accept again align browseChangeSetsWithSelector browseClassFromIt browseIt browseItHere cancel changeAlignment chooseAlignment classCommentsContainingIt classNamesContainingIt compareToClipboard copySelection cut exchange explain fileItIn find findAgain implementorsOfIt methodNamesContainingIt methodSourceContainingIt methodStringsContainingit pasteRecent prettyPrint prettyPrint: prettyPrintWithColor referencesToIt saveContentsInFile selectedSelector selectedSymbol sendersOfIt setAlignment: setSearchString spawn undo)('new selection' afterSelectionInsertAndSelect: correctFrom:to:with: encompassLine: insertAndSelect:at: nextTokenFrom:direction: notify:at:in: selectFrom:to: selectLine selectPrecedingIdentifier)('private' againOnce: againOrSame: againOrSame:many: completeSymbol:lastOffering: exchangeWith: isDisjointFrom: nullText pageHeight sameColumn:newLine:forward:)('editing keys' abandonChangeText align: browseIt: browseItHere: cancel: changeEmphasis: changeLfToCr: chooseColor compareToClipboard: copyHiddenInfo doIt: duplicate: emphasisExtras enclose: exchange: exploreIt: fileItIn: handleEmphasisExtra:with: hiddenInfo implementorsOfIt: inOutdent:delta: indent: inspectIt: makeCapitalized: makeLowercase: makeUppercase: methodNamesContainingIt: methodStringsContainingIt: offerFontMenu: outdent: pasteInitials: printIt: referencesToIt: save: sendersOfIt: setEmphasis: shiftEnclose: spawnIt: swapChars: undo:)('typing/selecting keys' argAdvance: changeStyle: crWithIndent: displayIfFalse: displayIfTrue: doAgainMany: doAgainOnce: find: findAgain: forwardDelete: querySymbol: search: tabCount)('typing support' backTo: closeTypeIn dispatchOnCharacter:with: dispatchOnEnterWith: doneTyping insertTypeAhead: openTypeIn readKeyboard setEmphasisHere startOfTyping)('binding' bindingOf:)('parenblinking' blinkParen blinkParenAt: blinkPrevParen clearParens)('attributes' changeEmphasisOrAlignment changeSelectionFontTo: changeStyle changeTextFont offerFontMenu)('initialize-release' changeParagraph: resetState stateArray stateArrayPut:)('do-its' compileSelectionFor:in: debug:receiver:in: debugIt doIt evaluateSelection exploreIt inspectIt printIt)('nonediting/nontyping keys' cursorDown: cursorEnd: cursorHome: raiseContextMenu: selectCurrentTypeIn: setSearchString:)('explain' explainAnySel: explainChar: explainClass: explainCtxt: explainDelimitor: explainGlobal: explainInst: explainMySel: explainNumber: explainPartSel: explainScan: explainTemp:)('displaying' flash)('accessing-selection' hasCaret markBlock markBlock: markIndex markIndex: pointBlock pointBlock: pointIndex pointIndex: selection selectionAsStream startBlock startIndex stopBlock stopIndex unselect)('undo support' isDoing isRedoing isUndoing noUndoer undoMessage:forRedo: undoer: undoer:with: undoer:with:with: undoer:with:with:with:)('model access' model:)('events' mouseDown: mouseMove: mouseUp:)('menu commands' offerMenuFromEsc:)('current selection' recomputeInterval recomputeSelection reverseSelection selectAndScroll)('accessing' replace:with:and: replaceSelectionWith: setSearch: string styler styler: text totalTextHeight transformFrom: visibleHeight)('scrolling' scrollBy: updateMarker)('mvc compatibility' storeSelectionInParagraph zapSelectionWith:)('undoers' undoAgain:andReselect:typedKey: undoAndReselect:redoAndReselect: undoCutCopy: undoQuery:lastOffering: undoReplace)!!ClassDiffBuilder reorganize!('private' print:withAttributes:on: split:)!!TextDiffBuilder reorganize!('creating patches' buildDisplayPatch buildPatchSequence patchSequenceDoIfMatch:ifInsert:ifRemove:)('initialize' from:to:)('private' findMatches lcsFor:and: print:withAttributes:on: split:)!!Text reorganize!('accessing' append: at: at:put: embeddedMorphs embeddedMorphsFrom:to: findString:startingAt: findString:startingAt:caseSensitive: lineCount prepend: rangeOf:startingAt: replaceFrom:to:with: runs: size string)('attributes' askIfAddStyle:req: couldDeriveFromPrettyPrinting unembellished)('comparing' hash howManyMatch: isText =)('converting' asDisplayText asNumber asOctetStringText asString asStringOrText asText asUrl asUrlRelativeTo: isoToSqueak macToSqueak removeAttributesThat:replaceAttributesThat:by: replaceFrom:to:with:startingAt: reversed squeakToIso squeakToMac withSqueakLineEndings)('copying' copyFrom:to: copyReplaceFrom:to:with: copyReplaceTokens:with: deepCopy postCopy)('emphasis' addAttribute: addAttribute:from:to: alignmentAt:ifAbsent: allBold attributesAt: attributesAt:do: attributesAt:forStyle: emphasisAt: find: fontAt:withStyle: fontNumberAt: makeBoldFrom:to: makeSelectorBold makeSelectorBoldIn: removeAttribute:from:to: runLengthFor:)('printing' printOn: storeOn:)('*Morphic-converting' asMorph asStringMorph asTextMorph)('private' runs setString:setRunsChecking: setString:setRuns:)('html' closeHtmlAttributes:on: openHtmlAttributes:on: printHtmlOn: printHtmlString printStringHtml:on:)('*ST80-Support' asParagraph)!!TestResult reorganize!('accessing' classesTested correctCount defects errorCount expectedDefectCount expectedDefects expectedPassCount expectedPasses failureCount passedCount runCount tests timeStamp timeStamp: unexpectedErrorCount unexpectedErrors unexpectedFailureCount unexpectedFailures unexpectedPassCount unexpectedPasses)('compatibility' errors failures passed)('printing' printOn:)('running' runCase:)('testing' hasErrors hasFailures hasPassed isError: isFailure: isPassed:)('diff' diff:)('history' dispatchResultsIntoHistory selectResultsForTestCase: updateResultsInHistory)('initialization' initialize)('querying' isErrorFor:selector: isFailureFor:selector: isPassedFor:selector:)!!SimpleTestResourceTestCase class reorganize!('history' lastStoredRun)('not categorized' resources)!!LongTestCaseTestUnderTest class reorganize!('accessing' hasRun markAsNotRun)!!LongTestCase class reorganize!('accessing' allTestSelectors doNotRunLongTestCases runLongTestCases shouldRun shouldRun:)('instance creation' buildSuite)('testing' isAbstract)!!TestCase class reorganize!('accessing' allTestSelectors resources sunitVersion)('building suites' addTestsFor:toSuite: addToSuiteFromSelectors: addToSuite:fromMethods: buildSuite buildSuiteFromAllSelectors buildSuiteFromLocalSelectors buildSuiteFromMethods: buildSuiteFromSelectors suiteClass)('instance creation' debug: run: selector: suite)('testing' hasMethodBeenRun: isAbstract methodFailed: methodPassed: methodProgressed: methodRaisedError: methodRegressed: shouldInheritSelectors storedMethodFailed: storedMethodPassed: storedMethodRaisedError:)('coverage' coverage coverageAsString coverageForClass: coverageForClass:until: coveragePercentage localCoverage localCoverageAsString localCoverageForClass: localCoveragePercentage)('history' generateLastStoredRunMethod history history: lastRun lastRunMethodNamed: lastStoredRun newTestDictionary resetHistory shouldGenerateLastStoredRunMethod)('initialize - event' initialize methodChanged:)('Accessing' testSelectors)!!TabbedPalette reorganize!('dropping/grabbing' wantsDroppedMorph:event:)('halos and balloon help' defersHaloOnClickTo:)('initialization' addTabFor:font: addTabForBook: addTabForBook:withBalloonText: defaultColor defaultPageSize initialize newTabs: setInitialState)('misc menu items' becomeStandardPalette recolorTabs showNoPalette showNoPaletteAndHighlightTab: sortTabs:)('miscellaneous' currentPalette tabsMorph)('navigation' transitionSpecFor:)('other' setExtentFromHalo:)('palette menu' addBookMenuItemsTo:hand: addMenuTab)('scraps tab' hasScrapsTab scrapsBook showScrapsTab)('submorphs-add/remove' replaceSubmorph:by:)('user-interface' selectTab: selectTabNamed: selectTabOfBook: tabMorphs tabNamed:)!!TTCFont reorganize!('accessing' ascent ascentOf: descent descentKern descentOf: emphasis emphasis: emphasized: fallbackFont fallbackFont: familyName familySizeFace fontNameWithPointSize height lineGap lineGrid maxAscii minAscii name pixelScale pixelSize pixelSize: pointSize pointSize: privatePointSize: textStyle)('caching' releaseCachedState reset)('character shapes' characterFormAt:)('copying' copy deepCopy veryDeepCopyWith:)('friend' cache derivativeFont: derivativeFont:at: derivativeFontArray derivativeFonts displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: initialize installOn: installOn:foregroundColor:backgroundColor: setupDefaultFallbackFontTo: ttcDescription ttcDescription:)('objects from disk' convertToCurrentVersion:refStream: objectForDataStream:)('printing' printOn:)('public' depth foregroundColor size widthOf:)('testing' isRegular isTTCFont)('private' addLined addLined: at:put: computeForm: flushCachedValues formOf: glyphInfoOf:into: hasGlyphOf: indexOfSubfamilyName: scale subfamilyName)('html' closeHtmlOn: htmlSize openHtmlOn:)('initialize' derivativeFont:mainFont: flushCache foregroundColor: initialize: lineGlyph:)('emphasis' setupDefaultFallbackFont)!!CollapsedMorph class reorganize!('as yet unclassified')!!SystemWindow class reorganize!('initializing' borderWidth classVersion closeBoxImage collapseBoxImage expandBoxImage initialize menuBoxImage)('instance creation' labelled:)('new-morph participation' includeInNewMorphMenu)('top window' clearTopWindow closeTopWindow noteTopWindowIn: sendTopWindowToBack wakeUpTopWindowUponStartup windowsIn:satisfying:)('preferences' reuseWindows reuseWindows:)!!CollapsedMorph reorganize!('collapse/expand' beReplacementFor: uncollapseToHand)('menu' buildWindowMenu)('resize/collapse' collapseOrExpand wantsExpandBox)!!SystemWindow reorganize!('drawing' areasRemainingToFill: colorForInsets makeMeVisible raisedColor scrollBarColor wantsRoundedCorners)('events' doFastFrameDrag: handleListenEvent: handlesMouseDown: handlesMouseOverDragging: isCandidateForAutomaticViewing mouseDown: mouseEnterDragging: mouseLeaveDragging: mouseMove: mouseUp: paneTransition: secondaryPaneTransition:divider: wantsHalo wantsToBeDroppedInto:)('geometry' extent: justDroppedInto:event: labelRect paneMorphs panelRect position: removeMenuBox setPaneRectsFromBounds)('initialization' addCloseBox addExpandBox addLabelArea addMenuControl addPaneHSplitters addPaneSplitters addPaneVSplitters applyModelExtent boxExtent createBox createCloseBox createCollapseBox createExpandBox createMenuBox defaultBorderColor defaultBorderWidth defaultColor gradientWithColor: initialize initializeLabelArea maximumExtent maximumExtent: model: replaceBoxes setFramesForLabelArea)('label' externalName getRawLabel label labelHeight labelWidgetAllowance relabel relabelEvent: setLabel: setLabelFont: setLabelWidgetAllowance setStripeColorsFrom: tryToRenameTo: update: widthOfFullLabelText)('layout' convertAlignment layoutBounds putLabelItemsInLabelArea)('menu' addCustomMenuItems:hand: buildWindowMenu changeColor deleteCloseBox fullScreen fullScreenMaximumExtent makeClosable makeSecondTopmost makeUnclosable offerWindowMenu sendToBack setWindowColor setWindowColor: takeOutOfWindow wantsYellowButtonMenu)('object fileIn' convertToCurrentVersion:refStream:)('open/close' anyOpenWindowLikeMe closeBoxHit delete initialExtent mustNotClose openAsIs openAsIsIn: openInWorld: openInWorld:extent: openInWorldExtent: positionSubmorphs postAcceptBrowseFor:)('panes' addMorph:frame: addMorph:fullFrame: existingPaneColor holdsTranscript paneColor paneColor: paneColorToUse paneMorphSatisfying: replacePane:with: restoreDefaultPaneColor setUpdatablePanesFrom: titleAndPaneText updatablePanes updateBox:color: updateBoxesColor: updatePaneColors)('resize/collapse' allowReframeHandles allowReframeHandles: collapse collapseOrExpand collapsedFrame contractToOriginalSize doFastWindowReframe: expand expandBoxHit expandToFullScreen fastFramingOn fullFrame getBoundsWithFlex getCollapsedFrame isCollapsed mouseLeaveEvent:fromPane: paneWithLongestSide:near: reframePanesAdjoining:along:to: setBoundsWithFlex: unexpandedFrame unexpandedFrame: wantsExpandBox)('stepping' amendSteppingStatus stepAt: stepTime wantsSteps wantsStepsWhenCollapsed)('testing' isSystemWindow isWindowForModel: shouldDropOnMouseUp wantsToBeCachedByHand)('top window' activate activateAndForceLabelToShow activateWindow activeOnlyOnTop activeOnlyOnTop: adjustBorderUponActivationWhenLabeless adjustBorderUponDeactivationWhenLabeless extantSketchEditor isActive lockInactivePortions passivate updatePanesFromSubmorphs)('thumbnail' icon)('polymorph' bringBehind: modalChild modalLockTo: modalOwner modalUnlockFrom: rememberedKeyboardFocus)!!SystemVersion reorganize!('accessing' date date: datedVersion highestUpdate highestUpdate: includesUpdate: registerUpdate: resetHighestUpdate unregisterUpdate: updates version version:)('initialize' initialize)('printing' printOn:)!!SystemOrganizer reorganize!('accessing' addCategory: removeCategory: renameCategory:toBe:)('fileIn/Out' fileOut fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on: fileOutCategory:on:initializing: objectForDataStream: orderedTraitsIn: superclassOrder:)('query' commentInventory: uncommentedClassesIn:)('remove' categoriesMatching: removeCategoriesMatching: removeMissingClasses removeSystemCategory:)('private' ifClassOrganizerDo:)!SystemDictionary class removeSelector: #cleanUp!SystemDictionary class removeSelector: #initialize!!SystemDictionary class reorganize!('as yet unclassified')!SystemDictionary removeSelector: #abandonSources!SystemDictionary removeSelector: #abandonTempNames!SystemDictionary removeSelector: #add:toList:after:!SystemDictionary removeSelector: #addToShutDownList:!SystemDictionary removeSelector: #addToShutDownList:after:!SystemDictionary removeSelector: #addToStartUpList:!SystemDictionary removeSelector: #addToStartUpList:after:!SystemDictionary removeSelector: #bytesLeft!SystemDictionary removeSelector: #bytesLeft:!SystemDictionary removeSelector: #bytesLeftString!SystemDictionary removeSelector: #cleanOutUndeclared!SystemDictionary removeSelector: #cleanUp!SystemDictionary removeSelector: #cleanUp:!SystemDictionary removeSelector: #cleanUp:except:!SystemDictionary removeSelector: #cleanUpUndoCommands!SystemDictionary removeSelector: #clearExternalObjects!SystemDictionary removeSelector: #compactClassesArray!SystemDictionary removeSelector: #compressSources!SystemDictionary removeSelector: #computeImageSegmentation!SystemDictionary removeSelector: #condenseChanges!SystemDictionary removeSelector: #condenseSources!SystemDictionary removeSelector: #copyright!SystemDictionary removeSelector: #createStackOverflow!SystemDictionary removeSelector: #currentChangeSetString!SystemDictionary removeSelector: #currentProjectDo:!SystemDictionary removeSelector: #discardDiscards!SystemDictionary removeSelector: #discardFFI!SystemDictionary removeSelector: #discardFlash!SystemDictionary removeSelector: #discardMIDI!SystemDictionary removeSelector: #discardMVC!SystemDictionary removeSelector: #discardMorphic!SystemDictionary removeSelector: #discardNetworking!SystemDictionary removeSelector: #discardOddsAndEnds!SystemDictionary removeSelector: #discardSUnit!SystemDictionary removeSelector: #discardSoundSynthesis!SystemDictionary removeSelector: #discardSpeech!SystemDictionary removeSelector: #discardTrueType!SystemDictionary removeSelector: #exitToDebugger!SystemDictionary removeSelector: #externalObjects!SystemDictionary removeSelector: #externalizeSources!SystemDictionary removeSelector: #forceChangesToDisk!SystemDictionary removeSelector: #forceTenure!SystemDictionary removeSelector: #forgetDoIts!SystemDictionary removeSelector: #garbageCollect!SystemDictionary removeSelector: #garbageCollectMost!SystemDictionary removeSelector: #handleUserInterrupt!SystemDictionary removeSelector: #hasMorphic!SystemDictionary removeSelector: #hasSpecialSelector:ifTrueSetByte:!SystemDictionary removeSelector: #inspectGlobals!SystemDictionary removeSelector: #installLowSpaceWatcher!SystemDictionary removeSelector: #internalizeChangeLog!SystemDictionary removeSelector: #internalizeSources!SystemDictionary removeSelector: #isMorphic!SystemDictionary removeSelector: #isRoot:!SystemDictionary removeSelector: #isYoung:!SystemDictionary removeSelector: #lastRemoval!SystemDictionary removeSelector: #logError:inContext:to:!SystemDictionary removeSelector: #lowSpaceThreshold!SystemDictionary removeSelector: #lowSpaceWatcher!SystemDictionary removeSelector: #lowSpaceWatcherProcess!SystemDictionary removeSelector: #m17nVersion!SystemDictionary removeSelector: #majorShrink!SystemDictionary removeSelector: #makeExternalRelease!SystemDictionary removeSelector: #makeInternalRelease!SystemDictionary removeSelector: #memoryHogs!SystemDictionary removeSelector: #nihongoVersion!SystemDictionary removeSelector: #okayToProceedEvenIfSpaceIsLow!SystemDictionary removeSelector: #presumedSentMessages!SystemDictionary removeSelector: #primBytesLeft!SystemDictionary removeSelector: #primImageName!SystemDictionary removeSelector: #primImageName:!SystemDictionary removeSelector: #primLowSpaceSemaphore:!SystemDictionary removeSelector: #primSignalAtBytesLeft:!SystemDictionary removeSelector: #primVmPath!SystemDictionary removeSelector: #primitiveGarbageCollect!SystemDictionary removeSelector: #processShutDownList:!SystemDictionary removeSelector: #processStartUpList:!SystemDictionary removeSelector: #quitPrimitive!SystemDictionary removeSelector: #reclaimDependents!SystemDictionary removeSelector: #reconstructChanges!SystemDictionary removeSelector: #recover:!SystemDictionary removeSelector: #recreateSpecialObjectsArray!SystemDictionary removeSelector: #reformatChangesToUTF8!SystemDictionary removeSelector: #registerExternalObject:!SystemDictionary removeSelector: #removeAllLineFeeds!SystemDictionary removeSelector: #removeAllLineFeedsQuietly!SystemDictionary removeSelector: #removeAllLineFeedsQuietlyCalling:!SystemDictionary removeSelector: #removeAllUnSentMessages!SystemDictionary removeSelector: #removeEmptyMessageCategories!SystemDictionary removeSelector: #removeFromShutDownList:!SystemDictionary removeSelector: #removeFromStartUpList:!SystemDictionary removeSelector: #removeNormalCruft!SystemDictionary removeSelector: #removeSelector:!SystemDictionary removeSelector: #reportClassAndMethodRemovalsFor:!SystemDictionary removeSelector: #rootTable!SystemDictionary removeSelector: #rootTableAt:!SystemDictionary removeSelector: #send:toClassesNamedIn:with:!SystemDictionary removeSelector: #setGCBiasToGrow:!SystemDictionary removeSelector: #setGCBiasToGrowGCLimit:!SystemDictionary removeSelector: #setGCParameters!SystemDictionary removeSelector: #setGCSemaphore:!SystemDictionary removeSelector: #setMacFileInfoOn:!SystemDictionary removeSelector: #shutDown!SystemDictionary removeSelector: #shutDownSound!SystemDictionary removeSelector: #signalLowSpace!SystemDictionary removeSelector: #snapshotEmbeddedPrimitive!SystemDictionary removeSelector: #snapshotPrimitive!SystemDictionary removeSelector: #specialNargsAt:!SystemDictionary removeSelector: #specialObjectsArray!SystemDictionary removeSelector: #specialSelectorAt:!SystemDictionary removeSelector: #specialSelectorSize!SystemDictionary removeSelector: #specialSelectors!SystemDictionary removeSelector: #testFormatter!SystemDictionary removeSelector: #testFormatter2!SystemDictionary removeSelector: #unbindExternalPrimitives!SystemDictionary removeSelector: #unloadAllKnownPackages!SystemDictionary removeSelector: #unregisterExternalObject:!SystemDictionary removeSelector: #unusedClasses!SystemDictionary removeSelector: #unusedClassesAndMethodsWithout:!SystemDictionary removeSelector: #useUpMemory!SystemDictionary removeSelector: #useUpMemoryWithArrays!SystemDictionary removeSelector: #useUpMemoryWithContexts!SystemDictionary removeSelector: #useUpMemoryWithTinyObjects!SystemDictionary removeSelector: #verifyChanges!SystemDictionary removeSelector: #verifyMorphicAvailability!SystemDictionary removeSelector: #version!SystemDictionary removeSelector: #wordSize!SystemDictionary removeSelector: #writeImageSegmentsFrom:withKernel:!SystemDictionary removeSelector: #writeRecentCharacters:toFileNamed:!SystemDictionary removeSelector: #writeRecentToFile!SystemDictionary removeSelector: #zapAllOtherProjects!SystemDictionary removeSelector: #zapMVCprojects!!SystemDictionary reorganize!('accessing' environment organization poolUsers)('copying' veryDeepCopyWith:)('dictionary access' associationOrUndeclaredAt: at:put: scopeFor:from:envtAndPathIfFound:)('objects from disk' objectForDataStream: storeDataOn:)('printing' printElementsOn: printOn:)('private' scanFor: scanForEmptySlotFor:)('classes and traits' allClasses allClassesAndTraits allClassesAndTraitsDo: allClassesDo: allTraits allTraitsDo: classNamed: classNames classOrTraitNamed: flushClassNameCache forgetClass:logged: hasClassNamed: removeClassNamed: renameClass:as: renameClass:from: renameClass:from:to: renameClassNamed:as: traitNames)!!SystemChangeNotifier reorganize!('initialize' initialize)('public' doSilently: isBroadcasting noMoreNotificationsFor: notify:ofAllSystemChangesUsing: notify:ofSystemChangesOfChange:using: notify:ofSystemChangesOfItem:change:using: notify:ofSystemChangesOfItem:using:)('system triggers' classCategoryAdded: classCategoryRemoved: classCategoryRenamedFrom:to: class:recategorizedFrom:to: classAdded:inCategory: classCommented: classCommented:inCategory: classDefinitionChangedFrom:to: classRemoved:fromCategory: classRenamed:from:to:inCategory: classReorganized: evaluated: evaluated:context: methodAdded:selector:inClass: methodAdded:selector:inClass:requestor: methodAdded:selector:inProtocol:class: methodAdded:selector:inProtocol:class:requestor: methodChangedFrom:to:selector:inClass: methodChangedFrom:to:selector:inClass:requestor: methodRemoved:selector:class: methodRemoved:selector:inProtocol:class: selector:recategorizedFrom:to:inClass: traitDefinitionChangedFrom:to:)('private' notify:ofEvents:using: releaseAll setBroadcasting trigger:)('private-event lists' allSystemEvents systemEventsForChange: systemEventsForItem: systemEventsForItem:change:)!!SuperSwikiServer reorganize!('accessing' encodingName typeForPrefs)('for real' allEntries directoryNames directoryWrapperClass entries fastParseEntriesFrom: fileNames getOnly:from: matchingEntries: oldFileNamed: oldFileOrNoneNamed: putFile:named: readOnlyFileNamed: sendToSwikiProjectServer: updateProjectInfoFor:)('squeaklets' upLoadProject:members:retry:)('testing' isSearchable parseQueryResult: queryAllProjects queryProjects: queryProjectsAndShow queryProjectsAndShow: queryPythagoras showQueryAsPVM: speedTest1 speedTest2 test1)('private' parseListEntries:)!!MethodHolder class reorganize!('as yet unclassified')!!MessageSet reorganize!('class list' metaClassIndicated selectedClass selectedClassName selectedClassOrMetaClass selectedMessageCategoryName)('contents' aboutToStyle: contents selectedMessage setContentsToForceRefetch)('drag and drop' dragPassengerFor:inMorph:)('filtering' filterFrom: filterMessageList filterToAnyChangeSet filterToCommentedMethods filterToCurrentAuthor filterToCurrentChangeSet filterToImplementorsOf filterToMatchingClassesNames filterToMessagesInChangesFile filterToMessagesInSourcesFile filterToMessagesThat filterToMessagesWithHardenedClasses filterToMessagesWithPriorVersions filterToMessagesWithoutPriorVersions filterToNotAnyChangeSet filterToNotCurrentAuthor filterToNotCurrentChangeSet filterToNotImplementorsOf filterToNotSendersOf filterToPackage filterToSendersOf filterToUncommentedMethods filterToUnsentMessages)('message category functions' canShowMultipleMessageCategories)('message functions' browseAllImplementorsOf: deleteFromMessageList: methodCategoryChanged reformulateList removeMessage removeMessageFromBrowser)('message list' addExtraShiftedItemsTo: addItem: growable growable: messageList messageListIndex: optionalButtonHeight selectedMessageName sortByDate)('metaclass' classCommentIndicated)('toolbuilder' buildWith:)('private' adjustWindowTitleAfterFiltering autoSelectString autoSelectString: contents:notifying: initializeMessageList: selection setClassAndSelectorIn: setFilteredList:)('*morphic' representsSameBrowseeAs:)!!Inspector reorganize!('accessing' baseFieldList context: fieldList i1 i2 initialExtent modelWakeUpIn: noteSelectionIndex:for: object object: selectedClass stepTimeIn: timeOfLastListUpdate trash trash: update wantsSteps)('code' doItReceiver)('initialize-release' initialize inspect:)('menu commands' addCollectionItemsTo: chasePointers classOfSelection classVarRefs copyName defsOfSelection explorePointers exploreSelection fieldListMenu: inspectBasic inspectElement inspectSelection inspectorKey:from: objectReferencesToSelection referencesToSelection viewerForValue)('object fileIn' convertToCurrentVersion:refStream:)('selecting' accept: contentsIsString replaceSelectionValue: selectedSlotName selection selectionIndex selectionPrintString selectionUnmodifiable toggleIndex:)('stepping' stepAt:in:)('private' printStringErrorText)('toolbuilder' buildCodePaneWith: buildFieldListWith: buildValuePaneWith: buildWith:)('*morphic' representsSameBrowseeAs:)!!FileList2 class reorganize!('as yet unclassified' hideSqueakletDirectoryBlock projectOnlySelectionBlock projectOnlySelectionMethod: selectionBlockForSuffixes:)('blue ui' blueButtonText:textColor:color:inWindow: blueButtonText:textColor:color:inWindow:balloonText:selector:recipient: blueButtonText:textColor:inWindow: blueButtonText:textColor:inWindow:balloonText:selector:recipient: enableTypeButtons:info:forDir: endingSpecs morphicViewGeneralLoaderInWorld: morphicViewProjectLoader2InWorld: morphicViewProjectLoader2InWorld:reallyLoad: morphicViewProjectLoader2InWorld:reallyLoad:dirFilterType: morphicViewProjectSaverFor:)('instance creation' openMorphicViewInWorld prototypicalToolWindow)('modal dialogs' modalFileSelector modalFileSelectorForSuffixes: modalFileSelectorForSuffixes:directory: modalFolderSelector modalFolderSelectorForProjectLoad modalFolderSelectorForProject: modalFolderSelector:)('morphic ui' morphicViewFileSelector morphicViewFileSelectorForSuffixes: morphicViewFileSelectorForSuffixes:directory: morphicViewFolderSelector morphicViewFolderSelector: morphicViewImageViewer morphicViewNoFile morphicViewProjectLoader update:in:fileTypeRow:morphUp:)('utility' addFullPanesTo:from: modalLoopOn: textRow:)('accessing' lastSelDir lastSelDir:)!!FileList reorganize!('file list' fileList fileListIndex fileListIndex: fileName readOnlyStream)('file list menu' dirAndFileName fileContentsMenu:shifted: fileListMenu: fileSelectedMenu: fullFileListMenu:shifted: itemsForAnyFile itemsForDirectory: itemsForFile: itemsForNoFile myServicesForFile:suffix: noFileSelectedMenu: offerAllFileOptions suffixOfSelectedFile)('file menu action' addNew:byEvaluating: addNewDirectory addNewFile compressFile deleteFile get getEncodedText getHex renameFile sortByDate sortByName sortBySize spawn:)('initialization' buttonSelectorsToSuppress directory: dynamicButtonServices initialize labelString modelSleep modelWakeUp optionalButtonHeight optionalButtonSpecs release setFileStream: universalButtonServices updateButtonRow)('menu messages' copyName perform:orSendTo:)('own services' serviceAddNewDirectory serviceAddNewFile serviceAllFileOptions serviceBroadcastUpdate serviceCompressFile serviceCopyName serviceDeleteFile serviceGet serviceGetEncodedText serviceGetHex serviceRenameFile serviceSortByDate serviceSortByName serviceSortBySize serviceViewContentsInWorkspace servicesFromSelectorSpecs: viewContentsInWorkspace)('server list' askServerInfo putUpdate: removeServer)('updating' update:)('volume list and pattern' deleteDirectory directory fileNameFormattedFrom:sizePad: listForPattern: pathAndPattern pathAndPattern: pattern pattern: veryDeepFixupWith: volumeList volumeListIndex volumeListIndex:)('volume menu' volumeMenu:)('private' addPath: contents defaultContents defaultEncoderFor: entriesMatching: fileNameFromFormattedItem: folderString fullName isFileSelected listForPatterns: put: readContentsAsEncoding: readContentsBrief: readContentsCNGB readContentsEUCJP readContentsEUCKR readContentsHex: readContentsShiftJIS readContentsUTF8 readServerBrief recentDirs registeredFileReaderClasses resort: selectEncoding sortBlock sortingByDate sortingByName sortingBySize updateFileList)('toolbuilder' buildButtonPaneWith: buildCodePaneWith: buildContentPaneWith: buildDirectoryTreeWith: buildEditorWith: buildFileListWith: buildPatternInputWith: buildWith: executeService: getButtonRow)('directory tree' directoryNameOf: getSelectedPath hasMoreDirectories: rootDirectoryList selectedPath setDirectoryTo: subDirectoriesOf:)!!Debugger reorganize!('accessing' contents contents:notifying: contextVariablesInspector debuggerMap doNothing: interruptedContext interruptedProcess isNotifier labelString labelString: proceedValue proceedValue: receiver receiverInspector receiverInspectorObject:context:)('breakpoints' toggleBreakOnEntry)('class list' selectedClass selectedClassOrMetaClass)('code pane' aboutToStyle: contentsSelection doItContext doItReceiver pc pcRange)('code pane menu' codePaneMenu:shifted: perform:orSendTo: runToSelection:)('context stack menu' abandon abandon: askForCategoryIn:default: browseMessages browseSendersOfMessages browseVersions close: contextStackKey:from: contextStackMenu:shifted: debugProceedMenu: doStep down fullStack implement:inClass: mailOutBugReport messageListMenu:shifted: peelToFirst populateImplementInMenu: proceed proceed: restart returnValue selectPC send stepIntoBlock up where)('context stack (message list)' contextStackIndex contextStackList expandStack fullyExpandStack messageListIndex selectedMessage selectedMessageName toggleContextStackIndex:)('dependents access' step updateInspectors wantsSteps)('initialize' customButtonSpecs debugAt: errorWasInUIProcess: initialExtent notifierButtonHeight openFullNoSuspendLabel: openNotifierContents:label: optionalButtonPairs preDebugButtonQuads release wantsOptionalButtons windowIsClosing)('message category list' selectedMessageCategoryName)('notifier menu' debug storeLog)('toolbuilder' addCodeProvenanceButtonTo:using: buildFullWith: buildNotifierWith:label:message: buildWith: preDebugMessageString wantsAnnotationPane)('private' askForSuperclassOf:toImplement:ifCancel: checkContextSelection contextStackIndex:oldContextWas: createMethod externalInterrupt: lowSpaceChoices newStack: process:controller:context: resetContext: resumeProcess: selectedContext)('tally support' getSelectedText getTextMorphWithSelection tally)!!ChangeSorter class reorganize!('class initialization' initialize)('window color' windowColorSpecification)('deprecated' allChangeSetNames allChangeSets allChangeSetsWithClass:selector: assuredChangeSetNamed: basicNewChangeSet: belongsInAdditions: belongsInAll: belongsInMyInitials: belongsInNumbered: belongsInProjectChangeSets: belongsInProjectsInRelease: belongsInRecentUpdates: buildAggregateChangeSet changeSet:containsClass: changeSetNamed: changeSetNamesInReleaseImage changeSetNamesInThreeOh changeSetsNamedSuchThat: countOfChangeSetsWithClass:andSelector: deleteChangeSetsNumberedLowerThan: doesAnyChangeSetHaveClass:andSelector: existingOrNewChangeSetNamed: fileOutChangeSetsNamed: gatherChangeSets highestNumberedChangeSet mostRecentChangeSetWithChangeForClass:selector: newChangeSet newChangeSet: newChangesFromStream:named: noteChangeSetsInRelease promoteToTop: recentUpdateMarker recentUpdateMarker: registerInFlapsRegistry removeChangeSet: removeChangeSetsNamedSuchThat: removeEmptyUnnamedChangeSets reorderChangeSets secondaryChangeSet unload)('browse' browseChangeSetsWithClass:selector: browseChangeSetsWithSelector: prototypicalToolWindow)('instance creation' open)!!Browser reorganize!('accessing' contents contentsSelection contents:notifying: couldBrowseAnyClass doItReceiver editSelection editSelection: noteSelectionIndex:for: request:initialAnswer: spawn: suggestCategoryToSpawnedBrowser:)('annotation' annotation)('breakpoints' toggleBreakOnEntry)('class comment pane' annotationForClassDefinitionFor: classComment:notifying: noCommentNagString)('class functions' addAllMethodsToCurrentChangeSet classCommentText classDefinitionText classListMenu: classListMenu:shifted: copyClass createInstVarAccessors defineClass:notifying: editClass editComment explainSpecial: fileOutClass findMethod findMethodWithWildcard hierarchy makeNewSubclass plusButtonHit printOutClass removeClass renameClass shiftedClassListMenu:)('class list' classList classListIndex classListIndex: classListIndexOf: classListSingleton createHierarchyTreeOf: defaultClassList flattenHierarchyTree:on:indent: hierarchicalClassList recent selectClass: selectedClass selectedClassName toggleClassListIndex:)('code pane' aboutToStyle: codePaneMenu:shifted: compileMessage:notifying: showBytecodes)('copying' veryDeepInner:)('drag and drop' codeTextMorph dragFromClassList: dragFromMessageList: dropOnMessageCategories:at: dropOnSystemCategories:at: wantsMessageCategoriesDrop: wantsSystemCategoriesDrop:)('initialize-release' defaultBrowserTitle labelString methodCategoryChanged openEditString: openMessageCatEditString: openOnClassWithEditString: openSystemCatEditString: optionalAnnotationHeight optionalButtonHeight setClass:selector: setSelector: systemCatSingletonKey:from: systemOrganizer:)('message category functions' addCategory alphabetizeMessageCategories buildMessageCategoryBrowser buildMessageCategoryBrowserEditString: canShowMultipleMessageCategories categoryOfCurrentMethod changeMessageCategories: editMessageCategories fileOutMessageCategories highlightMessageList:with: messageCategoryMenu: printOutMessageCategories removeEmptyCategories removeMessageCategory renameCategory showHomeCategory)('message category list' categorizeAllUncategorizedMethods messageCatListSingleton messageCategoryList messageCategoryListIndex messageCategoryListIndex: messageCategoryListSelection rawMessageCategoryList recategorizeMethodSelector: selectMessageCategoryNamed: selectOriginalCategoryForCurrentMethod selectedMessageCategoryName setOriginalCategoryIndexForCurrentMethod toggleMessageCategoryListIndex:)('message functions' addExtraShiftedItemsTo: defineMessage:notifying: defineMessageFrom:notifying: inspectInstances inspectSubInstances messageListMenu:shifted: removeMessage removeMessageFromBrowser shiftedMessageListMenu:)('message list' messageList messageListIndex messageListIndex: messageListSingleton reformulateList selectedMessage selectedMessageName selectedMessageName: toggleMessageListIndex:)('metaclass' classCommentIndicated classMessagesIndicated classOrMetaClassOrganizer indicateClassMessages indicateInstanceMessages instanceMessagesIndicated metaClassIndicated metaClassIndicated: selectedClassOrMetaClass selectedClassOrMetaClassName setClassOrganizer)('system category functions' addSystemCategory alphabetizeSystemCategories browseAllClasses buildSystemCategoryBrowser buildSystemCategoryBrowserEditString: changeSystemCategories: classNotFound editSystemCategories fileOutSystemCategory findClass potentialClassNames printOutSystemCategory removeSystemCategory renameSystemCategory systemCatSingletonMenu: systemCategoryMenu: updateSystemCategories)('system category list' indexIsOne indexIsOne: selectCategoryForClass: selectedEnvironment selectedSystemCategoryName systemCategoryList systemCategoryListIndex systemCategoryListIndex: systemCategorySingleton toggleSystemCategoryListIndex:)('toolbuilder' addClassAndSwitchesTo:at:with: buildClassListSingletonWith: buildClassListWith: buildMessageCategoryListWith: buildMessageListCatSingletonWith: buildMessageListWith: buildSwitchesWith: buildSystemCatListSingletonWith: buildSystemCategoryListWith: buildWith:)('traits' addSpecialMenu: addTrait defineTrait:notifying: newClass newTrait)('user interface' addModelItemsToWindowMenu:)!!CodeHolder reorganize!('annotation' addOptionalAnnotationsTo:at:plus: addPriorVersionsCountForSelector:ofClass:to: annotation annotationForClassCommentFor: annotationForClassDefinitionFor: annotationForHierarchyFor: annotationForSelector:ofClass: annotationPaneMenu:shifted: annotationRequests annotationSeparator defaultAnnotationPaneHeight defaultButtonPaneHeight)('categories' categoryFromUserWithPrompt:for: categoryOfCurrentMethod changeCategory letUserReclassify:in: methodCategoryChanged selectedMessageCategoryName)('categories & search pane' listPaneWithSelector: newSearchPane searchPane textPaneWithSelector:)('commands' abbreviatedWordingFor: adoptMessageInCurrentChangeset browseImplementors browseSenders copyUpOrCopyDown offerMenu offerShiftedClassListMenu offerUnshiftedClassListMenu removeClass shiftedYellowButtonActivity spawn: spawnToClass: spawnToCollidingClass: unshiftedYellowButtonActivity)('construction' buildClassBrowserEditString: buildMorphicCodePaneWith:)('contents' aboutToStyle: commentContents contents contentsChanged contentsSymbol contentsSymbol: editContents editContentsWithDefault: isModeStyleable)('controls' addOptionalButtonsTo:at:plus: codePaneProvenanceButton codePaneProvenanceString contentsSymbolQuints decorateButtons optionalButtonPairs sourceAndDiffsQuintsOnly)('diffs' defaultDiffsSymbol diffButton diffFromPriorSourceFor: installTextualCodingPane prettyDiffButton regularDiffButton restoreTextualCodingPane showDiffs showDiffs: showPrettyDiffs: showRegularDiffs: showingAnyKindOfDiffs showingDiffsString showingPrettyDiffs showingPrettyDiffsString showingRegularDiffs showingRegularDiffsString toggleDiff toggleDiffing togglePlainSource togglePrettyDiffing togglePrettyPrint toggleRegularDiffing wantsDiffFeedback)('message category functions' canShowMultipleMessageCategories)('message list' decompiledSourceIntoContents selectedBytecodes selectedMessage sourceStringPrettifiedAndDiffed validateMessageSource:forSelector:)('message list menu' messageListKey:from:)('misc' addModelItemsToWindowMenu: getSelectorAndSendQuery:to: getSelectorAndSendQuery:to:with: isThereAnOverride isThisAnOverride menuButton menuHook:named:shifted: modelWakeUpIn: okayToAccept priorSourceOrNil refreshAnnotation refusesToAcceptCode releaseCachedState sampleInstanceOfSelectedClass sendQuery:to: setClassAndSelectorIn: suggestCategoryToSpawnedBrowser: useSelector:orGetSelectorAndSendQuery:to:)('self-updating' didCodeChangeElsewhere stepIn: updateCodePaneIfNeeded updateListsAndCodeIn: wantsStepsIn:)('toolbuilder' addCodeProvenanceButtonTo:using: buildCodePaneWith: buildCodeProvenanceButtonWith: buildOptionalButtonsWith: inheritanceButtonColor)('traits' makeSampleInstance showUnreferencedClassVars showUnreferencedInstVars spawnHierarchy)('what to show' offerWhatToShowMenu prettyPrintString setContentsToForceRefetch showByteCodes: showComment showDecompile: showDocumentation: showingByteCodes showingByteCodesString showingDecompile showingDecompileString showingDocumentation showingDocumentationString showingEditContentsOption showingPlainSource showingPlainSourceString showingPrettyPrint showingSource toggleDecompile toggleShowDocumentation toggleShowingByteCodes)!!StringHolder reorganize!('accessing' acceptContents: classCommentIndicated contents contents: contentsSelection noteAcceptanceOfCodeFor: reformulateList reformulateListNoting: selectedClassName selectedClassOrMetaClass selectedMessageName textContents:)('code pane menu' codePaneMenu:shifted: contents:notifying: perform:orSendTo: showBytecodes spawn:)('evaluation' doItContext doItReceiver)('initialize-release' defaultContents initialize openLabel:)('optional panes' wantsAnnotationPane wantsOptionalButtons)('toolbuilder' annotation buildCodePaneWith: buildOptionalButtonsWith: buildWindowWith: buildWindowWith:specs: buildWith: labelString optionalButtonPairs)('user edits' clearUserEditFlag okToChange)('*Tools' browseAllMessages browseClass browseLocalImplementors browseLocalSendersOfMessages browseMessages browseMethodFull browseSendersOfMessages browseUnusedMethods browseVersions classHierarchy classListKey:from: copyName copySelector fileOutMessage findMethodInChangeSets inspectInstances inspectSubInstances messageListKey:from: messageListSelectorTitle methodHierarchy offerMenuFrom:shifted: openSingleMessageBrowser packageListKey:from: printOutMessage removeFromCurrentChanges revertAndForget revertToPreviousVersion selectMessageAndEvaluate: systemCatListKey:from: timeStamp)('*Tools-traits' browseClassRefs browseClassVariables browseClassVarRefs browseInstVarDefs browseInstVarRefs)('message list menu' offerDurableMenuFrom:shifted:)!!ByteString reorganize!('accessing' at: at:put: byteAt: byteAt:put: byteSize indexOfAnyOf:startingAt: indexOfAnyOf:startingAt:ifAbsent: replaceFrom:to:with:startingAt:)('comparing' beginsWith: findSubstring:in:startingAt:matchTable:)('converting' asByteArray asJoliet asOctetString convertFromCompoundText convertFromSystemString squeakToUtf8 substrings utf8ToSqueak)('testing' isByteString isOctetString)!!String reorganize!('accessing' byteAt: byteAt:put: byteSize do:toFieldNumber: endsWithDigit findAnySubStr:startingAt: findBetweenSubStrs: findCloseParenthesisFor: findDelimiters:startingAt: findLastOccurrenceOfString:startingAt: findString: findString:startingAt: findString:startingAt:caseSensitive: findTokens: findTokens:escapedBy: findTokens:includes: findTokens:keep: findWordStart:startingAt: includesSubString: includesSubstring:caseSensitive: indexOf: indexOf:startingAt: indexOf:startingAt:ifAbsent: indexOfSubCollection: indexOfSubCollection:startingAt:ifAbsent: lastIndexOfPKSignature: leadingCharRunLengthAt: lineCorrespondingToIndex: lineCount lineIndicesDo: lineNumber: linesDo: skipAnySubStr:startingAt: skipDelimiters:startingAt: startsWithDigit string tabDelimitedFieldsDo:)('arithmetic' * + - / // \\)('comparing' < <= = > >= alike: caseInsensitiveLessOrEqual: caseSensitiveLessOrEqual: charactersExactlyMatching: compare: compare:caseSensitive: compare:with:collated: crc16 endsWith: endsWithAnyOf: hash hashMappedBy: hashWithInitialHash: howManyMatch: match: sameAs: startingAt:match:startingAt:)('converting' , adaptToCollection:andSend: adaptToNumber:andSend: adaptToPoint:andSend: adaptToString:andSend: asAlphaNumeric:extraChars:mergeUID: asByteArray asByteString asCharacter asDate asDateAndTime asDecomposedUnicode asDisplayText asDuration asFileName asFourCode asHex asHtml asIdentifier: asInteger asLegalSelector asLowercase asNumber asOctetString asPacked asPluralBasedOn: asPrecomposedUnicode asSignedInteger asSmalltalkComment asSqueakPathName asString asStringOrText asSymbol asText asTime asTimeStamp asUnHtml asUnsignedInteger asUppercase asUrl asUrlRelativeTo: asVmPathName askIfAddStyle:req: asWideString base64Decoded base64Encoded capitalized compressWithTable: contractTo: convertFromEncoding: convertFromSuperSwikiServerString convertFromWithConverter: convertToEncoding: convertToSuperSwikiServerString convertToSystemString convertToWithConverter: correctAgainst: correctAgainst:continuedFrom: correctAgainstDictionary:continuedFrom: encodeForHTTP encodeForHTTPWithTextEncoding: encodeForHTTPWithTextEncoding:conditionBlock: findSelector initialIntegerOrNil keywords numericSuffix onlyLetters romanNumber sansPeriodSuffix splitInteger squeakToUtf8 stemAndNumericSuffix subStrings subStrings: substrings surroundedBySingleQuotes translateFrom:to:table: translateToLowercase translateToUppercase translateWith: truncateTo: truncateWithElipsisTo: unescapePercents unescapePercentsWithTextEncoding: unparenthetically unzipped utf8ToSqueak withBlanksCondensed withBlanksTrimmed withFirstCharacterDownshifted withNoLineLongerThan: withoutJustTrailingDigits withoutLeadingBlanks withSeparatorsCompacted withoutLeadingDigits withoutTrailingBlanks withoutTrailingDigits zipped)('copying' copyReplaceTokens:with: deepCopy padded:to:with:)('displaying' displayAt: displayOn: displayOn:at: displayOn:at:textColor: displayProgressAt:from:to:during:)('encoding' getInteger32: putInteger32:at: writeLeadingCharRunsOn:)('filter streaming' byteEncode: putOn:)('formatting' expandMacros expandMacrosWithArguments: expandMacrosWith: expandMacrosWith:with: expandMacrosWith:with:with: expandMacrosWith:with:with:with: format: withCRs)('internet' decodeMimeHeader decodeQuotedPrintable isoToSqueak isoToUtf8 macToSqueak squeakToIso squeakToMac utf8ToIso withInternetLineEndings withSqueakLineEndings withUnixLineEndings withoutQuoting)('paragraph support' indentationIfBlank:)('printing' encodeDoublingQuoteOn: isLiteral printOn: storeOn: stringRepresentation)('system primitives' endsWithAColon findSubstring:in:startingAt:matchTable: numArgs)('testing' includesUnifiedCharacter isAllDigits isAllSeparators isAsciiString isByteString isOctetString isString isWideString lastSpacePosition)('translating' translated translatedIfCorresponds translatedTo:)('user interface' asExplorerString openInWorkspaceWithTitle:)('*Morphic' asMorph asStringMorph)('*MorphicExtras-*morphic-Postscript Canvases' asPostscript)('*Morphic-converting' openAsMorph)('*monticello' extractNumber)('*network-uri' asURI)('*packageinfo-base' escapeEntities)('private' correctAgainstEnumerator:continuedFrom: evaluateExpression:parameters: replaceFrom:to:with:startingAt: stringhash)('*Morphic-Explorer' hasContentsInExplorer)('deprecated-3.10' findLastOccuranceOfString:startingAt:)('*ST80-Support' asParagraph)('*system' suggestedTypeNames)!!StrikeFontSet reorganize!('accessing' ascentOf: descentOf: fontArray fontOf: fontOf:ifAbsent: heightOf: latin1 maxAsciiFor: textStyle widthOf:)('as yet unclassified' ascent ascentKern baseKern bonk:with:at: derivativeFonts descent descentKern displayLine:at: emphasis emphasis: emphasized: familyName familySizeFace fontArray: fontNameWithPointSize glyphs glyphsEncoding: height initializeWithFontArray: installOn: installOn:foregroundColor:backgroundColor: lineGrid maxEncoding maxWidth name name: objectForDataStream: pointSize printOn: reset subscript superscript widthOfString: xTable xTableEncoding:)('character shapes' characterFormAt: characterFormAt:put:)('displaying' characters:in:displayAt:clippedBy:rule:fillColor:kernDelta:on: displayMultiString:on:from:to:at:kern:baselineY: displayStringR2L:on:from:to:at:kern: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: displayString:on:from:to:at:kern:from:baselineY: fontDisplay)('emphasis' makeBoldGlyphs makeItalicGlyphs makeStruckOutGlyphs makeUnderlinedGlyphs)('private' addNewFont:at: glyphInfoOf:into: questionGlyphInfoInto:)('testing' isFontSet)('copying' copy)!!StrikeFont class reorganize!('accessing' actualFamilyNames defaultSized: familyName:pointSize: familyName:size: familyNames setupDefaultFallbackFont)('derivative font caching' shutDown)('examples' convertFontsNamed: example readStrikeFont2Family: readStrikeFont2Family:fromDirectory:)('font creation' createDejaVu: fromHostFont:size:flags:weight: hostFontFromUser installDejaVu listFont: listFontNames localeChanged primitiveCreateFont:size:flags:weight: primitiveDestroyFont: primitiveFont:glyphOfChar:into: primitiveFont:widthOfChar: primitiveFontAscent: primitiveFontDescent: primitiveFontEncoding:)('instance creation' familyName:pointSize:emphasized: familyName:size:emphasized: fixAccuISO8859From: fixForISO8859From: fromStrike: fromUser fromUser: fromUser:allowKeyboard: newForJapaneseFromEFontBDFFile:name:overrideWith: newForKoreanFromEFontBDFFile:name:overrideWith: newFromBDFFile:name: newFromEFontBDFFile:name:ranges: newFromEFontBDFFile:name:startRange:endRange: newFromF12File: passwordFontSize:)('dejaVu font data' dejaVuSansBold12Data dejaVuSansBold12Form dejaVuSansBold7Data dejaVuSansBold7Form dejaVuSansBold9Data dejaVuSansBold9Form dejaVuSansBoldOblique12Data dejaVuSansBoldOblique12Form dejaVuSansBoldOblique7Data dejaVuSansBoldOblique7Form dejaVuSansBoldOblique9Data dejaVuSansBoldOblique9Form dejaVuSansBook12Data dejaVuSansBook12Form dejaVuSansBook7Data dejaVuSansBook7Form dejaVuSansBook9Data dejaVuSansBook9Form dejaVuSansOblique12Data dejaVuSansOblique12Form dejaVuSansOblique7Data dejaVuSansOblique7Form dejaVuSansOblique9Data dejaVuSansOblique9Form)('removing' limitTo16Bits saveSpace)('character shapes' makeControlCharsVisible makeLfInvisible makeLfVisible makeTabInvisible makeTabVisible useUnderscoreIfOver1bpp)('class initialization' cleanUp initialize)!!StrikeFont reorganize!('accessing' ascent ascentKern ascentOf: baseKern characterToGlyphMap characterToGlyphMap: derivativeFonts descent descentKern descentOf: fallbackFont fallbackFont: familyName familySizeFace fontNameWithPointSize glyphInfoOf:into: glyphOf: glyphs height heightOf: lineGrid maxAscii maxWidth minAscii name name: pointSize pointSize: raster setGlyphs: subscript superscript textStyle widthOf: xTable xTable:)('character shapes' alter:formBlock: characterFormAtMulti: characterFormAt: characterFormAt:put: characterForm:pixelValueAt:put: edit: ensureCleanBold extendMaxAsciiTo: fillZeroWidthSlots fixOneWideChars makeCarriageReturnsWhite makeControlCharsVisible makeLfInvisible makeLfVisible makeTabInvisible makeTabVisible useLeftArrow useUnderscore useUnderscoreIfOver1bpp widen:by:)('copying' deepCopy postCopy veryDeepCopyWith:)('displaying' characters:in:displayAt:clippedBy:rule:fillColor:kernDelta:on: displayLine:at: displayMultiString:on:from:to:at:kern:baselineY: displayStringR2L:on:from:to:at:kern: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: fontDisplay installOn: installOn:foregroundColor:backgroundColor:)('emphasis' bonk:with: derivativeFont:at: emphasis emphasis: emphasized: isSynthetic isSynthetic: makeBoldGlyphs makeCondensedGlyphs makeItalicGlyphs makeStruckOutGlyphs makeUnderlinedGlyphs releaseCachedState reset setupDefaultFallbackFont)('file in/out' buildfontNamed:fromForms:startingAtAscii:ascent:descent:maxWid: displayChar:form: newFromStrike: objectForDataStream: printOn: readBDFFromFile:name: readBFHeaderFrom: readEFontBDFForJapaneseFromFile:name:overrideWith: readEFontBDFForKoreanFromFile:name:overrideWith: readEFontBDFFromFile:name:rangeFrom:to: readEFontBDFFromFile:name:ranges: readF12FromStream: readFromBitFont: readFromStrike2Stream: readFromStrike2: restOfLine:from: writeAsStrike2named: writeAsStrike2On:)('Mac reader' aComment fixKerning: readMacFontHex: strikeFromHex:width:height: xTableFromHex:)('make arrows' makeAssignArrow makeReturnArrow)('multibyte character methods' fixAccuISO8859From: fixAscent:andDescent:head: fixForISO8859From: fixXTable hasGlyphOf: readCharacter:from:)('testing' checkCharacter:)('private' createCharacterToGlyphMap leftAndRighOrNilFor:)('building' buildFromForm:data:name: setGlyphsDepthAtMost: stripHighGlyphs)!!SmartRefStream reorganize!('accessing' structures: superclasses:)('class changed shape' catalogValues:size: conversionMethodsFor: storeInstVarsIn:from: writeClassRename:was: writeClassRenameMethod:was:fromInstVars: writeConversionMethod:class:was:fromInstVars:to: writeConversionMethodIn:fromInstVars:to:renamedFrom:)('conversion' abstractStringx0 alansTextPlusMorphbosfcebbmsopssrsggshtt0 bookPageMorphbosfcepcbbfgcc0 clippingMorphbosfcep0 clippingMorphbosfcepc0 dropShadowMorphbosfces0 gradientFillbosfcepbbfgcc0 layoutMorphbosfcepbbochvimol0 layoutMorphbosfcepcbbochvimol0 morphicEventtcbks0 morphicSoundEventtcbkss0 multiStringx0 multiSymbolx0 myMorphbosfce0 newMorphicEventts0 scrollControllermvslrrsmsms0 transparentColorrcc0 worldMorphbosfcebbfgccpmcpbttloiairfidcuwhavcdsll0)('import image segment' applyConversionMethodsTo:className:varMap: checkFatalReshape: convert1:to:allVarMaps: convert2:allVarMaps: mapClass:origName: reshapedClassesIn:)('read write' appendClassDefns checkCrLf initKnownRenames initShapeDicts instVarInfo: mapClass: moreObjects next nextAndClose nextPut: nextPutObjOnly: noHeader readInstance readInstanceSize:clsname:refPosn: readShortInst readWordLike recordImageSegment: renamed renamedConv restoreClassInstVars saveClassInstVars scanFrom: setStream: setStream:reading: structures superclasses uniClasesDo: uniClassInstVarsRefs: verifyStructure versionSymbol:)!!SharedQueue2 reorganize!('accessing' next nextOrNil nextOrNilSuchThat: nextPut: peek removeAll removeAllSuchThat:)('initializing' initialize)('printing' printOn:)('size' isEmpty size)('copying' postCopy)!!ReadWriteStream reorganize!('accessing' contents name next next:)('converting' asUnZippedStream readStream)('file status' close closed)('fileIn/Out' fileInObjectAndCode fileNameEndsWith: fileOutChangeSet:andObject: fileOutChanges fileOutClass:andObject: fileOutClass:andObject:blocking:)('testing' = hash isZipArchive)!!ReadStream reorganize!('accessing' ascii binary next next: next:into:startingAt: nextFloat nextPut: readStream size upTo: upToAnyOf:do: upToEnd)('file stream compatibility' localName openReadOnly readOnly)('private' on:from:to:)!!Stream reorganize!('accessing' basicNext basicNextPut: basicNextPutAll: binary contents flush localName next next: next:put: nextMatchAll: nextMatchFor: nextPut: nextPutAll: openReadOnly printOn: readOnly upToEnd)('as yet unclassified' sleep)('enumerating' do:)('file open/close' close)('filter streaming' write:)('printing' print: printHtml:)('testing' atEnd closed isStream isTypeHTTP nextWordsPutAll:)('*monticello' isMessageStream)('readability' <<)!!StandardScriptingSystem class reorganize!('class initialization' cleanUp: initialize removeUnreferencedPlayers)('*MorphicExtras-class initialization' registerInFlapsRegistry unload)!!StandardScriptingSystem reorganize!('form dictionary' deletePrivateGraphics deletePrivateGraphics:afterStoringToFileNamed: formAtKey: formAtKey:extent:depth: formDictionary inspectFormDictionary privateGraphics saveForm:atKey: squeakyMouseForm)('help dictionary' helpStringOrNilFor: initializeHelpStrings)('utilities' allClassVarNamesInSystem customizeForEToyUsers: soundNamesToSuppress stripGraphicsForExternalRelease)('parts bin' resetStandardPartsBin)!!SqNumberParser reorganize!('accessing' allowPlusSign exponentLetters)('parsing-private' makeIntegerOrScaledInteger makeScaledDecimalWithNumberOfNonZeroFractionDigits:andNumberOfTrailingZeroInFractionPart: readNamedFloatOrFail readNumberWithFractionPartNumberOfTrailingZeroInIntegerPart: readScale)('parsing-public' nextNumber nextNumberBase: nextScaledDecimal)!!SpeakerMorph class reorganize!('as yet unclassified')!!SortedCollection reorganize!('accessing' at:put: median sortBlock sortBlock:)('adding' add: addAll: addFirst: copyEmpty)('comparing' =)('converting' reverseInPlace reversed)('enumerating' collect:)('topological sort' sortTopologically)('private' indexForInserting: insert:before: reSort should:precede: sort:to:)('sorting' sort:)!SmalltalkImage class removeSelector: #convertFromSystemDictionary!SmalltalkImage initialize!SmalltalkImage removeSelector: #at:ifPresentAndInMemory:!SmalltalkImage removeSelector: #computeImageSegmentation!SmalltalkImage removeSelector: #discardDiscards!SmalltalkImage removeSelector: #discardFFI!SmalltalkImage removeSelector: #discardFlash!SmalltalkImage removeSelector: #discardMIDI!SmalltalkImage removeSelector: #discardMVC!SmalltalkImage removeSelector: #discardMorphic!SmalltalkImage removeSelector: #discardNetworking!SmalltalkImage removeSelector: #discardOddsAndEnds!SmalltalkImage removeSelector: #discardSUnit!SmalltalkImage removeSelector: #discardSoundSynthesis!SmalltalkImage removeSelector: #discardSpeech!SmalltalkImage removeSelector: #discardTrueType!SmalltalkImage removeSelector: #doesNotUnderstand:!SmalltalkImage removeSelector: #externalizeSources!SmalltalkImage removeSelector: #hasBindingThatBeginsWith:!SmalltalkImage removeSelector: #internalizeChangeLog!SmalltalkImage removeSelector: #internalizeSources!SmalltalkImage removeSelector: #lastRemoval!SmalltalkImage removeSelector: #majorShrink!SmalltalkImage removeSelector: #makeExternalRelease!SmalltalkImage removeSelector: #makeInternalRelease!SmalltalkImage removeSelector: #reconstructChanges!SmalltalkImage removeSelector: #reconstructChanges2!SmalltalkImage removeSelector: #recover:!SmalltalkImage removeSelector: #reformatChangesToUTF8!SmalltalkImage removeSelector: #removeAllLineFeeds!SmalltalkImage removeSelector: #removeAllLineFeedsQuietly!SmalltalkImage removeSelector: #removeAllLineFeedsQuietlyCalling:!SmalltalkImage removeSelector: #removeNormalCruft!SmalltalkImage removeSelector: #reportClassAndMethodRemovalsFor:!SmalltalkImage removeSelector: #scanFor:!SmalltalkImage removeSelector: #testFormatter!SmalltalkImage removeSelector: #testFormatter2!SmalltalkImage removeSelector: #unusedClassesAndMethodsWithout:!SmalltalkImage removeSelector: #writeImageSegmentsFrom:withKernel:!!SmalltalkImage reorganize!('housekeeping' cleanOutUndeclared cleanUp cleanUp: cleanUp:except: compressSources condenseChanges condenseSources fixObsoleteReferences forgetDoIts reclaimDependents removeEmptyMessageCategories verifyChanges)('image cleanup' cleanup)('image, changes names' changeImageNameTo: changesName currentChangeSetString fullNameForChangesNamed: fullNameForImageNamed: imageName imageName: imagePath primImageName primImageName: primVmPath sourceFileVersionString sourcesName)('modules' forgetModule: listBuiltinModule: listBuiltinModules listLoadedModule: listLoadedModules unbindExternalPrimitives unloadModule:)('snapshot and quit' add:toList:after: addToShutDownList: addToShutDownList:after: addToStartUpList: addToStartUpList:after: exitToDebugger getFileNameFromUser isMorphic processShutDownList: processStartUpList: quitPrimitive recordStartupStamp removeFromShutDownList: removeFromStartUpList: saveSession send:toClassesNamedIn:with: setGCParameters setPlatformPreferences shutDown shutDownSound snapshot:andQuit: snapshot:andQuit:embedded: snapshotEmbeddedPrimitive snapshotPrimitive)('sources, changes log' aboutThisSystem assureStartupStampLogged closeSourceFiles copyright currentProjectDo: datedVersion event: forceChangesToDisk lastQuitLogPosition lastQuitLogPosition: lastUpdateString logChange: openSourceFiles saveAs saveAsEmbeddedImage saveAsNewVersion saveChangesInFileNamed: saveImageInFileNamed: saveImageSegments systemInformationString timeStamp: version wordSize writeRecentCharacters:toFileNamed: writeRecentToFile)('vm parameters' extraVMMemory extraVMMemory: getVMParameters vmParameterAt: vmParameterAt:put:)('vm profiling' clearProfile dumpProfile profile: startProfiling stopProfiling)('vm statistics' textMarkerForShortReport vmStatisticsReportString vmStatisticsShortString)('shrinking' abandonSources abandonTempNames cleanUpUndoCommands presumedSentMessages removeAllUnSentMessages removeSelector: unloadAllKnownPackages unusedClasses zapAllOtherProjects zapMVCprojects)('classes and traits' allClasses allClassesAndTraits allClassesAndTraitsDo: allClassesDo: allTraits allTraitsDo: classNamed: classNames classOrTraitNamed: flushClassNameCache forgetClass:logged: hasClassNamed: removeClassNamed: renameClass:as: renameClass:from: renameClassNamed:as: renamedClass:from:to: traitNames)('dictionary access' associationAt: associationAt:ifAbsent: associationDeclareAt: associationOrUndeclaredAt: do: includes: includesKey: keyAtIdentityValue:ifAbsent: keys removeKey: removeKey:ifAbsent: scopeFor:from:envtAndPathIfFound: size)('memory space' bytesLeft bytesLeft: bytesLeftString createStackOverflow forceTenure garbageCollect garbageCollectMost installLowSpaceWatcher isRoot: isYoung: lowSpaceThreshold lowSpaceWatcher lowSpaceWatcherProcess memoryHogs okayToProceedEvenIfSpaceIsLow primBytesLeft primLowSpaceSemaphore: primSignalAtBytesLeft: primitiveGarbageCollect rootTable rootTableAt: setGCBiasToGrow: setGCBiasToGrowGCLimit: setGCSemaphore: signalLowSpace useUpMemory useUpMemoryWithArrays useUpMemoryWithContexts useUpMemoryWithTinyObjects)('system attributes' calcEndianness endianness isBigEndian isLittleEndian vmVersion)('special objects' clearExternalObjects compactClassesArray externalObjects hasSpecialSelector:ifTrueSetByte: recreateSpecialObjectsArray registerExternalObject: specialNargsAt: specialObjectsArray specialSelectorAt: specialSelectorSize specialSelectors unregisterExternalObject:)('accessing' at: at:ifAbsent: at:ifPresent: at:put: bindingOf: environment globals globals: organization)('miscellaneous' handleUserInterrupt hasMorphic logError:inContext:to: objectForDataStream: printOn: setMacFileInfoOn: sourceFileVersionString: storeDataOn: verifyMorphicAvailability veryDeepCopyWith:)('system attribute' buildDate)('command line' argumentAt: arguments commandLine documentPath extractParameters optionAt: options vmPath)('private' getSystemAttribute:)('os' os osVersion platformName platformSubtype windowSystemName)!!SmallInteger class reorganize!('constants' maxVal minVal)('documentation' guideToDivision)('instance creation' basicNew new)!!SmallInteger reorganize!('arithmetic' * + - / // \\ gcd: quo:)('bit manipulation' bitAnd: bitOr: bitShift: bitXor: hashMultiply highBit highBitOfMagnitude lowBit)('comparing' < <= = > >= hash identityHash identityHashMappedBy: scaledIdentityHash ~=)('converting' as31BitSmallInt asFloat)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('printing' decimalDigitLength destinationBuffer: numberOfDigitsInBase: printOn:base: printOn:base:nDigits: printString printStringBase: printStringBase:nDigits: threeDigitName)('system primitives' digitAt: digitAt:put: digitLength instVarAt: nextInstance nextObject)('testing' even isLarge odd)('private' fromString:radix: highBitOfPositiveReceiver)!!JoystickMorph class reorganize!('class initialization' initialize registerInFlapsRegistry unload)('new-morph participation' includeInNewMorphMenu)('parts bin' descriptionForPartsBin)('scripting' authoringPrototype)!!SketchMorph class reorganize!('instance creation' fromFile: fromStream: openEditor withForm:)('new-morph participation' includeInNewMorphMenu)('scripting' defaultNameStemForInstances)('testing' isSketchMorphClass)!!ColorPickerMorph reorganize!('accessing' argument argument: deleteOnMouseUp deleteOnMouseUp: locationIndicator originalColor: selectedColor selector selector: sourceHand sourceHand: target target: updateContinuously updateContinuously:)('drawing' drawOn:)('event handling' handlesMouseDown: inhibitDragging mouseDown: mouseUp:)('geometry testing' containsPoint:)('halos and balloon help' isLikelyRecipientForMouseOverHalos)('initialization' buildChartForm choseModalityFromPreference initialize initializeForPropertiesPanel initializeModal: updateSelectorDisplay)('menu' addCustomMenuItems:hand: pickUpColorFor: toggleDeleteOnMouseUp toggleUpdateContinuously)('other' addToWorld:near: bestPositionNear:inWorld: indicateColorUnderMouse putUpFor:near: trackColorUnderMouse)('stepping and presenter' step)('submorphs-add/remove' delete)('testing' stepTime)('private' anchorAndRunModeless: argumentsWith: deleteAllBalloons modalBalloonHelpAtPoint: pickColorAt: positionOfColor: trackColorAt: updateAlpha: updateColor:feedbackColor: updateTargetColor updateTargetColorWith:)('kedama' getColorFromKedamaWorldIfPossible:)!!SketchMorph reorganize!('accessing' form form: framesToDwell framesToDwell: nominalForm: originalForm: rotatedForm scaleFactor scalePoint scalePoint: setNewFormFrom: useInterpolation useInterpolation: wantsSimpleSketchMorphHandles)('caching' releaseCachedState)('drawing' canBeEnlargedWithB3D drawHighResolutionOn:in: drawInterpolatedImage:on: drawOn: generateInterpolatedForm generateRotatedForm)('e-toy support' baseGraphic baseGraphic: flipHorizontal flipVertical rotationStyle rotationStyle: wantsRecolorHandle)('geometry' extent: firstIntersectionWithLineFrom:to:)('geometry eToy' forwardDirection:)('geometry testing' containsPoint:)('halos and balloon help' isLikelyRecipientForMouseOverHalos wantsDirectionHandles wantsDirectionHandles:)('initialization' initialize initializeWith:)('layout' layoutChanged)('menu' addBorderToShape: addCustomMenuItems:hand: callThisBaseGraphic editDrawing editDrawingIn:forBackground: erasePixelsOfColor: insertIntoMovie: recolorPixelsOfColor: reduceColorPalette: restoreBaseGraphic restoreBaseGraphicFromMenu setRotationStyle toggleInterpolation useInterpolationString)('menus' addFillStyleMenuItems:hand: addToggleItemsToHaloMenu: changePixelsOfColor:toColor: collapse)('objects from disk' convertToCurrentVersion:refStream:)('other' newForm: replaceSelfWithMovie)('parts bin' initializeToStandAlone)('pen support' clearExtent:fillColor: penOnMyForm revealPenStrokes)('*MorphicExtras-testing' canDrawAtHigherResolution)('*MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)!!SimplifiedChineseEnvironment reorganize!('as yet unclassified')!!SimpleTestResourceTestCase reorganize!('not categorized' dummy error fail setRun setUp testRan testResourceInitRelease testResourcesCollection)!!SimpleSliderMorph class reorganize!('class initialization' initialize registerInFlapsRegistry unload)('parts bin' descriptionForPartsBin)('printing' defaultNameStemForInstances)('scripting' authoringPrototype)!!SimpleSliderMorph reorganize!('accessing' actionSelector actionSelector: arguments arguments: maxVal maxVal: minVal minVal: target target:)('copying' updateReferencesUsing: veryDeepFixupWith: veryDeepInner:)('e-toy support' isLikelyRecipientForMouseOverHalos)('initialization' initialize)('menu' addCustomMenuItems:hand: addSliderMenuItems:hand: addTargetingMenuItems:hand: clearTarget descendingString setActionSelector setArguments setLabel setMaxVal setMinVal setMinVal: setTarget: toggleDescending toggleTruncate truncateString)('model access' setValue:)('parts bin' initializeToStandAlone)('private' adjustToValue: getScaledValue setMaxVal: setScaledValue: truncate truncate:)!!SimpleButtonMorph class reorganize!('as yet unclassified' newWithLabel:)('printing' defaultNameStemForInstances)('scripting' authoringPrototype)!!Set reorganize!('accessing' like: like:ifAbsent:)('adding' add:)('converting' asSet)('copying' postCopy)('enumerating' collect: do: select:)('removing' copyWithout: remove:ifAbsent:)('testing' = includes: occurrencesOf:)('*Tools-Inspector' inspectorClass)('private' fixCollisionsFrom: noCheckNoGrowFillFrom: scanFor:)('*Morphic-Explorer' explorerContents hasContentsInExplorer)!!ServerDirectory class reorganize!('available servers' addLocalProjectDirectory: addServer:named: localProjectDirectories nameForServer: projectServers removeServerNamed: removeServerNamed:ifAbsent: resetLocalProjectDirectories resetServers serverForURL: serverNamed: serverNamed:ifAbsent: serverNames servers)('class initialization' initialize)('misc' defaultStemUrl newFrom: on: parseFTPEntry: secondsForDay:month:yearOrTime:thisMonth:thisYear:)('school support' projectDefaultDirectory)('server groups' convertGroupNames groupNames serverInGroupNamed: serversInGroupNamed:)('server prefs' determineLocalServerDirectory: fetchExternalSettingsIn: parseServerEntryFrom: releaseExternalSettings serverConfDirectoryName storeCurrentServersIn: transferServerDefinitionsToExternal)!!ServerDirectory reorganize!('accessing' acceptsUploads: altUrl altUrl: bareDirectory copy directory directory: directoryObject downloadUrl encodingName encodingName: fullPath: isTypeFTP isTypeFile isTypeHTTP keepAlive: loaderUrl loaderUrl: moniker moniker: password password: passwordSequence passwordSequence: printOn: realUrl server server: slashDirectory type: typeForPrefs typeWithDefault url: urlObject urlObject: user user:)('dis/connect' openFTPClient quit quitClient)('file directory' asServerFileNamed: assureExistence assureExistenceOfPath: containingDirectory createDirectory: deleteDirectory: deleteFileNamed: deleteLocalFiles directoryNamed: directoryNames entries entryAt: entryAt:ifAbsent: exists fileAndDirectoryNames fileNamed: fileNames fullNameFor: getOnly:from: includesKey: localName localNameFor: localPathExists: matchingEntries: newFileNamed: oldFileNamed: oldFileOrNoneNamed: on: pathName pathNameDelimiter pathParts readOnlyFileNamed: rename:toBe: serverDelimiter splitName:to: streamOnBeginningOf:)('file-in/out' storeServerEntryOn:)('initialize' fromUser switchDirectory)('multi-action sessions' reset sleep wakeUp)('server groups' closeGroup convertGroupName groupName groupName: openGroup serversInGroup)('squeaklets' directoryWrapperClass moveAllButYoungest:in:to: upLoadProject:members:retry: upLoadProject:named:resourceUrl:retry: updateProjectInfoFor: writeProject:inFileNamed:fromDirectory:)('testing' acceptsUploads isProjectSwiki isRemoteDirectory isRoot isSearchable keepAlive)('updates' checkNames: checkServersWithPrefix:andParseListInto: copyUpdatesNumbered:toVersion: exportUpdatesExcept: outOfDate: putUpdate: putUpdateMulti:fromDirectory: updateInstallVersion:)('up/download' fileExists: getDirectory getFileList getFileNamed: getFileNamed:into: getFileNamed:into:httpRequest: getOnlyBuffer:from: putFile:named: putFile:named:retry: putFileSavingOldVersion:named:)('*MorphicExtras-accessing' url)('file-operations' recursiveDelete)!!Semaphore reorganize!('initialize-release' initSignals resumeProcess: terminateProcess)('communication' signal waitTimeoutMSecs: waitTimeoutSeconds:)('mutual exclusion' critical: critical:ifCurtailed: critical:ifError: critical:ifLocked:)('comparing' = hash)('testing' isSignaled)('*Scripting-override' wait)!!RunArray reorganize!('accessing' = at: at:put: first last runLengthAt: size withStartStopAndValueDo:)('adding' addFirst: addLast: addLast:times: coalesce rangeOf:startingAt: repeatLast:ifEmpty: repeatLastIfEmpty:)('converting' reversed)('copying' , copyFrom:to: copyReplaceFrom:to:with: postCopy)('enumerating' runsAndValuesDo: runsFrom:to:do:)('printing' printOn: storeOn: writeOn: writeScanOn:)('private' at:setRunOffsetAndValue: mapValues: runs setRuns:setValues: values)!!OrderedCollection reorganize!('accessing' at: at:put: capacity size)('adding' add: add:after: add:afterIndex: add:before: add:beforeIndex: addAll: addAllFirst: addAllFirstUnlessAlreadyPresent: addAllLast: addFirst: addLast: at:ifAbsentPut: grow growSize)('copying' copyEmpty copyFrom:to: copyReplaceFrom:to:with: copyWith: postCopy postCopyFrom:to: reversed)('enumerating' collect: collect:from:to: do: reverseDo: select: with:collect: withIndexCollect:)('removing' remove:ifAbsent: removeAll removeAllSuchThat: removeAt: removeFirst removeFirst: removeLast removeLast:)('*Tools-Inspector' inspectorClass)('private' collector errorConditionNotSatisfied errorNoSuchElement find: insert:before: makeRoomAtFirst makeRoomAtLast removeIndex: reset resetTo: setCollection: setContents:)('sorting' sort sort:)('*Morphic-Explorer' hasContentsInExplorer)('converting' asArray)!!Interval reorganize!('accessing' anyOne at: at:put: extent first increment indexOf:startingAt:ifAbsent: last rangeIncludes: size)('adding' add:)('arithmetic' + -)('comparing' = hash hashMappedBy:)('enumerating' collect: do: permutationsDo: reverseDo:)('printing' printOn: storeOn:)('removing' remove:)('testing' isInterval)('private' setFrom:to:by: species)!!CompiledMethod reorganize!('accessing' clearFlag defaultSelector dragLabel endPC flag flushCache frameSize initialPC methodClass methodClass: methodClassAssociation methodClassAssociation: methodHome methodReference numArgs numLiterals numTemps primitive properties properties: returnField scanner searchForClass searchForSelector selector selector: trailer)('closures' allEmbeddedBlockMethods containsBlockClosures embeddedBlockMethods isBlockMethod isBlockMethod: isClosureCompiled: method remoteReturns searchImageForHomeMethod)('comparing' equivalentTo: =)('decompiling' compilerClass decompile decompilerClass decompileWithTemps methodNode methodNodeFormattedAndDecorated: parserClass)('evaluating' valueWithReceiver:arguments:)('file in/out' objectForDataStream: readDataFrom:size: storeDataOn: veryDeepCopyWith: zapSourcePointer)('initialize-release' copyWithTrailerBytes: needsFrameSize:)('literals' allLiterals hasLiteral: hasLiteralSuchThat: hasLiteralThorough: hasLiteralThorough:from: header headerDescription indexOfLiteral: literalAt: literalAt:put: literalStrings literals literalsDo: objectAt: objectAt:put: refersToLiteral: sendsSelector:)('printing' abstractSymbolic dateMethodLastSubmitted decompileString longPrintOn: longPrintOn:indent: longPrintRelativeOn:indent: primitiveErrorVariableName printOn: printOnStream: printPrimitiveOn: storeLiteralsOn:forClass: storeOn: symbolic symbolicLinesDo: timeStamp)('scanning' hasInstVarRef messages messagesDo: messagesSequence readsField: readsRef: scanFor: scanLongLoad: scanLongStore: scanVeryLongLoad:offset: scanVeryLongStore:offset: sendsToSuper writesField: writesRef:)('source code management' checkOKToAdd:at: copyWithTempNames: copyWithTempsFromMethodNode: dropSourcePointer fileIndex filePosition getPreambleFrom:at: getSource getSourceFor:in: getSourceFromFile getSourceFromFileAt: holdsTempNames linesOfCode putSource:fromParseNode:class:category:inFile:priorMethod: putSource:fromParseNode:class:category:withStamp:inFile:priorMethod: putSource:fromParseNode:inFile:withPreamble: setMySourcePointer: setSourcePointer: setSourcePosition:inFile: sourceClass sourceFileStream sourcePointer sourceSelector tempNamesString)('testing' hasNewPropertyFormat hasReportableSlip isAbstract isBlueBookCompiled isClosureCompiled isCompiledMethod isConflict isDisabled isDisabled: isExplicitlyRequired isExplicitlyRequired: isImplicitlyRequired isImplicitlyRequired: isInstalled isProvided isProvided: isQuick isRequired isRequired: isReturnField isReturnSelf isReturnSpecial isSubclassResponsibility isSubclassResponsibility: usesClosureBytecodes)('*Tools-Inspector' inspectorClass)('private' markerOrNil penultimateLiteral penultimateLiteral: replace:with:in:)('debugger support' abstractPCForConcretePC: blockExtentsInto:from:to:scanner:numberer: blockExtentsToTempsMap debuggerMap hasBreakpoint mapFromBlockKeys:toSchematicTemps: pcPreviousTo: startpcsToBlockExtents tempsSubSequenceFrom:)('accessing-pragmas & properties' pragmaAt: pragmas propertyKeysAndValuesDo: propertyValueAt: propertyValueAt:ifAbsent: propertyValueAt:put: removeProperty: removeProperty:ifAbsent:)('*Morphic-Explorer' explorerContents)('*Traits-NanoKernel' originalTraitMethod originalTraitMethod: originalTraitOrClass sameTraitCodeAs:)!!ByteArray reorganize!('accessing' asWideString atAllPut: byteAt: byteAt:put: byteSize bytesPerElement)('comparing' hash)('converting' asByteArray asString base64Encoded hex)('platform independent access' doubleAt:bigEndian: doubleAt:put:bigEndian: longAt:bigEndian: longAt:put:bigEndian: shortAt:bigEndian: shortAt:put:bigEndian: unsignedLongAt:bigEndian: unsignedLongAt:put:bigEndian: unsignedShortAt:bigEndian: unsignedShortAt:put:bigEndian:)('zip archive' lastIndexOfPKSignature:)('private' asByteArrayPointer defaultElement replaceFrom:to:with:startingAt:)('testing' isLiteral)('printing' printOn: storeOn:)('streaming' putOn:)('initialize' readHexFrom:)!!ArrayedCollection class reorganize!('instance creation' new new:withAll: newFrom: newFromStream: with: with:with: with:with:with: with:with:with:with: with:with:with:with:with: with:with:with:with:with:with: withAll:)!!Array reorganize!('accessing' atWrap: atWrap:put:)('arithmetic' +* preMultiplyByArray: preMultiplyByMatrix:)('comparing' hashMappedBy: literalEqual:)('converting' asArray elementsExchangeIdentityWith: elementsForwardIdentityTo: elementsForwardIdentityTo:copyHash: evalStrings)('copying' copyWithDependent:)('file in/out' objectForDataStream:)('filter streaming' byteEncode: storeOnStream:)('printing' printOn: storeOn:)('self evaluating' printAsBraceFormOn: printAsLiteralFormOn:)('testing' isArray isLiteral)('private' hasLiteralThorough: hasLiteral: hasLiteralSuchThat: replaceFrom:to:with:startingAt:)!!ArrayedCollection reorganize!('accessing' size)('adding' add:)('filter streaming' flattenOnStream:)('objects from disk' byteSize bytesPerBasicElement bytesPerElement restoreEndianness swapHalves writeOn: writeOnGZIPByteStream:)('printing' storeOn:)('sorting' asSortedArray isSorted isSortedBy: mergeFirst:middle:last:into:by: mergeSortFrom:to:by: mergeSortFrom:to:src:dst:by: sort sort:)('private' defaultElement fillFrom:with: storeElementsFrom:to:on:)('removing' removeAll)('enumerating' inject:into:)!!SequenceableCollection reorganize!('accessing' after: after:ifAbsent: allButFirst allButFirst: allButLast allButLast: anyOne atAllPut: atAll: atAll:putAll: atAll:put: atLast: atLast:ifAbsent: atLast:put: atPin: atRandom: atWrap: atWrap:put: at:ifAbsent: at:incrementBy: before: before:ifAbsent: eighth fifth first first: fourth from:to:put: identityIndexOf: identityIndexOf:ifAbsent: indexOfAnyOf: indexOfAnyOf:ifAbsent: indexOfAnyOf:startingAt: indexOfAnyOf:startingAt:ifAbsent: indexOfSubCollection:startingAt: indexOfSubCollection:startingAt:ifAbsent: indexOf: indexOf:ifAbsent: indexOf:startingAt:ifAbsent: integerAt: integerAt:put: last lastIndexOf: lastIndexOf:ifAbsent: lastIndexOf:startingAt:ifAbsent: last: lastIndexOfAnyOf:startingAt:ifAbsent: middle ninth replaceAll:with: replaceFrom:to:with: replaceFrom:to:with:startingAt: second seventh sixth swap:with: third)('comparing' hasEqualElements: hash =)('converting' asArray asByteArray asColorArray asFloatArray asIntegerArray asPointArray asStringWithCr asWordArray concatenation isSequenceable readStream reverse reversed writeStream @)('copying' copyAfterLast: copyAfter: copyEmpty copyFrom:to: copyLast: copyReplaceAll:with: copyReplaceFrom:to:with: copyUpToLast: copyUpTo: copyWithFirst: copyWithoutFirst copyWithoutIndex: copyWith: forceTo:paddingStartWith: forceTo:paddingWith: grownBy: shuffled shuffledBy: sortBy: ,)('enumerating' allButFirstDo: allButLastDo: asDigitsToPower:do: collectWithIndex: collect: collect:from:to: combinations:atATimeDo: doWithIndex: do: do:separatedBy: do:without: findBinaryIndex: findBinaryIndex:ifNone: findBinary: findBinary:ifNone: findFirst: findLast: from:to:do: groupsOf:atATimeCollect: groupsOf:atATimeDo: keysAndValuesDo: nextToLast overlappingPairsCollect: overlappingPairsDo: overlappingPairsWithIndexDo: paddedWith:do: pairsCollect: pairsDo: permutationsDo: polynomialEval: replace: reverseDo: reverseWith:do: select: splitBy: splitBy:do: upTo: withIndexCollect: withIndexDo: with:collect: with:do:)('removing' remove:ifAbsent:)('testing' beginsWith: beginsWithAnyOf: endsWith: endsWithAnyOf: includes:)('*Traits' asTraitComposition)('private' asDigitsAt:in:do: checkedAt: combinationsAt:in:after:do: copyReplaceAll:with:asTokens: errorFirstObject: errorLastObject: errorOutOfBounds permutationsStartingAt:do:)('*Morphic-NewCurves-cubic support' asCubic assertSlopesWith:from:to: changeInSlopes: changeOfChangesInSlopes: closedCubicSlopes closedCubicSlopes: closedFillinList cubicPointPolynomialAt: naturalCubicSlopes naturalCubicSlopes: naturalFillinList nilTransitions segmentedSlopes slopesWith:from:to: transitions transitions:)('*Morphic-fliprotate' flipRotated:)('*Morphic-Explorer' explorerContents)('streaming' putOn:)!!SelectionMorph reorganize!('accessing' borderColor: borderWidth: wantsToBeTopmost)('drawing' drawOn:)('dropping/grabbing' aboutToBeGrabbedBy: justDroppedInto:event: slideToTrash:)('geometry' bounds: extent:)('halo commands' addCustomMenuItems:hand: addOrRemoveItems: alignBottomEdges alignCentersHorizontally alignCentersVertically alignLeftEdges alignRightEdges alignTopEdges distributeHorizontally distributeVertically doDup:fromHalo:handle: duplicate organizeIntoColumn organizeIntoRow)('halos and balloon help' addHandlesTo:box: addOptionalHandlesTo:box: balloonHelpTextForHandle: hasHalo:)('initialization' defaultBorderColor defaultBorderWidth defaultColor extendByHand: initialize)('menus' maybeAddCollapseItemTo:)('submorphs-add/remove' delete dismissViaHalo)('undo' borderColorForItems: borderWidthForItems: fillStyleForItems: refineUndoTarget:selector:arguments:in: undoMove:redo:owner:bounds:predecessor:)('viewer' externalName)('visual properties' fillStyle:)('private' doneExtending privateFullMoveBy: selectedItems selectSubmorphsOf: setOtherSelection: setSelectedItems:)('testing' couldMakeSibling preferredDuplicationHandleSelector)('WiW support' morphicLayerNumber)!!ScrollableField class reorganize!('class initialization' initialize registerInFlapsRegistry unload)('parts bin' descriptionForPartsBin)!!PluggableTextMorphWithModel reorganize!('contents' getMyText newTextContents: setMyText:)('initialization' initialize)('submorphs-add/remove' delete)!!PluggableTextMorph reorganize!('accessing' getTextSelector textMorph)('debug and other' installModelIn:)('dependents access' canDiscardEdits hasUnacceptedEdits)('drawing' drawFrameAdornment:on: drawFrameAdornmentsOn: fullDrawOn: wantsFrameAdornments wantsFrameAdornments:)('dropping/grabbing' wantsDroppedMorph:event:)('editor access' handleEdit: scrollSelectionIntoView scrollSelectionIntoView: selectAll setTextMorphToSelectAllOnMouseEnter)('event handling' handlesKeyboard: keyStroke: mouseEnter: mouseLeave: onKeyStrokeSend:to:)('geometry' extent: extraScrollRange resetExtent scrollDeltaHeight)('initialization' acceptOnCR: editString: font: initialize on:text:accept:readSelection:menu:)('interactive error protocol' correctFrom:to:with: correctSelectionWithString: deselect nextTokenFrom:direction: notify:at:in: select selectFrom:to: selectInvisiblyFrom:to: selectionInterval)('layout' acceptDroppingMorph:event:)('menu commands' accept acceptTextInModel again browseChangeSetsWithSelector browseIt cancel changeStyle chooseAlignment classCommentsContainingIt classNamesContainingIt copySelection cut debugIt doIt explain exploreIt fileItIn find findAgain implementorsOfIt inspectIt methodNamesContainingIt methodSourceContainingIt methodStringsContainingit offerFontMenu paste pasteRecent presentSpecialMenu prettyPrint prettyPrintWithColor printerSetup printIt referencesToIt saveContentsInFile sendContentsToPrinter sendersOfIt setSearchString spawn tallyIt tileForIt toggleAnnotationPaneSize undo yellowButtonActivity yellowButtonActivity:)('model access' getSelection getText selectionInterval: setSelection: setTextColor: setText: text)('scroll bar events' scrollBarMenuButtonPressed:)('scrolling' hUnadjustedScrollRange)('transcript' appendEntry bsText changeText: replaceSelectionWith:)('unaccepted edits' askBeforeDiscardingEdits: hasEditingConflicts hasEditingConflicts: hasUnacceptedEdits: promptForCancel)('updating' update: update:with:)('private' textMorphClass)('html' copyHtml)('testing' isTextView)!!PluggableListMorph reorganize!('accessing' highlightSelector highlightSelector: itemFromPoint: rowAtLocation:)('as yet unclassified' listMorph listMorphClass)('debug and other' installModelIn: userString)('drag and drop' acceptDroppingMorph:event: potentialDropItem potentialDropRow resetPotentialDropRow startDrag:)('drawing' highlightSelection superDrawOn: unhighlightSelection)('dropping/grabbing' wantsDroppedMorph:event:)('event handling' handlesKeyboard: handlesMouseOverDragging: keyStroke: keyboardFocusChange: mouseEnter:)('events' doubleClick: handleBasicKeys: handlesBasicKeys mouseDown: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseMove: mouseUp:)('events-processing' handleMouseMove:)('geometry' extent: scrollDeltaHeight scrollDeltaWidth)('initialization' autoDeselect: doubleClickSelector: font font: getListElementSelector: getListSelector: getListSizeSelector: initForKeystrokes keystrokeActionSelector: list: listItemHeight on:list:selected:changeSelected:menu:keystroke: textColor textColor: textHighlightColor textHighlightColor:)('menu' getMenu:)('menus' addCustomMenuItems:hand: copyListToClipboard copySelectionToClipboard setListFont)('model access' basicKeyPressed: changeModelSelection: commandKeyTypedIntoMenu: getCurrentSelectionIndex getList getListItem: getListSize itemSelectedAmongMultiple: modifierKeyPressed: specialKeyPressed:)('obsolete' doubleClick:onItem: mouseDown:onItem: mouseEnterDragging:onItem: mouseLeaveDragging:onItem: mouseUp:onItem: removeObsoleteEventHandlers startDrag:onItem:)('scroll cache' deriveHScrollRange hTotalScrollRange hUnadjustedScrollRange resetHScrollRange resetHScrollRangeIfNecessary resizeScrollBars)('scrolling' hExtraScrollRange numSelectionsInView vUnadjustedScrollRange)('selection' getListSelector maximumSelection minimumSelection scrollSelectionIntoView selectedMorph selectedMorph: selection selection: selectionIndex selectionIndex: setGetListSelector: setSelectedMorph:)('submorphs-accessing' allSubmorphNamesDo:)('updating' update: updateList verifyContents)!!GeeMailMorph reorganize!('access' wantsSlot)('as yet unclassified' addGeeMailMenuItemsTo: adjustPasteUpSize allTextPlusMorphs convertToBook keepScrollBarAlways keepScrollbarString makeBookStyle: makeGalleyStyle mouseUp:inMorph: pageRectanglesForPrinting scrollSelectionIntoView:alignTop:inTextMorph: scrollToPage: scrollToYAbsolute: showPageBreaksString toggleKeepScrollbar togglePageBreaks)('dropping/grabbing' wantsDroppedMorph:event:)('event handling' handlesMouseDown:)('geometry' extraScrollRange)('initialization' defaultColor initialize initializeThePasteUp)('layout' doLayoutIn:)('menu' getMenu:)('menus' addCustomMenuItems:hand:)('Postscript Canvases' printPSToFile)('scroll bar events' scrollBarValue:)('scrolling' vHideScrollBar)!!ScrollPane reorganize!('access' adoptPaneColor: flatColoredScrollBarLook hasFocus hMargin retractableScrollBar scrollBarOnLeft scroller scroller: wantsSlot)('access options' alwaysShowHScrollBar: alwaysShowScrollBars: alwaysShowVScrollBar: hideHScrollBarIndefinitely: hideScrollBarsIndefinitely hideScrollBarsIndefinitely: hideVScrollBarIndefinitely: showHScrollBarOnlyWhenNeeded: showScrollBarsOnlyWhenNeeded: showVScrollBarOnlyWhenNeeded:)('accessing' borderStyle: borderWidth: numSelectionsInView)('event handling' handlesMouseDown: handlesMouseOver: keyStroke: mouseDown: mouseEnter: mouseLeave: mouseMove: mouseUp: scrollByKeyboard:)('geometry' extent: extraScrollRange hExtraScrollRange hLeftoverScrollRange hResizeScrollBar hScrollBarWidth hSetScrollDelta hTotalScrollRange hUnadjustedScrollRange innerBounds minExtent minScrollbarExtent resetExtent resizeScrollBars resizeScroller scrollBarThickness scrollDeltaHeight scrollDeltaWidth setScrollDeltas vExtraScrollRange vLeftoverScrollRange vResizeScrollBar vScrollBarHeight vSetScrollDelta vTotalScrollRange vUnadjustedScrollRange)('geometry testing' containsPoint: hIsScrollable hIsScrollbarShowing hIsScrolled isAScrollbarShowing isScrolledFromTop scrollBarFills: vIsScrollable vIsScrollbarShowing vIsScrolled)('initialization' defaultBorderColor defaultExtent hInitScrollBarTEMPORARY initialize initializePreferences initializeScrollBars)('menu' addCustomMenuItems:hand: getMenu: leftOrRight menuTitleSelector: retractableOrNot retractable: scrollBarOnLeft: wantsYellowButtonMenu)('scroll bar events' hScrollBarMenuButtonPressed: scrollBarMenuButtonPressed: shiftedTextPaneMenuRequest shiftedYellowButtonActivity unshiftedYellowButtonActivity vScrollBarMenuButtonPressed: yellowButtonActivity:)('scrolling' hHideOrShowScrollBar hHideScrollBar hIsScrollbarNeeded hideOrShowScrollBar hideOrShowScrollBars hideScrollBars hScrollBarValue: hShowScrollBar scrollBy: scrollToShow: showScrollBars vHideOrShowScrollBar vHideScrollBar vIsScrollbarNeeded vScrollBarValue: vShowScrollBar)!!Scanner class reorganize!('instance creation' new)('testing' inviolateInstanceVariableNames isLegalInstVarName: isLiteralSymbol: wellFormedInstanceVariableNameFrom:)('initialization' initialize)!!SUnitToolBuilderTests reorganize!('running' setUp)('support' acceptWidgetText buttonWidgetEnabled changeListWidget fireButtonWidget fireMenuItemWidget widgetColor)('tests' testListCached testListSelectionCached testTextCached)!!SUnitToolBuilder reorganize!('building' buildPluggableButton: buildPluggableList: buildPluggableMenu: buildPluggablePanel: buildPluggableText: buildPluggableTree: buildPluggableWindow:)('private' register:id: widgetAt:ifAbsent:)('opening' close: open:)!!SMTPClient class reorganize!('accessing' defaultPortNumber logFlag)('example' example example2)('sending mail' deliverMailFrom:to:text:usingServer:)!!ReturnNode reorganize!('code generation' code emitForReturn:on: emitForValue:on: sizeForReturn: sizeForValue:)('converting' asReturnNode)('initialize-release' expr: expr:encoder:sourceRange:)('printing' expr printOn:indent: printWithClosureAnalysisOn:indent:)('testing' isReturnSelf isSpecialConstant isVariableReference)('visiting' accept:)('code generation (closures)' analyseTempsWithin:rootNode:assignmentPools:)('code generation (new scheme)' emitCodeForReturn:encoder: emitCodeForValue:encoder: sizeCodeForReturn: sizeCodeForValue:)!!ResumableTestFailureTestCase reorganize!('not categorized' errorTest failureTest okTest regularTestFailureTest resumableTestFailureTest testResumable)!!ReferenceMorph class reorganize!('instance creation' forMorph: forMorph:font:)('printing' defaultNameStemForInstances)!!Quadrangle reorganize!('bordering' borderColor borderColor: borderWidth borderWidth: borderWidthLeft:right:top:bottom: inside insideColor insideColor: region region: setHeight: setLeft: setRight: setWidth:)('displaying-Display' display displayAlign:with:clippingBox: displayTransformation:clippingBox:)('displaying-generic' displayOn: displayOn:align:with:clippingBox: displayOn:transformation:clippingBox: displayOnPort:at:)('initialize-release' initialize)('rectangle functions' intersect:)('transforming' align:with: alignedTo: scaleBy: translateBy:)('private' setRegion:borderWidth:borderColor:insideColor:)!!Rectangle reorganize!('accessing' aboveCenter area bottom bottom: bottomCenter bottomLeft bottomRight boundingBox center corner corners extent height innerCorners left left: leftCenter origin right right: rightCenter top top: topCenter topLeft topRight width)('comparing' = hash hashMappedBy:)('FMP' deltaToEnsureInOrCentered:extra:)('printing' printOn: propertyListOn: storeOn:)('rectangle functions' adjustTo:along: allAreasOutsideList:do: allAreasOutsideList:startingAt:do: amountToTranslateWithin: areasOutside: bordersOn:along: encompass: expandBy: extendBy: forPoint:closestSideDistLen: insetBy: insetOriginBy:cornerBy: intersect: merge: outsetBy: pointNearestTo: quickMerge: rectanglesAt:height: sideNearestTo: swallow: translatedToBeWithin: withBottom: withHeight: withLeft: withRight: withSide:setTo: withSideOrCorner:setToPoint: withSideOrCorner:setToPoint:minExtent: withSideOrCorner:setToPoint:minExtent:limit: withTop: withWidth:)('testing' containsPoint: containsRect: hasPositiveExtent intersects: isRectangle isTall isWide isZero)('transforming' align:with: centeredBeneath: flipBy:centerAt: newRectButtonPressedDo: newRectFrom: rotateBy:centerAt: scaleBy: scaleFrom:to: squishedWithin: translateBy: translatedAndSquishedToBeWithin:)('truncation and round off' rounded truncateTo: truncated)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('private' setOrigin:corner:)('*Morphic-Truncation and Roundoff' ceiling compressed compressTo: expanded expandTo: floor isIntegerRectangle roundTo:)!!ProjectViewMorph reorganize!('accessing' borderWidthForRounding project thumbnail)('as yet unclassified' addProjectNameMorph addProjectNameMorphFiller editTheName: expungeProject)('caching' releaseCachedState)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' colorAroundName drawOn: ensureImageReady fontForName isEditingName isTheRealProjectPresent safeProjectName safeProjectName: showBorderAs: updateImageFrom: updateNamePosition)('dropping/grabbing' wantsDroppedMorph:event:)('event handling' handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: mouseDown: mouseEnter: mouseLeave: mouseLeaveDragging: mouseUp: wantsKeyboardFocusFor:)('events' balloonText checkForNewerVersionAndLoad deletingProject: doButtonAction enter enterWhenNotPresent lastProjectThumbnail: on: project: seeIfNameChanged showMenuForProjectView showMouseState: withProgressDo:)('fileIn/out' storeSegment)('geometry' extent:)('initialization' dismissViaHalo initialize)('layout' acceptDroppingMorph:event:)('objects from disk' objectForDataStream:)('rounding' wantsRoundedCorners)('stepping and presenter' step)('submorphs-add/remove' abandon)('testing' stepTime)('*MorphicExtras-event handling' handlesMouseStillDown: mouseStillDown:)('*MorphicExtras-*morphic-Postscript Canvases' fullDrawPostscriptOn:)('*sound-piano rolls' triggerActionFromPianoRoll)!!ProjectNavigationMorph reorganize!('accessing' color:)('as yet unclassified' addButtons amountToShowWhenSmall checkForRebuild colorForButtons currentNavigatorVersion fontForButtons inFlapsSuppressedMode inFullScreenMode makeButton:balloonText:for: makeUpdatingButtonWithBalloonText:actionSelector:wordingSelector: orientationString orientedVertically positionVertically retractIfAppropriate showMenuFor:event: toggleOrientation)('buttons' makeTheAdvancedButtons makeTheButtons makeTheSimpleButtons)('dropping/grabbing' justDroppedInto:event:)('event handling' handlesMouseOver: mouseEnter: mouseLeave:)('initialization' defaultColor initialize openInWorld:)('menus' addCustomMenuItems:hand:)('stepping and presenter' step undoButtonWording)('testing' stepTime wantsSteps)('the actions' chooseLanguage doFindButtonMenuEvent: doNewPainting doPublishButtonMenuEvent: editProjectInfo findAProject findAProjectSimple findAnything fullScreenOff fullScreenOn getNewerVersionIfAvailable gotoAnother newProject nextProject previousProject publishDifferent publishProject publishProjectAs publishStyle:forgetURL:withRename: quitSqueak tellAFriend toggleFlapsSuppressed undoLastCommand undoOrRedoLastCommand)('the buttons' buttonFind buttonFlaps buttonFullScreen buttonGoTo buttonLanguage buttonNewProject buttonNewer buttonNext buttonPaint buttonPrev buttonPublish buttonQuit buttonTell buttonUndo findSomethingOnSuperSwiki languageIcon)('WiW support' morphicLayerNumber)('*sound' buttonSound getSoundVolume setSoundVolume: soundDownEvt:morph: soundStillDownEvt:morph: soundUpEvt:morph: speakerIcon)!!MorphicProject reorganize!('display' displaySizeChanged invalidate resetDisplay restore restoreDisplay viewLocFor:)('initialize' defaultBackgroundColor initMorphic initialize installPasteUpAsWorld: openProject:)('testing' isMorphic)('menu messages' assureNavigatorPresenceMatchesPreference makeThumbnail)('utilities' addItem:toMenu:selection:color:thumbnail: addItem:toMenu:selection:requestor: do:withProgressInfoOn:label: findAFolderForProject:label: findProjectView: handleFatalDrawingError: interruptName:preemptedProcess: jumpToProject offerMenu:from:shifted: pointerMoved setAsBackground: showImage:named: subProjects textWindows)('scheduling' addDeferredUIMessage:)('flaps support' assureFlapIntegrity cleanseDisabledGlobalFlapIDsList enableDisableGlobalFlap: flapsSuppressed: globalFlapEnabledString: globalFlapWithIDEnabledString: isFlapEnabled: isFlapIDEnabled: navigatorFlapVisible setFlaps suppressFlapsString toggleFlapsSuppressed)('docking bars support' assureMainDockingBarPresenceMatchesPreference createOrUpdateMainDockingBar removeMainDockingBar showWorldMainDockingBar showWorldMainDockingBar: showWorldMainDockingBarString toggleShowWorldMainDockingBar)('file in/out' armsLengthCommand:withDescription: exportSegmentWithCatagories:classes:fileName:directory: exportSegmentWithChangeSet:fileName:directory: loadFromServer: storeSegment storeSegmentNoFile)('enter' finalEnterActions finalExitActions isIncompletelyLoaded pauseEventRecorder pauseSoundPlayers saveState scheduleProcessForEnter: setWorldForEmergencyRecovery setWorldForEnterFrom:recorder: triggerClosingScripts wakeUpTopWindow)('squeaklet on server' enterIfThereOrFind: openBlankProjectNamed:)('release' prepareForDelete)('language' chooseNaturalLanguage setPaletteFor:)('futures' future:do:at:args: future:send:at:args:)('editors' bitEdit: bitEdit:at:scale: editCharacter:ofFont: formEdit: formViewClass openImage:name:saveResource:)('dispatching' selectorPrefixForDispatch)!!Project reorganize!('accessing' addGuard: addSubProjectNamesTo:indentation: changeSet children currentStack: displayDepth: findProjectView: forgetExistingURL isCurrentProject isMorphic isTopProject labelString lastDirectory: lastSavedAtSeconds lastScreenModeSelected name nameAdjustedForDepth nextProject parent previousProject projectChangeSet renameTo: setParent: setThumbnail: setViewSize: storeNewPrimaryURL: thumbnail urlList viewSize withChildrenDo: world)('active process' depth)('displaying' displaySizeChanged displayZoom: imageForm imageFormOfSize:depth: invalidate resetDisplay restore restoreDisplay showZoom viewLocFor:)('file in/out' armsLengthCommand:withDescription: assureIntegerVersion bumpVersion: compressFilesIn:to:in:resources: couldBeSwappedOut currentVersionNumber decideAboutCreatingBlank: doArmsLengthCommand: downloadUrl ensureChangeSetNameUnique exportSegmentFileName:directory: exportSegmentWithCatagories:classes:fileName:directory: exportSegmentWithChangeSet:fileName:directory: findAFolderToLoadProjectFrom findAFolderToStoreProjectIn fromMyServerLoad: hasBadNameForStoring htmlPagePrototype loadFromServer loadFromServer: objectForDataStream: primaryServer primaryServerIfNil: projectExtension restoreReferences revert saveAs saveForRevert serverList squeakletDirectory storeAttributeKey:value:on: storeAttributesOn: storeDataOn: storeHtmlPageIn: storeManifestFileIn: storeOnServer storeOnServerAssumingNameValid storeOnServerInnards storeOnServerShowProgressOn:forgetURL: storeOnServerWithProgressInfo storeOnServerWithProgressInfoOn: storeSegment storeSegmentNoFile storeSomeSegment storeToMakeRoom tryToFindAServerWithMe url urlForLoading versionForFileName versionFrom: versionedFileName writeFileNamed:fromDirectory:toServer: writeStackText:in:registerIn:)('flaps support' flapsSuppressed flapsSuppressed: showSharedFlaps)('initialization' defaultBackgroundColor initialExtent initialProject initialize installNewDisplay:depth: openProject: setChangeSet: setServer windowActiveOnFirstClick windowReqNewLabel:)('language' chooseNaturalLanguage localeChanged localeID naturalLanguage updateLocaleDependents)('menu messages' assureNavigatorPresenceMatchesPreference doWeWantToRename enter enter: exit fileOut fullScreenOff fullScreenOn installProjectPreferences makeThumbnail saveProjectPreferences validateProjectNameIfOK:)('OBSOLETE' obsolete)('printing' printOn:)('project parameters' initializeProjectParameters initializeProjectPreferences noteThatParameter:justChangedTo: parameterAt: parameterAt:ifAbsent: projectParameterAt: projectParameterAt:ifAbsent: projectParameterAt:ifAbsentPut: projectParameterAt:put: projectParameters projectPreferenceAt: projectPreferenceAt:ifAbsent: projectPreferenceFlagDictionary rawParameters removeParameter:)('release' addDependent: canDiscardEdits deletingProject: okToChange prepareForDelete release removeChangeSetIfPossible subProjects)('resources' abortResourceLoading resourceDirectoryName resourceManager resourceManager: resourceUrl startResourceLoading storeResourceList:in:)('SuperSwiki' tellAFriend tellAFriend:)('*sound' beep)('scheduling' addDeferredUIMessage: interruptName: interruptName:preemptedProcess:)('enter' enter:revert:saveForRevert: finalExitActions isIncompletelyLoaded pauseEventRecorder pauseSoundPlayers saveState scheduleProcessForEnter: setWorldForEmergencyRecovery setWorldForEnterFrom:recorder: triggerClosingScripts wakeUpTopWindow)('utilities' addItem:toMenu:selection:color:thumbnail: addItem:toMenu:selection:project: addItem:toMenu:selection:requestor: buildJumpToMenu: do:withProgressInfoOn:label: findAFolderForProject:label: handleFatalDrawingError: jumpToProject jumpToSelection: offerMenu:from:shifted: pointerMoved setAsBackground: showImage:named: textWindows)('squeaklet on server' enterIfThereOrFind: openBlankProjectNamed:)('futures' future:do:at:args: future:send:at:args:)('editors' bitEdit: bitEdit:at:scale: editCharacter:ofFont: formEdit: formViewClass openImage:name:saveResource:)('dispatching' dispatchTo:addPrefixAndSend:withArguments: selectorPrefixForDispatch)('protocols' currentVocabulary)!!Presenter reorganize!('access' associatedMorph:)('stubs' allCurrentlyTickingScriptInstantiations allExtantPlayers browseAllScriptsTextually currentlyViewing: drawingJustCompleted: flushPlayerListCache morph:droppedIntoPasteUpMorph: ownStandardPalette positionStandardPlayer viewMorph: viewObjectDirectly:)!!Preferences class reorganize!('accessing' dictionaryOfPreferences dictionaryOfPreferences:)('add preferences' addBooleanPreference:categories:default:balloonHelp: addBooleanPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector: addBooleanPreference:category:default:balloonHelp: addColorPreference:categories:default:balloonHelp: addColorPreference:category:default:balloonHelp: addFontPreference:categories:default:balloonHelp: addFontPreference:category:default:balloonHelp: addNumericPreference:categories:default:balloonHelp: addNumericPreference:category:default:balloonHelp: addPreference:categories:default:balloonHelp: addPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector: addPreference:categories:default:balloonHelp:projectLocal:changeInformee:changeSelector:type: addPreference:category:default:balloonHelp: addTextPreference:categories:default:balloonHelp: addTextPreference:category:default:balloonHelp:)('class initialization' initialize unload)('factored pref panel' categoriesContainingPreference:)('fonts' aaFontsColormapDepth attemptToRestoreClassicFonts chooseBalloonHelpFont chooseCodeFont chooseEToysFont chooseEToysTitleFont chooseFlapsFont chooseFontWithPrompt:andSendTo:withSelector:highlightSelector: chooseHaloLabelFont chooseListFont chooseMenuFont chooseStandardButtonFont chooseSystemFont chooseWindowTitleFont fontConfigurationMenu printStandardSystemFonts refreshFontSettings restoreDefaultFonts restoreDefaultFontsForJapanese setBalloonHelpFontTo: setButtonFontTo: setCodeFontTo: setDefaultFonts: setDemoFonts setEToysFontTo: setEToysTitleFontTo: setFlapsFontTo: setHaloLabelFontTo: setListFontTo: setMenuFontTo: setPaintBoxButtonFontTo: setSystemFontTo: setWindowTitleFontTo: standardBalloonHelpFont standardButtonFont standardCodeFont standardDefaultTextFont standardEToysFont standardEToysTitleFont standardFlapFont standardHaloLabelFont standardListFont standardMenuFont standardPaintBoxButtonFont standardSystemFont subPixelRenderColorFonts subPixelRenderFonts windowTitleFont windowTitleStyle)('get/set' automaticFlapLayoutString disableGently: disable: doesNotUnderstand: enableGently: enableOrDisable:asPer: enableProjectNavigator enable: navigatorShowingString setPreference:toValue: togglePreference: valueOfFlag: valueOfFlag:ifAbsent: valueOfPreference: valueOfPreference:ifAbsent:)('halos' classicHaloSpecs classicHalosInForce customHaloSpecs customHalosInForce editCustomHalos haloSpecifications haloSpecificationsForWorld haloTheme iconicHaloSpecifications iconicHalosInForce installClassicHaloSpecs installCustomHaloSpecs installHaloSpecsFromArray: installHaloTheme: installIconicHaloSpecs installSimpleHaloSpecs resetHaloSpecifications showChooseGraphicHaloHandle simpleFullHaloSpecifications simpleHalosInForce)('hard-coded prefs' browseToolClass cmdKeysInText debugMenuItemsInvokableFromScripts desktopMenuTitle messengersInViewers metaMenuDisabled preserveCommandExcursions suppressWindowTitlesInInstanceBrowsers useCategoryListsInViewers)('initialization' chooseInitialSettings compileAccessMethodForPreference: initializeDictionaryOfPreferences localeChanged removeObsolete removePreference: setPreferencesFrom:)('menu parameters' defaultWorldColor menuBorderColor menuBorderWidth menuColor menuLineColor menuSelectionColor menuTitleBorderColor menuTitleBorderWidth menuTitleColor restoreDefaultMenuParameters)('misc' addModelItemsToWindowMenu: balloonHelpDelayTime browseThemes defaultValueTableForCurrentRelease giveHelpWithPreferences installTheme: menuColorString offerThemesMenu okayToChangeProjectLocalnessOf: roundedCornersString setArrowheads setFlag:toValue:during: soundEnablingString staggerPolicyString themeChoiceButtonOfColor:font: toggleMenuColorPolicy toggleRoundedCorners toggleSoundEnabling toggleWindowPolicy wantsChangeSetLogging)('paintbox' useFormsInPaintBox:)('parameters' acceptAnnotationsFrom: annotationEditingWindow annotationInfo borderColorWhenRunning defaultAnnotationRequests defaultAnnotationRequests: defaultAuthorName defaultPaintingExtent desktopColor desktopColor: editAnnotations expungeParameter: initializeParameters inspectParameters maxBalloonHelpLineLength parameterAt: parameterAt:default: parameterAt:ifAbsentPut: parameterAt:ifAbsent: scrollBarColor scrollBarWidth setDefaultAnnotationInfo setParameter:to:)('personalization' compileHardCodedPref:enable: disableProgrammerFacilities enableProgrammerFacilities letUserPersonalizeMenu loadPreferencesFrom: personalizeUserMenu: restorePersonalPreferences restorePreferencesFromDisk savePersonalPreferences storePreferencesIn: storePreferencesToDisk)('preferences panel' categoryNames initialExtent inspectPreferences listOfCategories preferenceObjectsInCategory:)('preference-object access' allPreferenceObjects preferenceAt: preferenceAt:ifAbsent:)('reacting to change' annotationPanesChanged classicTilesSettingToggled displaySizeChanged eToyFriendlyChanged infiniteUndoChanged largeTilesSettingToggled mouseOverHalosChanged noviceModeSettingChanged optionalButtonsChanged roundedWindowCornersChanged setNotificationParametersForStandardPreferences sharedFlapsSettingChanged showProjectNavigatorChanged smartUpdatingChanged universalTilesSettingToggled vectorVocabularySettingChanged)('scrollbar parameters' fontFactor)('standard queries' abbreviatedBrowserButtons allowBlockArgumentAssignment allowUnderscoreAssignment alphabeticalProjectMenu alternateHandlesLook alternativeBrowseIt alternativeButtonsInScrollBars alternativeWindowBoxesLook alwaysHideHScrollbar alwaysShowConnectionVocabulary alwaysShowHScrollbar alwaysShowVScrollbar annotationPanes areaFillsAreTolerant areaFillsAreVeryTolerant autoIndent automaticFlapLayout automaticKeyGeneration automaticPlatformSettings automaticViewerPlacement balloonHelpEnabled balloonHelpInMessageLists batchPenTrails bigDisplay biggerHandles browserShowsPackagePane browserWindowColor browseWithDragNDrop browseWithPrettyPrint Curvier canRecordWhilePlaying capitalizedReferences caseSensitiveFinds cautionBeforeClosing changeListWindowColor changeSetVersionNumbers changeSorterWindowColor checkForSlips checkForUnsavedProjects classCommentVersionsBrowserWindowColor classicNavigatorEnabled clickOnLabelToEdit cmdDotEnabled cmdGesturesEnabled collapseWindowsInPlace compactViewerFlaps compressFlashImages confirmFirstUseOfStyle conversionMethodsAtFileOut cpuWatcherEnabled debuggerWindowColor debugHaloHandle debugLogTimestamp debugPrintSpaceLog debugShowDamage decorateBrowserButtons defaultFileOutFormatMacRoman defaultWindowColor diffsInChangeList diffsWithPrettyPrint dismissAllOnOptionClose dragNDropWithAnimation dropProducesWatcher dualChangeSorterWindowColor duplicateAllControlAndAltKeys duplicateControlAndAltKeys easySelection enableLocalSave eToyFriendly eToyLoginEnabled expandedPublishing extractFlashInHighestQuality extractFlashInHighQuality extraDebuggerButtons fastDragWindowForMorphic fenceEnabled fenceSoundEnabled fenceSoundEnabled: fileContentsBrowserWindowColor fileListWindowColor fullScreenLeavesDeskMargins generalizedYellowButtonMenu gradientMenu gradientScrollBars haloEnclosesFullBounds haloTransitions higherPerformance honorDesktopCmdKeys httpProxyPort httpProxyServer ignoreStyleIfOnlyBold includeSoundControlInNavigator infiniteUndo inlineServicesInMenu instanceBrowserWindowColor keepTickingWhilePainting lexiconWindowColor logDebuggerStackToFile magicHalos maintainHalos menuAppearance3d menuButtonInToolPane menuColorFromWorld menuKeyboardControl menuWithIcons messageListWindowColor messageNamesWindowColor methodFinderWindowColor modalColorPickers mouseOverForKeyboardFocus mouseOverHalos multipleTextUndo mvcProjectsAllowed navigatorOnLeftEdge noviceMode okToReinitializeFlaps oliveHandleForScriptedObjects optionalButtons packageBrowserWindowColor passwordsOnPublish personalizedWorldMenu postscriptStoredAsEPS preferenceBrowserWindowColor preferencesPanelWindowColor preserveTrash projectsSentToDisk projectViewsInWindows projectZoom promptForUpdateServer propertySheetFromHalo purgeUndoOnQuit readDocumentAtStartup readOnlyMode restartAlsoProceeds reverseWindowStagger roundedMenuCorners roundedWindowCorners scrollBarsNarrow scrollBarsOnRight scrollBarsWithoutMenuButton securityChecksEnabled selectiveHalos serverMode showAdvancedNavigatorButtons showBoundsInHalo showDeprecationWarnings showDirectionForSketches showDirectionHandles showFlapsWhenPublishing showProjectNavigator showSecurityStatus showSharedFlaps showSplitterHandles signProjectFiles simpleMenus slideDismissalsToTrash smartUpdating soundQuickStart soundStopWhenDone soundsEnabled standaloneSecurityChecksEnabled startInUntrustedDirectory swapControlAndAltKeys swapMouseButtons syntaxHighlightingAsYouType syntaxHighlightingAsYouTypeAnsiAssignment syntaxHighlightingAsYouTypeLeftArrowAssignment systemWindowEmbedOK tabAmongFields testRunnerWindowColor thoroughSenders tileTranslucentDrag timeStampsInMenuTitles tinyDisplay traceMessages transcriptWindowColor turnOffPowerManager twentyFourHourFileStamps typeCheckingInTileScripting uniqueNamesInHalos uniTilesClassic universalTiles unlimitedPaintArea updateFromServerAtStartup updateSavesFile upgradeIsMerge useButtonProprtiesToFire useFormsInPaintBox useLocale useOnlyServicesInMenu useServicesInBrowserButtonBar useSmartLabels useUndo useVectorVocabulary versionsBrowserWindowColor viewersInFlaps visualExplorer warnAboutInsecureContent warnIfNoChangesFile warnIfNoSourcesFile wordStyleCursorMovement workspaceWindowColor)('text highlighting' caretWidth caretWidth: chooseInsertionPointColor chooseKeyboardFocusColor chooseTextHighlightColor initializeTextHighlightingParameters insertionPointColor insertionPointColor: keyboardFocusColor keyboardFocusColor: textHighlightColor textHighlightColor:)('themes' outOfTheBox personal smallLand)('window colors' checkForWindowColors darkenStandardWindowPreferences installBrightWindowColors installMissingWindowColors installPastelWindowColors installUniformWindowColors installWindowColorsVia: lightenStandardWindowPreferences setWindowColorFor:to: windowColorFor: windowColorHelp windowColorPreferenceForClassNamed: windowColorTable)('themes - small-land' smallLandBigFonts smallLandFonts smallLandPreferences smallLandSmallFonts smallLandTinyFonts)('dynamic preferences' prefEvent: preference:category:description:type: registerForEvents removePreferencesFor:)!!Preferences reorganize!('as yet unclassified')!!Preference class reorganize!('as yet unclassified')!!Preference reorganize!('change notification' changeInformee:changeSelector: notifyInformeeOfChange)('debugging' printOn:)('initialization' categoryList: name:defaultValue:helpString:localToProject:categoryList:changeInformee:changeSelector:type:)('local to project' isProjectLocalString localToProject toggleProjectLocalness)('menu' categoryList copyName helpString name)('testing' isObsolete)('value' defaultValue defaultValue: preferenceValue preferenceValue: provider rawValue: restoreDefaultValue togglePreferenceValue)('accessing' type type:)!!PolygonMorph reorganize!('access' borderColor: isClosed isCurve isOpen makeOpenOrClosed midVertices openOrClosePhrase smoothOrSegmentedPhrase vertices)('accessing' borderWidth: couldHaveRoundedCorners)('caching' loadCachedState releaseCachedState)('dashes' borderDashOffset dashedBorder dashedBorder: removeVertex: vertexAt:)('debug and other' installModelIn: rotateTestFlip:)('drawing' areasRemainingToFill: drawArrowOn:at:from: drawArrowsOn: drawBorderOn: drawBorderOn:usingEnds: drawClippedBorderOn:usingEnds: drawDashedBorderOn: drawDashedBorderOn:usingEnds: drawOnFormCanvas: drawOn:)('dropping/grabbing' justDroppedInto:event:)('editing' addHandles clickVertex:event:fromHandle: deleteVertexAt: dragVertex:event:fromHandle: dragVertex:fromHandle:vertIndex: dropVertex:event:fromHandle: dropVertex:fromHandle:vertIndex: handleColorAt: insertVertexAt:put: newVertex:event:fromHandle: newVertex:fromHandle:afterVert: updateHandles verticesAt:put:)('event handling' handlesMouseDown: mouseDown:)('geometry' arrowsContainPoint: bounds: closestPointTo: closestSegmentTo: extent: flipHAroundX: flipVAroundY: intersectionsWith: intersectionWithLineSegmentFromCenterTo: intersects: isBordered lineBorderColor lineBorderColor: lineBorderWidth lineBorderWidth: lineColor lineColor: lineWidth lineWidth: mergeDropThird:in:from: merge: nextDuplicateVertexIndex reduceVertices straighten transformedBy:)('geometry eToy' referencePosition rotationCenter rotationCenter:)('geometry testing' containsPoint:)('halo control' rotationDegrees:)('initialization' beSmoothCurve beStraightSegments defaultBorderColor defaultColor initialize vertices:color:borderWidth:borderColor:)('menu' addCustomMenuItems:hand: addPolyArrowMenuItems:hand: addPolyLIneCurveMenuItems:hand: addPolyShapingMenuItems:hand: arrowLength: arrowSpec: arrows customizeArrows: handlesShowingPhrase makeBackArrow makeBothArrows makeClosed makeForwardArrow makeNoArrows makeOpen quickFill: removeHandles setRotationCenterFrom: showingHandles showOrHideHandles specifyDashedLine standardArrows toggleHandles toggleSmoothing unrotatedLength unrotatedLength: unrotatedWidth unrotatedWidth:)('objects from disk' convertToCurrentVersion:refStream:)('rotate scale and flex' addFlexShellIfNecessary rotationDegrees)('smoothing' coefficients computeNextToEndPoints derivs:first:second:third: lineSegmentsDo: nextToFirstPoint nextToLastPoint slopes: straightLineSegmentsDo:)('stepping and presenter' step)('testing' hasArrows isCurvier isCurvy isLineMorph stepTime wantsSteps)('visual properties' canHaveFillStyles fillStyle fillStyle:)('*MorphicExtras-geometry eToy' scale:)('*MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)('private' arrowBoundsAt:from: arrowForms borderForm computeArrowFormAt:from: computeBounds curveBounds filledForm getVertices includesHandle: lineSegments privateMoveBy: setVertices: transformVerticesFrom:to:)('shaping' diamondOval rectOval)('attachments' boundsSignatureHash defaultAttachmentPointSpecs endShapeColor: endShapeWidth: firstVertex lastVertex midpoint nudgeForLabel: totalLength)('rounding' cornerStyle:)!!PointerFinder reorganize!('application' buildList follow:from: followObject: goal: initialize isLiteral search update)('morphic ui' arrowKey:from: initialExtent inspectObject menu:shifted: open perform:orSendTo: pointerList pointerListIndex pointerListIndex: searchAgain)!!Point reorganize!('accessing' x y)('arithmetic' * + - / // \\ abs reciprocal)('comparing' < <= = > >= hash hashMappedBy: max: min: min:max:)('converting' adaptToCollection:andSend: adaptToNumber:andSend: adaptToString:andSend: asFloatPoint asIntegerPoint asNonFractionalPoint asPoint corner: extent: isPoint rect:)('copying' deepCopy veryDeepCopyWith:)('geometry' isInsideCircle:with:with: sideOf: to:intersects:to: to:sideOf: triangleArea:with:)('interpolating' interpolateTo:at:)('point functions' bearingToPoint: crossProduct: dist: dotProduct: eightNeighbors flipBy:centerAt: fourNeighbors grid: insideTriangle:with:with: nearestPointAlongLineFrom:to: nearestPointOnLineFrom:to: normal normalized octantOf: onLineFrom:to: onLineFrom:to:within: quadrantOf: rotateBy:centerAt: sortsBefore: squaredDistanceTo: transposed)('polar coordinates' degrees r theta)('printing' printOn: storeOn:)('testing' isZero)('transforming' adhereTo: negated rotateBy:about: scaleBy: scaleFrom:to: transformedBy: translateBy:)('truncation and round off' rounded roundTo: truncateTo: truncated)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('private' bitShiftPoint: setR:degrees: setX:setY:)('*Morphic-Truncation and Roundoff' ceiling floor isIntegerPoint roundDownTo: roundUpTo:)('*Morphic-extent functions' guarded scaleTo:)!!PluggableButtonMorph reorganize!('accessing' action: actionSelector askBeforeChanging askBeforeChanging: enabled feedbackColor: label label: label:font: model: offColor offColor: onColor:offColor: performAction shortcutCharacter shortcutCharacter: triggerOnMouseDown triggerOnMouseDown:)('arguments' arguments: argumentsProvider:argumentsSelector:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('event handling' handlesMouseDown: handlesMouseOverDragging: handlesMouseOver: mouseDown: mouseEnter: mouseLeaveDragging: mouseLeave: mouseMove: mouseUp:)('events' updateFeedbackForEvt:)('initialization' defaultBorderWidth defaultColor)('initialize-release' initialize on:getState:action:label:menu:)('updating' update:)('private' getMenu: getModelState invokeMenu:)('browse' browseAllImplementorsOfActionSelector buildDebugMenu:)!!PianoRollScoreMorph reorganize!('accessing' beatsPerMeasure: movieClipPlayer movieClipPlayer: notePerBeat: score scorePlayer selection selection: timeScale timeSignature:over:)('drawing' addNotes drawMeasureLinesOn: drawOn: drawStaffOn: isBlackKey: rebuildFromScore)('editing' appendEvent:fullDuration: copySelection cutSelection deleteSelection insertSelection insertTransposed)('event handling' handlesMouseDown: mouseDown: mouseMove: mouseUp:)('geometry' contractTime expandTime extent: midiKeyForY: tickTimeAtCursor timeForX: xForTime: yForMidiKey:)('initialization' defaultBorderWidth defaultColor initialize on: updateLowestNote)('layout' acceptDroppingMorph:event: fullBounds layoutChanged)('menu' addCustomMenuItems:hand: addKeyboard beatLinesOnOff invokeScoreMenu: measureLinesOnOff)('scrolling' autoScrollForX: goToTime: moveCursorToTime: notesInRect:)('stepping and presenter' step)('testing' stepTime)('private' removedMorph:)!!PasteUpMorph class reorganize!('parts bin' descriptionForPartsBin)('printing' defaultNameStemForInstances)('project' MinCycleLapse: disableDeferredUpdates disableDeferredUpdates: newWorldForProject: newWorldTesting)('scripting' authoringPrototype)('system startup' shutDown startUp)('*MorphicExtras-class initialization' initialize registerInFlapsRegistry unload)('*MorphicExtras-parts bin' supplementaryPartsDescriptions)!!PartsBin reorganize!('dropping/grabbing' morphToDropFrom: wantsDroppedMorph:event:)('initialization' listDirection:quadList: listDirection:quadList:buttonClass:)('properties' innocuousName)('event handling' wantsEasySelection)!!PasteUpMorph reorganize!('accessing' assureFlapWidth: dumpPresenter flapTab lastKeystroke lastKeystroke: modalWindow: modelOrNil presenter removeModalWindow useRoundedCorners)('alarms-scheduler' addAlarm:withArguments:for:at: removeAlarm:for:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('classification' isPlayfieldLike isWorldMorph)('copying' veryDeepCopyWith:)('cursor' cursorWrapped: numberAtCursor rectifyCursor selectedRect valueAtCursor valueAtCursor:)('display' gradientFillColor: setGradientColor:)('drawing' drawOn:)('dropping/grabbing' acceptDroppingMorph:event: automaticPhraseExpansion dropEnabled justDroppedInto:event: morphToDropFrom: originAtCenter positionNear:forExtent:adjustmentSuggestion: repelsMorph:event: wantsDroppedMorph:event:)('event handling' dropFiles: handlesKeyboard: handlesMouseDown: keyStroke: morphToGrab: mouseDown: mouseUp: wantsDropFiles: wantsEasySelection wantsKeyboardFocusFor:)('events-processing' processEvent:using:)('flaps' accommodateFlap: addGlobalFlaps assureFlapTabsFitOnScreen bringTopmostsToFront correspondingFlapTab deleteGlobalFlapArtifacts enableGlobalFlaps flapTabs localFlapTabs offsetForAccommodating:onEdge: paintingFlapTab releaseViewers removeAccommodationForFlap:)('geometry' extent: gridPoint: position:)('geometry testing' fullContainsPoint:)('gridding' griddingOn griddingOnOff griddingString gridModulus gridModulus: gridOrigin gridOrigin: gridSpec gridSpecPut: gridVisible gridVisibleOnOff gridVisibleString setGridSpec)('halos and balloon help' defersHaloOnClickTo: wantsDirectionHandles wantsHaloFor: wantsHaloFromClick)('initialization' adaptedToWorld: becomeActiveDuring: defaultBorderColor defaultBorderWidth defaultColor initialize newResourceLoaded)('interaction loop' doOneCycleNow)('layout' addCenteredAtBottom:offset: convertAlignment layoutChanged laySubpartsOutInOneRow)('menu & halo' addCustomMenuItems:hand: addPenMenuItems:hand: addPenTrailsMenuItemsTo: addPlayfieldMenuItems:hand: addScalingMenuItems:hand: addStackMenuItems:hand: addWorldHaloMenuItemsTo:hand: addWorldToggleItemsToHaloMenu: autoLineLayoutString buildDebugMenu: currentlyUsingVectorVocabulary defineApplicationView defineFactoryView deleteBalloonTarget: indicateCursorString isOpenForDragNDropString isPartsBinString mouseOverHalosString originAtCenterString presentCardAndStackMenu presentPlayfieldMenu putUpPenTrailsSubmenu reformulateUpdatingMenus sendTextContentsBackToDonor showApplicationView showExpandedView showFactoryView showFullView showReducedView showThumbnailString showWorldMainDockingBarString toggleShowWorldMainDockingBar transformToShow:)('misc' abandonCostumeHistory allScriptEditors allScriptors alwaysShowThumbnail cachedOrNewThumbnailFrom: cartesianOrigin closedViewerFlapTabs heightForThumbnails hideFlapsOtherThan:ifClingingTo: hideViewerFlaps hideViewerFlapsOtherThanFor: innocuousName maxHeightToAvoidThumbnailing maximumThumbnailWidth mouseX mouseY nameForCopyIfAlreadyNamed: padding: prepareToBeSaved smallThumbnailForPageSorter startRunningAll stepAll stopRunningAll thumbnailForPageSorter unhideHiddenObjects updateStatusForAllScriptEditors)('model' createCustomModel model setModel:)('Nebraska' addRemoteClient: convertRemoteClientToBuffered: hasRemoteServer releaseRemoteServer remoteServer remoteServer: removeRemoteClient: transferRemoteServerFrom:)('name' unusedMorphNameLike:)('objects from disk' convertToCurrentVersion:refStream: fixUponLoad:seg: saveOnFile)('options' autoLineLayout autoLineLayout: behaveLikeHolder behaveLikeHolder: behavingLikeAHolder indicateCursor indicateCursor: isPartsBin: replaceTallSubmorphsByThumbnails resizeToFit resizeToFitString setPartsBinStatusTo: toggleAutoLineLayout toggleIsPartsBin toggleMouseOverHalos toggleResizeToFit wantsMouseOverHalos wantsMouseOverHalos:)('painting' drawSubmorphsOn: makeNewDrawingWithin paintingBoundsAround: prepareToPaint prepareToPaint: reasonablePaintingExtent resumeScriptsPausedByPainting)('parts bin' initializeToStandAlone isPartsBin residesInPartsBin)('printing' printOn:)('project' project releaseSqueakPages storeProjectsAsSegments)('project state' canvas firstHand hands handsDo: handsReverseDo: isStepping: isStepping:selector: listOfSteppingMorphs stepListSize stepListSummary steppingMorphsNotInWorld viewBox viewBox:)('scripting' allTileScriptingElements)('stepping' cleanseStepList runLocalStepMethods runStepMethods startStepping: startStepping:at:selector:arguments:stepTime: stopStepping: stopStepping:selector:)('stepping and presenter' step)('structure' activeHand world)('submorphs-accessing' allMorphsDo: morphsInFrontOf:overlapping:do:)('submorphs-add/remove' addAllMorphs: addMorphFront:)('testing' isEasySelecting stepTime)('undo' clearCommandHistory commandHistory onceAgainDismiss: reintroduceIntoWorld:)('update cycle' startBackgroundProcess)('user interface' modelWakeUp)('viewer' defaultNameStemForInstances)('viewing' restoreBoundsOfSubmorphs saveBoundsOfSubmorphs showingListView sortSubmorphsBy: viewingNormally)('visual properties' canHaveFillStyles)('WiW support' addMorphInLayer: morphicLayerNumber restartWorldCycleWithEvent: shouldGetStepsFrom: validateMouseEvent:)('world menu' activateObjectsTool addUndoItemsTo: bringWindowsFullOnscreen browseAllScriptsTextually buildWorldMenu: closeUnchangedWindows collapseAll collapseAllWindows collapseNonWindows commandKeySelectors connectRemoteUser connectRemoteUserWithName:picture:andIPAddress: delayedInvokeWorldMenu: deleteNonWindows detachableScriptingSpace disconnectAllRemoteUsers disconnectRemoteUser dispatchCommandKeyInWorld:event: drawingClass expandAll extractScreenRegion:andPutSketchInHand: findAChangeSorter: findAFileList: findAMessageNamesWindow: findAPreferencesPanel: findATranscript: findAWindowSatisfying:orMakeOneUsing: findDirtyBrowsers: findDirtyWindows: findWindow: getWorldMenu: grabDrawingFromScreen: grabFloodFromScreen: grabLassoFromScreen: grabRubberBandFromScreen: initializeDesktopCommandKeySelectors invokeWorldMenu: keyboardNavigationHandler keyboardNavigationHandler: keystrokeInWorld: makeNewDrawing: makeNewDrawing:at: newDrawingFromMenu: openRecentSubmissionsBrowser: openScrapsBook: printScriptSummary putUpNewMorphMenu putUpWorldMenuFromEscapeKey putUpWorldMenu: removeAllViewers reportLocalAddress respondToCommand:bySending:to: showStatusOfAllScripts toggleClassicNavigatorIfAppropriate undoOrRedoCommand yellowButtonClickOnDesktopWithEvent:)('world state' abandonAllHalos activeHand: addHand: addMorphsAndModel: addMorph:centeredNear: allNonFlapRelatedSubmorphs assuredCanvas assureNotPaintingElse: assureNotPaintingEvent: beWorldForProject: checkCurrentHandForObjectToPaste checkCurrentHandForObjectToPaste2 chooseClickTarget colorAt:belowMorph: deEmphasizeViewMVC: deleteAllHalos displayWorld displayWorldAsTwoTone displayWorldNonIncrementally displayWorldSafely doOneCycle doOneCycleInBackground doOneSubCycle dragThroughOnDesktop: embeddedProjectDisplayMode endDrawing: exit flashRects:color: fullRepaintNeeded goBack haloMorphs handleFatalDrawingError: initForProject: install installFlaps jumpToProject nextPage optimumExtentFromAuthor paintArea paintAreaFor: paintBox paintBoxOrNil patchAt:without:andNothingAbove: pauseEventRecorder previousPage privateOuterDisplayWorld removeHand: repairEmbeddedWorlds repositionFlapsAfterScreenSizeChange restoreDisplay restoreFlapsDisplay restoreMainDockingBarDisplay restoreMorphicDisplay saveAsWorld sketchEditorOrNil sleep someHalo specialNameInModelFor: standardPlayerHit standardSystemController startSteppingSubmorphsOf: triggerClosingScripts triggerOpeningScripts)('*Tools' defaultDesktopCommandKeyTriplets)('private' privateFullMoveBy: privateMoveBy: privateRemoveMorph:)('e-toy support' automaticViewing cursor cursor: isCandidateForAutomaticViewing referencePlayfield)('*MorphicExtras-flaps' deleteAllFlapArtifacts)('thumbnail' icon)('*MorphicExtras-misc' roundUpStrays)('polymorph' modalLockTo: modalUnlockFrom:)!!MethodNode reorganize!('code generation' encoder generate generate: generate:ifQuick: parserClass properties selector selectorNode)('initialize-release' block selector: selector:arguments:precedence:temporaries:block:encoder:primitive: selector:arguments:precedence:temporaries:block:encoder:primitive:properties: sourceText:)('printing' methodClass printOn: printPragmasOn: printPrimitiveOn: printPropertiesOn: printWithClosureAnalysisOn: sourceText tempNames)('accessing' arguments arguments: body primitiveErrorVariableName removeProperty: temporaries temporaries:)('visiting' accept:)('converting' asColorizedSmalltalk80Text decompileString decompileText)('source mapping' rawSourceRanges rawSourceRangesAndMethodDo:)('primitive error codes' removeAndRenameLastTempIfErrorCode)!!MessageNode reorganize!('cascading' cascadeReceiver)('code generation' emitCase:on:value: emitForEffect:on: emitForValue:on: emitIf:on:value: emitIfNil:on:value: emitToDo:on:value: emitWhile:on:value: sizeCase:value: sizeForEffect: sizeForValue: sizeIf:value: sizeIfNil:value: sizeToDo:value: sizeWhile:value:)('equation translation' arguments arguments: eval receiver receiver: selector)('initialize-release' receiver:selector:arguments:precedence: receiver:selector:arguments:precedence:from: receiver:selector:arguments:precedence:from:sourceRange: selector:)('macro transformations' noteSpecialSelector: toDoFromWhileWithInit: transform: transformAnd: transformBoolean: transformCase: transformIfFalse: transformIfFalseIfTrue: transformIfNil: transformIfNilIfNotNil: transformIfNotNilIfNil: transformIfTrue: transformIfTrueIfFalse: transformOr: transformToDo: transformWhile:)('printing' asMorphicCaseOn:indent: macroPrinter precedence printCaseOn:indent: printIfNil:indent: printIfNilNotNil:indent: printIfOn:indent: printKeywords:arguments:on:indent: printOn:indent: printOn:indent:precedence: printParenReceiver:on:indent: printReceiver:on:indent: printToDoOn:indent: printWhileOn:indent: printWithClosureAnalysisCaseOn:indent: printWithClosureAnalysisIfNil:indent: printWithClosureAnalysisIfNilNotNil:indent: printWithClosureAnalysisIfOn:indent: printWithClosureAnalysisKeywords:arguments:on:indent: printWithClosureAnalysisOn:indent: printWithClosureAnalysisOn:indent:precedence: printWithClosureAnalysisParenReceiver:on:indent: printWithClosureAnalysisReceiver:on:indent: printWithClosureAnalysisToDoOn:indent: printWithClosureAnalysisWhileOn:indent: test)('testing' canCascade isComplex isMessage isMessage:receiver:arguments: isMessageNode isNilIf isOptimized isOptimizedLoop isReturningIf toDoIncrement: toDoLimit:)('tiles' morphFromKeywords:arguments:on:indent:)('private' checkBlock:as:from: checkBlock:as:from:maxArgs: ifNilReceiver pvtCheckForPvtSelector: receiver:arguments:precedence:)('visiting' accept: argumentsInEvaluationOrder)('code generation (closures)' analyseTempsWithin:rootNode:assignmentPools:)('code generation (new scheme)' emitCodeForCase:encoder:value: emitCodeForEffect:encoder: emitCodeForIf:encoder:value: emitCodeForIfNil:encoder:value: emitCodeForToDo:encoder:value: emitCodeForValue:encoder: emitCodeForWhile:encoder:value: sizeCodeForCase:value: sizeCodeForEffect: sizeCodeForIf:value: sizeCodeForIfNil:value: sizeCodeForToDo:value: sizeCodeForValue: sizeCodeForWhile:value:)!!LiteralNode reorganize!('code generation' emitForValue:on:)('evaluation' eval)('printing' printOn:indent: printWithClosureAnalysisOn:indent:)('testing' isConstantNumber isLiteral isSpecialConstant literalValue)('visiting' accept:)('initialize-release' name:key:index:type:)('code generation (new scheme)' emitCodeForValue:encoder: sizeCodeForValue:)!!CascadeNode reorganize!('accessing' messages receiver)('code generation' emitForValue:on: sizeForValue:)('initialize-release' receiver:messages:)('printing' printOn:indent: printOn:indent:precedence: printWithClosureAnalysisOn:indent: printWithClosureAnalysisOn:indent:precedence:)('visiting' accept:)('code generation (closures)' analyseTempsWithin:rootNode:assignmentPools:)('code generation (new scheme)' emitCodeForValue:encoder: sizeCodeForValue:)!!BraceNode reorganize!('code generation' emitForValue:on: selectorForShortForm: sizeForValue:)('enumerating' casesForwardDo: casesReverseDo:)('initialize-release' elements: elements:sourceLocations: matchBraceStreamReceiver:messages: matchBraceWithReceiver:selector:arguments:)('printing' printOn:indent: printWithClosureAnalysisOn:indent:)('testing' blockAssociationCheck: numElements)('visiting' accept:)('code generation (closures)' analyseTempsWithin:rootNode:assignmentPools: elements maxElementsForConsArray)('code generation (new scheme)' emitCodeForValue:encoder: sizeCodeForValue:)!!BlockNode reorganize!('accessing' addArgument: arguments arguments: block closureCreationNode firstArgument nArgsSlot nArgsSlot: numberOfArguments optimized returnLast returnNilIfNoOther returnSelfIfNoOther: startOfLastStatement startOfLastStatement: temporaries temporaries:)('code generation' code emitExceptLast:on: emitForEvaluatedEffect:on: emitForEvaluatedValue:on: emitForValue:on: sizeExceptLast: sizeForEvaluatedEffect: sizeForEvaluatedValue: sizeForValue:)('equation translation' statements statements:)('initialize-release' arguments:statements:returns:from: noteSourceRangeStart:end:encoder: statements:returns:)('printing' decompileString decompileText printArgumentsOn:indent: printOn:indent: printStatementsOn:indent: printTemporaries:on:doPrior: printWithClosureAnalysisArgumentsOn:indent: printWithClosureAnalysisOn:indent: printWithClosureAnalysisStatementsOn:indent: printWithClosureAnalysisTemporariesOn:indent:)('testing' canBeSpecialArgument generateAsClosure isBlockNode isComplex isJust: isJustCaseError isQuick returns)('visiting' accept:)('code generation (closures)' actualScope addHoistedTemps: addRemoteTemp:rootNode: addTempNode: analyseArguments:temporaries:rootNode: analyseTempsWithin:rootNode:assignmentPools: blockExtent computeCopiedValues: constructClosureCreationNode: emitCodeForClosureValue:encoder: emitCodeForEvaluatedClosureValue:encoder: ifHasRemoteTempNodeEnsureInitializationStatementExists: makeTemporariesRemovable noteOptimized optimizedBlockHoistTempsInto: postNumberingProcessTempsWithin:rootNode: reindexingLocalsDo:encoder: remoteTempNodeName removeTempNode:ifAbsent: sizeCodeForClosureValue: sizeCodeForEvaluatedClosureValue:)('code generation (new scheme)' emitCodeExceptLast:encoder: emitCodeForEvaluatedEffect:encoder: emitCodeForEvaluatedValue:encoder: emitCodeForValue:encoder: sizeCodeExceptLast: sizeCodeForEvaluatedEffect: sizeCodeForEvaluatedValue: sizeCodeForValue:)!!AssignmentNode reorganize!('code generation' emitForEffect:on: emitForValue:on: sizeForEffect: sizeForValue:)('equation translation' variable)('initialize-release' toDoIncrement: value variable:value: variable:value:from: variable:value:from:sourceRange:)('printing' printOn:indent: printOn:indent:precedence: printWithClosureAnalysisOn:indent: printWithClosureAnalysisOn:indent:precedence:)('visiting' accept:)('code generation (closures)' analyseTempsWithin:rootNode:assignmentPools:)('code generation (new scheme)' emitCodeForEffect:encoder: emitCodeForValue:encoder: sizeCodeForEffect: sizeCodeForValue:)('testing' isAssignmentNode)!!ParseNode reorganize!('code generation' emitBranchOn:dist:pop:on: emitForEffect:on: emitForReturn:on: emitJump:on: emitLong:code:on: emitShortOrLong:code:on: pc pc: sizeBranchOn:dist: sizeForEffect: sizeForReturn: sizeJump: sizeShortOrLong:)('comment' comment comment:)('converting' asReturnNode)('encoding' encodeSelector:)('printing' nodePrintOn:indent: printCommentOn:indent: printOn: printOn:indent: printOn:indent:precedence: printWithClosureAnalysis printWithClosureAnalysisOn: printWithClosureAnalysisOn:indent: printWithClosureAnalysisOn:indent:precedence: shortPrintOn:)('testing' assignmentCheck:at: canBeSpecialArgument canCascade isArg isAssignmentNode isBlockNode isComplex isConstantNumber isDoIt isFutureNode isJust: isLiteral isMessage isMessage:receiver:arguments: isMessageNode isReturnSelf isReturningIf isSelfPseudoVariable isSpecialConstant isTemp isUndefTemp isUnusedTemp isVariableNode isVariableReference nowHasDef nowHasRef toDoIncrement:)('private' ifNilReceiver nextWordFrom:setCharacter: printSingleComment:on:indent:)('visiting' accept: nodesDo:)('code generation (new scheme)' emitCodeForBlockValue:encoder: emitCodeForBranchOn:dist:pop:encoder: emitCodeForEffect:encoder: emitCodeForJump:encoder: emitCodeForReturn:encoder: sizeCode:forBranchOn:dist: sizeCode:forJump: sizeCodeForBlockValue: sizeCodeForEffect: sizeCodeForReturn:)('code generation (closures)' optimizedBlockHoistTempsInto:)!!PaintInvokingMorph reorganize!('dropping/grabbing' justDroppedInto:event: wantsToBeDroppedInto:)('initialization' initialize)('parts bin' initializeToStandAlone)!!PaintBoxMorph reorganize!('actions' action actionCursor brush:action:nib:evt: brushable clear:with:evt: colorable currentColor:evt: cursorFor:oldCursor:currentNib:color: deleteCurrentStamp: eyedropper:action:cursor:evt: getColor getNib getSpecial grabFromScreen: indicateColorUnderMouse keep:with:evt: notCurrentlyPainting pickup:action:cursor:evt: pickupForm: pickupForm:evt: plainCursor plainCursor:event: ringColor ringColorFor: scrollStamps:action:evt: setAction:evt: showColor showColorPalette: stampCursorBeCursorFor: stampDeEmphasize stampForm stampHolder stampHolder: takeColor:event: takeColorEvt:from: toggleShapes toggleStamps tool tool:action:cursor:evt: toss:with:evt: undo:with:evt:)('copying' updateReferencesUsing:)('initialization' addWeakDependent: beStatic createButtons fixupButtons init3 init4 initialize loadColorChooser loadCursors loadJapanesePaintBoxBitmaps loadOffForm: loadOnImage: loadPressedForm: loadPressedImage: loadoffImage: moveButtons noVeneer notifyWeakDependentsWith:)('other' addCustomMenuItems:hand: addGraphicLabels addLabels addTextualLabels colorMemory colorMemory: colorPatch focusMorph focusMorph: maxBounds offsetFromMaxBounds rotationTabForm scaleTabForm)('recent colors' fixUpColorPicker fixUpRecentColors mouseDownRecent:with: mouseStillDownRecent:with: mouseUpRecent:with: recentColor:)('user interface' mouseUpBalk:)!!PackageInfo reorganize!('comparing' hash =)('dependencies' externalCallers externalClasses externalRefsSelect:thenCollect: externalSubclasses externalUsers)('listing' allOverriddenMethods classes classesAndMetaClasses coreMethods extensionClasses extensionMethods foreignClasses foreignSystemCategories methods overriddenMethods overriddenMethodsInClass: overrideMethods selectors systemCategories)('modifying' addCoreMethod: addExtensionMethod: addMethod: baseCategoryOfMethod: externalBehaviors externalTraits removeMethod:)('naming' categoryName externalName methodCategoryPrefix packageName packageName: systemCategoryPrefix)('registering' register)('testing' category:matches: changeRecordForOverriddenMethod: coreCategoriesForClass: coreMethodsForClass: extensionCategoriesForClass: extensionMethodsForClass: extensionMethodsFromClasses: foreignExtensionCategoriesForClass: foreignExtensionMethodsForClass: includesChangeRecord: includesClassNamed: includesClass: includesMethodCategory:ofClassNamed: includesMethodCategory:ofClass: includesMethodReference: includesMethod:ofClass: includesSystemCategory: isForeignClassExtension: isOverrideCategory: isOverrideMethod: isOverrideOfYourMethod: isYourClassExtension: methodsInCategory:ofClass: outsideClasses overrideCategoriesForClass: referenceForMethod:ofClass:)('enumerating' allOverriddenMethodsDo: methodsInCategory:ofClass:do: overriddenMethodsDo: overriddenMethodsInClass:do: overrideCategoriesForClass:do:)('preamble/postscript' hasPostscript hasPostscriptOfRemoval hasPreamble hasPreambleOfRemoval name postscript postscript: postscriptOfRemoval postscriptOfRemoval: preamble preamble: preambleOfRemoval preambleOfRemoval:)('source code management' linesOfCode)('printing' printOn:)!!OldSocket class reorganize!('class initialization' initialize)('examples' clientServerTestUDP clientServerTestUDP2 remoteTestClientTCP remoteTestClientTCPOpenClose1000 remoteTestClientTCPOpenClosePutGet remoteTestClientUDP remoteTestServerTCP remoteTestServerTCPOpenClose1000 remoteTestServerTCPOpenClosePutGet remoteTestServerTCPUsingAccept remoteTestServerUDP remoteTestServerUDP2 remoteTestSinkTCP timeTest timeTestUDP timeTestUDP2 timeTestUDP3)('instance creation' acceptFrom: createIfFail: new newTCP newUDP tcpCreateIfFail: udpCreateIfFail:)('network initialization' ensureNetworkConnected initializeNetwork initializeNetworkIfFail:)('registry' register: registry registryThreshold registryThreshold: unregister:)('utilities' deadServer deadServer: deadlineSecs: nameForWellKnownTCPPort: ping: pingPorts:on:timeOutSecs: pingPortsOn: standardDeadline wildcardAddress wildcardPort)!!Integer class reorganize!('compatibility' readFrom:radix:)('instance creation' basicNew byte1:byte2:byte3:byte4: initializedInstance new new:neg: readFrom: readFrom:base: readFrom:ifFail:)('prime numbers' largePrimesUpTo: largePrimesUpTo:do: primesUpTo: primesUpTo:do: verbosePrimesUpTo: verbosePrimesUpTo:do:)('class initialization' initialize)!!Fraction class reorganize!('instance creation' numerator:denominator:)!!Number class reorganize!('instance creation' readFrom: readFrom:base: readFrom:ifFail: readSqueakSyntaxFrom:)('constants' one)('*311Deprecated' readExactlyFrom:)!!Integer reorganize!('arithmetic' * + - / // \\\ alignedTo: crossSumBase: quo:)('benchmarks' benchFib benchmark tinyBenchmarks)('bit manipulation' << >> allMask: anyBitOfMagnitudeFrom:to: anyMask: bitAnd: bitAt: bitAt:put: bitClear: bitInvert bitInvert32 bitOr: bitShift: bitShiftMagnitude: bitXor: highBit highBitOfMagnitude lowBit noMask:)('comparing' < <= = > >= hash)('converting' adaptToComplex:andSend: adaptToFraction:andSend: adaptToScaledDecimal:andSend: asCharacter asColorOfDepth: asComplex asFloat asFraction asHexDigit asInteger asScaledDecimal asYear)('enumerating' timesRepeat:)('mathematical functions' factorial gcd: lcm: raisedToInteger:modulo: raisedTo:modulo: sqrtFloor take:)('printing' asStringWithCommas asStringWithCommasSigned asTwoCharacterString asWords destinationBuffer: digitBuffer: hex isLiteral numberOfDigitsInBase: printOn: printOn:base:showRadix: printPaddedWith:to: printPaddedWith:to:base: printString printStringRadix:)('printing-numerative' byteEncode:base: printOn:base: printOn:base:length:padded: printOn:base:nDigits: printStringBase:length:padded: printStringHex printStringLength: printStringLength:padded: printStringPadded: printStringRoman radix: storeOn:base: storeOn:base:length:padded: storeStringBase:length:padded: storeStringHex)('system primitives' lastDigit replaceFrom:to:with:startingAt:)('testing' even isInteger isPowerOfTwo isPrime isProbablyPrime)('tiles' asPrecedenceName)('truncation and round off' asLargerPowerOfTwo asPowerOfTwo asSmallerPowerOfTwo atRandom atRandom: ceiling floor normalize rounded truncated)('private' copyto: digitAdd: digitCompare: digitDiv:neg: digitLogic:op:length: digitLshift: digitMultiply:neg: digitRshift:bytes:lookfirst: digitSubtract: growby: growto: isProbablyPrimeWithK:andQ: print:on:prefix:length:padded: romanDigits:for:on:)('*Morphic-Explorer' explorerContents hasContentsInExplorer)('*files' asBytesDescription)!!Fraction reorganize!('arithmetic' * + - / negated)('comparing' < <= = > >= hash)('converting' adaptToComplex:andSend: adaptToInteger:andSend: adaptToScaledDecimal:andSend: asComplex asFloat asFraction asScaledDecimal isFraction)('mathematical functions' raisedToInteger: squared)('printing' printOn: printOn:base: storeOn:base:)('truncation and round off' truncated)('private' denominator numerator reciprocal reduced setNumerator:denominator:)!!Number reorganize!('arithmetic' * + - / // \\ abs arg negated quo: reciprocal rem:)('comparing' closeTo:)('converting' @ adaptToCollection:andSend: adaptToFloat:andCompare: adaptToFloat:andSend: adaptToFraction:andSend: adaptToInteger:andSend: adaptToPoint:andSend: adaptToScaledDecimal:andSend: adaptToString:andSend: asB3DVector3 asDuration asFloatD asFloatE asFloatQ asInteger asNumber asPoint asScaledDecimal asScaledDecimal: asSmallAngleDegrees asSmallPositiveDegrees day days degreesToRadians hour hours i milliSecond milliSeconds minute minutes nanoSecond nanoSeconds radiansToDegrees second seconds sign: week weeks)('filter streaming' byteEncode:)('intervals' to: to:by: to:by:do: to:do:)('mathematical functions' arcCos arcSin arcTan arcTan: cos degreeCos degreeSin exp floorLog: interpolateTo:at: ln log log: raisedTo: raisedToInteger: sin sqrt squared tan)('printing' defaultLabelForInspector isOrAreStringWith: printOn: printOn:base: printShowingDecimalPlaces: printString printStringBase: storeOn: storeOn:base: storeStringBase: stringForReadout)('testing' even isDivisibleBy: isInf isInfinite isNaN isNumber isZero negative odd positive sign strictlyPositive)('truncation and round off' ceiling detentBy:atMultiplesOf:snap: floor fractionPart integerPart reduce roundTo: roundUpTo: rounded truncateTo: truncated)('*Morphic-NewCurve-testing' isNonZero)!!MorphicTransform class reorganize!('instance creation' identity new offset: offset:angle:scale:)!!MorphicTransform reorganize!('accessing' angle inverseTransformation offset scale withAngle: withOffset: withScale:)('composing' composedWithLocal:)('converting' asMatrixTransform2x3 asMorphicTransform)('initialize' setIdentiy)('printing' printOn:)('testing' isIdentity isMorphicTransform isPureTranslation)('transformations' composedWith: invert: invertBoundsRect: invertRect: transform: transformBoundsRect: transformPoint:)('transforming points' globalPointToLocal: localPointToGlobal:)('private' setAngle: setOffset: setOffset:angle:scale: setScale:)!!MorphicModel class reorganize!('compilation' categoryForSubclasses chooseNewName compileAccessorsFor: compilePropagationForVarName:slotName:)('compiling' acceptsLoggingOfCompilation wantsChangeSetLogging)('housekeeping' removeUninstantiatedModels)('instance creation' new newBounds:model:slotName:)('new-morph participation' includeInNewMorphMenu)('prototype access' prototype prototype:)('queries' hasPrototype)('subclass creation' newSubclass)('testing' officialClass)!!MorphicEvent class reorganize!('instance creation' convertObsolete: readFrom: readFromObsolete: type:readFrom:)!!MorphExtension reorganize!('accessing' actorState actorState: balloonText balloonTextSelector balloonTextSelector: balloonText: eventHandler eventHandler: externalName: locked locked: player player: sticky sticky: visible visible:)('accessing - layout properties' layoutFrame layoutFrame: layoutPolicy layoutPolicy: layoutProperties layoutProperties:)('accessing - other properties' assureOtherProperties hasOtherProperties hasProperty: initializeOtherProperties otherProperties privateOtherProperties: removeOtherProperties removeProperty: setProperty:toValue: sortedPropertyNames valueOfProperty: valueOfProperty:ifAbsentPut: valueOfProperty:ifAbsent:)('connectors-copying' copyWeakly propertyNamesNotCopied veryDeepFixupWith: veryDeepInner:)('initialization' initialize)('objects from disk' comeFullyUpOnReload:)('other' inspectElement isDefault)('printing' printOn:)('viewer' externalName)('*MorphicExtras-accessing' isPartsDonor isPartsDonor:)('*MorphicExtras-copying' updateReferencesUsing:)!!MenuItemMorph class reorganize!('class initialization' initialize)!!GraphMorph class reorganize!('parts bin' descriptionForPartsBin)!!BookMorph class reorganize!('booksAsProjects' makeBookOfProjects:named:)('class initialization' initialize registerInFlapsRegistry)('fileIn/Out' fileReaderServicesForFile:suffix: openFromFile: serviceLoadAsBook services)('initialize-release' unload)('parts bin' descriptionForPartsBin)('scripting' authoringPrototype nextPageButton previousPageButton)('url' alreadyInFromUrl: grabURL: isInWorld:withUrl:)!!AlignmentMorph class reorganize!('instance creation' columnPrototype inAColumn: inARow: newColumn newRow newSpacer: newVariableTransparentSpacer rowPrototype)('scripting' defaultNameStemForInstances)('*MorphicExtras-parts bin' supplementaryPartsDescriptions)!!Morph class reorganize!('class initialization' initialize)('fileIn/Out' fileReaderServicesForFile:suffix: fromFileName: serviceLoadMorphFromFile services)('initialize-release' unload)('instance creation' initializedInstance newBounds: newBounds:color: newSticky)('misc' morphsUnknownToTheirOwners)('new-morph participation' includeInNewMorphMenu newStandAlone partName:categories:documentation:)('scripting' authoringPrototype)('testing' allSketchMorphClasses allSketchMorphForms isSketchMorphClass)('*MorphicExtras-arrow head size' defaultArrowheadSize obtainArrowheadFor:defaultValue:)('*MorphicExtras-new-morph participation' addPartsDescriptorQuadsTo:if:)('*MorphicExtras-parts bin' supplementaryPartsDescriptions)!!MenuMorph reorganize!('accessing' addBlankIconsIfNecessary: commandKeyHandler commandKeyHandler: defaultTarget hasItems hasSubMenu: itemWithWording: items lastItem lastSelection popUpOwner popUpOwner: rootMenu stayUp stayUp:)('construction' addAllFrom: addItem: addTitle:icon: addTitle:icon:updatingSelector:updateTarget: add:action: add:help:action: add:icon:help:subMenu: add:icon:subMenu: add:selector:argument: add:subMenu: add:subMenu:target:selector:argumentList: add:target:action: add:target:selector: add:target:selector:argument: add:target:selector:argumentList: addLine addList: addService:for: addServices2:for:extraLines: addServices:for:extraLines: addStayUpIcons addStayUpItem addStayUpItemSpecial addTitle: addTitle:updatingSelector:updateTarget: addTranslatedList: addUpdating:action: addUpdating:enablement:action: addUpdating:enablementSelector:target:selector:argumentList: addUpdating:target:action: addUpdating:target:selector:argumentList: addWithLabel:enablement:action: addWithLabel:enablementSelector:target:selector:argumentList: balloonTextForLastItem: defaultTarget: labels:lines:selections: title:)('control' activeSubmenu: deleteIfPopUp deleteIfPopUp: popUpAdjacentTo:forHand:from: popUpAt:forHand:in: popUpAt:forHand:in:allowKeyboard: popUpEvent:in: popUpForHand:in: popUpInWorld popUpInWorld: popUpNoKeyboard selectItem:event: updateColor wantsToBeDroppedInto:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('dropping/grabbing' justDroppedInto:event: undoGrabCommand)('events' activate: deactivate: handleFocusEvent: handleMouseMove: handlesMouseDown: mouseDown: mouseUp: releasesSelection:)('initialization' delete initialize setDefaultParameters setTitleParametersFor:)('keyboard control' displayFiltered: filterListWith: handlesKeyboard: keyStroke: keyboardFocusChange: moveSelectionDown:event: removeMatchString selectCurrentItem: selectMoreItem: unfilterOrEscape:)('menu' addCustomMenuItems:hand: addItem addTitle detachSubMenu: doButtonAction removeStayUpBox removeStayUpItems setInvokingView: setTarget: target: toggleStayUp: toggleStayUpIgnore:evt: updateItemsWithTarget:orWithHand:)('modal control' informUserAt:during: invokeAt:in:allowKeyboard: invokeModal invokeModal: invokeModalAt:in: invokeModalAt:in:allowKeyboard: isModalInvokationDone isModalInvokationDone: modalSelection modalSelection:)('*MorphicExtras-accessing' allWordings allWordingsNotInSubMenus:)('private' invokeMetaMenu: morphicLayerNumber positionAt:relativeTo:inWorld: selectedItem)('update' updateMenu)('keystroke helpers' handleCRStroke: handleCommandKeyPress: handleDownStroke: handleEscStroke: handleFiltering: handleLeftStroke: handlePageDownStorke: handlePageDownStroke: handlePageUpStroke: handleRightStorke: handleRightStroke: handleUpStorke: keyStrokeHandlers noteRootMenuHasUsedKeyboard showKeyboardHelp stepIntoSubmenu:)!!MenuItemMorph reorganize!('accessing' action: adaptToWorld: addSubMenu: addUpdatingSubMenu: allWordingsNotInSubMenus: arguments arguments: contentString contentString: contents: contents:withMarkers: contents:withMarkers:inverse: hasIcon hasIconOrMarker hasMarker hasSubMenu hasSubMenu: help: icon icon: isEnabled isEnabled: isStayUpItem itemWithWording: selector selector: subMenu subMenu: subMenuUpdater:selector: subMenuUpdater:selector:arguments: target target:)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn:)('events' activateOwnerMenu: activateSubmenu: deselectTimeOut: doButtonAction handleMouseUp: handlesMouseDown: handlesMouseOver: handlesMouseOverDragging: invokeWithEvent: mouseDown: mouseEnter: mouseEnterDragging: mouseLeave: mouseLeaveDragging: mouseUp: releasesSelection:)('grabbing' aboutToBeGrabbedBy: duplicateMorph:)('initialization' defaultBounds deleteIfPopUp: initialize)('layout' minHeight minWidth)('layout-properties' hResizing vResizing)('meta actions' wantsHaloFromClick)('selecting' adjacentTo deselect: isSelected isSelected: select:)('private' bottomArrow createSubmenu createUpdatingSubmenu deselectItem iconForm leftArrow notObsolete offImage onImage rightArrow selectionFillStyle subMenuMarker upArrow updateLayoutInDockingBar)('submorphs-accessing' noteNewOwner:)('change reporting' ownerChanged)('browse' browseAllImplementorsOfRealSelector buildDebugMenu: realSelector)('geometry-testing' triangle:containsPoint:)!!MatrixTransformMorph reorganize!('accessing' transform:)('change reporting' invalidRect:from:)('drawing' drawOn: drawSubmorphsOn: visible:)('event handling' transformFrom:)('flexing' changeRotationCenter:with: hasNoScaleOrRotation innerAngle lastRotationDegrees lastRotationDegrees: removeFlexShell rotateBy: rotationDegrees: transform)('geometry' boundsChangedFrom:to: computeBounds extent: handleBoundsChange: transformedBy:)('geometry eToy' heading rotationCenter rotationCenter: setDirectionFrom:)('geometry testing' containsPoint: fullContainsPoint:)('halos and balloon help' balloonHelpTextForHandle:)('initialization' initialize)('initialize' asFlexOf:)('layout' fullBounds)('menus' setRotationCenterFrom:)('rotate scale and flex' addFlexShell)('updating' changed)('private' privateFullMoveBy:)!!LazyListMorph reorganize!('accessing' userString)('drawing' adjustHeight adjustWidth bottomVisibleRowForCanvas: colorForRow: display:atRow:on: drawBackgroundForMulti:on: drawBackgroundForPotentialDrop:on: drawOn: drawSelectionOn: font font: highlightPotentialDropRow:on: topVisibleRowForCanvas:)('initialization' initialize listSource:)('list access' getListItem: getListSize item:)('list management' drawBoundsForRow: listChanged rowAtLocation: selectRow: selectedRow selectedRow: unselectRow:)('scroll range' hUnadjustedScrollRange widthToDisplayItem:)!!LassoPatchMorph reorganize!('dropping' justDroppedInto:event: wantsToBeDroppedInto:)('initialization' initialize initializeToStandAlone)!!GrabPatchMorph reorganize!('dropping' justDroppedInto:event: wantsToBeDroppedInto:)('initialization' initialize initializeToStandAlone)!!ImageMorph reorganize!('accessing' borderStyle: borderWidth: color: form image image: isOpaque isOpaque: setNewImageFrom: withSnapshotBorder)('as yet unclassified' wantsRecolorHandle)('caching' releaseCachedState)('drawing' drawOn:)('geometry' extent:)('initialization' initialize)('menu' changeOpacity opacityString)('menu commands' grabFromScreen readFromFile)('menus' addCustomMenuItems:hand:)('other' newForm:)('parts bin' initializeToStandAlone)('*MorphicExtras-*morphic-Postscript Canvases' drawPostscriptOn:)!!HandleMorph reorganize!('dropping/grabbing' justDroppedInto:event:)('event handling' keyStroke:)('initialization' initialize)('initialize' forEachPointDo: forEachPointDo:lastPointDo:)('stepping and presenter' startStepping step)('testing' stepTime)!!HandMorph reorganize!('accessing' anyButtonPressed colorForInsets lastEvent mouseOverHandler noButtonPressed targetOffset targetPoint userInitials userPicture userPicture:)('balloon help' balloonHelp balloonHelp: deleteBalloonTarget: removePendingBalloonFor: spawnBalloonFor: triggerBalloonFor:after:)('caching' releaseCachedState)('change reporting' invalidRect:from:)('classification' isHandMorph)('copying' veryDeepCopyWith:)('cursor' cursorBounds showTemporaryCursor: showTemporaryCursor:hotSpotOffset: temporaryCursor)('double click support' resetClickState waitForClicksOrDrag:event: waitForClicksOrDrag:event:selectors:threshold:)('drawing' drawOn: fullDrawOn: hasChanged hasUserInformation needsToBeDrawn nonCachingFullDrawOn: restoreSavedPatchOn: savePatchFrom: shadowForm updateCacheCanvas: visible:)('drop shadows' shadowOffset)('event handling' checkForMoreKeyboard cursorPoint flushEvents noticeMouseOver:event: pauseEventRecorderIn: processEvents)('events-processing' handleEvent: isCapturingGesturePoints)('focus handling' compositionWindowManager keyboardFocus keyboardFocus: mouseFocus mouseFocus: newKeyboardFocus: newMouseFocus: newMouseFocus:event: releaseAllFoci releaseKeyboardFocus releaseKeyboardFocus: releaseMouseFocus releaseMouseFocus:)('genie-stubs' autoFocusRectangleBoundsFor: disableGenieFocus enableGenie focusStartEvent genieGestureProcessor isGenieAvailable isGenieEnabled isGenieFocused)('geometry' position position: userInitials:andPicture:)('grabbing/dropping' attachMorph: dropMorphs dropMorphs: dropMorph:event: grabMorph:from: targetOffset:)('halo handling' halo: obtainHalo: releaseHalo: removeHalo removeHaloFromClick:on: removePendingHaloFor: spawnMagicHaloFor: triggerHaloFor:after:)('halos and balloon help' halo)('initialization' initForEvents initialize interrupted resourceJustLoaded)('layout' fullBounds)('listeners' addEventListener: addKeyboardListener: addListener:to: addMouseListener: eventListeners eventListeners: keyboardListeners keyboardListeners: mouseListeners mouseListeners: removeEventListener: removeKeyboardListener: removeListener:from: removeMouseListener:)('meta-actions' copyToPasteBuffer: grabMorph:)('multilingual' clearKeyboardInterpreter keyboardInterpreter)('objects from disk' objectForDataStream:)('paste buffer' objectToPaste pasteBuffer pasteBuffer: pasteMorph)('updating' changed)('private events' generateDropFilesEvent: generateKeyboardEvent: generateMouseEvent: mouseTrailFrom: moveToEvent: sendEvent:focus: sendEvent:focus:clear: sendFocusEvent:to:clear: sendKeyboardEvent: sendListenEvent:to: sendMouseEvent:)('selected object' selectedObject)!!HaloMorph reorganize!('accessing' haloBox: innerTarget isMagicHalo isMagicHalo: magicAlpha magicAlpha: setTarget: target target: wantsToBeTopmost)('copying' veryDeepFixupWith: veryDeepInner:)('drawing' drawOn: drawSubmorphsOn:)('dropping/grabbing' startDrag:with:)('event handling' mouseMove: wantsKeyboardFocusFor:)('events' dragTarget: popUpFor:event: popUpMagicallyFor:hand: staysUpWhenMouseIsDownIn: transferHalo:)('events-processing' containsPoint:event: handleListenEvent: rejectsEvent:)('geometry' position:)('geometry testing' containsPoint:)('halos and balloon help' addSimpleHandlesTo:box:)('handles' addChooseGraphicHandle: addCollapseHandle: addDebugHandle: addDismissHandle: addDragHandle: addDupHandle: addFewerHandlesHandle: addFontEmphHandle: addFontSizeHandle: addFontStyleHandle: addGrabHandle: addGrowHandle: addHelpHandle: addMakeSiblingHandle: addMenuHandle: addPaintBgdHandle: addPoohHandle: addRecolorHandle: addRepaintHandle: addRotateHandle: addScaleHandle: addScriptHandle: addTileHandle: addViewHandle: addViewingHandle: openViewerForTarget:with: positionIn:horizontalPlacement:verticalPlacement: tearOffTileForTarget:with:)('initialization' acceptNameEdit defaultColor initialize)('meta-actions' blueButtonDown: handlerForBlueButtonDown:)('objects from disk' convertToCurrentVersion:refStream:)('stepping' fadeIn fadeInInitially fadeOut fadeOutFinally handleEntered handleLeft localHaloBoundsFor: step)('submorphs-add/remove' delete)('testing' stepTime)('updating' changed)('WiW support' morphicLayerNumber)('private' addCircleHandles addDirectionHandles addFullHandles addGraphicalHandleFrom:at: addGraphicalHandle:at:on:send:to: addHandleAt:color:icon:on:send:to: addHandleAt:color:on:send:to: addHandles addHandlesForWorldHalos addHandle:on:send:to: addName addNameBeneath:string: addSimpleHandles addSimpleHandlesForWorldHalos addSimpleSketchMorphHandlesInBox: basicBox basicBoxForSimpleHalos createHandleAt:color:iconName: directionArrowLength dismiss doDebug:with: doDirection:with: doDrag:with: doDup:with: doGrab:with: doGrow:with: doMakeSibling:with: doMenu:with: doRecolor:with: doRot:with: doScale:with: endInteraction handleAllowanceForIconicHalos handleSize maybeCollapse:with: maybeDismiss:with: maybeDoDup:with: mouseDownInCollapseHandle:with: mouseDownInDimissHandle:with: obtainHaloForEvent:andRemoveAllHandlesBut: positionDirectionShaft: prepareToTrackCenterOfRotation:with: removeAllHandlesBut: setCenterOfRotation:with: setColor:toHandle: setDirection:with: setDismissColor:with: showDirectionHandles: showDirectionHandles:addHandles: showingDirectionHandles simpleFudgeOffset startGrow:with: startRot:with: startScale:with: trackCenterOfRotation:with: trackDirectionArrow:with:)('menu' wantsYellowButtonMenu)('eToys-handles' doDupOrMakeSibling:with:)!!FlapTab reorganize!('access' acquirePlausibleFlapID flapID flapID: flapIDOrNil flapShowing orientation referentThickness tabThickness)('accessing' labelString)('change reporting' ownerChanged)('classification' isFlapTab)('disused options' inboard inboard: slidesOtherObjects)('edge' applyEdgeFractionWithin: computeEdgeFraction edgeFraction edgeFraction: edgeString edgeToAdhereTo edgeToAdhereTo: ifVertical:ifHorizontal: setEdge: setEdgeToAdhereTo)('event handling' mouseMove: mouseUp:)('events' tabSelected)('globalness' isGlobalFlap isGlobalFlapString toggleIsGlobalFlap)('graphical tabs' graphicalTab graphicalTabString)('initialization' adaptToWorld initialize provideDefaultFlapIDBasedOn: setName:edge:color:)('layout' layoutChanged)('menu' addCustomMenuItems:hand: applyThickness: changeColor changeFlapColor changeTabText destroyFlap existingWording flapMenuTitle isCurrentlyTextual preserveDetails sharedFlapsAllowed thicknessString wording)('menus' addGestureMenuItems:hand: addTitleForHaloMenu:)('misc' fitContents)('miscellaneous' balloonTextForFlapsMenu)('mouseover & dragover' arrangeToPopOutOnDragOver: arrangeToPopOutOnMouseOver: dragoverString makeNewDrawing: mouseoverString setToPopOutOnDragOver: setToPopOutOnMouseOver: startOrFinishDrawing: toggleDragOverBehavior toggleMouseOverBehavior)('objects from disk' objectForDataStream:)('parts bin' partsBinString togglePartsBinMode)('positioning' adjustPositionVisAVisFlap fitOnScreen positionObject: positionObject:atEdgeOf: positionReferent spanWorld stickOntoReferent transposeParts)('printing' printOn:)('rounding' roundedCorners wantsRoundedCorners)('show & hide' adjustPositionAfterHidingFlap hideFlap hideFlapUnlessBearingHalo hideFlapUnlessOverReferent lastReferentThickness: maybeHideFlapOnMouseLeave maybeHideFlapOnMouseLeaveDragging openFully showFlap showFlapIfHandLaden:)('solid tabs' applyTabThickness: changeTabSolidity changeTabThickness isCurrentlySolid notSolid solidTab solidTabString useSolidTab)('submorphs-add/remove' dismissViaHalo)('textual tabs' assumeString:font:orientation:color: changeTabText: reformatTextualTab textualTab textualTabString useStringTab: useTextualTab)('thumbnail' permitsThumbnailing)('WiW support' morphicLayerNumber)!!FillInTheBlankMorph reorganize!('accessing' response response: selectionInterval)('event handling' handlesMouseDown: mouseDown:)('geometry' extent:)('grabbing/dropping' undoGrabCommand)('initialization' createAcceptButton createCancelButton createQueryTextMorph: createTextPaneExtent:acceptBoolean:topOffset:buttonAreaHeight: defaultColor delete initialize responseUponCancel: setDefaultParameters setPasswordQuery:initialAnswer:answerHeight:acceptOnCR: setQuery:initialAnswer:answerExtent:acceptOnCR: setQuery:initialAnswer:answerHeight:acceptOnCR: updateColor updateColor:color:intensity:)('invoking' getUserResponse morphicLayerNumber)('menu' accept cancel codePaneMenu:shifted:)('object fileIn' convertToCurrentVersion:refStream:)!!CircleMorph reorganize!('rotate scale and flex' addFlexShellIfNecessary privateMoveBy: rotationDegrees rotationDegrees:)('geometry' bounds: extent: transformedBy:)('geometry eToy' heading: referencePosition rotationCenter rotationCenter:)('parts bin' initialize initializeToStandAlone)('menus' setRotationCenterFrom:)!!BottomRightGripMorph reorganize!('target resize' apply:)('accessing' gripLayoutFrame ptName resizeCursor)('private' borderOffset handleOrigin)!!BottomLeftGripMorph reorganize!('target resize' apply:)('accessing' gripLayoutFrame ptName resizeCursor)('private' borderOffset handleOrigin)!!BookMorph reorganize!('accessing' cardsOrPages currentPage pageNamed: pageNumberOf: pages pages: setAllPagesColor: userString)('caching' releaseCachedState)('copying' updateReferencesUsing:)('dropping/grabbing' allowSubmorphExtraction wantsDroppedMorph:event:)('halos and balloon help' defersHaloOnClickTo:)('initialization' defaultColor fromRemoteStream: fromURL: initialize newPages: newPages:currentIndex: removeEverything setInitialState)('insert and delete' defaultNameStemForNewPages deletePage deletePageBasic insertPage:pageSize: insertPage:pageSize:atIndex: insertPageColored: insertPageLabel:morphs: insertPageSilentlyAtEnd)('layout' acceptDroppingMorph:event:)('menu' addBookMenuItemsTo:hand: bookmarkForThisPage buildThreadOfProjects copyUrl findText: findText:inStrings:startAt:container:pageNum: forgetURLs getAllText getStemUrl goToPage highlightText:at:in: invokeBookMenu keepTogether loadImagesIntoBook makeUniformPageSize menuPageSoundFor:event: menuPageSoundForAll: menuPageSoundForThisPage: menuPageVisualFor:event: menuPageVisualForAll: menuPageVisualForThisPage: pageControlsVisible pasteBookPage reload reserveUrls reserveUrlsIfNeeded saveAsNumberedURLs saveIndexOfOnly: saveIndexOnURL saveOnUrlPage: saveOneOnURL savePagesOnURL setNewPagePrototype setPageColor textSearch textSearch: thumbnailForThisPage toggleFullScreen toggleShowingOfPageControls uncachePageSorter)('menu commands' sortPages)('menus' printPSToFile)('navigation' buildFloatingPageControls goToPage: goToPage:transitionSpec: goToPage:transitionSpec:runTransitionScripts: goToPageMorph: goToPageMorph:fromBookmark: goToPageMorph:runTransitionScripts: goToPageMorph:transitionSpec: goToPageMorph:transitionSpec:runTransitionScripts: goToPageUrl: goto: insertPageMorphInCorrectSpot: lastPage nextPage pageNumber previousPage setWrapPages: showMoreControls transitionSpecFor:)('other' adjustCurrentPageForFullScreen exitFullScreen goFullScreen isInFullScreenMode makeMinimalControlsWithColor:title: resizePagesTo: setExtentFromHalo:)('Postscript Canvases' asPostscript fullDrawPostscriptOn:)('parts bin' initializeToStandAlone)('printing' pagesHandledAutomatically)('scripting' methodHolderVersions revertToCheckpoint:)('sorting' acceptSortedContentsFrom: morphsForPageSorter sortPages:)('submorphs-accessing' allNonSubmorphMorphs)('submorphs-add/remove' abandon)('uniform page size' keepingUniformPageSizeString maintainsUniformPageSize maintainsUniformPageSize: toggleMaintainUniformPageSize uniformPageSize)!!AlignmentMorph reorganize!('classification' isAlignmentMorph)('event handling' wantsKeyboardFocusFor:)('initialization' defaultBorderWidth defaultColor initialize openInWindowLabeled:inWorld:)('object fileIn' convertOldAlignmentsNov2000:using:)('objects from disk' convertToCurrentVersion:refStream:)('visual properties' canHaveFillStyles)('*MorphicExtras-initialization' basicInitialize)!!BorderedMorph reorganize!('accessing' borderColor borderColor: borderInset borderRaised borderStyle borderStyle: borderWidth borderWidth: doesBevels hasTranslucentColor useRoundedCorners useSquareCorners)('drawing' areasRemainingToFill:)('geometry' acquireBorderWidth: closestPointTo: intersectionWithLineSegmentFromCenterTo:)('initialization' borderInitialize defaultBorderColor defaultBorderWidth initialize)('lookenhancements' addCornerGrips addPaneHSplitterBetween:and: addPaneSplitters addPaneVSplitterBetween:and: linkSubmorphsToSplitters removeCornerGrips removePaneSplitters splitters)('menu' addBorderStyleMenuItems:hand: changeBorderColor: changeBorderWidth:)('*MorphicExtras-initialization' basicInitialize)('*MorphicExtras-printing' fullPrintOn:)('private' setBorderWidth:borderColor: setColor:borderWidth:borderColor:)!!Morph reorganize!('accessing' actorStateOrNil actorState: adoptPaneColor: balloonText balloonTextSelector balloonTextSelector: beFlap: beSticky beUnsticky borderColor borderColor: borderStyle borderStyleForSymbol: borderStyle: borderWidth borderWidthForRounding borderWidth: clearArea color colorForInsets color: connections couldHaveRoundedCorners defaultNameStemForInstances doesBevels eventHandler eventHandler: forwardDirection hasTranslucentColor highlight highlightColor highlightColor: insetColor isFlap isLocked isShared isSticky lock lock: methodCommentAsBalloonHelp modelOrNil player playerRepresented player: presenter raisedColor regularColor regularColor: rememberedColor rememberedColor: resistsRemoval resistsRemoval: scaleFactor setBorderStyle: sqkPage sticky: toggleLocked toggleResistsRemoval toggleStickiness unHighlight unlock unlockContents url userString viewBox visibleClearArea wantsEmbeddingsVocabulary wantsToBeCachedByHand wantsToBeTopmost)('accessing - extension' assureExtension extension hasExtension initializeExtension privateExtension: resetExtension)('accessing - properties' hasProperty: otherProperties removeProperty: setProperties: setProperty:toValue: valueOfProperty: valueOfProperty:ifAbsentPut: valueOfProperty:ifAbsent: valueOfProperty:ifPresentDo:)('caching' fullLoadCachedState fullReleaseCachedState loadCachedState releaseCachedState)('change reporting' addedMorph: colorChangedForSubmorph: invalidRect: invalidRect:from: ownerChanged privateInvalidateMorph: userSelectedColor:)('classification' demandsBoolean isAlignmentMorph isBalloonHelp isCompoundTileMorph isFlapOrTab isFlapTab isFlexMorph isHandMorph isKedamaMorph isModalShell isNumericReadoutTile isPhraseTileMorph isPlayfieldLike isRenderer isSoundTile isStandardViewer isStickySketchMorph isSyntaxMorph isTextMorph isTileMorph isTilePadMorph isViewer isWorldMorph isWorldOrHandMorph)('connectors-scripting' wantsConnectorVocabulary)('converting' asDraggableMorph asSnapshotThumbnail)('copying' copy deepCopy duplicate duplicateMorphCollection: fullCopy updateReferencesUsing: usableSiblingInstance veryDeepCopyWith: veryDeepFixupWith: veryDeepInner:)('creation' asMorph)('debug and other' addDebuggingItemsTo:hand: addMouseActionIndicatorsWidth:color: addMouseUpAction addMouseUpActionWith: addViewingItemsTo: allStringsAfter: altSpecialCursor0 altSpecialCursor1 altSpecialCursor2 altSpecialCursor3 altSpecialCursor3: buildDebugMenu: defineTempCommand deleteAnyMouseActionIndicators inspectArgumentsPlayerInMorphic: inspectOwnerChain installModelIn: mouseUpCodeOrNil ownerChain programmedMouseDown:for: programmedMouseEnter:for: programmedMouseLeave:for: programmedMouseUp:for: removeMouseUpAction resumeAfterDrawError resumeAfterStepError tempCommand viewMorphDirectly)('dispatching' disableSubmorphFocusForHand:)('drawing' areasRemainingToFill: boundingBoxOfSubmorphs boundsWithinCorners changeClipSubmorphs clipLayoutCells clipLayoutCells: clippingBounds clipSubmorphs clipSubmorphs: doesOwnRotation drawDropHighlightOn: drawDropShadowOn: drawErrorOn: drawMouseDownHighlightOn: drawOn: drawRolloverBorderOn: drawSubmorphsOn: expandFullBoundsForDropShadow: expandFullBoundsForRolloverBorder: flashBounds fullDrawOn: hasClipSubmorphsString hide highlightedForMouseDown highlightForMouseDown highlightForMouseDown: imageForm imageFormDepth: imageFormForRectangle: imageFormWithout:andStopThere: imageForm:backgroundColor:forRectangle: imageForm:forRectangle: refreshWorld shadowForm show visible visible:)('drop shadows' addDropShadow addDropShadowMenuItems:hand: changeShadowColor hasDropShadow hasDropShadowString hasDropShadow: hasRolloverBorder hasRolloverBorder: removeDropShadow setShadowOffset: shadowColor shadowColor: shadowOffset shadowOffset: shadowPoint: toggleDropShadow)('dropping/grabbing' aboutToBeGrabbedBy: disableDragNDrop dragEnabled dragEnabled: dragNDropEnabled dragSelectionColor dropEnabled dropEnabled: dropHighlightColor dropSuccessColor enableDragNDrop enableDragNDrop: enableDrag: enableDrop: formerOwner formerOwner: formerPosition formerPosition: grabTransform highlightedForDrop highlightForDrop highlightForDrop: justDroppedInto:event: justGrabbedFrom: nameForUndoWording rejectDropMorphEvent: repelsMorph:event: resetHighlightForDrop separateDragAndDrop slideBackToFormerSituation: slideToTrash: startDrag:with: toggleDragNDrop transportedMorph undoGrabCommand vanishAfterSlidingTo:event: wantsDroppedMorph:event: wantsToBeDroppedInto: wantsToBeOpenedInWorld willingToBeDiscarded)('event handling' click click: cursorPoint doubleClickTimeout: doubleClick: dropFiles: firstClickTimedOut: handlerForYellowButtonDown: handlesKeyboard: handlesMouseDown: handlesMouseOverDragging: handlesMouseOver: handlesMouseStillDown: hasFocus keyboardFocusChange: keyDown: keyStroke: keyUp: mouseDown: mouseEnterDragging: mouseEnter: mouseLeaveDragging: mouseLeave: mouseMove: mouseStillDownThreshold mouseStillDown: mouseUp: moveOrResizeFromKeystroke: on:send:to: on:send:to:withValue: preferredKeyboardBounds preferredKeyboardPosition removeLink: restoreSuspendedEventHandler startDrag: suspendEventHandler tabAmongFields transformFromOutermostWorld transformFromWorld transformFrom: wantsDropFiles: wantsEveryMouseMove wantsKeyboardFocusFor: wouldAcceptKeyboardFocus wouldAcceptKeyboardFocusUponTab yellowButtonActivity:)('events-accessing' actionMap updateableActionMap)('events-alarms' addAlarm:after: addAlarm:at: addAlarm:withArguments:after: addAlarm:withArguments:at: addAlarm:with:after: addAlarm:with:at: addAlarm:with:with:after: addAlarm:with:with:at: alarmScheduler removeAlarm: removeAlarm:at:)('events-processing' containsPoint:event: defaultEventDispatcher handleDropFiles: handleDropMorph: handleEvent: handleFocusEvent: handleKeyDown: handleKeyUp: handleKeystroke: handleListenEvent: handleMouseDown: handleMouseEnter: handleMouseLeave: handleMouseMove: handleMouseOver: handleMouseStillDown: handleMouseUp: handleUnknownEvent: mouseDownPriority processEvent: processEvent:using: rejectDropEvent: rejectsEvent: transformedFrom:)('events-removing' releaseActionMap)('fileIn/out' attachToResource prepareToBeSaved reserveUrl: saveAsResource saveDocPane saveOnFile saveOnURL saveOnURLbasic saveOnURL: updateAllFromResources updateFromResource)('filter streaming' drawOnCanvas:)('geometry' align:with: bottom bottomCenter bottomLeft bottomLeft: bottomRight bottomRight: bottom: bounds boundsInWorld boundsIn: bounds: bounds:from: bounds:in: center center: extent extent: fullBoundsInWorld globalPointToLocal: griddedPoint: gridPoint: height height: innerBounds intersects: left leftCenter left: localPointToGlobal: minimumExtent minimumExtent: nextOwnerPage outerBounds overlapsShadowForm:bounds: pointFromWorld: pointInWorld: point:from: point:in: position positionInWorld positionSubmorphs position: previousOwnerPage right rightCenter right: screenLocation screenRectangle setConstrainedPosition:hangOut: shiftSubmorphsOtherThan:by: top topCenter topLeft topLeft: topRight topRight: top: transformedBy: width width: worldBounds worldBoundsForHalo)('geometry eToy' addTransparentSpacerOfSize: beTransparent cartesianBoundsTopLeft cartesianXY: colorUnder color:sees: degreesOfFlex forwardDirection: getIndexInOwner goHome heading heading: move:toPosition: referencePosition referencePositionInWorld referencePositionInWorld: referencePosition: rotationCenter rotationCenter: scaleFactor: scale: setDirectionFrom: setIndexInOwner: simplySetVisible: touchesColor: transparentSpacerOfSize: wrap x x: x:y: y y:)('geometry testing' containsPoint: fullContainsPoint: obtrudesBeyondContainer)('halos and balloon help' addHalo addHalo: addHalo:from: addHandlesTo:box: addMagicHaloFor: addOptionalHandlesTo:box: addSimpleHandlesTo:box: addWorldHandlesTo:box: balloonColor balloonColor: balloonFont balloonFont: balloonHelpAligner balloonHelpDelayTime balloonHelpTextForHandle: boundsForBalloon comeToFrontAndAddHalo defaultBalloonColor defaultBalloonFont defersHaloOnClickTo: deleteBalloon editBalloonHelpContent: editBalloonHelpText halo haloClass haloDelayTime hasHalo hasHalo: isLikelyRecipientForMouseOverHalos mouseDownOnHelpHandle: noHelpString okayToAddDismissHandle okayToAddGrabHandle okayToBrownDragEasily okayToExtractEasily okayToResizeEasily okayToRotateEasily preferredDuplicationHandleSelector removeHalo setBalloonText: setBalloonText:maxLineLength: setCenteredBalloonText: showBalloon: showBalloon:hand: transferHalo:from: wantsBalloon wantsDirectionHandles wantsDirectionHandles: wantsHalo wantsHaloFor: wantsHaloFromClick wantsHaloHandleWithSelector:inHalo: wantsScriptorHaloHandle wantsSimpleSketchMorphHandles)('initialization' basicInitialize defaultBounds defaultColor inAScrollPane inATwoWayScrollPane initialize intoWorld: openCenteredInWorld openInHand openInWindow openInWindowLabeled: openInWindowLabeled:inWorld: openInWorld openInWorld: outOfWorld: resourceJustLoaded standardPalette)('latter day support' isEtoyReadout)('layout' acceptDroppingMorph:event: adjustLayoutBounds doLayoutIn: fullBounds layoutBounds layoutBounds: layoutChanged layoutInBounds: layoutProportionallyIn: minExtent minHeight minHeight: minWidth minWidth: privateFullBounds submorphBounds)('layout-menu' addCellLayoutMenuItems:hand: addLayoutMenuItems:hand: addTableLayoutMenuItems:hand: changeCellInset: changeClipLayoutCells changeDisableTableLayout changeLayoutInset: changeListDirection: changeMaxCellSize: changeMinCellSize: changeNoLayout changeProportionalLayout changeReverseCells changeRubberBandCells changeTableLayout hasClipLayoutCellsString hasDisableTableLayoutString hasNoLayoutString hasProportionalLayoutString hasReverseCellsString hasRubberBandCellsString hasTableLayoutString layoutMenuPropertyString:from:)('layout-properties' assureLayoutProperties assureTableProperties cellInset cellInset: cellPositioning cellPositioningString: cellPositioning: cellSpacing cellSpacingString: cellSpacing: disableTableLayout disableTableLayout: hResizing hResizingString: hResizing: layoutFrame layoutFrame: layoutInset layoutInset: layoutPolicy layoutPolicy: layoutProperties layoutProperties: listCentering listCenteringString: listCentering: listDirection listDirectionString: listDirection: listSpacing listSpacingString: listSpacing: maxCellSize maxCellSize: minCellSize minCellSize: reverseTableCells reverseTableCells: rubberBandCells rubberBandCells: spaceFillWeight spaceFillWeight: vResizeToFit: vResizing vResizingString: vResizing: wrapCentering wrapCenteringString: wrapCentering: wrapDirection wrapDirectionString: wrapDirection:)('macpal' flash)('menu' addBorderStyleMenuItems:hand: addGestureMenuItems:hand: addGraphModelYellowButtonItemsTo:event: addModelYellowButtonItemsTo:event: addMyYellowButtonMenuItemsToSubmorphMenus addNestedYellowButtonItemsTo:event: addTitleForHaloMenu: addYellowButtonMenuItemsTo:event: buildYellowButtonMenu: hasYellowButtonMenu offerCostumeViewerMenu: outermostOwnerWithYellowButtonMenu startWiring wantsYellowButtonMenu wantsYellowButtonMenu:)('menus' absorbStateFromRenderer: addAddHandMenuItemsForHalo:hand: addCopyItemsTo: addCustomHaloMenuItems:hand: addCustomMenuItems:hand: addExportMenuItems:hand: addFillStyleMenuItems:hand: addHaloActionsTo: addMiscExtrasTo: addPaintingItemsTo:hand: addStandardHaloMenuItemsTo:hand: addToggleItemsToHaloMenu: addWorldTargetSightingItems:hand: adhereToEdge adhereToEdge: adjustedCenter adjustedCenter: allMenuWordings changeColor changeDirectionHandles changeDragAndDrop chooseNewGraphic chooseNewGraphicCoexisting: chooseNewGraphicFromHalo collapse defaultArrowheadSize doMenuItem: exportAsBMP exportAsGIF exportAsJPEG exportAsPNG hasDirectionHandlesString hasDragAndDropEnabledString helpButton inspectInMorphic inspectInMorphic: lockedString lockUnlockMorph makeNascentScript maybeAddCollapseItemTo: menuItemAfter: menuItemBefore: model presentHelp printPSToFileNamed: reasonableBitmapFillForms reasonableForms resetForwardDirection resistsRemovalString setArrowheads setRotationCenter setRotationCenterFrom: setToAdhereToEdge: snapToEdgeIfAppropriate stickinessString transferStateToRenderer: uncollapseSketch)('meta-actions' addEmbeddingMenuItemsTo:hand: applyStatusToAllSiblings: beThisWorldsModel blueButtonDown: blueButtonUp: bringAllSiblingsToMe: buildHandleMenu: buildMetaMenu: changeColorTarget:selector:originalColor:hand: copyToPasteBuffer: dismissMorph dismissMorph: duplicateMorphImage: duplicateMorph: embedInto: grabMorph: handlerForBlueButtonDown: handlerForMetaMenu: indicateAllSiblings inspectAt:event: invokeMetaMenuAt:event: invokeMetaMenu: makeMultipleSiblings: makeNewPlayerInstance: makeSiblingsLookLikeMe: makeSiblings: maybeDuplicateMorph maybeDuplicateMorph: openAPropertySheet openATextPropertySheet potentialEmbeddingTargets potentialTargets potentialTargetsAt: resizeFromMenu resizeMorph: saveAsPrototype showActions showHiders sightTargets: sightWorldTargets: subclassMorph targetFromMenu: targetWith:)('miscellaneous' roundUpStrays setExtentFromHalo: setFlexExtentFromHalo:)('naming' downshiftedNameOfObjectRepresented innocuousName nameForFindWindowFeature nameInModel nameOfObjectRepresented name: setNamePropertyTo: setNameTo: specialNameInModel tryToRenameTo: updateAllScriptingElements)('objects from disk' objectForDataStream: storeDataOn:)('other events' menuButtonMouseEnter: menuButtonMouseLeave:)('parts bin' initializeToStandAlone inPartsBin isPartsBin isPartsDonor isPartsDonor: markAsPartsDonor partRepresented residesInPartsBin)('printing' clipText colorString: constructorString fullPrintOn: initString morphReport morphReportFor: morphReportFor:on:indent: pagesHandledAutomatically printConstructorOn:indent: printConstructorOn:indent:nodeDict: printOn: printSpecs printSpecs: printStructureOn:indent: reportableSize structureString textToPaste)('rotate scale and flex' addFlexShell addFlexShellIfNecessary keepsTransform newTransformationMorph removeFlexShell rotationDegrees)('rounding' cornerStyle: roundedCorners roundedCornersString toggleCornerRounding wantsRoundedCorners)('stepping and presenter' arrangeToStartStepping arrangeToStartSteppingIn: isStepping isSteppingSelector: start startStepping startSteppingIn: startSteppingSelector: startStepping:at:arguments:stepTime: step stepAt: stop stopStepping stopSteppingSelector: stopSteppingSelfAndSubmorphs)('structure' activeHand allOwners allOwnersDo: firstOwnerSuchThat: hasOwner: isInDockingBar isInSystemWindow isInWorld morphPreceding: nearestOwnerThat: orOwnerSuchThat: outermostMorphThat: outermostWorldMorph owner ownerThatIsA: ownerThatIsA:orA: pasteUpMorph pasteUpMorphHandlingTabAmongFields primaryHand renderedMorph root rootAt: topPasteUp topRendererOrSelf withAllOwners withAllOwnersDo: world)('submorphs-accessing' allKnownNames allMorphs allMorphsDo: allNonSubmorphMorphs allSubmorphNamesDo: dockingBars findA: findDeeplyA: findDeepSubmorphThat:ifAbsent: findSubmorphBinary: firstSubmorph hasSubmorphs hasSubmorphWithProperty: indexOfMorphAbove: lastSubmorph mainDockingBars morphsAt: morphsAt:behind:unlocked: morphsAt:unlocked: morphsAt:unlocked:do: morphsInFrontOf:overlapping:do: morphsInFrontOverlapping: morphsInFrontOverlapping:do: noteNewOwner: rootMorphsAtGlobal: rootMorphsAt: shuffleSubmorphs submorphAfter submorphBefore submorphCount submorphNamed: submorphNamed:ifNone: submorphOfClass: submorphs submorphsBehind:do: submorphsDo: submorphsInFrontOf:do: submorphsReverseDo: submorphsSatisfying: submorphThat:ifNone: submorphWithProperty:)('submorphs-add/remove' abandon actWhen actWhen: addAllMorphs: addAllMorphs:after: addMorphBack: addMorphCentered: addMorphFrontFromWorldPosition: addMorphFront: addMorphFront:fromWorldPosition: addMorphNearBack: addMorph: addMorph:after: addMorph:asElementNumber: addMorph:behind: addMorph:fullFrame: addMorph:inFrontOf: allMorphsWithPlayersDo: comeToFront copyWithoutSubmorph: delete deleteDockingBars deleteSubmorphsWithProperty: dismissViaHalo goBehind privateDelete removeAllMorphs removeAllMorphsIn: removedMorph: removeMorph: replaceSubmorph:by: submorphIndexOf:)('testing' canDrawAtHigherResolution canDrawBorder: completeModificationHash couldMakeSibling isDockingBar isFlexed isFullOnScreen isLineMorph isMorph isSafeToServe isSketchMorph knownName modificationHash renameInternal: renameTo: shouldDropOnMouseUp stepTime wantsSteps)('text-anchor' addTextAnchorMenuItems:hand: changeDocumentAnchor changeInlineAnchor changeParagraphAnchor hasDocumentAnchorString hasInlineAnchorString hasParagraphAnchorString relativeTextAnchorPosition relativeTextAnchorPosition: textAnchorType textAnchorType:)('thumbnail' demandsThumbnailing icon iconOrThumbnail iconOrThumbnailOfSize: morphRepresented permitsThumbnailing readoutForField: representativeNoTallerThan:norWiderThan:thumbnailHeight: updateThumbnailUrl updateThumbnailUrlInBook:)('undo' commandHistory undoMove:redo:owner:bounds:predecessor:)('updating' changed)('user interface' becomeModal defaultLabelForInspector doCancel initialExtent)('viewer' externalName)('visual properties' canHaveFillStyles cornerStyle defaultBitmapFillForm fillStyle fillStyle: fillWithRamp:oriented: useBitmapFill useDefaultFill useGradientFill useSolidFill)('WiW support' addMorphInFrontOfLayer: addMorphInLayer: eToyRejectDropMorph:event: morphicLayerNumber morphicLayerNumberWithin: randomBoundsFor: shouldGetStepsFrom:)('*MorphicExtras-accessing' highlightOnlySubmorph:)('*MorphicExtras-geometry' shiftSubmorphsBy:)('*MorphicExtras-menus' dismissButton)('*sound-piano rolls' addMorphsTo:pianoRoll:eventTime:betweenTime:and: encounteredAtTime:inScorePlayer:atIndex:inEventTrack:secsPerTick: justDroppedIntoPianoRoll:event: pauseFrom: resetFrom: resumeFrom: triggerActionFromPianoRoll)('private' privateAddAllMorphs:atIndex: privateAddMorph:atIndex: privateBounds: privateColor: privateDeleteWithAbsolutelyNoSideEffects privateFullBounds: privateFullMoveBy: privateMoveBy: privateOwner: privateRemoveMorphWithAbsolutelyNoSideEffects: privateRemove: privateSubmorphs privateSubmorphs:)('accessing-backstop' target:)('e-toy support' adaptToWorld: allMorphsAndBookPagesInto: asNumber: automaticViewing containingWindow currentPlayerDo: cursor cursor: decimalPlacesForGetter: defaultValueOrNil embeddedInMorphicWindowLabeled: embedInWindow getNumericValue gridFormOrigin:grid:background:line: handUserASibling isAViewer isCandidateForAutomaticViewing isTileEditor makeGraphPaper makeGraphPaperGrid:background:line: mustBeBackmost noteDecimalPlaces:forGetter: objectViewed referencePlayfield rotationStyle rotationStyle: setAsActionInButtonProperties: setNumericValue: setStandardTexture textureParameters unlockOneSubpart updateCachedThumbnail wantsRecolorHandle wrappedInWindowWithTitle: wrappedInWindow:)('geniestubs' allowsGestureStart: isGestureStart: mouseStillDownStepRate redButtonGestureDictionaryOrName: yellowButtonGestureDictionaryOrName:)('*morphic-Postscript Canvases' asEPS asPostscript asPostscriptPrintJob clipPostscript drawPostscriptOn: fullDrawPostscriptOn: printPSToFile)('player' assureExternalName okayToDuplicate shouldRememberCostumes)('player commands' playSoundNamed:)('button' doButtonAction)('event handling-override' handlerForMouseDown:)('model access' models)('player viewer' openViewerForArgument)('other' removeAllButFirstSubmorph)('selected object' selectedObject)('polymorph' modalLockTo: modalUnlockFrom: openModal:)!!MailComposition reorganize!('access' messageText messageText: smtpServer submit)('interface' addAttachment menuGet:shifted: saveContentsInFile sendMailMessage:)('private' breakLines:atWidth: breakLinesInMessage: perform:orSendTo:)('initialize-release' open)('*Morphic-Support' morphicOpen)('*ST80-Support' mvcOpen)!!Model reorganize!('copying' veryDeepFixupWith: veryDeepInner:)('dependents' canDiscardEdits containingWindow hasUnacceptedEdits myDependents myDependents: topView)('keyboard' arrowKey:from:)('menus' perform:orSendTo: selectedClass step trash trash:)('*Tools' addItem:)('*morphic' postAcceptBrowseFor: representsSameBrowseeAs:)!!MethodReference reorganize!('comparisons' asStringOrText hash <= = stringVersionDefault)('queries' category classIsMeta classSymbol isValid methodSymbol printOn: sourceString)('setting' category: setClassAndSelectorIn: setClassSymbol:classIsMeta:methodSymbol:stringVersion: setClass:methodSymbol:stringVersion: setStandardClass:methodSymbol:)('string version' stringVersion stringVersion:)('*Kernel-Traits' actualClass)('*monticello' asMethodDefinition compiledMethod isLocalSelector source timeStamp)('*packageinfo-base' sourceCode)!!MethodDictionary reorganize!('accessing' at:ifAbsent: at:put: includesKey: keyAtIdentityValue:ifAbsent: keyAtValue:ifAbsent:)('enumeration' associationsDo: keysAndValuesDo: keysDo: valuesDo:)('removing' removeAll removeKey:ifAbsent:)('private' compactCopyFrom: fixCollisionsFrom: grow methodArray rehash rehashWithoutBecome removeDangerouslyKey:ifAbsent: scanFor: swap:with:)('copying' postCopy)!!MethodContext reorganize!('accessing' activeHome activeOuterContext closure contextForLocalVariables hasInstVarRef hasMethodReturn home isExecutingBlock method methodReturnContext outerContext receiver removeSelf tempAt: tempAt:put:)('closure support' asContext capturedTempNames contextTag doItScope freeNames freeNamesAndValues isClosureContext)('initialize-release' privRefresh privRefreshWith:)('printing' printDetails: printOn: printString)('private' aboutToReturn:through: instVarAt:put: setSender:receiver:method:arguments: setSender:receiver:method:closure:startpc: startpc)('private-debugger' cachedStackTop cachesStack hideFromDebugger)('private-exceptions' cannotReturn: isHandlerContext isUnwindContext receiver: restartWithNewReceiver: swapReceiver:)('instruction decoding (closures)' blockReturnTop pushConsArrayWithElements:)('system simulation' pushArgs:from:)('testing' isMethodContext)!!Metaclass reorganize!('initialize-release' adoptInstance:from: instanceVariableNames: uses:instanceVariableNames:)('accessing' environment isSystemDefined name soleInstance)('accessing parallel hierarchy' theMetaClass theNonMetaClass)('testing' canZapMethodDictionary isMeta isObsolete)('class hierarchy' addObsoleteSubclass: addSubclass: obsoleteSubclasses removeObsoleteSubclass: removeSubclass: subclasses subclassesDo: subclassesDoGently:)('compiling' acceptsLoggingOfCompilation bindingOf: possibleVariablesFor:continuedFrom: wantsChangeSetLogging wantsRecompilationProgressReported)('copying' copy veryDeepCopyWith:)('enumerating' allInstancesDo: allInstancesEverywhereDo:)('fileIn/Out' definition fileOutInitializerOn: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing: nonTrivial objectForDataStream: storeDataOn:)('instance creation' new)('instance variables' addInstVarName: removeInstVarName:)('pool variables' classPool)('private' replaceObsoleteInstanceWith:)!!MessageSend reorganize!('accessing' arguments arguments: numArgs receiver receiver: selector selector:)('comparing' = hash)('converting' asMinimalRepresentation)('evaluating' value valueWithArguments: valueWithEnoughArguments:)('printing' printOn:)('testing' isMessageSend isValid)('private' collectArguments:)('tiles' stringFor:)!!MenuIcons class reorganize!('accessing - icons' blankIcon squeakLogoIcon squeakLogoInvertedIcon)('class initialization' initialize initializeIcons initializeTranslations startUp:)('import/export' exportAllIconsAsGif exportAllIconsAsPNG exportIcon:asGifNamed: exportIcon:asPNGNamed: importAllIconNamed: importAllIcons importIconNamed: methodEnd methodStart:)('menu decoration' decorateMenu: iconForMenuItem: itemsIcons)('*MorphicExtras-accessing - icons' backIcon forwardIcon helpIcon openIcon)('private - icons' backIconContents blankIconOfWidth: configurationIcon configurationIconContents confirmIcon confirmIconContents forwardIconContents fullScreenIcon fullScreenIconContents helpIconContents homeIcon homeIconContents jumpIcon jumpIconContents loadProjectIcon loadProjectIconContents objectCatalogIcon objectCatalogIconContents objectsIcon objectsIconContents openIconContents paintIcon paintIconContents projectIcon projectIconContents publishIcon publishIconContents smallAuthoringToolsIcon smallAuthoringToolsIconContents smallBackIcon smallBackIconContents smallCancelIcon smallCancelIconContents smallCenteredIcon smallCenteredIconContents smallConfigurationIcon smallConfigurationIconContents smallCopyIcon smallCopyIconContents smallCutIcon smallCutIconContents smallDebugIcon smallDebugIconContents smallDeleteIcon smallDeleteIconContents smallDoItIcon smallDoItIconContents smallExpertIcon smallExpertIconContents smallExportIcon smallExportIconContents smallFindIcon smallFindIconContents smallFontsIcon smallFontsIconContents smallForwardIcon smallForwardIconContents smallFullScreenIcon smallFullScreenIconContents smallHelpIcon smallHelpIconContents smallHomeIcon smallHomeIconContents smallInspectItIcon smallInspectItIconContents smallJumpIcon smallJumpIconContents smallJustifiedIcon smallJustifiedIconContents smallLanguageIcon smallLanguageIconContents smallLeftFlushIcon smallLeftFlushIconContents smallLoadProjectIcon smallLoadProjectIconContents smallNewIcon smallNewIconContents smallObjectCatalogIcon smallObjectCatalogIconContents smallObjectsIcon smallObjectsIconContents smallOkIcon smallOkIconContents smallOpenIcon smallOpenIconContents smallPaintIcon smallPaintIconContents smallPasteIcon smallPasteIconContents smallPrintIcon smallPrintIconContents smallProjectIcon smallProjectIconContents smallPublishIcon smallPublishIconContents smallQuitIcon smallQuitIconContents smallRedoIcon smallRedoIconContents smallRemoteOpenIcon smallRemoteOpenIconContents smallRightFlushIcon smallRightFlushIconContents smallSaveAsIcon smallSaveAsIconContents smallSaveIcon smallSaveIconContents smallSelectIcon smallSelectIconContents smallSqueakIcon smallSqueakIconContents smallUndoIcon smallUndoIconContents smallUpdateIcon smallUpdateIconContents smallVolumeIcon smallVolumeIconContents smallWindowIcon smallWindowIconContents squeakIcon squeakIconContents volumeIcon volumeIconContents windowIcon windowIconContents)('icons creation' base64ContentsOfFileNamed: createIconMethodsFromDirectory:)!!MatrixTransform2x3 class reorganize!('instance creation' identity new newFromStream: transformFromLocal:toGlobal: withAngle: withOffset: withRotation: withScale:)!!MatrixTransform2x3 reorganize!('accessing' at: at:put: inverseTransformation offset offset:)('comparing' hash =)('composing' composedWithLocal: composedWithLocal:into:)('converting' asMatrixTransform2x3)('element access' a11 a11: a12 a12: a13 a13: a21 a21: a22 a22: a23 a23:)('initialize' setIdentiy)('objects from disk' byteSize bytesPerBasicElement bytesPerElement restoreEndianness writeOn:)('printing' printOn:)('testing' isIdentity isMatrixTransform2x3 isPureTranslation)('transforming points' globalPointToLocal: invertPoint: localPointToGlobal: transformDirection: transformPoint:)('transforming rects' globalBoundsToLocal: globalBounds:toLocal: localBoundsToGlobal: localBounds:toGlobal:)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('private' setAngle: setOffset: setScale:)!!MacRomanTextConverter reorganize!('friend' leadingChar)!!Latin2Environment class reorganize!('rendering support' flapTabTextFor: flapTabTextFor:in: isBreakableAt:in:)('subclass responsibilities' clipboardInterpreterClass defaultEncodingName fileNameConverterClass inputInterpreterClass leadingChar supportedLanguages systemConverterClass)!!KoreanEnvironment reorganize!('as yet unclassified')!!JapaneseEnvironment reorganize!('utilities' setupSqueaklandSpecifics)!!InfiniteForm reorganize!('accessing' asColor asForm dominantColor offset)('as yet unclassified' addFillStyleMenuItems:hand:from:)('display box access' computeBoundingBox)('displaying' colorForInsets displayOn:at:clippingBox:rule:fillColor: displayOnPort:at: displayOnPort:offsetBy: raisedColor)('fillstyle protocol' bitPatternForDepth: direction form isBitmapFill isGradientFill isOrientedFill isSolidFill isTiled isTranslucent normal origin origin:)('private' form:)!!ImmWin32 reorganize!('keyboard' keyboardFocusForAMorph:)('private' setCompositionWindowPositionX:y:)!!ImmAbstractPlatform reorganize!('keyboard' keyboardFocusForAMorph:)!!ImageSegment reorganize!('access' allObjectsDo: arrayOfRoots arrayOfRoots: originalRoots outPointers segment state)('compact classes' aComment cc:new:current:fake:refStrm: compactClassesArray compactIndexAt: objectAfter: remapCompactClasses:refStrm:)('fileIn/Out' acceptSingleMethodSource: comeFullyUpOnReload: declare: declareAndPossiblyRename: endianness fixCapitalizationOfSymbols prepareToBeSaved rehashSets reshapeClasses:refStream: restoreEndianness scanFrom: storeDataOn:)('instance change shape' allInstancesOf:do: ifOutPointer:thenAllObjectsDo: segUpdateInstancesOf:toBe:isMeta:)('primitives' loadSegmentFrom:outPointers: storeSegmentFor:into:outPointers:)('read/write segment' copyFromRoots:sizeHint: copyFromRoots:sizeHint:areUnique: copyFromRootsForExport: copyFromRootsLocalFileFor:sizeHint: copySmartRootsExport: dependentsCancel: dependentsRestore: dependentsSave: extract extractThenInstall findStacks install localName readFromFile revert rootsIncludingBlockMethods rootsIncludingBlocks rootsIncludingPlayers savePlayerReferences: segmentCopy segmentName segmentName: smartFillRoots: writeForExport: writeForExportWithSources:inDirectory: writeForExportWithSources:inDirectory:changeSet: writeForExportWithSourcesGZ:inDirectory: writeToFile writeToFile: writeToFileWithSymbols writeToFileWithSymbols:)('statistics' classNameAt: doSpaceAnalysis printSpaceAnalysisOn:)('testing' deepCopyTest: errorWrongState findInOut: findOwnerMap: findOwnersOutPtrs findRogueRootsAllMorphs: findRogueRootsImSeg: findRogueRootsPrep findRogueRootsRefStrm: isOnFile verify:matches:knowing: verifyCopy)!!ISO88597TextConverter reorganize!('friend' leadingChar)!!ISO88592TextConverter reorganize!('friend' leadingChar)!!Dictionary reorganize!('accessing' associationAt: associationAt:ifAbsent: associationDeclareAt: associations at: at:ifAbsentPut: at:ifAbsent: at:ifPresent:ifAbsent: at:ifPresentAndInMemory: at:ifPresent: at:put: fasterKeys keyAtIdentityValue: keyAtIdentityValue:ifAbsent: keyAtValue: keyAtValue:ifAbsent: keyForIdentity: keys keysSortedSafely values)('adding' addAll: add: declare:from:)('comparing' =)('enumerating' associationsDo: associationsSelect: collect: do: keysAndValuesDo: keysDo: select: valuesDo:)('printing' flattenOnStream: printElementsOn: storeOn:)('removing' keysAndValuesRemove: removeKey: removeKey:ifAbsent: removeUnreferencedKeys remove:ifAbsent: unreferencedKeys)('testing' hasBindingThatBeginsWith: includesAssociation: includesIdentity: includesKey: includes: isDictionary)('*Compiler' bindingOf: bindingsDo:)('*Tools-Inspector' inspectorClass)('private' errorKeyNotFound errorValueNotFound fillFrom:with: fixCollisionsFrom: noCheckNoGrowFillFrom: scanFor: valueAtNewKey:put:atIndex:declareFrom:)('copying' postCopy)('*Morphic-Explorer' explorerContents hasContentsInExplorer)!!HashedCollection reorganize!('adding' add:withOccurrences:)('private' array atNewIndex:put: errorNoFreeSpace fixCollisionsFrom: grow growSize growTo: initialize: noCheckNoGrowFillFrom: rehash scanFor: scanForEmptySlotFor:)('accessing' atRandom: capacity size someElement)('objects from disk' comeFullyUpOnReload:)('copying' copyEmpty)('enumerating' doWithIndex: union:)('removing' removeAll)('compatibility' findElementOrNil: fullCheck)!!GradientFillStyle reorganize!('accessing' colorRamp colorRamp: pixelRamp pixelRamp: radial radial:)('converting' asColor mixed:with:)('testing' isGradientFill isRadialFill isSolidFill isTranslucent)('*Morphic-Balloon' addFillStyleMenuItems:hand:from: addNewColorIn:event: beLinearGradientIn: beRadialGradientIn: changeColorSelector:hand:morph:originalColor: changeFirstColorIn:event: changeSecondColorIn:event: firstColor:forMorph:hand: lastColor:forMorph:hand:)('private' checkTranslucency computePixelRampOfSize: display scaledAlphaMix:of:with:)!!ColorForm reorganize!('accessing' colors colors: colorsFromArray:)('color manipulation' asGrayScale colormapIfNeededForDepth: colorsUsed ensureTransparentColor indexOfColor: mapColor:to: replaceColor:with: replaceColorAt:with: replaceColorAtIndex:with: transparentAllPixelsLike: transparentColor: twoToneFromDisplay:backgroundColor:)('color mapping' colormapIfNeededFor:)('copying' asCursorForm blankCopyOf:scaledBy: copy: deepCopy)('displaying' displayOn:at:clippingBox:rule:fillColor: displayOnPort:at: maskingMap)('fileIn/Out' hibernate readAttributesFrom: storeOn: unhibernate writeAttributesOn:)('pixel accessing' colorAt: colorAt:put: isTransparentAt: pixelValueAt:)('postscript generation' asFormWithSingleTransparentColors decodeArray getTransparencyUnificationLUT mapTransparencies: setColorspaceOn: transparentColorIndexes)('scaling, rotation' flipBy:centerAt: scaledToSize:)('testing' isColorForm isTranslucent)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn: printPostscript:)('private' clearColormapCache depth: ensureColorArrayExists setColors:cachedColormap:depth: setExtent:depth: unusedColormapEntry)!!Form reorganize!('accessing' bits bitsSize bits: center defaultCanvasClass depth depth: displayScreen extent form getCanvas hasBeenModified hasBeenModified: height nativeDepth offset offset: size width)('analyzing' cgForPixelValue:orNot: colorsUsed dominantColor innerPixelRectFor:orNot: pixelCompare:with:at: primCountBits rectangleEnclosingPixelsNotOfColor: tallyPixelValues tallyPixelValuesInRect:into: xTallyPixelValue:orNot: yTallyPixelValue:orNot:)('bordering' borderFormOfWidth:sharpCorners: borderWidth: borderWidth:color: borderWidth:fillColor: border:width:rule:fillColor: shapeBorder:width: shapeBorder:width:interiorPoint:sharpCorners:internal:)('color mapping' balancedPatternFor: bitPatternFor: colormapFromARGB colormapIfNeededForDepth: colormapIfNeededFor: colormapToARGB makeBWForm: mapColors:to: mapColor:to: maskingMap newColorMap pixelValueFor: pixelWordFor: reducedPaletteOfSize: rgbaBitMasks)('converting' as8BitColorForm asCursorForm asFormOfDepth: asGrayScale asMorph asSourceForm colorReduced copyWithColorsReducedTo: orderedDither32To16)('copying' blankCopyOf:scaledBy: contentsOfArea: contentsOfArea:into: copyBits:at:translucent: copyBits:from:at:clippingBox:rule:fillColor: copyBits:from:at:clippingBox:rule:fillColor:map: copyBits:from:at:colorMap: copy: copy:from:in:rule: copy:from:to:rule: deepCopy veryDeepCopyWith:)('display box access' boundingBox computeBoundingBox)('displaying' displayInterpolatedIn:on: displayInterpolatedOn: displayOnPort:at: displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:align:with:rule:fillColor: displayResourceFormOn: displayScaledOn: drawLine:from:to:clippingBox:rule:fillColor: paintBits:at:translucent:)('editing' bitEdit bitEditAt:scale: edit morphEdit)('fileIn/Out' comeFullyUpOnReload: hibernate objectForDataStream: printOn: readAttributesFrom: readBitsFrom: readFromOldFormat: readFrom: replaceByResource: store15To24HexBitsOn: store32To24HexBitsOn: storeBitsOn:base: storeBits:to:on: storeHexBitsOn: storeOn: storeOn:base: unhibernate writeAttributesOn: writeBitsOn: writeBMPfileNamed: writeJPEGfileNamed: writeJPEGfileNamed:progressive: writeOnMovie: writeOn: writeUncompressedOn:)('filling' anyShapeFill bitPatternForDepth: convexShapeFill: eraseShape: fillFromXColorBlock: fillFromXYColorBlock: fillFromYColorBlock: fill:rule:fillColor: findShapeAroundSeedBlock: floodFill2:at: floodFillMapFrom:to:mappingColorsWithin:to: floodFill:at: floodFill:at:tolerance: shapeFill:interiorPoint: shapeFill:seedBlock:)('image manipulation' replaceColor:withColor: smear:distance: stencil trimBordersOfColor:)('initialize-release' allocateForm: finish flush fromDisplay: shutDown swapEndianness)('other' fixAlpha formForColorCount: primPrintHScale:vScale:landscape: relativeTextAnchorPosition setAsBackground)('pixel access' colorAt: colorAt:put: isTransparentAt: pixelValueAt: pixelValueAt:put:)('postscript generation' bitsPerComponent bytesPerRow decodeArray numComponents paddedWidth printPostscript:operator: rowPadding setColorspaceOn: storePostscriptHexOn:)('resources' readNativeResourceFrom: readResourceFrom: resourceTag storeResourceOn:)('scaling, rotation' flipBy:centerAt: magnifyBy: magnify:by: magnify:by:smoothing: rotateBy: rotateBy:centerAt: rotateBy:magnify:smoothing: rotateBy:smoothing: scaledToSize: shrink:by:)('testing' hasNonStandardPalette isAllWhite isBigEndian isBltAccelerated:for: isDisplayScreen isExternalForm isFillAccelerated:for: isForm isLittleEndian isStatic isTranslucent shouldPreserveContents)('transitions' fadeImageCoarse:at: fadeImageFine:at: fadeImageHorFine:at: fadeImageHor:at: fadeImageSquares:at: fadeImageVert:at: fadeImage:at:indexAndMaskDo: pageImage:at:corner: pageWarp:at:forward: slideImage:at:delta: wipeImage:at:clippingBox:rectForIndex: wipeImage:at:delta: wipeImage:at:delta:clippingBox: zoomInTo:at: zoomIn:orOutTo:at:vanishingPoint: zoomOutTo:at:)('*MorphicExtras-other' graphicForViewerTab)('*MorphicExtras-postscript generation' encodePostscriptOn:)('private' hackBits: initFromArray: privateFloodFillValue: setExtent:depth: setExtent:depth:bits: setResourceBits:)('*Morphic' iconOrThumbnailOfSize: scaledIntoFormOfSize:)!!FakeClassPool class reorganize!('initialize' adopt:)!!EventHandler class reorganize!('as yet unclassified')!!EventHandler reorganize!('access' allRecipients firstMouseSelector messageList methodRefList mouseDownSelector mouseStillDownRecipient mouseStillDownSelector mouseUpSelector)('copying' veryDeepFixupWith: veryDeepInner:)('events' click:fromMorph: doubleClick:fromMorph: doubleClickTimeout:fromMorph: keyStroke:fromMorph: mouseDown:fromMorph: mouseEnter:fromMorph: mouseEnterDragging:fromMorph: mouseLeave:fromMorph: mouseLeaveDragging:fromMorph: mouseMove:fromMorph: mouseStillDown:fromMorph: mouseUp:fromMorph: send:to:withEvent:fromMorph: startDrag:fromMorph:)('fixups' fixReversedValueMessages replaceSendsIn:with:)('initialization' on:send:to: on:send:to:withValue: onGestureSend:to:)('objects from disk' convertToCurrentVersion:refStream:)('printing' printOn:)('testing' handlesClickOrDrag: handlesGestureStart: handlesKeyboard: handlesMouseDown: handlesMouseMove: handlesMouseOver: handlesMouseOverDragging: handlesMouseStillDown:)('*MorphicExtras-initialization' adaptToWorld:)!!EUCTextConverter reorganize!('conversion' nextFromStream: nextPut:toStream:)('private' languageEnvironment leadingChar nonUnicodeClass)!!Duration reorganize!('ansi protocol' * + - / < = abs asDuration asSeconds days hash hours minutes negated negative positive seconds)('initialize-release' initialize)('squeak protocol' // \\ asDelay asMilliSeconds asNanoSeconds isZero nanoSeconds printOn: roundTo: truncateTo:)('private' seconds:nanoSeconds: storeOn: ticks)!!CompositeTransform class reorganize!('instance creation' globalTransform:localTransform:)!!DisplayTransform class reorganize!('instance creation' identity)!!CompositeTransform reorganize!('accessing' angle inverseTransformation offset scale)('converting' asCompositeTransform asMatrixTransform2x3 asMorphicTransform)('initialization' composedWith: globalTransform:localTransform:)('testing' isCompositeTransform isIdentity isPureTranslation)('transformations' invert: transform:)('transforming points' globalPointToLocal: localPointToGlobal:)!!DisplayTransform reorganize!('accessing' inverseTransformation)('composing' composedWithGlobal: composedWithLocal:)('converting' asCompositeTransform asMatrixTransform2x3)('initialize' setIdentity)('testing' isCompositeTransform isIdentity isMatrixTransform2x3 isMorphicTransform isPureTranslation)('transforming points' globalPointToLocal: globalPointsToLocal: invertBoundsRect: localPointToGlobal: localPointsToGlobal: transformPoint:)('transforming rects' globalBoundsToLocal: localBoundsToGlobal: sourceQuadFor:)!!DisplayText reorganize!('accessing' alignedTo: fontsUsed form lineGrid numberOfLines offset offset: string text text: textStyle textStyle:)('color' backgroundColor foregroundColor foregroundColor:backgroundColor:)('display box access' boundingBox computeBoundingBox)('displaying' displayOn:at:clippingBox:rule:fillColor: displayOn:transformation:clippingBox:align:with:rule:fillColor: displayOnPort:at:)('private' composeForm setText:textStyle:offset:)('*ST80-Support' asParagraph)!!DirectoryEntry reorganize!('access' at: containingDirectory creationDateAndTime creationTime fileSize fileSizeString fullName isDirectory modificationDateAndTime modificationTime name printOn:)('multilingual system' convertFromSystemName)('private-initialization' setDirectory: setDirectory:name:creationTime:modificationTime:fileSize:)('file operations' copyTo: delete)('services' services)!!DSCPostscriptCanvas reorganize!('drawing-general' fullDraw:)('initialization' writePSIdentifierRotated:)('morph drawing' endGStateForMorph: setupGStateForMorph:)('page geometry' defaultImageableArea defaultMargin defaultPageSize pageBBox pageOffset)!!BlockContext reorganize!('accessing' activeHome argumentCount caller closureHome contextForLocalVariables copyForSaving fixTemps hasInstVarRef hasMethodReturn home isBlock isExecutingBlock method methodReturnContext numArgs receiver reentrant tempAt: tempAt:put:)('controlling' doWhileFalse: doWhileTrue: repeat repeatWithGCIf: whileFalse whileFalse: whileTrue whileTrue:)('evaluating' bench durationToRun ifError: timeToRun value valueWithEnoughArguments: valueWithExit value: value:value: value:value:value: value:value:value:value: valueSupplyingAnswer: valueSupplyingAnswers: valueSuppressingAllMessages valueSuppressingMessages: valueSuppressingMessages:supplyingAnswers: valueWithArguments: valueWithPossibleArgs: valueWithPossibleArgument: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do: on:do:on:do: on:do:on:do:on:do: onDNU:do: valueUninterruptably)('initialize-release' home:startpc:nargs: privRefresh)('instruction decoding' blockReturnTop)('printing' decompile decompileString fullPrintOn: printOn: printOnStream:)('scheduling' asContext fork forkAndWait forkAt: forkAt:named: forkNamed: newProcess newProcessWith: valueAt:)('system simulation' pushArgs:from: stepToSendOrReturn)('private' aboutToReturn:through: cannotReturn: copyTo:blocks: endPC hideFromDebugger instVarAt:put: myEnv privHome: startpc valueError valueUnpreemptively)!!ContextPart reorganize!('accessing' at: at:put: basicAt: basicAt:put: basicSize client contextForLocalVariables home method methodNode methodNodeFormattedAndDecorated: methodReturnContext receiver size tempAt: tempAt:put:)('controlling' activateMethod:withArgs:receiver:class: blockCopy: closureCopy:copiedValues: hasSender: jump pop push: quickSend:to:with:super: restart resume resume: return return: return:to: runUntilErrorOrReturnFrom: send:to:with:super: terminate terminateTo: top)('debugger access' contextStack depthBelow: errorReportOn: longStack methodClass namedTempAt: namedTempAt:put: pc print:on: release releaseTo: selector sender shortStack singleRelease sourceCode stack stackOfSize: swapSender: tempNames tempsAndValues tempsAndValuesLimitedTo:indent:)('instruction decoding' doDup doPop jump: jump:if: methodReturnConstant: methodReturnReceiver methodReturnTop popIntoLiteralVariable: popIntoReceiverVariable: popIntoRemoteTemp:inVectorAt: popIntoTemporaryVariable: pushActiveContext pushClosureCopyNumCopiedValues:numArgs:blockSize: pushConstant: pushLiteralVariable: pushNewArrayOfSize: pushReceiver pushReceiverVariable: pushRemoteTemp:inVectorAt: pushTemporaryVariable: return:from: send:super:numArgs: storeIntoLiteralVariable: storeIntoReceiverVariable: storeIntoRemoteTemp:inVectorAt: storeIntoTemporaryVariable:)('objects from disk' storeDataOn:)('printing' printDetails: printOn:)('query' bottomContext copyStack copyTo: findContextSuchThat: findSecondToOldestSimilarSender findSimilarSender hasContext: isBottomContext isClosureContext isContext isDead secondFromBottom)('system simulation' completeCallee: quickStep runSimulated:contextAtEachStep: step stepToCallee stepToSendOrReturn)('private' activateReturn:value: cannotReturn:to: copyTo:blocks: cut: doPrimitive:method:receiver:args: insertSender: privSender: push:fromIndexable: stackPtr stackp: tryNamedPrimitiveIn:for:withArgs: tryPrimitiveFor:receiver:args:)('private-debugger' cachesStack)('private-exceptions' canHandleSignal: findNextHandlerContextStarting findNextUnwindContextUpTo: handleSignal: isHandlerContext isUnwindContext nextHandlerContext unwindTo:)('mirror primitives' objectClass:)!!Color reorganize!('access' alpha blue brightness green hue luminance red saturation)('conversions' asColor asColorref asHTMLColor asNontranslucentColor balancedPatternForDepth: bitPatternForDepth: closestPixelValue1 closestPixelValue2 closestPixelValue4 closestPixelValue8 dominantColor halfTonePattern1 halfTonePattern2 indexInMap: makeForegroundColor pixelValue32 pixelValueForDepth: pixelWordFor:filledWith: pixelWordForDepth: scaledPixelValue32)('copying' veryDeepCopyWith:)('equality' = diff: hash)('groups of shades' darkShades: lightShades: mix:shades: wheel:)('Morphic menu' addFillStyleMenuItems:hand:from: changeColorIn:event:)('other' colorForInsets display name raisedColor rgbTriplet)('printing' byteEncode: printOn: shortPrintString storeArrayOn: storeArrayValuesOn: storeOn:)('queries' isBitmapFill isBlack isColor isGradientFill isGray isOpaque isOrientedFill isSolidFill isTranslucent isTranslucentColor isTransparent)('transformations' * + - / adjustBrightness: adjustSaturation:brightness: alpha: alphaMixed:with: atLeastAsLuminentAs: atMostAsLuminentAs: blacker dansDarker darker duller lighter mixed:with: muchDarker muchLighter negated orColorUnlike: paler slightlyDarker slightlyLighter slightlyWhiter twiceDarker twiceLighter veryMuchLighter whiter)('*MorphicExtras-*morphic-Postscript Canvases' encodePostscriptOn:)('private' attemptToMutateError flushCache privateAlpha privateBlue privateGreen privateRGB privateRed setHue:saturation:brightness: setPrivateRed:green:blue: setRGB: setRed:green:blue: setRed:green:blue:range:)('html' printHtmlString)('*Morphic' iconOrThumbnailOfSize:)!!Collection reorganize!('accessing' anyOne atRandom capacity size)('adapting' adaptToCollection:andSend: adaptToComplex:andSend: adaptToNumber:andSend: adaptToPoint:andSend: adaptToString:andSend:)('adding' add: add:withOccurrences: addAll: addIfNotPresent:)('arithmetic' * + - / // \\ raisedTo:)('comparing' hash)('converting' asArray asBag asByteArray asCharacterSet asIdentitySet asOrderedCollection asSet asSortedArray asSortedCollection asSortedCollection: topologicallySortedUsing:)('copying' , copyWith: copyWithDependent: copyWithout: copyWithoutAll:)('enumerating' allSatisfy: anySatisfy: associationsDo: collect: collect:as: collect:into: collect:thenDo: collect:thenSelect: count: detect: detect:ifNone: detectMax: detectMin: detectSum: difference: do: do:displayingProgress: do:displayingProgress:every: do:separatedBy: do:without: findFirstInByteString:startingAt: groupBy:having: inject:into: intersection: noneSatisfy: reject: reject:thenDo: select: select:thenCollect: select:thenDo: union:)('filter streaming' contents flattenOnStream: write:)('math functions' abs arcCos arcSin arcTan average ceiling cos degreeCos degreeSin exp floor ln log max median min minMax negated range reciprocal roundTo: rounded sign sin sqrt squared sum tan truncated)('printing' asCommaString asCommaStringAnd asStringOn:delimiter: asStringOn:delimiter:last: printElementsOn: printNameOn: printOn: printOn:delimiter: printOn:delimiter:last: storeOn:)('removing' remove: remove:ifAbsent: removeAll removeAll: removeAllFoundIn: removeAllSuchThat:)('testing' contains: identityIncludes: ifEmpty: ifEmpty:ifNotEmpty: ifEmpty:ifNotEmptyDo: ifNotEmpty: ifNotEmpty:ifEmpty: ifNotEmptyDo: ifNotEmptyDo:ifEmpty: includes: includesAllOf: includesAnyOf: includesSubstringAnywhere: isCollection isEmpty isEmptyOrNil isSequenceable isZero notEmpty occurrencesOf:)('*packageinfo-base' gather:)('private' emptyCheck errorEmptyCollection errorNoMatch errorNotFound: errorNotKeyed fillFrom:with: toBraceStack:)!!CodeLoader reorganize!('accessing' baseURL baseURL: publicKey publicKey:)('initialize-release' initialize)('installing' installProject installSegment: installSegments installSourceFile: installSourceFiles readObject:)('loading' loadSegments: loadSourceFiles:)('private' createRequestFor:in: httpRequestClass)!!ClassOrganizer reorganize!('accessing' addCategory:before: changeFromCategorySpecs: classify:under:suppressIfDefault: removeCategory: removeElement: removeEmptyCategories renameCategory:toBe: setDefaultList: sortCategories)('private' notifyOfChangedCategoriesFrom:to: notifyOfChangedCategoryFrom:to: notifyOfChangedSelector:from:to: notifyOfChangedSelectorsOldDict:newDict:)('*Traits-Kernel' isTraitOrganizer traitComposition)!!ClassDescription class reorganize!('traits' allTraitsDo: newTraitComposition newTraitNamed:uses:category: newTraitTemplateIn: traitImpl traitImpl:)!!ChangeSet class reorganize!('class initialization' initialize)('current changeset' browseChangedMessages cleanUp: current currentChangeSetString newChanges: noChanges resetCurrentToNewUnnamedChangeSet)('defaults' defaultChangeSetDirectory defaultChangeSetDirectory: defaultName promptForDefaultChangeSetDirectoryIfNecessary uniqueNameLike:)('enumerating' allChangeSetNames allChangeSets allChangeSetsWithClass:selector: allChangeSets: basicNewChangeSet: changeSetsNamedSuchThat: changeSet:containsClass: deleteChangeSetsNumberedLowerThan: existingOrNewChangeSetNamed: gatherChangeSets highestNumberedChangeSet mostRecentChangeSetWithChangeForClass:selector: named: promoteToTop: removeChangeSetsNamedSuchThat: removeChangeSet: removeEmptyUnnamedChangeSets secondaryChangeSet)('file list services' fileReaderServicesForFile:suffix: serviceFileIntoNewChangeSet services)('fileIn/Out' doWeFileOut:given:cache: traitsOrder:)('instance creation' basicNewNamed: new)('scanning' getRecentLocatorWithPrompt: scanCategory: scanFile:category:class:meta:stamp: scanFile:from:to: scanVersionsOf:class:meta:category:selector:)('services' assuredChangeSetNamed: buildAggregateChangeSet countOfChangeSetsWithClass:andSelector: doesAnyChangeSetHaveClass:andSelector: fileIntoNewChangeSet: fileOutChangeSetsNamed: newChangeSet newChangeSet: newChangesFromStream:named:)('filein/out' superclassOrder:)!!Boolean class reorganize!('instance creation' initializedInstance new)!!BasicClassOrganizer class reorganize!('instance creation' class: class:defaultList:)('constants' ambiguous)!!BalloonBezierSimulation class reorganize!('initialization' initialize)!!Class reorganize!('initialize-release' deactivate declare: obsolete removeFromSystem removeFromSystemUnlogged removeFromSystem: sharing: superclass:methodDictionary:format: superclass:methodDict:format:name:organization:instVarNames:classPool:sharedPools: unload)('accessing' classPool classPoolFrom: classPool: name)('accessing class hierarchy' addSubclass: removeSubclass: subclasses subclassesDoGently: subclassesDo:)('testing' hasMethods isObsolete isSystemDefined officialClass)('class name' externalName nameForViewer rename:)('class variables' addClassVarName: allClassVarNames classVarNames ensureClassPool removeClassVarName:)('compiling' binding bindingOf: canFindWithoutEnvironment: compileAll compileAllFrom: possibleVariablesFor:continuedFrom:)('copying' copy)('fileIn/Out' fileOut fileOutAsHtml: fileOutInitializerOn: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing: fileOutPool:onFileStream: fileOutSharedPoolsOn: objectForDataStream: reformatAll removeFromChanges shouldFileOutPools shouldFileOutPool: storeDataOn: withClassVersion:)('instance variables' addInstVarName: removeInstVarName:)('organization' category category: environment environment:)('pool variables' addSharedPool: allSharedPools removeSharedPool: sharedPools sharedPools:)('subclass creation' newSubclass subclass:instanceVariableNames:classVariableNames:poolDictionaries:category: subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableByteSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: variableByteSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: variableSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: variableWordSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: variableWordSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category: weakSubclass:instanceVariableNames:classVariableNames:poolDictionaries:category: weakSubclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:category:)('private' setName: spaceUsed)('*monticello' asClassDefinition classDefinitions poolDictionaryNames)!!ClassDescription reorganize!('initialize-release' forgetDoIts obsolete superclass:methodDictionary:format: updateInstances:from:isMeta: updateInstancesFrom:)('accessing' classVersion version)('accessing class hierarchy' classesThatImplementAllOf: commentInventory printSubclassesOn:level: removeUninstantiatedSubclassesSilently subclasses subclassesDo:)('accessing comment' classCommentBlank comment comment: comment:stamp: hasComment)('accessing method dictionary' addAndClassifySelector:withMethod:inProtocol:notifying: addSelectorSilently:withMethod: addSelector:withMethod:notifying: allMethodCategoriesIntegratedThrough: allMethodsInCategory: induceMDFault isUniClass noteAddedSelector:meta: recoverFromMDFault recoverFromMDFaultWithTrace removeCategory: removeSelector:)('accessing parallel hierarchy' classSide instanceSide isClassSide isInstanceSide isMeta theMetaClass theNonMetaClass)('compiling' acceptsLoggingOfCompilation compile:classified: compile:classified:notifying: compile:classified:withStamp:notifying: compile:classified:withStamp:notifying:logSource: compile:notifying: compileSilently:classified: compileSilently:classified:notifying: doneCompiling instVarNamesAndOffsetsDo: moveInstVarNamed:to:after: noteCompilationOf:meta: reformatAll reformatMethodAt: wantsChangeSetLogging wantsRecompilationProgressReported)('copying' copyAllCategoriesUnobtrusivelyFrom: copyAllUnobtrusively:from:classified: copyCategoryUnobtrusively:from: copyUnobtrusivelyCategory:from:classified: copyUnobtrusively:from:classified: copy:from: copy:from:classified: copyAll:from: copyAll:from:classified: copyAllCategoriesFrom: copyCategory:from: copyCategory:from:classified: copyMethodDictionaryFrom:)('fileIn/Out' classComment: classComment:stamp: commentFollows commentStamp: commentStamp:prior: definition fileOutCategory: fileOutCategory:asHtml: fileOutCategory:on:moveSource:toFile: fileOutChangedMessages:on: fileOutChangedMessages:on:moveSource:toFile: fileOutChangedMessagesHistorically:on:moveSource:toFile: fileOutInitializerOn: fileOutMethod: fileOutMethod:asHtml: fileOutOn: fileOutOn:moveSource:toFile: fileOutOn:moveSource:toFile:initializing: fileOutOrganizationOn: methods methodsFor: methodsFor:priorSource:inFile: methodsFor:stamp: methodsFor:stamp:prior: moveChangesTo: moveChangesWithVersionsTo: printCategoryChunk:on: printCategoryChunk:on:priorMethod: printCategoryChunk:on:withStamp:priorMethod: printCategoryChunk:withStamp:on: printMethodChunk:withPreamble:on:moveSource:toFile: printMethodChunkHistorically:on:moveSource:toFile: putClassCommentToCondensedChangesFile:)('instance variables' addInstVarName: allInstVarNamesEverywhere checkForInstVarsOK: chooseClassVarName chooseInstVarAlphabeticallyThenDo: chooseInstVarThenDo: classThatDefinesClassVariable: classThatDefinesInstanceVariable: forceNewFrom: instVarIndexFor:ifAbsent: instVarNameForIndex: instVarNames removeInstVarName: renameInstVar:to: renameSilentlyInstVar:to: replaceSilently:to:)('organization' methodReferencesInCategory: notifyOfRecategorizedSelector:from:to: organization organization: reorganize whichCategoryIncludesSelector: zapOrganization)('printing' classVariablesString instanceVariablesString printOn: printOnStream: printWithClosureAnalysisOn: sharedPoolsString storeOn:)('private' errorCategoryName instVarMappingFrom: linesOfCode logMethodSource:forMethodWithNode:inCategory:withStamp:notifying: newInstanceFrom:variable:size:map: setInstVarNames:)('*system-support' allUnreferencedClassVariables)('*Traits-NanoKernel' allTraits assembleTraitMethodsFrom: basicRemoveSelector: classify:under:from:trait: hasTraitComposition includesLocalSelector: includesTrait: installTraitMethodDict: installTraitsFrom: isAliasSelector: isLocalAliasSelector: isLocalMethod: localSelectors recompile:from: replaceSelector:withAlias:in: resolveTraitsConflict:from:to: setTraitComposition: setTraitCompositionFrom: traitAddSelector:withMethod: traitComposition traitComposition: traitCompositionString traitRemoveSelector: traits updateTraits updateTraitsFrom: users uses:)!!ChangeSet reorganize!('accessing' author classRemoves editPostscript hasPostscript methodChanges methodInfoFromRemoval: name name: postscriptHasDependents printOn: printOnStream: removePostscript structures superclasses)('change logging' addClass: changeClass:from: event: noteNewMethod:forClass:selector:priorMethod: removeSelector:class:priorMethod:lastMethodInfo: renameClass:from:to:)('class changes' changedClassNames changedClasses classChangeAt: commentClass: containsClass: fatDefForClass: noteClassForgotten: noteClassStructure: noteRemovalOf: reorganizeClass: trimHistory)('converting' convertApril2000:using: convertToCurrentVersion:refStream:)('fileIn/Out' askAddedInstVars: askRemovedInstVars: askRenames:addTo:using: assurePostscriptExists assurePreambleExists buildMessageForMailOutWithUser: checkForAlienAuthorship checkForAnyAlienAuthorship checkForConversionMethods checkForSlips checkForUnclassifiedMethods checkForUncommentedClasses checkForUncommentedMethods checkForUnsentMessages chooseSubjectPrefixForEmail defaultChangeSetDirectory fileOut fileOutChangesFor:on: fileOutCompressed fileOutOn: fileOutPSFor:on: fileOutPostscriptOn: fileOutPreambleOn: lookForSlips mailOut objectForDataStream: postscript postscriptString postscriptString: postscript: preamble preambleString preambleString: preambleTemplate preamble: setPreambleToSay: summaryString summaryStringDelta: verboseFileOut)('initialize-release' beIsolationSetFor: clear initialize isMoribund veryDeepCopyWith: wither zapHistory)('isolation layers' invoke isolatedProject isolationSet: revoke uninstall)('method changes' adoptSelector:forClass: atSelector:class:put: changedMessageList changedMessageListAugmented hasAnyChangeForSelector: messageListForChangesWhich:ifNone: methodChangesAtClass: removeSelectorChanges:class: selectorsInClass:)('moving changes' absorbClass:from: absorbMethod:class:from: absorbStructureOfClass:from: assimilateAllChangesFoundIn: editPreamble expungeEmptyClassChangeEntries expungeUniclasses forgetAllChangesFoundIn: forgetChangesForClass:in: hasPreamble methodsWithAnyInitialsOtherThan: methodsWithInitialsOtherThan: methodsWithoutComments removeClassAndMetaClassChanges: removeClassChanges: removePreamble)('testing' belongsToAProject containsMethodAtPosition: correspondingProject isEmpty methodsWithoutClassifications okayToRemove okayToRemoveInforming: projectsBelongedTo)('private' addCoherency: atClass:add: atClass:includes: atSelector:class: changed:with: changeRecorderFor: fileOutClassDefinition:on: oldNameFor:)!!CP1253TextConverter reorganize!('friend' leadingChar)!!CP1250TextConverter reorganize!('friend' leadingChar)!!Boolean reorganize!('controlling' and: and:and: and:and:and: and:and:and:and: ifFalse: ifFalse:ifTrue: ifTrue: ifTrue:ifFalse: or: or:or: or:or:or: or:or:or:or: or:or:or:or:or:)('copying' clone deepCopy shallowCopy veryDeepCopyWith:)('logical operations' & ==> eqv: not |)('printing' isLiteral storeOn:)!!BlockClosure reorganize!('accessing' argumentCount copiedValueAt: home isBlock method numArgs numCopiedValues outerContext receiver startpc)('controlling' doWhileFalse: doWhileTrue: repeat repeatWithGCIf: whileFalse whileFalse: whileNil: whileNotNil: whileTrue whileTrue:)('evaluating' bench cull: cull:cull: cull:cull:cull: cull:cull:cull:cull: durationToRun ifError: simulateValueWithArguments:caller: timeToRun timeToRunWithoutGC value value: value:value: value:value:value: value:value:value:value: valueAt: valueNoContextSwitch valueNoContextSwitch: valueSupplyingAnswer: valueSupplyingAnswers: valueSuppressingAllMessages valueSuppressingMessages: valueSuppressingMessages:supplyingAnswers: valueWithArguments: valueWithPossibleArgs: valueWithPossibleArgument: valueWithin:onTimeout:)('exceptions' assert ensure: ifCurtailed: on:do: on:do:on:do: on:do:on:do:on:do: onDNU:do: valueUninterruptably)('printing' decompile fullPrintOn: printOn:)('scheduling' asContext fork forkAndWait forkAt: forkAt:named: forkNamed: newProcess)('private' asContextWithSender: copyForSaving fixTemps reentrant valueUnpreemptively)('testing' hasMethodReturn isClosure isDead)('error handing' numArgsError:)('initialize-release' outerContext:startpc:numArgs:copiedValues:)('events-support' asMinimalRepresentation isValid)('*Tools' timeProfile)('debugger access' sender)!!Behavior reorganize!('initialize-release' cleanUp cleanUp: emptyMethodDictionary forgetDoIts initialize nonObsoleteClass obsolete superclass:methodDictionary:format:)('accessing' classDepth environment format methodDict name subclassDefinerClass typeOfClass)('accessing class hierarchy' allSubclasses allSubclassesWithLevelDo:startingLevel: allSuperclasses subclasses superclass superclass: withAllSubclasses withAllSuperclasses)('accessing instances and variables' allClassVarNames allInstances allInstVarNames allowsSubInstVars allSharedPools allSubInstances classVarNames inspectAllInstances inspectSubInstances instanceCount instVarNames sharedPools someInstance subclassInstVarNames)('accessing method dictionary' allSelectors allSelectorsBelow: changeRecordsAt: commentsAt: commentsIn: compiledMethodAt: compiledMethodAt:ifAbsent: compress compressedSourceCodeAt: firstCommentAt: firstPrecodeCommentFor: formalHeaderPartsFor: formalParametersAt: lookupSelector: methodDictionary methodDictionary: methodDict: methodHeaderFor: methodsDo: nextQuotePosIn:startingFrom: precodeCommentOrInheritedCommentFor: rootStubInImageSegment: selectors selectorsAndMethodsDo: selectorsDo: selectorsWithArgs: sourceCodeAt: sourceCodeAt:ifAbsent: sourceMethodAt: sourceMethodAt:ifAbsent: standardMethodHeaderFor: supermostPrecodeCommentFor: ultimateSourceCodeAt:ifAbsent: zapAllMethods >>)('testing' canZapMethodDictionary instSize instSpec isBehavior isBits isBytes isFixed isMeta isObsolete isPointers isVariable isWeak isWords shouldNotBeRedefined)('testing class hierarchy' includesBehavior: inheritsFrom: kindOfSubclass)('testing method dictionary' bindingOf: canUnderstand: classBindingOf: fullyImplementsVocabulary: hasMethods includesLocalSelector: includesSelector: thoroughWhichSelectorsReferTo:special:byte: whichClassIncludesSelector: whichSelectorsAccess: whichSelectorsReferTo: whichSelectorsReferTo:special:byte: whichSelectorsStoreInto:)('comparing' hash)('adding/removing methods' addSelectorSilently:withMethod: addSelector:withMethod: addSelector:withMethod:notifying: basicAddSelector:withMethod: basicRemoveSelector: localSelectors removeSelectorSilently: removeSelector:)('compiling' binding compileAll compileAllFrom: compilerClass compile: compile:classified:notifying:trailer:ifFail: compile:notifying: decompilerClass decompile: defaultMethodTrailer evaluatorClass instVarNamesAndOffsetsDo: parserClass recompileChanges recompileNonResidentMethod:atSelector:from: recompile: recompile:from: sourceCodeTemplate variablesAndOffsetsDo:)('enumerating' allInstancesDo: allInstancesEverywhereDo: allSubclassesDoGently: allSubclassesDo: allSubInstancesDo: allSuperclassesDo: selectSubclasses: selectSuperclasses: withAllSubclassesDo: withAllSuperAndSubclassesDoGently: withAllSuperclassesDo:)('copying' copy copyOfMethodDictionary deepCopy)('instance creation' basicNew basicNew: initializedInstance new new:)('obsolete subclasses' addObsoleteSubclass: obsoleteSubclasses removeAllObsoleteSubclasses removeObsoleteSubclass:)('printing' defaultNameStemForInstances formatterClass literalScannedAs:notifying: longPrintOn: prettyPrinterClass printHierarchy printOnStream: printOn: printWithClosureAnalysisOn: storeLiteral:on:)('queries' whichClassDefinesClassVar: whichClassDefinesInstVar: whichSelectorsAssign: whichSelectorsRead: whichSuperclassSatisfies:)('system startup' shutDown shutDown: startUp startUpFrom: startUp:)('user interface' allLocalCallsOn: allUnreferencedInstanceVariables crossReference unreferencedInstanceVariables withAllSubAndSuperclassesDo:)('private' becomeCompact becomeCompactSimplyAt: becomeUncompact flushCache indexIfCompact setFormat: spaceUsed)('*system-support' allCallsOn allCallsOn: allUnsentMessages)('traits' allTraits hasTraitComposition traitComposition traitCompositionString)('*ShoutCore-Parsing' shoutParserClass)!!Association reorganize!('accessing' key:value: value value:)('comparing' = hash)('filter streaming' byteEncode:)('objects from disk' objectForDataStream:)('printing' printOn: propertyListOn: storeOn:)('testing' isSpecialWriteBinding isVariableBinding)!!AppRegistry reorganize!('as yet unclassified')!!AbstractFont reorganize!('accessing' ascent ascentOf: baseKern basicAscentOf: basicDescentOf: characterToGlyphMap derivativeFonts descent descentOf: emphasisString emphasisStringFor: familyName height isRegular lineGrid pixelSize pointSize textStyle textStyleName xTable)('caching' releaseCachedState)('displaying' displayStrikeoutOn:from:to: displayString:on:from:to:at:kern: displayString:on:from:to:at:kern:baselineY: displayUnderlineOn:from:to: installOn:foregroundColor:backgroundColor:)('measuring' approxWidthOfText: linearWidthOf: widthOf: widthOfString: widthOfString:from:to: widthOfStringOrText:)('notifications' pixelsPerInchChanged)('testing' hasDistinctGlyphsForAll: hasGlyphsForAll: isFontSet isSubPixelPositioned isSymbolFont isTTCFont)('kerning' kerningLeft:right: widthAndKernedWidthOfLeft:right:into:)!!Object reorganize!('accessing' addInstanceVarNamed:withValue: at: at:modify: at:put: basicAddInstanceVarNamed:withValue: basicAt: basicAt:put: basicSize bindWithTemp: enclosedSetElement ifNil:ifNotNilDo: ifNotNilDo: ifNotNilDo:ifNil: in: presenter readFromString: size yourself)('associating' ->)('binding' bindingOf:)('casing' caseOf: caseOf:otherwise:)('class membership' class inheritsFromAnyIn: isKindOf: isKindOf:orOf: isMemberOf: respondsTo: xxxClass)('comparing' closeTo: hash hashMappedBy: identityHashMappedBy: identityHashPrintString literalEqual: = ~=)('converting' adaptToFloat:andCompare: adaptToFloat:andSend: adaptToFraction:andCompare: adaptToFraction:andSend: adaptToInteger:andCompare: adaptToInteger:andSend: adaptToScaledDecimal:andCompare: asActionSequence asActionSequenceTrappingErrors asDraggableMorph asOrderedCollection asSetElement asString asStringOrText as: complexContents mustBeBoolean mustBeBooleanIn: printDirectlyToDisplay withoutListWrapper)('copying' clone copy copyAddedStateFrom: copyFrom: copySameFrom: copyTwoLevel deepCopy initialDeepCopierSize postCopy shallowCopy veryDeepCopy veryDeepCopySibling veryDeepCopyUsing: veryDeepCopyWith: veryDeepFixupWith: veryDeepInner:)('creation' asMorph asStringMorph asTextMorph openAsMorph)('debugging' haltIf: needsWork)('debugging-haltOnce' checkHaltCountExpired clearHaltOnce decrementAndCheckHaltCount decrementHaltCount doExpiredHaltCount doExpiredHaltCount: doExpiredInspectCount haltOnCount: haltOnce haltOnceEnabled haltOnce: halt:onCount: hasHaltCount inspectOnCount: inspectOnce inspectUntilCount: removeHaltCount setHaltCountTo: setHaltOnce toggleHaltOnce)('dependents access' addDependent: breakDependents canDiscardEdits dependents evaluate:wheneverChangeIn: hasUnacceptedEdits myDependents myDependents: release removeDependent:)('drag and drop' acceptDroppingMorph:event:inMorph: dragAnimationFor:transferMorph: dragPassengerFor:inMorph: dragTransferType dragTransferTypeForMorph: wantsDroppedMorph:event:inMorph:)('error handling' assert: assert:descriptionBlock: assert:description: backwardCompatibilityOnly: caseError confirm: confirm:orCancel: deprecated: deprecated:block: doesNotUnderstand: dpsTrace: dpsTrace:levels: dpsTrace:levels:withContext: dpsTraceUntilRoot: error error: explicitRequirement halt halt: handles: notifyWithLabel: notify: notify:at: primitiveFailed requirement shouldBeImplemented shouldNotImplement subclassResponsibility traitConflict)('evaluating' ancestors othersClassList value valueWithArguments:)('events-accessing' actionForEvent: actionForEvent:ifAbsent: actionMap actionSequenceForEvent: actionsDo: createActionMap hasActionForEvent: setActionSequence:forEvent: updateableActionMap)('events-registering' when:evaluate: when:send:to: when:send:to:withArguments: when:send:to:with:)('events-removing' releaseActionMap removeActionsForEvent: removeActionsSatisfying: removeActionsSatisfying:forEvent: removeActionsWithReceiver: removeActionsWithReceiver:forEvent: removeAction:forEvent:)('events-triggering' triggerEvent: triggerEvent:ifNotHandled: triggerEvent:withArguments: triggerEvent:withArguments:ifNotHandled: triggerEvent:with: triggerEvent:with:ifNotHandled:)('filter streaming' byteEncode: drawOnCanvas: elementSeparator encodePostscriptOn: flattenOnStream: fullDrawPostscriptOn: printOnStream: putOn: storeOnStream: writeOnFilterStream:)('finalization' actAsExecutor executor finalizationRegistry finalize retryWithGC:until: toFinalizeSend:to:with:)('flagging' isThisEverCalled isThisEverCalled: logEntry logExecution logExit)('graph model' addModelYellowButtonMenuItemsTo:forMorph:hand: hasModelYellowButtonMenuItems)('locales' localeChanged)('macpal' codeStrippedOut: contentsChanged currentEvent currentHand currentWorld flash instanceVariableValues isUniversalTiles objectRepresented refusesToAcceptCode scriptPerformer slotInfo)('message handling' executeMethod: perform: perform:orSendTo: perform:withArguments: perform:withArguments:inSuperclass: perform:withEnoughArguments: perform:with: perform:with:with: perform:with:with:with: withArgs:executeMethod: with:executeMethod: with:with:executeMethod: with:with:with:executeMethod: with:with:with:with:executeMethod:)('objects from disk' comeFullyUpOnReload: convertToCurrentVersion:refStream: fileOutCompressed fixUponLoad:seg: indexIfCompact objectForDataStream: readDataFrom:size: saveOnFile saveOnFileNamed: storeDataOn:)('parts bin' descriptionForPartsBin)('printing' fullPrintString isLiteral longPrintOn: longPrintOn:limitedTo:indent: longPrintString longPrintStringLimitedTo: nominallyUnsent: printOn: printString printStringLimitedTo: printWithClosureAnalysisOn: propertyList reportableSize storeOn: storeString stringForReadout stringRepresentation)('scripting' adaptedToWorld: defaultFloatPrecisionFor: evaluateUnloggedForSelf: methodInterfacesForCategory:inVocabulary:limitClass: methodInterfacesForInstanceVariablesCategoryIn: methodInterfacesForScriptsCategoryIn: selfWrittenAsIll selfWrittenAsIm selfWrittenAsMe selfWrittenAsMy selfWrittenAsThis)('system primitives' asOop becomeForward: becomeForward:copyHash: className creationStamp instVarAt: instVarAt:put: instVarNamed: instVarNamed:put: oopString primitiveChangeClassTo: rootStubInImageSegment: someObject)('testing' beViewed belongsToUniClass costumes haltIfNil hasLiteralSuchThat: hasLiteralThorough: isArray isBehavior isBlock isCharacter isClosure isCollection isColor isColorForm isCompiledMethod isComplex isContext isDictionary isFloat isForm isFraction isHeap isInteger isInterval isMessageSend isMethodContext isMethodProperties isMorph isMorphicEvent isMorphicModel isNumber isPlayer isPoint isPseudoContext isRectangle isScriptEditorMorph isSketchMorph isStream isString isSymbol isSystemWindow isText isTextView isTrait isTransparent isVariableBinding isWebBrowser isWindowForModel: knownName name nameForViewer notNil renameInternal: renameTo: showDiffs stepAt:in: stepIn: stepTime stepTimeIn: vocabularyDemanded wantsDiffFeedback wantsSteps wantsStepsIn:)('translation support' inline: var:declareC:)('undo' capturedState commandHistory purgeAllCommands redoFromCapturedState: refineRedoTarget:selector:arguments:in: refineUndoTarget:selector:arguments:in: rememberCommand: rememberUndoableAction:named: undoFromCapturedState:)('updating' changed changed: changed:with: handledListVerification noteSelectionIndex:for: okToChange updateListsAndCodeIn: update: update:with: windowIsClosing)('user interface' addModelItemsToWindowMenu: addModelMenuItemsTo:forMorph:hand: asExplorerString defaultBackgroundColor defaultLabelForInspector eToyStreamedRepresentationNotifying: explore fullScreenSize inform: initialExtent inspectWithLabel: launchPartVia: launchPartVia:label: launchTileToRefer modelSleep modelWakeUp modelWakeUpIn: mouseUpBalk: notYetImplemented windowActiveOnFirstClick windowReqNewLabel:)('*monticello' isConflict)('*system-support' systemNavigation)('*Tools-Explorer' exploreAndYourself exploreWithLabel:)('*tools-browser' browse browseHierarchy)('private' errorImproperStore errorNonIntegerIndex errorNotIndexable errorSubscriptBounds: primitiveError: species storeAt:inTempFrame:)('*Morphic-NewCurve-testing''' isNonZero)('events' actionsWithReceiver:forEvent: renameActionsWithReceiver:forEvent:toEvent:)('inspecting' basicInspect inspect inspectorClass)('thumbnail' iconOrThumbnailOfSize:)('breakpoint' break)('*Morphic-Explorer' hasContentsInExplorer)('futures' future future: futureDo:at:args: futureSend:at:args:)('*Tools-MessageSets' browseAllCallsOn: browseAllImplementorsOf:)!